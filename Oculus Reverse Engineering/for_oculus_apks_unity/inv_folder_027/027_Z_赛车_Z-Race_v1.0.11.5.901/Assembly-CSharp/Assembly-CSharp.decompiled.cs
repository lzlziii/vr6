using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Dynamic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Timers;
using AkilliMum.SRP.Mirror;
using BrainFailProductions.PolyFew.AsImpL;
using BrainFailProductions.PolyFewRuntime;
using DG.Tweening.Core;
using ExitGames.Client.Photon;
using FMOD.Studio;
using FMODUnity;
using GameplayIngredients;
using GameplayIngredients.Actions;
using Il2CppDummyDll;
using Microsoft.CodeAnalysis;
using Mirror;
using Mirror.OculusP2P;
using MySql.Data.MySqlClient;
using Oculus.Platform;
using Oculus.Platform.Models;
using PartyCSharpSDK;
using PartyCSharpSDK.Interop;
using PartyXBLCSharpSDK;
using PartyXBLCSharpSDK.Interop;
using Photon.Chat;
using Photon.Compression;
using Photon.Compression.Internal;
using Photon.Pun;
using Photon.Pun.Simple;
using Photon.Pun.Simple.ContactGroups;
using Photon.Pun.Simple.Internal;
using Photon.Realtime;
using Photon.Utilities;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using Photon.Voice.Unity.UtilityScripts;
using PlayFab;
using PlayFab.AuthenticationModels;
using PlayFab.ClientModels;
using PlayFab.Party;
using PlayFab.Party._Internal;
using SonicBloom.Koreo;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Localization;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.VFX;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UnityMeshSimplifier;
using YoutubePlayer;
using emotitron;
using emotitron.Compression;
using emotitron.Utilities;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EC78", Offset = "0xB1EC78")]
internal sealed class <>f__AnonymousType0<<IsAfterGame>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xB22124", Offset = "0xB22124")]
	private readonly <IsAfterGame>j__TPar <IsAfterGame>i__Field;

	[Token(Token = "0x17000001")]
	public <IsAfterGame>j__TPar IsAfterGame
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<IsAfterGame>j__TPar)null;
		}
	}

	[Token(Token = "0x6000002")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<IsAfterGame>j__TPar IsAfterGame)
	{
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EC88", Offset = "0xB1EC88")]
internal sealed class <>f__AnonymousType1<<ArrayNicknames>j__TPar>
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xB22138", Offset = "0xB22138")]
	private readonly <ArrayNicknames>j__TPar <ArrayNicknames>i__Field;

	[Token(Token = "0x17000002")]
	public <ArrayNicknames>j__TPar ArrayNicknames
	{
		[Token(Token = "0x6000006")]
		get
		{
			return (<ArrayNicknames>j__TPar)null;
		}
	}

	[Token(Token = "0x6000007")]
	[DebuggerHidden]
	public <>f__AnonymousType1(<ArrayNicknames>j__TPar ArrayNicknames)
	{
	}

	[Token(Token = "0x6000008")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000009")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600000A")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EC98", Offset = "0xB1EC98")]
internal sealed class <>f__AnonymousType2<<ArrayNicknamesData>j__TPar>
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xB2214C", Offset = "0xB2214C")]
	private readonly <ArrayNicknamesData>j__TPar <ArrayNicknamesData>i__Field;

	[Token(Token = "0x17000003")]
	public <ArrayNicknamesData>j__TPar ArrayNicknamesData
	{
		[Token(Token = "0x600000B")]
		get
		{
			return (<ArrayNicknamesData>j__TPar)null;
		}
	}

	[Token(Token = "0x600000C")]
	[DebuggerHidden]
	public <>f__AnonymousType2(<ArrayNicknamesData>j__TPar ArrayNicknamesData)
	{
	}

	[Token(Token = "0x600000D")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000E")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600000F")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1ECA8", Offset = "0xB1ECA8")]
internal sealed class <>f__AnonymousType3<<Time>j__TPar, <CarID>j__TPar, <PosLastTime>j__TPar, <SceneName>j__TPar>
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xB22160", Offset = "0xB22160")]
	private readonly <Time>j__TPar <Time>i__Field;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xB22174", Offset = "0xB22174")]
	private readonly <CarID>j__TPar <CarID>i__Field;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xB22188", Offset = "0xB22188")]
	private readonly <PosLastTime>j__TPar <PosLastTime>i__Field;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xB2219C", Offset = "0xB2219C")]
	private readonly <SceneName>j__TPar <SceneName>i__Field;

	[Token(Token = "0x17000004")]
	public <Time>j__TPar Time
	{
		[Token(Token = "0x6000010")]
		get
		{
			return (<Time>j__TPar)null;
		}
	}

	[Token(Token = "0x17000005")]
	public <CarID>j__TPar CarID
	{
		[Token(Token = "0x6000011")]
		get
		{
			return (<CarID>j__TPar)null;
		}
	}

	[Token(Token = "0x17000006")]
	public <PosLastTime>j__TPar PosLastTime
	{
		[Token(Token = "0x6000012")]
		get
		{
			return (<PosLastTime>j__TPar)null;
		}
	}

	[Token(Token = "0x17000007")]
	public <SceneName>j__TPar SceneName
	{
		[Token(Token = "0x6000013")]
		get
		{
			return (<SceneName>j__TPar)null;
		}
	}

	[Token(Token = "0x6000014")]
	[DebuggerHidden]
	public <>f__AnonymousType3(<Time>j__TPar Time, <CarID>j__TPar CarID, <PosLastTime>j__TPar PosLastTime, <SceneName>j__TPar SceneName)
	{
	}

	[Token(Token = "0x6000015")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000016")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000017")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000006")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1ECB8", Offset = "0xB1ECB8")]
internal sealed class <>f__AnonymousType4<<TeamID>j__TPar>
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xB221B0", Offset = "0xB221B0")]
	private readonly <TeamID>j__TPar <TeamID>i__Field;

	[Token(Token = "0x17000008")]
	public <TeamID>j__TPar TeamID
	{
		[Token(Token = "0x6000018")]
		get
		{
			return (<TeamID>j__TPar)null;
		}
	}

	[Token(Token = "0x6000019")]
	[DebuggerHidden]
	public <>f__AnonymousType4(<TeamID>j__TPar TeamID)
	{
	}

	[Token(Token = "0x600001A")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600001B")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600001C")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000007")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1ECC8", Offset = "0xB1ECC8")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x600001D")]
		[Address(RVA = "0x286B5D0", Offset = "0x286B5D0", VA = "0x286B5D0")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000008")]
	[Microsoft.CodeAnalysis.Embedded]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1ED00", Offset = "0xB1ED00")]
	internal sealed class IsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0x23D4898", Offset = "0x23D4898", VA = "0x23D4898")]
		public IsReadOnlyAttribute()
		{
		}
	}
}
[Token(Token = "0x2000009")]
public class EnemyPhysAnchor : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody hand;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speedLimit;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float angleLimit;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x286D0D4", Offset = "0x286D0D4", VA = "0x286D0D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x286D30C", Offset = "0x286D30C", VA = "0x286D30C")]
	public EnemyPhysAnchor()
	{
	}
}
[Token(Token = "0x200000A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1ED38", Offset = "0xB1ED38")]
public class Ball : NetworkBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB221C4", Offset = "0xB221C4")]
	public float force;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Rigidbody rigidbody3D;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x22CAEF4", Offset = "0x22CAEF4", VA = "0x22CAEF4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x22CAFB0", Offset = "0x22CAFB0", VA = "0x22CAFB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x22CAFEC", Offset = "0x22CAFEC", VA = "0x22CAFEC")]
	[ServerCallback]
	private void OnCollisionStay(Collision other)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x22CB278", Offset = "0x22CB278", VA = "0x22CB278")]
	public void SetZero()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x22CB2CC", Offset = "0x22CB2CC", VA = "0x22CB2CC")]
	public Ball()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x22CB2DC", Offset = "0x22CB2DC", VA = "0x22CB2DC")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x200000B")]
public class BallManager : MonoBehaviour
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BallManager instance;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text blueText;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text redText;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int pointRed;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int pointBlue;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ball;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform ballSpawn;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Ball ballScript;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x22CB2E0", Offset = "0x22CB2E0", VA = "0x22CB2E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x22CB410", Offset = "0x22CB410", VA = "0x22CB410")]
	public void Goal(bool red)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x22CB578", Offset = "0x22CB578", VA = "0x22CB578")]
	public void GoalInternal(bool red)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x22CB5D4", Offset = "0x22CB5D4", VA = "0x22CB5D4")]
	public BallManager()
	{
	}
}
[Token(Token = "0x200000C")]
public class ZTagManager : NetworkBehaviour
{
	[Token(Token = "0x200000D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EDA0", Offset = "0xB1EDA0")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ZTagUser> insList;

		[Token(Token = "0x6000040")]
		[Address(RVA = "0x25B35C0", Offset = "0x25B35C0", VA = "0x25B35C0")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0x25B35C8", Offset = "0x25B35C8", VA = "0x25B35C8")]
		internal bool <RestartGame>b__1(ZTagUser x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x25B363C", Offset = "0x25B363C", VA = "0x25B363C")]
		internal bool <RestartGame>b__2(ZTagUser x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000043")]
		[Address(RVA = "0x25B36B4", Offset = "0x25B36B4", VA = "0x25B36B4")]
		internal bool <RestartGame>b__3(ZTagUser x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200000E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EDB0", Offset = "0xB1EDB0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<ZTagUser> <>9__17_0;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<ZTagUser, bool> <>9__19_2;

		[Token(Token = "0x6000045")]
		[Address(RVA = "0x25B3564", Offset = "0x25B3564", VA = "0x25B3564")]
		public <>c()
		{
		}

		[Token(Token = "0x6000046")]
		[Address(RVA = "0x25B356C", Offset = "0x25B356C", VA = "0x25B356C")]
		internal int <RestartGame>b__17_0(ZTagUser data1, ZTagUser data2)
		{
			return default(int);
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0x25B35A4", Offset = "0x25B35A4", VA = "0x25B35A4")]
		internal bool <OnTag>b__19_2(ZTagUser x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200000F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EDC0", Offset = "0xB1EDC0")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint ownNetID;

		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint hitNetID;

		[Token(Token = "0x6000048")]
		[Address(RVA = "0x25B372C", Offset = "0x25B372C", VA = "0x25B372C")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6000049")]
		[Address(RVA = "0x25B3734", Offset = "0x25B3734", VA = "0x25B3734")]
		internal bool <OnTag>b__0(ZTagUser x)
		{
			return default(bool);
		}

		[Token(Token = "0x600004A")]
		[Address(RVA = "0x25B375C", Offset = "0x25B375C", VA = "0x25B375C")]
		internal bool <OnTag>b__1(ZTagUser x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000010")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EDD0", Offset = "0xB1EDD0")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint hitNetID;

		[Token(Token = "0x600004B")]
		[Address(RVA = "0x25B3784", Offset = "0x25B3784", VA = "0x25B3784")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x600004C")]
		[Address(RVA = "0x25B378C", Offset = "0x25B378C", VA = "0x25B378C")]
		internal bool <RpcOnTag>b__0(NetworkPlayerControllerZRace x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000011")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EDE0", Offset = "0xB1EDE0")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint inNetID;

		[Token(Token = "0x600004D")]
		[Address(RVA = "0x25B37C8", Offset = "0x25B37C8", VA = "0x25B37C8")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x600004E")]
		[Address(RVA = "0x25B37D0", Offset = "0x25B37D0", VA = "0x25B37D0")]
		internal bool <RpcChangeColorShipNickname>b__0(NetworkPlayerControllerZRace x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB221FC", Offset = "0xB221FC")]
	public Transform trContainerUsers;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22234", Offset = "0xB22234")]
	public List<ZTagUserUI> listZTagUsersUI;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2226C", Offset = "0xB2226C")]
	public bool isInitialized;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float timer;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB222A4", Offset = "0xB222A4")]
	public float secondsForUpdateTable;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB222DC", Offset = "0xB222DC")]
	public float secondForAddingPoints;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public byte pointsForTag;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22314", Offset = "0xB22314")]
	public Color seekerColor;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color hidingColor;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ZTagManager instance;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SyncList<ZTagUser> listZTagUsers;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1FE7B30", Offset = "0x1FE7B30", VA = "0x1FE7B30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1FE7CB0", Offset = "0x1FE7CB0", VA = "0x1FE7CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1FE80B8", Offset = "0x1FE80B8", VA = "0x1FE80B8")]
	[ServerCallback]
	public void Initialize(List<NetworkPlayerControllerZRace> inListNetworkPlayerControllerZRaces)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1FE8288", Offset = "0x1FE8288", VA = "0x1FE8288")]
	public void InitializeInternal()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1FE845C", Offset = "0x1FE845C", VA = "0x1FE845C")]
	private void OnListZTagUsersUpdated(SyncList<ZTagUser>.Operation op, int index, ZTagUser oldItem, ZTagUser newItem)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1FE8548", Offset = "0x1FE8548", VA = "0x1FE8548")]
	[ServerCallback]
	public void Update()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1FE8904", Offset = "0x1FE8904", VA = "0x1FE8904")]
	[Server]
	public void RestartGame(bool initial)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1FE87BC", Offset = "0x1FE87BC", VA = "0x1FE87BC")]
	[ClientRpc]
	public void RpcUpdateTable(bool all)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1FE9124", Offset = "0x1FE9124", VA = "0x1FE9124")]
	[Server]
	public void OnTag(uint ownNetID, uint hitNetID)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1FE95CC", Offset = "0x1FE95CC", VA = "0x1FE95CC")]
	[Server]
	public void RestartInvoke()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1FE9484", Offset = "0x1FE9484", VA = "0x1FE9484")]
	[ClientRpc]
	public void RpcOnTag(uint hitNetID)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1FE8FA0", Offset = "0x1FE8FA0", VA = "0x1FE8FA0")]
	[ClientRpc]
	public void RpcChangeColorShipNickname(uint inNetID, Color inColor)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1FE96D8", Offset = "0x1FE96D8", VA = "0x1FE96D8")]
	public ZTagManager()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1FE97D4", Offset = "0x1FE97D4", VA = "0x1FE97D4")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1FE97D8", Offset = "0x1FE97D8", VA = "0x1FE97D8")]
	protected void UserCode_RpcUpdateTable(bool all)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1FE9B1C", Offset = "0x1FE9B1C", VA = "0x1FE9B1C")]
	protected static void InvokeUserCode_RpcUpdateTable(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1FE9C78", Offset = "0x1FE9C78", VA = "0x1FE9C78")]
	protected void UserCode_RpcOnTag(uint hitNetID)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1FE9E30", Offset = "0x1FE9E30", VA = "0x1FE9E30")]
	protected static void InvokeUserCode_RpcOnTag(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1FE9F90", Offset = "0x1FE9F90", VA = "0x1FE9F90")]
	protected void UserCode_RpcChangeColorShipNickname(uint inNetID, Color inColor)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1FEA174", Offset = "0x1FEA174", VA = "0x1FEA174")]
	protected static void InvokeUserCode_RpcChangeColorShipNickname(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1FEA2DC", Offset = "0x1FEA2DC", VA = "0x1FEA2DC")]
	static ZTagManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class ZTagUser
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint netID;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int points;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isSeeker;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public ushort countBronzeCups;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ushort countSilverCups;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public ushort countGoldCups;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1FEA4EC", Offset = "0x1FEA4EC", VA = "0x1FEA4EC")]
	public ZTagUser()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1FE8250", Offset = "0x1FE8250", VA = "0x1FE8250")]
	public ZTagUser(uint inNetID)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1FE875C", Offset = "0x1FE875C", VA = "0x1FE875C")]
	public ZTagUser(ZTagUser zTagUser)
	{
	}
}
[Serializable]
[Token(Token = "0x2000013")]
public class ZTagUserUI
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject parent;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textCountGoldCups;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text textCountSilverCups;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textCountBronzeCups;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text textNickname;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text textCountPoints;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1FE8008", Offset = "0x1FE8008", VA = "0x1FE8008")]
	public ZTagUserUI(Text textCountGoldCups, Text textCountSilverCups, Text textCountBronzeCups, Text textNickname, Text textCountPoints, GameObject parent)
	{
	}
}
[Token(Token = "0x2000014")]
public class finishLine : MonoBehaviour
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string names;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1FEDC5C", Offset = "0x1FEDC5C", VA = "0x1FEDC5C")]
	private void onTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1FEDDAC", Offset = "0x1FEDDAC", VA = "0x1FEDDAC")]
	public finishLine()
	{
	}
}
[Token(Token = "0x2000015")]
public class FlagSetter : MonoBehaviour
{
	[Token(Token = "0x6000055")]
	[Address(RVA = "0x28763AC", Offset = "0x28763AC", VA = "0x28763AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x2876520", Offset = "0x2876520", VA = "0x2876520")]
	private void Update()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x2876524", Offset = "0x2876524", VA = "0x2876524")]
	public void ChoseFlag()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x287666C", Offset = "0x287666C", VA = "0x287666C")]
	public FlagSetter()
	{
	}
}
[Token(Token = "0x2000016")]
public class FlagsOfGhost : MonoBehaviour
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] flags;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer SpriteRenderer;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x2876674", Offset = "0x2876674", VA = "0x2876674")]
	private void Start()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x2876678", Offset = "0x2876678", VA = "0x2876678")]
	private void Update()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x287667C", Offset = "0x287667C", VA = "0x287667C")]
	public void SetFlag(int flag)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x28766C4", Offset = "0x28766C4", VA = "0x28766C4")]
	public FlagsOfGhost()
	{
	}
}
[Token(Token = "0x2000017")]
public class FlyingCameraScript : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float mainSpeed;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float shiftAdd;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float maxShift;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float camSens;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 lastMouse;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float totalRun;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x2878034", Offset = "0x2878034", VA = "0x2878034")]
	private void Update()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x28782A4", Offset = "0x28782A4", VA = "0x28782A4")]
	private Vector3 GetBaseInput()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x287833C", Offset = "0x287833C", VA = "0x287833C")]
	public FlyingCameraScript()
	{
	}
}
[Token(Token = "0x2000018")]
public class Flywheel : MonoBehaviour
{
	[Token(Token = "0x2000019")]
	private enum SHIFT
	{
		[Token(Token = "0x4000043")]
		upshift,
		[Token(Token = "0x4000044")]
		downshift
	}

	[Token(Token = "0x200001A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EDF0", Offset = "0xB1EDF0")]
	private sealed class <gearShift>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int neededGear;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Flywheel <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000068")]
			[Address(RVA = "0x2347908", Offset = "0x2347908", VA = "0x2347908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600006A")]
			[Address(RVA = "0x2347950", Offset = "0x2347950", VA = "0x2347950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0x2347804", Offset = "0x2347804", VA = "0x2347804")]
		[DebuggerHidden]
		public <gearShift>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0x2347830", Offset = "0x2347830", VA = "0x2347830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000067")]
		[Address(RVA = "0x2347834", Offset = "0x2347834", VA = "0x2347834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000069")]
		[Address(RVA = "0x2347910", Offset = "0x2347910", VA = "0x2347910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RPM;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhysAnchor physAnchor;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int gear;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private SHIFT shift;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x287835C", Offset = "0x287835C", VA = "0x287835C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x2878368", Offset = "0x2878368", VA = "0x2878368")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x287836C", Offset = "0x287836C", VA = "0x287836C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2B7B0", Offset = "0xB2B7B0")]
	private IEnumerator gearShift(int neededGear)
	{
		return null;
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x28783F4", Offset = "0x28783F4", VA = "0x28783F4")]
	private float Remap(float s, float a1, float a2, float b1, float b2)
	{
		return default(float);
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x2878410", Offset = "0x2878410", VA = "0x2878410")]
	public Flywheel()
	{
	}
}
[Token(Token = "0x200001B")]
public class Gates : MonoBehaviour
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform firstPos;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform secondPos;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x23C84B4", Offset = "0x23C84B4", VA = "0x23C84B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x23C84B8", Offset = "0x23C84B8", VA = "0x23C84B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x23C84BC", Offset = "0x23C84BC", VA = "0x23C84BC")]
	public Gates()
	{
	}
}
[Token(Token = "0x200001C")]
public class GForce : MonoBehaviour
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ship;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 prevPos;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform rectTransform;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x28798F4", Offset = "0x28798F4", VA = "0x28798F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x2879960", Offset = "0x2879960", VA = "0x2879960")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x2879B1C", Offset = "0x2879B1C", VA = "0x2879B1C")]
	private float Remap(float s, float a1, float a2, float b1, float b2)
	{
		return default(float);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x2879B38", Offset = "0x2879B38", VA = "0x2879B38")]
	public GForce()
	{
	}
}
[Token(Token = "0x200001D")]
public class GhostModel : MonoBehaviour
{
	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 velocity;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x23D0B20", Offset = "0x23D0B20", VA = "0x23D0B20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x23D0B24", Offset = "0x23D0B24", VA = "0x23D0B24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x23D0CF4", Offset = "0x23D0CF4", VA = "0x23D0CF4")]
	public GhostModel()
	{
	}
}
[Token(Token = "0x200001E")]
public class handBoolean : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string colliderName;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool inZone;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1FEDDB4", Offset = "0x1FEDDB4", VA = "0x1FEDDB4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1FEDE08", Offset = "0x1FEDE08", VA = "0x1FEDE08")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1FEDE58", Offset = "0x1FEDE58", VA = "0x1FEDE58")]
	public handBoolean()
	{
	}
}
[Token(Token = "0x200001F")]
public class Haptic : MonoBehaviour
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Haptic hapticClass;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float frequency;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float amplitude;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentPriority;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool inVibro;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<HapticShot> hapticQueue;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x23D29DC", Offset = "0x23D29DC", VA = "0x23D29DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x23D2A8C", Offset = "0x23D2A8C", VA = "0x23D2A8C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x23D2C58", Offset = "0x23D2C58", VA = "0x23D2C58")]
	public void Pulse(float amp)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x23D2CD0", Offset = "0x23D2CD0", VA = "0x23D2CD0")]
	public void AddQueue(float amp)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x23D2D74", Offset = "0x23D2D74", VA = "0x23D2D74")]
	public Haptic()
	{
	}
}
[Serializable]
[Token(Token = "0x2000020")]
public class HapticShot
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float frequncy;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float amplitude;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x23D2D6C", Offset = "0x23D2D6C", VA = "0x23D2D6C")]
	public HapticShot()
	{
	}
}
[Token(Token = "0x2000021")]
public class lapTimeTracker : MonoBehaviour
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentCheckpointID;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] checkpointResultTime;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] checkpointResultTimeFormatted;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float time;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float lastCheckpointTime;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int checkpointLengh;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool firstLap;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int colliderHits;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string timeTableMessage;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text timeTable;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1FEDE60", Offset = "0x1FEDE60", VA = "0x1FEDE60")]
	private void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1FEDF2C", Offset = "0x1FEDF2C", VA = "0x1FEDF2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1FEDF5C", Offset = "0x1FEDF5C", VA = "0x1FEDF5C")]
	private void StartNewCheckpoint()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1FEDF84", Offset = "0x1FEDF84", VA = "0x1FEDF84")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1FEE3E0", Offset = "0x1FEE3E0", VA = "0x1FEE3E0")]
	public string FormatTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1FEE4D4", Offset = "0x1FEE4D4", VA = "0x1FEE4D4")]
	public lapTimeTracker()
	{
	}
}
[Token(Token = "0x2000022")]
public class LeftCockpitHandle : MonoBehaviour
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform handle;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 handleRangeInX;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _zAnchorController;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _xAnchorHandle;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _lastGrabState;

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x251C898", Offset = "0x251C898", VA = "0x251C898")]
	private void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x251C89C", Offset = "0x251C89C", VA = "0x251C89C")]
	public LeftCockpitHandle()
	{
	}
}
[Token(Token = "0x2000023")]
public class lineUI : MonoBehaviour
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gameObject1;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gameObject2;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lineWidth;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color colorStart;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color colorEnd;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer line;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1FEE4E4", Offset = "0x1FEE4E4", VA = "0x1FEE4E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1FEE5C0", Offset = "0x1FEE5C0", VA = "0x1FEE5C0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1FEE6B0", Offset = "0x1FEE6B0", VA = "0x1FEE6B0")]
	public lineUI()
	{
	}
}
[Token(Token = "0x2000024")]
public class RotateSeeker : MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x20C5D70", Offset = "0x20C5D70", VA = "0x20C5D70")]
	private void Start()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x20C5DD4", Offset = "0x20C5DD4", VA = "0x20C5DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x20C5E24", Offset = "0x20C5E24", VA = "0x20C5E24")]
	public RotateSeeker()
	{
	}
}
[Token(Token = "0x2000025")]
public class ApplyProceduralTextureProperties : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB2236C", Offset = "0xB2236C")]
	public Material m_Material;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB22380", Offset = "0xB22380")]
	public ProceduralTexture2D proceduralTexAssetAlbedo;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProceduralTexture2D proceduralTexAssetNormal;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ProceduralTexture2D proceduralTexAssetMask;

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x22C74F4", Offset = "0x22C74F4", VA = "0x22C74F4")]
	public void SyncMatWithProceduralTextureAsset()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x22C7C0C", Offset = "0x22C7C0C", VA = "0x22C7C0C")]
	public ApplyProceduralTextureProperties()
	{
	}
}
[Serializable]
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB1EE00", Offset = "0xB1EE00")]
public class ProceduralTexture2D : ScriptableObject
{
	[Token(Token = "0x2000027")]
	public enum TextureType
	{
		[Token(Token = "0x400008C")]
		Color,
		[Token(Token = "0x400008D")]
		Normal,
		[Token(Token = "0x400008E")]
		Other
	}

	[Token(Token = "0x2000028")]
	public enum CompressionLevel
	{
		[Token(Token = "0x4000090")]
		None = -1,
		[Token(Token = "0x4000091")]
		LowQuality = 0,
		[Token(Token = "0x4000092")]
		NormalQuality = 50,
		[Token(Token = "0x4000093")]
		HighQuality = 100
	}

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D input;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextureType type;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool includeAlpha;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool generateMipMaps;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FilterMode filterMode;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int anisoLevel;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CompressionLevel compressionQuality;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D Tinput;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D invT;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 colorSpaceOrigin;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 colorSpaceVector1;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 colorSpaceVector2;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 colorSpaceVector3;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector4 compressionScalers;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public long memoryUsageBytes;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture2D currentInput;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextureType currentType;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool currentIncludeAlpha;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool currentGenerateMipMaps;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public FilterMode currentFilterMode;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int currentAnisoLevel;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CompressionLevel currentCompressionQuality;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x20BD8E0", Offset = "0x20BD8E0", VA = "0x20BD8E0")]
	public ProceduralTexture2D()
	{
	}
}
[Token(Token = "0x2000029")]
public static class TransformExtensions
{
	[Token(Token = "0x600008F")]
	[Address(RVA = "0x263C2D0", Offset = "0x263C2D0", VA = "0x263C2D0")]
	public static bool IsVisibleFrom(this Transform transform, Camera camera)
	{
		return default(bool);
	}
}
[Token(Token = "0x200002A")]
public class MLPForceNoProbes : MonoBehaviour
{
	[Token(Token = "0x6000090")]
	[Address(RVA = "0x25264BC", Offset = "0x25264BC", VA = "0x25264BC")]
	public MLPForceNoProbes()
	{
	}
}
[Token(Token = "0x200002B")]
public class MLPForceSaveProbes : MonoBehaviour
{
	[Token(Token = "0x6000091")]
	[Address(RVA = "0x25264C4", Offset = "0x25264C4", VA = "0x25264C4")]
	public MLPForceSaveProbes()
	{
	}
}
[Token(Token = "0x200002C")]
public class minimapCameraTransform : MonoBehaviour
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spaceship;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float y_axis;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float y_rot;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1FEE6B8", Offset = "0x1FEE6B8", VA = "0x1FEE6B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1FEE78C", Offset = "0x1FEE78C", VA = "0x1FEE78C")]
	public minimapCameraTransform()
	{
	}
}
[Token(Token = "0x200002D")]
public class MinimapMarkerTransform : MonoBehaviour
{
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spaceship;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float y_axis;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float x_rotation;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float y_rotation;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float z_rotation;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool copy_z;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x21BA6AC", Offset = "0x21BA6AC", VA = "0x21BA6AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x21BA6F4", Offset = "0x21BA6F4", VA = "0x21BA6F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x21BA7B0", Offset = "0x21BA7B0", VA = "0x21BA7B0")]
	public MinimapMarkerTransform()
	{
	}
}
[Token(Token = "0x200002E")]
public class NetworkMenuControllerZRace : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200002F")]
	public class UserUI
	{
		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Text textUsername;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text textCar;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text textCountGoldCups;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text textCountSilverCups;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text textCountBronzeCups;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image imageReadyState;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image imageFlag;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject gameObjectCups;

		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x1FFD318", Offset = "0x1FFD318", VA = "0x1FFD318")]
		public UserUI(Text inTextUsername, Text inTextCar, Image inImageReadyState, Image inImageFlag, Text inTextCountGoldCups, Text inTextCountSilverCups, Text inTextCountBronzeCups, GameObject inGameObjectCups)
		{
		}
	}

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22394", Offset = "0xB22394")]
	public GameObject gmButtonLaunchMap;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gmButtonLaunchMapLockedStub;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gmButtonSelectMap;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject gmButtonReadyStatePlus;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gmButtonReadyStateMinus;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject gmLockedStubButtonSelectMap;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text textUISelectedTrack;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text textUISelectedCar;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MenuController menuController;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB223CC", Offset = "0xB223CC")]
	public NetworkRoomManagerZRace networkRoomManagerZRace;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22404", Offset = "0xB22404")]
	public Transform trUsersContainer;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform trTrackImagesContainer;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform trTrackImagesContainerDemo;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform trGameModesContainer;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2243C", Offset = "0xB2243C")]
	public Color colorReadyStatePlus;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color colorReadyStateMinus;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22474", Offset = "0xB22474")]
	public List<UserUI> listUsersUI;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB224AC", Offset = "0xB224AC")]
	public string[] arrayStrTrackNames;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string[] arrayStrTrackNamesDemo;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string[] arrayStrCarNames;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool initialized;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject[] arrayGmTrackImages;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject gmSelectedTrack;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject[] arrayGameModesOff;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject[] arrayGameModesOn;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private CustomButton[] arrayGameModesOnButtons;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x225E5E4", Offset = "0x225E5E4", VA = "0x225E5E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x225E5E8", Offset = "0x225E5E8", VA = "0x225E5E8")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x225EBC4", Offset = "0x225EBC4", VA = "0x225EBC4")]
	public void SetGameMode(int inValue)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x225ED7C", Offset = "0x225ED7C", VA = "0x225ED7C")]
	public void CreateLobby()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x225ED9C", Offset = "0x225ED9C", VA = "0x225ED9C")]
	public void SelectTrack(int inValue)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x225EF3C", Offset = "0x225EF3C", VA = "0x225EF3C")]
	public void SelectCar(int inValue)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x225F070", Offset = "0x225F070", VA = "0x225F070")]
	public void LeaveLobby()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x225F158", Offset = "0x225F158", VA = "0x225F158")]
	public void LaunchInvitePanel()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x225F1A0", Offset = "0x225F1A0", VA = "0x225F1A0")]
	public void LaunchMap()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x225F4C4", Offset = "0x225F4C4", VA = "0x225F4C4")]
	public void ChangeReadyState(bool inValue)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x225F514", Offset = "0x225F514", VA = "0x225F514")]
	public void AcceptInvite()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x225F58C", Offset = "0x225F58C", VA = "0x225F58C")]
	public void OnStopHost()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x225F5F8", Offset = "0x225F5F8", VA = "0x225F5F8")]
	public void OnStartHost()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x225F678", Offset = "0x225F678", VA = "0x225F678")]
	public void OnPresenceSet(string inMatchID, string inLobbyID)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x225F67C", Offset = "0x225F67C", VA = "0x225F67C")]
	public void OnCreateRoom(string inRoomID)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x225F810", Offset = "0x225F810", VA = "0x225F810")]
	public void OnLeaveRoom()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x225F8DC", Offset = "0x225F8DC", VA = "0x225F8DC")]
	public void OnPresenceClear()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x225F6F0", Offset = "0x225F6F0", VA = "0x225F6F0")]
	public void OnJoinRoom(string inRoomID)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x225F8E0", Offset = "0x225F8E0", VA = "0x225F8E0")]
	public void OnTrackSelected(byte inValue)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x225FC18", Offset = "0x225FC18", VA = "0x225FC18")]
	public void OnChangeUserData(byte inIndexUser)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x2260010", Offset = "0x2260010", VA = "0x2260010")]
	public void OnAcceptInvite()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x2260038", Offset = "0x2260038", VA = "0x2260038")]
	public void OnTrackLaunched()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x2260058", Offset = "0x2260058", VA = "0x2260058")]
	public void OnScreenFaded()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x2260140", Offset = "0x2260140", VA = "0x2260140")]
	public void RecalculateUsersContainer()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x225FA64", Offset = "0x225FA64", VA = "0x225FA64")]
	public void RecalculateGameModes()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x22606E4", Offset = "0x22606E4", VA = "0x22606E4")]
	public void CheckAllPlayersReady(bool inValue)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x225F64C", Offset = "0x225F64C", VA = "0x225F64C")]
	public void OpenMultiplayer()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x225F854", Offset = "0x225F854", VA = "0x225F854")]
	public void CloseMultiplayer()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x225F620", Offset = "0x225F620", VA = "0x225F620")]
	public void SetLoading(bool inValue)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x2260748", Offset = "0x2260748", VA = "0x2260748")]
	public NetworkMenuControllerZRace()
	{
	}
}
[Token(Token = "0x2000030")]
public class NetworkMenuPlayerZRace : NetworkRoomPlayer
{
	[Serializable]
	[Token(Token = "0x2000031")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EE7C", Offset = "0xB1EE7C")]
	private sealed class <>c
	{
		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<NetworkMenuPlayerZRace, bool> <>9__34_0;

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x1FFD45C", Offset = "0x1FFD45C", VA = "0x1FFD45C")]
		public <>c()
		{
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x1FFD464", Offset = "0x1FFD464", VA = "0x1FFD464")]
		internal bool <CheckAllScreenFaded>b__34_0(NetworkMenuPlayerZRace x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Mirror.SyncVar]
	public byte selectedCar;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Mirror.SyncVar]
	public string username;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Mirror.SyncVar]
	public byte flagID;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[Mirror.SyncVar]
	public bool screenFaded;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[Mirror.SyncVar]
	public ushort countBronzeCups;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Mirror.SyncVar]
	public ushort countSilverCups;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[Mirror.SyncVar]
	public ushort countGoldCups;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool initialized;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public NetworkRoomManagerZRace networkRoomManagerZRace;

	[Token(Token = "0x1700000B")]
	public byte NetworkselectedCar
	{
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x2261C98", Offset = "0x2261C98", VA = "0x2261C98")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x2261CA0", Offset = "0x2261CA0", VA = "0x2261CA0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public string Networkusername
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x2261DC0", Offset = "0x2261DC0", VA = "0x2261DC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x2261DC8", Offset = "0x2261DC8", VA = "0x2261DC8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public byte NetworkflagID
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x2261EE8", Offset = "0x2261EE8", VA = "0x2261EE8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x2261EF0", Offset = "0x2261EF0", VA = "0x2261EF0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public bool NetworkscreenFaded
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x2262010", Offset = "0x2262010", VA = "0x2262010")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x2262018", Offset = "0x2262018", VA = "0x2262018")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public ushort NetworkcountBronzeCups
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x22620C0", Offset = "0x22620C0", VA = "0x22620C0")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x22620C8", Offset = "0x22620C8", VA = "0x22620C8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public ushort NetworkcountSilverCups
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x226216C", Offset = "0x226216C", VA = "0x226216C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x2262174", Offset = "0x2262174", VA = "0x2262174")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public ushort NetworkcountGoldCups
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x2262218", Offset = "0x2262218", VA = "0x2262218")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x2262220", Offset = "0x2262220", VA = "0x2262220")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x22607D4", Offset = "0x22607D4", VA = "0x22607D4", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x22607D8", Offset = "0x22607D8", VA = "0x22607D8", Slot = "9")]
	public override void OnStopServer()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x22607DC", Offset = "0x22607DC", VA = "0x22607DC", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x2260BCC", Offset = "0x2260BCC", VA = "0x2260BCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x2260C28", Offset = "0x2260C28", VA = "0x2260C28", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x2260C2C", Offset = "0x2260C2C", VA = "0x2260C2C", Slot = "12")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x2260D8C", Offset = "0x2260D8C", VA = "0x2260D8C", Slot = "13")]
	public override void OnStartAuthority()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x2260D90", Offset = "0x2260D90", VA = "0x2260D90", Slot = "14")]
	public override void OnStopAuthority()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x2260D94", Offset = "0x2260D94", VA = "0x2260D94", Slot = "18")]
	public override void OnClientEnterRoom()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x2260D98", Offset = "0x2260D98", VA = "0x2260D98", Slot = "19")]
	public override void OnClientExitRoom()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x2260D9C", Offset = "0x2260D9C", VA = "0x2260D9C", Slot = "16")]
	public override void IndexChanged(int oldIndex, int newIndex)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x2260DA0", Offset = "0x2260DA0", VA = "0x2260DA0", Slot = "17")]
	public override void ReadyStateChanged(bool oldReadyState, bool newReadyState)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x2260A68", Offset = "0x2260A68", VA = "0x2260A68")]
	[Command]
	private void CmdSetAccInfo(string inUsername, byte inFlagID)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x2260F90", Offset = "0x2260F90", VA = "0x2260F90")]
	[Command]
	public void CmdSelectCar(byte carId)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x22610D8", Offset = "0x22610D8", VA = "0x22610D8")]
	public void HookOnCarChanged(byte oldValue, byte newValue)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x22610DC", Offset = "0x22610DC", VA = "0x22610DC")]
	public void HookOnUsernameChanged(string oldValue, string newValue)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x22610E0", Offset = "0x22610E0", VA = "0x22610E0")]
	public void HookOnFlagChanged(byte oldValue, byte newValue)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x2260E34", Offset = "0x2260E34", VA = "0x2260E34")]
	private void OnChangeUserData()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x2260C8C", Offset = "0x2260C8C", VA = "0x2260C8C")]
	[Command]
	private void CmdGetServerData()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x2261100", Offset = "0x2261100", VA = "0x2261100")]
	[TargetRpc]
	private void TRpcSendServerData(byte inSelectedMap)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x2261248", Offset = "0x2261248", VA = "0x2261248")]
	[TargetRpc]
	private void TRpcSendServerGameModes(NetworkRoomManagerZRace.GameModes inValue)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x226135C", Offset = "0x226135C", VA = "0x226135C")]
	[ClientRpc]
	public void RpcSelectTrack(byte inSelectedMap)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x22614A4", Offset = "0x22614A4", VA = "0x22614A4")]
	[ClientRpc]
	public void RpcSetGameMode(NetworkRoomManagerZRace.GameModes inValue)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x22615B8", Offset = "0x22615B8", VA = "0x22615B8")]
	[ClientRpc]
	public void RpcLaunchTrack()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x22616B8", Offset = "0x22616B8", VA = "0x22616B8")]
	[Command]
	public void CmdScreenFaded()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x22617B8", Offset = "0x22617B8", VA = "0x22617B8")]
	private void CheckAllScreenFaded()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x226191C", Offset = "0x226191C", VA = "0x226191C")]
	public void StartLoadingScene()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x2261C20", Offset = "0x2261C20", VA = "0x2261C20")]
	public NetworkMenuPlayerZRace()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x2261C94", Offset = "0x2261C94", VA = "0x2261C94")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x22622C4", Offset = "0x22622C4", VA = "0x22622C4")]
	protected void UserCode_CmdSetAccInfo(string inUsername, byte inFlagID)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x22622F0", Offset = "0x22622F0", VA = "0x22622F0")]
	protected static void InvokeUserCode_CmdSetAccInfo(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x22624A8", Offset = "0x22624A8", VA = "0x22624A8")]
	protected void UserCode_CmdSelectCar(byte carId)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x22624AC", Offset = "0x22624AC", VA = "0x22624AC")]
	protected static void InvokeUserCode_CmdSelectCar(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x2262648", Offset = "0x2262648", VA = "0x2262648")]
	protected void UserCode_CmdGetServerData()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x2262694", Offset = "0x2262694", VA = "0x2262694")]
	protected static void InvokeUserCode_CmdGetServerData(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x22627EC", Offset = "0x22627EC", VA = "0x22627EC")]
	protected void UserCode_TRpcSendServerData(byte inSelectedMap)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x226282C", Offset = "0x226282C", VA = "0x226282C")]
	protected static void InvokeUserCode_TRpcSendServerData(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x2262990", Offset = "0x2262990", VA = "0x2262990")]
	protected void UserCode_TRpcSendServerGameModes(NetworkRoomManagerZRace.GameModes inValue)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x22629AC", Offset = "0x22629AC", VA = "0x22629AC")]
	protected static void InvokeUserCode_TRpcSendServerGameModes(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x2262AE4", Offset = "0x2262AE4", VA = "0x2262AE4")]
	protected void UserCode_RpcSelectTrack(byte inSelectedMap)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x2262B00", Offset = "0x2262B00", VA = "0x2262B00")]
	protected static void InvokeUserCode_RpcSelectTrack(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x2262C64", Offset = "0x2262C64", VA = "0x2262C64")]
	protected void UserCode_RpcSetGameMode(NetworkRoomManagerZRace.GameModes inValue)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x2262C80", Offset = "0x2262C80", VA = "0x2262C80")]
	protected static void InvokeUserCode_RpcSetGameMode(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x2262DB8", Offset = "0x2262DB8", VA = "0x2262DB8")]
	protected void UserCode_RpcLaunchTrack()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x2262DFC", Offset = "0x2262DFC", VA = "0x2262DFC")]
	protected static void InvokeUserCode_RpcLaunchTrack(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x2262F1C", Offset = "0x2262F1C", VA = "0x2262F1C")]
	protected void UserCode_CmdScreenFaded()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x2262F20", Offset = "0x2262F20", VA = "0x2262F20")]
	protected static void InvokeUserCode_CmdScreenFaded(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x2263078", Offset = "0x2263078", VA = "0x2263078")]
	static NetworkMenuPlayerZRace()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x2263520", Offset = "0x2263520", VA = "0x2263520", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x22637F4", Offset = "0x22637F4", VA = "0x22637F4", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000032")]
public class NetworkPlayerControllerZRace : NetworkBehaviour
{
	[Token(Token = "0x2000033")]
	public enum WishState
	{
		[Token(Token = "0x40000DD")]
		None,
		[Token(Token = "0x40000DE")]
		Restart,
		[Token(Token = "0x40000DF")]
		Menu
	}

	[Token(Token = "0x2000034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EE8C", Offset = "0xB1EE8C")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte i;

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x1FFD574", Offset = "0x1FFD574", VA = "0x1FFD574")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x1FFD57C", Offset = "0x1FFD57C", VA = "0x1FFD57C")]
		internal bool <CmdDistributeReward>b__0(NetworkMenuPlayerZRace x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EE9C", Offset = "0xB1EE9C")]
	private sealed class <>c
	{
		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<NetworkPlayerControllerZRace, bool> <>9__46_0;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<NetworkPlayerControllerZRace, bool> <>9__49_0;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<NetworkPlayerControllerZRace, bool> <>9__49_1;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<NetworkPlayerControllerZRace, bool> <>9__52_0;

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x1FFD4E4", Offset = "0x1FFD4E4", VA = "0x1FFD4E4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x1FFD4EC", Offset = "0x1FFD4EC", VA = "0x1FFD4EC")]
		internal bool <CmdSetWish>b__46_0(NetworkPlayerControllerZRace x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x1FFD510", Offset = "0x1FFD510", VA = "0x1FFD510")]
		internal bool <CheckAllWishes>b__49_0(NetworkPlayerControllerZRace x)
		{
			return default(bool);
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0x1FFD534", Offset = "0x1FFD534", VA = "0x1FFD534")]
		internal bool <CheckAllWishes>b__49_1(NetworkPlayerControllerZRace x)
		{
			return default(bool);
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0x1FFD558", Offset = "0x1FFD558", VA = "0x1FFD558")]
		internal bool <CheckAllScreenFaded>b__52_0(NetworkPlayerControllerZRace x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Mirror.SyncVar]
	public byte selectedCar;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[Mirror.SyncVar]
	public byte flagID;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Mirror.SyncVar]
	public string username;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Mirror.SyncVar]
	public float time;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Mirror.SyncVar]
	public bool readyState;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	[Mirror.SyncVar]
	public bool finished;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	[Mirror.SyncVar]
	public bool screenFaded;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Mirror.SyncVar]
	public WishState wishState;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Mirror.SyncVar]
	public byte countSlowMo;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[Mirror.SyncVar]
	public byte countNitro;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Mirror.SyncVar]
	public ZTagUser zTagUser;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform spaceshipOrigin;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NetworkRoomManagerZRace networkRoomManagerZRace;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TrackUIController trackUIController;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Move_Player movePlayer;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject prefabCar;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject initializedGhostCar;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CarSpawnerBot carSpawnerBot;

	[Token(Token = "0x17000012")]
	public byte NetworkselectedCar
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x22661F0", Offset = "0x22661F0", VA = "0x22661F0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x22661F8", Offset = "0x22661F8", VA = "0x22661F8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public byte NetworkflagID
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x226629C", Offset = "0x226629C", VA = "0x226629C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000126")]
		[Address(RVA = "0x22662A4", Offset = "0x22662A4", VA = "0x22662A4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public string Networkusername
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0x2266348", Offset = "0x2266348", VA = "0x2266348")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x2266350", Offset = "0x2266350", VA = "0x2266350")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public float Networktime
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x22663F4", Offset = "0x22663F4", VA = "0x22663F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600012A")]
		[Address(RVA = "0x22663FC", Offset = "0x22663FC", VA = "0x22663FC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool NetworkreadyState
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x2266538", Offset = "0x2266538", VA = "0x2266538")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x2266540", Offset = "0x2266540", VA = "0x2266540")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool Networkfinished
	{
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x22665E8", Offset = "0x22665E8", VA = "0x22665E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x22665F0", Offset = "0x22665F0", VA = "0x22665F0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public bool NetworkscreenFaded
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x2266698", Offset = "0x2266698", VA = "0x2266698")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x22666A0", Offset = "0x22666A0", VA = "0x22666A0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public WishState NetworkwishState
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x2266748", Offset = "0x2266748", VA = "0x2266748")]
		get
		{
			return default(WishState);
		}
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x2266750", Offset = "0x2266750", VA = "0x2266750")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public byte NetworkcountSlowMo
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x22667F4", Offset = "0x22667F4", VA = "0x22667F4")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000134")]
		[Address(RVA = "0x22667FC", Offset = "0x22667FC", VA = "0x22667FC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public byte NetworkcountNitro
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0x2266920", Offset = "0x2266920", VA = "0x2266920")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000136")]
		[Address(RVA = "0x2266928", Offset = "0x2266928", VA = "0x2266928")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public ZTagUser NetworkzTagUser
	{
		[Token(Token = "0x6000137")]
		[Address(RVA = "0x2266A4C", Offset = "0x2266A4C", VA = "0x2266A4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000138")]
		[Address(RVA = "0x2266A54", Offset = "0x2266A54", VA = "0x2266A54")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x2263C30", Offset = "0x2263C30", VA = "0x2263C30", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x2263C34", Offset = "0x2263C34", VA = "0x2263C34", Slot = "9")]
	public override void OnStopServer()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x2263C38", Offset = "0x2263C38", VA = "0x2263C38", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x2264244", Offset = "0x2264244", VA = "0x2264244", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x2264248", Offset = "0x2264248", VA = "0x2264248", Slot = "12")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x226424C", Offset = "0x226424C", VA = "0x226424C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x226426C", Offset = "0x226426C", VA = "0x226426C", Slot = "13")]
	public override void OnStartAuthority()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x2264270", Offset = "0x2264270", VA = "0x2264270", Slot = "14")]
	public override void OnStopAuthority()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x2263DDC", Offset = "0x2263DDC", VA = "0x2263DDC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x2264274", Offset = "0x2264274", VA = "0x2264274")]
	public void UnInitialize()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x2264330", Offset = "0x2264330", VA = "0x2264330")]
	private void Update()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x226440C", Offset = "0x226440C", VA = "0x226440C")]
	[Command]
	public void CmdSetState(bool inValue)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x2264554", Offset = "0x2264554", VA = "0x2264554")]
	[ClientRpc]
	private void RpcStartRace()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x2264654", Offset = "0x2264654", VA = "0x2264654")]
	private void StartRace()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x2264674", Offset = "0x2264674", VA = "0x2264674")]
	[Command]
	public void CmdSetTime(float inTime)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x22647C4", Offset = "0x22647C4", VA = "0x22647C4")]
	[Command]
	public void CmdDistributeReward()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x22648C4", Offset = "0x22648C4", VA = "0x22648C4")]
	public void HookSetTime(float oldValue, float newValue)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x22648FC", Offset = "0x22648FC", VA = "0x22648FC")]
	[ClientRpc]
	public void RpcSetTime(float inTime)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x2264A4C", Offset = "0x2264A4C", VA = "0x2264A4C")]
	[ClientRpc]
	public void RpcInitializeFinishBoard()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x2264B4C", Offset = "0x2264B4C", VA = "0x2264B4C")]
	[Command]
	public void CmdSlowMo()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x2264C4C", Offset = "0x2264C4C", VA = "0x2264C4C")]
	[ClientRpc]
	private void RpcSlowMo()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x2264D4C", Offset = "0x2264D4C", VA = "0x2264D4C")]
	[Command]
	public void CmdNitro()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x2264E4C", Offset = "0x2264E4C", VA = "0x2264E4C")]
	[Command]
	public void CmdPickUpNitro()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x2264F4C", Offset = "0x2264F4C", VA = "0x2264F4C")]
	[ClientRpc]
	private void RpcNitro()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x226504C", Offset = "0x226504C", VA = "0x226504C")]
	[TargetRpc]
	private void TRpcNitro()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x226514C", Offset = "0x226514C", VA = "0x226514C")]
	public void HookOnCountNitroChanged(byte oldValue, byte newValue)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x22651E8", Offset = "0x22651E8", VA = "0x22651E8")]
	public void HookOnCountSlowMoChanged(byte oldValue, byte newValue)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x2265284", Offset = "0x2265284", VA = "0x2265284")]
	[Command]
	public void CmdSetWish(WishState inWishState)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x2265398", Offset = "0x2265398", VA = "0x2265398")]
	[ClientRpc]
	public void RpcAddingOneReady(bool beforeGame, byte readyPlayers, byte totalPlayers)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x2265510", Offset = "0x2265510", VA = "0x2265510")]
	[TargetRpc]
	public void TRpcOwnReady()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x2265610", Offset = "0x2265610", VA = "0x2265610")]
	private void CheckAllWishes()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x2265840", Offset = "0x2265840", VA = "0x2265840")]
	[ClientRpc]
	private void RpcPrepareToLoad(bool inRestart)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x2265988", Offset = "0x2265988", VA = "0x2265988")]
	[Command]
	public void CmdScreenFaded(bool inRestart)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x2265AD0", Offset = "0x2265AD0", VA = "0x2265AD0")]
	private void CheckAllScreenFaded(bool inRestart)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x2265C6C", Offset = "0x2265C6C", VA = "0x2265C6C")]
	public void PrepareLoadScene(bool inRestart)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x2265C48", Offset = "0x2265C48", VA = "0x2265C48")]
	public void StartLoadingScene(bool inRestart)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x2265D84", Offset = "0x2265D84", VA = "0x2265D84")]
	[ClientRpc]
	public void RpcGoal(bool red)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x2265ECC", Offset = "0x2265ECC", VA = "0x2265ECC")]
	[Command]
	public void CmdHit(NetworkPlayerControllerZRace hitNetworkPlayerControllerZRace, Vector3 inForce)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x2266048", Offset = "0x2266048", VA = "0x2266048")]
	[TargetRpc]
	public void TRpcHit(NetworkConnection target, Vector3 inForce)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x22661B4", Offset = "0x22661B4", VA = "0x22661B4")]
	public NetworkPlayerControllerZRace()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x22661C4", Offset = "0x22661C4", VA = "0x22661C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BA68", Offset = "0xB2BA68")]
	private bool <RpcSetTime>b__36_0(PlayerForTrack user)
	{
		return default(bool);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x22661EC", Offset = "0x22661EC", VA = "0x22661EC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x2266AF8", Offset = "0x2266AF8", VA = "0x2266AF8")]
	protected void UserCode_CmdSetState(bool inValue)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x2266D00", Offset = "0x2266D00", VA = "0x2266D00")]
	protected static void InvokeUserCode_CmdSetState(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x2266E98", Offset = "0x2266E98", VA = "0x2266E98")]
	protected void UserCode_RpcStartRace()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x2266EB8", Offset = "0x2266EB8", VA = "0x2266EB8")]
	protected static void InvokeUserCode_RpcStartRace(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x2266FDC", Offset = "0x2266FDC", VA = "0x2266FDC")]
	protected void UserCode_CmdSetTime(float inTime)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x22670F8", Offset = "0x22670F8", VA = "0x22670F8")]
	protected static void InvokeUserCode_CmdSetTime(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x226728C", Offset = "0x226728C", VA = "0x226728C")]
	protected void UserCode_CmdDistributeReward()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x2267460", Offset = "0x2267460", VA = "0x2267460")]
	protected static void InvokeUserCode_CmdDistributeReward(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x22675B8", Offset = "0x22675B8", VA = "0x22675B8")]
	protected void UserCode_RpcSetTime(float inTime)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x22676C8", Offset = "0x22676C8", VA = "0x22676C8")]
	protected static void InvokeUserCode_RpcSetTime(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x2267820", Offset = "0x2267820", VA = "0x2267820")]
	protected void UserCode_RpcInitializeFinishBoard()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x2267844", Offset = "0x2267844", VA = "0x2267844")]
	protected static void InvokeUserCode_RpcInitializeFinishBoard(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x2267960", Offset = "0x2267960", VA = "0x2267960")]
	protected void UserCode_CmdSlowMo()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x2267A44", Offset = "0x2267A44", VA = "0x2267A44")]
	protected static void InvokeUserCode_CmdSlowMo(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x2267B9C", Offset = "0x2267B9C", VA = "0x2267B9C")]
	protected void UserCode_RpcSlowMo()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x2267C14", Offset = "0x2267C14", VA = "0x2267C14")]
	protected static void InvokeUserCode_RpcSlowMo(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x2267D2C", Offset = "0x2267D2C", VA = "0x2267D2C")]
	protected void UserCode_CmdNitro()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x2267E2C", Offset = "0x2267E2C", VA = "0x2267E2C")]
	protected static void InvokeUserCode_CmdNitro(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x2267F84", Offset = "0x2267F84", VA = "0x2267F84")]
	protected void UserCode_CmdPickUpNitro()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x2268060", Offset = "0x2268060", VA = "0x2268060")]
	protected static void InvokeUserCode_CmdPickUpNitro(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x22681B8", Offset = "0x22681B8", VA = "0x22681B8")]
	protected void UserCode_RpcNitro()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x2268230", Offset = "0x2268230", VA = "0x2268230")]
	protected static void InvokeUserCode_RpcNitro(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x2268348", Offset = "0x2268348", VA = "0x2268348")]
	protected void UserCode_TRpcNitro()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x22683C0", Offset = "0x22683C0", VA = "0x22683C0")]
	protected static void InvokeUserCode_TRpcNitro(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x22684D8", Offset = "0x22684D8", VA = "0x22684D8")]
	protected void UserCode_CmdSetWish(WishState inWishState)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x2268660", Offset = "0x2268660", VA = "0x2268660")]
	protected static void InvokeUserCode_CmdSetWish(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x22687D0", Offset = "0x22687D0", VA = "0x22687D0")]
	protected void UserCode_RpcAddingOneReady(bool beforeGame, byte readyPlayers, byte totalPlayers)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x22687F4", Offset = "0x22687F4", VA = "0x22687F4")]
	protected static void InvokeUserCode_RpcAddingOneReady(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x2268980", Offset = "0x2268980", VA = "0x2268980")]
	protected void UserCode_TRpcOwnReady()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x22689A0", Offset = "0x22689A0", VA = "0x22689A0")]
	protected static void InvokeUserCode_TRpcOwnReady(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x2268AC4", Offset = "0x2268AC4", VA = "0x2268AC4")]
	protected void UserCode_RpcPrepareToLoad(bool inRestart)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x2268AE8", Offset = "0x2268AE8", VA = "0x2268AE8")]
	protected static void InvokeUserCode_RpcPrepareToLoad(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x2268C50", Offset = "0x2268C50", VA = "0x2268C50")]
	protected void UserCode_CmdScreenFaded(bool inRestart)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x2268C58", Offset = "0x2268C58", VA = "0x2268C58")]
	protected static void InvokeUserCode_CmdScreenFaded(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x2268DF0", Offset = "0x2268DF0", VA = "0x2268DF0")]
	protected void UserCode_RpcGoal(bool red)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x2268E58", Offset = "0x2268E58", VA = "0x2268E58")]
	protected static void InvokeUserCode_RpcGoal(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x2268FB0", Offset = "0x2268FB0", VA = "0x2268FB0")]
	protected void UserCode_CmdHit(NetworkPlayerControllerZRace hitNetworkPlayerControllerZRace, Vector3 inForce)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x2269118", Offset = "0x2269118", VA = "0x2269118")]
	protected static void InvokeUserCode_CmdHit(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x22692D4", Offset = "0x22692D4", VA = "0x22692D4")]
	protected void UserCode_TRpcHit(NetworkConnection target, Vector3 inForce)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x2269374", Offset = "0x2269374", VA = "0x2269374")]
	protected static void InvokeUserCode_TRpcHit(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x22694E8", Offset = "0x22694E8", VA = "0x22694E8")]
	static NetworkPlayerControllerZRace()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x2269E48", Offset = "0x2269E48", VA = "0x2269E48", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x226A220", Offset = "0x226A220", VA = "0x226A220", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000036")]
public class NetworkRoomManagerZRace : NetworkRoomManager
{
	[Token(Token = "0x2000037")]
	[Flags]
	public enum GameModes
	{
		[Token(Token = "0x40000F0")]
		None = 0,
		[Token(Token = "0x40000F1")]
		SlipStream = 1,
		[Token(Token = "0x40000F2")]
		JointNitro = 2,
		[Token(Token = "0x40000F3")]
		JointCapacitySlowMo = 4,
		[Token(Token = "0x40000F4")]
		JointCapacityNitro = 8,
		[Token(Token = "0x40000F5")]
		All = -1
	}

	[Serializable]
	[Token(Token = "0x2000038")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EEBC", Offset = "0xB1EEBC")]
	private sealed class <>c
	{
		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__25_3;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__25_1;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<NetworkMenuPlayerZRace, string> <>9__38_0;

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x1FFD6AC", Offset = "0x1FFD6AC", VA = "0x1FFD6AC")]
		public <>c()
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x1FFD6B4", Offset = "0x1FFD6B4", VA = "0x1FFD6B4")]
		internal void <OnStopClient>b__25_3()
		{
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x1FFD6B8", Offset = "0x1FFD6B8", VA = "0x1FFD6B8")]
		internal void <OnStopClient>b__25_1()
		{
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x1FFD6BC", Offset = "0x1FFD6BC", VA = "0x1FFD6BC")]
		internal string <LaunchTrack>b__38_0(NetworkMenuPlayerZRace x)
		{
			return null;
		}
	}

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public OculusTransport oculusTransport;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AuthCommon oculusController;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public NetworkMenuControllerZRace networkMenuControllerZRace;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<NetworkPlayerControllerZRace> listNetworkPlayerControllers;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<NetworkMenuPlayerZRace> listNetworkMenuPlayers;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public NetworkMenuPlayerZRace ownNetworkMenuPlayerZRace;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public NetworkPlayerControllerZRace ownNetworkPlayerControllerZRace;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public byte selectedTrack;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public GameModes gameModes;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x226A788", Offset = "0x226A788", VA = "0x226A788", Slot = "36")]
	public override void OnRoomStartServer()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x226A78C", Offset = "0x226A78C", VA = "0x226A78C", Slot = "37")]
	public override void OnRoomStopServer()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x226A790", Offset = "0x226A790", VA = "0x226A790", Slot = "34")]
	public override void OnRoomStartHost()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x226A794", Offset = "0x226A794", VA = "0x226A794", Slot = "35")]
	public override void OnRoomStopHost()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x226A798", Offset = "0x226A798", VA = "0x226A798", Slot = "38")]
	public override void OnRoomServerConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x226A79C", Offset = "0x226A79C", VA = "0x226A79C", Slot = "39")]
	public override void OnRoomServerDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x226A7A0", Offset = "0x226A7A0", VA = "0x226A7A0", Slot = "40")]
	public override void OnRoomServerSceneChanged(string sceneName)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x226A7A4", Offset = "0x226A7A4", VA = "0x226A7A4", Slot = "41")]
	public override GameObject OnRoomServerCreateRoomPlayer(NetworkConnection conn)
	{
		return null;
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x226A7AC", Offset = "0x226A7AC", VA = "0x226A7AC", Slot = "42")]
	public override GameObject OnRoomServerCreateGamePlayer(NetworkConnection conn, GameObject roomPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x226A7B4", Offset = "0x226A7B4", VA = "0x226A7B4", Slot = "43")]
	public override void OnRoomServerAddPlayer(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x226A7BC", Offset = "0x226A7BC", VA = "0x226A7BC", Slot = "44")]
	public override bool OnRoomServerSceneLoadedForPlayer(NetworkConnection conn, GameObject roomPlayer, GameObject gamePlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x226A8BC", Offset = "0x226A8BC", VA = "0x226A8BC", Slot = "14")]
	public override void OnServerDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x226A8C4", Offset = "0x226A8C4", VA = "0x226A8C4", Slot = "19")]
	public override void OnServerChangeScene(string newSceneName)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x226A8CC", Offset = "0x226A8CC", VA = "0x226A8CC", Slot = "45")]
	public override void OnRoomServerPlayersReady()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x226A8EC", Offset = "0x226A8EC", VA = "0x226A8EC", Slot = "46")]
	public override void OnRoomServerPlayersNotReady()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x226A988", Offset = "0x226A988", VA = "0x226A988", Slot = "47")]
	public override void OnRoomClientEnter()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x226A98C", Offset = "0x226A98C", VA = "0x226A98C", Slot = "48")]
	public override void OnRoomClientExit()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x226A990", Offset = "0x226A990", VA = "0x226A990", Slot = "49")]
	public override void OnRoomClientConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x226A994", Offset = "0x226A994", VA = "0x226A994", Slot = "50")]
	public override void OnRoomClientDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x226A998", Offset = "0x226A998", VA = "0x226A998", Slot = "51")]
	public override void OnRoomStartClient()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x226A99C", Offset = "0x226A99C", VA = "0x226A99C", Slot = "52")]
	public override void OnRoomStopClient()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x226A9A0", Offset = "0x226A9A0", VA = "0x226A9A0", Slot = "53")]
	public override void OnRoomClientSceneChanged(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x226AC70", Offset = "0x226AC70", VA = "0x226AC70", Slot = "54")]
	public override void OnRoomClientAddPlayerFailed()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x226AC74", Offset = "0x226AC74", VA = "0x226AC74", Slot = "28")]
	public override void OnStartHost()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x226AD9C", Offset = "0x226AD9C", VA = "0x226AD9C", Slot = "33")]
	public override void OnStopHost()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x226ADCC", Offset = "0x226ADCC", VA = "0x226ADCC", Slot = "32")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x225EC94", Offset = "0x225EC94", VA = "0x225EC94")]
	public void SetGameMode(GameModes inValue)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x225EDB8", Offset = "0x225EDB8", VA = "0x225EDB8")]
	[Server]
	public void SelectTrack(byte inValue)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x225F1BC", Offset = "0x225F1BC", VA = "0x225F1BC")]
	[Server]
	public void LaunchTrack()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x226AF98", Offset = "0x226AF98", VA = "0x226AF98")]
	public void PrepareLoadScene()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x2265D10", Offset = "0x2265D10", VA = "0x2265D10")]
	public void PrepareLoadMenu()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x2261940", Offset = "0x2261940", VA = "0x2261940")]
	public void StartLoadingTrack(bool inFromMenu, bool inRestart = false)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x225F180", Offset = "0x225F180", VA = "0x225F180")]
	public void LaunchInvitePanel()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x22609A0", Offset = "0x22609A0", VA = "0x22609A0")]
	public void RecalculateListNetworkMenuPLayers(NetworkMenuPlayerZRace inNetworkMenuPlayerZRace)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x226B014", Offset = "0x226B014", VA = "0x226B014")]
	public void SetOwnNetworkMenuPlayer(NetworkMenuPlayerZRace inNetworkMenuPlayerZRace)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x226417C", Offset = "0x226417C", VA = "0x226417C")]
	public void SetOwnPlayerController(NetworkPlayerControllerZRace inNetworkPlayerControllerZRace)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x225F4F0", Offset = "0x225F4F0", VA = "0x225F4F0")]
	public void ChangeReadyState(bool inValue)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x225F054", Offset = "0x225F054", VA = "0x225F054")]
	public void SelectCar(int inValue)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x225F08C", Offset = "0x225F08C", VA = "0x225F08C")]
	public void LeaveLobby()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x225F530", Offset = "0x225F530", VA = "0x225F530")]
	public void AcceptInvite()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x2262808", Offset = "0x2262808", VA = "0x2262808")]
	public void OnTrackSelected(byte inSelectedMap)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x226AB98", Offset = "0x226AB98", VA = "0x226AB98")]
	public void OnSceneLoaded(bool toMenu, byte inIdTrack = byte.MaxValue)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x226B01C", Offset = "0x226B01C", VA = "0x226B01C")]
	public void OnLoadMenu()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x2260074", Offset = "0x2260074", VA = "0x2260074")]
	public void OnScreenFaded()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x226B134", Offset = "0x226B134", VA = "0x226B134")]
	public void OnJoinToRoom(string inRoomID, string inNetworkAddress)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x226B174", Offset = "0x226B174", VA = "0x226B174")]
	public void OnAcceptInvite()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x2262DD4", Offset = "0x2262DD4", VA = "0x2262DD4")]
	public void OnTrackLaunched()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x226B1A8", Offset = "0x226B1A8", VA = "0x226B1A8")]
	public void OnPresenceSet(string inMatchSessionID, string inLobbySessionID)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x22610E4", Offset = "0x22610E4", VA = "0x22610E4")]
	public void OnChangeUserData(byte inIndex)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x226B1C4", Offset = "0x226B1C4", VA = "0x226B1C4")]
	public NetworkRoomManagerZRace()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x226B2AC", Offset = "0x226B2AC", VA = "0x226B2AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BA98", Offset = "0xB2BA98")]
	private void <OnStartHost>b__23_0(ulong inRoomID)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x226B3F4", Offset = "0x226B3F4", VA = "0x226B3F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BAA8", Offset = "0xB2BAA8")]
	private void <OnStartHost>b__23_1(string inMatchID, string inLobbyID)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x226B414", Offset = "0x226B414", VA = "0x226B414")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BAB8", Offset = "0xB2BAB8")]
	private void <OnStartHost>b__23_2()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x226B41C", Offset = "0x226B41C", VA = "0x226B41C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BAC8", Offset = "0xB2BAC8")]
	private void <OnStopClient>b__25_0()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x226B568", Offset = "0x226B568", VA = "0x226B568")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BAD8", Offset = "0xB2BAD8")]
	private void <OnStopClient>b__25_2()
	{
	}
}
[Token(Token = "0x2000039")]
public class Move1 : MonoBehaviour
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] points;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] orients;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float accuracy;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 currentPosiition;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 targetPos;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 targetOr;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int indexp;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int indexo;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x21BEF58", Offset = "0x21BEF58", VA = "0x21BEF58")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x21BEFBC", Offset = "0x21BEFBC", VA = "0x21BEFBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x21BF1F0", Offset = "0x21BF1F0", VA = "0x21BF1F0")]
	public bool V3Equal(Vector3 a, Vector3 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x21BF220", Offset = "0x21BF220", VA = "0x21BF220")]
	public Move1()
	{
	}
}
[Token(Token = "0x200003A")]
public class Move_Player : MonoBehaviour
{
	[Token(Token = "0x200003B")]
	public enum SHIFT
	{
		[Token(Token = "0x400014D")]
		upshift,
		[Token(Token = "0x400014E")]
		downshift
	}

	[Token(Token = "0x200003C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EECC", Offset = "0xB1EECC")]
	private sealed class <Nitro>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Move_Player <>4__this;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool speedTrap;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool inBooster;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001CC")]
			[Address(RVA = "0x1FFC290", Offset = "0x1FFC290", VA = "0x1FFC290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001CE")]
			[Address(RVA = "0x1FFC2D8", Offset = "0x1FFC2D8", VA = "0x1FFC2D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x1FFBF64", Offset = "0x1FFBF64", VA = "0x1FFBF64")]
		[DebuggerHidden]
		public <Nitro>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x1FFBF90", Offset = "0x1FFBF90", VA = "0x1FFBF90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x1FFBF94", Offset = "0x1FFBF94", VA = "0x1FFBF94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x1FFC298", Offset = "0x1FFC298", VA = "0x1FFC298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EEDC", Offset = "0xB1EEDC")]
	private sealed class <SlowMo>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Move_Player <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D2")]
			[Address(RVA = "0x1FFC474", Offset = "0x1FFC474", VA = "0x1FFC474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D4")]
			[Address(RVA = "0x1FFC4BC", Offset = "0x1FFC4BC", VA = "0x1FFC4BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x1FFC2E0", Offset = "0x1FFC2E0", VA = "0x1FFC2E0")]
		[DebuggerHidden]
		public <SlowMo>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x1FFC30C", Offset = "0x1FFC30C", VA = "0x1FFC30C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x1FFC310", Offset = "0x1FFC310", VA = "0x1FFC310", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x1FFC47C", Offset = "0x1FFC47C", VA = "0x1FFC47C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EEEC", Offset = "0xB1EEEC")]
	private sealed class <BrakeZone>d__88 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Move_Player <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D8")]
			[Address(RVA = "0x1FFBF14", Offset = "0x1FFBF14", VA = "0x1FFBF14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001DA")]
			[Address(RVA = "0x1FFBF5C", Offset = "0x1FFBF5C", VA = "0x1FFBF5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x1FFBCE0", Offset = "0x1FFBCE0", VA = "0x1FFBCE0")]
		[DebuggerHidden]
		public <BrakeZone>d__88(int <>1__state)
		{
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x1FFBD0C", Offset = "0x1FFBD0C", VA = "0x1FFBD0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x1FFBD10", Offset = "0x1FFBD10", VA = "0x1FFBD10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x1FFBF1C", Offset = "0x1FFBF1C", VA = "0x1FFBF1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EEFC", Offset = "0xB1EEFC")]
	private sealed class <SpeedTrap>d__89 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Move_Player <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001DE")]
			[Address(RVA = "0x1FFC5D0", Offset = "0x1FFC5D0", VA = "0x1FFC5D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E0")]
			[Address(RVA = "0x1FFC618", Offset = "0x1FFC618", VA = "0x1FFC618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x1FFC4C4", Offset = "0x1FFC4C4", VA = "0x1FFC4C4")]
		[DebuggerHidden]
		public <SpeedTrap>d__89(int <>1__state)
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x1FFC4F0", Offset = "0x1FFC4F0", VA = "0x1FFC4F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x1FFC4F4", Offset = "0x1FFC4F4", VA = "0x1FFC4F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x1FFC5D8", Offset = "0x1FFC5D8", VA = "0x1FFC5D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000040")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EF0C", Offset = "0xB1EF0C")]
	private sealed class <gearShift>d__91 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Move_Player <>4__this;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int neededGear;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E4")]
			[Address(RVA = "0x1FFC760", Offset = "0x1FFC760", VA = "0x1FFC760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E6")]
			[Address(RVA = "0x1FFC7A8", Offset = "0x1FFC7A8", VA = "0x1FFC7A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x1FFC620", Offset = "0x1FFC620", VA = "0x1FFC620")]
		[DebuggerHidden]
		public <gearShift>d__91(int <>1__state)
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x1FFC64C", Offset = "0x1FFC64C", VA = "0x1FFC64C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x1FFC650", Offset = "0x1FFC650", VA = "0x1FFC650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x1FFC768", Offset = "0x1FFC768", VA = "0x1FFC768", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000041")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EF1C", Offset = "0xB1EF1C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DOGetter<float> <>9__101_0;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static DOSetter<float> <>9__101_1;

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x1FFBCC8", Offset = "0x1FFBCC8", VA = "0x1FFBCC8")]
		public <>c()
		{
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x1FFBCD0", Offset = "0x1FFBCD0", VA = "0x1FFBCD0")]
		internal float <DisableSlowMo>b__101_0()
		{
			return default(float);
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x1FFBCD8", Offset = "0x1FFBCD8", VA = "0x1FFBCD8")]
		internal void <DisableSlowMo>b__101_1(float x)
		{
		}
	}

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator Animator;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator hitAnim;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2273C", Offset = "0xB2273C")]
	public bool heroMode;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float durability;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float horsePower;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxHorsePower;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float acceleration;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float deceleration;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float brakeDeceleration;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxSpeed;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float vibration;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TempGasController TempGasController;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22774", Offset = "0xB22774")]
	public float nitroDuration;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float nitroCooldown;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float nitroBoost;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float drag;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int nitroCapacity;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int slowMoCapacity;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float shakeCoefficient;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float accelerationFactor;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float angularFactor;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float transmissionRegen;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform spaceshipOrigin;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform spaceshipBodyHub;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform LeftHandDirection;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform RightHandDirection;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform HandDirection;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform localSpaceship;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform verticalOffset;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform horizontalOffset;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool brakeEffect;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float power;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 angularSpeed;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 force;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float transmissionCoeff;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Quaternion prevRotation;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool isVibrating;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 startOrigin;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 prevVelocity;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool inNitro;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	public bool inSlow;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
	private bool inNitroCooldown;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float wingAnimSpeed;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public int gear;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool neutral;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float RPM;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float shiftDuration;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public int numberOfGears;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float shiftRPMCoefficient;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float MaxRPM;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float downshiftRPM;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float shiftedRPM;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float[] gearRatios;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float minPower;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float maxPower;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float nitroStop;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public boolHandler boolHandler;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public EventInstance slowMo;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float crashTolerance;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject leftHand;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject rightHand;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Camera mainCamera;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private CarInterface carInterface;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private SoundsFmod mSoundFmod;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public PhysAnchor mPhysAnchor;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private StudioEventEmitter[] mStudioEventEmitters;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private GameObject mSpaceShipObject;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public RaceManager mRaceManager;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB227BC", Offset = "0xB227BC")]
	public NetworkPlayerControllerZRace networkPlayerController;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB227F4", Offset = "0xB227F4")]
	public float durationOneSlipStreamPoint;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public int maxCountSlipStreamPoints;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public int countSlipStreamPoints;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float timerSlipStream;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x21BF228", Offset = "0x21BF228", VA = "0x21BF228")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x21BF2CC", Offset = "0x21BF2CC", VA = "0x21BF2CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x21BFB0C", Offset = "0x21BFB0C", VA = "0x21BFB0C")]
	private void CalculateMaxSpeed()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x21BFBB4", Offset = "0x21BFBB4", VA = "0x21BFBB4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x21C0848", Offset = "0x21C0848", VA = "0x21C0848")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x21C0954", Offset = "0x21C0954", VA = "0x21C0954")]
	public void AddSlipStreamPoint()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x21C08B4", Offset = "0x21C08B4", VA = "0x21C08B4")]
	public void RemoveSlipStreamPoint()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x21C0A0C", Offset = "0x21C0A0C", VA = "0x21C0A0C")]
	private void NitroCall(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x21C0B2C", Offset = "0x21C0B2C", VA = "0x21C0B2C")]
	public void ActivateNitro()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x21C0B60", Offset = "0x21C0B60", VA = "0x21C0B60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2BAE8", Offset = "0xB2BAE8")]
	public IEnumerator Nitro(bool speedTrap = false, bool inBooster = false)
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x21C0C00", Offset = "0x21C0C00", VA = "0x21C0C00")]
	private void SlowMoCall(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x21C0D18", Offset = "0x21C0D18", VA = "0x21C0D18")]
	public void ActivateSlowMo()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x21C0D44", Offset = "0x21C0D44", VA = "0x21C0D44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2BB50", Offset = "0xB2BB50")]
	public IEnumerator SlowMo()
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x21C0DC4", Offset = "0x21C0DC4", VA = "0x21C0DC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2BBB8", Offset = "0xB2BBB8")]
	public IEnumerator BrakeZone(float duration)
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x21C0E44", Offset = "0x21C0E44", VA = "0x21C0E44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2BC20", Offset = "0xB2BC20")]
	public IEnumerator SpeedTrap(float force)
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x21C0714", Offset = "0x21C0714", VA = "0x21C0714")]
	private void HandleGears()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x21C0EC4", Offset = "0x21C0EC4", VA = "0x21C0EC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2BC88", Offset = "0xB2BC88")]
	private IEnumerator gearShift(int neededGear)
	{
		return null;
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x21C0F4C", Offset = "0x21C0F4C", VA = "0x21C0F4C")]
	private void VibroMove()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x21C0F50", Offset = "0x21C0F50", VA = "0x21C0F50")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x21C1288", Offset = "0x21C1288", VA = "0x21C1288")]
	private void OnCollisionStay(Collision other)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x21C1434", Offset = "0x21C1434", VA = "0x21C1434")]
	public void OnHit(Vector3 inForce)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x21C1454", Offset = "0x21C1454", VA = "0x21C1454")]
	private void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x21C082C", Offset = "0x21C082C", VA = "0x21C082C")]
	private float Remap(float s, float a1, float a2, float b1, float b2)
	{
		return default(float);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x21C14B0", Offset = "0x21C14B0", VA = "0x21C14B0")]
	public void SetActiveSpaceShip(bool inState)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x21C14D4", Offset = "0x21C14D4", VA = "0x21C14D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x21C1530", Offset = "0x21C1530", VA = "0x21C1530")]
	public void DestroyShipLogic()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x21C1798", Offset = "0x21C1798", VA = "0x21C1798")]
	private void DisableSlowMo()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x21C1A2C", Offset = "0x21C1A2C", VA = "0x21C1A2C")]
	public void ChangeClippingFarMainCamera(float inClippingFar)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x21C1A4C", Offset = "0x21C1A4C", VA = "0x21C1A4C")]
	public Move_Player()
	{
	}
}
[Token(Token = "0x2000042")]
public class Move_Player_Photon : MonoBehaviourPun
{
	[Token(Token = "0x2000043")]
	public enum SHIFT
	{
		[Token(Token = "0x40001AB")]
		upshift,
		[Token(Token = "0x40001AC")]
		downshift
	}

	[Token(Token = "0x2000044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EF2C", Offset = "0xB1EF2C")]
	private sealed class <Nitro>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Move_Player_Photon <>4__this;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool speedTrap;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001FE")]
			[Address(RVA = "0x1FFCB84", Offset = "0x1FFCB84", VA = "0x1FFCB84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000200")]
			[Address(RVA = "0x1FFCBCC", Offset = "0x1FFCBCC", VA = "0x1FFCBCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x1FFC968", Offset = "0x1FFC968", VA = "0x1FFC968")]
		[DebuggerHidden]
		public <Nitro>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x1FFC994", Offset = "0x1FFC994", VA = "0x1FFC994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x1FFC998", Offset = "0x1FFC998", VA = "0x1FFC998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x1FFCB8C", Offset = "0x1FFCB8C", VA = "0x1FFCB8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EF3C", Offset = "0xB1EF3C")]
	private sealed class <SlowMo>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000204")]
			[Address(RVA = "0x1FFCCB8", Offset = "0x1FFCCB8", VA = "0x1FFCCB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000206")]
			[Address(RVA = "0x1FFCD00", Offset = "0x1FFCD00", VA = "0x1FFCD00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0x1FFCBD4", Offset = "0x1FFCBD4", VA = "0x1FFCBD4")]
		[DebuggerHidden]
		public <SlowMo>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0x1FFCC00", Offset = "0x1FFCC00", VA = "0x1FFCC00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0x1FFCC04", Offset = "0x1FFCC04", VA = "0x1FFCC04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0x1FFCCC0", Offset = "0x1FFCCC0", VA = "0x1FFCCC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000046")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EF4C", Offset = "0xB1EF4C")]
	private sealed class <BrakeZone>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Move_Player_Photon <>4__this;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600020A")]
			[Address(RVA = "0x1FFC918", Offset = "0x1FFC918", VA = "0x1FFC918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600020C")]
			[Address(RVA = "0x1FFC960", Offset = "0x1FFC960", VA = "0x1FFC960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0x1FFC7B0", Offset = "0x1FFC7B0", VA = "0x1FFC7B0")]
		[DebuggerHidden]
		public <BrakeZone>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0x1FFC7DC", Offset = "0x1FFC7DC", VA = "0x1FFC7DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0x1FFC7E0", Offset = "0x1FFC7E0", VA = "0x1FFC7E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0x1FFC920", Offset = "0x1FFC920", VA = "0x1FFC920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000047")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EF5C", Offset = "0xB1EF5C")]
	private sealed class <SpeedTrap>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Move_Player_Photon <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000210")]
			[Address(RVA = "0x1FFCE1C", Offset = "0x1FFCE1C", VA = "0x1FFCE1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000212")]
			[Address(RVA = "0x1FFCE64", Offset = "0x1FFCE64", VA = "0x1FFCE64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0x1FFCD08", Offset = "0x1FFCD08", VA = "0x1FFCD08")]
		[DebuggerHidden]
		public <SpeedTrap>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x600020E")]
		[Address(RVA = "0x1FFCD34", Offset = "0x1FFCD34", VA = "0x1FFCD34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0x1FFCD38", Offset = "0x1FFCD38", VA = "0x1FFCD38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0x1FFCE24", Offset = "0x1FFCE24", VA = "0x1FFCE24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000048")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EF6C", Offset = "0xB1EF6C")]
	private sealed class <gearShift>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Move_Player_Photon <>4__this;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int neededGear;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000216")]
			[Address(RVA = "0x1FFCF9C", Offset = "0x1FFCF9C", VA = "0x1FFCF9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000218")]
			[Address(RVA = "0x1FFCFE4", Offset = "0x1FFCFE4", VA = "0x1FFCFE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x1FFCE6C", Offset = "0x1FFCE6C", VA = "0x1FFCE6C")]
		[DebuggerHidden]
		public <gearShift>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x1FFCE98", Offset = "0x1FFCE98", VA = "0x1FFCE98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x1FFCE9C", Offset = "0x1FFCE9C", VA = "0x1FFCE9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x1FFCFA4", Offset = "0x1FFCFA4", VA = "0x1FFCFA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool dontMove;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool SlipStream;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxSpeedLimit;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float defaultMaxSpeedLimit;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxSpeedIncrease;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float accelerationLimit;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float defaultAcceleratiomLimit;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float accelerationIncrease;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator Animator;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator hitAnim;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2282C", Offset = "0xB2282C")]
	public float acceleration;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float deceleration;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float brakeDeceleration;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxAngle;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxSpeed;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float vibration;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TempGasController TempGasController;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float nitroSpeed;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float nitroDuration;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float nitroCooldown;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float nitroBoost;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float drag;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int nitroCapacity;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float shakeCoefficient;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float accelerationFactor;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float angularFactor;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float transmissionRegen;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform spaceshipOrigin;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform localSpaceship;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool brakeEffect;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float power;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector3 angularSpeed;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 force;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float transmissionCoeff;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 targetVibration;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion prevRotation;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool isVibrating;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 startOrigin;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 prevVelocity;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool inNitro;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private bool inNitroCooldown;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float wingAnimSpeed;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private SHIFT shift;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int gear;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool neutral;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float RPM;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float shiftDuration;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public int numberOfGears;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float shiftRPMCoefficient;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float MaxRPM;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float shiftedRPM;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float[] gearRatios;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float minPower;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float maxPower;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float nitroStop;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public StudioEventEmitter switchGear;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public StudioEventEmitter nitro;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public StudioEventEmitter nitroVoice;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public StudioEventEmitter scrapping;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public StudioEventEmitter crash;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public StudioEventEmitter speedTrap;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public StudioEventEmitter brakeTrap;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float crashTolerance;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject brakeEffectYes;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject brakeEffectNo;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AudioSource legacySpeedTrap;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public VisualEffect VFXSparks;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool adjustOffset;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private Vector3 sparksPoint;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x2251090", Offset = "0x2251090", VA = "0x2251090")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x2251240", Offset = "0x2251240", VA = "0x2251240")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2BE80", Offset = "0xB2BE80")]
	public IEnumerator Nitro(bool speedTrap = false)
	{
		return null;
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x22512CC", Offset = "0x22512CC", VA = "0x22512CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2BEE8", Offset = "0xB2BEE8")]
	public IEnumerator SlowMo()
	{
		return null;
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x2251328", Offset = "0x2251328", VA = "0x2251328")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2BF50", Offset = "0xB2BF50")]
	public IEnumerator BrakeZone(float duration)
	{
		return null;
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x22513B8", Offset = "0x22513B8", VA = "0x22513B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2BFB8", Offset = "0xB2BFB8")]
	public IEnumerator SpeedTrap(float force)
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x2251438", Offset = "0x2251438", VA = "0x2251438")]
	private void HandleGears()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x2251550", Offset = "0x2251550", VA = "0x2251550")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2C020", Offset = "0xB2C020")]
	private IEnumerator gearShift(int neededGear)
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x22515D8", Offset = "0x22515D8", VA = "0x22515D8")]
	private void Vibrate()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x22518E0", Offset = "0x22518E0", VA = "0x22518E0")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x2251B34", Offset = "0x2251B34", VA = "0x2251B34")]
	private void OnCollisionStay(Collision other)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x2251ADC", Offset = "0x2251ADC", VA = "0x2251ADC")]
	public void MorphHit()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x2251C80", Offset = "0x2251C80", VA = "0x2251C80")]
	private void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x2251CEC", Offset = "0x2251CEC", VA = "0x2251CEC")]
	private float Remap(float s, float a1, float a2, float b1, float b2)
	{
		return default(float);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x2251D08", Offset = "0x2251D08", VA = "0x2251D08")]
	private void onTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x2251DD0", Offset = "0x2251DD0", VA = "0x2251DD0")]
	private void onTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x2251E48", Offset = "0x2251E48", VA = "0x2251E48")]
	public Move_Player_Photon()
	{
	}
}
[Token(Token = "0x2000049")]
public class MyCustomReader : MonoBehaviour
{
	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CustomAnim customAnim;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isPlaying;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int FrameTiming;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int FrameTotalCount;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public List<float> positionX;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public List<float> positionY;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<float> positionZ;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<float> rotationX;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<float> rotationY;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public List<float> rotationZ;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public List<float> rotationW;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public List<float> deltaTime;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x2252564", Offset = "0x2252564", VA = "0x2252564")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x225281C", Offset = "0x225281C", VA = "0x225281C")]
	public void Play()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x2252894", Offset = "0x2252894", VA = "0x2252894")]
	public List<float> ConvertStringToFloatList(string in_array)
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x22529C8", Offset = "0x22529C8", VA = "0x22529C8")]
	public MyCustomReader()
	{
	}
}
[Token(Token = "0x200004A")]
public class NickManager : MonoBehaviour
{
	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject keyboard;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject flags;

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x25296B4", Offset = "0x25296B4", VA = "0x25296B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x25296B8", Offset = "0x25296B8", VA = "0x25296B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x25296BC", Offset = "0x25296BC", VA = "0x25296BC")]
	public void CloseKeyboard()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x25297AC", Offset = "0x25297AC", VA = "0x25297AC")]
	public void ChoseFlag()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x25297B0", Offset = "0x25297B0", VA = "0x25297B0")]
	public NickManager()
	{
	}
}
[Token(Token = "0x200004B")]
public class NitroCapsule : MonoBehaviour
{
	[Token(Token = "0x200004C")]
	public enum Type
	{
		[Token(Token = "0x40001D6")]
		None,
		[Token(Token = "0x40001D7")]
		Nitro,
		[Token(Token = "0x40001D8")]
		Money
	}

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem particleSystemCircle;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer[] meshRenderers;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StudioEventEmitter grabSound;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Type type;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool used;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float durationEffect;

	[Token(Token = "0x40001D3")]
	private const ushort MoneyForCapsule = 100;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private byte countMeshRenderers;

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x2529CBC", Offset = "0x2529CBC", VA = "0x2529CBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x2529CE0", Offset = "0x2529CE0", VA = "0x2529CE0")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x252A114", Offset = "0x252A114", VA = "0x252A114")]
	public NitroCapsule()
	{
	}
}
[Token(Token = "0x200004D")]
[ExecuteInEditMode]
public class PrefabsTrapsReplacer : MonoBehaviour
{
	[Token(Token = "0x6000225")]
	[Address(RVA = "0x20BD8D8", Offset = "0x20BD8D8", VA = "0x20BD8D8")]
	public PrefabsTrapsReplacer()
	{
	}
}
[Token(Token = "0x200004E")]
[ExecuteInEditMode]
public class Statistics : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200004F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EF9C", Offset = "0xB1EF9C")]
	private sealed class <>c
	{
		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<KeyValuePair<string, float>> <>9__18_0;

		[Token(Token = "0x6000238")]
		[Address(RVA = "0x200C604", Offset = "0x200C604", VA = "0x200C604")]
		public <>c()
		{
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0x200C60C", Offset = "0x200C60C", VA = "0x200C60C")]
		internal int <DrawGraphic>b__18_0(KeyValuePair<string, float> pair1, KeyValuePair<string, float> pair2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40001D9")]
	private const string dummyID = "_DUMMY_CONST_ID_";

	[Token(Token = "0x40001DA")]
	private const string dummyIDPlayfab = "BFF54F7DAA392CB2";

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerObj;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject graphicObj;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform axis;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform points;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string LocalPlayer_PlayFabId;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] scenes;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int sceneNumber;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int numberOfDots;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool getData;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool drawGraphic;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool clearGraphic;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool getFullData;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<string, float> results;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Dictionary<string, UserDataRecord>> fullRecords;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x27BD170", Offset = "0x27BD170", VA = "0x27BD170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x27BD384", Offset = "0x27BD384", VA = "0x27BD384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x27BD7AC", Offset = "0x27BD7AC", VA = "0x27BD7AC")]
	private void DrawGraphic()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x27BD6B0", Offset = "0x27BD6B0", VA = "0x27BD6B0")]
	public void ClearGraphic()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x27BDF60", Offset = "0x27BDF60", VA = "0x27BDF60")]
	private void GetAllStats(int startIndex = 0, int numOfPlayers = 100)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x27BE14C", Offset = "0x27BE14C", VA = "0x27BE14C")]
	private int SortByTime(Dictionary<string, UserDataRecord> data1, Dictionary<string, UserDataRecord> data2)
	{
		return default(int);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x27BE3C4", Offset = "0x27BE3C4", VA = "0x27BE3C4")]
	private void DuplicateData()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x27BD470", Offset = "0x27BD470", VA = "0x27BD470")]
	private void LogStats(int startIndex = 0, int numOfPlayers = 100)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x27BE658", Offset = "0x27BE658", VA = "0x27BE658")]
	private void OnLogFail(PlayFabError obj)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x27BD174", Offset = "0x27BD174", VA = "0x27BD174")]
	private void LogIn()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x27BE6CC", Offset = "0x27BE6CC", VA = "0x27BE6CC")]
	private void OnLoginSuccess(LoginResult result)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x27BE9D8", Offset = "0x27BE9D8", VA = "0x27BE9D8")]
	private void OnError(PlayFabError error)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x27BEA74", Offset = "0x27BEA74", VA = "0x27BEA74")]
	public Statistics()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x27BEB80", Offset = "0x27BEB80", VA = "0x27BEB80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C218", Offset = "0xB2C218")]
	private void <GetAllStats>b__20_0(GetLeaderboardResult result)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x27BF264", Offset = "0x27BF264", VA = "0x27BF264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C228", Offset = "0xB2C228")]
	private void <GetAllStats>b__20_1(GetUserDataResult enemyResult)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x27BF78C", Offset = "0x27BF78C", VA = "0x27BF78C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C238", Offset = "0xB2C238")]
	private void <LogStats>b__23_0(GetLeaderboardResult result)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x27BFB48", Offset = "0x27BFB48", VA = "0x27BFB48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C248", Offset = "0xB2C248")]
	private void <LogStats>b__23_1(GetUserDataResult dataResult)
	{
	}
}
[Token(Token = "0x2000050")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x2110D50", Offset = "0x2110D50", VA = "0x2110D50")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x2110EB4", Offset = "0x2110EB4", VA = "0x2110EB4")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x2111250", Offset = "0x2111250", VA = "0x2111250")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x21113F4", Offset = "0x21113F4", VA = "0x21113F4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x2111420", Offset = "0x2111420", VA = "0x2111420")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000051")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x20BCC64", Offset = "0x20BCC64", VA = "0x20BCC64")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x20BCCF8", Offset = "0x20BCCF8", VA = "0x20BCCF8")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x20BCE6C", Offset = "0x20BCE6C", VA = "0x20BCE6C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000052")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000031")]
	public bool IsVisible
	{
		[Token(Token = "0x6000242")]
		[Address(RVA = "0x23C8CA4", Offset = "0x23C8CA4", VA = "0x23C8CA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x23C8CAC", Offset = "0x23C8CAC", VA = "0x23C8CAC")]
		set
		{
		}
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x23C8DE8", Offset = "0x23C8DE8", VA = "0x23C8DE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x23C8FB0", Offset = "0x23C8FB0", VA = "0x23C8FB0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x23C8FB8", Offset = "0x23C8FB8", VA = "0x23C8FB8")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000053")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000054")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x200A284", Offset = "0x200A284", VA = "0x200A284")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000055")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB22904", Offset = "0xB22904")]
		public float FakeLatencyMax;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2291C", Offset = "0xB2291C")]
		public float FakeLatencyMin;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB22934", Offset = "0xB22934")]
		public float LatencyWeight;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2294C", Offset = "0xB2294C")]
		public int MaxSamples;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x200A28C", Offset = "0x200A28C", VA = "0x200A28C")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x200A3C4", Offset = "0x200A3C4", VA = "0x200A3C4")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x20C2928", Offset = "0x20C2928", VA = "0x20C2928")]
	private void Start()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x20C2A80", Offset = "0x20C2A80", VA = "0x20C2A80")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x20C2E5C", Offset = "0x20C2E5C", VA = "0x20C2E5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x20C2DA8", Offset = "0x20C2DA8", VA = "0x20C2DA8")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x20C3188", Offset = "0x20C3188", VA = "0x20C3188")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x20C3468", Offset = "0x20C3468", VA = "0x20C3468")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000056")]
public class P2PManager
{
	[Token(Token = "0x2000057")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000202")]
		Update = 1
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x21126FC", Offset = "0x21126FC", VA = "0x21126FC")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x21127E4", Offset = "0x21127E4", VA = "0x21127E4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x21128C8", Offset = "0x21128C8", VA = "0x21128C8")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x2112948", Offset = "0x2112948", VA = "0x2112948")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x2112AB8", Offset = "0x2112AB8", VA = "0x2112AB8")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x2112D08", Offset = "0x2112D08", VA = "0x2112D08")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x211310C", Offset = "0x211310C", VA = "0x211310C")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x21133D0", Offset = "0x21133D0", VA = "0x21133D0")]
	public void processAvatarPacket(RemotePlayer remote, byte[] packet, int offset)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x2112ED8", Offset = "0x2112ED8", VA = "0x2112ED8")]
	private void PackByte(byte b, byte[] buf, int offset)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x2113304", Offset = "0x2113304", VA = "0x2113304")]
	private byte ReadByte(byte[] buf, int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x2112FC4", Offset = "0x2112FC4", VA = "0x2112FC4")]
	private void PackFloat(float f, byte[] buf, int offset)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x2113608", Offset = "0x2113608", VA = "0x2113608")]
	private float ReadFloat(byte[] buf, int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x2112F20", Offset = "0x2112F20", VA = "0x2112F20")]
	private void PackULong(ulong u, byte[] buf, int offset)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x2113348", Offset = "0x2113348", VA = "0x2113348")]
	private ulong ReadULong(byte[] buf, int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x2113068", Offset = "0x2113068", VA = "0x2113068")]
	private void PackUInt32(uint u, byte[] buf, int offset)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x2113690", Offset = "0x2113690", VA = "0x2113690")]
	private uint ReadUInt32(byte[] buf, int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000058")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x2021778", Offset = "0x2021778", VA = "0x2021778", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x20217BC", Offset = "0x20217BC", VA = "0x20217BC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x20217F4", Offset = "0x20217F4", VA = "0x20217F4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x202181C", Offset = "0x202181C", VA = "0x202181C")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x20219C4", Offset = "0x20219C4", VA = "0x20219C4")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x2021A44", Offset = "0x2021A44", VA = "0x2021A44")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x2021A98", Offset = "0x2021A98", VA = "0x2021A98")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000059")]
public class RemotePlayer
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x20C3534", Offset = "0x20C3534", VA = "0x20C3534")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200005A")]
public class RoomManager
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x20C4034", Offset = "0x20C4034", VA = "0x20C4034")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x20C4150", Offset = "0x20C4150", VA = "0x20C4150")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x20C42C8", Offset = "0x20C42C8", VA = "0x20C42C8")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x20C440C", Offset = "0x20C440C", VA = "0x20C440C")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x20C44E8", Offset = "0x20C44E8", VA = "0x20C44E8")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x20C4614", Offset = "0x20C4614", VA = "0x20C4614")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x20C42F8", Offset = "0x20C42F8", VA = "0x20C42F8")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x20C469C", Offset = "0x20C469C", VA = "0x20C469C")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x20C4E34", Offset = "0x20C4E34", VA = "0x20C4E34")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x20C51A8", Offset = "0x20C51A8", VA = "0x20C51A8")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x20C49F0", Offset = "0x20C49F0", VA = "0x20C49F0")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x200005B")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200005C")]
	public enum State
	{
		[Token(Token = "0x400023A")]
		INITIALIZING,
		[Token(Token = "0x400023B")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x400023C")]
		CREATING_A_ROOM,
		[Token(Token = "0x400023D")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x400023E")]
		JOINING_A_ROOM,
		[Token(Token = "0x400023F")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000240")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000241")]
		SHUTDOWN
	}

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000032")]
	public static State CurrentState
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x24A56FC", Offset = "0x24A56FC", VA = "0x24A56FC")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000033")]
	public static ulong MyID
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x24A576C", Offset = "0x24A576C", VA = "0x24A576C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000034")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0x24A584C", Offset = "0x24A584C", VA = "0x24A584C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x24A3864", Offset = "0x24A3864", VA = "0x24A3864", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x24A3C08", Offset = "0x24A3C08", VA = "0x24A3C08", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x24A4380", Offset = "0x24A4380", VA = "0x24A4380")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x24A46B8", Offset = "0x24A46B8", VA = "0x24A46B8", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x24A46BC", Offset = "0x24A46BC", VA = "0x24A46BC")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x24A47DC", Offset = "0x24A47DC", VA = "0x24A47DC")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x24A4F2C", Offset = "0x24A4F2C", VA = "0x24A4F2C")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x24A5308", Offset = "0x24A5308", VA = "0x24A5308")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x24A550C", Offset = "0x24A550C", VA = "0x24A550C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x24A5690", Offset = "0x24A5690", VA = "0x24A5690")]
	public void AddUser(ulong userID, RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x24A4010", Offset = "0x24A4010", VA = "0x24A4010")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x24A4538", Offset = "0x24A4538", VA = "0x24A4538")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x24A40CC", Offset = "0x24A40CC", VA = "0x24A40CC")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x24A5974", Offset = "0x24A5974", VA = "0x24A5974")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x24A5B1C", Offset = "0x24A5B1C", VA = "0x24A5B1C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x24A5C28", Offset = "0x24A5C28", VA = "0x24A5C28")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x24A5D80", Offset = "0x24A5D80", VA = "0x24A5D80")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x24A5E6C", Offset = "0x24A5E6C", VA = "0x24A5E6C")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x24A45F8", Offset = "0x24A45F8", VA = "0x24A45F8")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x24A63BC", Offset = "0x24A63BC", VA = "0x24A63BC")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x24A6458", Offset = "0x24A6458", VA = "0x24A6458")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x24A61A4", Offset = "0x24A61A4", VA = "0x24A61A4")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x24A6668", Offset = "0x24A6668", VA = "0x24A6668")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x24A37E0", Offset = "0x24A37E0", VA = "0x24A37E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB2C258", Offset = "0xB2C258")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x24A67B4", Offset = "0x24A67B4", VA = "0x24A67B4")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x24A6898", Offset = "0x24A6898", VA = "0x24A6898")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200005D")]
public class VoipManager
{
	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1FE3FFC", Offset = "0x1FE3FFC", VA = "0x1FE3FFC")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1FE40E4", Offset = "0x1FE40E4", VA = "0x1FE40E4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1FE41C8", Offset = "0x1FE41C8", VA = "0x1FE41C8")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1FE4248", Offset = "0x1FE4248", VA = "0x1FE4248")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1FE43B8", Offset = "0x1FE43B8", VA = "0x1FE43B8")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200005E")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x23C8950", Offset = "0x23C8950", VA = "0x23C8950")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x23C89E0", Offset = "0x23C89E0", VA = "0x23C89E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x23C8B54", Offset = "0x23C8B54", VA = "0x23C8B54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x23C8BB8", Offset = "0x23C8BB8", VA = "0x23C8BB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x23C8A1C", Offset = "0x23C8A1C", VA = "0x23C8A1C")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x23C8C84", Offset = "0x23C8C84", VA = "0x23C8C84")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x23C8C9C", Offset = "0x23C8C9C", VA = "0x23C8C9C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200005F")]
public class AvatarLayer
{
	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x22CA57C", Offset = "0x22CA57C", VA = "0x22CA57C")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000060")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x2014148", Offset = "0x2014148", VA = "0x2014148")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000061")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000062")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x1FFE8B0", Offset = "0x1FFE8B0", VA = "0x1FFE8B0")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000063")]
	public enum HandType
	{
		[Token(Token = "0x40002A3")]
		Right,
		[Token(Token = "0x40002A4")]
		Left,
		[Token(Token = "0x40002A5")]
		Max
	}

	[Token(Token = "0x2000064")]
	public enum HandJoint
	{
		[Token(Token = "0x40002A7")]
		HandBase,
		[Token(Token = "0x40002A8")]
		IndexBase,
		[Token(Token = "0x40002A9")]
		IndexTip,
		[Token(Token = "0x40002AA")]
		ThumbBase,
		[Token(Token = "0x40002AB")]
		ThumbTip,
		[Token(Token = "0x40002AC")]
		Max
	}

	[Token(Token = "0x2000065")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EFAC", Offset = "0xB1EFAC")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D7")]
			[Address(RVA = "0x1FFE860", Offset = "0x1FFE860", VA = "0x1FFE860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D9")]
			[Address(RVA = "0x1FFE8A8", Offset = "0x1FFE8A8", VA = "0x1FFE8A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x1FFE684", Offset = "0x1FFE684", VA = "0x1FFE684")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x1FFE6B0", Offset = "0x1FFE6B0", VA = "0x1FFE6B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x1FFE6B4", Offset = "0x1FFE6B4", VA = "0x1FFE6B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x1FFE868", Offset = "0x1FFE868", VA = "0x1FFE868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22964", Offset = "0xB22964")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2299C", Offset = "0xB2299C")]
	public bool EnableBody;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB229D4", Offset = "0xB229D4")]
	public bool RecordPackets;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22A0C", Offset = "0xB22A0C")]
	public bool StartWithControllers;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22A44", Offset = "0xB22A44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22A44", Offset = "0xB22A44")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22AB4", Offset = "0xB22AB4")]
	private bool CombineMeshes;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22AEC", Offset = "0xB22AEC")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22B24", Offset = "0xB22B24")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22B5C", Offset = "0xB22B5C")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB22B94", Offset = "0xB22B94")]
	public bool EnableLaughter;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000283")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000285")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000286")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000287")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000288")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000289")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x2535FB0", Offset = "0x2535FB0", VA = "0x2535FB0")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x2536460", Offset = "0x2536460", VA = "0x2536460")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x25364F4", Offset = "0x25364F4", VA = "0x25364F4")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x253655C", Offset = "0x253655C", VA = "0x253655C")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x253668C", Offset = "0x253668C", VA = "0x253668C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x253676C", Offset = "0x253676C", VA = "0x253676C")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x2536840", Offset = "0x2536840", VA = "0x2536840")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x2536A20", Offset = "0x2536A20", VA = "0x2536A20")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x2536B04", Offset = "0x2536B04", VA = "0x2536B04")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x2536B84", Offset = "0x2536B84", VA = "0x2536B84")]
	internal static void ConvertTransform(float[] transform, ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x2536C6C", Offset = "0x2536C6C", VA = "0x2536C6C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x2536CF8", Offset = "0x2536CF8", VA = "0x2536CF8")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x2536D80", Offset = "0x2536D80", VA = "0x2536D80")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x2536D98", Offset = "0x2536D98", VA = "0x2536D98")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60002AD")]
	private void AddAvatarComponent<T>(T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x2537204", Offset = "0x2537204", VA = "0x2537204")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x2537574", Offset = "0x2537574", VA = "0x2537574")]
	private static bool UpdatePoseRoot(Transform poseRoot, Transform cachedPoseRoot, Transform[] cachedPoseJoints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x2537760", Offset = "0x2537760", VA = "0x2537760")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x25379AC", Offset = "0x25379AC", VA = "0x25379AC")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x2537AA0", Offset = "0x2537AA0", VA = "0x2537AA0")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x2537EA8", Offset = "0x2537EA8", VA = "0x2537EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x25381E0", Offset = "0x25381E0", VA = "0x25381E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x2538C24", Offset = "0x2538C24", VA = "0x2538C24")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x2538C6C", Offset = "0x2538C6C", VA = "0x2538C6C")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x2537D60", Offset = "0x2537D60", VA = "0x2537D60")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x2537E04", Offset = "0x2537E04", VA = "0x2537E04")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x2538C9C", Offset = "0x2538C9C", VA = "0x2538C9C")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x25385B8", Offset = "0x25385B8", VA = "0x25385B8")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x2538F14", Offset = "0x2538F14", VA = "0x2538F14")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x2538D00", Offset = "0x2538D00", VA = "0x2538D00")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x25391E0", Offset = "0x25391E0", VA = "0x25391E0")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x2539654", Offset = "0x2539654", VA = "0x2539654")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x2539A68", Offset = "0x2539A68", VA = "0x2539A68")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x2539BBC", Offset = "0x2539BBC", VA = "0x2539BBC")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x2539DA0", Offset = "0x2539DA0", VA = "0x2539DA0")]
	public void GetPointingDirection(HandType hand, Vector3 forward, Vector3 up)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x25387A4", Offset = "0x25387A4", VA = "0x25387A4")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x2539E74", Offset = "0x2539E74", VA = "0x2539E74")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x25385C8", Offset = "0x25385C8", VA = "0x25385C8")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x2539F64", Offset = "0x2539F64", VA = "0x2539F64")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x253A620", Offset = "0x253A620", VA = "0x253A620")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x253AB04", Offset = "0x253AB04", VA = "0x253AB04")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x253AB2C", Offset = "0x253AB2C", VA = "0x253AB2C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x253AB54", Offset = "0x253AB54", VA = "0x253AB54")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x2538AB0", Offset = "0x2538AB0", VA = "0x2538AB0")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x253A034", Offset = "0x253A034", VA = "0x253A034")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x253AF8C", Offset = "0x253AF8C", VA = "0x253AF8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2C2C0", Offset = "0xB2C2C0")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x253B00C", Offset = "0x253B00C", VA = "0x253B00C")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x253AE44", Offset = "0x253AE44", VA = "0x253AE44")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x253B0D0", Offset = "0x253B0D0", VA = "0x253B0D0")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x253B1B8", Offset = "0x253B1B8", VA = "0x253B1B8")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x253AB90", Offset = "0x253AB90", VA = "0x253AB90")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x253B2A0", Offset = "0x253B2A0", VA = "0x253B2A0")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000066")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x253B4AC", Offset = "0x253B4AC", VA = "0x253B4AC")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000067")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x253B57C", Offset = "0x253B57C", VA = "0x253B57C")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x253C838", Offset = "0x253C838", VA = "0x253C838")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x253C418", Offset = "0x253C418", VA = "0x253C418")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x253C18C", Offset = "0x253C18C", VA = "0x253C18C")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x253C280", Offset = "0x253C280", VA = "0x253C280")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, [Out] long vertexCount, [Out] IntPtr vertexBuffer, [Out] uint indexCount, [Out] IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x253CAC8", Offset = "0x253CAC8", VA = "0x253CAC8")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000068")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40002B5")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x253D06C", Offset = "0x253D06C", VA = "0x253D06C")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000069")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x253D2EC", Offset = "0x253D2EC", VA = "0x253D2EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x253D754", Offset = "0x253D754", VA = "0x253D754")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200006A")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x25398F8", Offset = "0x25398F8", VA = "0x25398F8")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x253D89C", Offset = "0x253D89C", VA = "0x253D89C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x253D9CC", Offset = "0x253D9CC", VA = "0x253D9CC")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200006B")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x253DA34", Offset = "0x253DA34", VA = "0x253DA34")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x253D41C", Offset = "0x253D41C", VA = "0x253D41C")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x253DA3C", Offset = "0x253DA3C", VA = "0x253DA3C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x253DA9C", Offset = "0x253DA9C", VA = "0x253DA9C")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x253E230", Offset = "0x253E230", VA = "0x253E230")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x253D7BC", Offset = "0x253D7BC", VA = "0x253D7BC")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200006C")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200006D")]
	public enum PacketMode
	{
		[Token(Token = "0x40002C9")]
		SDK,
		[Token(Token = "0x40002CA")]
		Unity
	}

	[Token(Token = "0x200006E")]
	public struct ControllerPose
	{
		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x1FFE930", Offset = "0x1FFE930", VA = "0x1FFE930")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200006F")]
	public struct PoseFrame
	{
		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x1FFEA0C", Offset = "0x1FFEA0C", VA = "0x1FFEA0C")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x21080C8", Offset = "0x21080C8", VA = "0x21080C8")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60002EF")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x21080D8", Offset = "0x21080D8", VA = "0x21080D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x2108168", Offset = "0x2108168", VA = "0x2108168")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x21083E4", Offset = "0x21083E4", VA = "0x21083E4")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x21083EC", Offset = "0x21083EC", VA = "0x21083EC")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000070")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x21083FC", Offset = "0x21083FC", VA = "0x21083FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x2108578", Offset = "0x2108578", VA = "0x2108578")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000071")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x21085EC", Offset = "0x21085EC", VA = "0x21085EC")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x2108750", Offset = "0x2108750", VA = "0x2108750")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x2108AEC", Offset = "0x2108AEC", VA = "0x2108AEC")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x2108D10", Offset = "0x2108D10", VA = "0x2108D10", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x2108D3C", Offset = "0x2108D3C", VA = "0x2108D3C")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000072")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000073")]
	public enum TextureType
	{
		[Token(Token = "0x4000300")]
		DiffuseTextures,
		[Token(Token = "0x4000301")]
		NormalMaps,
		[Token(Token = "0x4000302")]
		RoughnessMaps,
		[Token(Token = "0x4000303")]
		Count
	}

	[Token(Token = "0x2000074")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000075")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000076")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000077")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x1FFF45C", Offset = "0x1FFF45C", VA = "0x1FFF45C")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000078")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1EFBC", Offset = "0xB1EFBC")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000310")]
			[Address(RVA = "0x1FFF40C", Offset = "0x1FFF40C", VA = "0x1FFF40C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000312")]
			[Address(RVA = "0x1FFF454", Offset = "0x1FFF454", VA = "0x1FFF454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x1FFED10", Offset = "0x1FFED10", VA = "0x1FFED10")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x1FFED3C", Offset = "0x1FFED3C", VA = "0x1FFED3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x1FFED40", Offset = "0x1FFED40", VA = "0x1FFED40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x1FFF414", Offset = "0x1FFF414", VA = "0x1FFF414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40002FB")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40002FC")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40002FD")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40002FE")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x2108D88", Offset = "0x2108D88", VA = "0x2108D88")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x2108F70", Offset = "0x2108F70", VA = "0x2108F70")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x2108FB0", Offset = "0x2108FB0", VA = "0x2108FB0")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x2109748", Offset = "0x2109748", VA = "0x2109748")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x2109C28", Offset = "0x2109C28", VA = "0x2109C28")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x2109054", Offset = "0x2109054", VA = "0x2109054")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x2109D14", Offset = "0x2109D14", VA = "0x2109D14")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x21094A4", Offset = "0x21094A4", VA = "0x21094A4")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x2109FA4", Offset = "0x2109FA4", VA = "0x2109FA4")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x210A248", Offset = "0x210A248", VA = "0x210A248")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x210A370", Offset = "0x210A370", VA = "0x210A370")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x210A3A8", Offset = "0x210A3A8", VA = "0x210A3A8")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x21096B4", Offset = "0x21096B4", VA = "0x21096B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2C378", Offset = "0xB2C378")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x210B308", Offset = "0x210B308", VA = "0x210B308")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000079")]
public class OvrAvatarPacket
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000039")]
	public float Duration
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x210B984", Offset = "0x210B984", VA = "0x210B984")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700003A")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x210B9F8", Offset = "0x210B9F8", VA = "0x210B9F8")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x210BA88", Offset = "0x210BA88", VA = "0x210BA88")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x210BBCC", Offset = "0x210BBCC", VA = "0x210BBCC")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x210BDAC", Offset = "0x210BDAC", VA = "0x210BDAC")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x210BF28", Offset = "0x210BF28", VA = "0x210BF28")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x210C000", Offset = "0x210C000", VA = "0x210C000")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x210C230", Offset = "0x210C230", VA = "0x210C230")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x210C4F8", Offset = "0x210C4F8", VA = "0x210C4F8")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200007A")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600031C")]
	[Address(RVA = "0x22CD7F8", Offset = "0x22CD7F8", VA = "0x22CD7F8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x22CD90C", Offset = "0x22CD90C", VA = "0x22CD90C")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x22CDAB8", Offset = "0x22CDAB8", VA = "0x22CDAB8")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x22CD97C", Offset = "0x22CD97C", VA = "0x22CD97C")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x22CDA10", Offset = "0x22CDA10", VA = "0x22CDA10")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200007B")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000321")]
	[Address(RVA = "0x22CD3F8", Offset = "0x22CD3F8", VA = "0x22CD3F8")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x22CD79C", Offset = "0x22CD79C", VA = "0x22CD79C")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x22CD598", Offset = "0x22CD598", VA = "0x22CD598")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x22CD610", Offset = "0x22CD610", VA = "0x22CD610")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x22CD6AC", Offset = "0x22CD6AC", VA = "0x22CD6AC")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200007C")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000325")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000326")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x210C720", Offset = "0x210C720", VA = "0x210C720")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x210C7A8", Offset = "0x210C7A8", VA = "0x210C7A8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x210C7C4", Offset = "0x210C7C4", VA = "0x210C7C4")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x210C968", Offset = "0x210C968", VA = "0x210C968")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x210CB44", Offset = "0x210CB44", VA = "0x210CB44")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200007D")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x210CBF0", Offset = "0x210CBF0", VA = "0x210CBF0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x210CCDC", Offset = "0x210CCDC", VA = "0x210CCDC")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x210CF48", Offset = "0x210CF48", VA = "0x210CF48")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x210D2FC", Offset = "0x210D2FC", VA = "0x210D2FC")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x210D408", Offset = "0x210D408", VA = "0x210D408")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200007E")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x400032F")]
	Body = 1,
	[Token(Token = "0x4000330")]
	Hands = 2,
	[Token(Token = "0x4000331")]
	Base = 4,
	[Token(Token = "0x4000332")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000333")]
	Expressive = 0x20,
	[Token(Token = "0x4000334")]
	All = -1
}
[Token(Token = "0x200007F")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000336")]
	AvatarSpecification,
	[Token(Token = "0x4000337")]
	AssetLoaded,
	[Token(Token = "0x4000338")]
	Count
}
[Token(Token = "0x2000080")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000081")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000082")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x400033E")]
	Mesh,
	[Token(Token = "0x400033F")]
	Texture,
	[Token(Token = "0x4000340")]
	Pose,
	[Token(Token = "0x4000341")]
	Material,
	[Token(Token = "0x4000342")]
	CombinedMesh,
	[Token(Token = "0x4000343")]
	PBSMaterial,
	[Token(Token = "0x4000344")]
	FailedLoad,
	[Token(Token = "0x4000345")]
	Count
}
[Token(Token = "0x2000083")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000084")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000085")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000086")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000087")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000088")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400037A")]
	RGB24,
	[Token(Token = "0x400037B")]
	DXT1,
	[Token(Token = "0x400037C")]
	DXT5,
	[Token(Token = "0x400037D")]
	ASTC_RGB_6x6,
	[Token(Token = "0x400037E")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400037F")]
	Count
}
[Token(Token = "0x2000089")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200008A")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000387")]
	SkinnedMeshRender,
	[Token(Token = "0x4000388")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000389")]
	ProjectorRender,
	[Token(Token = "0x400038A")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x400038B")]
	Count
}
[Token(Token = "0x200008B")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x400038D")]
	Unknown,
	[Token(Token = "0x400038E")]
	Default,
	[Token(Token = "0x400038F")]
	Verbose,
	[Token(Token = "0x4000390")]
	Debug,
	[Token(Token = "0x4000391")]
	Info,
	[Token(Token = "0x4000392")]
	Warn,
	[Token(Token = "0x4000393")]
	Error,
	[Token(Token = "0x4000394")]
	Fatal,
	[Token(Token = "0x4000395")]
	Silent
}
[Token(Token = "0x200008C")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200008D")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x400039A")]
	One = 1,
	[Token(Token = "0x400039B")]
	Two = 2,
	[Token(Token = "0x400039C")]
	Three = 4,
	[Token(Token = "0x400039D")]
	Joystick = 8
}
[Token(Token = "0x200008E")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400039F")]
	One = 1,
	[Token(Token = "0x40003A0")]
	Two = 2,
	[Token(Token = "0x40003A1")]
	Joystick = 4,
	[Token(Token = "0x40003A2")]
	ThumbRest = 8,
	[Token(Token = "0x40003A3")]
	Index = 0x10,
	[Token(Token = "0x40003A4")]
	Pointing = 0x40,
	[Token(Token = "0x40003A5")]
	ThumbUp = 0x80
}
[Token(Token = "0x200008F")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000090")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000091")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000092")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000093")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000094")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000095")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000096")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000097")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40003C5")]
	Add,
	[Token(Token = "0x40003C6")]
	Multiply,
	[Token(Token = "0x40003C7")]
	Count
}
[Token(Token = "0x2000098")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40003C9")]
	Color,
	[Token(Token = "0x40003CA")]
	Texture,
	[Token(Token = "0x40003CB")]
	TextureSingleChannel,
	[Token(Token = "0x40003CC")]
	Parallax,
	[Token(Token = "0x40003CD")]
	Count
}
[Token(Token = "0x2000099")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40003CF")]
	None,
	[Token(Token = "0x40003D0")]
	Positional,
	[Token(Token = "0x40003D1")]
	ViewReflection,
	[Token(Token = "0x40003D2")]
	Fresnel,
	[Token(Token = "0x40003D3")]
	Pulse,
	[Token(Token = "0x40003D4")]
	Count
}
[Token(Token = "0x200009A")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40003D6")]
	Touch,
	[Token(Token = "0x40003D7")]
	Malibu,
	[Token(Token = "0x40003D8")]
	Go,
	[Token(Token = "0x40003D9")]
	Quest,
	[Token(Token = "0x40003DA")]
	Count
}
[Token(Token = "0x200009B")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40003DC")]
	Lowest = 1,
	[Token(Token = "0x40003DD")]
	Medium = 3,
	[Token(Token = "0x40003DE")]
	Highest = 5
}
[Token(Token = "0x200009C")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40003E0")]
	Unknown = -1,
	[Token(Token = "0x40003E1")]
	One,
	[Token(Token = "0x40003E2")]
	Two
}
[Token(Token = "0x200009D")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1FEF79C", Offset = "0x1FEF79C", VA = "0x1FEF79C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1FEF7CC", Offset = "0x1FEF7CC", VA = "0x1FEF7CC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1FEF9E8", Offset = "0x1FEF9E8", VA = "0x1FEF9E8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200009E")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1FEFACC", Offset = "0x1FEFACC", VA = "0x1FEFACC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1FEFAFC", Offset = "0x1FEFAFC", VA = "0x1FEFAFC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1FEFE98", Offset = "0x1FEFE98", VA = "0x1FEFE98", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200009F")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1FEECE4", Offset = "0x1FEECE4", VA = "0x1FEECE4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1FEED14", Offset = "0x1FEED14", VA = "0x1FEED14", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1FEEFA4", Offset = "0x1FEEFA4", VA = "0x1FEEFA4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000A0")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1FF0000", Offset = "0x1FF0000", VA = "0x1FF0000")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1FF0030", Offset = "0x1FF0030", VA = "0x1FF0030", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1FF0220", Offset = "0x1FF0220", VA = "0x1FF0220", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000A1")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x253B4B4", Offset = "0x253B4B4", VA = "0x253B4B4")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000A2")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000A3")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000417")]
	FirstPerson = 1,
	[Token(Token = "0x4000418")]
	ThirdPerson = 2,
	[Token(Token = "0x4000419")]
	SelfOccluding = 4
}
[Token(Token = "0x20000A4")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000A5")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000A6")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000A7")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000A8")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x400042F")]
	Default,
	[Token(Token = "0x4000430")]
	GripSphere,
	[Token(Token = "0x4000431")]
	GripCube,
	[Token(Token = "0x4000432")]
	Count
}
[Token(Token = "0x20000A9")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000434")]
	Body,
	[Token(Token = "0x4000435")]
	Clothing,
	[Token(Token = "0x4000436")]
	Eyewear,
	[Token(Token = "0x4000437")]
	Hair,
	[Token(Token = "0x4000438")]
	Beard,
	[Token(Token = "0x4000439")]
	Count
}
[Token(Token = "0x20000AA")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000AB")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000AC")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000AD")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000AE")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000443")]
	AvatarHead,
	[Token(Token = "0x4000444")]
	AvatarHand,
	[Token(Token = "0x4000445")]
	Object,
	[Token(Token = "0x4000446")]
	ObjectStatic,
	[Token(Token = "0x4000447")]
	Count
}
[Token(Token = "0x20000AF")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000B0")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000B1")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000B2")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000B3")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000453")]
	Point,
	[Token(Token = "0x4000454")]
	Direction,
	[Token(Token = "0x4000455")]
	Spot,
	[Token(Token = "0x4000456")]
	Count
}
[Token(Token = "0x20000B4")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000B5")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000B6")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000B7")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000B8")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x400046C")]
	None = 0u,
	[Token(Token = "0x400046D")]
	GazeTarget = 1u,
	[Token(Token = "0x400046E")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000B9")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000BA")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000BB")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000BC")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000BD")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000BE")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20000BF")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x1FFF464", Offset = "0x1FFF464", VA = "0x1FFF464")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000483")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700003B")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x21097A8", Offset = "0x21097A8", VA = "0x21097A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x210D418", Offset = "0x210D418", VA = "0x210D418")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x210D780", Offset = "0x210D780", VA = "0x210D780")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x210D7F0", Offset = "0x210D7F0", VA = "0x210D7F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x210E1BC", Offset = "0x210E1BC", VA = "0x210E1BC")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x210E210", Offset = "0x210E210", VA = "0x210E210")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x210E264", Offset = "0x210E264", VA = "0x210E264")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x210E2C8", Offset = "0x210E2C8", VA = "0x210E2C8")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x210E32C", Offset = "0x210E32C", VA = "0x210E32C")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x210DFBC", Offset = "0x210DFBC", VA = "0x210DFBC")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x210E408", Offset = "0x210E408", VA = "0x210E408")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x210E55C", Offset = "0x210E55C", VA = "0x210E55C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x210CECC", Offset = "0x210CECC", VA = "0x210CECC")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x210E650", Offset = "0x210E650", VA = "0x210E650")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x210D734", Offset = "0x210D734", VA = "0x210D734")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x21099A0", Offset = "0x21099A0", VA = "0x21099A0")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x210E730", Offset = "0x210E730", VA = "0x210E730")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000C0")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700003C")]
	public static string AppID
	{
		[Token(Token = "0x6000363")]
		[Address(RVA = "0x210E6F0", Offset = "0x210E6F0", VA = "0x210E6F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000364")]
		[Address(RVA = "0x210E8A0", Offset = "0x210E8A0", VA = "0x210E8A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000365")]
		[Address(RVA = "0x210E710", Offset = "0x210E710", VA = "0x210E710")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000366")]
		[Address(RVA = "0x210E8D0", Offset = "0x210E8D0", VA = "0x210E8D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0x210E748", Offset = "0x210E748", VA = "0x210E748")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x210E900", Offset = "0x210E900", VA = "0x210E900")]
		set
		{
		}
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x210E95C", Offset = "0x210E95C", VA = "0x210E95C")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000C1")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x21104C4", Offset = "0x21104C4", VA = "0x21104C4")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x21107BC", Offset = "0x21107BC", VA = "0x21107BC")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x2110654", Offset = "0x2110654", VA = "0x2110654")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x21109F8", Offset = "0x21109F8", VA = "0x21109F8")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000C2")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x2110A08", Offset = "0x2110A08", VA = "0x2110A08")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x2110B6C", Offset = "0x2110B6C", VA = "0x2110B6C")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x2110D40", Offset = "0x2110D40", VA = "0x2110D40")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000C3")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400049A")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400049B")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400049C")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x210E9D0", Offset = "0x210E9D0", VA = "0x210E9D0")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x210FA0C", Offset = "0x210FA0C", VA = "0x210FA0C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x210FC3C", Offset = "0x210FC3C", VA = "0x210FC3C")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x210F12C", Offset = "0x210F12C", VA = "0x210F12C")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x210EE20", Offset = "0x210EE20", VA = "0x210EE20")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x210EF9C", Offset = "0x210EF9C", VA = "0x210EF9C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x21104B4", Offset = "0x21104B4", VA = "0x21104B4")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000C4")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000C5")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20000C6")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x1FFFB5C", Offset = "0x1FFFB5C", VA = "0x1FFFB5C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20000C7")]
	public struct TextureSet
	{
		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x1FFFBB8", Offset = "0x1FFFBB8", VA = "0x1FFFBB8")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20000C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F03C", Offset = "0xB1F03C")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000387")]
			[Address(RVA = "0x1FFFB0C", Offset = "0x1FFFB0C", VA = "0x1FFFB0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000389")]
			[Address(RVA = "0x1FFFB54", Offset = "0x1FFFB54", VA = "0x1FFFB54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x1FFF4E0", Offset = "0x1FFF4E0", VA = "0x1FFF4E0")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0x1FFF50C", Offset = "0x1FFF50C", VA = "0x1FFF50C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x1FFF510", Offset = "0x1FFF510", VA = "0x1FFF510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x1FFFB14", Offset = "0x1FFFB14", VA = "0x1FFFB14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40004A0")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40004A1")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40004A4")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40004A5")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40004A6")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40004A7")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40004A8")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40004A9")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40004AA")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x211146C", Offset = "0x211146C", VA = "0x211146C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x21119D8", Offset = "0x21119D8", VA = "0x21119D8")]
	public void Update()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x2111BD8", Offset = "0x2111BD8", VA = "0x2111BD8")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x2109DF8", Offset = "0x2109DF8", VA = "0x2109DF8")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x2111B4C", Offset = "0x2111B4C", VA = "0x2111B4C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x2109A28", Offset = "0x2109A28", VA = "0x2109A28")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x2109C70", Offset = "0x2109C70", VA = "0x2109C70")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x2111C24", Offset = "0x2111C24", VA = "0x2111C24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2C4D0", Offset = "0xB2C4D0")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x210E3BC", Offset = "0x210E3BC", VA = "0x210E3BC")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x2111CD0", Offset = "0x2111CD0", VA = "0x2111CD0")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000C9")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x2111E48", Offset = "0x2111E48", VA = "0x2111E48")]
	private void Update()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x2111FC4", Offset = "0x2111FC4", VA = "0x2111FC4")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000CA")]
public class OVRMetricsToolSDK : MonoBehaviour
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaClass _MetricsService;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AndroidJavaObject _Context;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool _IsBound;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRMetricsToolSDK _Instance;

	[Token(Token = "0x17000041")]
	public static OVRMetricsToolSDK Instance
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x252A73C", Offset = "0x252A73C", VA = "0x252A73C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x252A8E0", Offset = "0x252A8E0", VA = "0x252A8E0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB2C588", Offset = "0xB2C588")]
	private static void InitJava()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x252AA50", Offset = "0x252AA50", VA = "0x252AA50")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x252ABC0", Offset = "0x252ABC0", VA = "0x252ABC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x252AD08", Offset = "0x252AD08", VA = "0x252AD08")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x252AA54", Offset = "0x252AA54", VA = "0x252AA54")]
	private void Bind()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x252ABC4", Offset = "0x252ABC4", VA = "0x252ABC4")]
	private void Shutdown()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x252AD14", Offset = "0x252AD14", VA = "0x252AD14")]
	public bool AppendCsvDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x252AF04", Offset = "0x252AF04", VA = "0x252AF04")]
	public bool SetOverlayDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x252B0F4", Offset = "0x252B0F4", VA = "0x252B0F4")]
	public OVRMetricsToolSDK()
	{
	}
}
[Token(Token = "0x20000CB")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x6000397")]
	[Address(RVA = "0x22C73F8", Offset = "0x22C73F8", VA = "0x22C73F8")]
	public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x20000CC")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x223EA88", Offset = "0x223EA88", VA = "0x223EA88")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x223EB10", Offset = "0x223EB10", VA = "0x223EB10", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x223EE20", Offset = "0x223EE20", VA = "0x223EE20")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x20000CD")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x2240088", Offset = "0x2240088", VA = "0x2240088")]
	public void Update()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x22401F8", Offset = "0x22401F8", VA = "0x22401F8")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x20000CE")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB22BEC", Offset = "0xB22BEC")]
	private string <UserName>k__BackingField;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x17000042")]
	public string UserName
	{
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x2240200", Offset = "0x2240200", VA = "0x2240200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C5D0", Offset = "0xB2C5D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x2240208", Offset = "0x2240208", VA = "0x2240208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C5E0", Offset = "0xB2C5E0")]
		set
		{
		}
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x2240210", Offset = "0x2240210", VA = "0x2240210")]
	public void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x22404FC", Offset = "0x22404FC", VA = "0x22404FC")]
	public void Connect()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x22406A4", Offset = "0x22406A4", VA = "0x22406A4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x22406BC", Offset = "0x22406BC", VA = "0x22406BC")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x22406D4", Offset = "0x22406D4", VA = "0x22406D4")]
	public void Update()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x22407C4", Offset = "0x22407C4", VA = "0x22407C4")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x2241240", Offset = "0x2241240", VA = "0x2241240")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x224085C", Offset = "0x224085C", VA = "0x224085C")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x2241308", Offset = "0x2241308", VA = "0x2241308")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x22413C0", Offset = "0x22413C0", VA = "0x22413C0", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x224149C", Offset = "0x224149C", VA = "0x224149C", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x22417F8", Offset = "0x22417F8", VA = "0x22417F8", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x224181C", Offset = "0x224181C", VA = "0x224181C", Slot = "7")]
	public void OnChatStateChange(Photon.Chat.ChatState state)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x22418C4", Offset = "0x22418C4", VA = "0x22418C4", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x2241C44", Offset = "0x2241C44", VA = "0x2241C44")]
	public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x2241A74", Offset = "0x2241A74", VA = "0x2241A74")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x22416A4", Offset = "0x22416A4", VA = "0x22416A4")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x2241E20", Offset = "0x2241E20", VA = "0x2241E20", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x2242288", Offset = "0x2242288", VA = "0x2242288", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x22422D8", Offset = "0x22422D8", VA = "0x22422D8", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x22423F8", Offset = "0x22423F8", VA = "0x22423F8", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x22425D8", Offset = "0x22425D8", VA = "0x22425D8", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x2242704", Offset = "0x2242704", VA = "0x2242704", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x2242830", Offset = "0x2242830", VA = "0x2242830")]
	public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x22429D8", Offset = "0x22429D8", VA = "0x22429D8")]
	public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x2242BB8", Offset = "0x2242BB8", VA = "0x2242BB8")]
	public void OnErrorInfo(string channel, string error, object data)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x2242D24", Offset = "0x2242D24", VA = "0x2242D24")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x223EB9C", Offset = "0x223EB9C", VA = "0x223EB9C")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x2242E1C", Offset = "0x2242E1C", VA = "0x2242E1C")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x2242E64", Offset = "0x2242E64", VA = "0x2242E64")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x20000CF")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x17000043")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x28796C4", Offset = "0x28796C4", VA = "0x28796C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x287969C", Offset = "0x287969C", VA = "0x287969C")]
		set
		{
		}
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x28796EC", Offset = "0x28796EC", VA = "0x28796EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x2879754", Offset = "0x2879754", VA = "0x2879754")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x28798E4", Offset = "0x28798E4", VA = "0x28798E4")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x20000D0")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x23D40B8", Offset = "0x23D40B8", VA = "0x23D40B8", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x23D40DC", Offset = "0x23D40DC", VA = "0x23D40DC")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x20000D1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1F06C", Offset = "0xB1F06C")]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x40004DD")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x22529D0", Offset = "0x22529D0", VA = "0x22529D0")]
	public void Start()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x2252AB4", Offset = "0x2252AB4", VA = "0x2252AB4")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x2252B00", Offset = "0x2252B00", VA = "0x2252B00")]
	public void StartChat()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x2252BF4", Offset = "0x2252BF4", VA = "0x2252BF4")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x20000D2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1F0D4", Offset = "0xB1F0D4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1F0D4", Offset = "0xB1F0D4")]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x223DBF4", Offset = "0x223DBF4", VA = "0x223DBF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x223DD60", Offset = "0x223DD60", VA = "0x223DD60")]
	[PunRPC]
	private void ChangeColour(Vector3 randomColor)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x223DE3C", Offset = "0x223DE3C", VA = "0x223DE3C")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x20000D3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1F170", Offset = "0xB1F170")]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x223DE44", Offset = "0x223DE44", VA = "0x223DE44")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x223DF0C", Offset = "0x223DF0C", VA = "0x223DF0C")]
	public ChangeName()
	{
	}
}
[Token(Token = "0x20000D4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1F1D8", Offset = "0xB1F1D8")]
public class PointersController : MonoBehaviour
{
	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject pointerDown;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject pointerUp;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x202250C", Offset = "0x202250C", VA = "0x202250C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x2022570", Offset = "0x2022570", VA = "0x2022570")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x20225CC", Offset = "0x20225CC", VA = "0x20225CC")]
	private void SetActiveSafe(GameObject go, bool active)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x2022680", Offset = "0x2022680", VA = "0x2022680")]
	public PointersController()
	{
	}
}
[Token(Token = "0x20000D5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1F240", Offset = "0xB1F240")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1F240", Offset = "0xB1F240")]
public class ProximityVoiceTrigger : VoiceComponent
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> groupsToAdd;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> groupsToRemove;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] subscribedGroups;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView photonView;

	[Token(Token = "0x17000044")]
	public byte TargetInterestGroup
	{
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x20BDC0C", Offset = "0x20BDC0C", VA = "0x20BDC0C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x20BDCA4", Offset = "0x20BDCA4", VA = "0x20BDCA4", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x20BDD74", Offset = "0x20BDD74", VA = "0x20BDD74")]
	private void ToggleTransmission()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x20BE070", Offset = "0x20BE070", VA = "0x20BE070")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x20BE294", Offset = "0x20BE294", VA = "0x20BE294")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x20BE4F8", Offset = "0x20BE4F8", VA = "0x20BE4F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x20BEB1C", Offset = "0x20BEB1C", VA = "0x20BEB1C")]
	public ProximityVoiceTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D6")]
public class MouseLookHelper
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x21BE980", Offset = "0x21BE980", VA = "0x21BE980")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x21BE9D4", Offset = "0x21BE9D4", VA = "0x21BE9D4")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x21BEC80", Offset = "0x21BEC80", VA = "0x21BEC80")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x21BECE8", Offset = "0x21BECE8", VA = "0x21BECE8")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x20000D7")]
public class SoundsForJoinAndLeave : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip JoinClip;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip LeaveClip;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x24A7208", Offset = "0x24A7208", VA = "0x24A7208", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x24A7320", Offset = "0x24A7320", VA = "0x24A7320", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x24A7438", Offset = "0x24A7438", VA = "0x24A7438")]
	public SoundsForJoinAndLeave()
	{
	}
}
[Token(Token = "0x20000D8")]
public class LowFrameRate : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x20000D9")]
	public enum SlowWhat
	{
		[Token(Token = "0x40004F8")]
		Both,
		[Token(Token = "0x40004F9")]
		Server,
		[Token(Token = "0x40004FA")]
		Client
	}

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SlowWhat slowWhat;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int targetFrameRate;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x2525338", Offset = "0x2525338", VA = "0x2525338", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x2525418", Offset = "0x2525418", VA = "0x2525418")]
	public LowFrameRate()
	{
	}
}
[Token(Token = "0x20000DA")]
public class SuperBasicController : NetComponent
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool is2D;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB22C2C", Offset = "0xB22C2C")]
	public float turnSpeed;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB22C48", Offset = "0xB22C48")]
	public float moveSpeed;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool autoMove;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 targRotDelta;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 targPosDelta;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float appliedDeltaT;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator animator;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SyncAnimator syncAnimator;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SyncTransform syncTransform;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SyncCannon syncLauncher;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SyncContactScan syncHitscan;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool triggerJump;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool triggerFade;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool triggerTurnLeft;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool triggerUpperBodyRun;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool triggerUpperBodyIdle;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool triggerTeleport;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	private bool freakingOut;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
	private bool triggerHitscan;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool triggerProjectile;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool triggerBlend;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x27BFD84", Offset = "0x27BFD84", VA = "0x27BFD84", Slot = "17")]
	public override void OnAwake()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x27BFF2C", Offset = "0x27BFF2C", VA = "0x27BFF2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x27C01AC", Offset = "0x27C01AC", VA = "0x27C01AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x27C0CF8", Offset = "0x27C0CF8", VA = "0x27C0CF8")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x27C0C48", Offset = "0x27C0C48", VA = "0x27C0C48")]
	private void Move(Vector3 move, Vector3 turn)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x27C006C", Offset = "0x27C006C", VA = "0x27C006C")]
	private void Interpolate(float t)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x27C0DA4", Offset = "0x27C0DA4", VA = "0x27C0DA4")]
	public SuperBasicController()
	{
	}
}
[Token(Token = "0x20000DB")]
public class TickMover : MonoBehaviour, IOnPostSimulate
{
	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 rotationPerTick;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMesh tickText;

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x2053EFC", Offset = "0x2053EFC", VA = "0x2053EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x20540E8", Offset = "0x20540E8", VA = "0x20540E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x205415C", Offset = "0x205415C", VA = "0x205415C", Slot = "4")]
	public void OnPostSimulate(int frameId, int subFrameId, bool isNetTick)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x2054244", Offset = "0x2054244", VA = "0x2054244")]
	public TickMover()
	{
	}
}
[Token(Token = "0x20000DC")]
public class PhotonConnectionManager : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000513")]
	public const string IS_READY_PROP_KEY = "isReady";

	[Token(Token = "0x4000514")]
	public const string SHIP_ID_PROP_KEY = "shipID";

	[Token(Token = "0x4000515")]
	public const string ROOM_MAP_PROP_KEY = "mapID";

	[Token(Token = "0x4000516")]
	public const string ROOM_GAME_STATE_PROP_KEY = "gameState";

	[Token(Token = "0x4000517")]
	public const string ROOM_GAME_MODE_PROP_KEY = "gameMode";

	[Token(Token = "0x4000518")]
	public const string ROOM_SPEED_LEVEL_KEY = "0";

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB22C60", Offset = "0xB22C60")]
	private Player <player>k__BackingField;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<RoomInfo> roomInfos;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ExitGames.Client.Photon.Hashtable _myCustomProps;

	[Token(Token = "0x17000045")]
	public Player player
	{
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x20158C0", Offset = "0x20158C0", VA = "0x20158C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C600", Offset = "0xB2C600")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x20158C8", Offset = "0x20158C8", VA = "0x20158C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C610", Offset = "0xB2C610")]
		private set
		{
		}
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x20158D0", Offset = "0x20158D0", VA = "0x20158D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x2015930", Offset = "0x2015930", VA = "0x2015930")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x20159B4", Offset = "0x20159B4", VA = "0x20159B4")]
	private void ConnectToServer(string username)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x2015A74", Offset = "0x2015A74", VA = "0x2015A74", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x2015B74", Offset = "0x2015B74", VA = "0x2015B74")]
	public void CreateRoomByID(string ID, byte maxPlayers, bool isVisible, bool IsOpen, string mapName, string gameMode)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x2015EB4", Offset = "0x2015EB4", VA = "0x2015EB4")]
	public void LeaveRoom()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x2015F14", Offset = "0x2015F14", VA = "0x2015F14")]
	public void LeaveLobby()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x2015F70", Offset = "0x2015F70", VA = "0x2015F70", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x2015FFC", Offset = "0x2015FFC", VA = "0x2015FFC", Slot = "37")]
	public override void OnLeftLobby()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x2016088", Offset = "0x2016088", VA = "0x2016088", Slot = "33")]
	public override void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x201612C", Offset = "0x201612C", VA = "0x201612C", Slot = "35")]
	public override void OnCreatedRoom()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x2016224", Offset = "0x2016224", VA = "0x2016224")]
	public void JoinRoomByID(string ID)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x2016294", Offset = "0x2016294", VA = "0x2016294", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x2016368", Offset = "0x2016368", VA = "0x2016368")]
	public void JoinOrCreateRoomByID(string ID, byte maxPlayers, bool isVisible, bool IsOpen)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x2016438", Offset = "0x2016438", VA = "0x2016438", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x20164CC", Offset = "0x20164CC", VA = "0x20164CC")]
	private void LoadLevel(string levelName)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x20165EC", Offset = "0x20165EC", VA = "0x20165EC", Slot = "40")]
	public override void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x20167D0", Offset = "0x20167D0", VA = "0x20167D0")]
	public void getRoomList()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x2016CB0", Offset = "0x2016CB0", VA = "0x2016CB0")]
	public void SetReady()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x2016D88", Offset = "0x2016D88", VA = "0x2016D88")]
	public void SetShip(int shipID)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x2016E68", Offset = "0x2016E68", VA = "0x2016E68")]
	public void SetUnReady()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x2016F3C", Offset = "0x2016F3C", VA = "0x2016F3C")]
	public void CheckIfReady()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x2017144", Offset = "0x2017144", VA = "0x2017144")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB2C620", Offset = "0xB2C620")]
	private void StartRaceButton()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x2017280", Offset = "0x2017280", VA = "0x2017280")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB2C658", Offset = "0xB2C658")]
	private void FinishRaceButton()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x20173F4", Offset = "0x20173F4", VA = "0x20173F4")]
	[PunRPC]
	private void StartRace(string name)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x201748C", Offset = "0x201748C", VA = "0x201748C")]
	[PunRPC]
	private void FinishRace(string name)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x2017524", Offset = "0x2017524", VA = "0x2017524")]
	private void Update()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x20176B0", Offset = "0x20176B0", VA = "0x20176B0")]
	public PhotonConnectionManager()
	{
	}
}
[Token(Token = "0x20000DD")]
public class PhotonConnectionManagerUpdated : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x20000DE")]
	public delegate void PropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged);

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string room;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string gameVersion;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_createdRoom;

	[Token(Token = "0x14000001")]
	public static event PropertiesChanged RoomPropsChanged
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x201777C", Offset = "0x201777C", VA = "0x201777C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C6B0", Offset = "0xB2C6B0")]
		add
		{
		}
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x2017838", Offset = "0x2017838", VA = "0x2017838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C6C0", Offset = "0xB2C6C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action OnRoomCreated
	{
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x20178F4", Offset = "0x20178F4", VA = "0x20178F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C6D0", Offset = "0xB2C6D0")]
		add
		{
		}
		[Token(Token = "0x600040E")]
		[Address(RVA = "0x20179B4", Offset = "0x20179B4", VA = "0x20179B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C6E0", Offset = "0xB2C6E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event Action OnExistingRoomJoined
	{
		[Token(Token = "0x600040F")]
		[Address(RVA = "0x2017A74", Offset = "0x2017A74", VA = "0x2017A74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C6F0", Offset = "0xB2C6F0")]
		add
		{
		}
		[Token(Token = "0x6000410")]
		[Address(RVA = "0x2017B34", Offset = "0x2017B34", VA = "0x2017B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C700", Offset = "0xB2C700")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event Action OnPlayersChanged
	{
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x2017BF4", Offset = "0x2017BF4", VA = "0x2017BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C710", Offset = "0xB2C710")]
		add
		{
		}
		[Token(Token = "0x6000412")]
		[Address(RVA = "0x2017CB4", Offset = "0x2017CB4", VA = "0x2017CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C720", Offset = "0xB2C720")]
		remove
		{
		}
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x2017D74", Offset = "0x2017D74", VA = "0x2017D74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x2017DD4", Offset = "0x2017DD4", VA = "0x2017DD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x2017ED0", Offset = "0x2017ED0", VA = "0x2017ED0", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x2017FC4", Offset = "0x2017FC4", VA = "0x2017FC4", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x20180EC", Offset = "0x20180EC", VA = "0x20180EC", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x20181B8", Offset = "0x20181B8", VA = "0x20181B8", Slot = "34")]
	public override void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x2018348", Offset = "0x2018348", VA = "0x2018348", Slot = "40")]
	public override void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x20185A4", Offset = "0x20185A4", VA = "0x20185A4", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x2018604", Offset = "0x2018604", VA = "0x2018604", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x2018688", Offset = "0x2018688", VA = "0x2018688")]
	public static bool SetCustomPropertySafe(string key, object newValue, [Optional] WebFlags webFlags)
	{
		return default(bool);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x20187A8", Offset = "0x20187A8", VA = "0x20187A8")]
	public static object GetCurrentRoomCustomProperty(string key)
	{
		return null;
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x2018878", Offset = "0x2018878", VA = "0x2018878", Slot = "46")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x20188EC", Offset = "0x20188EC", VA = "0x20188EC")]
	public PhotonConnectionManagerUpdated()
	{
	}
}
[Token(Token = "0x20000DF")]
public class PhotonPlayerSpawner : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject spawnedPlayerPrefab;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnTransform;

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x2018C38", Offset = "0x2018C38", VA = "0x2018C38", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x2018E18", Offset = "0x2018E18", VA = "0x2018E18", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x2018E94", Offset = "0x2018E94", VA = "0x2018E94")]
	public PhotonPlayerSpawner()
	{
	}
}
[Token(Token = "0x20000E0")]
public class PhotonRoomTimer : MonoBehaviour
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool startTimer;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double timerIncrementValue;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double startTime;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private double timer;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ExitGames.Client.Photon.Hashtable CustomValue;

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x2018E9C", Offset = "0x2018E9C", VA = "0x2018E9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x2019098", Offset = "0x2019098", VA = "0x2019098")]
	private void Update()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x201916C", Offset = "0x201916C", VA = "0x201916C")]
	public PhotonRoomTimer()
	{
	}
}
[Token(Token = "0x20000E1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1F2DC", Offset = "0xB1F2DC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1F2DC", Offset = "0xB1F2DC")]
public class PhotonVoiceManager : MonoBehaviour
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform remoteVoiceParent;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VoiceConnection voiceConnection;

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x201917C", Offset = "0x201917C", VA = "0x201917C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x20191E0", Offset = "0x20191E0", VA = "0x20191E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x2019290", Offset = "0x2019290", VA = "0x2019290")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x2019340", Offset = "0x2019340", VA = "0x2019340")]
	private void OnSpeakerCreated(Speaker speaker)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x2019440", Offset = "0x2019440", VA = "0x2019440")]
	private void OnRemoteVoiceRemove(Speaker speaker)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x2019504", Offset = "0x2019504", VA = "0x2019504")]
	public PhotonVoiceManager()
	{
	}
}
[Token(Token = "0x20000E2")]
public class PlayerGhostAPI : MonoBehaviour
{
	[Token(Token = "0x20000E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F378", Offset = "0xB1F378")]
	private sealed class <raceStart>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startTimer;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerGhostAPI <>4__this;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000439")]
			[Address(RVA = "0x200524C", Offset = "0x200524C", VA = "0x200524C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043B")]
			[Address(RVA = "0x2005294", Offset = "0x2005294", VA = "0x2005294", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x2005154", Offset = "0x2005154", VA = "0x2005154")]
		[DebuggerHidden]
		public <raceStart>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x2005180", Offset = "0x2005180", VA = "0x2005180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x2005184", Offset = "0x2005184", VA = "0x2005184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x2005254", Offset = "0x2005254", VA = "0x2005254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22CC0", Offset = "0xB22CC0")]
	public float animationTime;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float playerTime;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22CF8", Offset = "0xB22CF8")]
	public Animator animator;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startTimer;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22D30", Offset = "0xB22D30")]
	public float playbackSpeed;

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x2021B88", Offset = "0x2021B88", VA = "0x2021B88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x2021D7C", Offset = "0x2021D7C", VA = "0x2021D7C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x2021DD8", Offset = "0x2021DD8", VA = "0x2021DD8")]
	private void onTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x2021CEC", Offset = "0x2021CEC", VA = "0x2021CEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2C730", Offset = "0xB2C730")]
	private IEnumerator raceStart(float startTimer)
	{
		return null;
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x2021C44", Offset = "0x2021C44", VA = "0x2021C44")]
	public void UpdateAnimClipTimes()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x2021EC8", Offset = "0x2021EC8", VA = "0x2021EC8")]
	public PlayerGhostAPI()
	{
	}
}
[Token(Token = "0x20000E4")]
public class PlayerRecorded : MonoBehaviour
{
	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x2021ED8", Offset = "0x2021ED8", VA = "0x2021ED8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x2021F3C", Offset = "0x2021F3C", VA = "0x2021F3C")]
	public PlayerRecorded()
	{
	}
}
[Token(Token = "0x20000E5")]
public class playfabManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000E6")]
	public class LeaderboardPlayerData
	{
		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string playFabID;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int position;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int flag;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float time;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MenuController.TracksProgress tracksProgress;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UserDataBlock userDataBlock;

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x25B724C", Offset = "0x25B724C", VA = "0x25B724C")]
		public LeaderboardPlayerData()
		{
		}
	}

	[Token(Token = "0x20000E7")]
	public class LocalPlayerData
	{
		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuController.TracksProgress TracksProgress;

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x25BB8B8", Offset = "0x25BB8B8", VA = "0x25BB8B8")]
		public LocalPlayerData()
		{
		}
	}

	[Token(Token = "0x20000E8")]
	public class TrackPlayerData
	{
		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string username;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ushort flagID;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UserDataBlock userDataBlock;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrackPlayerDataBlock trackPlayerDataBlock;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<float> positionX;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<float> positionY;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<float> positionZ;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<float> rotationX;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<float> rotationY;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<float> rotationZ;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<float> rotationW;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<float> deltaTime;

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x25B502C", Offset = "0x25B502C", VA = "0x25B502C")]
		public TrackPlayerData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E9")]
	public class TrackPlayerDataBlock
	{
		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public byte carID;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public byte posLastTime;

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x25B5580", Offset = "0x25B5580", VA = "0x25B5580")]
		public TrackPlayerDataBlock()
		{
		}
	}

	[Token(Token = "0x20000EA")]
	public static class DataKeys
	{
		[Token(Token = "0x4000562")]
		public const string Username = "Username";

		[Token(Token = "0x4000563")]
		public const string FlagId = "FlagID";

		[Token(Token = "0x4000564")]
		public const string Time = "Time";

		[Token(Token = "0x4000565")]
		public const string DeltaTime = "deltaTime";

		[Token(Token = "0x4000566")]
		public const string CarID = "car";

		[Token(Token = "0x4000567")]
		public const string TrackDataBlock = "TrackDataBlock";

		[Token(Token = "0x4000568")]
		public const string PositionX = "positionX";

		[Token(Token = "0x4000569")]
		public const string PositionY = "positionY";

		[Token(Token = "0x400056A")]
		public const string PositionZ = "positionZ";

		[Token(Token = "0x400056B")]
		public const string RotationX = "rotationX";

		[Token(Token = "0x400056C")]
		public const string RotationY = "rotationY";

		[Token(Token = "0x400056D")]
		public const string RotationZ = "rotationZ";

		[Token(Token = "0x400056E")]
		public const string RotationW = "rotationW";

		[Token(Token = "0x400056F")]
		public const string TracksProgress = "TracksProgress";
	}

	[Token(Token = "0x20000EB")]
	public static class DataKeysOffline
	{
		[Token(Token = "0x4000570")]
		public const string GlobalPosForAllTheTime = "GlobalPosForAllTheTime";
	}

	[Token(Token = "0x20000EC")]
	public enum TypeOfGettingEnemiesToTrack
	{
		[Token(Token = "0x4000572")]
		AroundPLayer,
		[Token(Token = "0x4000573")]
		FromBottomLeaderboard,
		[Token(Token = "0x4000574")]
		FromCenterLeaderboard,
		[Token(Token = "0x4000575")]
		FromTopLeaderboard
	}

	[Token(Token = "0x20000ED")]
	public class CustomResponse
	{
		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Code;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Info;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CustomJson;

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x25BB8B0", Offset = "0x25BB8B0", VA = "0x25BB8B0")]
		public CustomResponse()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000EE")]
	public class TournamentInfo
	{
		[Token(Token = "0x20000EF")]
		public enum Type
		{
			[Token(Token = "0x4000581")]
			Single,
			[Token(Token = "0x4000582")]
			Team
		}

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22DE8", Offset = "0xB22DE8")]
		public bool isDataUploaded;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22E20", Offset = "0xB22E20")]
		public TimerTournament.ListOfTimeMarks listOfTimeMarksOfDates;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Type tournamentType;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool withAttempts;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string tournamentName;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TournamentTeamBlock[] tournamentTeamBlock;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TournamentCarSettings tournamentCarSettings;

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x25BB8C8", Offset = "0x25BB8C8", VA = "0x25BB8C8")]
		public TournamentInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F0")]
	public class TournamentTeamBlock
	{
		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string teamFullName;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string teamShortName;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string teamLeaderBoard;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string teamHolderID;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte carID;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public byte teamID;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string bloggerPlayfabID;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TournamentTeamInfo tournamentTeamInfo;

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x25BB8D0", Offset = "0x25BB8D0", VA = "0x25BB8D0")]
		public TournamentTeamBlock()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F1")]
	public class TournamentTeamInfo
	{
		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float timeBlogger;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeTopPlayer;

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x25BB8D8", Offset = "0x25BB8D8", VA = "0x25BB8D8")]
		public TournamentTeamInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F2")]
	public class TournamentCarSettings
	{
		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isSingleCar;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public byte singleCarID;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool isCustomBalance;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool isSpecificBalance;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomCarBalance customCarBalance;

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x25BB8C0", Offset = "0x25BB8C0", VA = "0x25BB8C0")]
		public TournamentCarSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F3")]
	public class CustomCarBalance
	{
		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte maxSpeed;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public byte acceleration;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public byte nitroCapacity;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float specificMaxSpeed;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float specificAcceleration;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public byte specificNitroCapacity;

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x25BB8A8", Offset = "0x25BB8A8", VA = "0x25BB8A8")]
		public CustomCarBalance()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F4")]
	public class UserDataBlock
	{
		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22E58", Offset = "0xB22E58")]
		public bool isDataUploaded;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22E90", Offset = "0xB22E90")]
		public Dictionary<string, TournamentUserDataBlock> DictionaryTournamentUserDataBlocks;

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x25BB8E8", Offset = "0x25BB8E8", VA = "0x25BB8E8")]
		public UserDataBlock()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F5")]
	public class TournamentUserDataBlock
	{
		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte teamId;

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x25BB8E0", Offset = "0x25BB8E0", VA = "0x25BB8E0")]
		public TournamentUserDataBlock()
		{
		}
	}

	[Token(Token = "0x20000F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F388", Offset = "0xB1F388")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public playfabManager <>4__this;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[][] inSceneNames;

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x25B3CA8", Offset = "0x25B3CA8", VA = "0x25B3CA8")]
		public <>c__DisplayClass20_0()
		{
		}
	}

	[Token(Token = "0x20000F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F398", Offset = "0xB1F398")]
	private sealed class <>c__DisplayClass20_1
	{
		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i1;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass20_0 CS$<>8__locals1;

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x25B3CB0", Offset = "0x25B3CB0", VA = "0x25B3CB0")]
		public <>c__DisplayClass20_1()
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x25B3CB8", Offset = "0x25B3CB8", VA = "0x25B3CB8")]
		internal void <SendDataDummy>b__1(UpdatePlayerStatisticsResult callback)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F3A8", Offset = "0xB1F3A8")]
	private sealed class <>c
	{
		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, StatisticUpdate> <>9__20_0;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<string, string, string> <>9__20_2;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<PlayerLeaderboardEntry> <>9__31_1;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<PlayerLeaderboardEntry> <>9__31_3;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<PlayerLeaderboardEntry, string> <>9__31_4;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<PlayerLeaderboardEntry, float> <>9__31_5;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Action<ExecuteCloudScriptResult> <>9__55_0;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<Dictionary<string, object>, IEnumerable<KeyValuePair<string, object>>> <>9__70_3;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Func<KeyValuePair<string, object>, string> <>9__70_4;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Func<KeyValuePair<string, object>, object> <>9__70_5;

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x25B39D4", Offset = "0x25B39D4", VA = "0x25B39D4")]
		public <>c()
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x25B39DC", Offset = "0x25B39DC", VA = "0x25B39DC")]
		internal StatisticUpdate <SendDataDummy>b__20_0(string t)
		{
			return null;
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x25B3A60", Offset = "0x25B3A60", VA = "0x25B3A60")]
		internal string <SendDataDummy>b__20_2(string x, string y)
		{
			return null;
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x25B3AC0", Offset = "0x25B3AC0", VA = "0x25B3AC0")]
		internal bool <GetEnemiesTrackDataToTrack>b__31_1(PlayerLeaderboardEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x25B3B50", Offset = "0x25B3B50", VA = "0x25B3B50")]
		internal bool <GetEnemiesTrackDataToTrack>b__31_3(PlayerLeaderboardEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x25B3BE0", Offset = "0x25B3BE0", VA = "0x25B3BE0")]
		internal string <GetEnemiesTrackDataToTrack>b__31_4(PlayerLeaderboardEntry x)
		{
			return null;
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x25B3BFC", Offset = "0x25B3BFC", VA = "0x25B3BFC")]
		internal float <GetEnemiesTrackDataToTrack>b__31_5(PlayerLeaderboardEntry x)
		{
			return default(float);
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x25B3C1C", Offset = "0x25B3C1C", VA = "0x25B3C1C")]
		internal void <SendPartyMetrics>b__55_0(ExecuteCloudScriptResult insExecuteCloudScriptResult)
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x25B3C20", Offset = "0x25B3C20", VA = "0x25B3C20")]
		internal IEnumerable<KeyValuePair<string, object>> <MakeFlightRecord>b__70_3(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x25B3C28", Offset = "0x25B3C28", VA = "0x25B3C28")]
		internal string <MakeFlightRecord>b__70_4(KeyValuePair<string, object> pair)
		{
			return null;
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x25B3C68", Offset = "0x25B3C68", VA = "0x25B3C68")]
		internal object <MakeFlightRecord>b__70_5(KeyValuePair<string, object> pair)
		{
			return null;
		}
	}

	[Token(Token = "0x20000F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F3B8", Offset = "0xB1F3B8")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public playfabManager <>4__this;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action inActionCallback;

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x25B3E38", Offset = "0x25B3E38", VA = "0x25B3E38")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x25B3E40", Offset = "0x25B3E40", VA = "0x25B3E40")]
		internal void <UpdateUserNameFlag>b__0(UpdateUserDataResult gotResultCallback)
		{
		}
	}

	[Token(Token = "0x20000FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F3C8", Offset = "0xB1F3C8")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserDataBlock templateUserDataBlock;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string inSceneName;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<TrackPlayerData> onGetTrackPlayerDataAction;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string inPlayFabID;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public playfabManager <>4__this;

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x25B3E88", Offset = "0x25B3E88", VA = "0x25B3E88")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x25B3E90", Offset = "0x25B3E90", VA = "0x25B3E90")]
		internal void <GetTrackPlayerData>b__0(GetPlayerCombinedInfoResult insResult)
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x25B5034", Offset = "0x25B5034", VA = "0x25B5034")]
		internal void <GetTrackPlayerData>b__1(PlayFabError insError)
		{
		}
	}

	[Token(Token = "0x20000FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F3D8", Offset = "0xB1F3D8")]
	private sealed class <>c__DisplayClass29_1
	{
		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrackPlayerData insTrackPlayerData;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool insAllDataExists;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass29_0 CS$<>8__locals1;

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x25B5024", Offset = "0x25B5024", VA = "0x25B5024")]
		public <>c__DisplayClass29_1()
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x25B5108", Offset = "0x25B5108", VA = "0x25B5108")]
		internal void <GetTrackPlayerData>b__2(GetUserDataResult insGetUserOldDataResult)
		{
		}
	}

	[Token(Token = "0x20000FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F3E8", Offset = "0xB1F3E8")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<TrackPlayerData> inActionOnGetTrackPlayerData;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public playfabManager <>4__this;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] inPlayFabIDs;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string inSceneName;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte inCountOfEnemies;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action inActionAllTrackPlayersDataGot;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte i;

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x25B5588", Offset = "0x25B5588", VA = "0x25B5588")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x25B5590", Offset = "0x25B5590", VA = "0x25B5590")]
		internal void <GetTrackPlayersData>b__0(TrackPlayerData resultTrackPlayerData)
		{
		}
	}

	[Token(Token = "0x20000FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F3F8", Offset = "0xB1F3F8")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public playfabManager <>4__this;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CustomReader> insCustomReadersList;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte inCountOfIterationsGetData;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<List<CustomReader>> inActionCustomReaderList;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<CustomReader> <>9__8;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<TrackPlayerData> <>9__6;

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x25B561C", Offset = "0x25B561C", VA = "0x25B561C")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x25B5624", Offset = "0x25B5624", VA = "0x25B5624")]
		internal bool <GetEnemiesTrackDataToTrack>b__0(PlayerLeaderboardEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x25B5650", Offset = "0x25B5650", VA = "0x25B5650")]
		internal bool <GetEnemiesTrackDataToTrack>b__2(PlayerLeaderboardEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x25B567C", Offset = "0x25B567C", VA = "0x25B567C")]
		internal void <GetEnemiesTrackDataToTrack>b__6(TrackPlayerData resultTrackPlayerData)
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x25B5770", Offset = "0x25B5770", VA = "0x25B5770")]
		internal void <GetEnemiesTrackDataToTrack>b__8(CustomReader x)
		{
		}
	}

	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F408", Offset = "0xB1F408")]
	private sealed class <>c__DisplayClass31_1
	{
		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte insCurrentIteration;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass31_0 CS$<>8__locals1;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__7;

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x25B57D4", Offset = "0x25B57D4", VA = "0x25B57D4")]
		public <>c__DisplayClass31_1()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x25B57DC", Offset = "0x25B57DC", VA = "0x25B57DC")]
		internal void <GetEnemiesTrackDataToTrack>b__7()
		{
		}
	}

	[Token(Token = "0x20000FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F418", Offset = "0xB1F418")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string insSceneName;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public playfabManager <>4__this;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte inCountOfEnemies;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public byte inCountOfIterationsGetData;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<List<CustomReader>> inActionCustomReaderList;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TypeOfGettingEnemiesToTrack inTypeOfGettingEnemiesToTrack;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<GetLeaderboardResult> <>9__3;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<PlayFabError> <>9__4;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<GetLeaderboardAroundPlayerResult> <>9__5;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<PlayFabError> <>9__6;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<GetLeaderboardResult> <>9__7;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action<PlayFabError> <>9__8;

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x25B58D4", Offset = "0x25B58D4", VA = "0x25B58D4")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x25B58DC", Offset = "0x25B58DC", VA = "0x25B58DC")]
		internal void <GetEnemiesToTrack>b__1(GetUserDataResult insGetUserDataResult)
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x25B5AE4", Offset = "0x25B5AE4", VA = "0x25B5AE4")]
		internal void <GetEnemiesToTrack>b__3(GetLeaderboardResult insGetLeaderboardResult)
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x25B5B24", Offset = "0x25B5B24", VA = "0x25B5B24")]
		internal void <GetEnemiesToTrack>b__4(PlayFabError insError)
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x25B5BC0", Offset = "0x25B5BC0", VA = "0x25B5BC0")]
		internal void <GetEnemiesToTrack>b__5(GetLeaderboardAroundPlayerResult insGetLeaderboardAroundPlayerResult)
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x25B5C00", Offset = "0x25B5C00", VA = "0x25B5C00")]
		internal void <GetEnemiesToTrack>b__6(PlayFabError insError)
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x25B5C9C", Offset = "0x25B5C9C", VA = "0x25B5C9C")]
		internal void <GetEnemiesToTrack>b__0(int insGetTotalPlayersForTrackResult)
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x25B5ED4", Offset = "0x25B5ED4", VA = "0x25B5ED4")]
		internal void <GetEnemiesToTrack>b__7(GetLeaderboardResult insGetLeaderboardResult)
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x25B5F14", Offset = "0x25B5F14", VA = "0x25B5F14")]
		internal void <GetEnemiesToTrack>b__8(PlayFabError insError)
		{
		}
	}

	[Token(Token = "0x2000100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F428", Offset = "0xB1F428")]
	private sealed class <>c__DisplayClass33_1
	{
		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrackPlayerDataBlock insTrackPlayerDataBlock;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass33_0 CS$<>8__locals1;

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x25B5ADC", Offset = "0x25B5ADC", VA = "0x25B5ADC")]
		public <>c__DisplayClass33_1()
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x25B5FB0", Offset = "0x25B5FB0", VA = "0x25B5FB0")]
		internal void <GetEnemiesToTrack>b__2(int insPositionPlayerAtTrack)
		{
		}
	}

	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F438", Offset = "0xB1F438")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<int> resultCallback;

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x25B6350", Offset = "0x25B6350", VA = "0x25B6350")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x25B6358", Offset = "0x25B6358", VA = "0x25B6358")]
		internal void <GetTotalPlayersForTrack>b__0(GetLeaderboardAroundPlayerResult result)
		{
		}
	}

	[Token(Token = "0x2000102")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F448", Offset = "0xB1F448")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action inActionOnUserDataTrackSent;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string insSceneName;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float inTime;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CustomAnim inCustomAnim;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public playfabManager <>4__this;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action inActionOnLeaderBoardUserDataTrackSent;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action inActionOnGlobalRatingPlayerUpdated;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action inActionOnLeaderBoardUserDataTrackSentError;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action inActionOnUserDataTrackSentError;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<UpdatePlayerStatisticsResult> <>9__3;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action<PlayFabError> <>9__4;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action<UpdateUserDataResult> <>9__2;

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x25B63F4", Offset = "0x25B63F4", VA = "0x25B63F4")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x25B63FC", Offset = "0x25B63FC", VA = "0x25B63FC")]
		internal void <SendAllData>b__0(UpdateUserDataResult callbackUpdateUserData)
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x25B6808", Offset = "0x25B6808", VA = "0x25B6808")]
		internal void <SendAllData>b__2(UpdateUserDataResult insUpdateUserOldDataResult)
		{
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x25B6A74", Offset = "0x25B6A74", VA = "0x25B6A74")]
		internal void <SendAllData>b__3(UpdatePlayerStatisticsResult callbackUpdatePlayerStat)
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x25B6AC4", Offset = "0x25B6AC4", VA = "0x25B6AC4")]
		internal void <SendAllData>b__4(PlayFabError callbackError)
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x25B6B08", Offset = "0x25B6B08", VA = "0x25B6B08")]
		internal void <SendAllData>b__1(PlayFabError callBackError)
		{
		}
	}

	[Token(Token = "0x2000103")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F458", Offset = "0xB1F458")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action inActionOnUpdateUserData;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public playfabManager <>4__this;

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x25B6B4C", Offset = "0x25B6B4C", VA = "0x25B6B4C")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x25B6B54", Offset = "0x25B6B54", VA = "0x25B6B54")]
		internal void <SendTracksProgressTest>b__0(UpdateUserDataResult callbackUpdateUserData)
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x25B6B74", Offset = "0x25B6B74", VA = "0x25B6B74")]
		internal void <SendTracksProgressTest>b__1(PlayFabError callBackError)
		{
		}
	}

	[Token(Token = "0x2000104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F468", Offset = "0xB1F468")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserDataBlock templateUserDataBlock;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public playfabManager <>4__this;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte countGotData;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<LeaderboardPlayerData> resultArray;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<LeaderboardPlayerData>, byte> inCallBack;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte inTrack;

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x25B6B94", Offset = "0x25B6B94", VA = "0x25B6B94")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x25B6B9C", Offset = "0x25B6B9C", VA = "0x25B6B9C")]
		internal void <GetLeaderBoardDataForTrackAroundPlayer>b__0(GetLeaderboardAroundPlayerResult result)
		{
		}
	}

	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F478", Offset = "0xB1F478")]
	private sealed class <>c__DisplayClass37_1
	{
		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GetLeaderboardAroundPlayerResult result;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass37_0 CS$<>8__locals1;

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x25B723C", Offset = "0x25B723C", VA = "0x25B723C")]
		public <>c__DisplayClass37_1()
		{
		}
	}

	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F488", Offset = "0xB1F488")]
	private sealed class <>c__DisplayClass37_2
	{
		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardPlayerData insLeaderBoardData;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass37_1 CS$<>8__locals2;

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x25B7244", Offset = "0x25B7244", VA = "0x25B7244")]
		public <>c__DisplayClass37_2()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x25B7254", Offset = "0x25B7254", VA = "0x25B7254")]
		internal void <GetLeaderBoardDataForTrackAroundPlayer>b__1(GetPlayerCombinedInfoResult resultCallback)
		{
		}
	}

	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F498", Offset = "0xB1F498")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserDataBlock templateUserDataBlock;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public playfabManager <>4__this;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte countGotData;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<LeaderboardPlayerData> resultArray;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<LeaderboardPlayerData>, byte> inCallBack;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte inTrack;

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x25B7608", Offset = "0x25B7608", VA = "0x25B7608")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x25B7610", Offset = "0x25B7610", VA = "0x25B7610")]
		internal void <GetTopLeaderBoardDataForTrack>b__0(GetLeaderboardResult result)
		{
		}
	}

	[Token(Token = "0x2000108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F4A8", Offset = "0xB1F4A8")]
	private sealed class <>c__DisplayClass38_1
	{
		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GetLeaderboardResult result;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass38_0 CS$<>8__locals1;

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x25B7CD4", Offset = "0x25B7CD4", VA = "0x25B7CD4")]
		public <>c__DisplayClass38_1()
		{
		}
	}

	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F4B8", Offset = "0xB1F4B8")]
	private sealed class <>c__DisplayClass38_2
	{
		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardPlayerData insLeaderBoardData;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass38_1 CS$<>8__locals2;

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x25B7CDC", Offset = "0x25B7CDC", VA = "0x25B7CDC")]
		public <>c__DisplayClass38_2()
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x25B7CE4", Offset = "0x25B7CE4", VA = "0x25B7CE4")]
		internal void <GetTopLeaderBoardDataForTrack>b__1(GetPlayerCombinedInfoResult resultCallback)
		{
		}
	}

	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F4C8", Offset = "0xB1F4C8")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<int> resultCallback;

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x25B810C", Offset = "0x25B810C", VA = "0x25B810C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x25B8114", Offset = "0x25B8114", VA = "0x25B8114")]
		internal void <GetYourPositionOnTrack>b__0(GetLeaderboardAroundPlayerResult result)
		{
		}
	}

	[Token(Token = "0x200010B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F4D8", Offset = "0xB1F4D8")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<List<string>> inCallback;

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x25B81B0", Offset = "0x25B81B0", VA = "0x25B81B0")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x25B81B8", Offset = "0x25B81B8", VA = "0x25B81B8")]
		internal void <GetUserInitializedKeys>b__0(GetUserDataResult callback)
		{
		}
	}

	[Token(Token = "0x200010C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F4E8", Offset = "0xB1F4E8")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action inCallback;

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x25B8318", Offset = "0x25B8318", VA = "0x25B8318")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x25B8320", Offset = "0x25B8320", VA = "0x25B8320")]
		internal void <UpdateUserInitializedKeys>b__0(UpdateUserDataResult callback)
		{
		}
	}

	[Token(Token = "0x200010D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F4F8", Offset = "0xB1F4F8")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action inCallback;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action inCallbackError;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public playfabManager <>4__this;

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x25B8340", Offset = "0x25B8340", VA = "0x25B8340")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x25B8348", Offset = "0x25B8348", VA = "0x25B8348")]
		internal void <UpdatePlayerGlobalRating>b__0(UpdatePlayerStatisticsResult callback)
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x25B8368", Offset = "0x25B8368", VA = "0x25B8368")]
		internal void <UpdatePlayerGlobalRating>b__1(PlayFabError callbackError)
		{
		}
	}

	[Token(Token = "0x200010E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F508", Offset = "0xB1F508")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalPlayerData insLocalPlayerData;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<LocalPlayerData> inActionOnLocalPlayerDataGot;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public playfabManager <>4__this;

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x25B83AC", Offset = "0x25B83AC", VA = "0x25B83AC")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x25B83B4", Offset = "0x25B83B4", VA = "0x25B83B4")]
		internal void <GetLocalPlayerData>b__0(GetUserDataResult insGetUserDataResult)
		{
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x25B8604", Offset = "0x25B8604", VA = "0x25B8604")]
		internal void <GetLocalPlayerData>b__1(PlayFabError insError)
		{
		}
	}

	[Token(Token = "0x200010F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F518", Offset = "0xB1F518")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> insListGetUserDataRequestKeys;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<float> insListFloatOwnTime;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> inListTrackNames;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float defaultValue;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string inPlayFabID;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<List<float>> callbackData;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public playfabManager <>4__this;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<UpdateUserDataResult> <>9__2;

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x25B86A0", Offset = "0x25B86A0", VA = "0x25B86A0")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x25B86A8", Offset = "0x25B86A8", VA = "0x25B86A8")]
		internal void <GetUserDataForLeaderboard>b__0(GetUserDataResult insGetUserDataResult)
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x25B8D24", Offset = "0x25B8D24", VA = "0x25B8D24")]
		internal void <GetUserDataForLeaderboard>b__2(UpdateUserDataResult insUpdateUserDataResult)
		{
		}
	}

	[Token(Token = "0x2000110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F528", Offset = "0xB1F528")]
	private sealed class <>c__DisplayClass44_1
	{
		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> insListTracksNamesOwnTimeOldData;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> insListTracksNamesOwnCarIDOldData;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass44_0 CS$<>8__locals1;

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x25B8D1C", Offset = "0x25B8D1C", VA = "0x25B8D1C")]
		public <>c__DisplayClass44_1()
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x25B8D7C", Offset = "0x25B8D7C", VA = "0x25B8D7C")]
		internal void <GetUserDataForLeaderboard>b__1(GetUserDataResult insGetUserDataRequestOldDataTimeResult)
		{
		}
	}

	[Token(Token = "0x2000111")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F538", Offset = "0xB1F538")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string insUsername;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string insCurrentPlatform;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string inAccountPlatformName;

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x25B9538", Offset = "0x25B9538", VA = "0x25B9538")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x25B9540", Offset = "0x25B9540", VA = "0x25B9540")]
		internal void <CheckUserNameAndFlag>b__0()
		{
		}
	}

	[Token(Token = "0x2000112")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F548", Offset = "0xB1F548")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public playfabManager <>4__this;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action inCallbackAction;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string inName;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte i;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string inCurrentPlatform;

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x25B9814", Offset = "0x25B9814", VA = "0x25B9814")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x25B981C", Offset = "0x25B981C", VA = "0x25B981C")]
		internal void <UpdateUserTitleDisplayName>b__0(UpdateUserTitleDisplayNameResult gotResultCallback)
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x25B9864", Offset = "0x25B9864", VA = "0x25B9864")]
		internal void <UpdateUserTitleDisplayName>b__1(PlayFabError gotError)
		{
		}
	}

	[Token(Token = "0x2000113")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F558", Offset = "0xB1F558")]
	private sealed class <>c__DisplayClass54_0
	{
		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<byte> inActionByte;

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x25B98AC", Offset = "0x25B98AC", VA = "0x25B98AC")]
		public <>c__DisplayClass54_0()
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x25B98B4", Offset = "0x25B98B4", VA = "0x25B98B4")]
		internal void <GetCountTournamentAttempts>b__0(ExecuteCloudScriptResult insExecuteCloudScriptResult)
		{
		}
	}

	[Token(Token = "0x2000114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F568", Offset = "0xB1F568")]
	private sealed class <>c__DisplayClass56_0
	{
		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action inActionSuccessful;

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x25B9974", Offset = "0x25B9974", VA = "0x25B9974")]
		public <>c__DisplayClass56_0()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x25B997C", Offset = "0x25B997C", VA = "0x25B997C")]
		internal void <SendRecordTransforms>b__0(UpdateUserDataResult callbackUpdateUserData)
		{
		}
	}

	[Token(Token = "0x2000115")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F578", Offset = "0xB1F578")]
	private sealed class <>c__DisplayClass57_0
	{
		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrackUIController inTrackUIController;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float inTime;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public playfabManager <>4__this;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CustomAnim inCustomAnim;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte inPlayerPlace;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action inActionOnUserDataTrackSent;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action inActionOnLeaderBoardUserDataTrackSent;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action inActionOnGlobalRatingPlayerUpdated;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action inActionOnLeaderBoardUserDataTrackSentError;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action inActionOnUserDataTrackSentError;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action<PlayFabError> <>9__3;

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x25B9990", Offset = "0x25B9990", VA = "0x25B9990")]
		public <>c__DisplayClass57_0()
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x25B9998", Offset = "0x25B9998", VA = "0x25B9998")]
		internal void <RecordTournamentAttempt>b__0(byte inCountAttempts)
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x25B9BA0", Offset = "0x25B9BA0", VA = "0x25B9BA0")]
		internal void <RecordTournamentAttempt>b__3(PlayFabError callbackError)
		{
		}
	}

	[Token(Token = "0x2000116")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F588", Offset = "0xB1F588")]
	private sealed class <>c__DisplayClass57_1
	{
		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string insSceneName;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass57_0 CS$<>8__locals1;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<ExecuteCloudScriptResult> <>9__2;

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x25B9B98", Offset = "0x25B9B98", VA = "0x25B9B98")]
		public <>c__DisplayClass57_1()
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x25B9BF4", Offset = "0x25B9BF4", VA = "0x25B9BF4")]
		internal void <RecordTournamentAttempt>b__1()
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x25B9E48", Offset = "0x25B9E48", VA = "0x25B9E48")]
		internal void <RecordTournamentAttempt>b__2(ExecuteCloudScriptResult insExecuteCloudScriptResult)
		{
		}
	}

	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F598", Offset = "0xB1F598")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<UserDataBlock> inCallbackOnDataReceived;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action inCallbackOnDataNotFound;

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x25B9F50", Offset = "0x25B9F50", VA = "0x25B9F50")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x25B9F58", Offset = "0x25B9F58", VA = "0x25B9F58")]
		internal void <GetOwnUserDataBlock>b__0(ExecuteCloudScriptResult insExecuteCloudScriptResult)
		{
		}
	}

	[Token(Token = "0x2000118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F5A8", Offset = "0xB1F5A8")]
	private sealed class <>c__DisplayClass66_0
	{
		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<UserDataBlock> inCallbackOnDataReceived;

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x25BA08C", Offset = "0x25BA08C", VA = "0x25BA08C")]
		public <>c__DisplayClass66_0()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x25BA094", Offset = "0x25BA094", VA = "0x25BA094")]
		internal void <ChooseTeam>b__0(ExecuteCloudScriptResult insExecuteCloudScriptResult)
		{
		}
	}

	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F5B8", Offset = "0xB1F5B8")]
	private sealed class <>c__DisplayClass67_0
	{
		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<TournamentInfo> inCallbackOnDataReceived;

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x25BA1E0", Offset = "0x25BA1E0", VA = "0x25BA1E0")]
		public <>c__DisplayClass67_0()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x25BA1E8", Offset = "0x25BA1E8", VA = "0x25BA1E8")]
		internal void <GetTournamentInfo>b__0(ExecuteCloudScriptResult insExecuteCloudScriptResult)
		{
		}
	}

	[Token(Token = "0x200011A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F5C8", Offset = "0xB1F5C8")]
	private sealed class <>c__DisplayClass69_0
	{
		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<LeaderboardPlayerData>[] tempBuffer;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte countDataReceived;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public playfabManager <>4__this;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IReadOnlyList<string> inLeaderboardNames;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxResultsCount;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<List<LeaderboardPlayerData>, byte> <>9__0;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<List<LeaderboardPlayerData>, byte> <>9__2;

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x25BA300", Offset = "0x25BA300", VA = "0x25BA300")]
		public <>c__DisplayClass69_0()
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x25BA308", Offset = "0x25BA308", VA = "0x25BA308")]
		internal void <IEGetTopManyLeaderBoardTeamDataForTrack>b__0(List<LeaderboardPlayerData> inResponseData, byte id)
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x25BA39C", Offset = "0x25BA39C", VA = "0x25BA39C")]
		internal void <IEGetTopManyLeaderBoardTeamDataForTrack>b__2(List<LeaderboardPlayerData> inResponseData, byte id)
		{
		}
	}

	[Token(Token = "0x200011B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F5D8", Offset = "0xB1F5D8")]
	private sealed class <>c__DisplayClass69_1
	{
		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass69_0 CS$<>8__locals1;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<List<LeaderboardPlayerData>, byte> <>9__3;

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x25BA430", Offset = "0x25BA430", VA = "0x25BA430")]
		public <>c__DisplayClass69_1()
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x25BA438", Offset = "0x25BA438", VA = "0x25BA438")]
		internal void <IEGetTopManyLeaderBoardTeamDataForTrack>b__1(int playerPos)
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x25BA68C", Offset = "0x25BA68C", VA = "0x25BA68C")]
		internal void <IEGetTopManyLeaderBoardTeamDataForTrack>b__3(List<LeaderboardPlayerData> inResponseData, byte id)
		{
		}
	}

	[Token(Token = "0x200011C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F5E8", Offset = "0xB1F5E8")]
	private sealed class <>c__DisplayClass69_2
	{
		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<LeaderboardPlayerData> inResponseData;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass69_1 CS$<>8__locals2;

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x25BA870", Offset = "0x25BA870", VA = "0x25BA870")]
		public <>c__DisplayClass69_2()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x25BA878", Offset = "0x25BA878", VA = "0x25BA878")]
		internal void <IEGetTopManyLeaderBoardTeamDataForTrack>b__4(List<LeaderboardPlayerData> inResponseDataOwn, byte id)
		{
		}
	}

	[Token(Token = "0x200011D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F5F8", Offset = "0xB1F5F8")]
	private sealed class <IEGetTopManyLeaderBoardTeamDataForTrack>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public playfabManager <>4__this;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IReadOnlyList<string> inLeaderboardNames;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxResultsCount;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass69_0 <>8__1;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte countRequestAtTime;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public byte playerTeamID;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<List<List<LeaderboardPlayerData>>> inCallBack;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private byte <countDataRequested>5__2;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E7")]
			[Address(RVA = "0x25BB858", Offset = "0x25BB858", VA = "0x25BB858", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0x25BB8A0", Offset = "0x25BB8A0", VA = "0x25BB8A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x25BB16C", Offset = "0x25BB16C", VA = "0x25BB16C")]
		[DebuggerHidden]
		public <IEGetTopManyLeaderBoardTeamDataForTrack>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x25BB198", Offset = "0x25BB198", VA = "0x25BB198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x25BB19C", Offset = "0x25BB19C", VA = "0x25BB19C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x25BB860", Offset = "0x25BB860", VA = "0x25BB860", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F608", Offset = "0xB1F608")]
	private sealed class <>c__DisplayClass70_0
	{
		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float inTime;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomAnim inCustomAnim;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte inPlayerPlace;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string insSceneName;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, object> additionalParams;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action inActionOnUserDataTrackSent;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public playfabManager <>4__this;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action inActionOnLeaderBoardUserDataTrackSent;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action inActionOnGlobalRatingPlayerUpdated;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action inActionOnLeaderBoardUserDataTrackSentError;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action inActionOnUserDataTrackSentError;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action<ExecuteCloudScriptResult> <>9__1;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Action<PlayFabError> <>9__2;

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x25BA96C", Offset = "0x25BA96C", VA = "0x25BA96C")]
		public <>c__DisplayClass70_0()
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x25BA974", Offset = "0x25BA974", VA = "0x25BA974")]
		internal void <MakeFlightRecord>b__0()
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x25BAFFC", Offset = "0x25BAFFC", VA = "0x25BAFFC")]
		internal void <MakeFlightRecord>b__1(ExecuteCloudScriptResult insExecuteCloudScriptResult)
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x25BB118", Offset = "0x25BB118", VA = "0x25BB118")]
		internal void <MakeFlightRecord>b__2(PlayFabError callbackError)
		{
		}
	}

	[Token(Token = "0x4000537")]
	private const string DUMMY_ID = "_DUMMY_CONST_ID_";

	[Token(Token = "0x4000538")]
	private const string DUMMY_ID_PLAYFAB = "BFF54F7DAA392CB2";

	[Token(Token = "0x4000539")]
	public const string OCULUS_QUEST_PLAYFAB_ACCOUNT = "OcQst";

	[Token(Token = "0x400053A")]
	public const string OCULUS_DESKTOP_PLAYFAB_ACCOUNT = "OcDsk";

	[Token(Token = "0x400053B")]
	public const string STEAM_PLAYFAB_ACCOUNT = "Steam";

	[Token(Token = "0x400053C")]
	public const string PICO_PLAYFAB_ACCOUNT = "Pico";

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB22D68", Offset = "0xB22D68")]
	public string localPlayerPlayFabId;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool creatingDummy;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ghostPrefab;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RaceManager raceManager;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] customLoadPlayFabIDs;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22DB0", Offset = "0xB22DB0")]
	public bool CaseOn;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UserDataBlock CaseTestUserDataBlock;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TournamentInfo CaseTestTournamentInfo;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<LeaderboardPlayerData> CaseLeaderBoardPlayerDataGetTopLB;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<LeaderboardPlayerData> CaseLeaderBoardPlayerDataGetAroundPlayer;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int CasePlayerPosOnTrack;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string CasePlayfabID;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<float> CaseOwnData;

	[Token(Token = "0x14000005")]
	public event Action GotAllGameData
	{
		[Token(Token = "0x600045E")]
		[Address(RVA = "0x1FF7220", Offset = "0x1FF7220", VA = "0x1FF7220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C7E8", Offset = "0xB2C7E8")]
		add
		{
		}
		[Token(Token = "0x600045F")]
		[Address(RVA = "0x1FF72C0", Offset = "0x1FF72C0", VA = "0x1FF72C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C7F8", Offset = "0xB2C7F8")]
		remove
		{
		}
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x1FF04B4", Offset = "0x1FF04B4", VA = "0x1FF04B4")]
	private static List<float> ConvertStringToFloatList(string inArray)
	{
		return null;
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1FF05E8", Offset = "0x1FF05E8", VA = "0x1FF05E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1FF08B8", Offset = "0x1FF08B8", VA = "0x1FF08B8")]
	private void SendDataDummy(string[][] inSceneNames)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1FF0C98", Offset = "0x1FF0C98", VA = "0x1FF0C98")]
	private void LoginWithCustomID(string inCustomID)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1FF0FB4", Offset = "0x1FF0FB4", VA = "0x1FF0FB4")]
	public void AwakeCustom()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1FF10C8", Offset = "0x1FF10C8", VA = "0x1FF10C8")]
	private void Login()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x1FF1420", Offset = "0x1FF1420", VA = "0x1FF1420")]
	public void OnError(PlayFabError error)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x1FF14BC", Offset = "0x1FF14BC", VA = "0x1FF14BC")]
	private void OnLoginSuccess(LoginResult inLoginResult)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1FF2180", Offset = "0x1FF2180", VA = "0x1FF2180")]
	private void OnLoginSuccessForDummy(LoginResult inLoginResult)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1FF2358", Offset = "0x1FF2358", VA = "0x1FF2358")]
	private void OnUserNameAndFlagUpdated(UpdateUserDataResult inUpdateUserDataResult)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x1FF2818", Offset = "0x1FF2818", VA = "0x1FF2818")]
	public void UpdateUserNameFlag(string inName, string inFlagID, [Optional] Action inActionCallback)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x1FF2AD8", Offset = "0x1FF2AD8", VA = "0x1FF2AD8")]
	public void GetTrackPlayerData(string inPlayFabID, string inSceneName, Action<TrackPlayerData> onGetTrackPlayerDataAction)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1FF321C", Offset = "0x1FF321C", VA = "0x1FF321C")]
	public void GetTrackPlayersData(string[] inPlayFabIDs, string inSceneName, byte inCountOfEnemies, Action<TrackPlayerData> inActionOnGetTrackPlayerData, Action inActionAllTrackPlayersDataGot, byte i = 0)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1FF34B0", Offset = "0x1FF34B0", VA = "0x1FF34B0")]
	public void GetEnemiesTrackDataToTrack(byte inCountOfEnemies, byte inCountOfIterationsGetData, string inSceneName, List<PlayerLeaderboardEntry> inLeaderboardResult, Action<List<CustomReader>> inActionCustomReaderList)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1FF3DBC", Offset = "0x1FF3DBC", VA = "0x1FF3DBC")]
	public void InitializeEnemyShip([Optional] TrackPlayerData inTrackPlayerData, [Optional] Action<CustomReader> inActionReturnCustomReader, [Optional] CustomReader inCustomReader, byte i = 0)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1FF4498", Offset = "0x1FF4498", VA = "0x1FF4498")]
	public void GetEnemiesToTrack(byte inCountOfEnemies, TypeOfGettingEnemiesToTrack inTypeOfGettingEnemiesToTrack, Action<List<CustomReader>> inActionCustomReaderList, byte inCountOfIterationsGetData = 1)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x1FF4928", Offset = "0x1FF4928", VA = "0x1FF4928")]
	public void GetTotalPlayersForTrack(string inTrackName, Action<int> resultCallback, bool nullMethodCrutch = false)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1FF4BA0", Offset = "0x1FF4BA0", VA = "0x1FF4BA0")]
	public void SendAllData(float inTime, byte inPlayerPlace, CustomAnim inCustomAnim, MenuController.TracksProgress inTracksProgress, Action inActionOnUserDataTrackSent, Action inActionOnLeaderBoardUserDataTrackSent, Action inActionOnGlobalRatingPlayerUpdated, Action inActionOnUserDataTrackSentError, Action inActionOnLeaderBoardUserDataTrackSentError, Action inActionOnGlobalRatingPlayerUpdatedError)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x1FF526C", Offset = "0x1FF526C", VA = "0x1FF526C")]
	public void SendTracksProgressTest(MenuController.TracksProgress inTracksProgress, Action inActionOnUpdateUserData)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x1FF550C", Offset = "0x1FF550C", VA = "0x1FF550C")]
	public void GetLeaderBoardDataForTrackAroundPlayer(string inTrackName, int maxResultsCount, Action<List<LeaderboardPlayerData>, byte> inCallBack, byte inTrack)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1FF596C", Offset = "0x1FF596C", VA = "0x1FF596C")]
	public void GetTopLeaderBoardDataForTrack(string inTrackName, int maxResultsCount, Action<List<LeaderboardPlayerData>, byte> inCallBack, byte inTrack = 0, bool needTeamInfo = false)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1FF5DD0", Offset = "0x1FF5DD0", VA = "0x1FF5DD0")]
	public void GetYourPositionOnTrack(string inTrackName, Action<int> resultCallback)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1FF5FD8", Offset = "0x1FF5FD8", VA = "0x1FF5FD8")]
	public void GetUserInitializedKeys(Action<List<string>> inCallback)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1FF6224", Offset = "0x1FF6224", VA = "0x1FF6224")]
	public void UpdateUserInitializedKeys(List<string> inKeys, Action inCallback)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1FF64CC", Offset = "0x1FF64CC", VA = "0x1FF64CC")]
	public void UpdatePlayerGlobalRating(string inSceneName, float inStatValue, Action inCallback, Action inCallbackError)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1FF6778", Offset = "0x1FF6778", VA = "0x1FF6778")]
	public void GetLocalPlayerData(Action<LocalPlayerData> inActionOnLocalPlayerDataGot, [Optional] List<string> inRequestKeys)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1FF6A14", Offset = "0x1FF6A14", VA = "0x1FF6A14")]
	public void GetUserDataForLeaderboard(string inPlayFabID, List<string> inListTrackNames, Action<List<float>> callbackData, float defaultValue)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1FF186C", Offset = "0x1FF186C", VA = "0x1FF186C")]
	private void CheckUserNameAndFlag(string inAccountPlatformName, string inPlayFabUserName, byte inPlayFabUserFlagID, Action inActionOnCheck)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1FF2448", Offset = "0x1FF2448", VA = "0x1FF2448")]
	private void UpdateUserTitleDisplayName(string inName, [Optional] Action inCallbackAction, byte i = 0, string inCurrentPlatform = "")
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1FF6D80", Offset = "0x1FF6D80", VA = "0x1FF6D80")]
	private void OnUpdatedUserTitleDisplayName(UpdateUserTitleDisplayNameResult inResult)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1FF6E30", Offset = "0x1FF6E30", VA = "0x1FF6E30")]
	private void OnErrorUpdateUserTitleDisplayName(string inName, Action inCallbackAction, byte i, string inCurrentPlatform)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1FF7168", Offset = "0x1FF7168", VA = "0x1FF7168")]
	private void OnPlayerStatisticsUpdated(string inSceneName)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1FF7360", Offset = "0x1FF7360", VA = "0x1FF7360")]
	public void GetCountTournamentAttempts(Action<byte> inActionByte, bool isAfterGame = false)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1FF758C", Offset = "0x1FF758C", VA = "0x1FF758C")]
	public void SendPartyMetrics(string[] inArrString)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1FF7868", Offset = "0x1FF7868", VA = "0x1FF7868")]
	public void SendRecordTransforms(CustomAnim inCustomAnim, Action inActionSuccessful)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1FF7DBC", Offset = "0x1FF7DBC", VA = "0x1FF7DBC")]
	public void RecordTournamentAttempt(TrackUIController inTrackUIController, float inTime, byte inPlayerPlace, CustomAnim inCustomAnim, Action inActionOnUserDataTrackSent, Action inActionOnLeaderBoardUserDataTrackSent, Action inActionOnGlobalRatingPlayerUpdated, Action inActionOnUserDataTrackSentError, Action inActionOnLeaderBoardUserDataTrackSentError, Action inActionOnGlobalRatingPlayerUpdatedError)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1FF7F5C", Offset = "0x1FF7F5C", VA = "0x1FF7F5C")]
	public void GetOwnUserDataBlock(Action<UserDataBlock> inCallbackOnDataReceived, Action inCallbackOnDataNotFound, bool nullMethodCrutch = false)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1FF8194", Offset = "0x1FF8194", VA = "0x1FF8194")]
	public void ChooseTeam(byte inTeamID, Action<UserDataBlock> inCallbackOnDataReceived)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1FF83C0", Offset = "0x1FF83C0", VA = "0x1FF83C0")]
	public void GetTournamentInfo(Action<TournamentInfo> inCallbackOnDataReceived, bool nullMethodCrutch = false)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1FF85E4", Offset = "0x1FF85E4", VA = "0x1FF85E4")]
	public void GetTopManyLeaderBoardTeamDataForTrack(IReadOnlyList<string> inLeaderboardNames, int maxResultsCount, byte countRequestAtTime, Action<List<List<LeaderboardPlayerData>>> inCallBack, byte playerTeamID = byte.MaxValue)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1FF8610", Offset = "0x1FF8610", VA = "0x1FF8610")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2C808", Offset = "0xB2C808")]
	private IEnumerator IEGetTopManyLeaderBoardTeamDataForTrack(IReadOnlyList<string> inLeaderboardNames, int maxResultsCount, byte countRequestAtTime, Action<List<List<LeaderboardPlayerData>>> inCallBack, byte playerTeamID = byte.MaxValue)
	{
		return null;
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x1FF86E0", Offset = "0x1FF86E0", VA = "0x1FF86E0")]
	public void MakeFlightRecord(float inTime, byte inPlayerPlace, CustomAnim inCustomAnim, Action inActionOnUserDataTrackSent, Action inActionOnLeaderBoardUserDataTrackSent, Action inActionOnGlobalRatingPlayerUpdated, Action inActionOnUserDataTrackSentError, Action inActionOnLeaderBoardUserDataTrackSentError, [Optional] Dictionary<string, object> additionalParams)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1FF8954", Offset = "0x1FF8954", VA = "0x1FF8954")]
	public playfabManager()
	{
	}
}
[Token(Token = "0x200011F")]
public class playfabMultiplayer : MonoBehaviour
{
	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1FF8AC8", Offset = "0x1FF8AC8", VA = "0x1FF8AC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1FF8ACC", Offset = "0x1FF8ACC", VA = "0x1FF8ACC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1FF8AD0", Offset = "0x1FF8AD0", VA = "0x1FF8AD0")]
	public playfabMultiplayer()
	{
	}
}
[Token(Token = "0x2000120")]
public class DemoScript : MonoBehaviour
{
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputField networkIdTextBox;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text output;

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x220E8A4", Offset = "0x220E8A4", VA = "0x220E8A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x220EBC0", Offset = "0x220EBC0", VA = "0x220EBC0")]
	public void CreateAndJoinToNetwork()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x220EC2C", Offset = "0x220EC2C", VA = "0x220EC2C")]
	public void JoinNetwork()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x220ECB0", Offset = "0x220ECB0", VA = "0x220ECB0")]
	private void OnDataMessageReceived(object sender, PlayFabPlayer from, byte[] buffer)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x220ED88", Offset = "0x220ED88", VA = "0x220ED88")]
	private void OnDataMessageNoCopyReceived(object sender, PlayFabPlayer from, IntPtr buffer, uint bufferSize)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x220EE60", Offset = "0x220EE60", VA = "0x220EE60")]
	private void OnNetworkJoined(object sender, string networkId)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x220F0AC", Offset = "0x220F0AC", VA = "0x220F0AC")]
	private void OnLoginSuccess(LoginResult result)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x220F184", Offset = "0x220F184", VA = "0x220F184")]
	private void OnLoginFailure(PlayFabError error)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x220F280", Offset = "0x220F280", VA = "0x220F280")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x220F284", Offset = "0x220F284", VA = "0x220F284")]
	public DemoScript()
	{
	}
}
[Token(Token = "0x2000121")]
public static class JsonUtilityArrays
{
	[Serializable]
	[Token(Token = "0x2000122")]
	private class Wrapper<T>
	{
		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] Items;

		[Token(Token = "0x60004FE")]
		public Wrapper()
		{
		}
	}

	[Token(Token = "0x60004FB")]
	public static T[] FromJson<T>(string json)
	{
		return null;
	}

	[Token(Token = "0x60004FC")]
	public static string ToJson<T>(T[] array)
	{
		return null;
	}

	[Token(Token = "0x60004FD")]
	public static string ToJson<T>(T[] array, bool prettyPrint)
	{
		return null;
	}
}
[Token(Token = "0x2000123")]
public class PositionNode : MonoBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x20BCE74", Offset = "0x20BCE74", VA = "0x20BCE74")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x20BD5A0", Offset = "0x20BD5A0", VA = "0x20BD5A0")]
	public PositionNode()
	{
	}
}
[Token(Token = "0x2000124")]
public class PositionTracker : MonoBehaviour
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isUsed;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> targets;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> NodeOnTarget;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] Nodes;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x20BD5A8", Offset = "0x20BD5A8", VA = "0x20BD5A8")]
	public int getPosition()
	{
		return default(int);
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x20BD15C", Offset = "0x20BD15C", VA = "0x20BD15C")]
	public void ChangeNode(Transform ship, int indexOfNode)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x20BD8D0", Offset = "0x20BD8D0", VA = "0x20BD8D0")]
	public PositionTracker()
	{
	}
}
[Token(Token = "0x2000125")]
public class RaceManager : MonoBehaviour
{
	[Token(Token = "0x2000126")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F618", Offset = "0xB1F618")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaceManager <>4__this;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float insCurrentPositionInRace;

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x2009E58", Offset = "0x2009E58", VA = "0x2009E58")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x2009E60", Offset = "0x2009E60", VA = "0x2009E60")]
		internal bool <calculatePlayerPosition>b__0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000127")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F628", Offset = "0xB1F628")]
	private sealed class <PlaySoundOfPosition>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RaceManager <>4__this;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int position;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x200A014", Offset = "0x200A014", VA = "0x200A014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x200A05C", Offset = "0x200A05C", VA = "0x200A05C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x2009E9C", Offset = "0x2009E9C", VA = "0x2009E9C")]
		[DebuggerHidden]
		public <PlaySoundOfPosition>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x2009EC8", Offset = "0x2009EC8", VA = "0x2009EC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x2009ECC", Offset = "0x2009ECC", VA = "0x2009ECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x200A01C", Offset = "0x200A01C", VA = "0x200A01C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22EC8", Offset = "0xB22EC8")]
	public List<Transform> enemies;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentPlayerPosition;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float startTime;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22F00", Offset = "0xB22F00")]
	public bool finished;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CustomRecorder customRecorder;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh posText;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int prevPos;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int averagePosition;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EventInstance positionSound;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator soundCoroutine;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform posOfCalculations;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PositionTracker posTracker;

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x20C12C0", Offset = "0x20C12C0", VA = "0x20C12C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x20C1614", Offset = "0x20C1614", VA = "0x20C1614")]
	private void calculatePlayerPosition()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x20C18E4", Offset = "0x20C18E4", VA = "0x20C18E4")]
	private float CalculatePositionInRace(Transform target)
	{
		return default(float);
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x20C1970", Offset = "0x20C1970", VA = "0x20C1970")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2C8C0", Offset = "0xB2C8C0")]
	private IEnumerator PlaySoundOfPosition(int position)
	{
		return null;
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x20C19F8", Offset = "0x20C19F8", VA = "0x20C19F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x20C1A08", Offset = "0x20C1A08", VA = "0x20C1A08")]
	private void StartRecord()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x20C1A34", Offset = "0x20C1A34", VA = "0x20C1A34")]
	public void FinishLine()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x20C1B60", Offset = "0x20C1B60", VA = "0x20C1B60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x20C1C28", Offset = "0x20C1C28", VA = "0x20C1C28")]
	public RaceManager()
	{
	}
}
[Token(Token = "0x2000128")]
public class RecordCopyTransforms : MonoBehaviour
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CopyTransform;

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x20C1ECC", Offset = "0x20C1ECC", VA = "0x20C1ECC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x20C1F64", Offset = "0x20C1F64", VA = "0x20C1F64")]
	public RecordCopyTransforms()
	{
	}
}
[Token(Token = "0x2000129")]
public class RecorderFollower : MonoBehaviour
{
	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject origin;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothFactor;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool lostControl;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x20C2138", Offset = "0x20C2138", VA = "0x20C2138")]
	private void Start()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x20C213C", Offset = "0x20C213C", VA = "0x20C213C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x20C2298", Offset = "0x20C2298", VA = "0x20C2298")]
	public RecorderFollower()
	{
	}
}
[Token(Token = "0x200012A")]
public class RecorderManager : MonoBehaviour
{
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F638", Offset = "0xB1F638")]
	private sealed class <ExecuteAfterTime>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RecorderManager <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000522")]
			[Address(RVA = "0x200A234", Offset = "0x200A234", VA = "0x200A234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000524")]
			[Address(RVA = "0x200A27C", Offset = "0x200A27C", VA = "0x200A27C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x200A064", Offset = "0x200A064", VA = "0x200A064")]
		[DebuggerHidden]
		public <ExecuteAfterTime>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x200A090", Offset = "0x200A090", VA = "0x200A090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x200A094", Offset = "0x200A094", VA = "0x200A094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x200A23C", Offset = "0x200A23C", VA = "0x200A23C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> enemies;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public boolHandler boolHandler;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeRemaining;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool timerIsRunning;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text timeText;

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x20C22A0", Offset = "0x20C22A0", VA = "0x20C22A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x20C2478", Offset = "0x20C2478", VA = "0x20C2478")]
	private void Update()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x20C257C", Offset = "0x20C257C", VA = "0x20C257C")]
	private void DisplayTime(float timeToDisplay)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x20C23E8", Offset = "0x20C23E8", VA = "0x20C23E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2C978", Offset = "0xB2C978")]
	private IEnumerator ExecuteAfterTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x20C2684", Offset = "0x20C2684", VA = "0x20C2684")]
	public RecorderManager()
	{
	}
}
[Token(Token = "0x200012C")]
public class RecordRawData : MonoBehaviour
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool record;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isPlaying;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Vector3> savedPositions;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Vector3> recordingPositions;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 lastFramePosition;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int savedPositionsId;

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x20C1F6C", Offset = "0x20C1F6C", VA = "0x20C1F6C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x20C1F7C", Offset = "0x20C1F7C", VA = "0x20C1F7C")]
	public void Record()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x20C2008", Offset = "0x20C2008", VA = "0x20C2008")]
	public void PlayRecording()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x20C2130", Offset = "0x20C2130", VA = "0x20C2130")]
	public RecordRawData()
	{
	}
}
[Token(Token = "0x200012D")]
public class RightCockpitJoystick : MonoBehaviour
{
	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform joystick;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 rotationOffset;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion defaultRotation;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x20C3FF0", Offset = "0x20C3FF0", VA = "0x20C3FF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x20C4028", Offset = "0x20C4028", VA = "0x20C4028")]
	private void Update()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x20C402C", Offset = "0x20C402C", VA = "0x20C402C")]
	public RightCockpitJoystick()
	{
	}
}
[Token(Token = "0x200012E")]
public class RowSetter : MonoBehaviour
{
	[Token(Token = "0x600052C")]
	[Address(RVA = "0x20C5E34", Offset = "0x20C5E34", VA = "0x20C5E34")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x20C5F14", Offset = "0x20C5F14", VA = "0x20C5F14")]
	private void Update()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x20C5F18", Offset = "0x20C5F18", VA = "0x20C5F18")]
	public RowSetter()
	{
	}
}
[Token(Token = "0x200012F")]
public class AnimatedAI : MonoBehaviour
{
	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool strictMovement;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lerpedMovement;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VisualEffect[] boost;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VisualEffect[] boostFront;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VisualEffect[] main;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxVelocityBoost;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float maxVelocityMain;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float maxVelocityBoostFront;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float smooth;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rotationSpeed;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 velocity;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float lerpedSmoothTime;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float lerpStep;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float currentLerpStep;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float lerpedMaxSpeed;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float speedStep;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxSpeed;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float minSpeed;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float targetSpeed;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float currentSpeed;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float maxDistance;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float minDistance;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform target;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Rigidbody rb;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 direction;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float bankOffset;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float bankLimit;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float bankMultiplier;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public boolHandler boolHandler;

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x22C6620", Offset = "0x22C6620", VA = "0x22C6620")]
	private void Start()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x22C6694", Offset = "0x22C6694", VA = "0x22C6694")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x22C6E18", Offset = "0x22C6E18", VA = "0x22C6E18")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x22C6744", Offset = "0x22C6744", VA = "0x22C6744")]
	private void LerpedMovement()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x22C66E0", Offset = "0x22C66E0", VA = "0x22C66E0")]
	private void StrictMovement()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x22C6840", Offset = "0x22C6840", VA = "0x22C6840")]
	private void AdvancedMovement()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x22C6EE4", Offset = "0x22C6EE4", VA = "0x22C6EE4")]
	public AnimatedAI()
	{
	}
}
[Token(Token = "0x2000130")]
public class AnimationControllerScript : MonoBehaviour
{
	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F648", Offset = "0xB1F648")]
	private sealed class <raceStart>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startTimer;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationControllerScript <>4__this;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600053F")]
			[Address(RVA = "0x1FF8D40", Offset = "0x1FF8D40", VA = "0x1FF8D40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0x1FF8D88", Offset = "0x1FF8D88", VA = "0x1FF8D88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x1FF8C3C", Offset = "0x1FF8C3C", VA = "0x1FF8C3C")]
		[DebuggerHidden]
		public <raceStart>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x1FF8C68", Offset = "0x1FF8C68", VA = "0x1FF8C68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x1FF8C6C", Offset = "0x1FF8C6C", VA = "0x1FF8C6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x1FF8D48", Offset = "0x1FF8D48", VA = "0x1FF8D48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startTimer;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB22FC8", Offset = "0xB22FC8")]
	public Transform player;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform ship;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23000", Offset = "0xB23000")]
	public float maxPlayerDistance;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minPlayerDistance;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxShipDistance;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23038", Offset = "0xB23038")]
	public float minWhenFarBehind;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxWhenFarBehind;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float minWhenFarAhead;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxWhenFarAhead;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minDefault;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxDefault;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float bonus;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23070", Offset = "0xB23070")]
	public float speedWhenFarBehind;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float speedWhenFarAhead;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float speedDefault;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float playbackSpeed;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int randomInt;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float playerDistance;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float distance;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x22C6F18", Offset = "0x22C6F18", VA = "0x22C6F18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x22C7080", Offset = "0x22C7080", VA = "0x22C7080")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x22C729C", Offset = "0x22C729C", VA = "0x22C729C")]
	private void onTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x22C7394", Offset = "0x22C7394", VA = "0x22C7394")]
	private void changeAnimation()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x22C6FF0", Offset = "0x22C6FF0", VA = "0x22C6FF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2CA30", Offset = "0xB2CA30")]
	private IEnumerator raceStart(float startTimer)
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x22C73F0", Offset = "0x22C73F0", VA = "0x22C73F0")]
	public AnimationControllerScript()
	{
	}
}
[Token(Token = "0x2000132")]
public class BoostZone : MonoBehaviour
{
	[Token(Token = "0x6000542")]
	[Address(RVA = "0x22CDBD0", Offset = "0x22CDBD0", VA = "0x22CDBD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x22CDBD4", Offset = "0x22CDBD4", VA = "0x22CDBD4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x22CDBD8", Offset = "0x22CDBD8", VA = "0x22CDBD8")]
	public BoostZone()
	{
	}
}
[Token(Token = "0x2000133")]
public class carCamera : MonoBehaviour
{
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float height;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float damping;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool smoothRotation;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool followBehind;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationDamping;

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1FEA8D0", Offset = "0x1FEA8D0", VA = "0x1FEA8D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1FEAB28", Offset = "0x1FEAB28", VA = "0x1FEAB28")]
	public carCamera()
	{
	}
}
[Token(Token = "0x2000134")]
public class CockpitRaceTracker : MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 bounds;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int numberOfCheckpoints;

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x2244D38", Offset = "0x2244D38", VA = "0x2244D38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x2244D3C", Offset = "0x2244D3C", VA = "0x2244D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x2244D40", Offset = "0x2244D40", VA = "0x2244D40")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x2244E68", Offset = "0x2244E68", VA = "0x2244E68")]
	public CockpitRaceTracker()
	{
	}
}
[Token(Token = "0x2000135")]
public class CustomReaderSinglePlayer : MonoBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isPlaying;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string file;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CustomAnim playAnimation;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int frame;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int maxFrame;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TempGasController tempGasController;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StudioEventEmitter emitter;

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x220B5B0", Offset = "0x220B5B0", VA = "0x220B5B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x220B730", Offset = "0x220B730", VA = "0x220B730")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x220B838", Offset = "0x220B838", VA = "0x220B838")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x220B83C", Offset = "0x220B83C", VA = "0x220B83C")]
	public CustomReaderSinglePlayer()
	{
	}
}
[Token(Token = "0x2000136")]
public class CustomRecorderSinglePlayer : MonoBehaviour
{
	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isRecording;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string file;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CustomAnim customAnim;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Move_Player MovePlayer;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x220BF6C", Offset = "0x220BF6C", VA = "0x220BF6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x220C000", Offset = "0x220C000", VA = "0x220C000")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x220C0B0", Offset = "0x220C0B0", VA = "0x220C0B0")]
	public void WriteAnim()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x220C144", Offset = "0x220C144", VA = "0x220C144")]
	public CustomRecorderSinglePlayer()
	{
	}
}
[Token(Token = "0x2000137")]
public class databaseConnectionManager : MonoBehaviour
{
	[Token(Token = "0x2000138")]
	public class userData
	{
		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PlayerID;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Flag;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Time;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Record;

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x25B3968", Offset = "0x25B3968", VA = "0x25B3968")]
		public userData()
		{
		}
	}

	[Token(Token = "0x2000139")]
	public class leaderboardData
	{
		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Flag;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Time;

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x25B3960", Offset = "0x25B3960", VA = "0x25B3960")]
		public leaderboardData()
		{
		}
	}

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB230D8", Offset = "0xB230D8")]
	public int queryPlayerID;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string queryPlayerName;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float queryTime;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string queryRecord;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23110", Offset = "0xB23110")]
	public string server;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string database;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string user_id;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string password;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool pooling;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23148", Offset = "0xB23148")]
	public userData closestEnemy;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<leaderboardData> topUsersList;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<userData> enemyRecords;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MySqlConnection connection;

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1FEACB4", Offset = "0x1FEACB4", VA = "0x1FEACB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1FEB0B4", Offset = "0x1FEB0B4", VA = "0x1FEB0B4")]
	public void GetTopUsers(string trackName, int amount)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1FEB664", Offset = "0x1FEB664", VA = "0x1FEB664")]
	public userData GetPlayerData(string trackName, int ID)
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1FEBCE0", Offset = "0x1FEBCE0", VA = "0x1FEBCE0")]
	public void GetClosestEnemyRecordsHigh(string trackName, float time, int amount)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1FEC37C", Offset = "0x1FEC37C", VA = "0x1FEC37C")]
	public void GetClosestEnemyRecordsLow(string trackName, float time, int amount)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x1FECA18", Offset = "0x1FECA18", VA = "0x1FECA18")]
	public int GetMaxID(string trackName)
	{
		return default(int);
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x1FECF14", Offset = "0x1FECF14", VA = "0x1FECF14")]
	public void InsertEntry(string trackname, int ID, string name, int flag, float time, string record)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x1FED618", Offset = "0x1FED618", VA = "0x1FED618")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB2CAE8", Offset = "0xB2CAE8")]
	private void LogGameItems(List<userData> list)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x1FEDA28", Offset = "0x1FEDA28", VA = "0x1FEDA28")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x1FEDB74", Offset = "0x1FEDB74", VA = "0x1FEDB74")]
	public databaseConnectionManager()
	{
	}
}
[Token(Token = "0x200013A")]
public class EnemyAI : MonoBehaviour
{
	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F658", Offset = "0xB1F658")]
	private sealed class <ChangeSpeed>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyAI <>4__this;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float start_value;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float end_value;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsed>5__2;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600056B")]
			[Address(RVA = "0x2346BCC", Offset = "0x2346BCC", VA = "0x2346BCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600056D")]
			[Address(RVA = "0x2346C14", Offset = "0x2346C14", VA = "0x2346C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x2346AD4", Offset = "0x2346AD4", VA = "0x2346AD4")]
		[DebuggerHidden]
		public <ChangeSpeed>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x2346B00", Offset = "0x2346B00", VA = "0x2346B00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x2346B04", Offset = "0x2346B04", VA = "0x2346B04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x2346BD4", Offset = "0x2346BD4", VA = "0x2346BD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F668", Offset = "0xB1F668")]
	private sealed class <raceStart>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyAI <>4__this;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startTimer;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000571")]
			[Address(RVA = "0x2346DC0", Offset = "0x2346DC0", VA = "0x2346DC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000573")]
			[Address(RVA = "0x2346E08", Offset = "0x2346E08", VA = "0x2346E08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x2346C1C", Offset = "0x2346C1C", VA = "0x2346C1C")]
		[DebuggerHidden]
		public <raceStart>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x2346C48", Offset = "0x2346C48", VA = "0x2346C48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x2346C4C", Offset = "0x2346C4C", VA = "0x2346C4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x2346DC8", Offset = "0x2346DC8", VA = "0x2346DC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float steeringSpeed;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float currentSpeed;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float currentSpeedWithAngle;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float targetSpeed;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeToReachTargetSpeed;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool stopAtTarget;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float stoppingDistance;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rayDistance;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody rb;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 direction;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 direction1;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool dontMove;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool noHit;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool debug;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform target;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int currentTarget;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform[] targets;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ShipPositionTracker tracker;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float angleBetween;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float startTimer;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x286BBD0", Offset = "0x286BBD0", VA = "0x286BBD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x286BCD0", Offset = "0x286BCD0", VA = "0x286BCD0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x286C254", Offset = "0x286C254", VA = "0x286C254")]
	private void DoCasts()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x286BF90", Offset = "0x286BF90", VA = "0x286BF90")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x286CDE8", Offset = "0x286CDE8", VA = "0x286CDE8")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x286CEBC", Offset = "0x286CEBC", VA = "0x286CEBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2CB20", Offset = "0xB2CB20")]
	private IEnumerator ChangeSpeed(float start_value, float end_value, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x286CF60", Offset = "0x286CF60", VA = "0x286CF60")]
	private void OnCollisionEnter(Collision collider)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x286BC40", Offset = "0x286BC40", VA = "0x286BC40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2CB88", Offset = "0xB2CB88")]
	private IEnumerator raceStart(float startTimer)
	{
		return null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x286D0CC", Offset = "0x286D0CC", VA = "0x286D0CC")]
	public EnemyAI()
	{
	}
}
[Token(Token = "0x200013D")]
public class PhysAnchor : MonoBehaviour
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody SpaceshipRigidbody;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody PlayerRigidbody;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform transformm;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speedLimit;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float angleLimit;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float yAngleCoeff;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float velocityInertia;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform spaceshipOrigin;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxPostionDeltaForVibration;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 prevVelocity;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 acceleration;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 prevLocalPos;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion rotationDelta;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ZRInputModule.Hand hand;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 vector3Nan;

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x201950C", Offset = "0x201950C", VA = "0x201950C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x20197A4", Offset = "0x20197A4", VA = "0x20197A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x2019A98", Offset = "0x2019A98", VA = "0x2019A98")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x2019C40", Offset = "0x2019C40", VA = "0x2019C40")]
	public PhysAnchor()
	{
	}
}
[Token(Token = "0x200013E")]
public class WingAnimation : MonoBehaviour
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damping;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxAngle;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform FRWing;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform FLWing;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform RRWing;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform RLWing;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion startRotYFR;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion startRotYFL;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion startRotYRR;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion startRotYRL;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float trueAngle;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform URWing;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform ULWing;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform DRWing;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform DLWing;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform RLWingVector;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform RRWingVector;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion startRotUR;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Quaternion startRotUL;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Quaternion startRotDR;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Quaternion startRotDL;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 vibrationVector;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Quaternion prevRotation;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 angularSpeed;

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1FE4608", Offset = "0x1FE4608", VA = "0x1FE4608")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1FE4698", Offset = "0x1FE4698", VA = "0x1FE4698")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x1FE49B4", Offset = "0x1FE49B4", VA = "0x1FE49B4")]
	private void SetVibration(Transform wing, Quaternion startRot)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x1FE483C", Offset = "0x1FE483C", VA = "0x1FE483C")]
	private void SetRotation(Transform wing, Quaternion startRot)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1FE4B1C", Offset = "0x1FE4B1C", VA = "0x1FE4B1C")]
	public WingAnimation()
	{
	}
}
[Token(Token = "0x200013F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB1F678", Offset = "0xB1F678")]
public class ActionBasedControllerCustom : ActionBasedController
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public InputActionProperty throttleAction;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public InputActionProperty brakeAction;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public InputActionProperty slowMoAction;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public InputActionProperty nitroAction;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public InputActionProperty pauseAction;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x22C6138", Offset = "0x22C6138", VA = "0x22C6138")]
	public ActionBasedControllerCustom()
	{
	}
}
[Token(Token = "0x2000140")]
public class ActionBasedHelmCustom : MonoBehaviour
{
	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputActionProperty positionAction;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputActionProperty rotationAction;

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x22C6140", Offset = "0x22C6140", VA = "0x22C6140")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x22C6208", Offset = "0x22C6208", VA = "0x22C6208")]
	public ActionBasedHelmCustom()
	{
	}
}
[Token(Token = "0x2000141")]
public class CheckerInteringPlayerIntTrack : MonoBehaviour
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Move_Player movePlayer;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool initialized;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool PlayerDetected;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Vector3 PlayerMovePosition;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Quaternion PlayerMoveRotation;

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x22431EC", Offset = "0x22431EC", VA = "0x22431EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x22432B4", Offset = "0x22432B4", VA = "0x22432B4")]
	private void CustomStart()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x2243344", Offset = "0x2243344", VA = "0x2243344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x2243404", Offset = "0x2243404", VA = "0x2243404")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x224362C", Offset = "0x224362C", VA = "0x224362C")]
	private void SetDetectFalse()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x2243678", Offset = "0x2243678", VA = "0x2243678")]
	private void CheckPlayerDetect()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x22437D4", Offset = "0x22437D4", VA = "0x22437D4")]
	public CheckerInteringPlayerIntTrack()
	{
	}
}
[Token(Token = "0x2000142")]
public class ConsoleCustom : MonoBehaviour
{
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool consoleishidden;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string output;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string stack;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUISkin consoleskin;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 scroll;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text textUi;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x224C7F8", Offset = "0x224C7F8", VA = "0x224C7F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x224C87C", Offset = "0x224C87C", VA = "0x224C87C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x224C900", Offset = "0x224C900", VA = "0x224C900")]
	private void Update()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x224C904", Offset = "0x224C904", VA = "0x224C904")]
	private void HandleLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x224CA0C", Offset = "0x224CA0C", VA = "0x224CA0C")]
	public ConsoleCustom()
	{
	}
}
[Token(Token = "0x2000143")]
public class CustomMathf : MonoBehaviour
{
	[Token(Token = "0x2000144")]
	public class MergedType<T1, T2> : DynamicObject
	{
		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 t1;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 t2;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<string, object> members;

		[Token(Token = "0x600059D")]
		public MergedType(T1 t1, T2 t2)
		{
		}

		[Token(Token = "0x600059E")]
		public override bool TryGetMember(GetMemberBinder binder, [Out] object result)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F6B0", Offset = "0xB1F6B0")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public System.Random insRandom;

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x2345DDC", Offset = "0x2345DDC", VA = "0x2345DDC")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x2345DE4", Offset = "0x2345DE4", VA = "0x2345DE4")]
		internal char <RandomString>b__0(string s)
		{
			return default(char);
		}
	}

	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F6C0", Offset = "0xB1F6C0")]
	private sealed class <>c__DisplayClass13_0<T>
	{
		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int i;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int length;

		[Token(Token = "0x60005A1")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60005A2")]
		internal int <SliceToArrays>b__0(T s)
		{
			return default(int);
		}
	}

	[Serializable]
	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F6D0", Offset = "0xB1F6D0")]
	private sealed class <>c__13<T>
	{
		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__13<T> <>9;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<IGrouping<int, T>, T[]> <>9__13_1;

		[Token(Token = "0x60005A4")]
		public <>c__13()
		{
		}

		[Token(Token = "0x60005A5")]
		internal T[] <SliceToArrays>b__13_1(IGrouping<int, T> s)
		{
			return null;
		}
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x2209A48", Offset = "0x2209A48", VA = "0x2209A48")]
	public static float Remap(float inValue, float inMin, float inMax, float outMin, float outMax)
	{
		return default(float);
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x2209A64", Offset = "0x2209A64", VA = "0x2209A64")]
	public static Rect Lerp(Rect a, Rect b, float t)
	{
		return default(Rect);
	}

	[Token(Token = "0x600058F")]
	public static void Shuffle<T>(IList<T> list)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x2209BFC", Offset = "0x2209BFC", VA = "0x2209BFC")]
	public static int ConvertFloatToInt(float inNumber)
	{
		return default(int);
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x2209CC0", Offset = "0x2209CC0", VA = "0x2209CC0")]
	public static float ConvertIntToFloat(int number)
	{
		return default(float);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x2209CD4", Offset = "0x2209CD4", VA = "0x2209CD4")]
	public static void Recenter(Vector3 newPosition, Quaternion newRotation, Transform inTransform)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x2209D38", Offset = "0x2209D38", VA = "0x2209D38")]
	public static void Recenter(Transform inTransformObject, Transform inTransform)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x2209D90", Offset = "0x2209D90", VA = "0x2209D90")]
	public static string RandomString(int inLength, [Optional] string inCharacterSet)
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x2209F3C", Offset = "0x2209F3C", VA = "0x2209F3C")]
	public static string FormatTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x220A030", Offset = "0x220A030", VA = "0x220A030")]
	public static bool RateLimiter(int _frequency)
	{
		return default(bool);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x220A064", Offset = "0x220A064", VA = "0x220A064")]
	public static int CustomSmoothStep(int inFrom, int inTo, float inProgress)
	{
		return default(int);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x220999C", Offset = "0x220999C", VA = "0x220999C")]
	public static float CustomSmoothStep(float inFrom, float inTo, float inProgress)
	{
		return default(float);
	}

	[Token(Token = "0x6000599")]
	public static T[] Slice<T>(T[] source, int index, int inLength)
	{
		return null;
	}

	[Token(Token = "0x600059A")]
	public static T[][] SliceToArrays<T>(T[] source, int length)
	{
		return null;
	}

	[Token(Token = "0x600059B")]
	public static MergedType<T1, T2> Merge<T1, T2>(T1 t1, T2 t2)
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x220A0B0", Offset = "0x220A0B0", VA = "0x220A0B0")]
	public CustomMathf()
	{
	}
}
[Token(Token = "0x2000148")]
public class CustomPlaySound : MonoBehaviour
{
	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StudioEventEmitter setEmitter;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x220A280", Offset = "0x220A280", VA = "0x220A280")]
	public void PlaySound(StudioEventEmitter emitter)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x220A29C", Offset = "0x220A29C", VA = "0x220A29C")]
	public void PlaySetSound()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x220A2BC", Offset = "0x220A2BC", VA = "0x220A2BC")]
	public CustomPlaySound()
	{
	}
}
[Token(Token = "0x2000149")]
public class PauseHMD : MonoBehaviour
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputActionProperty userPresenceAction;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputActionProperty oculusDashAction;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool inDash;

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x2015808", Offset = "0x2015808", VA = "0x2015808")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x20158A8", Offset = "0x20158A8", VA = "0x20158A8")]
	private void ChangeStateDash(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x20158B8", Offset = "0x20158B8", VA = "0x20158B8")]
	public PauseHMD()
	{
	}
}
[Token(Token = "0x200014A")]
public class ReflectRemap : MonoBehaviour
{
	[Token(Token = "0x200014B")]
	public enum ReflectModule
	{
		[Token(Token = "0x4000745")]
		DepthBlur
	}

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform startPoint;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform endPoint;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cameraTransform;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float outMinValue;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float outMaxValue;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ReflectModule reflectModule;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CameraShade cameraShade;

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x20C2718", Offset = "0x20C2718", VA = "0x20C2718")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x20C281C", Offset = "0x20C281C", VA = "0x20C281C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x20C28A8", Offset = "0x20C28A8", VA = "0x20C28A8")]
	public ReflectRemap()
	{
	}
}
[Token(Token = "0x200014C")]
public class TempGasController : MonoBehaviour
{
	[Token(Token = "0x200014D")]
	private enum EDebug
	{
		[Token(Token = "0x4000761")]
		Off,
		[Token(Token = "0x4000762")]
		Turbo,
		[Token(Token = "0x4000763")]
		Full
	}

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 rangeEmission;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 rangeHeadLightsEmission;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 rangeEmissionSparks;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector2 rangeEmissionWind;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB231E0", Offset = "0xB231E0")]
	[SerializeField]
	private float valueGas;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB23220", Offset = "0xB23220")]
	private float valueHeadLights;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB23260", Offset = "0xB23260")]
	private float valueNitro;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB232A0", Offset = "0xB232A0")]
	[SerializeField]
	private float nitroBoost;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material materialEmission;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material materialDistortion;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material materialNitro;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Material materialDistortionNitro;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ParticleSystem particleSystemSparks;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private ParticleSystem particleSystemWind;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private int debugTurbo;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private EDebug eDebug;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentValueGas;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float currentValueNitro;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float currentValueTurbo;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float currentValueHeadLights;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lerpNitroA;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float lerpNitroB;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool nitroChanging;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string keyPowerEmission;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string keyPowerHeadLightsEmission;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string keyPowerDistortion;

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x204D088", Offset = "0x204D088", VA = "0x204D088")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x204D1C4", Offset = "0x204D1C4", VA = "0x204D1C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x204D404", Offset = "0x204D404", VA = "0x204D404")]
	public void ChangeGas(float inValue, bool autoConfig = true)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x204D338", Offset = "0x204D338", VA = "0x204D338")]
	public void ChangeHeadLights(float inValue)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x204D58C", Offset = "0x204D58C", VA = "0x204D58C")]
	public void ChangeNitro(float inValue, bool autoConfig = true)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x204D6F8", Offset = "0x204D6F8", VA = "0x204D6F8")]
	public void ChangeTurbo(float inValue, bool autoConfig = true)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x204D8A4", Offset = "0x204D8A4", VA = "0x204D8A4")]
	public void LaunchTurbo(bool essence)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x204D8C8", Offset = "0x204D8C8", VA = "0x204D8C8")]
	public void OffAllMats()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x204D90C", Offset = "0x204D90C", VA = "0x204D90C")]
	public TempGasController()
	{
	}
}
[Token(Token = "0x200014E")]
public class TrackUIController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F6E0", Offset = "0xB1F6E0")]
	private sealed class <>c
	{
		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<PlayerForTrack, bool> <>9__111_0;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<PlayerForTrack, bool> <>9__114_0;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<PlayerForTrack> <>9__119_0;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Comparison<PlayerForTrack> <>9__119_1;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Predicate<PlayerForTrack> <>9__119_2;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Predicate<PlayerForTrack> <>9__147_0;

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x25ADD6C", Offset = "0x25ADD6C", VA = "0x25ADD6C")]
		public <>c()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x25ADD74", Offset = "0x25ADD74", VA = "0x25ADD74")]
		internal bool <InitializeStartPlayers>b__111_0(PlayerForTrack x)
		{
			return default(bool);
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x25ADD90", Offset = "0x25ADD90", VA = "0x25ADD90")]
		internal bool <InitializeStartPlayersBoard>b__114_0(PlayerForTrack x)
		{
			return default(bool);
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x25ADDAC", Offset = "0x25ADDAC", VA = "0x25ADDAC")]
		internal bool <InitializeFinishPlayers>b__119_0(PlayerForTrack user)
		{
			return default(bool);
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x25ADDC8", Offset = "0x25ADDC8", VA = "0x25ADDC8")]
		internal int <InitializeFinishPlayers>b__119_1(PlayerForTrack data1, PlayerForTrack data2)
		{
			return default(int);
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x25ADE00", Offset = "0x25ADE00", VA = "0x25ADE00")]
		internal bool <InitializeFinishPlayers>b__119_2(PlayerForTrack user)
		{
			return default(bool);
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x25ADE1C", Offset = "0x25ADE1C", VA = "0x25ADE1C")]
		internal bool <Restart>b__147_0(PlayerForTrack user)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F6F0", Offset = "0xB1F6F0")]
	private sealed class <>c__DisplayClass113_0
	{
		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isTeamTournament;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text insUIOwnBestTimeStart;

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x25ADE38", Offset = "0x25ADE38", VA = "0x25ADE38")]
		public <>c__DisplayClass113_0()
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x25ADE40", Offset = "0x25ADE40", VA = "0x25ADE40")]
		internal void <CorStartCanvasBestTimeCounter>b__0(float inCallback)
		{
		}
	}

	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F700", Offset = "0xB1F700")]
	private sealed class <CorStartCanvasBestTimeCounter>d__113 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackUIController <>4__this;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float inValue;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass113_0 <>8__1;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F9")]
			[Address(RVA = "0x25AEE50", Offset = "0x25AEE50", VA = "0x25AEE50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FB")]
			[Address(RVA = "0x25AEE98", Offset = "0x25AEE98", VA = "0x25AEE98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x25AEAD8", Offset = "0x25AEAD8", VA = "0x25AEAD8")]
		[DebuggerHidden]
		public <CorStartCanvasBestTimeCounter>d__113(int <>1__state)
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x25AEB04", Offset = "0x25AEB04", VA = "0x25AEB04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x25AEB08", Offset = "0x25AEB08", VA = "0x25AEB08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x25AEE58", Offset = "0x25AEE58", VA = "0x25AEE58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F710", Offset = "0xB1F710")]
	private sealed class <>c__DisplayClass124_0
	{
		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float resultTime;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public byte insPlayerPlace;

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x25ADF08", Offset = "0x25ADF08", VA = "0x25ADF08")]
		public <>c__DisplayClass124_0()
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x25ADF10", Offset = "0x25ADF10", VA = "0x25ADF10")]
		internal void <TrackEndAfterWhiteFilled>b__0(playfabManager.LocalPlayerData inLocalPlayerData)
		{
		}
	}

	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F720", Offset = "0xB1F720")]
	private sealed class <>c__DisplayClass124_1
	{
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string insSceneName;

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x25AE574", Offset = "0x25AE574", VA = "0x25AE574")]
		public <>c__DisplayClass124_1()
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x25AE57C", Offset = "0x25AE57C", VA = "0x25AE57C")]
		internal bool <TrackEndAfterWhiteFilled>b__1(MenuController.TrackProgress x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x25AE5A4", Offset = "0x25AE5A4", VA = "0x25AE5A4")]
		internal bool <TrackEndAfterWhiteFilled>b__2(MenuController.TrackProgress x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F730", Offset = "0xB1F730")]
	private sealed class <IERecenterWhiteScreen>d__125 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackUIController <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000604")]
			[Address(RVA = "0x25AFCE0", Offset = "0x25AFCE0", VA = "0x25AFCE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000606")]
			[Address(RVA = "0x25AFD28", Offset = "0x25AFD28", VA = "0x25AFD28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x25AFBB0", Offset = "0x25AFBB0", VA = "0x25AFBB0")]
		[DebuggerHidden]
		public <IERecenterWhiteScreen>d__125(int <>1__state)
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x25AFBDC", Offset = "0x25AFBDC", VA = "0x25AFBDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x25AFBE0", Offset = "0x25AFBE0", VA = "0x25AFBE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x25AFCE8", Offset = "0x25AFCE8", VA = "0x25AFCE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F740", Offset = "0xB1F740")]
	private sealed class <>c__DisplayClass128_0
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char difChar;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackUIController <>4__this;

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x25AE5CC", Offset = "0x25AE5CC", VA = "0x25AE5CC")]
		public <>c__DisplayClass128_0()
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x25AE5D4", Offset = "0x25AE5D4", VA = "0x25AE5D4")]
		internal void <GettingResultTime>b__1(float inCallback)
		{
		}
	}

	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F750", Offset = "0xB1F750")]
	private sealed class <GettingResultTime>d__128 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackUIController <>4__this;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600060C")]
			[Address(RVA = "0x25AF4D4", Offset = "0x25AF4D4", VA = "0x25AF4D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600060E")]
			[Address(RVA = "0x25AF51C", Offset = "0x25AF51C", VA = "0x25AF51C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x25AEEA0", Offset = "0x25AEEA0", VA = "0x25AEEA0")]
		[DebuggerHidden]
		public <GettingResultTime>d__128(int <>1__state)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x25AEECC", Offset = "0x25AEECC", VA = "0x25AEECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x25AEED0", Offset = "0x25AEED0", VA = "0x25AEED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x25AF4DC", Offset = "0x25AF4DC", VA = "0x25AF4DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F760", Offset = "0xB1F760")]
	private sealed class <>c__DisplayClass129_0
	{
		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StudioEventEmitter insGlobalPosSound;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject insGlobalPosSign;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color insColor;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TrackUIController <>4__this;

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x25AE6B0", Offset = "0x25AE6B0", VA = "0x25AE6B0")]
		public <>c__DisplayClass129_0()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x25AE6B8", Offset = "0x25AE6B8", VA = "0x25AE6B8")]
		internal void <GotUserPositionInResult>b__2()
		{
		}
	}

	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F770", Offset = "0xB1F770")]
	private sealed class <>c__DisplayClass132_0
	{
		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrackUIController <>4__this;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StudioEventEmitter insGlobalPosSound;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject insGlobalPosSign;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color insColor;

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x25AE7B0", Offset = "0x25AE7B0", VA = "0x25AE7B0")]
		public <>c__DisplayClass132_0()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x25AE7B8", Offset = "0x25AE7B8", VA = "0x25AE7B8")]
		internal void <TestPos3>b__0(float inCallback)
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x25AE818", Offset = "0x25AE818", VA = "0x25AE818")]
		internal void <TestPos3>b__1()
		{
		}
	}

	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F780", Offset = "0xB1F780")]
	private sealed class <>c__DisplayClass133_0
	{
		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrackUIController <>4__this;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StudioEventEmitter insGlobalPosSound;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject insGlobalPosSign;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color insColor;

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x25AE910", Offset = "0x25AE910", VA = "0x25AE910")]
		public <>c__DisplayClass133_0()
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x25AE918", Offset = "0x25AE918", VA = "0x25AE918")]
		internal void <TestPos4>b__0(float inCallback)
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x25AE978", Offset = "0x25AE978", VA = "0x25AE978")]
		internal void <TestPos4>b__1()
		{
		}
	}

	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F790", Offset = "0xB1F790")]
	private sealed class <IEEnableResultCanvas>d__138 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackUIController <>4__this;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool error;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061A")]
			[Address(RVA = "0x25AFB60", Offset = "0x25AFB60", VA = "0x25AFB60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061C")]
			[Address(RVA = "0x25AFBA8", Offset = "0x25AFBA8", VA = "0x25AFBA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x25AF6DC", Offset = "0x25AF6DC", VA = "0x25AF6DC")]
		[DebuggerHidden]
		public <IEEnableResultCanvas>d__138(int <>1__state)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x25AF708", Offset = "0x25AF708", VA = "0x25AF708", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x25AF70C", Offset = "0x25AF70C", VA = "0x25AF70C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x25AFB68", Offset = "0x25AFB68", VA = "0x25AFB68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F7A0", Offset = "0xB1F7A0")]
	private sealed class <>c__DisplayClass139_0
	{
		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte insI;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackUIController <>4__this;

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x25AEA70", Offset = "0x25AEA70", VA = "0x25AEA70")]
		public <>c__DisplayClass139_0()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x25AEA78", Offset = "0x25AEA78", VA = "0x25AEA78")]
		internal void <StartFinishCrypter>b__0(string x)
		{
		}
	}

	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F7B0", Offset = "0xB1F7B0")]
	private sealed class <IEChangingCashInTheEnd>d__142 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackUIController <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000622")]
			[Address(RVA = "0x25AF68C", Offset = "0x25AF68C", VA = "0x25AF68C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000624")]
			[Address(RVA = "0x25AF6D4", Offset = "0x25AF6D4", VA = "0x25AF6D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x25AF524", Offset = "0x25AF524", VA = "0x25AF524")]
		[DebuggerHidden]
		public <IEChangingCashInTheEnd>d__142(int <>1__state)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x25AF550", Offset = "0x25AF550", VA = "0x25AF550", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x25AF554", Offset = "0x25AF554", VA = "0x25AF554", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x25AF694", Offset = "0x25AF694", VA = "0x25AF694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23360", Offset = "0xB23360")]
	public GameObject startCanvas;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject resultCanvas;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject errorDataSentScreenCanvas;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pauseCanvas;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject resultScreen;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject rewardScreen;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject addScreen;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject finishLineObject;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject UIrewardContainer;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject UIcashContainer;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject gameObjectImprovementRightMoney;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject gameObjectImprovementRightTournamentTraining;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject gameObjectImprovementRightTournamentTrainingDemo;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject gameObjectImprovementRightTournament;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject gameObjectImprovementRightTeamTournament;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject gameObjectImprovementLeftNormal;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject gameObjectImprovementLeftTraining;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject gameObjectImprovementLeftPartyMode;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text uiOwnBestTimeStart;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text uiOwnBestTimeTeamTournamentStart;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text uiDifferenceResult;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text uiCalibratedTextResult;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text uiOwnBestTimeFinish;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text uiYourGlobalRanking;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text uiYourGlobalRankingChange;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text uiCountEnemiesGlobalRanking;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text uiMaPlace;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text uiMaCapsule;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text uiMCash;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text textTrainingTime;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject gameObjectGlobalPosPlus;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject gameObjectGlobalPosMinus;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public FullScreenFadeAction fullScreenFadeActionWhite;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public FullScreenFadeManager whiteFullScreenManager;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public StudioEventEmitter FMODMusic;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public StudioEventEmitter FMODCountingDownSound;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public global::YoutubePlayer.YoutubePlayer youtubePlayer;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public UnityEngine.Video.VideoPlayer videoPlayer;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Animation trackControllerAnimation;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AnimationClip animationFinishCanvasReveal;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AnimationClip animationStartCanvasReveal;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public AnimationClip animationStartTeamCanvasReveal;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public FullScreenFadeAction fullScreenFadeActionGoMenu;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public FullScreenFadeAction fullScreenFadeActionRestart;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject gameObjectButtonRestart;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject gameObjectButtonRestartDisabled;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject gameObjectButtonMenu;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject gameObjectButtonMenuDisabled;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject gameObjectButtonReady;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject gameObjectPartyModeCountReady;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject gameObjectStartCanvasButtonStart;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject gameObjectStartCanvasPartyModeButtonReady;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject gameObjectStartCanvasPartyModeCountReady;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject gameObjectStartCanvasTeamTournamentPersons;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject gameObjectStartCanvasNormalPersons;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject gameObjectStartCanvasLeftTeamTournament;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject gameObjectStartCanvasLeftNormal;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Text textPartyModeCountReadyStartCanvas;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Text textPartyModeCountReadyFinishCanvas;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public StudioEventEmitter fmodEmitterGlobalPosPlus;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public StudioEventEmitter fmodEmitterGlobalPosMinus;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23398", Offset = "0xB23398")]
	public NetworkRoomManagerZRace networkRoomManagerZRace;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB233D0", Offset = "0xB233D0")]
	public List<GameObject> gameObjectsToDisableOnQuest1;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Material skybox;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Material skyboxQuest1;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Transform mCarSpawnerTransform;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23408", Offset = "0xB23408")]
	public Sprite[] flags;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Sprite[] teamImages;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Sprite spriteImprovementLeftNormalTeamTournament;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23440", Offset = "0xB23440")]
	public PlayerForTrack defaultPlayer;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public PlayerUI[] personsStart;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public PlayerUI[] personsFinish;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23478", Offset = "0xB23478")]
	public Transform playerUiContainerStart;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Transform playerUiTeamContainerStart;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Transform playerUiContainerFinish;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Transform playerUiTeamContainerFinish;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Transform uiContainerNamesTracks;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public Transform uiContainerVariantsPlacesCups;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Transform uiContainerVariantsPlacesTexts;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public Transform uiContainerVariantsPlaceAwards;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public Transform containerTournamentAttempts;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB234B0", Offset = "0xB234B0")]
	public Color highlightPlayerUiColor;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Color colorResultImproved;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Color colorResultWorse;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Color colorResultImprovedSneakTournament;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB234E8", Offset = "0xB234E8")]
	public UnityEvent UEwhiteFullScreenActive;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public UnityEvent UIfullScreenFadeFromBlackOnStartDataGot;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23520", Offset = "0xB23520")]
	public float clippingFar;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public float clippingFarQuest1;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public ushort moneyForCapsule;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FA")]
	public byte countCheckPointsOnRace;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FB")]
	[HideInInspector]
	public byte countAttempts;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private byte lengthPersonsStart;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
	private byte lengthPersonsFinish;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FE")]
	private byte lastPlayerPlace;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FF")]
	private bool whiteFullScreenEndBool;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private bool firstTryOnTrack;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Move_Player mMovePlayer;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private Transform mTransformMovePlayer;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private Coroutine coroutineWhiteFullScreen;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private Coroutine coroutineChangingCashInTheEnd;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23568", Offset = "0xB23568")]
	public GameObject gameObjectFinish1LeftNormal;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public GameObject gameObjectFinish1LeftTournament;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public Image imageFinish1RightBG;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public Image imageSelfTeamOfTournament;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public Sprite spriteFinish1RightBGTournament;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public Text textTimeSelfTeamOfTournament;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public Text textNameSelfTeamOfTournament;

	[Token(Token = "0x40007D0")]
	private const float DelayEnableStartCanvas = 1f;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private byte currentInitializedStartPlayersAtBoard;

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x2056678", Offset = "0x2056678", VA = "0x2056678")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x2057118", Offset = "0x2057118", VA = "0x2057118")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x205711C", Offset = "0x205711C", VA = "0x205711C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x2057404", Offset = "0x2057404", VA = "0x2057404")]
	public void InitializeStartPlayers()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x205845C", Offset = "0x205845C", VA = "0x205845C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2CC90", Offset = "0xB2CC90")]
	private IEnumerator CorStartCanvasBestTimeCounter(float delay, float inValue)
	{
		return null;
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x2057CD8", Offset = "0x2057CD8", VA = "0x2057CD8")]
	public void InitializeStartPlayersBoard()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x20586C8", Offset = "0x20586C8", VA = "0x20586C8")]
	public void InitializeNewPlayerAtStartBoard()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x2058878", Offset = "0x2058878", VA = "0x2058878")]
	public void InitializeNewPlayerAtFinishBoard()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x2058A28", Offset = "0x2058A28", VA = "0x2058A28")]
	private void YoutubeVideoReady(UnityEngine.Video.VideoPlayer source)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x2058A48", Offset = "0x2058A48", VA = "0x2058A48")]
	public byte InitializeFinishPlayers(bool inNetwork = false)
	{
		return default(byte);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x20584F0", Offset = "0x20584F0", VA = "0x20584F0")]
	private void EnableStartCanvas()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x20595F4", Offset = "0x20595F4", VA = "0x20595F4")]
	public void DisableStartCanvas()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x20597A0", Offset = "0x20597A0", VA = "0x20597A0")]
	public void StartTrackButton()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x2059970", Offset = "0x2059970", VA = "0x2059970")]
	public void TrackEndFirst()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x2059B14", Offset = "0x2059B14", VA = "0x2059B14")]
	public void TrackEndAfterWhiteFilled()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x2059A94", Offset = "0x2059A94", VA = "0x2059A94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2CCF8", Offset = "0xB2CCF8")]
	public IEnumerator IERecenterWhiteScreen()
	{
		return null;
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x205A560", Offset = "0x205A560", VA = "0x205A560")]
	public void GetPositionOnTrackEventCaller()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x205A650", Offset = "0x205A650", VA = "0x205A650")]
	public void GetPositionOnTrackInvoker()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x205A4E0", Offset = "0x205A4E0", VA = "0x205A4E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2CD60", Offset = "0xB2CD60")]
	public IEnumerator GettingResultTime()
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x205A7C4", Offset = "0x205A7C4", VA = "0x205A7C4")]
	public void GotUserPositionInResult(int yourPos)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x205ACDC", Offset = "0x205ACDC", VA = "0x205ACDC")]
	public void TestPos1()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x205AE24", Offset = "0x205AE24", VA = "0x205AE24")]
	public void TestPos2()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x205AE74", Offset = "0x205AE74", VA = "0x205AE74")]
	public void TestPos3()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x205B020", Offset = "0x205B020", VA = "0x205B020")]
	public void TestPos4()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x205B1C8", Offset = "0x205B1C8", VA = "0x205B1C8")]
	public void GotEnemiesCountOnTrackInResult(int countEnemies)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x205B278", Offset = "0x205B278", VA = "0x205B278")]
	public void WhiteFullScreenEnd1()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x205B2B4", Offset = "0x205B2B4", VA = "0x205B2B4")]
	public void EnableResultCanvas()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x205B424", Offset = "0x205B424", VA = "0x205B424")]
	public void EnableErrorCanvas()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x205B398", Offset = "0x205B398", VA = "0x205B398")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2CDC8", Offset = "0xB2CDC8")]
	public IEnumerator IEEnableResultCanvas(bool error = false)
	{
		return null;
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x205B508", Offset = "0x205B508", VA = "0x205B508")]
	public void StartFinishCrypter()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x205B708", Offset = "0x205B708", VA = "0x205B708")]
	public void ChangeWhiteFullScreen()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x205B7DC", Offset = "0x205B7DC", VA = "0x205B7DC")]
	public void ButtonNextResultScreen()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x205BC34", Offset = "0x205BC34", VA = "0x205BC34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2CE30", Offset = "0xB2CE30")]
	public IEnumerator IEChangingCashInTheEnd()
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x205BCB4", Offset = "0x205BCB4", VA = "0x205BCB4")]
	public void ButtonRestartMenuPrepare(bool inRestart)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x205C118", Offset = "0x205C118", VA = "0x205C118")]
	public void AddingOneReady(bool beforeGame, byte readyPlayers, byte totalPlayers)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x205C220", Offset = "0x205C220", VA = "0x205C220")]
	public void OwnReady()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x205BD8C", Offset = "0x205BD8C", VA = "0x205BD8C")]
	public void ButtonRestartMenu(bool inRestart)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x205C264", Offset = "0x205C264", VA = "0x205C264")]
	public void Restart()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x205C5D8", Offset = "0x205C5D8", VA = "0x205C5D8")]
	public void GoMenu()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x205C76C", Offset = "0x205C76C", VA = "0x205C76C")]
	public void PlaySound(StudioEventEmitter emitter)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x205C788", Offset = "0x205C788", VA = "0x205C788")]
	private void SubscribePause()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x205C904", Offset = "0x205C904", VA = "0x205C904")]
	public void PauseUI()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x205C908", Offset = "0x205C908", VA = "0x205C908")]
	private void PauseCall([Optional] InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x205CC14", Offset = "0x205CC14", VA = "0x205CC14")]
	public void ChangeReadyState(bool inValue)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x205CC40", Offset = "0x205CC40", VA = "0x205CC40")]
	public void OpenFullVersionStorePage()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x205CC88", Offset = "0x205CC88", VA = "0x205CC88")]
	public TrackUIController()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x205CCA4", Offset = "0x205CCA4", VA = "0x205CCA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CE98", Offset = "0xB2CE98")]
	private void <InitializeFinishPlayers>b__119_3(float inCallback)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x205CD68", Offset = "0x205CD68", VA = "0x205CD68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CEA8", Offset = "0xB2CEA8")]
	private void <GettingResultTime>b__128_0(string inCallback)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x205CD90", Offset = "0x205CD90", VA = "0x205CD90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CEB8", Offset = "0xB2CEB8")]
	private void <GotUserPositionInResult>b__129_1(float inCallback)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x205CDE4", Offset = "0x205CDE4", VA = "0x205CDE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CEC8", Offset = "0xB2CEC8")]
	private void <GotUserPositionInResult>b__129_0(string inCallback)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x205CE0C", Offset = "0x205CE0C", VA = "0x205CE0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CED8", Offset = "0xB2CED8")]
	private void <TestPos1>b__130_0(string inCallback)
	{
	}
}
[Serializable]
[Token(Token = "0x200015D")]
public class PlayerUI
{
	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text uiName;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uiTime;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text uiPlace;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image uiFlag;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image uiTeamImage;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image uiImageBG;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ExpandingUIText expandingUIText;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ExpandingUIText expandingUITime;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ExpandingLineUI expandingLineUI;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RuneCrypter runeCrypterTime;

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x2021F44", Offset = "0x2021F44", VA = "0x2021F44")]
	public void Initialize(string inName, string inTime, Sprite inFlag, bool ownStat = false, [Optional] Color colorHighLight)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x2022094", Offset = "0x2022094", VA = "0x2022094")]
	public void Initialize(string inName, string inTime, Sprite inFlag, Sprite inImageTeam, bool ownStat = false, [Optional] Color colorHighLight)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x20221FC", Offset = "0x20221FC", VA = "0x20221FC")]
	public void InitializeSneak(string inName, string inTime, Sprite inFlag, Sprite inImageTeam, bool activateBG = false)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x2022318", Offset = "0x2022318", VA = "0x2022318")]
	public PlayerUI()
	{
	}
}
[Serializable]
[Token(Token = "0x200015E")]
public class PlayerForTrack
{
	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Time;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ushort FlagID;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public ushort TeamImageID;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ownPlayer;

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x2021B0C", Offset = "0x2021B0C", VA = "0x2021B0C")]
	public PlayerForTrack(string inName, float inTime, ushort inFlag, ushort inTeamImageID, bool thisOwnPlayer = false)
	{
	}
}
[Token(Token = "0x200015F")]
public class StartPlace : MonoBehaviour
{
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BaseColor;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material materialDoor;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material materialNumber3;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material materialNumber2;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material materialNumber1;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material materialGo;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material materialL1;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material materialL2;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material materialL3;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material materialL4;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject gameObjectNumber3;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject gameObjectNumber2;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject gameObjectNumber1;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject gameObjectGo;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject gameObjectDoor;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject gameObjectWallDisableAfterStart;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform scaleNumberStart;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform scaleNumberEnd;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform scaleGoStart;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform scaleGoEnd;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xB236D0", Offset = "0xB236D0")]
	private Color colorRed;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xB23710", Offset = "0xB23710")]
	[SerializeField]
	private Color colorGreen;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xB23750", Offset = "0xB23750")]
	[SerializeField]
	private Color colorDisabled;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool launched;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool ends;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private bool eventSent;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float time;

	[Token(Token = "0x14000006")]
	public event Action OnGameStarts
	{
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x27BCE00", Offset = "0x27BCE00", VA = "0x27BCE00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D078", Offset = "0xB2D078")]
		add
		{
		}
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x27BCEA0", Offset = "0x27BCEA0", VA = "0x27BCEA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D088", Offset = "0xB2D088")]
		remove
		{
		}
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x27BC1E4", Offset = "0x27BC1E4", VA = "0x27BC1E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x27BC2B4", Offset = "0x27BC2B4", VA = "0x27BC2B4")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x27BC4C0", Offset = "0x27BC4C0", VA = "0x27BC4C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x27BCCD8", Offset = "0x27BCCD8", VA = "0x27BCCD8")]
	public void Launch()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x27BCF40", Offset = "0x27BCF40", VA = "0x27BCF40")]
	public StartPlace()
	{
	}
}
[Token(Token = "0x2000160")]
public class CubeExploder : MonoBehaviour
{
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisualEffect visualEffect;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x2206810", Offset = "0x2206810", VA = "0x2206810")]
	private void Start()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x2206814", Offset = "0x2206814", VA = "0x2206814")]
	private void Update()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x2206818", Offset = "0x2206818", VA = "0x2206818")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x22068C0", Offset = "0x22068C0", VA = "0x22068C0")]
	public CubeExploder()
	{
	}
}
[Token(Token = "0x2000161")]
[ExecuteAlways]
public class SparksTest : MonoBehaviour
{
	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 vector;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject gm;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x24A8198", Offset = "0x24A8198", VA = "0x24A8198")]
	private void Start()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x24A8218", Offset = "0x24A8218", VA = "0x24A8218")]
	private void Update()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x24A821C", Offset = "0x24A821C", VA = "0x24A821C")]
	private void OnCollisionStay(Collision other)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x24A8434", Offset = "0x24A8434", VA = "0x24A8434")]
	public SparksTest()
	{
	}
}
[Token(Token = "0x2000162")]
public class AnimStartShifter : MonoBehaviour
{
	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animName;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float offset;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x22C642C", Offset = "0x22C642C", VA = "0x22C642C")]
	private void Start()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x22C64B4", Offset = "0x22C64B4", VA = "0x22C64B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x22C64B8", Offset = "0x22C64B8", VA = "0x22C64B8")]
	public AnimStartShifter()
	{
	}
}
[Token(Token = "0x2000163")]
public class BeatReceiver : MonoBehaviour
{
	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 min;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 max;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string beatEvent;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x22CCF18", Offset = "0x22CCF18", VA = "0x22CCF18")]
	private void Start()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x22CD028", Offset = "0x22CD028", VA = "0x22CD028")]
	private void Beat(KoreographyEvent evt, int sampleTime, int sampleDelta, DeltaSlice deltaSlice)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x22CD100", Offset = "0x22CD100", VA = "0x22CD100")]
	public BeatReceiver()
	{
	}
}
[Token(Token = "0x2000164")]
public class CanvasMovement : MonoBehaviour
{
	[Token(Token = "0x2000165")]
	public enum ModeMove
	{
		[Token(Token = "0x400083C")]
		Smooth,
		[Token(Token = "0x400083D")]
		Immediately
	}

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotSpeed;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float motionThreshold;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ModeMove modeMove;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 eulerAngles;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x223B6DC", Offset = "0x223B6DC", VA = "0x223B6DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x223B928", Offset = "0x223B928", VA = "0x223B928")]
	private void StartCustom()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x223B7FC", Offset = "0x223B7FC", VA = "0x223B7FC")]
	public void ImmediatelyRecenter()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x223BA30", Offset = "0x223BA30", VA = "0x223BA30")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x223BC90", Offset = "0x223BC90", VA = "0x223BC90")]
	private bool CompareAngles(Vector3 x, Vector3 y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x223BCB8", Offset = "0x223BCB8", VA = "0x223BCB8")]
	public CanvasMovement()
	{
	}
}
[Token(Token = "0x2000166")]
public static class Crypto
{
	[Token(Token = "0x6000646")]
	[Address(RVA = "0x22066E8", Offset = "0x22066E8", VA = "0x22066E8")]
	public static void Save(string key, string password, string value)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x2206778", Offset = "0x2206778", VA = "0x2206778")]
	public static void Delete(string key)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x2206780", Offset = "0x2206780", VA = "0x2206780")]
	public static string Load(string key, string password)
	{
		return null;
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x2206808", Offset = "0x2206808", VA = "0x2206808")]
	public static bool HasKey(string key)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000167")]
public static class AES
{
	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int KeyLength;

	[Token(Token = "0x400083F")]
	private const string SaltKey = "ShMG8hLyZ7k~Ge5@";

	[Token(Token = "0x4000840")]
	private const string VIKey = "~6YUi0Sv5@|{aOZO";

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x22C56B4", Offset = "0x22C56B4", VA = "0x22C56B4")]
	public static string Encrypt(byte[] value, string password)
	{
		return null;
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x22C5B34", Offset = "0x22C5B34", VA = "0x22C5B34")]
	public static string Encrypt(string value, string password)
	{
		return null;
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x22C5BD0", Offset = "0x22C5BD0", VA = "0x22C5BD0")]
	public static string Decrypt(string value, string password)
	{
		return null;
	}
}
[Token(Token = "0x2000168")]
public class CustomButton : MonoBehaviour
{
	[Token(Token = "0x2000169")]
	public enum ModeTransition
	{
		[Token(Token = "0x4000867")]
		Off,
		[Token(Token = "0x4000868")]
		Rect,
		[Token(Token = "0x4000869")]
		Color,
		[Token(Token = "0x400086A")]
		All
	}

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enable;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool selected;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool maySelected;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool canToControlVisibility;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isVisible;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] imageRam;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color[] colorRamStartEnable;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color[] colorRamStartDisable;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color[] colorRamClickEnable;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color[] colorRamClickDisable;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color[] colorRamHoverEnable;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color[] colorRamHoverDisable;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color[] colorRamToVisible;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color[] colorRamToInvisible;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RectTransform[] rectTransformRamStartEnable;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform[] rectTransformRamStartDisable;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform[] rectTransformRamClickEnable;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RectTransform[] rectTransformRamClickDisable;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RectTransform[] rectTransformRamHoverEnable;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RectTransform[] rectTransformRamHoverDisable;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RectTransform[] rectTransformRamToVisible;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RectTransform[] rectTransformRamToInvisible;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public RectTransform[] mRectTransform;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float speedRamTransition;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float lerpRam;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ModeTransition modeTransition;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnClick;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnClickSound;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnHoverSound;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color[] startRamColor;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Color[] endRamColor;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private RectTransform[] startRamRect;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private RectTransform[] endRamRect;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool somethingHappening;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool toZero;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	private byte lengthImagesObjects;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
	private byte lengthRectTransformObjects;

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x2208D4C", Offset = "0x2208D4C", VA = "0x2208D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x2208E38", Offset = "0x2208E38", VA = "0x2208E38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x220920C", Offset = "0x220920C", VA = "0x220920C")]
	public void Hover()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x2209348", Offset = "0x2209348", VA = "0x2209348")]
	public void UnHover()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x2209404", Offset = "0x2209404", VA = "0x2209404")]
	public void OutOfInvisibility()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x2209484", Offset = "0x2209484", VA = "0x2209484")]
	public void InToInvisibility()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x2209508", Offset = "0x2209508", VA = "0x2209508")]
	public void Click()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x22095CC", Offset = "0x22095CC", VA = "0x22095CC")]
	public void Disable(bool doDo = false)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x2209644", Offset = "0x2209644", VA = "0x2209644")]
	public void Enable(bool doDo = false)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x22096C4", Offset = "0x22096C4", VA = "0x22096C4")]
	public CustomButton()
	{
	}
}
[Token(Token = "0x200016A")]
public class CustomButtonController : MonoBehaviour
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB237D0", Offset = "0xB237D0")]
	public CustomButton[] customButtons;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23808", Offset = "0xB23808")]
	public CustomButton selectedButton;

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x22096CC", Offset = "0x22096CC", VA = "0x22096CC")]
	public void UnSelectSingle()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x2209770", Offset = "0x2209770", VA = "0x2209770")]
	public void OnButtonSelected(CustomButton inCustomButton)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x220981C", Offset = "0x220981C", VA = "0x220981C")]
	public CustomButtonController()
	{
	}
}
[Token(Token = "0x200016B")]
public class CustomMethodInvoker : MonoBehaviour
{
	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent unityEvent;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] intArguments;

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x220A0B8", Offset = "0x220A0B8", VA = "0x220A0B8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB2D098", Offset = "0xB2D098")]
	public void CustomInvoke()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x220A278", Offset = "0x220A278", VA = "0x220A278")]
	public CustomMethodInvoker()
	{
	}
}
[Token(Token = "0x200016C")]
public class CustomUIAnim : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200016D")]
	private class CustomItem
	{
		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Graphic graphic;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color colorStart;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color colorEnd;

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x2345E2C", Offset = "0x2345E2C", VA = "0x2345E2C")]
		public CustomItem()
		{
		}
	}

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CustomItem[] customItems;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23850", Offset = "0xB23850")]
	public float speedTransition;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23888", Offset = "0xB23888")]
	public bool invert;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lerpValue;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool somethingHappening;

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x220C1BC", Offset = "0x220C1BC", VA = "0x220C1BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x220C2F8", Offset = "0x220C2F8", VA = "0x220C2F8")]
	public void ToForward()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x220C328", Offset = "0x220C328", VA = "0x220C328")]
	public void ToBack()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x220C348", Offset = "0x220C348", VA = "0x220C348")]
	public void CrutchMethodToOverrideColor(byte inIndex, Color inColor)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x220C404", Offset = "0x220C404", VA = "0x220C404")]
	public CustomUIAnim()
	{
	}
}
[Token(Token = "0x200016E")]
public class CustomUIKeyAnim : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200016F")]
	private class CustomItemsHolder
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomItemUIKeyAnim[] customItems;

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x2345E3C", Offset = "0x2345E3C", VA = "0x2345E3C")]
		public CustomItemsHolder()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000170")]
	public class CustomItemUIKeyAnim
	{
		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RectTransform rectTransform;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte indexKey;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomKeyUIKeyAnim[] keys;

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x2345E34", Offset = "0x2345E34", VA = "0x2345E34")]
		public CustomItemUIKeyAnim()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000171")]
	public class CustomKeyUIKeyAnim
	{
		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float valueKey;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 startRect;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 endRect;

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x2345E44", Offset = "0x2345E44", VA = "0x2345E44")]
		public CustomKeyUIKeyAnim()
		{
		}
	}

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CustomItemsHolder[] customItemsHolders;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB238D0", Offset = "0xB238D0")]
	public float speedTransition;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23908", Offset = "0xB23908")]
	public bool invert;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lerpValue;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public byte index;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool somethingHappening;

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x220C40C", Offset = "0x220C40C", VA = "0x220C40C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x220C76C", Offset = "0x220C76C", VA = "0x220C76C")]
	public void ToForward(int inIndex)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x220C804", Offset = "0x220C804", VA = "0x220C804")]
	public void ToBack(int inIndex)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x220C914", Offset = "0x220C914", VA = "0x220C914")]
	public CustomUIKeyAnim()
	{
	}
}
[Token(Token = "0x2000172")]
public class MenuController : MonoBehaviour
{
	[Token(Token = "0x2000173")]
	public enum Mode
	{
		[Token(Token = "0x40008D4")]
		None,
		[Token(Token = "0x40008D5")]
		Multiplayer,
		[Token(Token = "0x40008D6")]
		Cooperative,
		[Token(Token = "0x40008D7")]
		PartyMode,
		[Token(Token = "0x40008D8")]
		Tournament
	}

	[Serializable]
	[Token(Token = "0x2000174")]
	public class LanguageMC
	{
		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gmImageSystemLanguage;

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x2357018", Offset = "0x2357018", VA = "0x2357018")]
		public void Default()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x2357048", Offset = "0x2357048", VA = "0x2357048")]
		public LanguageMC()
		{
		}
	}

	[Token(Token = "0x2000175")]
	public class TracksProgress
	{
		[Token(Token = "0x2000176")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F7D0", Offset = "0xB1F7D0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<TrackInfo> insListTrackInfo;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte i;

			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<TrackProgress, bool> <>9__0;

			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<TrackProgress, bool> <>9__1;

			[Token(Token = "0x60006B1")]
			[Address(RVA = "0x25BBF04", Offset = "0x25BBF04", VA = "0x25BBF04")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x25BBF0C", Offset = "0x25BBF0C", VA = "0x25BBF0C")]
			internal bool <SynchronizeTracksProgressWithTrackInfo>b__0(TrackProgress x)
			{
				return default(bool);
			}

			[Token(Token = "0x60006B3")]
			[Address(RVA = "0x25BBF9C", Offset = "0x25BBF9C", VA = "0x25BBF9C")]
			internal bool <SynchronizeTracksProgressWithTrackInfo>b__1(TrackProgress x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000177")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F7E0", Offset = "0xB1F7E0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string insCurrentSceneName;

			[Token(Token = "0x40008E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte inIndexTrack;

			[Token(Token = "0x60006B4")]
			[Address(RVA = "0x25BC02C", Offset = "0x25BC02C", VA = "0x25BC02C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60006B5")]
			[Address(RVA = "0x25BC034", Offset = "0x25BC034", VA = "0x25BC034")]
			internal bool <GetRightTrackProgressState>b__0(TrackProgress x)
			{
				return default(bool);
			}

			[Token(Token = "0x60006B6")]
			[Address(RVA = "0x25BC05C", Offset = "0x25BC05C", VA = "0x25BC05C")]
			internal bool <GetRightTrackProgressState>b__1(TrackProgress x)
			{
				return default(bool);
			}

			[Token(Token = "0x60006B7")]
			[Address(RVA = "0x25BC084", Offset = "0x25BC084", VA = "0x25BC084")]
			internal bool <GetRightTrackProgressState>b__2(TrackProgress x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TrackProgress> listTrackProgress;

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x235709C", Offset = "0x235709C", VA = "0x235709C")]
		public TracksProgress()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x2357128", Offset = "0x2357128", VA = "0x2357128")]
		public static void SynchronizeTracksProgressWithTrackInfo(TracksProgress inTracksProgress, List<float> inOwnData, Action<TracksProgress, bool> inActionOnSynchronized)
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x2357570", Offset = "0x2357570", VA = "0x2357570")]
		public static TrackProgressState GetRightTrackProgressState(float inTime, byte inIndexTrack, TracksProgress inTracksProgress, bool inTrackPassed = false)
		{
			return default(TrackProgressState);
		}
	}

	[Serializable]
	[Token(Token = "0x2000178")]
	public class TrackProgress
	{
		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackProgressState trackProgressState;

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x2357060", Offset = "0x2357060", VA = "0x2357060")]
		public TrackProgress(string inTrackName)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000179")]
	public class TrackInfo
	{
		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float bronzeTime;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float silverTime;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float goldTime;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float platinumTime;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte recordingMethod;

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x2357058", Offset = "0x2357058", VA = "0x2357058")]
		public TrackInfo()
		{
		}
	}

	[Token(Token = "0x200017A")]
	public enum TrackProgressState
	{
		[Token(Token = "0x40008EA")]
		Close,
		[Token(Token = "0x40008EB")]
		Open,
		[Token(Token = "0x40008EC")]
		Qualified,
		[Token(Token = "0x40008ED")]
		Passed,
		[Token(Token = "0x40008EE")]
		Bronze,
		[Token(Token = "0x40008EF")]
		Silver,
		[Token(Token = "0x40008F0")]
		Gold,
		[Token(Token = "0x40008F1")]
		Platinum
	}

	[Token(Token = "0x200017B")]
	public enum TypeFMODVolume
	{
		[Token(Token = "0x40008F3")]
		VolumeMaster,
		[Token(Token = "0x40008F4")]
		VolumeMusicOnTracks,
		[Token(Token = "0x40008F5")]
		VolumeMusicAtMenu,
		[Token(Token = "0x40008F6")]
		VolumeVoiceOver,
		[Token(Token = "0x40008F7")]
		VolumeUISounds,
		[Token(Token = "0x40008F8")]
		VolumeOtherSounds
	}

	[Serializable]
	[Token(Token = "0x200017C")]
	public class TeamTournamentUI
	{
		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23B38", Offset = "0xB23B38")]
		public GameObject gmMSingleTournament;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gmMTeamTournament;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gmMChoosingTeamTournament;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image bloggerImageOfCurrentPlayer;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text textTeamName;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23B70", Offset = "0xB23B70")]
		public byte tempSelectedTeamID;

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x2357050", Offset = "0x2357050", VA = "0x2357050")]
		public TeamTournamentUI()
		{
		}
	}

	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F7F0", Offset = "0xB1F7F0")]
	private sealed class <>c__DisplayClass60_0
	{
		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string insSystemLanguage;

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x2356A5C", Offset = "0x2356A5C", VA = "0x2356A5C")]
		public <>c__DisplayClass60_0()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x2356A64", Offset = "0x2356A64", VA = "0x2356A64")]
		internal bool <EnableSelectLanguage>b__0(Locale x)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x2356A9C", Offset = "0x2356A9C", VA = "0x2356A9C")]
		internal bool <EnableSelectLanguage>b__1(Locale x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F800", Offset = "0xB1F800")]
	private sealed class <SetCurrentMScreenEternal>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool now;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MenuController <>4__this;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject inGmNextScreen;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C1")]
			[Address(RVA = "0x2356FC8", Offset = "0x2356FC8", VA = "0x2356FC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0x2357010", Offset = "0x2357010", VA = "0x2357010", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x2356E10", Offset = "0x2356E10", VA = "0x2356E10")]
		[DebuggerHidden]
		public <SetCurrentMScreenEternal>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x2356E3C", Offset = "0x2356E3C", VA = "0x2356E3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x2356E40", Offset = "0x2356E40", VA = "0x2356E40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x2356FD0", Offset = "0x2356FD0", VA = "0x2356FD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F810", Offset = "0xB1F810")]
	private sealed class <IEChangeVideo>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuController <>4__this;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte inNumberVideo;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C7")]
			[Address(RVA = "0x2356DC0", Offset = "0x2356DC0", VA = "0x2356DC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C9")]
			[Address(RVA = "0x2356E08", Offset = "0x2356E08", VA = "0x2356E08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x2356AD4", Offset = "0x2356AD4", VA = "0x2356AD4")]
		[DebuggerHidden]
		public <IEChangeVideo>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x2356B00", Offset = "0x2356B00", VA = "0x2356B00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x2356B04", Offset = "0x2356B04", VA = "0x2356B04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x2356DC8", Offset = "0x2356DC8", VA = "0x2356DC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F820", Offset = "0xB1F820")]
	private sealed class <>c
	{
		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<playfabManager.TournamentTeamBlock, byte> <>9__138_1;

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x2356A38", Offset = "0x2356A38", VA = "0x2356A38")]
		public <>c()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x2356A40", Offset = "0x2356A40", VA = "0x2356A40")]
		internal byte <TeamTournamentEnable>b__138_1(playfabManager.TournamentTeamBlock x)
		{
			return default(byte);
		}
	}

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23940", Offset = "0xB23940")]
	public GameObject loadingLeft;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject loadingRight;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject loadingCenter;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject loadingTrackInfo;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gmMScreenModeSelector;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject gmMScreenCars;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject gmMScreenTracks;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject gmMScreenHandSelector;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject gmMScreenLanguageSelector;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject gmMScreenSettings;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject gmMScreenFlagsSelector;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject gmMScreenKeyboard;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject gmMScreenMultiplayer;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject gmRScreenLogo;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject gmRScreenSponsors;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject gmRScreenVideo;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject gmRScreenTournamentInfo;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject gmLScreenLogo;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject gmLScreenUpgradeMenu;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject gmLScreenLeaderBoard;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject gmLScreenCurrent;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject gmMScreenCurrent;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject gmRScreenCurrent;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject gmLScreenPrevious;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject gmMScreenPrevious;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject gmRScreenPrevious;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23978", Offset = "0xB23978")]
	public bool mBoolTrackLaunching;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB239B0", Offset = "0xB239B0")]
	public TrackerSelector trackerSelector;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public CarSelector CarSelector;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Panel leftPanel;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Panel rightPanel;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public LanguageMC[] languagesMC;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public LeaderBoard leaderBoard;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB239E8", Offset = "0xB239E8")]
	public TimerTournament timerTournament;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UpgradeController upgradeController;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text uiVersionGame;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text textTournamentTrainingTime;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public NetworkMenuControllerZRace networkMenuControllerZRace;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public MenuController demoMenuController;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public playfabManager.LocalPlayerData localPlayerData;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject updateGameStub;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject gameObjectButtonMultiplayerFull;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject gameObjectButtonMultiplayerDemo;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject gameObjectTournamentTrainingTime;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject gameObjectMultiplayerLockerStub;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Animator animatorScreen;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23A20", Offset = "0xB23A20")]
	public SceneController sceneController;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23A58", Offset = "0xB23A58")]
	public AnimationClip transitionAnimation;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23A90", Offset = "0xB23A90")]
	public float durationTransitionAnimation;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23AC8", Offset = "0xB23AC8")]
	public UnityEvent UEStartFade;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int TransitionHash;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23B00", Offset = "0xB23B00")]
	public StudioEventEmitter musicFmod;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Slider sliderVolumeMaster;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Slider sliderVolumeMusicOnTracks;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Slider sliderVolumeMusicAtMenu;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Slider sliderVolumeSoundCommentators;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Slider sliderVolumeSoundsInterface;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Slider sliderVolumeOtherSounds;

	[Token(Token = "0x40008BE")]
	private const string busKeyPreMaster = "Bus:/PRE MASTER";

	[Token(Token = "0x40008BF")]
	private const string busKeyAI = "Bus:/PRE MASTER/AI";

	[Token(Token = "0x40008C0")]
	private const string busKeyAmbience = "Bus:/PRE MASTER/Ambience";

	[Token(Token = "0x40008C1")]
	private const string busKeyCarsSounds = "Bus:/PRE MASTER/CARS SOUND";

	[Token(Token = "0x40008C2")]
	private const string busKeyCommentatorsVoice = "Bus:/PRE MASTER/Commentators voice";

	[Token(Token = "0x40008C3")]
	private const string busKeyInterface = "Bus:/PRE MASTER/Interface";

	[Token(Token = "0x40008C4")]
	private const string busKeyMenuMusic = "Bus:/PRE MASTER/Menu Music";

	[Token(Token = "0x40008C5")]
	private const string busKeyMenu = "Bus:/PRE MASTER/MENU";

	[Token(Token = "0x40008C6")]
	private const string busKeyMusic = "Bus:/PRE MASTER/Music";

	[Token(Token = "0x40008C7")]
	private const string busKeyOther = "Bus:/PRE MASTER/Other";

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Bus busPreMaster;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Bus busAI;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Bus busAmbience;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Bus busCarsSounds;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Bus busCommentatorsVoice;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Bus busInterface;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Bus busMenuMusic;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Bus busMenu;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private Bus busMusic;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Bus busOther;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public TeamTournamentUI teamTournamentUI;

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x21ADEB0", Offset = "0x21ADEB0", VA = "0x21ADEB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x21ADEB4", Offset = "0x21ADEB4", VA = "0x21ADEB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x21AEE7C", Offset = "0x21AEE7C", VA = "0x21AEE7C")]
	private void InitializeDemo()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x21AE780", Offset = "0x21AE780", VA = "0x21AE780")]
	public void EnableSelectLanguage()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x21AEA98", Offset = "0x21AEA98", VA = "0x21AEA98")]
	public void EnableSelectHand()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x21AE360", Offset = "0x21AE360", VA = "0x21AE360")]
	private void OffAllCarsMaterials()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x21AEE80", Offset = "0x21AEE80", VA = "0x21AEE80")]
	public void InitializeLeaderBoard()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x21AEF20", Offset = "0x21AEF20", VA = "0x21AEF20")]
	public void SetUIVersionGame()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x21AEFCC", Offset = "0x21AEFCC", VA = "0x21AEFCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x21AE538", Offset = "0x21AE538", VA = "0x21AE538")]
	public void SetCurrentLScreen(GameObject inGmNextScreen)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x21AE608", Offset = "0x21AE608", VA = "0x21AE608")]
	public void SetCurrentMScreen(GameObject inGmNextScreen)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x21AF7F8", Offset = "0x21AF7F8", VA = "0x21AF7F8")]
	public void SetCurrentMScreen(GameObject inGmNextScreen, bool now, bool withoutAnim = false)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x21AF750", Offset = "0x21AF750", VA = "0x21AF750")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D0D0", Offset = "0xB2D0D0")]
	private IEnumerator SetCurrentMScreenEternal(GameObject inGmNextScreen, bool now = false)
	{
		return null;
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x21AE6B0", Offset = "0x21AE6B0", VA = "0x21AE6B0")]
	public void SetCurrentRScreen(GameObject inGmNextScreen)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x21AF8B4", Offset = "0x21AF8B4", VA = "0x21AF8B4")]
	public void SetPreviousScreen(int inIndexScreen)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x21AE334", Offset = "0x21AE334", VA = "0x21AE334")]
	public void RightPanelChangeVideo(int inNumberVideo)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x21AF8E4", Offset = "0x21AF8E4", VA = "0x21AF8E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D138", Offset = "0xB2D138")]
	public IEnumerator IEChangeVideo(byte inNumberVideo)
	{
		return null;
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x21AF96C", Offset = "0x21AF96C", VA = "0x21AF96C")]
	public void ChangeMode(int inMode)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x21AF98C", Offset = "0x21AF98C", VA = "0x21AF98C")]
	public void ChangeTrainingMode(bool inValue)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x21AF9B0", Offset = "0x21AF9B0", VA = "0x21AF9B0")]
	public void LaunchTrack()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x21AFB8C", Offset = "0x21AFB8C", VA = "0x21AFB8C")]
	public void LaunchTrackAfterFade()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x21AFC68", Offset = "0x21AFC68", VA = "0x21AFC68")]
	public void SelectLockedTrack(GameObject inImage)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x21AFDBC", Offset = "0x21AFDBC", VA = "0x21AFDBC")]
	public void SelectTrack(GameObject inImage)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x21AFF9C", Offset = "0x21AFF9C", VA = "0x21AFF9C")]
	public void SelectTrack(byte inValue, [Optional] CustomButton inCustomButton)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x21B0220", Offset = "0x21B0220", VA = "0x21B0220")]
	public void UnSelectTrack()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x21B0240", Offset = "0x21B0240", VA = "0x21B0240")]
	public void SelectCar(GameObject inImage)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x21B03A4", Offset = "0x21B03A4", VA = "0x21B03A4")]
	public void SelectCar(byte inValue, [Optional] CustomButton inCustomButton)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x21B0624", Offset = "0x21B0624", VA = "0x21B0624")]
	public void UnSelectCar()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x21B0648", Offset = "0x21B0648", VA = "0x21B0648")]
	public void CarSelectorOnHoverScreen(bool inValue)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x21B066C", Offset = "0x21B066C", VA = "0x21B066C")]
	public void ToSetAccountInfo()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x21B06B4", Offset = "0x21B06B4", VA = "0x21B06B4")]
	public void SetUserName([Optional] Text inUiText)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x21B06F8", Offset = "0x21B06F8", VA = "0x21B06F8")]
	public void SetUserFlag(GameObject inUIgGameObject)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x21B07CC", Offset = "0x21B07CC", VA = "0x21B07CC")]
	private void RegistrationNewUser()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x21B07EC", Offset = "0x21B07EC", VA = "0x21B07EC")]
	public void SelectMainHand(int hand)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x21B0874", Offset = "0x21B0874", VA = "0x21B0874")]
	public void SelectControllerAngle(int inValue)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x21B08FC", Offset = "0x21B08FC", VA = "0x21B08FC")]
	public void SelectLanguage(int inLanguageID)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x21B096C", Offset = "0x21B096C", VA = "0x21B096C")]
	public void CloseGlobalRatingCenterPanel()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x21B0994", Offset = "0x21B0994", VA = "0x21B0994")]
	public void OpenGlobalRatingCenterPanel()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x21B09BC", Offset = "0x21B09BC", VA = "0x21B09BC")]
	public void ToTournament()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x21B0AA8", Offset = "0x21B0AA8", VA = "0x21B0AA8")]
	public void FromTournament()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x21B0B50", Offset = "0x21B0B50", VA = "0x21B0B50")]
	public void TournamentEnable()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x21B0CC0", Offset = "0x21B0CC0", VA = "0x21B0CC0")]
	public void TournamentDisable()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x21AEABC", Offset = "0x21AEABC", VA = "0x21AEABC")]
	private void FmodAdjustingVolumeInitialize()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x21B0D40", Offset = "0x21B0D40", VA = "0x21B0D40")]
	public void SetVolumeMaster(float inValue)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x21B0DCC", Offset = "0x21B0DCC", VA = "0x21B0DCC")]
	public void SetVolumeMusicOnTracks(float inValue)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x21B0E58", Offset = "0x21B0E58", VA = "0x21B0E58")]
	public void SetVolumeMusicAtMenu(float inValue)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x21B0EE4", Offset = "0x21B0EE4", VA = "0x21B0EE4")]
	public void SetVolumeSoundsCommentators(float inValue)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x21B0F80", Offset = "0x21B0F80", VA = "0x21B0F80")]
	public void SetVolumeSoundsInterface(float inValue)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x21B100C", Offset = "0x21B100C", VA = "0x21B100C")]
	public void SetVolumeOtherSounds(float inValue)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x21B10C8", Offset = "0x21B10C8", VA = "0x21B10C8")]
	public void TrackerSelectorNextUnlockerActions()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x21B10E8", Offset = "0x21B10E8", VA = "0x21B10E8")]
	public void LeaderboardNextGotRewardAction()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x21B09C0", Offset = "0x21B09C0", VA = "0x21B09C0")]
	private void TeamTournamentEnable()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x21B0AAC", Offset = "0x21B0AAC", VA = "0x21B0AAC")]
	private void TeamTournamentDisable()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x21B1108", Offset = "0x21B1108", VA = "0x21B1108")]
	public void ChooseTournamentTeam(int inTeamID)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x21B116C", Offset = "0x21B116C", VA = "0x21B116C")]
	public void ToChoosingTournamentTeam()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x21B11A8", Offset = "0x21B11A8", VA = "0x21B11A8")]
	public void ConfirmChoosingTournamentTeam()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x21B128C", Offset = "0x21B128C", VA = "0x21B128C")]
	private void TeamTournamentEnablePart2()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x21B1528", Offset = "0x21B1528", VA = "0x21B1528")]
	public void LoadTeamTournament(int inTeamID)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x21B1548", Offset = "0x21B1548", VA = "0x21B1548")]
	public void UnloadTeamTournament()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x21B1568", Offset = "0x21B1568", VA = "0x21B1568")]
	public void OpenUrl(string url)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x21B1574", Offset = "0x21B1574", VA = "0x21B1574")]
	public MenuController()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x21B15F0", Offset = "0x21B15F0", VA = "0x21B15F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D1A0", Offset = "0xB2D1A0")]
	private void <TeamTournamentEnable>b__138_0(playfabManager.TournamentInfo inResponseTournamentInfo)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x21B1934", Offset = "0x21B1934", VA = "0x21B1934")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D1B0", Offset = "0xB2D1B0")]
	private void <TeamTournamentEnable>b__138_2(playfabManager.UserDataBlock inResponseOwnUserDataBlock)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x21B198C", Offset = "0x21B198C", VA = "0x21B198C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D1C0", Offset = "0xB2D1C0")]
	private void <TeamTournamentEnable>b__138_3()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x21B19C0", Offset = "0x21B19C0", VA = "0x21B19C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D1D0", Offset = "0xB2D1D0")]
	private void <ConfirmChoosingTournamentTeam>b__142_0(playfabManager.UserDataBlock inResponseOwnUserDataBlock)
	{
	}
}
[Serializable]
[Token(Token = "0x2000181")]
public class TrackerSelector
{
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F830", Offset = "0xB1F830")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte i;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackerSelector <>4__this;

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x25AFD30", Offset = "0x25AFD30", VA = "0x25AFD30")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x25AFD38", Offset = "0x25AFD38", VA = "0x25AFD38")]
		internal bool <Initialize>b__0(MenuController.TrackProgress x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F840", Offset = "0xB1F840")]
	private sealed class <>c__DisplayClass18_1
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject insGameObjectStateLocker;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte insI;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass18_0 CS$<>8__locals1;

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x25AFE08", Offset = "0x25AFE08", VA = "0x25AFE08")]
		public <>c__DisplayClass18_1()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x25AFE10", Offset = "0x25AFE10", VA = "0x25AFE10")]
		internal void <Initialize>b__2()
		{
		}
	}

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23BA8", Offset = "0xB23BA8")]
	public TrackUI[] tracksUI;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackUI[] tracksUIDemo;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23BE0", Offset = "0xB23BE0")]
	public Transform transformContainerTracks;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform transformContainerTrackNames;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23C18", Offset = "0xB23C18")]
	public byte currentTrack;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool trackSelected;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool lockedTrackSelected;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23C50", Offset = "0xB23C50")]
	public GameObject uiImageUnselectedTrackLeft;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject uiImageUnselectedTrackRight;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject gmNotUnlockedInfo;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject gmUnlockedInfo;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject gmUITextNotUnlockedText;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject gameObjectUnlockTrackAnim;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator unlockTrackAnimator;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23C88", Offset = "0xB23C88")]
	public CustomButton selectedButton;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Action> listActionsUnlock;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private byte currentIndexAction;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int HashReset;

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x2634D9C", Offset = "0x2634D9C", VA = "0x2634D9C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x26354F4", Offset = "0x26354F4", VA = "0x26354F4")]
	public void StartUnlockerActions()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x2635570", Offset = "0x2635570", VA = "0x2635570")]
	public void NextUnlockerActions()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x2635660", Offset = "0x2635660", VA = "0x2635660")]
	public void UnSelect()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x26357D0", Offset = "0x26357D0", VA = "0x26357D0")]
	public void Set(byte inTrack)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x2635988", Offset = "0x2635988", VA = "0x2635988")]
	public void SetLocked()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x2635A6C", Offset = "0x2635A6C", VA = "0x2635A6C")]
	public TrackerSelector()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x2635B6C", Offset = "0x2635B6C", VA = "0x2635B6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D280", Offset = "0xB2D280")]
	private void <Initialize>b__18_1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000184")]
public class TrackUI
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject gmTrackName;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformContainerButtons;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] arrayButtons;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation animation;

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x2056454", Offset = "0x2056454", VA = "0x2056454")]
	public void Initialize(Transform inTransformContainerButtons, GameObject inGmTrackName)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x2056670", Offset = "0x2056670", VA = "0x2056670")]
	public TrackUI()
	{
	}
}
[Serializable]
[Token(Token = "0x2000185")]
public class CarSelector
{
	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23CC0", Offset = "0xB23CC0")]
	public Car[] cars;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Car tournamentCar;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23CF8", Offset = "0xB23CF8")]
	public byte currentCar;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte previousCar;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public byte currentSeenCar;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool isTournamentCar;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool somethingHappening;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool toZero;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23D30", Offset = "0xB23D30")]
	public GameObject imageSelectCarBG;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject imageUndefinedCarBG;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23D68", Offset = "0xB23D68")]
	public CustomButton selectedButton;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] imagesSelectedCarBG;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] imagesSelectedCarSponsors;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23DA0", Offset = "0xB23DA0")]
	public Transform containerImagesSelectedCarBG;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform containerImagesSponsors;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23DD8", Offset = "0xB23DD8")]
	public float lerpAnim;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float speedTransition;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string keyDisolve;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x223BFF8", Offset = "0x223BFF8", VA = "0x223BFF8")]
	public void Select()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x223C1C4", Offset = "0x223C1C4", VA = "0x223C1C4")]
	public void UnSelect(bool full = true)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x223C328", Offset = "0x223C328", VA = "0x223C328")]
	public void Set(byte inCar)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x223C540", Offset = "0x223C540", VA = "0x223C540")]
	public void OnHoverScreen(bool inValue)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x223C6D0", Offset = "0x223C6D0", VA = "0x223C6D0")]
	public CarSelector()
	{
	}
}
[Serializable]
[Token(Token = "0x2000186")]
public class Car
{
	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public bool isInitialized;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject car;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject carAlpha;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Characteristic.CellState[][] cells;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Characteristic.CarBalance balance;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer carMeshRenderer;

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x223BCC0", Offset = "0x223BCC0", VA = "0x223BCC0")]
	public void Initialize(byte countChar)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x223BF20", Offset = "0x223BF20", VA = "0x223BF20")]
	public Car()
	{
	}
}
[Serializable]
[Token(Token = "0x2000187")]
public class Panel
{
	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x201415C", Offset = "0x201415C", VA = "0x201415C")]
	public Panel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000188")]
public class VideoPlayer
{
	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isPlaying;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool isLoading;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomVideo[] videos;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image uiImage;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ushort currentFrame;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public byte currentVideo;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadeDuration;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float delayChangeFrame;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timer;

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x26460DC", Offset = "0x26460DC", VA = "0x26460DC")]
	public void SetVideo(byte inNumberVideo, ushort inStartFrame = 0)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x26461A4", Offset = "0x26461A4", VA = "0x26461A4")]
	public void LaunchVideo()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x26461B0", Offset = "0x26461B0", VA = "0x26461B0")]
	public void StopVideo()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x26461B8", Offset = "0x26461B8", VA = "0x26461B8")]
	public VideoPlayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000189")]
public class CustomVideo
{
	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] videoSec;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public byte fps;

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x220C91C", Offset = "0x220C91C", VA = "0x220C91C")]
	public CustomVideo()
	{
	}
}
[Serializable]
[Token(Token = "0x200018A")]
public class TargetTimeClass
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23E20", Offset = "0xB23E20")]
	public TargetTime[] targets;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23E58", Offset = "0xB23E58")]
	public Color colorPlus;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color colorMinus;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23E90", Offset = "0xB23E90")]
	public Text textReward;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x204C740", Offset = "0x204C740", VA = "0x204C740")]
	public void UpdateTarget(byte inValue, string inTime)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x204C79C", Offset = "0x204C79C", VA = "0x204C79C")]
	public void HighLight(byte inValue)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x204C87C", Offset = "0x204C87C", VA = "0x204C87C")]
	public void Reset(byte inValue)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x204C95C", Offset = "0x204C95C", VA = "0x204C95C")]
	public TargetTimeClass()
	{
	}
}
[Serializable]
[Token(Token = "0x200018B")]
public class TargetTime
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23EC8", Offset = "0xB23EC8")]
	public Text textTime;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gmGotReward;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gmNotGotPrize;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation animationGotReward;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject gmAnimatorGotRewardMedal;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB23F00", Offset = "0xB23F00")]
	public string stringTextReward;

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x204C738", Offset = "0x204C738", VA = "0x204C738")]
	public TargetTime()
	{
	}
}
[Serializable]
[Token(Token = "0x200018C")]
public class LeaderBoard
{
	[Serializable]
	[Token(Token = "0x200018D")]
	public class Person
	{
		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Text uiName;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text uiTime;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text uiPlace;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image uiFlag;

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x234A8E0", Offset = "0x234A8E0", VA = "0x234A8E0")]
		public Person()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200018E")]
	public class OwnAccountLogic
	{
		[Token(Token = "0x200018F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F850", Offset = "0xB1F850")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x40009BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OwnAccountLogic <>4__this;

			[Token(Token = "0x40009BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte currentTrack;

			[Token(Token = "0x6000724")]
			[Address(RVA = "0x25BBA58", Offset = "0x25BBA58", VA = "0x25BBA58")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6000725")]
			[Address(RVA = "0x25BBA60", Offset = "0x25BBA60", VA = "0x25BBA60")]
			internal bool <OpenGlobalRatingCenterPanel>b__3(playfabManager.LeaderboardPlayerData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F860", Offset = "0xB1F860")]
		private sealed class <>c__DisplayClass35_1
		{
			[Token(Token = "0x40009BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string insNameTrack;

			[Token(Token = "0x40009C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass35_0 CS$<>8__locals1;

			[Token(Token = "0x40009C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<List<playfabManager.LeaderboardPlayerData>, byte> <>9__1;

			[Token(Token = "0x6000726")]
			[Address(RVA = "0x25BBA94", Offset = "0x25BBA94", VA = "0x25BBA94")]
			public <>c__DisplayClass35_1()
			{
			}

			[Token(Token = "0x6000727")]
			[Address(RVA = "0x25BBA9C", Offset = "0x25BBA9C", VA = "0x25BBA9C")]
			internal void <OpenGlobalRatingCenterPanel>b__0(int callbackPosition)
			{
			}

			[Token(Token = "0x6000728")]
			[Address(RVA = "0x25BBBE8", Offset = "0x25BBBE8", VA = "0x25BBBE8")]
			internal void <OpenGlobalRatingCenterPanel>b__1(List<playfabManager.LeaderboardPlayerData> callbackListTopLeaderBoardData, byte callbackCurrentTrackTop)
			{
			}
		}

		[Token(Token = "0x2000191")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F870", Offset = "0xB1F870")]
		private sealed class <>c__DisplayClass35_2
		{
			[Token(Token = "0x40009C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<playfabManager.LeaderboardPlayerData> callbackListTopLeaderBoardData;

			[Token(Token = "0x40009C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass35_1 CS$<>8__locals2;

			[Token(Token = "0x6000729")]
			[Address(RVA = "0x25BBD10", Offset = "0x25BBD10", VA = "0x25BBD10")]
			public <>c__DisplayClass35_2()
			{
			}

			[Token(Token = "0x600072A")]
			[Address(RVA = "0x25BBD18", Offset = "0x25BBD18", VA = "0x25BBD18")]
			internal void <OpenGlobalRatingCenterPanel>b__2(List<playfabManager.LeaderboardPlayerData> callbackListAroundPlayerLeaderBoardData, byte callbackCurrentTrackAroundPlayer)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000192")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F880", Offset = "0xB1F880")]
		private sealed class <>c
		{
			[Token(Token = "0x40009C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40009C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<playfabManager.LeaderboardPlayerData> <>9__36_2;

			[Token(Token = "0x40009C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<float[], bool> <>9__37_0;

			[Token(Token = "0x40009C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__38_2;

			[Token(Token = "0x600072C")]
			[Address(RVA = "0x25BB95C", Offset = "0x25BB95C", VA = "0x25BB95C")]
			public <>c()
			{
			}

			[Token(Token = "0x600072D")]
			[Address(RVA = "0x25BB964", Offset = "0x25BB964", VA = "0x25BB964")]
			internal int <GotDataForGlobalRating>b__36_2(playfabManager.LeaderboardPlayerData data1, playfabManager.LeaderboardPlayerData data2)
			{
				return default(int);
			}

			[Token(Token = "0x600072E")]
			[Address(RVA = "0x25BB9A4", Offset = "0x25BB9A4", VA = "0x25BB9A4")]
			internal bool <CheckCompletionAllTracks>b__37_0(float[] x)
			{
				return default(bool);
			}

			[Token(Token = "0x600072F")]
			[Address(RVA = "0x25BB9E4", Offset = "0x25BB9E4", VA = "0x25BB9E4")]
			internal void <CalibrateGlobalRating>b__38_2()
			{
			}
		}

		[Token(Token = "0x2000193")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F890", Offset = "0xB1F890")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x40009C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> inPlaces;

			[Token(Token = "0x40009C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int inIndex;

			[Token(Token = "0x40009CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public byte inCountTracks;

			[Token(Token = "0x40009CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public playfabManager inPlayFabManager;

			[Token(Token = "0x40009CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<List<int>> inAction;

			[Token(Token = "0x6000730")]
			[Address(RVA = "0x25BBDA8", Offset = "0x25BBDA8", VA = "0x25BBDA8")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6000731")]
			[Address(RVA = "0x25BBDB0", Offset = "0x25BBDB0", VA = "0x25BBDB0")]
			internal void <GetAllOwnPositionsEachInTurn>b__0(int callback)
			{
			}
		}

		[Token(Token = "0x2000194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F8A0", Offset = "0xB1F8A0")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x40009CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float insValue;

			[Token(Token = "0x6000732")]
			[Address(RVA = "0x25BBEC0", Offset = "0x25BBEC0", VA = "0x25BBEC0")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6000733")]
			[Address(RVA = "0x25BBEC8", Offset = "0x25BBEC8", VA = "0x25BBEC8")]
			internal void <GetNewGlobalRatingStat>b__0(float[] x)
			{
			}
		}

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public Transform startPoint;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Transform endPoint;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool somethingHappening;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool toZero;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] points;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lerpAnim;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float speedTransition;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject panel;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject centerMainPanel;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool globalRatingMainPanelInitialized;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool playerCalibrated;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<playfabManager.LeaderboardPlayerData> globalRatingData;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB24170", Offset = "0xB24170")]
		public playfabManager.LeaderboardPlayerData unknownPlayerDataGlobalRating;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Person[] personsTop15GlobalRating;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Person[] personsTop10Plus5GlobalRating;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject gameObjectPersonsTop15GlobalRating;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject gameObjectPersonsTop10Plus5GlobalRating;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public byte lengthPersonsGlobalRating;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform personsTop15ContainerGlobalRating;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform personsTop10Plus5Part1ContainerGlobalRating;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform personsTop10Plus5Part2ContainerGlobalRating;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Text uiTextUserName;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Text uiOwnPlaceGlobalRating;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Text uiTotalPlayersGlobalRating;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Image uiImageFlag;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ExpandingUIText uiExpandingTextUserName;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject gameObjectCalibrated;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject gameObjectUncalibrated;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public MenuController mMenuController;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public playfabManager mPlayFabManager;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<string> mInitializedKeys;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string PLAYFAB_INIT_KEY_GLOBAL_RATING;

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x234A388", Offset = "0x234A388", VA = "0x234A388")]
		public void Initialize(string inNameMainPlayer, Sprite inIdFlagMainPlayer, MenuController inMenuController, playfabManager inPlayFabManager)
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x234A8E8", Offset = "0x234A8E8", VA = "0x234A8E8")]
		public void OpenPanel(bool calibrated)
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x234A98C", Offset = "0x234A98C", VA = "0x234A98C")]
		public void CloseGlobalRatingCenterPanel()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x234A9B0", Offset = "0x234A9B0", VA = "0x234A9B0")]
		public void OpenGlobalRatingCenterPanel()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x234B10C", Offset = "0x234B10C", VA = "0x234B10C")]
		private void GotDataForGlobalRating(List<playfabManager.LeaderboardPlayerData> inList, byte inTrack)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x234B428", Offset = "0x234B428", VA = "0x234B428")]
		public static bool CheckCompletionAllTracks()
		{
			return default(bool);
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x234B5F8", Offset = "0x234B5F8", VA = "0x234B5F8")]
		public void CalibrateGlobalRating()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x234B83C", Offset = "0x234B83C", VA = "0x234B83C")]
		public static void GetAllOwnPositionsEachInTurn(int inIndex, List<int> inPlaces, byte inCountTracks, playfabManager inPlayFabManager, Action<List<int>> inAction)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x234B6C0", Offset = "0x234B6C0", VA = "0x234B6C0")]
		public static void GetNewGlobalRatingStat(playfabManager inPlayFabManager, Action<float> inCallback)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x234B9EC", Offset = "0x234B9EC", VA = "0x234B9EC")]
		public OwnAccountLogic()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x234BA60", Offset = "0x234BA60", VA = "0x234BA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D388", Offset = "0xB2D388")]
		private void <Initialize>b__32_0(List<string> callbackKeys)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x234BC8C", Offset = "0x234BC8C", VA = "0x234BC8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D398", Offset = "0xB2D398")]
		private void <Initialize>b__32_1(int callbackPosInGlobalRating)
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x234BE50", Offset = "0x234BE50", VA = "0x234BE50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D3A8", Offset = "0xB2D3A8")]
		private void <Initialize>b__32_2(int callbackTotalPlayersGlobalRating)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x234BFAC", Offset = "0x234BFAC", VA = "0x234BFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D3B8", Offset = "0xB2D3B8")]
		private bool <GotDataForGlobalRating>b__36_0(playfabManager.LeaderboardPlayerData x)
		{
			return default(bool);
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x234BFD8", Offset = "0x234BFD8", VA = "0x234BFD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D3C8", Offset = "0xB2D3C8")]
		private bool <GotDataForGlobalRating>b__36_1(playfabManager.LeaderboardPlayerData x)
		{
			return default(bool);
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x234C004", Offset = "0x234C004", VA = "0x234C004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D3D8", Offset = "0xB2D3D8")]
		private void <CalibrateGlobalRating>b__38_0(float insNewStatGlobalRating)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x234C178", Offset = "0x234C178", VA = "0x234C178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D3E8", Offset = "0xB2D3E8")]
		private void <CalibrateGlobalRating>b__38_1()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x234C29C", Offset = "0x234C29C", VA = "0x234C29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D3F8", Offset = "0xB2D3F8")]
		private void <CalibrateGlobalRating>b__38_3()
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x234C370", Offset = "0x234C370", VA = "0x234C370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D408", Offset = "0xB2D408")]
		private void <CalibrateGlobalRating>b__38_4(int callbackPosInGlobalRating)
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x234C534", Offset = "0x234C534", VA = "0x234C534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D418", Offset = "0xB2D418")]
		private void <CalibrateGlobalRating>b__38_5(int callbackTotalPlayersGlobalRating)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000195")]
	public class PersonTeam
	{
		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Text uiBloggerName;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text uiBloggerTime;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text uiTop1Time;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text uiTotalTime;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image uiBloggerImage;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image uiBGImage;

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x234C684", Offset = "0x234C684", VA = "0x234C684")]
		public PersonTeam()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000196")]
	public class PersonTeamPlayer
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Text uiName;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text uiTime;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text uiPlace;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image uiFlag;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image uiBloggerImage;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image uiBGImage;

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x234C68C", Offset = "0x234C68C", VA = "0x234C68C")]
		public PersonTeamPlayer()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000197")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F8B0", Offset = "0xB1F8B0")]
	private sealed class <>c
	{
		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<MenuController.TrackInfo, string> <>9__66_0;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<playfabManager.LeaderboardPlayerData> <>9__70_4;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<playfabManager.TournamentTeamBlock, float> <>9__87_0;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<playfabManager.TournamentTeamBlock, string> <>9__87_1;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<playfabManager.LeaderboardPlayerData, float> <>9__87_3;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<playfabManager.TournamentTeamBlock, float> <>9__88_0;

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x2349670", Offset = "0x2349670", VA = "0x2349670")]
		public <>c()
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x2349678", Offset = "0x2349678", VA = "0x2349678")]
		internal string <Initialize>b__66_0(MenuController.TrackInfo x)
		{
			return null;
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x2349694", Offset = "0x2349694", VA = "0x2349694")]
		internal int <GotDataForTrack>b__70_4(playfabManager.LeaderboardPlayerData data1, playfabManager.LeaderboardPlayerData data2)
		{
			return default(int);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x23496D4", Offset = "0x23496D4", VA = "0x23496D4")]
		internal float <LoadTeamTournamentRating>b__87_0(playfabManager.TournamentTeamBlock x)
		{
			return default(float);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x23496F8", Offset = "0x23496F8", VA = "0x23496F8")]
		internal string <LoadTeamTournamentRating>b__87_1(playfabManager.TournamentTeamBlock x)
		{
			return null;
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x2349714", Offset = "0x2349714", VA = "0x2349714")]
		internal float <LoadTeamTournamentRating>b__87_3(playfabManager.LeaderboardPlayerData x)
		{
			return default(float);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x2349730", Offset = "0x2349730", VA = "0x2349730")]
		internal float <LoadTeam>b__88_0(playfabManager.TournamentTeamBlock x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F8C0", Offset = "0xB1F8C0")]
	private sealed class <>c__DisplayClass76_0
	{
		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderBoard <>4__this;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isTeamTournament;

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x2349754", Offset = "0x2349754", VA = "0x2349754")]
		public <>c__DisplayClass76_0()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x234975C", Offset = "0x234975C", VA = "0x234975C")]
		internal void <ChangeTrack>b__0(byte insCountAttempts)
		{
		}
	}

	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F8D0", Offset = "0xB1F8D0")]
	private sealed class <>c__DisplayClass76_1
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string insNameTrack;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass76_0 CS$<>8__locals1;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<List<playfabManager.LeaderboardPlayerData>, byte> <>9__3;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<List<playfabManager.LeaderboardPlayerData>, byte> <>9__4;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<int> <>9__2;

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x23497B0", Offset = "0x23497B0", VA = "0x23497B0")]
		public <>c__DisplayClass76_1()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x23497B8", Offset = "0x23497B8", VA = "0x23497B8")]
		internal void <ChangeTrack>b__1(int insTotalPlayerAtTrack)
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x23498DC", Offset = "0x23498DC", VA = "0x23498DC")]
		internal void <ChangeTrack>b__2(int callbackPosition)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x2349B44", Offset = "0x2349B44", VA = "0x2349B44")]
		internal void <ChangeTrack>b__3(List<playfabManager.LeaderboardPlayerData> callbackListTopLeaderBoardData, byte callbackCurrentTrackTop)
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x2349C7C", Offset = "0x2349C7C", VA = "0x2349C7C")]
		internal void <ChangeTrack>b__4(List<playfabManager.LeaderboardPlayerData> callbackListTopLeaderBoardData, byte callbackCurrentTrackTop)
		{
		}
	}

	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F8E0", Offset = "0xB1F8E0")]
	private sealed class <>c__DisplayClass76_2
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<playfabManager.LeaderboardPlayerData> callbackListTopLeaderBoardData;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass76_1 CS$<>8__locals2;

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x2349C74", Offset = "0x2349C74", VA = "0x2349C74")]
		public <>c__DisplayClass76_2()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x2349DB4", Offset = "0x2349DB4", VA = "0x2349DB4")]
		internal void <ChangeTrack>b__5(List<playfabManager.LeaderboardPlayerData> callbackListAroundPlayerLeaderBoardData, byte callbackCurrentTrackAroundPlayer)
		{
		}
	}

	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F8F0", Offset = "0xB1F8F0")]
	private sealed class <>c__DisplayClass76_3
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<playfabManager.LeaderboardPlayerData> callbackListTopLeaderBoardData;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass76_1 CS$<>8__locals3;

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x2349DAC", Offset = "0x2349DAC", VA = "0x2349DAC")]
		public <>c__DisplayClass76_3()
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x2349E44", Offset = "0x2349E44", VA = "0x2349E44")]
		internal void <ChangeTrack>b__6(List<playfabManager.LeaderboardPlayerData> callbackListAroundPlayerLeaderBoardData, byte callbackCurrentTrackAroundPlayer)
		{
		}
	}

	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F900", Offset = "0xB1F900")]
	private sealed class <>c__DisplayClass77_0
	{
		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuController.TrackInfo insTrackInfo;

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x2349ED4", Offset = "0x2349ED4", VA = "0x2349ED4")]
		public <>c__DisplayClass77_0()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x2349EDC", Offset = "0x2349EDC", VA = "0x2349EDC")]
		internal bool <ChangeTrackAfterGotData>b__2(MenuController.TrackProgress x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200019D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F910", Offset = "0xB1F910")]
	private sealed class <IENextActionGotReward>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderBoard <>4__this;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600074E")]
			[Address(RVA = "0x234A338", Offset = "0x234A338", VA = "0x234A338", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000750")]
			[Address(RVA = "0x234A380", Offset = "0x234A380", VA = "0x234A380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x234A220", Offset = "0x234A220", VA = "0x234A220")]
		[DebuggerHidden]
		public <IENextActionGotReward>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x234A24C", Offset = "0x234A24C", VA = "0x234A24C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x234A250", Offset = "0x234A250", VA = "0x234A250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x234A340", Offset = "0x234A340", VA = "0x234A340", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F920", Offset = "0xB1F920")]
	private sealed class <>c__DisplayClass82_0
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderBoard <>4__this;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string insKey;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte inIndexTarget;

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x2349F08", Offset = "0x2349F08", VA = "0x2349F08")]
		public <>c__DisplayClass82_0()
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x2349F10", Offset = "0x2349F10", VA = "0x2349F10")]
		internal void <AddingAnimationsRewards>b__0()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x234A06C", Offset = "0x234A06C", VA = "0x234A06C")]
		internal void <AddingAnimationsRewards>b__1()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x234A0EC", Offset = "0x234A0EC", VA = "0x234A0EC")]
		internal void <AddingAnimationsRewards>b__2()
		{
		}
	}

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23F10", Offset = "0xB23F10")]
	public playfabManager.LeaderboardPlayerData unknownPlayerData;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OwnAccountLogic ownAccountLogic;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Person> listUIPersonsTop10Plus5Near;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PersonTeamPlayer> listUIPersonsTPT10Top9PlusPlayer;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PersonTeamPlayer> listUIPersonsTPT10Top10;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<PersonTeamPlayer> listUIPersonsInternalTeamTop9PlusPlayer;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<PersonTeamPlayer> listUIPersonsInternalTeamTop10;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<PersonTeam> listUITeamsTournament;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TargetTimeClass targetTimeClass;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23F48", Offset = "0xB23F48")]
	public Color colorOwnDataLeaderboard;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color colorOthersDataLeaderboard;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color colorGoldDataLeaderboard;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color colorSilverDataLeaderboard;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color colorBronzeDataLeaderboard;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23F80", Offset = "0xB23F80")]
	public Transform flagContainer;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform containerPersons5Near;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform containerPersonsTop10;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform containerPersonsTPT10Top9PlusPlayer;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform containerPersonsTPT10Top10;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform containerPersonsInternalTeamTop9PlusPlayer;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform containerPersonsInternalTeamTop10;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform containerTeamsTournament;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23FB8", Offset = "0xB23FB8")]
	public playfabManager playFabManager;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public MenuController menuController;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB23FF0", Offset = "0xB23FF0")]
	public Text uiTextPlayerTime;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text uiTextPlayerPlaceOnTrack;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject gmPlayerDontExistOnTrack;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject gameObjectGotRewardAnimator;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Animator animatorGotReward;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public MonoBehaviour monoBehaviourForInvoke;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject gmLeaderBoardTop10Plus5Near;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject gmLeaderBoardTeamsPlusTop10;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject gmSubLeaderBoardTPT10Top9PlusPlayer;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject gmSubLeaderBoardTPT10Top10;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject gmSubLeaderBoardInternalTeamTop9PlusPlayer;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject gmSubLeaderBoardInternalTeamTop10;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject gmTeamMainLeaderBoard;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject gmTeamSubLeaderBoard;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24028", Offset = "0xB24028")]
	public bool mTrackLoading;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public byte currentTrack;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public int countTracks;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24060", Offset = "0xB24060")]
	public bool[] initializedTracksData;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public List<List<playfabManager.LeaderboardPlayerData>> tracksData;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public List<List<playfabManager.LeaderboardPlayerData>> tracksTeamsTournamentData;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public List<float> ownData;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public List<uint> listCountPlayersData;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24098", Offset = "0xB24098")]
	public Sprite[] spritesFlags;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Sprite spriteTracksProgressUnavailable;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Sprite spriteTracksProgressClosed;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Sprite spriteTracksProgressOpened;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Sprite spriteTracksProgressQualified;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Sprite spriteTracksProgressPassed;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Sprite spriteTracksProgressBronze;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Sprite spriteTracksProgressSilver;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Sprite spriteTracksProgressGold;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Sprite spriteTracksProgressPlatinum;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB240D0", Offset = "0xB240D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB240D0", Offset = "0xB240D0")]
	public Sprite[] spritesTeamsLogo;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Color colorPersonTeamPlayerBGOwn;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Color colorPersonTeamPlayerBGDefault;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private byte lengthFlags;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	private byte currentUserFlag;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private string currentUserName;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private List<string> trackNames;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private List<Action> listActionsGotRewards;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private byte currentIndexActionRewards;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int HashResetReward;

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x251779C", Offset = "0x251779C", VA = "0x251779C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x2517BDC", Offset = "0x2517BDC", VA = "0x2517BDC")]
	private void InitializeListUsers()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x25183D4", Offset = "0x25183D4", VA = "0x25183D4")]
	private void GotLocalPlayerData(playfabManager.LocalPlayerData inLocalPlayerData)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x25184A8", Offset = "0x25184A8", VA = "0x25184A8")]
	private void GotOwnLocalDataForTrack(List<float> inData)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x2518720", Offset = "0x2518720", VA = "0x2518720")]
	private void GotDataForTrack(List<playfabManager.LeaderboardPlayerData> inList, byte inTrack)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x2519074", Offset = "0x2519074", VA = "0x2519074")]
	public void Delay()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x25195EC", Offset = "0x25195EC", VA = "0x25195EC")]
	public void InitializeFlagContainer()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x2519790", Offset = "0x2519790", VA = "0x2519790")]
	public void RegistrationNewUser()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x251983C", Offset = "0x251983C", VA = "0x251983C")]
	public void SetUserName(string inUserName)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x25198BC", Offset = "0x25198BC", VA = "0x25198BC")]
	public void SetUserFlag(byte inUserFlag)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x2518BB8", Offset = "0x2518BB8", VA = "0x2518BB8")]
	public void ChangeTrack(byte inTrack)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x2519930", Offset = "0x2519930", VA = "0x2519930")]
	public void ChangeTrackAfterGotData()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x251B01C", Offset = "0x251B01C", VA = "0x251B01C")]
	private void LoadingChangeTrackEnd()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x251B168", Offset = "0x251B168", VA = "0x251B168")]
	private void StartActionsGotReward()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x251B8A0", Offset = "0x251B8A0", VA = "0x251B8A0")]
	public void NextActionGotReward()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x251B97C", Offset = "0x251B97C", VA = "0x251B97C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D290", Offset = "0xB2D290")]
	public IEnumerator IENextActionGotReward(float delay)
	{
		return null;
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x251ADE8", Offset = "0x251ADE8", VA = "0x251ADE8")]
	public void AddingAnimationsRewards(byte inIndexTarget)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x251B1E4", Offset = "0x251B1E4", VA = "0x251B1E4")]
	public void LoadTeamTournamentRating()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x251BA0C", Offset = "0x251BA0C", VA = "0x251BA0C")]
	public void LoadTeam(byte inSelectedTeamId)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x251C258", Offset = "0x251C258", VA = "0x251C258")]
	public void UnloadTeam()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x251C29C", Offset = "0x251C29C", VA = "0x251C29C")]
	public LeaderBoard()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x251C3A4", Offset = "0x251C3A4", VA = "0x251C3A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D2F8", Offset = "0xB2D2F8")]
	private void <GotLocalPlayerData>b__68_0(MenuController.TracksProgress inTracksProgress, bool inBoolSynchronized)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x251C4A4", Offset = "0x251C4A4", VA = "0x251C4A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D308", Offset = "0xB2D308")]
	private void <GotLocalPlayerData>b__68_1()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x251C4D0", Offset = "0x251C4D0", VA = "0x251C4D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D318", Offset = "0xB2D318")]
	private bool <GotDataForTrack>b__70_0(playfabManager.LeaderboardPlayerData x)
	{
		return default(bool);
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x251C4FC", Offset = "0x251C4FC", VA = "0x251C4FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D328", Offset = "0xB2D328")]
	private bool <GotDataForTrack>b__70_1(playfabManager.LeaderboardPlayerData x)
	{
		return default(bool);
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x251C528", Offset = "0x251C528", VA = "0x251C528")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D338", Offset = "0xB2D338")]
	private bool <GotDataForTrack>b__70_2(playfabManager.LeaderboardPlayerData x)
	{
		return default(bool);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x251C554", Offset = "0x251C554", VA = "0x251C554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D348", Offset = "0xB2D348")]
	private bool <GotDataForTrack>b__70_3(playfabManager.LeaderboardPlayerData x)
	{
		return default(bool);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x251C580", Offset = "0x251C580", VA = "0x251C580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D358", Offset = "0xB2D358")]
	private bool <ChangeTrackAfterGotData>b__77_0(playfabManager.LeaderboardPlayerData x)
	{
		return default(bool);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x251C5AC", Offset = "0x251C5AC", VA = "0x251C5AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D368", Offset = "0xB2D368")]
	private bool <ChangeTrackAfterGotData>b__77_1(MenuController.TrackProgress x)
	{
		return default(bool);
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x251C67C", Offset = "0x251C67C", VA = "0x251C67C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D378", Offset = "0xB2D378")]
	private void <LoadTeamTournamentRating>b__87_2(List<List<playfabManager.LeaderboardPlayerData>> inResponse)
	{
	}
}
[Token(Token = "0x200019F")]
public class PlayerProfile : MonoBehaviour
{
	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string username;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public byte flagId;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int lvl;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int globalRating;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int countGoldCups;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int countSilverCups;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int countBronzeCups;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MenuController.TracksProgress tracksProgress;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackStatistics favoriteStatistics1;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackStatistics favoriteStatistics2;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string userGamePlatform;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Trophy[] trophies;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Trophy favoriteTrophy;

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x2021ED0", Offset = "0x2021ED0", VA = "0x2021ED0")]
	public PlayerProfile()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A0")]
public class JsonPlayerProfile
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string username;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte flagId;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int lvl;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int globalRating;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string playerGamePlatform;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string favoriteTrophyId;

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x23E31C8", Offset = "0x23E31C8", VA = "0x23E31C8")]
	public JsonPlayerProfile()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A1")]
public class TrackStatistics
{
	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string nameStatistics;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string valueStatistics;

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x205644C", Offset = "0x205644C", VA = "0x205644C")]
	public TrackStatistics()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A2")]
public class Trophy
{
	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string idTrophy;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string receiptDate;

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x263D8B0", Offset = "0x263D8B0", VA = "0x263D8B0")]
	public Trophy()
	{
	}
}
[Token(Token = "0x20001A3")]
public class SceneController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001A4")]
	public class CustomYoutubeController
	{
		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string youtubeUrl;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool playerCustomMusic;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> playFabIDs;

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x200BF74", Offset = "0x200BF74", VA = "0x200BF74")]
		public CustomYoutubeController()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001A5")]
	public class TechnicalMessage
	{
		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string mainTitle;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string messageFrom;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mainMessage;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool closeAccessToGame;

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x200BF7C", Offset = "0x200BF7C", VA = "0x200BF7C")]
		public TechnicalMessage()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001A6")]
	public class TechnicalMessageVersionGame
	{
		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string mainTitle;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string messageFrom;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mainMessage;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string versionGame;

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x200BF8C", Offset = "0x200BF8C", VA = "0x200BF8C")]
		public TechnicalMessageVersionGame()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001A7")]
	public class TechnicalMessageUI
	{
		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject mainTechnicalStub;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text uiMainTitle;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text uiMessageFrom;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text uiMainMessage;

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x200BF84", Offset = "0x200BF84", VA = "0x200BF84")]
		public TechnicalMessageUI()
		{
		}
	}

	[Token(Token = "0x20001A8")]
	public enum QualityType
	{
		[Token(Token = "0x4000A67")]
		Menu,
		[Token(Token = "0x4000A68")]
		Game,
		[Token(Token = "0x4000A69")]
		AfterStartQuest1
	}

	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F930", Offset = "0xB1F930")]
	private sealed class <IEHideLaunchVideoSphere>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneController <>4__this;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <insColor>5__2;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <alpha>5__3;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x200BC10", Offset = "0x200BC10", VA = "0x200BC10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x200BC58", Offset = "0x200BC58", VA = "0x200BC58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x200BA54", Offset = "0x200BA54", VA = "0x200BA54")]
		[DebuggerHidden]
		public <IEHideLaunchVideoSphere>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x200BA80", Offset = "0x200BA80", VA = "0x200BA80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x200BA84", Offset = "0x200BA84", VA = "0x200BA84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x200BC18", Offset = "0x200BC18", VA = "0x200BC18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F940", Offset = "0xB1F940")]
	private sealed class <LoadSceneCoroutine>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte inIdScene;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneController <>4__this;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool withoutLoad;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x200BF24", Offset = "0x200BF24", VA = "0x200BF24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x200BF6C", Offset = "0x200BF6C", VA = "0x200BF6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x200BDE0", Offset = "0x200BDE0", VA = "0x200BDE0")]
		[DebuggerHidden]
		public <LoadSceneCoroutine>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x200BE0C", Offset = "0x200BE0C", VA = "0x200BE0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x200BE10", Offset = "0x200BE10", VA = "0x200BE10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x200BF2C", Offset = "0x200BF2C", VA = "0x200BF2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F950", Offset = "0xB1F950")]
	private sealed class <LoadMenuCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneController <>4__this;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x200BD90", Offset = "0x200BD90", VA = "0x200BD90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x200BDD8", Offset = "0x200BDD8", VA = "0x200BDD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x200BC60", Offset = "0x200BC60", VA = "0x200BC60")]
		[DebuggerHidden]
		public <LoadMenuCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x200BC8C", Offset = "0x200BC8C", VA = "0x200BC8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x200BC90", Offset = "0x200BC90", VA = "0x200BC90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x200BD98", Offset = "0x200BD98", VA = "0x200BD98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F960", Offset = "0xB1F960")]
	private sealed class <>c__DisplayClass94_0
	{
		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string inSceneName;

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x200BA24", Offset = "0x200BA24", VA = "0x200BA24")]
		public <>c__DisplayClass94_0()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x200BA2C", Offset = "0x200BA2C", VA = "0x200BA2C")]
		internal bool <GetSceneIndex>b__0(MenuController.TrackInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F970", Offset = "0xB1F970")]
	private sealed class <>c__DisplayClass103_0
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string insKeyVersionGame;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneController <>4__this;

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x200B308", Offset = "0x200B308", VA = "0x200B308")]
		public <>c__DisplayClass103_0()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x200B310", Offset = "0x200B310", VA = "0x200B310")]
		internal void <LogIn>b__0(GetTitleDataResult insGetTitleDataResult)
		{
		}
	}

	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F980", Offset = "0xB1F980")]
	private sealed class <>c__DisplayClass103_1
	{
		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte i;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass103_0 CS$<>8__locals1;

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x200B8DC", Offset = "0x200B8DC", VA = "0x200B8DC")]
		public <>c__DisplayClass103_1()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x200B8E4", Offset = "0x200B8E4", VA = "0x200B8E4")]
		internal bool <LogIn>b__1(MenuController.TrackInfo x)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x200B984", Offset = "0x200B984", VA = "0x200B984")]
		internal bool <LogIn>b__2(MenuController.TrackInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneController instance;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MenuController.TrackInfo> trackInfo;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[][] trackLocalTimes;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public byte countTracks;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public playfabManager playFabManager;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AuthCommon authCommon;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte currentTrack;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Move_Player movePlayer;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FullScreenFadeManager fullScreenFadeManager;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ZRInputModule zrInputModule;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<PlayerForTrack> currentPlayers;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<CustomReader> customReaders;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Characteristic.CarBalance carBalance;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MenuController menuController;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TechnicalMessageUI technicalMessageUI;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MenuController.Mode gameMode;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NetworkRoomManagerZRace networkRoomManagerZRace;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEngine.Video.VideoPlayer launchVideoPlayer;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material matSphereVideoPlayer;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] objectsLaunchVideo;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private byte countObjectsLaunchVideo;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string currentAccountPlatformName;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string currentAccountPlatformID;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool trackIsLaunched;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool trackIsPaused;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	public bool trackStartAnimStarted;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
	public bool trackIsFinished;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool isTrainingMode;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float resultTime;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float prevRecordTime;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CustomRecorder lastCustomRecorder;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ushort countMoneyCapsule;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	public byte countCheckedCheckpoints;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
	public bool outsideColliderTriggered;

	[Token(Token = "0x4000A2D")]
	public const string KEY_CAR_FULL_UPGRADE = "KEY_FULL_UPGRADED_CAR";

	[Token(Token = "0x4000A2E")]
	public const string KEY_TRACK_PASSED = "KEY_PASSED_TRACK";

	[Token(Token = "0x4000A2F")]
	public const string GLOBAL_RATING_LEADEARBOARD_NAME = "GLOBAL_RATING";

	[Token(Token = "0x4000A30")]
	public const string KeySelectedCar = "KEY_SELECTED_CAR";

	[Token(Token = "0x4000A31")]
	public const string keyUserName = "KEY_USER_NAME";

	[Token(Token = "0x4000A32")]
	public const string keyUserFlag = "KEY_USER_FLAG";

	[Token(Token = "0x4000A33")]
	public const string keyMainHand = "KEY_MAIN_HAND";

	[Token(Token = "0x4000A34")]
	public const string keyLanguage = "KEY_LANGUAGE";

	[Token(Token = "0x4000A35")]
	public const string keyControllerAngle = "KEY_CONTROLLER_ANGLE";

	[Token(Token = "0x4000A36")]
	public const string keyVolumeMaster = "KEY_VOLUME_MASTER";

	[Token(Token = "0x4000A37")]
	public const string keyVolumeMusicAtMenu = "KEY_VOLUME_MUSIC_AT_MENU";

	[Token(Token = "0x4000A38")]
	public const string keyVolumeMusicOnTracks = "KEY_VOLUME_MUSIC_ON_TRACKS";

	[Token(Token = "0x4000A39")]
	public const string keyVolumeUISounds = "KEY_VOLUME_UI_SOUNDS";

	[Token(Token = "0x4000A3A")]
	public const string keyVolumeVoiceOver = "KEY_VOLUME_VOICE_OVER";

	[Token(Token = "0x4000A3B")]
	public const string keyVolumeOtherSounds = "KEY_VOLUME_OTHER_SOUNDS";

	[Token(Token = "0x4000A3C")]
	private const string KEY_RESET_GAME = "KEY_RESET_ZRACE";

	[Token(Token = "0x4000A3D")]
	private const float VersionRESET = 1.9392f;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private byte countSuccessfulOperationsOfTrackDataSent;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public CustomYoutubeController customYoutubeController;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<MenuController.TrackInfo> demoTrackInfo;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public playfabManager.UserDataBlock userDataBlock;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public playfabManager.TournamentInfo tournamentInfo;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<MenuController.TypeFMODVolume, string> DictionaryFMODVolume;

	[Token(Token = "0x14000007")]
	public event Action actionStartButtonPressed
	{
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x249F528", Offset = "0x249F528", VA = "0x249F528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D5B0", Offset = "0xB2D5B0")]
		add
		{
		}
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x249F5CC", Offset = "0x249F5CC", VA = "0x249F5CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D5C0", Offset = "0xB2D5C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action TrackLaunched
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x249F670", Offset = "0x249F670", VA = "0x249F670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D5D0", Offset = "0xB2D5D0")]
		add
		{
		}
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x249F714", Offset = "0x249F714", VA = "0x249F714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D5E0", Offset = "0xB2D5E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action TrackStopped
	{
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x249F7B8", Offset = "0x249F7B8", VA = "0x249F7B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D5F0", Offset = "0xB2D5F0")]
		add
		{
		}
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x249F85C", Offset = "0x249F85C", VA = "0x249F85C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D600", Offset = "0xB2D600")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action TrackPaused
	{
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x249F900", Offset = "0x249F900", VA = "0x249F900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D610", Offset = "0xB2D610")]
		add
		{
		}
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x249F9A4", Offset = "0x249F9A4", VA = "0x249F9A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D620", Offset = "0xB2D620")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action TrackResumed
	{
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x249FA48", Offset = "0x249FA48", VA = "0x249FA48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D630", Offset = "0xB2D630")]
		add
		{
		}
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x249FAEC", Offset = "0x249FAEC", VA = "0x249FAEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D640", Offset = "0xB2D640")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action StartAnimEnded
	{
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x249FB90", Offset = "0x249FB90", VA = "0x249FB90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D650", Offset = "0xB2D650")]
		add
		{
		}
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x249FC34", Offset = "0x249FC34", VA = "0x249FC34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D660", Offset = "0xB2D660")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action AccountCreated
	{
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x249FCD8", Offset = "0x249FCD8", VA = "0x249FCD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D670", Offset = "0xB2D670")]
		add
		{
		}
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x249FD7C", Offset = "0x249FD7C", VA = "0x249FD7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D680", Offset = "0xB2D680")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action LoggedIn
	{
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x249FE20", Offset = "0x249FE20", VA = "0x249FE20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D690", Offset = "0xB2D690")]
		add
		{
		}
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x249FEC4", Offset = "0x249FEC4", VA = "0x249FEC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D6A0", Offset = "0xB2D6A0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action MenuLoaded
	{
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x249FF68", Offset = "0x249FF68", VA = "0x249FF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D6B0", Offset = "0xB2D6B0")]
		add
		{
		}
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x24A000C", Offset = "0x24A000C", VA = "0x24A000C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D6C0", Offset = "0xB2D6C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action EApiNameGot
	{
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x24A00B0", Offset = "0x24A00B0", VA = "0x24A00B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D6D0", Offset = "0xB2D6D0")]
		add
		{
		}
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x24A0154", Offset = "0x24A0154", VA = "0x24A0154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D6E0", Offset = "0xB2D6E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action EPublicDataGot
	{
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x24A01F8", Offset = "0x24A01F8", VA = "0x24A01F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D6F0", Offset = "0xB2D6F0")]
		add
		{
		}
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x24A029C", Offset = "0x24A029C", VA = "0x24A029C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D700", Offset = "0xB2D700")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action ETrackDataSent
	{
		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x24A0340", Offset = "0x24A0340", VA = "0x24A0340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D710", Offset = "0xB2D710")]
		add
		{
		}
		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x24A03E4", Offset = "0x24A03E4", VA = "0x24A03E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D720", Offset = "0xB2D720")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action ETrackLeaderBoardUserDataSent
	{
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x24A0488", Offset = "0x24A0488", VA = "0x24A0488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D730", Offset = "0xB2D730")]
		add
		{
		}
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x24A052C", Offset = "0x24A052C", VA = "0x24A052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D740", Offset = "0xB2D740")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action EPlayerGlobalRatingDataSent
	{
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x24A05D0", Offset = "0x24A05D0", VA = "0x24A05D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D750", Offset = "0xB2D750")]
		add
		{
		}
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x24A0674", Offset = "0x24A0674", VA = "0x24A0674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D760", Offset = "0xB2D760")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event Action EAllOperationOfTrackDataSentIsDone
	{
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x24A0718", Offset = "0x24A0718", VA = "0x24A0718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D770", Offset = "0xB2D770")]
		add
		{
		}
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x24A07BC", Offset = "0x24A07BC", VA = "0x24A07BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D780", Offset = "0xB2D780")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action CheckedKeyReset
	{
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x24A0860", Offset = "0x24A0860", VA = "0x24A0860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D790", Offset = "0xB2D790")]
		add
		{
		}
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x24A0904", Offset = "0x24A0904", VA = "0x24A0904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D7A0", Offset = "0xB2D7A0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event Action EAMovePlayerSet
	{
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x24A09A8", Offset = "0x24A09A8", VA = "0x24A09A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D7B0", Offset = "0xB2D7B0")]
		add
		{
		}
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x24A0A4C", Offset = "0x24A0A4C", VA = "0x24A0A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D7C0", Offset = "0xB2D7C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event Action EErrorOnDataSent
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x24A0AF0", Offset = "0x24A0AF0", VA = "0x24A0AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D7D0", Offset = "0xB2D7D0")]
		add
		{
		}
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x24A0B94", Offset = "0x24A0B94", VA = "0x24A0B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D7E0", Offset = "0xB2D7E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event Action<Action> Started
	{
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x24A0C38", Offset = "0x24A0C38", VA = "0x24A0C38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D7F0", Offset = "0xB2D7F0")]
		add
		{
		}
		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x24A0CDC", Offset = "0x24A0CDC", VA = "0x24A0CDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D800", Offset = "0xB2D800")]
		remove
		{
		}
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x249C834", Offset = "0x249C834", VA = "0x249C834")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x249CCA8", Offset = "0x249CCA8", VA = "0x249CCA8")]
	public void LaunchVideoHasStopped(UnityEngine.Video.VideoPlayer inVP)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x249CDA8", Offset = "0x249CDA8", VA = "0x249CDA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D478", Offset = "0xB2D478")]
	public IEnumerator IEHideLaunchVideoSphere()
	{
		return null;
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x249CA34", Offset = "0x249CA34", VA = "0x249CA34")]
	public void InitializeLaunchVideo()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x249CED4", Offset = "0x249CED4", VA = "0x249CED4")]
	public void OnLaunchVideoPrepared(UnityEngine.Video.VideoPlayer inVideoPlayer)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x249D000", Offset = "0x249D000", VA = "0x249D000")]
	public void PlayVideo()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x249D020", Offset = "0x249D020", VA = "0x249D020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x249D4D4", Offset = "0x249D4D4", VA = "0x249D4D4")]
	private void ApiNameGot()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x249D4E8", Offset = "0x249D4E8", VA = "0x249D4E8")]
	public void SetMovePlayer(Move_Player inMovePlayer)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x249CBE8", Offset = "0x249CBE8", VA = "0x249CBE8")]
	private void CheckVersion()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x249D528", Offset = "0x249D528", VA = "0x249D528")]
	public void ChangeMode(int inMode)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x249D530", Offset = "0x249D530", VA = "0x249D530")]
	public void ChangeTrainingMode(bool inValue)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x249D53C", Offset = "0x249D53C", VA = "0x249D53C")]
	public void LoadScene(byte idScene)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x249D618", Offset = "0x249D618", VA = "0x249D618")]
	public void Restart(bool withoutLoad = false, bool only = false)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x249D630", Offset = "0x249D630", VA = "0x249D630")]
	public void ChangeBackgroundFullScreenManager(bool inBool)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x249D654", Offset = "0x249D654", VA = "0x249D654")]
	public void RecenterFullScreenOnMenuControllerCamera()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x249D548", Offset = "0x249D548", VA = "0x249D548")]
	public void LoadSceneCoroutinePrepare(byte inIdScene, bool withoutLoad = false, bool only = false)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x249D724", Offset = "0x249D724", VA = "0x249D724")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D4E0", Offset = "0xB2D4E0")]
	public IEnumerator LoadSceneCoroutine(byte inIdScene, bool withoutLoad = false)
	{
		return null;
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x249D7C0", Offset = "0x249D7C0", VA = "0x249D7C0")]
	public void LoadSceneCoroutineAfter(byte inIdScene, bool withoutLoad = false)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x249DC30", Offset = "0x249DC30", VA = "0x249DC30")]
	private void SetReaderList(List<CustomReader> inCustomReaders)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x249DAEC", Offset = "0x249DAEC", VA = "0x249DAEC")]
	private void ClearPlayersInfo()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x249DC38", Offset = "0x249DC38", VA = "0x249DC38")]
	private void ClearOnlineData()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x249DCDC", Offset = "0x249DCDC", VA = "0x249DCDC")]
	private void StartGhosts()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x249DDF4", Offset = "0x249DDF4", VA = "0x249DDF4")]
	public void LoadMenuCoroutinePrepare(bool only = false)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x249DE28", Offset = "0x249DE28", VA = "0x249DE28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D548", Offset = "0xB2D548")]
	public IEnumerator LoadMenuCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x249DEA8", Offset = "0x249DEA8", VA = "0x249DEA8")]
	public void LoadMenuCoroutineAfter()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x249E080", Offset = "0x249E080", VA = "0x249E080")]
	public void InitializeLeaderBoard()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x249E13C", Offset = "0x249E13C", VA = "0x249E13C")]
	public void MenuHaveLoaded()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x249E150", Offset = "0x249E150", VA = "0x249E150")]
	public void InsertTime(float inTime, byte inNumberCheckPoint, byte idTrack = byte.MaxValue, bool insertAnyWay = false)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x249E1C8", Offset = "0x249E1C8", VA = "0x249E1C8")]
	public void UnloadLocalTime()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x249E368", Offset = "0x249E368", VA = "0x249E368")]
	public float GetLocalTime(byte inNumberTime, byte inNumberTrack)
	{
		return default(float);
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x249DB98", Offset = "0x249DB98", VA = "0x249DB98")]
	public float GetLocalTime(byte inNumberTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x249E3BC", Offset = "0x249E3BC", VA = "0x249E3BC")]
	public string GetCurrentSceneName()
	{
		return null;
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x249E3DC", Offset = "0x249E3DC", VA = "0x249E3DC")]
	public MenuController.TrackInfo GetCurrentTrackInfo()
	{
		return null;
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x249E47C", Offset = "0x249E47C", VA = "0x249E47C")]
	public byte GetSceneIndex(string inSceneName)
	{
		return default(byte);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x249DC1C", Offset = "0x249DC1C", VA = "0x249DC1C")]
	public void PublicDataGot()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x249E584", Offset = "0x249E584", VA = "0x249E584")]
	public void LaunchTrack()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x249E5A4", Offset = "0x249E5A4", VA = "0x249E5A4")]
	public void StopTrack()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x249E5F0", Offset = "0x249E5F0", VA = "0x249E5F0")]
	public void StartButtonPress()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x249E610", Offset = "0x249E610", VA = "0x249E610")]
	public void StartAnimOfStartPlaceEnded()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x249E664", Offset = "0x249E664", VA = "0x249E664")]
	public void SetPPCar(byte idCar)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x249E6BC", Offset = "0x249E6BC", VA = "0x249E6BC")]
	public static byte GetPPCar()
	{
		return default(byte);
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x249E70C", Offset = "0x249E70C", VA = "0x249E70C")]
	public void AccountRegistered()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x249E720", Offset = "0x249E720", VA = "0x249E720")]
	public void LogIn()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x249EA00", Offset = "0x249EA00", VA = "0x249EA00")]
	public static void SetUserName(string inUserName)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x249EA58", Offset = "0x249EA58", VA = "0x249EA58")]
	public static void SetUserFlag(byte inUserFlag)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x249EAB0", Offset = "0x249EAB0", VA = "0x249EAB0")]
	public static void SetUserMainHand(int hand)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x249EB58", Offset = "0x249EB58", VA = "0x249EB58")]
	public static bool GetUserMainHand()
	{
		return default(bool);
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x249EBB0", Offset = "0x249EBB0", VA = "0x249EBB0")]
	public static ZRInputModule.Hand GetUserMainHand(bool returnEnum)
	{
		return default(ZRInputModule.Hand);
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x249EC08", Offset = "0x249EC08", VA = "0x249EC08")]
	public static bool CheckAvailabilitySetMainHand()
	{
		return default(bool);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x249EC50", Offset = "0x249EC50", VA = "0x249EC50")]
	public static void SetUserControllerAngle(int inValue)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x249ECA8", Offset = "0x249ECA8", VA = "0x249ECA8")]
	public static bool GetUserControllerAngle()
	{
		return default(bool);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x249ED00", Offset = "0x249ED00", VA = "0x249ED00")]
	public static bool CheckAvailabilitySetControllerAngle()
	{
		return default(bool);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x249ED48", Offset = "0x249ED48", VA = "0x249ED48")]
	public static void SetUserLanguage(int inLanguageID, bool save = true)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x249EE64", Offset = "0x249EE64", VA = "0x249EE64")]
	public static int GetUserLanguage()
	{
		return default(int);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x249EEB0", Offset = "0x249EEB0", VA = "0x249EEB0")]
	public static bool CheckAvailabilitySetLanguage()
	{
		return default(bool);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x249EF48", Offset = "0x249EF48", VA = "0x249EF48")]
	public void TrackUserDataSent()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x249EFD0", Offset = "0x249EFD0", VA = "0x249EFD0")]
	public void TrackLeaderBoardUserDataUpdated()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x249F02C", Offset = "0x249F02C", VA = "0x249F02C")]
	public void GlobalRatingPlayerUpdated()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x249EFA4", Offset = "0x249EFA4", VA = "0x249EFA4")]
	public void CheckAllOperationsOfTrackDataSentIsComplete()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x249F088", Offset = "0x249F088", VA = "0x249F088")]
	public void TrackLeaderBoardUserDataDidntUpdated()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x249F0B0", Offset = "0x249F0B0", VA = "0x249F0B0")]
	public void TrackUserDataDidntSend()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x249F0C4", Offset = "0x249F0C4", VA = "0x249F0C4")]
	public void GlobalRatingUserDataDidntSend()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x249F09C", Offset = "0x249F09C", VA = "0x249F09C")]
	public void ActiveCanvasError()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x249F0D8", Offset = "0x249F0D8", VA = "0x249F0D8")]
	public void CheckpointChecked()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x249F0E8", Offset = "0x249F0E8", VA = "0x249F0E8")]
	public void OutsideColliderTriggered()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x249F0F4", Offset = "0x249F0F4", VA = "0x249F0F4")]
	public void RecenterFullScreenManager([Optional] Transform inTransform, bool rotationToo = false)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x249E060", Offset = "0x249E060", VA = "0x249E060")]
	public void RecenterFullScreenManager([Optional] Vector3 newPosition, [Optional] Quaternion newRotation)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x249F140", Offset = "0x249F140", VA = "0x249F140")]
	public static string GetUserName()
	{
		return null;
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x249F1A8", Offset = "0x249F1A8", VA = "0x249F1A8")]
	public static byte GetUserFlag()
	{
		return default(byte);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x249D6C8", Offset = "0x249D6C8", VA = "0x249D6C8")]
	public bool Pause(bool inValue = false, bool manually = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x249D39C", Offset = "0x249D39C", VA = "0x249D39C")]
	public void SetQuality(QualityType inQualityType)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x249F1F8", Offset = "0x249F1F8", VA = "0x249F1F8")]
	public static FloatingOrigin CheckFloatingOrigin(bool inInstantlyReTransform = false, bool inSetReferenceObject = false, [Optional] Transform inTransformReferenceObject)
	{
		return null;
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x249F47C", Offset = "0x249F47C", VA = "0x249F47C")]
	public static void SetVolumeFMOD(float inValue, MenuController.TypeFMODVolume inTypeFMODValue)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x249CE28", Offset = "0x249CE28", VA = "0x249CE28")]
	public static float GetVolumeFMOD(float inDefaultValue, MenuController.TypeFMODVolume inTypeFMODVolume)
	{
		return default(float);
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x24A0D80", Offset = "0x24A0D80", VA = "0x24A0D80")]
	public SceneController()
	{
	}
}
[Token(Token = "0x20001AF")]
public class TimerTournament : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B0")]
	public class TimeMark
	{
		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public short year;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public byte month;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public byte day;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public byte hour;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public byte minute;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public byte second;

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x25ADD00", Offset = "0x25ADD00", VA = "0x25ADD00")]
		public TimeMark()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001B1")]
	public class ListOfTimeMarks
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TimeMark> listOfTimeMarks;

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x25ADCF8", Offset = "0x25ADCF8", VA = "0x25ADCF8")]
		public ListOfTimeMarks()
		{
		}
	}

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB242D8", Offset = "0xB242D8")]
	[SerializeField]
	private Text daysOne;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text daysTwo;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text hourOne;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text hourTwo;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text minuteOne;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text minuteTwo;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text secondOne;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text secondTwo;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Image imageLeaderboardBeforeStart;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private StudioEventEmitter soundTickEmitter;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private StudioEventEmitter soundBubbleEmitter;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Animation secondTwoBubbleAnim;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject gmTimer;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject gameObjectButtonAttempt;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject gameObjectButtonAttemptsExhausted;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject gameObjectGoldLightAttempts;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] disableTheseAfterEnd;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject gameObjectAttemptsLoading;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject gameObjectAttemptsLoaded;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24424", Offset = "0xB24424")]
	public TimeMark startTime;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TimeMark endTime;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2445C", Offset = "0xB2445C")]
	[SerializeField]
	private Transform transformContainerImagesAttempts;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB244A8", Offset = "0xB244A8")]
	public bool enableTicks;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private DateTime startMark;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private DateTime endMark;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool isStart;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool isEnd;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private byte currentSecond;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
	private byte prevSecond;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject selectedImageAttempts;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<UserForTopPrevTournament> listUsersForTopPrevTournament;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform containerUsers;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform containerScreens;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float durationChange;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Image imageProgressBar;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Color colorProgressBar1;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Color colorProgressBar2;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float duration;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private byte currentScreen;

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x205452C", Offset = "0x205452C", VA = "0x205452C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x2054690", Offset = "0x2054690", VA = "0x2054690")]
	public void TourBeforeStart()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x2054654", Offset = "0x2054654", VA = "0x2054654")]
	public void TourStart()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x205494C", Offset = "0x205494C", VA = "0x205494C")]
	public void TourEnd()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x20549D8", Offset = "0x20549D8", VA = "0x20549D8")]
	public void SetCountAttempts(byte inValue)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x2054B44", Offset = "0x2054B44", VA = "0x2054B44")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x2054700", Offset = "0x2054700", VA = "0x2054700")]
	public void InitializePrevTableLeaderBoard()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x2055880", Offset = "0x2055880", VA = "0x2055880")]
	public void ChangeActiveScreen()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x2055958", Offset = "0x2055958", VA = "0x2055958")]
	public TimerTournament()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B2")]
public class UserForTopPrevTournament
{
	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string username;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string time;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite flagSprite;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x2644C18", Offset = "0x2644C18", VA = "0x2644C18")]
	public UserForTopPrevTournament()
	{
	}
}
[Token(Token = "0x20001B3")]
public class UpgradeController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B4")]
	public class CarPlaceChanger
	{
		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CarUpdateChange[] carUpdateChanges;

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x25B0344", Offset = "0x25B0344", VA = "0x25B0344")]
		public void Initialize(float inVersion, Action<byte, byte> inActionSend, Action<byte> inActionZeroize)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x25B04E0", Offset = "0x25B04E0", VA = "0x25B04E0")]
		public CarPlaceChanger()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001B5")]
	public class CarUpdateChange
	{
		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float version;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CarUpdateAction[] actions;

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x25B03DC", Offset = "0x25B03DC", VA = "0x25B03DC")]
		public void StartActions(Action<byte, byte> inActionSend, Action<byte> inActionZeroize)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x25B04F0", Offset = "0x25B04F0", VA = "0x25B04F0")]
		public CarUpdateChange()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001B6")]
	public class CarUpdateAction
	{
		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int prev;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int now;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TypeUpdate typeUpdate;

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x25B04E8", Offset = "0x25B04E8", VA = "0x25B04E8")]
		public CarUpdateAction()
		{
		}
	}

	[Token(Token = "0x20001B7")]
	public enum TypeUpdate
	{
		[Token(Token = "0x4000AD5")]
		Send,
		[Token(Token = "0x4000AD6")]
		Zeroize
	}

	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F990", Offset = "0xB1F990")]
	private sealed class <SetCar>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpgradeController <>4__this;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Car inCar;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte inCurrentCar;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600081A")]
			[Address(RVA = "0x25B02F4", Offset = "0x25B02F4", VA = "0x25B02F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600081C")]
			[Address(RVA = "0x25B033C", Offset = "0x25B033C", VA = "0x25B033C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x25B0000", Offset = "0x25B0000", VA = "0x25B0000")]
		[DebuggerHidden]
		public <SetCar>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x25B002C", Offset = "0x25B002C", VA = "0x25B002C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x25B0030", Offset = "0x25B0030", VA = "0x25B0030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x25B02FC", Offset = "0x25B02FC", VA = "0x25B02FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Characteristic[] characteristics;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint cash;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint cashCart;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text uiCash;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<string, Characteristic> dictionaryChar;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Characteristic[] dictionaryCharArray;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color colorUpgraded;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color colorPrepare;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color colorIsNotUpgraded;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color colorOff;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color colorNotEnough;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MenuController menuController;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Characteristic.CarClassBalance[] carClassBalance;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject uiLockCar2Class1;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject uiLockCar3Class1;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject uiLockCar3Class2;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject gameObjectUnlockCarAnim;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Animator unlockAnimator;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public CarPlaceChanger carPlaceChanger;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public byte countCarClass1;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public byte countCarClass2;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public byte countCarClass3;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CustomCounter counterCash;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Car mCar;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private NumberFormatInfo numberFormatInfoCash;

	[Token(Token = "0x4000AC8")]
	private const string KEY_VERSION_UPGRADE_CONTROLLER = "KEY_VERSION_UC";

	[Token(Token = "0x4000AC9")]
	private const float VersionUC = 1.09f;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<byte, string> dictionaryPass;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<byte, string> dictionaryKey;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string keyFL;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int HashReset;

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x264077C", Offset = "0x264077C", VA = "0x264077C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x264082C", Offset = "0x264082C", VA = "0x264082C")]
	private void CheckVersion()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x2640A88", Offset = "0x2640A88", VA = "0x2640A88")]
	private void FL1()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x2640E14", Offset = "0x2640E14", VA = "0x2640E14")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x2641AC8", Offset = "0x2641AC8", VA = "0x2641AC8")]
	public void ResetPrepareCells()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x264187C", Offset = "0x264187C", VA = "0x264187C")]
	public void ReConstructCells()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x2641C9C", Offset = "0x2641C9C", VA = "0x2641C9C")]
	public void Recalculate()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x26426E0", Offset = "0x26426E0", VA = "0x26426E0")]
	public void Upgrade(string inCharacteristic)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x26429B0", Offset = "0x26429B0", VA = "0x26429B0")]
	public void ConfirmBuy()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x2642D14", Offset = "0x2642D14", VA = "0x2642D14")]
	public void CancelBuy()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x2642F84", Offset = "0x2642F84", VA = "0x2642F84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2D900", Offset = "0xB2D900")]
	public IEnumerator SetCar(Car inCar, byte inCurrentCar)
	{
		return null;
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x2641490", Offset = "0x2641490", VA = "0x2641490")]
	private void UnloadData()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x26415AC", Offset = "0x26415AC", VA = "0x26415AC")]
	private void UploadData()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x2643028", Offset = "0x2643028", VA = "0x2643028")]
	private static string GetData(string key, string password)
	{
		return null;
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x2641488", Offset = "0x2641488", VA = "0x2641488")]
	private static void SaveData(string key, string password, string value)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x2643030", Offset = "0x2643030", VA = "0x2643030")]
	private static void DeleteData(string key)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x2643038", Offset = "0x2643038", VA = "0x2643038")]
	private void Update()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x264303C", Offset = "0x264303C", VA = "0x264303C")]
	public static (int, int, int) GetCharacteristic([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB32704", Offset = "0xB32704")] (int, int, int) parameters, playfabManager.CustomCarBalance customCarBalance)
	{
		return default((int, int, int));
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x26430D8", Offset = "0x26430D8", VA = "0x26430D8")]
	public static int GetCharacteristic(int inCar, int inCharacteristic, int exchangeRate, bool returnFullUpgrade = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x26432DC", Offset = "0x26432DC", VA = "0x26432DC")]
	public static float GetCharacteristic(int inCar, int inCharacteristic, float exchangeRate, bool returnFullUpgrade = false)
	{
		return default(float);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x26434EC", Offset = "0x26434EC", VA = "0x26434EC")]
	public static void AddMoney(uint inAddMoney)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x2643674", Offset = "0x2643674", VA = "0x2643674")]
	public static uint GetMoney()
	{
		return default(uint);
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x26423F0", Offset = "0x26423F0", VA = "0x26423F0")]
	public void CheckOpenedCars()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x2643770", Offset = "0x2643770", VA = "0x2643770")]
	public UpgradeController()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x2644560", Offset = "0x2644560", VA = "0x2644560")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D968", Offset = "0xB2D968")]
	private void <CheckVersion>b__32_0(byte prev, byte now)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x2644864", Offset = "0x2644864", VA = "0x2644864")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D978", Offset = "0xB2D978")]
	private void <CheckVersion>b__32_1(byte prev)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x2644A88", Offset = "0x2644A88", VA = "0x2644A88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D988", Offset = "0xB2D988")]
	private void <Upgrade>b__38_0(float actionCash)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x2644B50", Offset = "0x2644B50", VA = "0x2644B50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D998", Offset = "0xB2D998")]
	private void <CancelBuy>b__40_0(float actionCash)
	{
	}
}
[Serializable]
[Token(Token = "0x20001B9")]
public class Characteristic
{
	[Token(Token = "0x20001BA")]
	public enum CellState
	{
		[Token(Token = "0x4000AFB")]
		HasNotBeenUpgraded,
		[Token(Token = "0x4000AFC")]
		PrepareForBuy,
		[Token(Token = "0x4000AFD")]
		HasBeenUpgraded,
		[Token(Token = "0x4000AFE")]
		Hidden
	}

	[Serializable]
	[Token(Token = "0x20001BB")]
	public class CarBalance
	{
		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] minLvl;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] maxLvl;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] upgradedFromStart;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte[] hiddenFromEnd;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte classId;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public byte[] countCells;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public byte[] countStartCellsAndUpCells;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public byte countCharacteristics;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public ushort[] moneyForPlace;

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x1FFA380", Offset = "0x1FFA380", VA = "0x1FFA380")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x1FFA520", Offset = "0x1FFA520", VA = "0x1FFA520")]
		public CarBalance()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001BC")]
	public class CarClassBalance
	{
		[Serializable]
		[Token(Token = "0x20001BD")]
		public class CarClassCharacteristic
		{
			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint[] moneyForUpgrade;

			[Token(Token = "0x6000824")]
			[Address(RVA = "0x25BB8F0", Offset = "0x25BB8F0", VA = "0x25BB8F0")]
			public CarClassCharacteristic()
			{
			}
		}

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ushort[] moneyForPlace;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CarClassCharacteristic[] carClassCharacteristics;

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x1FFA528", Offset = "0x1FFA528", VA = "0x1FFA528")]
		public CarClassBalance()
		{
		}
	}

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uiPrice;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cellsContainer;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject cellsUpgradeContainer;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CustomButton buttonUpgrade;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public byte dataKey;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public byte dataPassword;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MenuController menuController;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public byte currentCar;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool somethingHappening;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool toZero;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform transformUpdateStartPoint;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform transformUpdateEndPoint;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform transformUpgradeLineUI;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float lerpUpdate;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float speedTransition;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public HorizontalLayoutGroup horizontalLayoutGroupCellsContainer;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public HorizontalLayoutGroup horizontalLayoutGroupCellsUpgradeContainer;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Car mCar;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public uint currentPrice;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Image[] uiCells;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public Image[] uiCellsUpgrade;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public float cellContainerWidth;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public float cellContainerSpacing;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public float uiPriceWidth;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public float uiCellHeight;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public float uiPriceHeight;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public float constTransformYForUIPrice;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public float transformXForUIPrice;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[HideInInspector]
	public byte countUiCells;

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x223FC74", Offset = "0x223FC74", VA = "0x223FC74")]
	public void SetCar(Car inCar, byte inCurrentCar)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x223FDB4", Offset = "0x223FDB4", VA = "0x223FDB4")]
	public static CellState[] ToCellState(string[] values)
	{
		return null;
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x223FF34", Offset = "0x223FF34", VA = "0x223FF34")]
	public string SaveValue()
	{
		return null;
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x2240080", Offset = "0x2240080", VA = "0x2240080")]
	public Characteristic()
	{
	}
}
[Token(Token = "0x20001BE")]
public class ZRInputModule : MonoBehaviour
{
	[Token(Token = "0x20001BF")]
	private enum Status
	{
		[Token(Token = "0x4000B19")]
		None,
		[Token(Token = "0x4000B1A")]
		Active,
		[Token(Token = "0x4000B1B")]
		Disabled
	}

	[Token(Token = "0x20001C0")]
	public enum Hand
	{
		[Token(Token = "0x4000B1D")]
		Right,
		[Token(Token = "0x4000B1E")]
		Left
	}

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ActionBasedControllerCustom mCurrentController;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ActionBasedControllerCustom mCurrentHandShipController;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ActionBasedControllerCustom mSecondHandShipController;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas[] canvases;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera mCurrentCamera;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PointerContainer pointerLeft;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PointerContainer pointerRight;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ActionBasedControllerCustom leftController;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ActionBasedControllerCustom rightController;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Hand mCurrentHand;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private byte lengthCanvases;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Status status;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action ActionOnInitialized;

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x1FE71D0", Offset = "0x1FE71D0", VA = "0x1FE71D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1FE71F4", Offset = "0x1FE71F4", VA = "0x1FE71F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x1FE7388", Offset = "0x1FE7388", VA = "0x1FE7388")]
	private void Perform()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x1FE7550", Offset = "0x1FE7550", VA = "0x1FE7550")]
	public void CheckAvailabilityShipHand()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1FE763C", Offset = "0x1FE763C", VA = "0x1FE763C")]
	private void EnableCanvases()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1FE772C", Offset = "0x1FE772C", VA = "0x1FE772C")]
	public void Initialize(GameObject left, GameObject right, Camera inCamera)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x1FE795C", Offset = "0x1FE795C", VA = "0x1FE795C")]
	public void DisableLaser()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1FE79A0", Offset = "0x1FE79A0", VA = "0x1FE79A0")]
	public void EnableLaser()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1FE7298", Offset = "0x1FE7298", VA = "0x1FE7298")]
	private void ActiveHand(Hand inHand)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x1FE79E4", Offset = "0x1FE79E4", VA = "0x1FE79E4")]
	private void RightHandClick(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1FE7A80", Offset = "0x1FE7A80", VA = "0x1FE7A80")]
	private void LeftHandClick(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1FE7B18", Offset = "0x1FE7B18", VA = "0x1FE7B18")]
	public ZRInputModule()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C1")]
public class PointerContainer
{
	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public XRRayInteractor xRRayInteractor;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRInteractorLineVisual xrInteractorLineVisual;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x2022320", Offset = "0x2022320", VA = "0x2022320")]
	public void Initialize(XRRayInteractor inRayInteractor, LineRenderer inlineRenderer, XRInteractorLineVisual inInteractorLineVisual)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x2022370", Offset = "0x2022370", VA = "0x2022370")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x20223C8", Offset = "0x20223C8", VA = "0x20223C8")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x2022420", Offset = "0x2022420", VA = "0x2022420")]
	public static implicit operator bool(PointerContainer inPointerContainer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x2022504", Offset = "0x2022504", VA = "0x2022504")]
	public PointerContainer()
	{
	}
}
[Token(Token = "0x20001C2")]
public class ZRPointer : MonoBehaviour
{
	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mDefaultLength;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject mGoDot;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ZRInputModule mZrInputModule;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LineRenderer mLineRenderer;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1FE7B20", Offset = "0x1FE7B20", VA = "0x1FE7B20")]
	public ZRPointer()
	{
	}
}
[Token(Token = "0x20001C3")]
public class AddEngine : MonoBehaviour
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24610", Offset = "0xB24610")]
	public Image[] imagesProjector;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24648", Offset = "0xB24648")]
	public Sprite[] segments;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24680", Offset = "0xB24680")]
	public float fps;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float duration;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float secondsForFrame;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private ushort currentFrame;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private ushort countSegments;

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x22C6210", Offset = "0x22C6210", VA = "0x22C6210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x22C6244", Offset = "0x22C6244", VA = "0x22C6244")]
	private void Update()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x22C6310", Offset = "0x22C6310", VA = "0x22C6310")]
	public void Click()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x22C6358", Offset = "0x22C6358", VA = "0x22C6358")]
	public void OpenFullVersionStorePage()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x22C63A0", Offset = "0x22C63A0", VA = "0x22C63A0")]
	public AddEngine()
	{
	}
}
[Token(Token = "0x20001C4")]
public class ExpandingLineUI : UIBehaviour
{
	[Serializable]
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F9A0", Offset = "0xB1F9A0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<RectTransform, float> <>9__6_0;

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x2347644", Offset = "0x2347644", VA = "0x2347644")]
		public <>c()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x234764C", Offset = "0x234764C", VA = "0x234764C")]
		internal float <ResizeInput>b__6_0(RectTransform t)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform lineTransform;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform[] leftElement;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform[] rightElement;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float leftOffset;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rightOffset;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float parentWidth;

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x28710F8", Offset = "0x28710F8", VA = "0x28710F8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB2D9F8", Offset = "0xB2D9F8")]
	public void ResizeInput()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x2871354", Offset = "0x2871354", VA = "0x2871354")]
	public ExpandingLineUI()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x287135C", Offset = "0x287135C", VA = "0x287135C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DA30", Offset = "0xB2DA30")]
	private float <ResizeInput>b__6_1(RectTransform t)
	{
		return default(float);
	}
}
[Token(Token = "0x20001C6")]
public class ExpandingUIText : UIBehaviour
{
	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text inf;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Regex colorTags;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Regex keyWords;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Regex operators;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB246B8", Offset = "0xB246B8")]
	private Regex <definedTriggers>k__BackingField;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float widthParent;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float widthPlace;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float space;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public byte mode;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string cashText;

	[Token(Token = "0x1700006C")]
	public Regex definedTriggers
	{
		[Token(Token = "0x6000842")]
		[Address(RVA = "0x2871390", Offset = "0x2871390", VA = "0x2871390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DA40", Offset = "0xB2DA40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000843")]
		[Address(RVA = "0x2871398", Offset = "0x2871398", VA = "0x2871398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DA50", Offset = "0xB2DA50")]
		set
		{
		}
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x28713A0", Offset = "0x28713A0", VA = "0x28713A0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x2871458", Offset = "0x2871458", VA = "0x2871458")]
	private void Update()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x287145C", Offset = "0x287145C", VA = "0x287145C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB2DA60", Offset = "0xB2DA60")]
	public void ResizeInput()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x2871AE8", Offset = "0x2871AE8", VA = "0x2871AE8")]
	public ExpandingUIText()
	{
	}
}
[Token(Token = "0x20001C7")]
public class AutoPlanarConfig : MonoBehaviour
{
	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CameraShade[] cameraShades;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityEngine.XR.InputDevice device;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private byte countCamerasShades;

	[Token(Token = "0x4000B42")]
	private const string keyDevice = "KEY_DEVICE_VR";

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, AkilliMum.SRP.Mirror.DeviceType> listDevices;

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x22C9CA8", Offset = "0x22C9CA8", VA = "0x22C9CA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x22C9E3C", Offset = "0x22C9E3C", VA = "0x22C9E3C")]
	public AutoPlanarConfig()
	{
	}
}
[Token(Token = "0x20001C8")]
public class PlanarSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CameraShade[] camerasShades;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool[] actions;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private byte countCamerasShades;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x2019CAC", Offset = "0x2019CAC", VA = "0x2019CAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x2019CD0", Offset = "0x2019CD0", VA = "0x2019CD0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x2019D64", Offset = "0x2019D64", VA = "0x2019D64")]
	public PlanarSwitcher()
	{
	}
}
[Token(Token = "0x20001C9")]
public class TestAsync : MonoBehaviour
{
	[Token(Token = "0x600084D")]
	[Address(RVA = "0x204DB50", Offset = "0x204DB50", VA = "0x204DB50")]
	public TestAsync()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CA")]
public class TestPlayFab : MonoBehaviour
{
	[Token(Token = "0x20001CB")]
	public class userData
	{
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Flag;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Time;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Record;

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x25ADCE8", Offset = "0x25ADCE8", VA = "0x25ADCE8")]
		public userData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001CC")]
	public class leaderboardData
	{
		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string PlayfabID;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Position;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Name;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Flag;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Time;

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x25ACD60", Offset = "0x25ACD60", VA = "0x25ACD60")]
		public leaderboardData()
		{
		}
	}

	[Token(Token = "0x20001CD")]
	public class TrackCount
	{
		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string TrackName;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int PlayersCount;

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x25ADCE0", Offset = "0x25ADCE0", VA = "0x25ADCE0")]
		public TrackCount()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F9B0", Offset = "0xB1F9B0")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<int> resultCallback;

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x25AC7F4", Offset = "0x25AC7F4", VA = "0x25AC7F4")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x25AC7FC", Offset = "0x25AC7FC", VA = "0x25AC7FC")]
		internal void <GetTotalPlayersForTrack>b__0(GetLeaderboardAroundPlayerResult result)
		{
		}
	}

	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F9C0", Offset = "0xB1F9C0")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public System.Random random;

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x25AC898", Offset = "0x25AC898", VA = "0x25AC898")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x25AC8A0", Offset = "0x25AC8A0", VA = "0x25AC8A0")]
		internal char <RandomString>b__0(string s)
		{
			return default(char);
		}
	}

	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F9D0", Offset = "0xB1F9D0")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action AUserDataTrackSent;

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x25AC8E8", Offset = "0x25AC8E8", VA = "0x25AC8E8")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x25AC8F0", Offset = "0x25AC8F0", VA = "0x25AC8F0")]
		internal void <SendAllData>b__0(UpdateUserDataResult callbackUpdateUserData)
		{
		}
	}

	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F9E0", Offset = "0xB1F9E0")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string insTrackName;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TestPlayFab <>4__this;

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x25AC910", Offset = "0x25AC910", VA = "0x25AC910")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x25AC918", Offset = "0x25AC918", VA = "0x25AC918")]
		internal void <DeleteAllDataUserOnTrack>b__0(UpdateUserDataResult callback)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1F9F0", Offset = "0xB1F9F0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PlayFabError> <>9__18_1;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<UpdatePlayerStatisticsResult> <>9__19_0;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<PlayFabError> <>9__19_1;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<GetLeaderboardAroundPlayerResult> <>9__23_0;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<UpdatePlayerStatisticsResult> <>9__29_0;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<GetUserDataResult> <>9__30_0;

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x25AC2DC", Offset = "0x25AC2DC", VA = "0x25AC2DC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x25AC2E4", Offset = "0x25AC2E4", VA = "0x25AC2E4")]
		internal void <DeleteAllDataUserOnTrack>b__18_1(PlayFabError callbackError)
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x25AC380", Offset = "0x25AC380", VA = "0x25AC380")]
		internal void <SetZeroOnLeaderBoard>b__19_0(UpdatePlayerStatisticsResult callback)
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x25AC3F4", Offset = "0x25AC3F4", VA = "0x25AC3F4")]
		internal void <SetZeroOnLeaderBoard>b__19_1(PlayFabError callbackError)
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x25AC490", Offset = "0x25AC490", VA = "0x25AC490")]
		internal void <GetPosition>b__23_0(GetLeaderboardAroundPlayerResult result)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x25AC56C", Offset = "0x25AC56C", VA = "0x25AC56C")]
		internal void <UpdateGlobalRating>b__29_0(UpdatePlayerStatisticsResult callback)
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x25AC5E0", Offset = "0x25AC5E0", VA = "0x25AC5E0")]
		internal void <GetUserNameFlag>b__30_0(GetUserDataResult result)
		{
		}
	}

	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FA00", Offset = "0xB1FA00")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string trackname;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TestPlayFab <>4__this;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<leaderboardData> resultArray;

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x25AC9B0", Offset = "0x25AC9B0", VA = "0x25AC9B0")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x25AC9B8", Offset = "0x25AC9B8", VA = "0x25AC9B8")]
		internal void <GetLeaderboardDataForTrackTop>b__0(GetLeaderboardResult result)
		{
		}
	}

	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FA10", Offset = "0xB1FA10")]
	private sealed class <>c__DisplayClass20_1
	{
		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public leaderboardData record;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GetUserDataRequest dataRequest;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int position;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public <>c__DisplayClass20_0 CS$<>8__locals1;

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x25ACD58", Offset = "0x25ACD58", VA = "0x25ACD58")]
		public <>c__DisplayClass20_1()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x25ACD68", Offset = "0x25ACD68", VA = "0x25ACD68")]
		internal void <GetLeaderboardDataForTrackTop>b__1(GetUserDataResult getEnemResult)
		{
		}
	}

	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FA20", Offset = "0xB1FA20")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TestPlayFab <>4__this;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte countGotData;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<leaderboardData> resultArray;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<List<leaderboardData>, byte> inCallBack;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte inTrack;

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x25AD058", Offset = "0x25AD058", VA = "0x25AD058")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x25AD060", Offset = "0x25AD060", VA = "0x25AD060")]
		internal void <GetLeaderBoardDataForTrackAroundPlayer>b__0(GetLeaderboardAroundPlayerResult result)
		{
		}
	}

	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FA30", Offset = "0xB1FA30")]
	private sealed class <>c__DisplayClass21_1
	{
		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GetLeaderboardAroundPlayerResult result;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass21_0 CS$<>8__locals1;

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x25AD5E4", Offset = "0x25AD5E4", VA = "0x25AD5E4")]
		public <>c__DisplayClass21_1()
		{
		}
	}

	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FA40", Offset = "0xB1FA40")]
	private sealed class <>c__DisplayClass21_2
	{
		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public leaderboardData insLeaderBoardData;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass21_1 CS$<>8__locals2;

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x25AD5EC", Offset = "0x25AD5EC", VA = "0x25AD5EC")]
		public <>c__DisplayClass21_2()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x25AD5F4", Offset = "0x25AD5F4", VA = "0x25AD5F4")]
		internal void <GetLeaderBoardDataForTrackAroundPlayer>b__1(GetUserDataResult resultCallback)
		{
		}
	}

	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FA50", Offset = "0xB1FA50")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<int> resultCallback;

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x25AD8F8", Offset = "0x25AD8F8", VA = "0x25AD8F8")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x25AD900", Offset = "0x25AD900", VA = "0x25AD900")]
		internal void <GetYourPositionOnTrack>b__0(GetLeaderboardAroundPlayerResult result)
		{
		}
	}

	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FA60", Offset = "0xB1FA60")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> trackNames;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<float> resultList;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float defaultValue;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<List<float>> callbackData;

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x25AD99C", Offset = "0x25AD99C", VA = "0x25AD99C")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x25AD9A4", Offset = "0x25AD9A4", VA = "0x25AD9A4")]
		internal void <GetUserDataForLeaderboard>b__0(GetUserDataResult result)
		{
		}
	}

	[Token(Token = "0x4000B47")]
	private const string dummyID = "_DUMMY_CONST_ID_";

	[Token(Token = "0x4000B48")]
	private const string dummyIDPlayfab = "BFF54F7DAA392CB2";

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB246F8", Offset = "0xB246F8")]
	public byte function;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string LocalPlayer_PlayFabId;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] trackNames;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string customId;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int newGlobalRating;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ghostPrefab;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public userData player;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RaceManager raceManager;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<TrackCount> trackCounts;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x204DE98", Offset = "0x204DE98", VA = "0x204DE98")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB2DA98", Offset = "0xB2DA98")]
	public void GetTotalPlayersForTrack(string inTrackname, Action<int> resultCallback)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x204E0C0", Offset = "0x204E0C0", VA = "0x204E0C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x204E2EC", Offset = "0x204E2EC", VA = "0x204E2EC")]
	private string RandomString(int length)
	{
		return null;
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x204E488", Offset = "0x204E488", VA = "0x204E488")]
	public void SendAllData(float time, CustomAnim anim, Action AUserDataTrackSent, Action ALeaderBoardUserDataTrackSent, Action AUserDataTrackSentError, Action ALeaderBoardUserDataTrackSentError)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x204EB90", Offset = "0x204EB90", VA = "0x204EB90")]
	public void DeleteAllDataUserOnTrack()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x204F0BC", Offset = "0x204F0BC", VA = "0x204F0BC")]
	public void SetZeroOnLeaderBoard(string inTrackName)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x204F3AC", Offset = "0x204F3AC", VA = "0x204F3AC")]
	public List<leaderboardData> GetLeaderboardDataForTrackTop(string trackname, int maxResultsCount)
	{
		return null;
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x204F664", Offset = "0x204F664", VA = "0x204F664")]
	public void GetLeaderBoardDataForTrackAroundPlayer(string trackName, int maxResultsCount, Action<List<leaderboardData>, byte> inCallBack, byte inTrack)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x204F92C", Offset = "0x204F92C", VA = "0x204F92C")]
	public void GetYourPositionOnTrack(string trackName, Action<int> resultCallback)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x204FB34", Offset = "0x204FB34", VA = "0x204FB34")]
	public void GetPosition(string trackName, string id)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x204FD7C", Offset = "0x204FD7C", VA = "0x204FD7C")]
	public void GetUserDataForLeaderboard(string playfabID, List<string> trackNames, Action<List<float>> callbackData, float defaultValue)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x205006C", Offset = "0x205006C", VA = "0x205006C")]
	public void SendUsername(string username, string flagID)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x20502DC", Offset = "0x20502DC", VA = "0x20502DC")]
	private void OnLoginSuccess(LoginResult result)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x205071C", Offset = "0x205071C", VA = "0x205071C")]
	private void OnLoginSuccessDeleteDataTrackAllUsers(LoginResult result)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x2050750", Offset = "0x2050750", VA = "0x2050750")]
	private void OnLoginSuccessUpdateGlobalRating(LoginResult result)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x2050784", Offset = "0x2050784", VA = "0x2050784")]
	public void UpdateGlobalRating()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x2050478", Offset = "0x2050478", VA = "0x2050478")]
	public void GetUserNameFlag(string playfabID)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x2050A40", Offset = "0x2050A40", VA = "0x2050A40")]
	private void OnDataSend(UpdateUserDataResult result)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x2050AB4", Offset = "0x2050AB4", VA = "0x2050AB4")]
	private void OnDataNewAccountInitials(UpdateUserDataResult result)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x2050B70", Offset = "0x2050B70", VA = "0x2050B70")]
	private void OnStatisticSend(UpdatePlayerStatisticsResult result)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x2050BE4", Offset = "0x2050BE4", VA = "0x2050BE4")]
	private void OnStatisticSendCustom(string inSceneName)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x2050C9C", Offset = "0x2050C9C", VA = "0x2050C9C")]
	private void OnError(PlayFabError error)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x2050D38", Offset = "0x2050D38", VA = "0x2050D38")]
	public int ConvertFloatToInt(float number)
	{
		return default(int);
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x2050DFC", Offset = "0x2050DFC", VA = "0x2050DFC")]
	public float ConvertIntToFloat(int number)
	{
		return default(float);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x2050E10", Offset = "0x2050E10", VA = "0x2050E10")]
	public List<float> ConvertStringToFloatList(string in_array)
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x2050F44", Offset = "0x2050F44", VA = "0x2050F44")]
	public TestPlayFab()
	{
	}
}
[Token(Token = "0x20001DA")]
public class Res : MonoBehaviour
{
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FA70", Offset = "0xB1FA70")]
	private sealed class <LoadSceneCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Res <>4__this;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x200AB14", Offset = "0x200AB14", VA = "0x200AB14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0x200AB5C", Offset = "0x200AB5C", VA = "0x200AB5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x200A9FC", Offset = "0x200A9FC", VA = "0x200A9FC")]
		[DebuggerHidden]
		public <LoadSceneCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x200AA28", Offset = "0x200AA28", VA = "0x200AA28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x200AA2C", Offset = "0x200AA2C", VA = "0x200AA2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x200AB1C", Offset = "0x200AB1C", VA = "0x200AB1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x20C3DBC", Offset = "0x20C3DBC", VA = "0x20C3DBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x20C3DC0", Offset = "0x20C3DC0", VA = "0x20C3DC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x20C3F68", Offset = "0x20C3F68", VA = "0x20C3F68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DAD0", Offset = "0xB2DAD0")]
	public IEnumerator LoadSceneCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x20C3FE8", Offset = "0x20C3FE8", VA = "0x20C3FE8")]
	public Res()
	{
	}
}
[Token(Token = "0x20001DC")]
public class SpeedEffect : MonoBehaviour
{
	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 direction;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float maxSpeed;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float maxAcceleration;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float maxSpeedRotation;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float maxSpeedAccelerationRotation;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject carTrail;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private byte countCopies;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject[] copies;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion lastRotation;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 velocity;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 rotateVelocity;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float step;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float time;

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x24A843C", Offset = "0x24A843C", VA = "0x24A843C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x24A86D4", Offset = "0x24A86D4", VA = "0x24A86D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x24A8E58", Offset = "0x24A8E58", VA = "0x24A8E58")]
	public float Remap(float inMin, float inMax, float outMin, float outMax, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x24A8E74", Offset = "0x24A8E74", VA = "0x24A8E74")]
	public SpeedEffect()
	{
	}
}
[Token(Token = "0x20001DD")]
public class GravityObstacle : MonoBehaviour
{
	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isTrigger;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool timePassed;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool animatedObject;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool transportToStartPos;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public short timeAfterTrigger;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speedPosLerp;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speedRotLerp;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string playerTag;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 startPosition;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion startRotation;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Collider _triggerCollider;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator animator;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float animStopped;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody _rb;

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x23D20A8", Offset = "0x23D20A8", VA = "0x23D20A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x23D2260", Offset = "0x23D2260", VA = "0x23D2260")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x23D23A4", Offset = "0x23D23A4", VA = "0x23D23A4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x23D2498", Offset = "0x23D2498", VA = "0x23D2498")]
	private void Update()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x23D2734", Offset = "0x23D2734", VA = "0x23D2734")]
	private void TimePass()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x23D2794", Offset = "0x23D2794", VA = "0x23D2794")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x23D287C", Offset = "0x23D287C", VA = "0x23D287C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x23D2954", Offset = "0x23D2954", VA = "0x23D2954")]
	private void SetKinematic()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x23D2978", Offset = "0x23D2978", VA = "0x23D2978")]
	public GravityObstacle()
	{
	}
}
[Token(Token = "0x20001DE")]
public class AuthCommon : MonoBehaviour
{
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FA80", Offset = "0xB1FA80")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AuthCommon <>4__this;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callback;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Message<User>.Callback <>9__2;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Message.Callback <>9__1;

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1FF92B0", Offset = "0x1FF92B0", VA = "0x1FF92B0")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1FF92B8", Offset = "0x1FF92B8", VA = "0x1FF92B8")]
		internal void <CustomStart>b__0(Message<PlatformInitialize> initializeResult)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1FF941C", Offset = "0x1FF941C", VA = "0x1FF941C")]
		internal void <CustomStart>b__1(Message userEntitledResult)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1FF954C", Offset = "0x1FF954C", VA = "0x1FF954C")]
		internal void <CustomStart>b__2(Message<User> getLoggedInUserResult)
		{
		}
	}

	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FA90", Offset = "0xB1FA90")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AuthCommon <>4__this;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action actionCallbackFail;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<string, string> actionCallbackSuccess;

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1FF8D90", Offset = "0x1FF8D90", VA = "0x1FF8D90")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1FF8D98", Offset = "0x1FF8D98", VA = "0x1FF8D98")]
		internal void <SetPresence>b__0(Message groupPresenceSetResult)
		{
		}
	}

	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FAA0", Offset = "0xB1FAA0")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action actionCallbackFail;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AuthCommon <>4__this;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action actionCallbackSuccess;

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1FF8EE8", Offset = "0x1FF8EE8", VA = "0x1FF8EE8")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1FF8EF0", Offset = "0x1FF8EF0", VA = "0x1FF8EF0")]
		internal void <ClearPresence>b__0(Message clearPresenceResult)
		{
		}
	}

	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FAB0", Offset = "0xB1FAB0")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action actionCallbackFail;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AuthCommon <>4__this;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<ulong> actionCallbackSuccess;

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1FF8FF8", Offset = "0x1FF8FF8", VA = "0x1FF8FF8")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1FF9000", Offset = "0x1FF9000", VA = "0x1FF9000")]
		internal void <CreateRoom>b__0(Message<Oculus.Platform.Models.Room> createAndJoinRoomResult)
		{
		}
	}

	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FAC0", Offset = "0xB1FAC0")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action actionCallbackFail;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AuthCommon <>4__this;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action actionCallbackSuccess;

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1FF914C", Offset = "0x1FF914C", VA = "0x1FF914C")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1FF9154", Offset = "0x1FF9154", VA = "0x1FF9154")]
		internal void <JoinRoom>b__0(Message<Oculus.Platform.Models.Room> joinRoomResult)
		{
		}
	}

	[Token(Token = "0x20001E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FAD0", Offset = "0xB1FAD0")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action actionCallbackFail;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AuthCommon <>4__this;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action actionCallbackSuccess;

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1FF96E8", Offset = "0x1FF96E8", VA = "0x1FF96E8")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1FF96F0", Offset = "0x1FF96F0", VA = "0x1FF96F0")]
		internal void <LeaveRoom>b__0(Message<Oculus.Platform.Models.Room> leaveRoomResult)
		{
		}
	}

	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FAE0", Offset = "0xB1FAE0")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AuthCommon <>4__this;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong insRoomID;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string inMatchSessionId;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string inLobbySessionId;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string inDestinationAPI;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string, string> <>9__1;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action <>9__2;

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1FF9810", Offset = "0x1FF9810", VA = "0x1FF9810")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1FF9818", Offset = "0x1FF9818", VA = "0x1FF9818")]
		internal void <AcceptInviteInternal>b__0()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1FF9974", Offset = "0x1FF9974", VA = "0x1FF9974")]
		internal void <AcceptInviteInternal>b__1(string outMatchSessionID, string outLobbySessionID)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1FF99D0", Offset = "0x1FF99D0", VA = "0x1FF99D0")]
		internal void <AcceptInviteInternal>b__2()
		{
		}
	}

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string matchSessionID;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string lobbySessionID;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string destinationPartyMode;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string userName;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool destinationJoinable;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public User user;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong userID;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong roomID;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public NetworkRoomManagerZRace networkRoomManager;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Message<GroupPresenceJoinIntent> messageGroupPresenceJoinIntent;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool initialized;

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x22C7D0C", Offset = "0x22C7D0C", VA = "0x22C7D0C")]
	public void AwakeCustom()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x22C7DF0", Offset = "0x22C7DF0", VA = "0x22C7DF0")]
	private void CustomStart(Action callback)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x22C8044", Offset = "0x22C8044", VA = "0x22C8044")]
	private static void PushAppQuit(string inMessage = "")
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x22C7FE4", Offset = "0x22C7FE4", VA = "0x22C7FE4")]
	public void SetFov()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x22C80D8", Offset = "0x22C80D8", VA = "0x22C80D8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x22C8324", Offset = "0x22C8324", VA = "0x22C8324")]
	public void SetPresence([Optional] string inMatchSessionID, [Optional] string inLobbySessionID, [Optional] string inDestinationAPI, [Optional] Action<string, string> actionCallbackSuccess, [Optional] Action actionCallbackFail)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x22C8538", Offset = "0x22C8538", VA = "0x22C8538")]
	public void ClearPresence([Optional] Action actionCallbackSuccess, [Optional] Action actionCallbackFail)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x22C8644", Offset = "0x22C8644", VA = "0x22C8644")]
	public void CreateRoom([Optional] Action<ulong> actionCallbackSuccess, [Optional] Action actionCallbackFail)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x22C87C8", Offset = "0x22C87C8", VA = "0x22C87C8")]
	private void JoinRoom(ulong inRoomID, [Optional] Action actionCallbackSuccess, [Optional] Action actionCallbackFail)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x22C8940", Offset = "0x22C8940", VA = "0x22C8940")]
	public void LeaveRoom([Optional] Action actionCallbackSuccess, [Optional] Action actionCallbackFail)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x22C8A90", Offset = "0x22C8A90", VA = "0x22C8A90")]
	public void LaunchInvitePanel()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x22C8B04", Offset = "0x22C8B04", VA = "0x22C8B04")]
	public void AcceptInviteEditor(string inMatchSessionId, string inLobbySessionId, string inDestinationAPI)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x22C81CC", Offset = "0x22C81CC", VA = "0x22C81CC")]
	public void AcceptInvite()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x22C8B08", Offset = "0x22C8B08", VA = "0x22C8B08")]
	private void AcceptInviteInternal(string inMatchSessionId, string inLobbySessionId, string inDestinationAPI)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x22C8E18", Offset = "0x22C8E18", VA = "0x22C8E18")]
	private void OnGroupPresenceJoinIntentNotification(Message<GroupPresenceJoinIntent> inGroupPresenceJoinIntent)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x22C8C98", Offset = "0x22C8C98", VA = "0x22C8C98")]
	private void PushAbortNetwork(string inMessage = "")
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x22C8E5C", Offset = "0x22C8E5C", VA = "0x22C8E5C")]
	public AuthCommon()
	{
	}
}
[Token(Token = "0x20001E6")]
public class TrailerSwitchCar : MonoBehaviour
{
	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Cars;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TempGasController[] TempGass;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int currentCar;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Move_Player MovePlayer;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x2635CD8", Offset = "0x2635CD8", VA = "0x2635CD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x2635DC4", Offset = "0x2635DC4", VA = "0x2635DC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x2635EA4", Offset = "0x2635EA4", VA = "0x2635EA4")]
	public TrailerSwitchCar()
	{
	}
}
[Token(Token = "0x20001E7")]
public class UIFollow : MonoBehaviour
{
	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerHead;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothSpeed;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 offset;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 rotation;

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x263EF48", Offset = "0x263EF48", VA = "0x263EF48")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x263F0B4", Offset = "0x263F0B4", VA = "0x263F0B4")]
	public UIFollow()
	{
	}
}
[Token(Token = "0x20001E8")]
public class EventEnterExit : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent EventEnter;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent EventExit;

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x286D410", Offset = "0x286D410", VA = "0x286D410", Slot = "4")]
	public void OnPointerEnter(PointerEventData data)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x286D424", Offset = "0x286D424", VA = "0x286D424", Slot = "5")]
	public void OnPointerExit(PointerEventData data)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x286D438", Offset = "0x286D438", VA = "0x286D438")]
	public EventEnterExit()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E9")]
public class LocalizedFont : LocalizedAsset<Font>
{
	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x25252A8", Offset = "0x25252A8", VA = "0x25252A8")]
	public LocalizedFont()
	{
	}
}
[Token(Token = "0x20001EA")]
public class LocalizeFontEvent : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001EB")]
	public class FontEvent : UnityEvent<Font>
	{
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x235690C", Offset = "0x235690C", VA = "0x235690C")]
		public FontEvent()
		{
		}
	}

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizedFont localizedFont;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FontEvent fontEvent;

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x25250A8", Offset = "0x25250A8", VA = "0x25250A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x252516C", Offset = "0x252516C", VA = "0x252516C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x2525230", Offset = "0x2525230", VA = "0x2525230")]
	public void UpdateFont(Font inFont)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x25252A0", Offset = "0x25252A0", VA = "0x25252A0")]
	public LocalizeFontEvent()
	{
	}
}
[Token(Token = "0x20001EC")]
public class CustomCounter : MonoBehaviour
{
	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float counterDuration;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float number;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float from;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float to;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool doIt;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StudioEventEmitter soundCounter;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action<float> actionCallback;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action actionCallbackSuccess;

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x2209824", Offset = "0x2209824", VA = "0x2209824")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x22099DC", Offset = "0x22099DC", VA = "0x22099DC")]
	public void Stop()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x22099E4", Offset = "0x22099E4", VA = "0x22099E4")]
	public void Count(float inFrom, float inTo, Action<float> inAction, [Optional] Action inActionSuccess)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x2209A40", Offset = "0x2209A40", VA = "0x2209A40")]
	public CustomCounter()
	{
	}
}
[Token(Token = "0x20001ED")]
public class CustomRdna : MonoBehaviour
{
	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform g1;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform g2;

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x220A2C4", Offset = "0x220A2C4", VA = "0x220A2C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x220A3C8", Offset = "0x220A3C8", VA = "0x220A3C8")]
	public CustomRdna()
	{
	}
}
[Token(Token = "0x20001EE")]
public class HoverTest : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EventSystem EventSystem;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int log;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool BlockedByUI;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EventTrigger eventTrigger;

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x23D3ADC", Offset = "0x23D3ADC", VA = "0x23D3ADC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x23D3C74", Offset = "0x23D3C74", VA = "0x23D3C74", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x23D3D24", Offset = "0x23D3D24", VA = "0x23D3D24")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x23D3F78", Offset = "0x23D3F78", VA = "0x23D3F78")]
	public void EnterUI()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x23D3FC8", Offset = "0x23D3FC8", VA = "0x23D3FC8")]
	public void ExitUI()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x23D4014", Offset = "0x23D4014", VA = "0x23D4014")]
	public HoverTest()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x23D401C", Offset = "0x23D401C", VA = "0x23D401C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DB88", Offset = "0xB2DB88")]
	private void <Start>b__6_0(BaseEventData eventData)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x23D406C", Offset = "0x23D406C", VA = "0x23D406C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DB98", Offset = "0xB2DB98")]
	private void <Start>b__6_1(BaseEventData eventData)
	{
	}
}
[Token(Token = "0x20001EF")]
public class NicknameController : MonoBehaviour
{
	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera scalerCamera;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject scalerGameObject;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scale;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text textNickname;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text textNicknameOverlay;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FlagsOfGhost flagsOfGhost;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distance;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string strNickname;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isMultiplayer;

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x25297B8", Offset = "0x25297B8", VA = "0x25297B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x252992C", Offset = "0x252992C", VA = "0x252992C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x2529C00", Offset = "0x2529C00", VA = "0x2529C00")]
	private void SetCamera()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x2529C8C", Offset = "0x2529C8C", VA = "0x2529C8C")]
	public void SetNicknameColor(Color inColor)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x2529CB4", Offset = "0x2529CB4", VA = "0x2529CB4")]
	public NicknameController()
	{
	}
}
[Token(Token = "0x20001F0")]
public class RDNA_PLAYFAB : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FAF0", Offset = "0xB1FAF0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<ExecuteCloudScriptResult> <>9__3_0;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<PurchaseItemResult> <>9__4_2;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<PurchaseItemResult> <>9__5_0;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<ConsumeItemResult> <>9__6_1;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<ExecuteCloudScriptResult> <>9__8_0;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<WriteEventResponse> <>9__9_0;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Action<PlayFabError> <>9__9_1;

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x2009A00", Offset = "0x2009A00", VA = "0x2009A00")]
		public <>c()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x2009A08", Offset = "0x2009A08", VA = "0x2009A08")]
		internal void <PickUpMoney>b__3_0(ExecuteCloudScriptResult insExecuteCloudScriptResult)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x2009A9C", Offset = "0x2009A9C", VA = "0x2009A9C")]
		internal void <Login>b__4_2(PurchaseItemResult result2)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x2009B10", Offset = "0x2009B10", VA = "0x2009B10")]
		internal void <Buy>b__5_0(PurchaseItemResult result2)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x2009B84", Offset = "0x2009B84", VA = "0x2009B84")]
		internal void <Consum>b__6_1(ConsumeItemResult result)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x2009C2C", Offset = "0x2009C2C", VA = "0x2009C2C")]
		internal void <TestLog>b__8_0(ExecuteCloudScriptResult result)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x2009D64", Offset = "0x2009D64", VA = "0x2009D64")]
		internal void <OnChestOpened>b__9_0(WriteEventResponse result)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x2009DD8", Offset = "0x2009DD8", VA = "0x2009DD8")]
		internal void <OnChestOpened>b__9_1(PlayFabError error)
		{
		}
	}

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string playFabID;

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x20BFC38", Offset = "0x20BFC38", VA = "0x20BFC38")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x20BFE00", Offset = "0x20BFE00", VA = "0x20BFE00")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x20BFFEC", Offset = "0x20BFFEC", VA = "0x20BFFEC")]
	private void PickUpMoney()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x20BFC3C", Offset = "0x20BFC3C", VA = "0x20BFC3C")]
	private void Login()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x20C0240", Offset = "0x20C0240", VA = "0x20C0240")]
	public void Buy()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x20BFE80", Offset = "0x20BFE80", VA = "0x20BFE80")]
	public void Consum()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x20C0498", Offset = "0x20C0498", VA = "0x20C0498")]
	public void OnError(PlayFabError error)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x20C0534", Offset = "0x20C0534", VA = "0x20C0534")]
	public void TestLog()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x20C073C", Offset = "0x20C073C", VA = "0x20C073C")]
	private void OnChestOpened(string chestType, int levelId)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x20C0A80", Offset = "0x20C0A80", VA = "0x20C0A80")]
	public RDNA_PLAYFAB()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x20C0A88", Offset = "0x20C0A88", VA = "0x20C0A88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DBA8", Offset = "0xB2DBA8")]
	private void <Login>b__4_0(LoginResult OnLoginSuccess)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x20C0C20", Offset = "0x20C0C20", VA = "0x20C0C20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DBB8", Offset = "0xB2DBB8")]
	private void <Login>b__4_1(GetCatalogItemsResult result)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x20C1000", Offset = "0x20C1000", VA = "0x20C1000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DBC8", Offset = "0xB2DBC8")]
	private void <Consum>b__6_0(GetUserInventoryResult result1)
	{
	}
}
[Token(Token = "0x20001F2")]
public class Rune : MonoBehaviour
{
	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x20C5F20", Offset = "0x20C5F20", VA = "0x20C5F20")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x20C5F24", Offset = "0x20C5F24", VA = "0x20C5F24")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x20C5F28", Offset = "0x20C5F28", VA = "0x20C5F28")]
	public Rune()
	{
	}
}
[Token(Token = "0x20001F3")]
public class RuneCrypter : MonoBehaviour
{
	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB247D0", Offset = "0xB247D0")]
	public StudioEventEmitter sound;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24808", Offset = "0xB24808")]
	public string neededString;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string generatedString;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string customCharSet;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public byte countCharsNeededString;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool doIt;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float progress;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24840", Offset = "0xB24840")]
	public float timeCharChange;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float timeToStopCharChange;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minTimeCharChange;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action<string> actionCallback;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float duration;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float durationZeroizeTimeCharChange;

	[Token(Token = "0x4000BFF")]
	private const string CharSet = "ǞǟǠǡǢǣǤǥǦǧǨǩǪǫǬǭǮǯǰǱǲǳǴǵǶǷ";

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x20C5F30", Offset = "0x20C5F30", VA = "0x20C5F30")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x20C5FF8", Offset = "0x20C5FF8", VA = "0x20C5FF8")]
	private void Step(float inProgress)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x20C6240", Offset = "0x20C6240", VA = "0x20C6240")]
	public void Count(string inNeededString, Action<string> inActionCallback, float inDelay = 0f, string inCustomCharSet = "")
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x20C61C8", Offset = "0x20C61C8", VA = "0x20C61C8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x20C62DC", Offset = "0x20C62DC", VA = "0x20C62DC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x20C6354", Offset = "0x20C6354", VA = "0x20C6354")]
	public RuneCrypter()
	{
	}
}
[Token(Token = "0x20001F4")]
public class SlipStreamPoint : MonoBehaviour
{
	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToDisable;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float AccelerationFactorPerPoint;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x24A2D0C", Offset = "0x24A2D0C", VA = "0x24A2D0C")]
	public void Place()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x24A2D48", Offset = "0x24A2D48", VA = "0x24A2D48")]
	public void Update()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x24A2DB0", Offset = "0x24A2DB0", VA = "0x24A2DB0")]
	public void PickUp()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x24A2E4C", Offset = "0x24A2E4C", VA = "0x24A2E4C")]
	public SlipStreamPoint()
	{
	}
}
[Token(Token = "0x20001F5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB1FB00", Offset = "0xB1FB00")]
public class GradientUISmall : BaseMeshEffect
{
	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color m_color1;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color m_color2;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB24878", Offset = "0xB24878")]
	public float m_angle;

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x23D1A54", Offset = "0x23D1A54", VA = "0x23D1A54", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x23D1D38", Offset = "0x23D1D38", VA = "0x23D1D38")]
	public GradientUISmall()
	{
	}
}
[Token(Token = "0x20001F6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB1FB38", Offset = "0xB1FB38")]
public class GradientUISmallEdit : BaseMeshEffect
{
	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color m_color1;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color m_color2;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color m_color3;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Gradient gradientColor;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB24898", Offset = "0xB24898")]
	public float m_angle;

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x23D1D7C", Offset = "0x23D1D7C", VA = "0x23D1D7C", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x23D2054", Offset = "0x23D2054", VA = "0x23D2054")]
	public GradientUISmallEdit()
	{
	}
}
[Token(Token = "0x20001F7")]
public static class UIGradientUtils
{
	[Token(Token = "0x20001F8")]
	public struct Matrix2x3
	{
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m10;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m11;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m12;

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x25AFFC0", Offset = "0x25AFFC0", VA = "0x25AFFC0")]
		public Matrix2x3(float m00, float m01, float m02, float m10, float m11, float m12)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x25AFFD0", Offset = "0x25AFFD0", VA = "0x25AFFD0")]
		public static Vector2 operator *(Matrix2x3 m, Vector2 v)
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2[] ms_verticesPositions;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector2[] ms_verticesPositions9;

	[Token(Token = "0x1700006F")]
	public static Vector2[] VerticePositions
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x263F188", Offset = "0x263F188", VA = "0x263F188")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000070")]
	public static Vector2[] VerticePositions9
	{
		[Token(Token = "0x600090D")]
		[Address(RVA = "0x263F1EC", Offset = "0x263F1EC", VA = "0x263F1EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x263F0BC", Offset = "0x263F0BC", VA = "0x263F0BC")]
	public static Matrix2x3 LocalPositionMatrix(Rect rect, Vector2 dir)
	{
		return default(Matrix2x3);
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x263F250", Offset = "0x263F250", VA = "0x263F250")]
	public static Vector2 RotationDir(float angle)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x263F288", Offset = "0x263F288", VA = "0x263F288")]
	public static Vector2 CompensateAspectRatio(Rect rect, Vector2 dir)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x263F2EC", Offset = "0x263F2EC", VA = "0x263F2EC")]
	public static float InverseLerp(float a, float b, float v)
	{
		return default(float);
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x263F30C", Offset = "0x263F30C", VA = "0x263F30C")]
	public static Color Bilerp(Color a1, Color a2, Color b1, Color b2, Vector2 t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x263F3E8", Offset = "0x263F3E8", VA = "0x263F3E8")]
	public static void Lerp(UIVertex a, UIVertex b, float t, UIVertex c)
	{
	}
}
[Token(Token = "0x20001F9")]
public class CarInterface : MonoBehaviour
{
	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentNitro;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] nitroSquare;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int currentSlowMos;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] slowMoSquares;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text textCountSlipStreamPoints;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text textMaxSpeed;

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x223BF28", Offset = "0x223BF28", VA = "0x223BF28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x223BFF0", Offset = "0x223BFF0", VA = "0x223BFF0")]
	public CarInterface()
	{
	}
}
[Token(Token = "0x20001FA")]
public class CockpitPlayer : MonoBehaviour
{
	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FB70", Offset = "0xB1FB70")]
	private sealed class <Nitro>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CockpitPlayer <>4__this;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x2345A58", Offset = "0x2345A58", VA = "0x2345A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0x2345AA0", Offset = "0x2345AA0", VA = "0x2345AA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x2345894", Offset = "0x2345894", VA = "0x2345894")]
		[DebuggerHidden]
		public <Nitro>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x23458C0", Offset = "0x23458C0", VA = "0x23458C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x23458C4", Offset = "0x23458C4", VA = "0x23458C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x2345A60", Offset = "0x2345A60", VA = "0x2345A60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playspace;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float playspaceX;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float playspaceY;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float playspaceZ;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB248B8", Offset = "0xB248B8")]
	[SerializeField]
	private bool inNitro;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float nitroBoost;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float nitroDuration;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool inNitroCooldown;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float nitroCooldown;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int nitroCapacity;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> nitroMeter;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24954", Offset = "0xB24954")]
	public List<GameObject> leftSpeedometer;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> rightSpeedometer;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2498C", Offset = "0xB2498C")]
	[SerializeField]
	private float acceleration;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float brakePower;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float horsePowerLoss;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float maxSpeed;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float drag;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private Vector3 rotationOffset;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float rotationDeadZone;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _currentSpeed;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float pitchSpeed;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float rollSpeed;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float yawSpeed;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float stabilizationSpeed;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private bool inversePitch;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[SerializeField]
	private bool inverseRoll;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	[SerializeField]
	private bool inverseYaw;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	[SerializeField]
	private bool useJoystick;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform controller;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 _pitchAxis;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 _rollAxis;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 _yawAxis;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float throttleDeadZone;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private float brakeDeadZone;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Transform throttleHandle;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Vector2 handleRange;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float _pitch;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float _roll;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _yaw;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float _horsePower;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _maxHorsePower;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[SerializeField]
	private float baseDrag;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private float aeroCoefficient;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private StudioEventEmitter engineEmitter;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private float maxSoundRpm;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[SerializeField]
	private float crashTolerance;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool adjustPosition;

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x22443A4", Offset = "0x22443A4", VA = "0x22443A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x22444EC", Offset = "0x22444EC", VA = "0x22444EC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB2DBD8", Offset = "0xB2DBD8")]
	private void UpdatePlayersPosSetting(float playspaceX, float playspaceY, float playspaceZ)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x2244574", Offset = "0x2244574", VA = "0x2244574")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x2244578", Offset = "0x2244578", VA = "0x2244578")]
	private void ProcessRotation()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x224457C", Offset = "0x224457C", VA = "0x224457C")]
	private void ApplyRotation()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x22446F4", Offset = "0x22446F4", VA = "0x22446F4")]
	private void ProcessPower()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x2244778", Offset = "0x2244778", VA = "0x2244778")]
	private void ApplyPower()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x224477C", Offset = "0x224477C", VA = "0x224477C")]
	private void ApplySound()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x2244844", Offset = "0x2244844", VA = "0x2244844")]
	private void ApplyAerodynamics()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x2244458", Offset = "0x2244458", VA = "0x2244458")]
	private void SetRotationVectors()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x22444D8", Offset = "0x22444D8", VA = "0x22444D8")]
	private void CalculateMaxHorsePower()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x2244730", Offset = "0x2244730", VA = "0x2244730")]
	private float CalculateThrottle()
	{
		return default(float);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x22448DC", Offset = "0x22448DC", VA = "0x22448DC")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x22449C8", Offset = "0x22449C8", VA = "0x22449C8")]
	private void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x2244828", Offset = "0x2244828", VA = "0x2244828")]
	private float Remap(float s, float a1, float a2, float b1, float b2)
	{
		return default(float);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x2244A24", Offset = "0x2244A24", VA = "0x2244A24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DC10", Offset = "0xB2DC10")]
	public IEnumerator Nitro()
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x2244AA4", Offset = "0x2244AA4", VA = "0x2244AA4")]
	private void CalculateSpeedometer()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x2244C34", Offset = "0x2244C34", VA = "0x2244C34")]
	public CockpitPlayer()
	{
	}
}
[Token(Token = "0x20001FC")]
public class CopyPosition : MonoBehaviour
{
	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool rot;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool pos;

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x22056C0", Offset = "0x22056C0", VA = "0x22056C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x22057D0", Offset = "0x22057D0", VA = "0x22057D0")]
	public CopyPosition()
	{
	}
}
[Token(Token = "0x20001FD")]
public class CopyTransforms : MonoBehaviour
{
	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spaceship;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ObjectName;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool photonView;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string UserName;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject selfBody;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x22057D8", Offset = "0x22057D8", VA = "0x22057D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x22058C4", Offset = "0x22058C4", VA = "0x22058C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x2205988", Offset = "0x2205988", VA = "0x2205988")]
	public CopyTransforms()
	{
	}
}
[Token(Token = "0x20001FE")]
public class LookAtPlayerIFace : MonoBehaviour
{
	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playerCamera;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x25252FC", Offset = "0x25252FC", VA = "0x25252FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x2525330", Offset = "0x2525330", VA = "0x2525330")]
	public LookAtPlayerIFace()
	{
	}
}
[Token(Token = "0x20001FF")]
public class TimeTracker : MonoBehaviour
{
	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMesh timeTrackerText;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _time;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _finished;

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x20543C0", Offset = "0x20543C0", VA = "0x20543C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x20543C4", Offset = "0x20543C4", VA = "0x20543C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x20544A8", Offset = "0x20544A8", VA = "0x20544A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x2054524", Offset = "0x2054524", VA = "0x2054524")]
	public TimeTracker()
	{
	}
}
[Token(Token = "0x2000200")]
public class boolHandler : MonoBehaviour
{
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FB80", Offset = "0xB1FB80")]
	private sealed class <raceStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public boolHandler <>4__this;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startTimer;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000942")]
			[Address(RVA = "0x25B3910", Offset = "0x25B3910", VA = "0x25B3910", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000944")]
			[Address(RVA = "0x25B3958", Offset = "0x25B3958", VA = "0x25B3958", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x25B380C", Offset = "0x25B380C", VA = "0x25B380C")]
		[DebuggerHidden]
		public <raceStart>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x25B3838", Offset = "0x25B3838", VA = "0x25B3838", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x25B383C", Offset = "0x25B383C", VA = "0x25B383C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x25B3918", Offset = "0x25B3918", VA = "0x25B3918", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dontMove;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool debugMode;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timer;

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x1FEA75C", Offset = "0x1FEA75C", VA = "0x1FEA75C")]
	private void Start()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x1FEA830", Offset = "0x1FEA830", VA = "0x1FEA830")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DCC8", Offset = "0xB2DCC8")]
	private IEnumerator raceStart(float startTimer)
	{
		return null;
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x1FEA8C0", Offset = "0x1FEA8C0", VA = "0x1FEA8C0")]
	public void Play()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x1FEA8C8", Offset = "0x1FEA8C8", VA = "0x1FEA8C8")]
	public boolHandler()
	{
	}
}
[Token(Token = "0x2000202")]
[ExecuteInEditMode]
public class BoxOfTraps : MonoBehaviour
{
	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numberOfTraps;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int minDistanceBetweenTraps;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] trapsPrefabs;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform parentOfTraps;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 bounds;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool placeTrapsBool;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] lastTraps;

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x22CEEB0", Offset = "0x22CEEB0", VA = "0x22CEEB0")]
	public void PlaceTraps()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x22CF2F0", Offset = "0x22CF2F0", VA = "0x22CF2F0")]
	public void DeleteLast()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x22CF414", Offset = "0x22CF414", VA = "0x22CF414")]
	private void Clear()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x22CF1C0", Offset = "0x22CF1C0", VA = "0x22CF1C0")]
	private bool isOverlaping(Transform target, float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x22CF518", Offset = "0x22CF518", VA = "0x22CF518")]
	private void Update()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x22CF54C", Offset = "0x22CF54C", VA = "0x22CF54C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x22CF674", Offset = "0x22CF674", VA = "0x22CF674")]
	public BoxOfTraps()
	{
	}
}
[Token(Token = "0x2000203")]
public class CarSpawner : MonoBehaviour
{
	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] cars;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FloatingOrigin floatingOrigin;

	[Token(Token = "0x1400001A")]
	public static event Action CarSpawned
	{
		[Token(Token = "0x600094E")]
		[Address(RVA = "0x223CA34", Offset = "0x223CA34", VA = "0x223CA34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DD80", Offset = "0xB2DD80")]
		add
		{
		}
		[Token(Token = "0x600094F")]
		[Address(RVA = "0x223CAF0", Offset = "0x223CAF0", VA = "0x223CAF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DD90", Offset = "0xB2DD90")]
		remove
		{
		}
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x223C754", Offset = "0x223C754", VA = "0x223C754")]
	private void Start()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x223C75C", Offset = "0x223C75C", VA = "0x223C75C")]
	public void CustomStart(byte inCarId = byte.MaxValue)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x223CBAC", Offset = "0x223CBAC", VA = "0x223CBAC")]
	public CarSpawner()
	{
	}
}
[Token(Token = "0x2000204")]
public class CarSpawnerBot : MonoBehaviour
{
	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24B78", Offset = "0xB24B78")]
	public NicknameController nicknameController;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrailRenderer trailRenderer;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StudioEventEmitter soundEmitter;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24BB0", Offset = "0xB24BB0")]
	public Transform slipStreamParent;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NetworkPlayerControllerZRace networkPlayerControllerZRace;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject networkCollider;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody networkRigidbody;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24BE8", Offset = "0xB24BE8")]
	public GameObject[] cars;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material[] trailsMaterials;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject prefabSlipStreamPoint;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24C20", Offset = "0xB24C20")]
	public bool testMode;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float minVertexDistance;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float minVertexDistanceQuest1;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float distanceToSetUpSlipStreamPoint;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int framesToCheckSlipStreamPosition;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public short countSlipStreamPoints;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24C58", Offset = "0xB24C58")]
	public int car;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public short lastNumberSlipStream;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SlipStreamPoint[] arraySlipStreamPoints;

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x223CBB4", Offset = "0x223CBB4", VA = "0x223CBB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x223CC80", Offset = "0x223CC80", VA = "0x223CC80")]
	public void SpawnCar(int carId)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x223D07C", Offset = "0x223D07C", VA = "0x223D07C")]
	public void SetAccInfo(string inUsername, byte inFlagID)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x223D398", Offset = "0x223D398", VA = "0x223D398")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x223D45C", Offset = "0x223D45C", VA = "0x223D45C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x223D660", Offset = "0x223D660", VA = "0x223D660")]
	public CarSpawnerBot()
	{
	}
}
[Token(Token = "0x2000205")]
public class Checkpoint : MonoBehaviour
{
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FBA0", Offset = "0xB1FBA0")]
	private sealed class <ShowDelta>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Checkpoint <>4__this;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delta;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh <timeDeltaText>5__2;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x2345844", Offset = "0x2345844", VA = "0x2345844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x234588C", Offset = "0x234588C", VA = "0x234588C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x234555C", Offset = "0x234555C", VA = "0x234555C")]
		[DebuggerHidden]
		public <ShowDelta>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x2345588", Offset = "0x2345588", VA = "0x2345588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x234558C", Offset = "0x234558C", VA = "0x234558C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x234584C", Offset = "0x234584C", VA = "0x234584C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer[] backMesh;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color colorRed;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color colorGreen;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int number;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool checkX;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool activated;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextMesh deltaText;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material[] matBackMesh;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private byte countBackMesh;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string prefsName;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int BaseColor;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaceManager raceManager;

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x22437DC", Offset = "0x22437DC", VA = "0x22437DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x2243B28", Offset = "0x2243B28", VA = "0x2243B28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x2243E5C", Offset = "0x2243E5C", VA = "0x2243E5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x2243A48", Offset = "0x2243A48", VA = "0x2243A48")]
	private string GetPrefsName()
	{
		return null;
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x2244298", Offset = "0x2244298", VA = "0x2244298")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DDA0", Offset = "0xB2DDA0")]
	private IEnumerator ShowDelta(float delta)
	{
		return null;
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x2244328", Offset = "0x2244328", VA = "0x2244328")]
	public Checkpoint()
	{
	}
}
[Token(Token = "0x2000207")]
public class CoinsBox : MonoBehaviour
{
	[Token(Token = "0x2000208")]
	private enum Mode
	{
		[Token(Token = "0x4000C95")]
		Random,
		[Token(Token = "0x4000C96")]
		Line
	}

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x4000C90")]
	private const float stepInLine = 1f;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int minNumberOfCoins;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 bounds;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject coinPrefab;

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x22455C4", Offset = "0x22455C4", VA = "0x22455C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x2245830", Offset = "0x2245830", VA = "0x2245830")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x2245958", Offset = "0x2245958", VA = "0x2245958")]
	public CoinsBox()
	{
	}
}
[Token(Token = "0x2000209")]
public class CustomReader : MonoBehaviour
{
	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CustomAnim playAnimation;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TempGasController tempGasController;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frame;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isPlaying;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int maxFrame;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string username;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float time;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int flagID;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public string anim;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Player;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 pos;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 prevPos;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion prevRot;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quaternion rot;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public List<float> positionX;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public List<float> positionY;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public List<float> positionZ;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public List<float> rotationX;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public List<float> rotationY;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public List<float> rotationZ;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public List<float> rotationW;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public List<float> deltaTime;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<int> nitros;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<float> gas;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<int> RPM;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int carId;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject[] gameObjectsToEnable;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float timeOfStart;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float tweenUpdateInterval;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private AnimationCurve _animationCurvePosX;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private AnimationCurve _animationCurvePosY;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private AnimationCurve _animationCurvePosZ;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private AnimationCurve _animationCurveRotX;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private AnimationCurve _animationCurveRotY;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AnimationCurve _animationCurveRotZ;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private AnimationCurve _animationCurveRotW;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform model;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform nickname;

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x220A3D0", Offset = "0x220A3D0", VA = "0x220A3D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x220A570", Offset = "0x220A570", VA = "0x220A570")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x220A8C8", Offset = "0x220A8C8", VA = "0x220A8C8")]
	public void Play()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x220AC24", Offset = "0x220AC24", VA = "0x220AC24")]
	private void PlayAnim()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x220AB5C", Offset = "0x220AB5C", VA = "0x220AB5C")]
	private void EnableDetails()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x220B018", Offset = "0x220B018", VA = "0x220B018")]
	private void setNextPoint()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x220B45C", Offset = "0x220B45C", VA = "0x220B45C")]
	private void RotateToSpeed()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x220B368", Offset = "0x220B368", VA = "0x220B368")]
	private void PrintTime()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x220B528", Offset = "0x220B528", VA = "0x220B528")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x220B5A8", Offset = "0x220B5A8", VA = "0x220B5A8")]
	public CustomReader()
	{
	}
}
[Token(Token = "0x200020A")]
public class CustomRecorder : MonoBehaviour
{
	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isRecording;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public CustomAnim customAnim;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform offset;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform pcOffset;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Move_Player movePlayer;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform floatingOriginTransform;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isQuest1;

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x220B844", Offset = "0x220B844", VA = "0x220B844")]
	private void Start()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x220B9F0", Offset = "0x220B9F0", VA = "0x220B9F0")]
	private void StartRecord()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x220BAE4", Offset = "0x220BAE4", VA = "0x220BAE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x220BE14", Offset = "0x220BE14", VA = "0x220BE14")]
	public string WriteAnim()
	{
		return null;
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x220BEF4", Offset = "0x220BEF4", VA = "0x220BEF4")]
	public CustomRecorder()
	{
	}
}
[Serializable]
[Token(Token = "0x200020B")]
public class CustomAnim
{
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int car;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<float> positionX;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> positionY;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> positionZ;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<float> rotationX;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<float> rotationY;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<float> rotationZ;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<float> rotationW;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<int> nitros;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<float> deltaTime;

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x2208D44", Offset = "0x2208D44", VA = "0x2208D44")]
	public CustomAnim()
	{
	}
}
[Token(Token = "0x200020C")]
public class DrawSphereGizmos : MonoBehaviour
{
	[Token(Token = "0x6000977")]
	[Address(RVA = "0x22122F8", Offset = "0x22122F8", VA = "0x22122F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x22122FC", Offset = "0x22122FC", VA = "0x22122FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x2212300", Offset = "0x2212300", VA = "0x2212300")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x2212350", Offset = "0x2212350", VA = "0x2212350")]
	public DrawSphereGizmos()
	{
	}
}
[Token(Token = "0x200020D")]
public class FloatingOrigin : MonoBehaviour
{
	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24D80", Offset = "0xB24D80")]
	public Transform ReferenceObject;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24DB8", Offset = "0xB24DB8")]
	public float Threshold;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24DF0", Offset = "0xB24DF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24DF0", Offset = "0xB24DF0")]
	public bool Use2DDistance;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24E50", Offset = "0xB24E50")]
	public bool UpdateAllScenes;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24E88", Offset = "0xB24E88")]
	public bool UpdateParticles;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24EC0", Offset = "0xB24EC0")]
	public bool UpdateTrailRenderers;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24EF8", Offset = "0xB24EF8")]
	public bool UpdateLineRenderers;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] parts;

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x28772E0", Offset = "0x28772E0", VA = "0x28772E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x28772E4", Offset = "0x28772E4", VA = "0x28772E4")]
	public void ReTransform()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x2877400", Offset = "0x2877400", VA = "0x2877400")]
	private void MoveRootTransforms(Vector3 offset)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x2877864", Offset = "0x2877864", VA = "0x2877864")]
	private void MoveTrailRenderers(Vector3 offset)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x2877A00", Offset = "0x2877A00", VA = "0x2877A00")]
	private void MoveLineRenderers(Vector3 offset)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x2877604", Offset = "0x2877604", VA = "0x2877604")]
	private void MoveParticles(Vector3 offset)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x2877B9C", Offset = "0x2877B9C", VA = "0x2877B9C")]
	public FloatingOrigin()
	{
	}
}
[Token(Token = "0x200020E")]
public class OutsideCollider : MonoBehaviour
{
	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new string tag;

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x2535EAC", Offset = "0x2535EAC", VA = "0x2535EAC")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x2535FA8", Offset = "0x2535FA8", VA = "0x2535FA8")]
	public OutsideCollider()
	{
	}
}
[Token(Token = "0x200020F")]
public class TrailLerp : MonoBehaviour
{
	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ship;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x2635C04", Offset = "0x2635C04", VA = "0x2635C04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x2635CD0", Offset = "0x2635CD0", VA = "0x2635CD0")]
	public TrailLerp()
	{
	}
}
[Token(Token = "0x2000210")]
public class Shield : MonoBehaviour
{
	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Move_Player MovePlayer;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float brakeDuration;

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x24A1084", Offset = "0x24A1084", VA = "0x24A1084")]
	private void Start()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x24A1110", Offset = "0x24A1110", VA = "0x24A1110")]
	private void Update()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x24A1114", Offset = "0x24A1114", VA = "0x24A1114")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x24A11D4", Offset = "0x24A11D4", VA = "0x24A11D4")]
	public Shield()
	{
	}
}
[Token(Token = "0x2000211")]
public class ShipEmulator : MonoBehaviour
{
	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxSpeed;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float acceleration;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float deceleration;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float braking;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _currentSpeed;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float pitchSpeed;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float rollSpeed;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool inversePitch;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	private bool inverseRoll;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _pitchAxis;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _rollAxis;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x24A1318", Offset = "0x24A1318", VA = "0x24A1318")]
	private void Start()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x24A13C8", Offset = "0x24A13C8", VA = "0x24A13C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x24A167C", Offset = "0x24A167C", VA = "0x24A167C")]
	public ShipEmulator()
	{
	}
}
[Token(Token = "0x2000212")]
public class ShipPositionTracker : MonoBehaviour
{
	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentWaypoint;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int currentLap;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lastWaypoint;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int nbWaypoint;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int WAYPOINT_VALUE;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int LAP_VALUE;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int cpt_waypoint;

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x24A1684", Offset = "0x24A1684", VA = "0x24A1684")]
	public void Start()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x24A1690", Offset = "0x24A1690", VA = "0x24A1690")]
	public void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x24A17C8", Offset = "0x24A17C8", VA = "0x24A17C8")]
	public float GetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x24A18D4", Offset = "0x24A18D4", VA = "0x24A18D4")]
	public int GetShipPositionTrackerPosition(ShipPositionTracker[] allShipPositionTrackers)
	{
		return default(int);
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x24A1970", Offset = "0x24A1970", VA = "0x24A1970")]
	public ShipPositionTracker()
	{
	}
}
[Token(Token = "0x2000213")]
public class ControlParticlesSpawner : MonoBehaviour
{
	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem cps;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string bulletTag;

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x2204EDC", Offset = "0x2204EDC", VA = "0x2204EDC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x2204FE8", Offset = "0x2204FE8", VA = "0x2204FE8")]
	public ControlParticlesSpawner()
	{
	}
}
[Token(Token = "0x2000214")]
public class ForceFieldController : MonoBehaviour
{
	[Token(Token = "0x2000215")]
	public enum FFstate
	{
		[Token(Token = "0x4000D0B")]
		SingleSpheres,
		[Token(Token = "0x4000D0C")]
		MultipleSpheres
	}

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FFstate forceFieldMode;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int affectorCount;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB24FB0", Offset = "0xB24FB0")]
	public float openCloseProgress;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool openAutoAnimation;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float openSpeed;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve openCurve;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] materialLayers;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool procedrualGradientEnabled;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool procedrualGradientUpdate;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gradient procedrualGradientRamp;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color procedrualRampColorTint;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem controlParticleSystem;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject getRenderersInChildren;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Renderer[] getRenderersCustom;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer[] renderers;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Texture2D rampTexture;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector4[] spherePositions;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] sphereSizes;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int numberOfSpheres;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int numberOfSpheresOld;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ParticleSystem.Particle[] controlParticles;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector4[] controlParticlesPositions;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] controlParticlesSizes;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Material> rendererMaterials;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ParticleSystem.MainModule psmain;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float openCloseValue;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float openCloseCurve;

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x2878418", Offset = "0x2878418", VA = "0x2878418")]
	private void Start()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x2878B10", Offset = "0x2878B10", VA = "0x2878B10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x28790CC", Offset = "0x28790CC", VA = "0x28790CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x2878510", Offset = "0x2878510", VA = "0x2878510")]
	private void GetNumberOfSpheres()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x2878560", Offset = "0x2878560", VA = "0x2878560")]
	private void GetSphereArrays()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x2878D60", Offset = "0x2878D60", VA = "0x2878D60")]
	private void OpenCloseProgress()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x2879354", Offset = "0x2879354", VA = "0x2879354")]
	public void SetOpenCloseValue(float val)
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x2879364", Offset = "0x2879364", VA = "0x2879364")]
	private Texture2D GenerateTextureFromGradient(Gradient grad)
	{
		return null;
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x28786F8", Offset = "0x28786F8", VA = "0x28786F8")]
	public void ApplyMaterials()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x28789D8", Offset = "0x28789D8", VA = "0x28789D8")]
	public void UpdateRampTexture()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x2878494", Offset = "0x2878494", VA = "0x2878494")]
	public void GetRenderers()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x2878DC8", Offset = "0x2878DC8", VA = "0x2878DC8")]
	public void UpdateHitWaves()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x287944C", Offset = "0x287944C", VA = "0x287944C")]
	public ForceFieldController()
	{
	}
}
[Token(Token = "0x2000216")]
public class ShooterController : MonoBehaviour
{
	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject projectile;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotationSpeed;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 mouseWorldPosition;

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x24A19D8", Offset = "0x24A19D8", VA = "0x24A19D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x24A19DC", Offset = "0x24A19DC", VA = "0x24A19DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x24A1C64", Offset = "0x24A1C64", VA = "0x24A1C64")]
	public ShooterController()
	{
	}
}
[Token(Token = "0x2000217")]
public class SimpleCameraRotator : MonoBehaviour
{
	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x24A2124", Offset = "0x24A2124", VA = "0x24A2124")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x24A2184", Offset = "0x24A2184", VA = "0x24A2184")]
	public SimpleCameraRotator()
	{
	}
}
[Token(Token = "0x2000218")]
public class SimpleProjectileSphere : MonoBehaviour
{
	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x24A23A4", Offset = "0x24A23A4", VA = "0x24A23A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x24A249C", Offset = "0x24A249C", VA = "0x24A249C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x24A24A0", Offset = "0x24A24A0", VA = "0x24A24A0")]
	public SimpleProjectileSphere()
	{
	}
}
[Token(Token = "0x2000219")]
public class UIControllerSine : MonoBehaviour
{
	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform prefabHolder;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float openSpeed;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool openAnimation;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve openCurve;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] prefabs;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> lt;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int activeNumber;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ForceFieldController ffc;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float openCloseValue;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float openCloseCurve;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject activeGameObject;

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x263EB30", Offset = "0x263EB30", VA = "0x263EB30")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x263ED10", Offset = "0x263ED10", VA = "0x263ED10")]
	public void EnableActive()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x263EDF0", Offset = "0x263EDF0", VA = "0x263EDF0")]
	public void ChangeEffect(bool bo)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x263EEB4", Offset = "0x263EEB4", VA = "0x263EEB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x263EF30", Offset = "0x263EF30", VA = "0x263EF30")]
	public UIControllerSine()
	{
	}
}
[Token(Token = "0x200021A")]
public class SizeTrick : MonoBehaviour
{
	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxSize;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float resizeCoeff;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform player;

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x24A2B78", Offset = "0x24A2B78", VA = "0x24A2B78")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x24A2C14", Offset = "0x24A2C14", VA = "0x24A2C14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x24A2D04", Offset = "0x24A2D04", VA = "0x24A2D04")]
	public SizeTrick()
	{
	}
}
[Token(Token = "0x200021B")]
public class SmoothCamera : MonoBehaviour
{
	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cam;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float damping;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 speed;

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x24A35A8", Offset = "0x24A35A8", VA = "0x24A35A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x24A36C0", Offset = "0x24A36C0", VA = "0x24A36C0")]
	public SmoothCamera()
	{
	}
}
[Token(Token = "0x200021C")]
public class SmoothCameraOld : MonoBehaviour
{
	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraTarget;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sSpeed;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 dist;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform lookTarget;

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x24A36C8", Offset = "0x24A36C8", VA = "0x24A36C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x24A37D0", Offset = "0x24A37D0", VA = "0x24A37D0")]
	public SmoothCameraOld()
	{
	}
}
[Token(Token = "0x200021D")]
public static class SoundController
{
	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EventInstance coachVoice;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static EventInstance scrappingSound;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool[] readyCars;

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x24A6B14", Offset = "0x24A6B14", VA = "0x24A6B14")]
	public static void PlayCoachVoice(string Event, bool stopCurrentVoice = false, int position = 0)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x24A6D88", Offset = "0x24A6D88", VA = "0x24A6D88")]
	public static void PlaySound(string Event)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x24A6E18", Offset = "0x24A6E18", VA = "0x24A6E18")]
	public static void PlayScrap()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x24A6E80", Offset = "0x24A6E80", VA = "0x24A6E80")]
	public static void StopScrap()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x24A6EEC", Offset = "0x24A6EEC", VA = "0x24A6EEC")]
	public static void PlayCoachVoiceDefault(string Event)
	{
	}
}
[Token(Token = "0x200021E")]
public class F1Sound : MonoBehaviour
{
	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float[] MinRpmTable;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] NormalRpmTable;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] MaxRpmTable;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] PitchingTable;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float RangeDivider;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Flywheel Fly;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource Audio1;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource Audio2;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource Audio3;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource Audio4;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource Audio5;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource Audio6;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource Audio7;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource Audio8;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource Audio9;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource Audio10;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource Audio11;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource Audio12;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSource Audio13;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource Audio14;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource Audio15;

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x2873B78", Offset = "0x2873B78", VA = "0x2873B78")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x2874018", Offset = "0x2874018", VA = "0x2874018")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x2875518", Offset = "0x2875518", VA = "0x2875518")]
	public F1Sound()
	{
	}
}
[Token(Token = "0x200021F")]
public class SoundsFmod : MonoBehaviour
{
	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StudioEventEmitter emitterEngine;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RPM;

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x24A7170", Offset = "0x24A7170", VA = "0x24A7170")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x24A7200", Offset = "0x24A7200", VA = "0x24A7200")]
	public SoundsFmod()
	{
	}
}
[Token(Token = "0x2000220")]
public class Spaceship : MonoBehaviour
{
	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 handSpeed;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x24A80F4", Offset = "0x24A80F4", VA = "0x24A80F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x24A8158", Offset = "0x24A8158", VA = "0x24A8158")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x24A8184", Offset = "0x24A8184", VA = "0x24A8184")]
	public void AddHandSpeed(Vector3 speed)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x24A8190", Offset = "0x24A8190", VA = "0x24A8190")]
	public Spaceship()
	{
	}
}
[Token(Token = "0x2000221")]
public class SpeedTracker : MonoBehaviour
{
	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 prevPos;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x24A8E7C", Offset = "0x24A8E7C", VA = "0x24A8E7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x24A8EB8", Offset = "0x24A8EB8", VA = "0x24A8EB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x24A8F60", Offset = "0x24A8F60", VA = "0x24A8F60")]
	public SpeedTracker()
	{
	}
}
[Token(Token = "0x2000222")]
public class SpeedTrap : MonoBehaviour
{
	[Token(Token = "0x2000223")]
	public enum TypeTrap
	{
		[Token(Token = "0x4000D4B")]
		SpeedTrap,
		[Token(Token = "0x4000D4C")]
		SpeedBonus,
		[Token(Token = "0x4000D4D")]
		Booster
	}

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Move_Player movePlayer;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StudioEventEmitter effectSound;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TypeTrap typeTrap;

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x24A8F68", Offset = "0x24A8F68", VA = "0x24A8F68")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x24A902C", Offset = "0x24A902C", VA = "0x24A902C")]
	private void CustomStart()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x24A9118", Offset = "0x24A9118", VA = "0x24A9118")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x24A92E8", Offset = "0x24A92E8", VA = "0x24A92E8")]
	public SpeedTrap()
	{
	}
}
[Token(Token = "0x2000224")]
public class SpeedZone : MonoBehaviour
{
	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TargetSpeed;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeToReachTargetSpeed;

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x24A92F0", Offset = "0x24A92F0", VA = "0x24A92F0")]
	public SpeedZone()
	{
	}
}
[Token(Token = "0x2000225")]
public class TestPlacer : MonoBehaviour
{
	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject example;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sceneExample;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int k;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lastTrap;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform trapsContainer;

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x204DC88", Offset = "0x204DC88", VA = "0x204DC88")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x204DC8C", Offset = "0x204DC8C", VA = "0x204DC8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x204DE90", Offset = "0x204DE90", VA = "0x204DE90")]
	public TestPlacer()
	{
	}
}
[Token(Token = "0x2000226")]
public class ThirdPersonCamera : MonoBehaviour
{
	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float damping;

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x2052794", Offset = "0x2052794", VA = "0x2052794")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x2052798", Offset = "0x2052798", VA = "0x2052798")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x2052918", Offset = "0x2052918", VA = "0x2052918")]
	public ThirdPersonCamera()
	{
	}
}
[Token(Token = "0x2000227")]
public class TimeDebug : MonoBehaviour
{
	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isDeltaTime;

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x205424C", Offset = "0x205424C", VA = "0x205424C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x2054250", Offset = "0x2054250", VA = "0x2054250")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x20542F0", Offset = "0x20542F0", VA = "0x20542F0")]
	public TimeDebug()
	{
	}
}
[Token(Token = "0x2000228")]
public class TimeIFace : MonoBehaviour
{
	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x20542F8", Offset = "0x20542F8", VA = "0x20542F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x20542FC", Offset = "0x20542FC", VA = "0x20542FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x2054300", Offset = "0x2054300", VA = "0x2054300")]
	public TimeIFace()
	{
	}
}
[Token(Token = "0x2000229")]
public class TimeTestText : MonoBehaviour
{
	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public lapTimeTracker lapTimeTracker;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x2054308", Offset = "0x2054308", VA = "0x2054308")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x205436C", Offset = "0x205436C", VA = "0x205436C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x20543B8", Offset = "0x20543B8", VA = "0x20543B8")]
	public TimeTestText()
	{
	}
}
namespace VRKeyboard.Utils
{
	[Token(Token = "0x200022A")]
	public class GazeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x200022B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FBB0", Offset = "0xB1FBB0")]
		private sealed class <FillCircle>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GazeRaycaster <>4__this;

			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform target;

			[Token(Token = "0x4000D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timer>5__2;

			[Token(Token = "0x17000077")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009E3")]
				[Address(RVA = "0x2347B6C", Offset = "0x2347B6C", VA = "0x2347B6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000078")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009E5")]
				[Address(RVA = "0x2347BB4", Offset = "0x2347BB4", VA = "0x2347BB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x2347958", Offset = "0x2347958", VA = "0x2347958")]
			[DebuggerHidden]
			public <FillCircle>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x2347984", Offset = "0x2347984", VA = "0x2347984", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x2347988", Offset = "0x2347988", VA = "0x2347988", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009E4")]
			[Address(RVA = "0x2347B74", Offset = "0x2347B74", VA = "0x2347B74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delayInSeconds;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float loadingTime;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image circle;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string lastTargetName;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine gazeControl;

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x23C84C4", Offset = "0x23C84C4", VA = "0x23C84C4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x23C874C", Offset = "0x23C874C", VA = "0x23C874C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2DE58", Offset = "0xB2DE58")]
		private IEnumerator FillCircle(Transform target)
		{
			return null;
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x23C87E0", Offset = "0x23C87E0", VA = "0x23C87E0")]
		private void ResetGazer()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x23C88EC", Offset = "0x23C88EC", VA = "0x23C88EC")]
		public GazeRaycaster()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class KeyboardManager : MonoBehaviour
	{
		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB24FC8", Offset = "0xB24FC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB24FC8", Offset = "0xB24FC8")]
		public bool isUppercase;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxInputLength;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25028", Offset = "0xB25028")]
		public Text inputText;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25060", Offset = "0xB25060")]
		public Transform keys;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Key[] keyList;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool capslockFlag;

		[Token(Token = "0x17000079")]
		private string Input
		{
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0x2516090", Offset = "0x2516090", VA = "0x2516090")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x25160B8", Offset = "0x25160B8", VA = "0x25160B8")]
			set
			{
			}
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x25160E0", Offset = "0x25160E0", VA = "0x25160E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x2516144", Offset = "0x2516144", VA = "0x2516144")]
		private void Start()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x2516230", Offset = "0x2516230", VA = "0x2516230")]
		public void Backspace()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x25162F4", Offset = "0x25162F4", VA = "0x25162F4")]
		public void Clear()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x2516354", Offset = "0x2516354", VA = "0x2516354")]
		public void CapsLock()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x251643C", Offset = "0x251643C", VA = "0x251643C")]
		public void Shift()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x251650C", Offset = "0x251650C", VA = "0x251650C")]
		public void GenerateInput(string s)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x25165A8", Offset = "0x25165A8", VA = "0x25165A8")]
		public KeyboardManager()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class Alphabet : Key
	{
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x22C63A8", Offset = "0x22C63A8", VA = "0x22C63A8", Slot = "5")]
		public override void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x22C6410", Offset = "0x22C6410", VA = "0x22C6410")]
		public Alphabet()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class Key : MonoBehaviour
	{
		[Token(Token = "0x200022F")]
		public delegate void OnKeyClickedHandler(string key);

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Text key;

		[Token(Token = "0x1400001B")]
		public event OnKeyClickedHandler OnKeyClicked
		{
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x2515DD4", Offset = "0x2515DD4", VA = "0x2515DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DF10", Offset = "0xB2DF10")]
			add
			{
			}
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x2515E74", Offset = "0x2515E74", VA = "0x2515E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DF20", Offset = "0xB2DF20")]
			remove
			{
			}
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x2515F14", Offset = "0x2515F14", VA = "0x2515F14", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x251602C", Offset = "0x251602C", VA = "0x251602C", Slot = "5")]
		public virtual void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x2516030", Offset = "0x2516030", VA = "0x2516030", Slot = "6")]
		public virtual void ShiftKey()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x2516034", Offset = "0x2516034", VA = "0x2516034")]
		public Key()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x251603C", Offset = "0x251603C", VA = "0x251603C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DF30", Offset = "0xB2DF30")]
		private void <Awake>b__5_0()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class Number : Key
	{
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x252A734", Offset = "0x252A734", VA = "0x252A734")]
		public Number()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class Shift : Key
	{
		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text subscript;

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x24A11DC", Offset = "0x24A11DC", VA = "0x24A11DC", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x24A1278", Offset = "0x24A1278", VA = "0x24A1278", Slot = "6")]
		public override void ShiftKey()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x24A1310", Offset = "0x24A1310", VA = "0x24A1310")]
		public Shift()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class Symbol : Key
	{
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x27C0DC0", Offset = "0x27C0DC0", VA = "0x27C0DC0")]
		public Symbol()
		{
		}
	}
}
namespace SplineMesh
{
	[Serializable]
	[Token(Token = "0x2000233")]
	public class CubicBezierCurve
	{
		[Token(Token = "0x4000D6D")]
		private const int STEP_COUNT = 30;

		[Token(Token = "0x4000D6E")]
		private const float T_STEP = 1f / 30f;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<CurveSample> samples;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplineNode n1;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineNode n2;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB250A8", Offset = "0xB250A8")]
		private float <Length>k__BackingField;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent Changed;

		[Token(Token = "0x1700007A")]
		public float Length
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x2206C1C", Offset = "0x2206C1C", VA = "0x2206C1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DF40", Offset = "0xB2DF40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x2206C24", Offset = "0x2206C24", VA = "0x2206C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DF50", Offset = "0xB2DF50")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x2206C2C", Offset = "0x2206C2C", VA = "0x2206C2C")]
		public CubicBezierCurve(SplineNode n1, SplineNode n2)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x2206FE0", Offset = "0x2206FE0", VA = "0x2206FE0")]
		public void ConnectStart(SplineNode n1)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x22070D4", Offset = "0x22070D4", VA = "0x22070D4")]
		public void ConnectEnd(SplineNode n2)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x22071C8", Offset = "0x22071C8", VA = "0x22071C8")]
		public Vector3 GetInverseDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x2207208", Offset = "0x2207208", VA = "0x2207208")]
		private Vector3 GetLocation(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x22072DC", Offset = "0x22072DC", VA = "0x22072DC")]
		private Vector3 GetTangent(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x22073D4", Offset = "0x22073D4", VA = "0x22073D4")]
		private Vector3 GetUp(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x220743C", Offset = "0x220743C", VA = "0x220743C")]
		private Vector2 GetScale(float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x2207488", Offset = "0x2207488", VA = "0x2207488")]
		private float GetRoll(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x2206DC8", Offset = "0x2206DC8", VA = "0x2206DC8")]
		private void ComputeSamples(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x22074BC", Offset = "0x22074BC", VA = "0x22074BC")]
		private CurveSample CreateSample(float distance, float time)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x2207620", Offset = "0x2207620", VA = "0x2207620")]
		public CurveSample GetSample(float time)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x2207D08", Offset = "0x2207D08", VA = "0x2207D08")]
		public CurveSample GetSampleAtDistance(float d)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x22079FC", Offset = "0x22079FC", VA = "0x22079FC")]
		private static void AssertTimeInBounds(float time)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x2208160", Offset = "0x2208160", VA = "0x2208160")]
		public CurveSample GetProjectionSample(Vector3 pointToProject)
		{
			return default(CurveSample);
		}
	}
	[Token(Token = "0x2000234")]
	public struct CurveSample
	{
		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly Vector3 location;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly Vector3 tangent;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Vector3 up;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly Vector2 scale;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly float roll;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly float distanceInCurve;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly float timeInCurve;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly CubicBezierCurve curve;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion rotation;

		[Token(Token = "0x1700007B")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x22086C8", Offset = "0x22086C8", VA = "0x22086C8")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x22075B4", Offset = "0x22075B4", VA = "0x22075B4")]
		public CurveSample(Vector3 location, Vector3 tangent, Vector3 up, Vector2 scale, float roll, float distanceInCurve, float timeInCurve, CubicBezierCurve curve)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x2208804", Offset = "0x2208804", VA = "0x2208804", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x2208A00", Offset = "0x2208A00", VA = "0x2208A00", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x2207AB0", Offset = "0x2207AB0", VA = "0x2207AB0")]
		public static bool operator ==(CurveSample cs1, CurveSample cs2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x2208A80", Offset = "0x2208A80", VA = "0x2208A80")]
		public static bool operator !=(CurveSample cs1, CurveSample cs2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x2207B34", Offset = "0x2207B34", VA = "0x2207B34")]
		public static CurveSample Lerp(CurveSample a, CurveSample b, float t)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x2208B08", Offset = "0x2208B08", VA = "0x2208B08")]
		public MeshVertex GetBent(MeshVertex vert)
		{
			return null;
		}
	}
	[Token(Token = "0x2000235")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	public class Spline : MonoBehaviour
	{
		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SplineNode> nodes;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public List<CubicBezierCurve> curves;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Length;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool isLoop;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public UnityEvent CurveChanged;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SplineNode start;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SplineNode end;

		[Token(Token = "0x1700007C")]
		public bool IsLoop
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x24A92F8", Offset = "0x24A92F8", VA = "0x24A92F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x24A9300", Offset = "0x24A9300", VA = "0x24A9300")]
			set
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event ListChangeHandler<SplineNode> NodeListChanged
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x24A9524", Offset = "0x24A9524", VA = "0x24A9524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DF60", Offset = "0xB2DF60")]
			add
			{
			}
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0x24A95C4", Offset = "0x24A95C4", VA = "0x24A95C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DF70", Offset = "0xB2DF70")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x24A9664", Offset = "0x24A9664", VA = "0x24A9664")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x24A9BD0", Offset = "0x24A9BD0", VA = "0x24A9BD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x24A9DF4", Offset = "0x24A9DF4", VA = "0x24A9DF4")]
		public ReadOnlyCollection<CubicBezierCurve> GetCurves()
		{
			return null;
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x24A9A24", Offset = "0x24A9A24", VA = "0x24A9A24")]
		private void RaiseNodeListChanged(ListChangedEventArgs<SplineNode> args)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x24A9A98", Offset = "0x24A9A98", VA = "0x24A9A98")]
		private void UpdateAfterCurveChanged()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x24A9E48", Offset = "0x24A9E48", VA = "0x24A9E48")]
		public CurveSample GetSample(float t)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x24AA050", Offset = "0x24AA050", VA = "0x24AA050")]
		public CubicBezierCurve GetCurve(float t)
		{
			return null;
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x24A9F08", Offset = "0x24A9F08", VA = "0x24A9F08")]
		private int GetNodeIndexForTime(float t)
		{
			return default(int);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x24A9BD4", Offset = "0x24A9BD4", VA = "0x24A9BD4")]
		public void RefreshCurves()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x24AA0D4", Offset = "0x24AA0D4", VA = "0x24AA0D4")]
		public CurveSample GetSampleAtDistance(float d)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x24A97CC", Offset = "0x24A97CC", VA = "0x24A97CC")]
		public void AddNode(SplineNode node)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x24AA37C", Offset = "0x24AA37C", VA = "0x24AA37C")]
		public void InsertNode(int index, SplineNode node)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x24AA684", Offset = "0x24AA684", VA = "0x24AA684")]
		public void RemoveNode(SplineNode node)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x24A930C", Offset = "0x24A930C", VA = "0x24A930C")]
		private void updateLoopBinding()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x24AA9D8", Offset = "0x24AA9D8", VA = "0x24AA9D8")]
		private void StartNodeChanged(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x24AAB40", Offset = "0x24AAB40", VA = "0x24AAB40")]
		private void EndNodeChanged(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x24AACA8", Offset = "0x24AACA8", VA = "0x24AACA8")]
		public CurveSample GetProjectionSample(Vector3 pointToProject)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x24AAFB4", Offset = "0x24AAFB4", VA = "0x24AAFB4")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public enum ListChangeType
	{
		[Token(Token = "0x4000D86")]
		Add,
		[Token(Token = "0x4000D87")]
		Insert,
		[Token(Token = "0x4000D88")]
		Remove,
		[Token(Token = "0x4000D89")]
		clear
	}
	[Token(Token = "0x2000237")]
	public class ListChangedEventArgs<T> : EventArgs
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ListChangeType type;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> newItems;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> removedItems;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int insertIndex;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int removeIndex;

		[Token(Token = "0x6000A31")]
		public ListChangedEventArgs()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public delegate void ListChangeHandler<T2>(object sender, ListChangedEventArgs<T2> args);
	[Serializable]
	[Token(Token = "0x2000239")]
	public class SplineNode
	{
		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector3 position;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 direction;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 up;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector2 scale;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float roll;

		[Token(Token = "0x1700007D")]
		public Vector3 Position
		{
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x27BACF0", Offset = "0x27BACF0", VA = "0x27BACF0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x27BACFC", Offset = "0x27BACFC", VA = "0x27BACFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public Vector3 Direction
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x27BADD8", Offset = "0x27BADD8", VA = "0x27BADD8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x27BADE4", Offset = "0x27BADE4", VA = "0x27BADE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public Vector3 Up
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x27BAEC0", Offset = "0x27BAEC0", VA = "0x27BAEC0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0x27BAECC", Offset = "0x27BAECC", VA = "0x27BAECC")]
			set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public Vector2 Scale
		{
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x27BAFA8", Offset = "0x27BAFA8", VA = "0x27BAFA8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x27BAFB0", Offset = "0x27BAFB0", VA = "0x27BAFB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public float Roll
		{
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x27BB074", Offset = "0x27BB074", VA = "0x27BB074")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0x27BB07C", Offset = "0x27BB07C", VA = "0x27BB07C")]
			set
			{
			}
		}

		[Token(Token = "0x1400001D")]
		[HideInInspector]
		public event System.EventHandler Changed
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x27BB1C8", Offset = "0x27BB1C8", VA = "0x27BB1C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DF80", Offset = "0xB2DF80")]
			add
			{
			}
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x27BB268", Offset = "0x27BB268", VA = "0x27BB268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DF90", Offset = "0xB2DF90")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x27BB130", Offset = "0x27BB130", VA = "0x27BB130")]
		public SplineNode(Vector3 position, Vector3 direction)
		{
		}
	}
	[Token(Token = "0x200023A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1FBF8", Offset = "0xB1FBF8")]
	[DisallowMultipleComponent]
	public class SplineSmoother : MonoBehaviour
	{
		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Spline spline;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB25158", Offset = "0xB25158")]
		public float curvature;

		[Token(Token = "0x17000082")]
		private Spline Spline
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x27BB308", Offset = "0x27BB308", VA = "0x27BB308")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x27BB3BC", Offset = "0x27BB3BC", VA = "0x27BB3BC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x27BB4D8", Offset = "0x27BB4D8", VA = "0x27BB4D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x27BB6D8", Offset = "0x27BB6D8", VA = "0x27BB6D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x27BB8D0", Offset = "0x27BB8D0", VA = "0x27BB8D0")]
		private void Spline_NodeListChanged(object sender, ListChangedEventArgs<SplineNode> args)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x27BBB54", Offset = "0x27BBB54", VA = "0x27BBB54")]
		private void OnNodeChanged(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x27BBCFC", Offset = "0x27BBCFC", VA = "0x27BBCFC")]
		private void SmoothNode(SplineNode node)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x27BB3C0", Offset = "0x27BB3C0", VA = "0x27BB3C0")]
		private void SmoothAll()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x27BBF90", Offset = "0x27BBF90", VA = "0x27BBF90")]
		public SplineSmoother()
		{
		}
	}
	[Token(Token = "0x200023B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1FC80", Offset = "0xB1FC80")]
	public class ExampleContortAlong : MonoBehaviour
	{
		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Spline spline;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float rate;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshBender meshBender;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject generated;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh mesh;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material material;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 scale;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float DurationInSecond;

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x286D55C", Offset = "0x286D55C", VA = "0x286D55C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x286D9AC", Offset = "0x286D9AC", VA = "0x286D9AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x286D9B0", Offset = "0x286D9B0", VA = "0x286D9B0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x286D9B4", Offset = "0x286D9B4", VA = "0x286D9B4")]
		private void EditorUpdate()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x286DA0C", Offset = "0x286DA0C", VA = "0x286DA0C")]
		private void Contort()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x286D564", Offset = "0x286D564", VA = "0x286D564")]
		private void Init()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x286DAD0", Offset = "0x286DAD0", VA = "0x286DAD0")]
		public ExampleContortAlong()
		{
		}
	}
	[Token(Token = "0x200023C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1FCF8", Offset = "0xB1FCF8")]
	public class ExampleFollowSpline : MonoBehaviour
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject generated;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Spline spline;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rate;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Follower;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float DurationInSecond;

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x286DAD8", Offset = "0x286DAD8", VA = "0x286DAD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x286DC94", Offset = "0x286DC94", VA = "0x286DC94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x286DC98", Offset = "0x286DC98", VA = "0x286DC98")]
		private void EditorUpdate()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x286DD2C", Offset = "0x286DD2C", VA = "0x286DD2C")]
		private void PlaceFollower()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x286DE40", Offset = "0x286DE40", VA = "0x286DE40")]
		public ExampleFollowSpline()
		{
		}
	}
	[Token(Token = "0x200023D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1FD70", Offset = "0xB1FD70")]
	public class ExampleGrowingRoot : MonoBehaviour
	{
		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject generated;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Spline spline;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rate;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshBender meshBender;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh mesh;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material material;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 scale;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float startScale;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float DurationInSecond;

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x286DE48", Offset = "0x286DE48", VA = "0x286DE48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x286E29C", Offset = "0x286E29C", VA = "0x286E29C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x286E2A0", Offset = "0x286E2A0", VA = "0x286E2A0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x286E2A4", Offset = "0x286E2A4", VA = "0x286E2A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x286E2A8", Offset = "0x286E2A8", VA = "0x286E2A8")]
		private void EditorUpdate()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x286E300", Offset = "0x286E300", VA = "0x286E300")]
		private void Contort()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x286DE50", Offset = "0x286DE50", VA = "0x286DE50")]
		private void Init()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x286E578", Offset = "0x286E578", VA = "0x286E578")]
		public ExampleGrowingRoot()
		{
		}
	}
	[Token(Token = "0x200023E")]
	[ExecuteInEditMode]
	[SelectionBase]
	[DisallowMultipleComponent]
	public class ExampleSower : MonoBehaviour
	{
		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject generated;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Spline spline;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool toUpdate;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject prefab;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float scale;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float scaleRange;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float spacing;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float spacingRange;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float offset;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float offsetRange;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool isRandomYaw;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int randomSeed;

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x286E588", Offset = "0x286E588", VA = "0x286E588")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x286EA6C", Offset = "0x286EA6C", VA = "0x286EA6C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x286EA78", Offset = "0x286EA78", VA = "0x286EA78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x286EAA4", Offset = "0x286EAA4", VA = "0x286EAA4")]
		public void Sow()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x286EE94", Offset = "0x286EE94", VA = "0x286EE94")]
		public ExampleSower()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x286EEB0", Offset = "0x286EEB0", VA = "0x286EEB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DFA0", Offset = "0xB2DFA0")]
		private void <OnEnable>b__12_0(object s, ListChangedEventArgs<SplineNode> e)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x286F17C", Offset = "0x286F17C", VA = "0x286F17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DFB0", Offset = "0xB2DFB0")]
		private void <OnEnable>b__12_1()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x286F188", Offset = "0x286F188", VA = "0x286F188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DFC0", Offset = "0xB2DFC0")]
		private void <OnEnable>b__12_2()
		{
		}
	}
	[Token(Token = "0x200023F")]
	[DisallowMultipleComponent]
	public class ExampleTentacle : MonoBehaviour
	{
		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startScale;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float endScale;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startRoll;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float endRoll;

		[Token(Token = "0x17000083")]
		private Spline spline
		{
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0x286F194", Offset = "0x286F194", VA = "0x286F194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x286F1E8", Offset = "0x286F1E8", VA = "0x286F1E8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x286F580", Offset = "0x286F580", VA = "0x286F580")]
		public ExampleTentacle()
		{
		}
	}
	[Token(Token = "0x2000240")]
	[ExecuteInEditMode]
	[SelectionBase]
	[DisallowMultipleComponent]
	public class ExampleTrack : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000241")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FE88", Offset = "0xB1FE88")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, GameObject> <>9__8_0;

			[Token(Token = "0x6000A72")]
			[Address(RVA = "0x23475BC", Offset = "0x23475BC", VA = "0x23475BC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x23475C4", Offset = "0x23475C4", VA = "0x23475C4")]
			internal GameObject <CreateMeshes>b__8_0(Transform child)
			{
				return null;
			}
		}

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject generated;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Spline spline;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool toUpdate;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<TrackSegment> segments;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updateInPlayMode;

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x286F590", Offset = "0x286F590", VA = "0x286F590")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x286F8E8", Offset = "0x286F8E8", VA = "0x286F8E8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x286F96C", Offset = "0x286F96C", VA = "0x286F96C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x286F9B8", Offset = "0x286F9B8", VA = "0x286F9B8")]
		public void CreateMeshes()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x28706B4", Offset = "0x28706B4", VA = "0x28706B4")]
		public ExampleTrack()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x2870740", Offset = "0x2870740", VA = "0x2870740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DFD0", Offset = "0xB2DFD0")]
		private void <OnEnable>b__5_0(object s, ListChangedEventArgs<SplineNode> e)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000242")]
	public class TrackSegment
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TransformedMesh> transformedMeshes;

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x20563C0", Offset = "0x20563C0", VA = "0x20563C0")]
		public TrackSegment()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000243")]
	public class TransformedMesh
	{
		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhysicMaterial physicMaterial;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 translation;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotation;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 scale;

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x263C388", Offset = "0x263C388", VA = "0x263C388")]
		public TransformedMesh()
		{
		}
	}
	[Token(Token = "0x2000244")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1FE98", Offset = "0xB1FE98")]
	public class RopeBuilder : MonoBehaviour
	{
		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool toUpdate;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject generated;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Spline spline;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject firstSegment;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public List<GameObject> wayPoints;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject segmentPrefab;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int segmentCount;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float segmentSpacing;

		[Token(Token = "0x17000084")]
		private GameObject Generated
		{
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x20C5220", Offset = "0x20C5220", VA = "0x20C5220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x20C540C", Offset = "0x20C540C", VA = "0x20C540C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x20C547C", Offset = "0x20C547C", VA = "0x20C547C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x20C5488", Offset = "0x20C5488", VA = "0x20C5488")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x20C5A10", Offset = "0x20C5A10", VA = "0x20C5A10")]
		private void UpdateNodes()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x20C5734", Offset = "0x20C5734", VA = "0x20C5734")]
		private void UpdateSpline()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x20C5520", Offset = "0x20C5520", VA = "0x20C5520")]
		private void Generate()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x20C5CE4", Offset = "0x20C5CE4", VA = "0x20C5CE4")]
		public RopeBuilder()
		{
		}
	}
	[Token(Token = "0x2000245")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1FF10", Offset = "0xB1FF10")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1FF10", Offset = "0xB1FF10")]
	public class ExtrusionSegment : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000246")]
		public class Vertex
		{
			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 point;

			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 normal;

			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float uCoord;

			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0x2347760", Offset = "0x2347760", VA = "0x2347760")]
			public Vertex(Vector2 point, Vector2 normal, float uCoord)
			{
			}

			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x23477BC", Offset = "0x23477BC", VA = "0x23477BC")]
			public Vertex(Vertex other)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000247")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1FFCC", Offset = "0xB1FFCC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MeshVertex, Vector3> <>9__31_0;

			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MeshVertex, Vector3> <>9__31_1;

			[Token(Token = "0x4000DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MeshVertex, Vector2> <>9__31_2;

			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x23476FC", Offset = "0x23476FC", VA = "0x23476FC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A93")]
			[Address(RVA = "0x2347704", Offset = "0x2347704", VA = "0x2347704")]
			internal Vector3 <Compute>b__31_0(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x2347724", Offset = "0x2347724", VA = "0x2347724")]
			internal Vector3 <Compute>b__31_1(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x2347744", Offset = "0x2347744", VA = "0x2347744")]
			internal Vector2 <Compute>b__31_2(MeshVertex b)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isDirty;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter mf;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh result;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool useSpline;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CubicBezierCurve curve;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Spline spline;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float intervalStart;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float intervalEnd;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Vertex> shapeVertices;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float textureScale;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float textureOffset;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float sampleSpacing;

		[Token(Token = "0x17000085")]
		public List<Vertex> ShapeVertices
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x2872904", Offset = "0x2872904", VA = "0x2872904")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x287290C", Offset = "0x287290C", VA = "0x287290C")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public float TextureScale
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x2872940", Offset = "0x2872940", VA = "0x2872940")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x2872948", Offset = "0x2872948", VA = "0x2872948")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public float TextureOffset
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x2872968", Offset = "0x2872968", VA = "0x2872968")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x2872970", Offset = "0x2872970", VA = "0x2872970")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public float SampleSpacing
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0x2872990", Offset = "0x2872990", VA = "0x2872990")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0x2872998", Offset = "0x2872998", VA = "0x2872998")]
			set
			{
			}
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x2872A2C", Offset = "0x2872A2C", VA = "0x2872A2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x2872B3C", Offset = "0x2872B3C", VA = "0x2872B3C")]
		public void SetInterval(CubicBezierCurve curve)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x2872CA8", Offset = "0x2872CA8", VA = "0x2872CA8")]
		public void SetInterval(Spline spline, float intervalStart, float intervalEnd = 0f)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x2872934", Offset = "0x2872934", VA = "0x2872934")]
		private void SetDirty()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x2872FA8", Offset = "0x2872FA8", VA = "0x2872FA8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x2872FD4", Offset = "0x2872FD4", VA = "0x2872FD4")]
		public void ComputeIfNeeded()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x28738F0", Offset = "0x28738F0", VA = "0x28738F0")]
		private List<CurveSample> GetPath()
		{
			return null;
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x2873000", Offset = "0x2873000", VA = "0x2873000")]
		public void Compute()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x2873AD8", Offset = "0x2873AD8", VA = "0x2873AD8")]
		public ExtrusionSegment()
		{
		}
	}
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1FFDC", Offset = "0xB1FFDC")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	public class MeshBender : MonoBehaviour
	{
		[Token(Token = "0x2000249")]
		public enum FillingMode
		{
			[Token(Token = "0x4000DF3")]
			Once,
			[Token(Token = "0x4000DF4")]
			Repeat,
			[Token(Token = "0x4000DF5")]
			StretchToInterval
		}

		[Serializable]
		[Token(Token = "0x200024A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20064", Offset = "0xB20064")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MeshVertex, Vector3> <>9__25_0;

			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MeshVertex, Vector3> <>9__25_1;

			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MeshVertex, Vector3> <>9__26_0;

			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<MeshVertex, Vector3> <>9__26_1;

			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<MeshVertex, Vector3> <>9__27_0;

			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<MeshVertex, Vector3> <>9__27_1;

			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x235791C", Offset = "0x235791C", VA = "0x235791C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x2357924", Offset = "0x2357924", VA = "0x2357924")]
			internal Vector3 <FillOnce>b__25_0(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x2357944", Offset = "0x2357944", VA = "0x2357944")]
			internal Vector3 <FillOnce>b__25_1(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x2357964", Offset = "0x2357964", VA = "0x2357964")]
			internal Vector3 <FillRepeat>b__26_0(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x2357984", Offset = "0x2357984", VA = "0x2357984")]
			internal Vector3 <FillRepeat>b__26_1(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x23579A4", Offset = "0x23579A4", VA = "0x23579A4")]
			internal Vector3 <FillStretch>b__27_0(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x23579C4", Offset = "0x23579C4", VA = "0x23579C4")]
			internal Vector3 <FillStretch>b__27_1(MeshVertex b)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isDirty;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh result;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool useSpline;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Spline spline;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float intervalStart;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float intervalEnd;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CubicBezierCurve curve;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<float, CurveSample> sampleCache;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SourceMesh source;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FillingMode mode;

		[Token(Token = "0x17000089")]
		public SourceMesh Source
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x21B1A00", Offset = "0x21B1A00", VA = "0x21B1A00")]
			get
			{
				return default(SourceMesh);
			}
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x21B1A10", Offset = "0x21B1A10", VA = "0x21B1A10")]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public FillingMode Mode
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x21B1AA4", Offset = "0x21B1AA4", VA = "0x21B1AA4")]
			get
			{
				return default(FillingMode);
			}
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0x21B1AAC", Offset = "0x21B1AAC", VA = "0x21B1AAC")]
			set
			{
			}
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x21B1AC8", Offset = "0x21B1AC8", VA = "0x21B1AC8")]
		public void SetInterval(CubicBezierCurve curve)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x21B1C34", Offset = "0x21B1C34", VA = "0x21B1C34")]
		public void SetInterval(Spline spline, float intervalStart, float intervalEnd = 0f)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x21B1F34", Offset = "0x21B1F34", VA = "0x21B1F34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x21B20C8", Offset = "0x21B20C8", VA = "0x21B20C8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x21B20D8", Offset = "0x21B20D8", VA = "0x21B20D8")]
		public void ComputeIfNeeded()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x21B1A98", Offset = "0x21B1A98", VA = "0x21B1A98")]
		private void SetDirty()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x21B20E8", Offset = "0x21B20E8", VA = "0x21B20E8")]
		private void Compute()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x21B39C4", Offset = "0x21B39C4", VA = "0x21B39C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x21B2114", Offset = "0x21B2114", VA = "0x21B2114")]
		private void FillOnce()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x21B269C", Offset = "0x21B269C", VA = "0x21B269C")]
		private void FillRepeat()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x21B3018", Offset = "0x21B3018", VA = "0x21B3018")]
		private void FillStretch()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x21B3DF4", Offset = "0x21B3DF4", VA = "0x21B3DF4")]
		public MeshBender()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024B")]
	public class MeshVertex
	{
		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 normal;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 uv;

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x21B9B68", Offset = "0x21B9B68", VA = "0x21B9B68")]
		public MeshVertex(Vector3 position, Vector3 normal, Vector2 uv)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x21B9BDC", Offset = "0x21B9BDC", VA = "0x21B9BDC")]
		public MeshVertex(Vector3 position, Vector3 normal)
		{
		}
	}
	[Token(Token = "0x200024C")]
	public struct SourceMesh
	{
		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 translation;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Quaternion rotation;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 scale;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25190", Offset = "0xB25190")]
		private readonly Mesh <Mesh>k__BackingField;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshVertex> vertices;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] triangles;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float minX;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float length;

		[Token(Token = "0x1700008B")]
		internal readonly Mesh Mesh
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x24A7440", Offset = "0x24A7440", VA = "0x24A7440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2DFE0", Offset = "0xB2DFE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		internal List<MeshVertex> Vertices
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x24A7448", Offset = "0x24A7448", VA = "0x24A7448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		internal int[] Triangles
		{
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x24A795C", Offset = "0x24A795C", VA = "0x24A795C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		internal float MinX
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x24A798C", Offset = "0x24A798C", VA = "0x24A798C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008F")]
		internal float Length
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x24A79BC", Offset = "0x24A79BC", VA = "0x24A79BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x24A79EC", Offset = "0x24A79EC", VA = "0x24A79EC")]
		private SourceMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x24A7A40", Offset = "0x24A7A40", VA = "0x24A7A40")]
		private SourceMesh(SourceMesh other)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x24A7AB8", Offset = "0x24A7AB8", VA = "0x24A7AB8")]
		public static SourceMesh Build(Mesh mesh)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x24A7AD4", Offset = "0x24A7AD4", VA = "0x24A7AD4")]
		public SourceMesh Translate(Vector3 translation)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x24A7B58", Offset = "0x24A7B58", VA = "0x24A7B58")]
		public SourceMesh Translate(float x, float y, float z)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x24A7BDC", Offset = "0x24A7BDC", VA = "0x24A7BDC")]
		public SourceMesh Rotate(Quaternion rotation)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x24A7C64", Offset = "0x24A7C64", VA = "0x24A7C64")]
		public SourceMesh Scale(Vector3 scale)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x24A7CE8", Offset = "0x24A7CE8", VA = "0x24A7CE8")]
		public SourceMesh Scale(float x, float y, float z)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x24A7478", Offset = "0x24A7478", VA = "0x24A7478")]
		private void BuildData()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x24A7D6C", Offset = "0x24A7D6C", VA = "0x24A7D6C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x24A7F6C", Offset = "0x24A7F6C", VA = "0x24A7F6C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x24A7FEC", Offset = "0x24A7FEC", VA = "0x24A7FEC")]
		public static bool operator ==(SourceMesh sm1, SourceMesh sm2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x24A8070", Offset = "0x24A8070", VA = "0x24A8070")]
		public static bool operator !=(SourceMesh sm1, SourceMesh sm2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200024D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB20074", Offset = "0xB20074")]
	public class SplineExtrusion : MonoBehaviour
	{
		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Spline spline;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool toUpdate;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject generated;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ExtrusionSegment.Vertex> shapeVertices;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material material;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float textureScale;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float sampleSpacing;

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x24AB0D4", Offset = "0x24AB0D4", VA = "0x24AB0D4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x24AB494", Offset = "0x24AB494", VA = "0x24AB494")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x24AB238", Offset = "0x24AB238", VA = "0x24AB238")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x24AB4A0", Offset = "0x24AB4A0", VA = "0x24AB4A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x24AB4CC", Offset = "0x24AB4CC", VA = "0x24AB4CC")]
		private void GenerateMesh()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x24ABAE0", Offset = "0x24ABAE0", VA = "0x24ABAE0")]
		public void SetToUpdate()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x24ABAEC", Offset = "0x24ABAEC", VA = "0x24ABAEC")]
		public SplineExtrusion()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x24ABB8C", Offset = "0x24ABB8C", VA = "0x24ABB8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E018", Offset = "0xB2E018")]
		private void <OnEnable>b__9_0(object s, ListChangedEventArgs<SplineNode> e)
		{
		}
	}
	[Token(Token = "0x200024E")]
	[SelectionBase]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	public class SplineMeshTiling : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200024F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20134", Offset = "0xB20134")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, GameObject> <>9__16_0;

			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0x200C57C", Offset = "0x200C57C", VA = "0x200C57C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0x200C584", Offset = "0x200C584", VA = "0x200C584")]
			internal GameObject <CreateMeshes>b__16_0(Transform child)
			{
				return null;
			}
		}

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject generated;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Spline spline;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool toUpdate;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB251A0", Offset = "0xB251A0")]
		public Mesh mesh;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB251D8", Offset = "0xB251D8")]
		public Material material;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25210", Offset = "0xB25210")]
		public PhysicMaterial physicMaterial;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25248", Offset = "0xB25248")]
		public Vector3 translation;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25280", Offset = "0xB25280")]
		public Vector3 rotation;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB252B8", Offset = "0xB252B8")]
		public Vector3 scale;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB252F0", Offset = "0xB252F0")]
		public bool generateCollider;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25328", Offset = "0xB25328")]
		public bool updateInPlayMode;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25360", Offset = "0xB25360")]
		public bool curveSpace;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25398", Offset = "0xB25398")]
		public MeshBender.FillingMode mode;

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x27B9E4C", Offset = "0x27B9E4C", VA = "0x27B9E4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x27BA0B8", Offset = "0x27BA0B8", VA = "0x27BA0B8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x27BA13C", Offset = "0x27BA13C", VA = "0x27BA13C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x27BA188", Offset = "0x27BA188", VA = "0x27BA188")]
		public void CreateMeshes()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x27BA850", Offset = "0x27BA850", VA = "0x27BA850")]
		private GameObject FindOrCreate(string name)
		{
			return null;
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x27BACA0", Offset = "0x27BACA0", VA = "0x27BACA0")]
		public SplineMeshTiling()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x27BACE4", Offset = "0x27BACE4", VA = "0x27BACE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E028", Offset = "0xB2E028")]
		private void <OnEnable>b__13_0(object s, ListChangedEventArgs<SplineNode> e)
		{
		}
	}
	[Token(Token = "0x2000250")]
	public static class CameraUtility
	{
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x223B650", Offset = "0x223B650", VA = "0x223B650")]
		public static bool IsOnScreen(Vector3 position)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000251")]
	public class MeshUtility
	{
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x21B9A68", Offset = "0x21B9A68", VA = "0x21B9A68")]
		public static int[] GetReversedTriangles(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x21B3A70", Offset = "0x21B3A70", VA = "0x21B3A70")]
		public static void Update(Mesh mesh, Mesh source, [Optional] IEnumerable<int> triangles, [Optional] IEnumerable<Vector3> vertices, [Optional] IEnumerable<Vector3> normals, [Optional] IEnumerable<Vector2> uv, [Optional] IEnumerable<Vector2> uv2, [Optional] IEnumerable<Vector2> uv3, [Optional] IEnumerable<Vector2> uv4, [Optional] IEnumerable<Vector2> uv5, [Optional] IEnumerable<Vector2> uv6, [Optional] IEnumerable<Vector2> uv7, [Optional] IEnumerable<Vector2> uv8)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x21B9B60", Offset = "0x21B9B60", VA = "0x21B9B60")]
		public MeshUtility()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public static class UOUtility
	{
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x263FB64", Offset = "0x263FB64", VA = "0x263FB64")]
		public static GameObject Create(string name, GameObject parent, params Type[] components)
		{
			return null;
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x263FC94", Offset = "0x263FC94", VA = "0x263FC94")]
		public static GameObject Instantiate(GameObject prefab, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x263FDA4", Offset = "0x263FDA4", VA = "0x263FDA4")]
		public static void Destroy(GameObject go)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x263FE4C", Offset = "0x263FE4C", VA = "0x263FE4C")]
		public static void Destroy(Component comp)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x263FEF4", Offset = "0x263FEF4", VA = "0x263FEF4")]
		public static void DestroyChildren(GameObject go)
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x2000253")]
	public enum JsonType
	{
		[Token(Token = "0x4000E1F")]
		None,
		[Token(Token = "0x4000E20")]
		Object,
		[Token(Token = "0x4000E21")]
		Array,
		[Token(Token = "0x4000E22")]
		String,
		[Token(Token = "0x4000E23")]
		Int,
		[Token(Token = "0x4000E24")]
		Long,
		[Token(Token = "0x4000E25")]
		Double,
		[Token(Token = "0x4000E26")]
		Boolean
	}
	[Token(Token = "0x2000254")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x17000090")]
		bool IsArray
		{
			[Token(Token = "0x6000ADD")]
			get;
		}

		[Token(Token = "0x17000091")]
		bool IsBoolean
		{
			[Token(Token = "0x6000ADE")]
			get;
		}

		[Token(Token = "0x17000092")]
		bool IsDouble
		{
			[Token(Token = "0x6000ADF")]
			get;
		}

		[Token(Token = "0x17000093")]
		bool IsInt
		{
			[Token(Token = "0x6000AE0")]
			get;
		}

		[Token(Token = "0x17000094")]
		bool IsLong
		{
			[Token(Token = "0x6000AE1")]
			get;
		}

		[Token(Token = "0x17000095")]
		bool IsObject
		{
			[Token(Token = "0x6000AE2")]
			get;
		}

		[Token(Token = "0x17000096")]
		bool IsString
		{
			[Token(Token = "0x6000AE3")]
			get;
		}

		[Token(Token = "0x6000AE4")]
		bool GetBoolean();

		[Token(Token = "0x6000AE5")]
		double GetDouble();

		[Token(Token = "0x6000AE6")]
		int GetInt();

		[Token(Token = "0x6000AE7")]
		JsonType GetJsonType();

		[Token(Token = "0x6000AE8")]
		long GetLong();

		[Token(Token = "0x6000AE9")]
		string GetString();

		[Token(Token = "0x6000AEA")]
		void SetBoolean(bool val);

		[Token(Token = "0x6000AEB")]
		void SetDouble(double val);

		[Token(Token = "0x6000AEC")]
		void SetInt(int val);

		[Token(Token = "0x6000AED")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x6000AEE")]
		void SetLong(long val);

		[Token(Token = "0x6000AEF")]
		void SetString(string val);

		[Token(Token = "0x6000AF0")]
		string ToJson();

		[Token(Token = "0x6000AF1")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB20144", Offset = "0xB20144")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x17000097")]
		public int Count
		{
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0x23D4CF4", Offset = "0x23D4CF4", VA = "0x23D4CF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000098")]
		public bool IsArray
		{
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x23D4E78", Offset = "0x23D4E78", VA = "0x23D4E78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000099")]
		public bool IsBoolean
		{
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0x23D4E88", Offset = "0x23D4E88", VA = "0x23D4E88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009A")]
		public bool IsDouble
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x23D4E98", Offset = "0x23D4E98", VA = "0x23D4E98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009B")]
		public bool IsInt
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x23D4EA8", Offset = "0x23D4EA8", VA = "0x23D4EA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009C")]
		public bool IsLong
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x23D4EB8", Offset = "0x23D4EB8", VA = "0x23D4EB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009D")]
		public bool IsObject
		{
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0x23D4EC8", Offset = "0x23D4EC8", VA = "0x23D4EC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009E")]
		public bool IsString
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x23D4ED8", Offset = "0x23D4ED8", VA = "0x23D4ED8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009F")]
		public ICollection<string> Keys
		{
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0x23D4EE8", Offset = "0x23D4EE8", VA = "0x23D4EE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0x23D5254", Offset = "0x23D5254", VA = "0x23D5254", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A1")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x23D5258", Offset = "0x23D5258", VA = "0x23D5258", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x23D5308", Offset = "0x23D5308", VA = "0x23D5308", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0x23D53B8", Offset = "0x23D53B8", VA = "0x23D53B8", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A4")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0x23D5468", Offset = "0x23D5468", VA = "0x23D5468", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A5")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0x23D5518", Offset = "0x23D5518", VA = "0x23D5518", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x23D58B8", Offset = "0x23D58B8", VA = "0x23D58B8", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x23D5C58", Offset = "0x23D5C58", VA = "0x23D5C58", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A8")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x23D5C68", Offset = "0x23D5C68", VA = "0x23D5C68", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A9")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0x23D5C78", Offset = "0x23D5C78", VA = "0x23D5C78", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AA")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0x23D5C88", Offset = "0x23D5C88", VA = "0x23D5C88", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AB")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0x23D5C98", Offset = "0x23D5C98", VA = "0x23D5C98", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AC")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0x23D5CA8", Offset = "0x23D5CA8", VA = "0x23D5CA8", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AD")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x23D5CB8", Offset = "0x23D5CB8", VA = "0x23D5CB8", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AE")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0x23D5CC8", Offset = "0x23D5CC8", VA = "0x23D5CC8", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AF")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0x23D5EA4", Offset = "0x23D5EA4", VA = "0x23D5EA4", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0x23D5F54", Offset = "0x23D5F54", VA = "0x23D5F54", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0x23D6010", Offset = "0x23D6010", VA = "0x23D6010", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0x23D6518", Offset = "0x23D6518", VA = "0x23D6518", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x23D65E8", Offset = "0x23D65E8", VA = "0x23D65E8", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x23D6800", Offset = "0x23D6800", VA = "0x23D6800", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x23D68BC", Offset = "0x23D68BC", VA = "0x23D68BC", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public JsonData Item
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x23D6BAC", Offset = "0x23D6BAC", VA = "0x23D6BAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x23D617C", Offset = "0x23D617C", VA = "0x23D617C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public JsonData Item
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x23D6C68", Offset = "0x23D6C68", VA = "0x23D6C68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x23D6900", Offset = "0x23D6900", VA = "0x23D6900")]
			set
			{
			}
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x23D511C", Offset = "0x23D511C", VA = "0x23D511C")]
		public bool ContainsKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x23D6DC8", Offset = "0x23D6DC8", VA = "0x23D6DC8")]
		public JsonData()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x23D6DD0", Offset = "0x23D6DD0", VA = "0x23D6DD0")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x23D6E08", Offset = "0x23D6E08", VA = "0x23D6E08")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x23D6E44", Offset = "0x23D6E44", VA = "0x23D6E44")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x23D6E78", Offset = "0x23D6E78", VA = "0x23D6E78")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x23D6EAC", Offset = "0x23D6EAC", VA = "0x23D6EAC")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x23D70E0", Offset = "0x23D70E0", VA = "0x23D70E0")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x23D711C", Offset = "0x23D711C", VA = "0x23D711C")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x23D7190", Offset = "0x23D7190", VA = "0x23D7190")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x23D7200", Offset = "0x23D7200", VA = "0x23D7200")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x23D7270", Offset = "0x23D7270", VA = "0x23D7270")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x23D72E0", Offset = "0x23D72E0", VA = "0x23D72E0")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x23D735C", Offset = "0x23D735C", VA = "0x23D735C")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x23D73D4", Offset = "0x23D73D4", VA = "0x23D73D4")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x23D744C", Offset = "0x23D744C", VA = "0x23D744C")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x23D74D4", Offset = "0x23D74D4", VA = "0x23D74D4")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x23D755C", Offset = "0x23D755C", VA = "0x23D755C")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x23D75D4", Offset = "0x23D75D4", VA = "0x23D75D4", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x23D7698", Offset = "0x23D7698", VA = "0x23D7698", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x23D7868", Offset = "0x23D7868", VA = "0x23D7868", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x23D79A0", Offset = "0x23D79A0", VA = "0x23D79A0", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x23D7A60", Offset = "0x23D7A60", VA = "0x23D7A60", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x23D7B04", Offset = "0x23D7B04", VA = "0x23D7B04", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x23D7D9C", Offset = "0x23D7D9C", VA = "0x23D7D9C", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x23D7E48", Offset = "0x23D7E48", VA = "0x23D7E48", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x23D7EB8", Offset = "0x23D7EB8", VA = "0x23D7EB8", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x23D7F28", Offset = "0x23D7F28", VA = "0x23D7F28", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x23D7F98", Offset = "0x23D7F98", VA = "0x23D7F98", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x23D8008", Offset = "0x23D8008", VA = "0x23D8008", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x23D8078", Offset = "0x23D8078", VA = "0x23D8078", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x23D8094", Offset = "0x23D8094", VA = "0x23D8094", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x23D80AC", Offset = "0x23D80AC", VA = "0x23D80AC", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x23D80C4", Offset = "0x23D80C4", VA = "0x23D80C4", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x23D80DC", Offset = "0x23D80DC", VA = "0x23D80DC", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x23D8114", Offset = "0x23D8114", VA = "0x23D8114", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x23D81EC", Offset = "0x23D81EC", VA = "0x23D81EC", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x23D8224", Offset = "0x23D8224", VA = "0x23D8224", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x23D8304", Offset = "0x23D8304", VA = "0x23D8304", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x23D83C4", Offset = "0x23D83C4", VA = "0x23D83C4", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x23D8484", Offset = "0x23D8484", VA = "0x23D8484", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x23D8544", Offset = "0x23D8544", VA = "0x23D8544", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x23D861C", Offset = "0x23D861C", VA = "0x23D861C", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x23D86EC", Offset = "0x23D86EC", VA = "0x23D86EC", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x23D87BC", Offset = "0x23D87BC", VA = "0x23D87BC", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x23D88A4", Offset = "0x23D88A4", VA = "0x23D88A4", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x23D89FC", Offset = "0x23D89FC", VA = "0x23D89FC", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x23D4DA4", Offset = "0x23D4DA4", VA = "0x23D4DA4")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x23D4F98", Offset = "0x23D4F98", VA = "0x23D4F98")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x23D5D78", Offset = "0x23D5D78", VA = "0x23D5D78")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x23D60EC", Offset = "0x23D60EC", VA = "0x23D60EC")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x23D8BB4", Offset = "0x23D8BB4", VA = "0x23D8BB4")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x23D8228", Offset = "0x23D8228", VA = "0x23D8228")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x23DA000", Offset = "0x23DA000", VA = "0x23DA000")]
		public bool Remove(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x23DA398", Offset = "0x23DA398", VA = "0x23DA398")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x23DA4AC", Offset = "0x23DA4AC", VA = "0x23DA4AC", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x23DA5F8", Offset = "0x23DA5F8", VA = "0x23DA5F8", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x23DA600", Offset = "0x23DA600", VA = "0x23DA600", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x23D8118", Offset = "0x23D8118", VA = "0x23D8118")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x23D81F0", Offset = "0x23D81F0", VA = "0x23D81F0")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x23DA810", Offset = "0x23DA810", VA = "0x23DA810", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000256")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x170000B5")]
		public object Current
		{
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0x25358AC", Offset = "0x25358AC", VA = "0x25358AC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0x253591C", Offset = "0x253591C", VA = "0x253591C", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x170000B7")]
		public object Key
		{
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0x2535A08", Offset = "0x2535A08", VA = "0x2535A08", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		public object Value
		{
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0x2535AB8", Offset = "0x2535AB8", VA = "0x2535AB8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x2535B70", Offset = "0x2535B70", VA = "0x2535B70")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x2535BA4", Offset = "0x2535BA4", VA = "0x2535BA4", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x2535C48", Offset = "0x2535C48", VA = "0x2535C48", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x23DA908", Offset = "0x23DA908", VA = "0x23DA908")]
		public JsonException()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x23DA910", Offset = "0x23DA910", VA = "0x23DA910")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x23DA9B0", Offset = "0x23DA9B0", VA = "0x23DA9B0")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x23DAA60", Offset = "0x23DAA60", VA = "0x23DAA60")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x23DAB00", Offset = "0x23DAB00", VA = "0x23DAB00")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x23DABB0", Offset = "0x23DABB0", VA = "0x23DABB0")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x23DABB8", Offset = "0x23DABB8", VA = "0x23DABB8")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000258")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x2000259")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x170000B9")]
		public Type ElementType
		{
			[Token(Token = "0x6000B60")]
			[Address(RVA = "0x22C7C14", Offset = "0x22C7C14", VA = "0x22C7C14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0x22C7CDC", Offset = "0x22C7CDC", VA = "0x22C7CDC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public bool IsArray
		{
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0x22C7CE4", Offset = "0x22C7CE4", VA = "0x22C7CE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x22C7CEC", Offset = "0x22C7CEC", VA = "0x22C7CEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public bool IsList
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0x22C7CF8", Offset = "0x22C7CF8", VA = "0x22C7CF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x22C7D00", Offset = "0x22C7D00", VA = "0x22C7D00")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200025A")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x170000BC")]
		public Type ElementType
		{
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x2530CF8", Offset = "0x2530CF8", VA = "0x2530CF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0x2530DC0", Offset = "0x2530DC0", VA = "0x2530DC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public bool IsDictionary
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x2530DC8", Offset = "0x2530DC8", VA = "0x2530DC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x2530DD0", Offset = "0x2530DD0", VA = "0x2530DD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0x2530DDC", Offset = "0x2530DDC", VA = "0x2530DDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x2530DE4", Offset = "0x2530DE4", VA = "0x2530DE4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200025B")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x200025C")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x200025D")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x200025E")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x200025F")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x2000260")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x2000261")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2017C", Offset = "0xB2017C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static WrapperFactory <>9__23_0;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__24_0;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__24_1;

			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__24_2;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__24_3;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__24_4;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__24_5;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__24_6;

			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__24_7;

			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__24_8;

			[Token(Token = "0x4000E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ExporterFunc <>9__24_9;

			[Token(Token = "0x4000E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__25_0;

			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__25_1;

			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__25_2;

			[Token(Token = "0x4000E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__25_3;

			[Token(Token = "0x4000E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__25_4;

			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__25_5;

			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__25_6;

			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__25_7;

			[Token(Token = "0x4000E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__25_8;

			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__25_9;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__25_10;

			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__25_11;

			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static ImporterFunc <>9__25_12;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static ImporterFunc <>9__25_13;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static ImporterFunc <>9__25_14;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public static WrapperFactory <>9__32_0;

			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0x2347C20", Offset = "0x2347C20", VA = "0x2347C20")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x2347C28", Offset = "0x2347C28", VA = "0x2347C28")]
			internal IJsonWrapper <ReadSkip>b__23_0()
			{
				return null;
			}

			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x2347C80", Offset = "0x2347C80", VA = "0x2347C80")]
			internal void <RegisterBaseExporters>b__24_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0x2347D44", Offset = "0x2347D44", VA = "0x2347D44")]
			internal void <RegisterBaseExporters>b__24_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0x2347E08", Offset = "0x2347E08", VA = "0x2347E08")]
			internal void <RegisterBaseExporters>b__24_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0x2347F0C", Offset = "0x2347F0C", VA = "0x2347F0C")]
			internal void <RegisterBaseExporters>b__24_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0x2347F98", Offset = "0x2347F98", VA = "0x2347F98")]
			internal void <RegisterBaseExporters>b__24_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0x234805C", Offset = "0x234805C", VA = "0x234805C")]
			internal void <RegisterBaseExporters>b__24_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x2348120", Offset = "0x2348120", VA = "0x2348120")]
			internal void <RegisterBaseExporters>b__24_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x23481E4", Offset = "0x23481E4", VA = "0x23481E4")]
			internal void <RegisterBaseExporters>b__24_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x23482A8", Offset = "0x23482A8", VA = "0x23482A8")]
			internal void <RegisterBaseExporters>b__24_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x2348334", Offset = "0x2348334", VA = "0x2348334")]
			internal void <RegisterBaseExporters>b__24_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0x2348438", Offset = "0x2348438", VA = "0x2348438")]
			internal object <RegisterBaseImporters>b__25_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0x2348514", Offset = "0x2348514", VA = "0x2348514")]
			internal object <RegisterBaseImporters>b__25_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x23485F0", Offset = "0x23485F0", VA = "0x23485F0")]
			internal object <RegisterBaseImporters>b__25_2(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x23486CC", Offset = "0x23486CC", VA = "0x23486CC")]
			internal object <RegisterBaseImporters>b__25_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x23487A8", Offset = "0x23487A8", VA = "0x23487A8")]
			internal object <RegisterBaseImporters>b__25_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x2348884", Offset = "0x2348884", VA = "0x2348884")]
			internal object <RegisterBaseImporters>b__25_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x2348960", Offset = "0x2348960", VA = "0x2348960")]
			internal object <RegisterBaseImporters>b__25_6(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x2348A3C", Offset = "0x2348A3C", VA = "0x2348A3C")]
			internal object <RegisterBaseImporters>b__25_7(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x2348B14", Offset = "0x2348B14", VA = "0x2348B14")]
			internal object <RegisterBaseImporters>b__25_8(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x2348BEC", Offset = "0x2348BEC", VA = "0x2348BEC")]
			internal object <RegisterBaseImporters>b__25_9(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x2348CD0", Offset = "0x2348CD0", VA = "0x2348CD0")]
			internal object <RegisterBaseImporters>b__25_10(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x2348DA8", Offset = "0x2348DA8", VA = "0x2348DA8")]
			internal object <RegisterBaseImporters>b__25_11(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x2348E84", Offset = "0x2348E84", VA = "0x2348E84")]
			internal object <RegisterBaseImporters>b__25_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x2348F54", Offset = "0x2348F54", VA = "0x2348F54")]
			internal object <RegisterBaseImporters>b__25_13(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x2349064", Offset = "0x2349064", VA = "0x2349064")]
			internal object <RegisterBaseImporters>b__25_14(object input)
			{
				return null;
			}

			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x2349168", Offset = "0x2349168", VA = "0x2349168")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x23491C0", Offset = "0x23491C0", VA = "0x23491C0")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}

			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x2349218", Offset = "0x2349218", VA = "0x2349218")]
			internal IJsonWrapper <ToObject>b__32_0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000262")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2018C", Offset = "0xB2018C")]
		private sealed class <>c__DisplayClass39_0<T>
		{
			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x6000BBB")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6000BBC")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x2000263")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2019C", Offset = "0xB2019C")]
		private sealed class <>c__DisplayClass40_0<TJson, TValue>
		{
			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6000BBD")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6000BBE")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int max_nesting_depth;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly IFormatProvider datetime_format;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static readonly IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static readonly JsonWriter static_writer;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x23DABC0", Offset = "0x23DABC0", VA = "0x23DABC0")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x23DD0A8", Offset = "0x23DD0A8", VA = "0x23DD0A8")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x23DD570", Offset = "0x23DD570", VA = "0x23DD570")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x23DDD20", Offset = "0x23DDD20", VA = "0x23DDD20")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x23DE2A8", Offset = "0x23DE2A8", VA = "0x23DE2A8")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x23DEBBC", Offset = "0x23DEBBC", VA = "0x23DEBBC")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x23E020C", Offset = "0x23E020C", VA = "0x23E020C")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x23E00E4", Offset = "0x23E00E4", VA = "0x23E00E4")]
		private static void ReadSkip(JsonReader reader)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x23DB088", Offset = "0x23DB088", VA = "0x23DB088")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x23DBEF8", Offset = "0x23DBEF8", VA = "0x23DBEF8")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x23E08E8", Offset = "0x23E08E8", VA = "0x23E08E8")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x23E0B2C", Offset = "0x23E0B2C", VA = "0x23E0B2C")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x23E24F0", Offset = "0x23E24F0", VA = "0x23E24F0")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x23E277C", Offset = "0x23E277C", VA = "0x23E277C")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x23E27F4", Offset = "0x23E27F4", VA = "0x23E27F4")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x23E2968", Offset = "0x23E2968", VA = "0x23E2968")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x23E2B10", Offset = "0x23E2B10", VA = "0x23E2B10")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6000B91")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000B92")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000B93")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x23E2D24", Offset = "0x23E2D24", VA = "0x23E2D24")]
		public static object ToObject(string json, Type ConvertType)
		{
			return null;
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x23E0878", Offset = "0x23E0878", VA = "0x23E0878")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x23E2C84", Offset = "0x23E2C84", VA = "0x23E2C84")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6000B97")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6000B98")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x23E2E38", Offset = "0x23E2E38", VA = "0x23E2E38")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x23E2F10", Offset = "0x23E2F10", VA = "0x23E2F10")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x23E2FE8", Offset = "0x23E2FE8", VA = "0x23E2FE8")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class JsonMockWrapper : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x170000BF")]
		public bool IsArray
		{
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x23E2FF0", Offset = "0x23E2FF0", VA = "0x23E2FF0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C0")]
		public bool IsBoolean
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x23E2FF8", Offset = "0x23E2FF8", VA = "0x23E2FF8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C1")]
		public bool IsDouble
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x23E3000", Offset = "0x23E3000", VA = "0x23E3000", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C2")]
		public bool IsInt
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x23E3008", Offset = "0x23E3008", VA = "0x23E3008", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C3")]
		public bool IsLong
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x23E3010", Offset = "0x23E3010", VA = "0x23E3010", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C4")]
		public bool IsObject
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x23E3018", Offset = "0x23E3018", VA = "0x23E3018", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C5")]
		public bool IsString
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x23E3020", Offset = "0x23E3020", VA = "0x23E3020", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C6")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0x23E30F4", Offset = "0x23E30F4", VA = "0x23E30F4", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C7")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0x23E30FC", Offset = "0x23E30FC", VA = "0x23E30FC", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0x23E3104", Offset = "0x23E3104", VA = "0x23E3104", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0x23E310C", Offset = "0x23E310C", VA = "0x23E310C", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x23E3138", Offset = "0x23E3138", VA = "0x23E3138", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CA")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x23E3140", Offset = "0x23E3140", VA = "0x23E3140", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x23E3148", Offset = "0x23E3148", VA = "0x23E3148", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x23E315C", Offset = "0x23E315C", VA = "0x23E315C", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CD")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x23E3164", Offset = "0x23E3164", VA = "0x23E3164", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CE")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x23E316C", Offset = "0x23E316C", VA = "0x23E316C", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x23E3174", Offset = "0x23E3174", VA = "0x23E3174", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0x23E317C", Offset = "0x23E317C", VA = "0x23E317C", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0x23E3184", Offset = "0x23E3184", VA = "0x23E3184", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x23E31A4", Offset = "0x23E31A4", VA = "0x23E31A4", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x23E31AC", Offset = "0x23E31AC", VA = "0x23E31AC", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x23E3028", Offset = "0x23E3028", VA = "0x23E3028", Slot = "11")]
		public bool GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x23E3030", Offset = "0x23E3030", VA = "0x23E3030", Slot = "12")]
		public double GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x23E3038", Offset = "0x23E3038", VA = "0x23E3038", Slot = "13")]
		public int GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x23E3040", Offset = "0x23E3040", VA = "0x23E3040", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x23E3048", Offset = "0x23E3048", VA = "0x23E3048", Slot = "15")]
		public long GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x23E3050", Offset = "0x23E3050", VA = "0x23E3050", Slot = "16")]
		public string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x23E3094", Offset = "0x23E3094", VA = "0x23E3094", Slot = "17")]
		public void SetBoolean(bool val)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x23E3098", Offset = "0x23E3098", VA = "0x23E3098", Slot = "18")]
		public void SetDouble(double val)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x23E309C", Offset = "0x23E309C", VA = "0x23E309C", Slot = "19")]
		public void SetInt(int val)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x23E30A0", Offset = "0x23E30A0", VA = "0x23E30A0", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x23E30A4", Offset = "0x23E30A4", VA = "0x23E30A4", Slot = "21")]
		public void SetLong(long val)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x23E30A8", Offset = "0x23E30A8", VA = "0x23E30A8", Slot = "22")]
		public void SetString(string val)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x23E30AC", Offset = "0x23E30AC", VA = "0x23E30AC", Slot = "23")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x23E30F0", Offset = "0x23E30F0", VA = "0x23E30F0", Slot = "24")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x23E3110", Offset = "0x23E3110", VA = "0x23E3110", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x23E3118", Offset = "0x23E3118", VA = "0x23E3118", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x23E311C", Offset = "0x23E311C", VA = "0x23E311C", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x23E3124", Offset = "0x23E3124", VA = "0x23E3124", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x23E312C", Offset = "0x23E312C", VA = "0x23E312C", Slot = "33")]
		private void System.Collections.IList.Insert(int i, object v)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x23E3130", Offset = "0x23E3130", VA = "0x23E3130", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x23E3134", Offset = "0x23E3134", VA = "0x23E3134", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x23E3150", Offset = "0x23E3150", VA = "0x23E3150", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x23E3154", Offset = "0x23E3154", VA = "0x23E3154", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x23E3188", Offset = "0x23E3188", VA = "0x23E3188", Slot = "51")]
		private void System.Collections.IDictionary.Add(object k, object v)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x23E318C", Offset = "0x23E318C", VA = "0x23E318C", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x23E3190", Offset = "0x23E3190", VA = "0x23E3190", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x23E3198", Offset = "0x23E3198", VA = "0x23E3198", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x23E319C", Offset = "0x23E319C", VA = "0x23E319C", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x23E31B0", Offset = "0x23E31B0", VA = "0x23E31B0", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x23E31B8", Offset = "0x23E31B8", VA = "0x23E31B8", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int i, object k, object v)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x23E31BC", Offset = "0x23E31BC", VA = "0x23E31BC", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int i)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x23E31C0", Offset = "0x23E31C0", VA = "0x23E31C0")]
		public JsonMockWrapper()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public enum JsonToken
	{
		[Token(Token = "0x4000E6C")]
		None,
		[Token(Token = "0x4000E6D")]
		ObjectStart,
		[Token(Token = "0x4000E6E")]
		PropertyName,
		[Token(Token = "0x4000E6F")]
		ObjectEnd,
		[Token(Token = "0x4000E70")]
		ArrayStart,
		[Token(Token = "0x4000E71")]
		ArrayEnd,
		[Token(Token = "0x4000E72")]
		Int,
		[Token(Token = "0x4000E73")]
		Long,
		[Token(Token = "0x4000E74")]
		Double,
		[Token(Token = "0x4000E75")]
		String,
		[Token(Token = "0x4000E76")]
		Boolean,
		[Token(Token = "0x4000E77")]
		Null
	}
	[Token(Token = "0x2000266")]
	public class JsonReader
	{
		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool skip_non_members;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x170000D2")]
		public bool AllowComments
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x23E31D0", Offset = "0x23E31D0", VA = "0x23E31D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0x23E31F0", Offset = "0x23E31F0", VA = "0x23E31F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x23E3214", Offset = "0x23E3214", VA = "0x23E3214")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0x23E3234", Offset = "0x23E3234", VA = "0x23E3234")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public bool SkipNonMembers
		{
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0x23E3258", Offset = "0x23E3258", VA = "0x23E3258")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x23E3260", Offset = "0x23E3260", VA = "0x23E3260")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public bool EndOfInput
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x23E326C", Offset = "0x23E326C", VA = "0x23E326C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D6")]
		public bool EndOfJson
		{
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0x23E3274", Offset = "0x23E3274", VA = "0x23E3274")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D7")]
		public JsonToken Token
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x23E327C", Offset = "0x23E327C", VA = "0x23E327C")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x170000D8")]
		public object Value
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0x23E3284", Offset = "0x23E3284", VA = "0x23E3284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x23E328C", Offset = "0x23E328C", VA = "0x23E328C")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x23E2DC4", Offset = "0x23E2DC4", VA = "0x23E2DC4")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x23E2B08", Offset = "0x23E2B08", VA = "0x23E2B08")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x23E3A5C", Offset = "0x23E3A5C", VA = "0x23E3A5C")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x23E32E4", Offset = "0x23E32E4", VA = "0x23E32E4")]
		private static IDictionary<int, IDictionary<int, int[]>> PopulateParseTable()
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x23E3CFC", Offset = "0x23E3CFC", VA = "0x23E3CFC")]
		private static void TableAddCol(IDictionary<int, IDictionary<int, int[]>> parse_table, ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x23E3C00", Offset = "0x23E3C00", VA = "0x23E3C00")]
		private static void TableAddRow(IDictionary<int, IDictionary<int, int[]>> parse_table, ParserToken rule)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x23E3E3C", Offset = "0x23E3E3C", VA = "0x23E3E3C")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x23E40D8", Offset = "0x23E40D8", VA = "0x23E40D8")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x23E42A0", Offset = "0x23E42A0", VA = "0x23E42A0")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x23E4304", Offset = "0x23E4304", VA = "0x23E4304")]
		public void Close()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x23DFC50", Offset = "0x23DFC50", VA = "0x23DFC50")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000267")]
	internal enum Condition
	{
		[Token(Token = "0x4000E88")]
		InArray,
		[Token(Token = "0x4000E89")]
		InObject,
		[Token(Token = "0x4000E8A")]
		NotAProperty,
		[Token(Token = "0x4000E8B")]
		Property,
		[Token(Token = "0x4000E8C")]
		Value
	}
	[Token(Token = "0x2000268")]
	internal class WriterContext
	{
		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1FE6098", Offset = "0x1FE6098", VA = "0x1FE6098")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class JsonWriter
	{
		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly NumberFormatInfo number_format;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool lower_case_properties;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x170000D9")]
		public int IndentValue
		{
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x23E43D8", Offset = "0x23E43D8", VA = "0x23E43D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x23E43E0", Offset = "0x23E43E0", VA = "0x23E43E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x23E43F4", Offset = "0x23E43F4", VA = "0x23E43F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x23E43FC", Offset = "0x23E43FC", VA = "0x23E43FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x23E4408", Offset = "0x23E4408", VA = "0x23E4408")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public bool Validate
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x23E4410", Offset = "0x23E4410", VA = "0x23E4410")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x23E4418", Offset = "0x23E4418", VA = "0x23E4418")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public bool LowerCaseProperties
		{
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x23E4424", Offset = "0x23E4424", VA = "0x23E4424")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x23E442C", Offset = "0x23E442C", VA = "0x23E442C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x23E4438", Offset = "0x23E4438", VA = "0x23E4438")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x23DAFC4", Offset = "0x23DAFC4", VA = "0x23DAFC4")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x23E45D0", Offset = "0x23E45D0", VA = "0x23E45D0")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x23DA788", Offset = "0x23DA788", VA = "0x23DA788")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x23E4640", Offset = "0x23E4640", VA = "0x23E4640")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x23E4494", Offset = "0x23E4494", VA = "0x23E4494")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x23E4808", Offset = "0x23E4808", VA = "0x23E4808")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x23E488C", Offset = "0x23E488C", VA = "0x23E488C")]
		private void Indent()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x23E48A4", Offset = "0x23E48A4", VA = "0x23E48A4")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x23E493C", Offset = "0x23E493C", VA = "0x23E493C")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x23E4944", Offset = "0x23E4944", VA = "0x23E4944")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x23E49E8", Offset = "0x23E49E8", VA = "0x23E49E8")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x23E4CF8", Offset = "0x23E4CF8", VA = "0x23E4CF8")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x23E4D10", Offset = "0x23E4D10", VA = "0x23E4D10", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x23E2680", Offset = "0x23E2680", VA = "0x23E2680")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x23D96F0", Offset = "0x23D96F0", VA = "0x23D96F0")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x23E4D7C", Offset = "0x23E4D7C", VA = "0x23E4D7C")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x23D9794", Offset = "0x23D9794", VA = "0x23D9794")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x23E2318", Offset = "0x23E2318", VA = "0x23E2318")]
		public void Write(float number)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x23D98EC", Offset = "0x23D98EC", VA = "0x23D98EC")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x23D99D4", Offset = "0x23D99D4", VA = "0x23D99D4")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x23D9658", Offset = "0x23D9658", VA = "0x23D9658")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x23E2408", Offset = "0x23E2408", VA = "0x23E2408")]
		[AttributeAttribute(Name = "CLSCompliantAttribute", RVA = "0xB2E038", Offset = "0xB2E038")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x23D9BB8", Offset = "0x23D9BB8", VA = "0x23D9BB8")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x23D9ABC", Offset = "0x23D9ABC", VA = "0x23D9ABC")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x23D9EFC", Offset = "0x23D9EFC", VA = "0x23D9EFC")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x23D9CBC", Offset = "0x23D9CBC", VA = "0x23D9CBC")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x23D9DB8", Offset = "0x23D9DB8", VA = "0x23D9DB8")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x200026A")]
	internal class FsmContext
	{
		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x28798EC", Offset = "0x28798EC", VA = "0x28798EC")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x200026B")]
	internal class Lexer
	{
		[Token(Token = "0x200026C")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] fsm_return_table;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly StateHandler[] fsm_handler_table;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x170000DE")]
		public bool AllowComments
		{
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0x251C8A4", Offset = "0x251C8A4", VA = "0x251C8A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0x251C8AC", Offset = "0x251C8AC", VA = "0x251C8AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x251C8B8", Offset = "0x251C8B8", VA = "0x251C8B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x251C8C0", Offset = "0x251C8C0", VA = "0x251C8C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public bool EndOfInput
		{
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0x251C8CC", Offset = "0x251C8CC", VA = "0x251C8CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E1")]
		public int Token
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x251C8D4", Offset = "0x251C8D4", VA = "0x251C8D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E2")]
		public string StringValue
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x251C8DC", Offset = "0x251C8DC", VA = "0x251C8DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x251C8E4", Offset = "0x251C8E4", VA = "0x251C8E4")]
		static Lexer()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x251D524", Offset = "0x251D524", VA = "0x251D524")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x251D628", Offset = "0x251D628", VA = "0x251D628")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x251C930", Offset = "0x251C930", VA = "0x251C930")]
		private static void PopulateFsmTables([Out] StateHandler[] fsm_handler_table, [Out] int[] fsm_return_table)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x251D6AC", Offset = "0x251D6AC", VA = "0x251D6AC")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x251D7A8", Offset = "0x251D7A8", VA = "0x251D7A8")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x251D9BC", Offset = "0x251D9BC", VA = "0x251D9BC")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x251DA64", Offset = "0x251DA64", VA = "0x251DA64")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x251DBA4", Offset = "0x251DBA4", VA = "0x251DBA4")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x251DCA4", Offset = "0x251DCA4", VA = "0x251DCA4")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x251DD28", Offset = "0x251DD28", VA = "0x251DD28")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x251DE28", Offset = "0x251DE28", VA = "0x251DE28")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x251DEC0", Offset = "0x251DEC0", VA = "0x251DEC0")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x251DF80", Offset = "0x251DF80", VA = "0x251DF80")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x251DFF0", Offset = "0x251DFF0", VA = "0x251DFF0")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x251E060", Offset = "0x251E060", VA = "0x251E060")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x251E0D0", Offset = "0x251E0D0", VA = "0x251E0D0")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x251E140", Offset = "0x251E140", VA = "0x251E140")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x251E1B0", Offset = "0x251E1B0", VA = "0x251E1B0")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x251E220", Offset = "0x251E220", VA = "0x251E220")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x251E290", Offset = "0x251E290", VA = "0x251E290")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x251E300", Offset = "0x251E300", VA = "0x251E300")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x251E370", Offset = "0x251E370", VA = "0x251E370")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x251E3E0", Offset = "0x251E3E0", VA = "0x251E3E0")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x251E48C", Offset = "0x251E48C", VA = "0x251E48C")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x251E4FC", Offset = "0x251E4FC", VA = "0x251E4FC")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x251E648", Offset = "0x251E648", VA = "0x251E648")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x251E7D4", Offset = "0x251E7D4", VA = "0x251E7D4")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x251E880", Offset = "0x251E880", VA = "0x251E880")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x251E8F8", Offset = "0x251E8F8", VA = "0x251E8F8")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x251E978", Offset = "0x251E978", VA = "0x251E978")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x251E9E4", Offset = "0x251E9E4", VA = "0x251E9E4")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x251EA50", Offset = "0x251EA50", VA = "0x251EA50")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x251D984", Offset = "0x251D984", VA = "0x251D984")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x251EACC", Offset = "0x251EACC", VA = "0x251EACC")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x251EB08", Offset = "0x251EB08", VA = "0x251EB08")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x251DB98", Offset = "0x251DB98", VA = "0x251DB98")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x200026D")]
	internal enum ParserToken
	{
		[Token(Token = "0x4000EB1")]
		None = 65536,
		[Token(Token = "0x4000EB2")]
		Number,
		[Token(Token = "0x4000EB3")]
		True,
		[Token(Token = "0x4000EB4")]
		False,
		[Token(Token = "0x4000EB5")]
		Null,
		[Token(Token = "0x4000EB6")]
		CharSeq,
		[Token(Token = "0x4000EB7")]
		Char,
		[Token(Token = "0x4000EB8")]
		Text,
		[Token(Token = "0x4000EB9")]
		Object,
		[Token(Token = "0x4000EBA")]
		ObjectPrime,
		[Token(Token = "0x4000EBB")]
		Pair,
		[Token(Token = "0x4000EBC")]
		PairRest,
		[Token(Token = "0x4000EBD")]
		Array,
		[Token(Token = "0x4000EBE")]
		ArrayPrime,
		[Token(Token = "0x4000EBF")]
		Value,
		[Token(Token = "0x4000EC0")]
		ValueRest,
		[Token(Token = "0x4000EC1")]
		String,
		[Token(Token = "0x4000EC2")]
		End,
		[Token(Token = "0x4000EC3")]
		Epsilon
	}
}
namespace BrainFailProductions.PolyFew
{
	[Token(Token = "0x200026E")]
	[ExecuteInEditMode]
	public class RefreshEnforcer : MonoBehaviour
	{
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x20C28B0", Offset = "0x20C28B0", VA = "0x20C28B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x20C291C", Offset = "0x20C291C", VA = "0x20C291C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x20C2920", Offset = "0x20C2920", VA = "0x20C2920")]
		public RefreshEnforcer()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public static class SystemServices
	{
		[Serializable]
		[Token(Token = "0x2000270")]
		public struct RegexPatterns
		{
			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string netError;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string nullOrEmpty;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string generalError;

			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string apiMistmatch;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string parametersMismatch;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string nothing;
		}

		[Token(Token = "0x2000271")]
		public struct MessagePatternPair
		{
			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB253D0", Offset = "0xB253D0")]
			private string <patternAppended>k__BackingField;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB253E0", Offset = "0xB253E0")]
			private string <parsedMessage>k__BackingField;

			[Token(Token = "0x170000E3")]
			public string patternAppended
			{
				[Token(Token = "0x6000C77")]
				[Address(RVA = "0x25AC22C", Offset = "0x25AC22C", VA = "0x25AC22C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E39C", Offset = "0xB2E39C")]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x6000C76")]
				[Address(RVA = "0x25AC224", Offset = "0x25AC224", VA = "0x25AC224")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E38C", Offset = "0xB2E38C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000E4")]
			public string parsedMessage
			{
				[Token(Token = "0x6000C79")]
				[Address(RVA = "0x25AC23C", Offset = "0x25AC23C", VA = "0x25AC23C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E3E4", Offset = "0xB2E3E4")]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x6000C78")]
				[Address(RVA = "0x25AC234", Offset = "0x25AC234", VA = "0x25AC234")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E3D4", Offset = "0xB2E3D4")]
				private set
				{
				}
			}

			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x25AC244", Offset = "0x25AC244", VA = "0x25AC244")]
			public MessagePatternPair(string patternAppended, string parsedMessage)
			{
			}
		}

		[Token(Token = "0x2000272")]
		public class HTTPMethod
		{
			[Token(Token = "0x2000273")]
			public enum HTTPMethods
			{
				[Token(Token = "0x4000ECF")]
				POST,
				[Token(Token = "0x4000ED0")]
				GET
			}

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string methodName;

			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x25AC100", Offset = "0x25AC100", VA = "0x25AC100")]
			public HTTPMethod(HTTPMethods method)
			{
			}
		}

		[Token(Token = "0x2000274")]
		public enum ImageFormat
		{
			[Token(Token = "0x4000ED2")]
			PNG,
			[Token(Token = "0x4000ED3")]
			JPG,
			[Token(Token = "0x4000ED4")]
			EXR
		}

		[Token(Token = "0x2000275")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB201BC", Offset = "0xB201BC")]
		private sealed class <UnityAsyncGETRequest>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string encodedUrl;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int? timeout;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Dictionary<string, string> headers;

			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<string, long> callback;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x170000E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C7F")]
				[Address(RVA = "0x2011124", Offset = "0x2011124", VA = "0x2011124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C81")]
				[Address(RVA = "0x201116C", Offset = "0x201116C", VA = "0x201116C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x2010D30", Offset = "0x2010D30", VA = "0x2010D30")]
			[DebuggerHidden]
			public <UnityAsyncGETRequest>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0x2010D5C", Offset = "0x2010D5C", VA = "0x2010D5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0x2010D60", Offset = "0x2010D60", VA = "0x2010D60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C80")]
			[Address(RVA = "0x201112C", Offset = "0x201112C", VA = "0x201112C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000276")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB201CC", Offset = "0xB201CC")]
		private sealed class <UnityAsyncPOSTRequest>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string baseUrl;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int? timeout;

			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public byte[] data;

			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Dictionary<string, string> headers;

			[Token(Token = "0x4000EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<string, long> callback;

			[Token(Token = "0x4000EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x170000E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C85")]
				[Address(RVA = "0x20115F4", Offset = "0x20115F4", VA = "0x20115F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C87")]
				[Address(RVA = "0x201163C", Offset = "0x201163C", VA = "0x201163C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x2011174", Offset = "0x2011174", VA = "0x2011174")]
			[DebuggerHidden]
			public <UnityAsyncPOSTRequest>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x20111A0", Offset = "0x20111A0", VA = "0x20111A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x20111A4", Offset = "0x20111A4", VA = "0x20111A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x20115FC", Offset = "0x20115FC", VA = "0x20115FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000277")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB201DC", Offset = "0xB201DC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HttpWebRequest request;

			[Token(Token = "0x4000EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] postData;

			[Token(Token = "0x4000EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HttpWebResponse httpResponse;

			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x200E3F0", Offset = "0x200E3F0", VA = "0x200E3F0")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x200E3F8", Offset = "0x200E3F8", VA = "0x200E3F8")]
			internal void <SendHTTPRequestAsync>b__0()
			{
			}

			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x200E554", Offset = "0x200E554", VA = "0x200E554")]
			internal void <SendHTTPRequestAsync>b__1()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB201EC", Offset = "0xB201EC")]
		private struct <SendHTTPRequestAsync>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public byte[] postData;

			[Token(Token = "0x4000EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x4000EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string baseUrl;

			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<string, HttpStatusCode?> callback;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int? timeout;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public HTTPMethod requestMethod;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Dictionary<string, string> header;

			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Dictionary<string, string> requestParameters;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private byte[] <paramsData>5__2;

			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TaskAwaiter<Stream> <>u__2;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private TaskAwaiter<string> <>u__3;

			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x200F8D4", Offset = "0x200F8D4", VA = "0x200F8D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x2010D24", Offset = "0x2010D24", VA = "0x2010D24", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000279")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB201FC", Offset = "0xB201FC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HttpWebResponse httpResponse;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HttpWebRequest request;

			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x200E5FC", Offset = "0x200E5FC", VA = "0x200E5FC")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x200E604", Offset = "0x200E604", VA = "0x200E604")]
			internal void <AsyncResourceDownload>b__0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2020C", Offset = "0xB2020C")]
		private struct <AsyncResourceDownload>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass9_0 <>8__1;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string resourceUrl;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<byte[], string, HttpStatusCode?> callback;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int? timeout;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x200E95C", Offset = "0x200E95C", VA = "0x200E95C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x200F6E0", Offset = "0x200F6E0", VA = "0x200F6E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200027B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2021C", Offset = "0xB2021C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x200E2B0", Offset = "0x200E2B0", VA = "0x200E2B0")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x200E2B8", Offset = "0x200E2B8", VA = "0x200E2B8")]
			internal void <AsyncReachabilityCheck>b__0(string response, HttpStatusCode? statusCode)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200027C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2022C", Offset = "0xB2022C")]
		private struct <AsyncReachabilityCheck>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<bool> callback;

			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string testUrl;

			[Token(Token = "0x4000F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x200E6AC", Offset = "0x200E6AC", VA = "0x200E6AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x200E950", Offset = "0x200E950", VA = "0x200E950", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200027D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2023C", Offset = "0xB2023C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x200E350", Offset = "0x200E350", VA = "0x200E350")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x200E358", Offset = "0x200E358", VA = "0x200E358")]
			internal void <BlockingReachabilityCheck>b__0(string response, HttpStatusCode? statusCode)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200027E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2024C", Offset = "0xB2024C")]
		private struct <RunDelayedCommand>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int secs;

			[Token(Token = "0x4000F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action command;

			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x200F6EC", Offset = "0x200F6EC", VA = "0x200F6EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C98")]
			[Address(RVA = "0x200F8C8", Offset = "0x200F8C8", VA = "0x200F8C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200027F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2025C", Offset = "0xB2025C")]
		private struct <WriteTextureAsync>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImageFormat format;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D texture;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string fileName;

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string path;

			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<string> callback;

			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private byte[] <data>5__2;

			[Token(Token = "0x4000F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FileStream <fileStream>5__3;

			[Token(Token = "0x4000F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000C99")]
			[Address(RVA = "0x2011B40", Offset = "0x2011B40", VA = "0x2011B40", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x2012338", Offset = "0x2012338", VA = "0x2012338", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2026C", Offset = "0xB2026C")]
		private struct <WriteBytesAsync>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string fullPath;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public byte[] data;

			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<string> callback;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private FileStream <fileStream>5__2;

			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x2011644", Offset = "0x2011644", VA = "0x2011644", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x2011B34", Offset = "0x2011B34", VA = "0x2011B34", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RegexPatterns regexPatterns;

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x2049F30", Offset = "0x2049F30", VA = "0x2049F30")]
		private static void SetPatterns()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x204A074", Offset = "0x204A074", VA = "0x204A074")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E04C", Offset = "0xB2E04C")]
		public static IEnumerator UnityAsyncGETRequest(string encodedUrl, Action<string, long> callback, [Optional] int? timeout, [Optional] Dictionary<string, string> headers)
		{
			return null;
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x204A12C", Offset = "0x204A12C", VA = "0x204A12C")]
		public static void UnityBlockingGETRequest(string encodedUrl, Action<string, long> callback, [Optional] int? timeout, [Optional] Dictionary<string, string> headers)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x204A480", Offset = "0x204A480", VA = "0x204A480")]
		public static void UnityBlockingPOSTRequest(string baseUrl, Action<string, long> callback, byte[] data, [Optional] int? timeout, [Optional] Dictionary<string, string> headers)
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x204A860", Offset = "0x204A860", VA = "0x204A860")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E0B4", Offset = "0xB2E0B4")]
		public static IEnumerator UnityAsyncPOSTRequest(string baseUrl, Action<string, long> callback, byte[] data, [Optional] int? timeout, [Optional] Dictionary<string, string> headers)
		{
			return null;
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x204A934", Offset = "0x204A934", VA = "0x204A934")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E11C", Offset = "0xB2E11C")]
		public static Task SendHTTPRequestAsync(string baseUrl, HTTPMethod requestMethod, Action<string, HttpStatusCode?> callback, Dictionary<string, string> requestParameters, byte[] postData, string contentType, [Optional] int? timeout, [Optional] Dictionary<string, string> header)
		{
			return null;
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x204AAE8", Offset = "0x204AAE8", VA = "0x204AAE8")]
		public static void SendHTTPRequestBlocking(string baseUrl, HTTPMethod requestMethod, Action<string, HttpStatusCode?> callback, Dictionary<string, string> requestParameters, byte[] postData, string contentType, [Optional] int? timeout, [Optional] Dictionary<string, string> header)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x204B8AC", Offset = "0x204B8AC", VA = "0x204B8AC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E184", Offset = "0xB2E184")]
		public static Task AsyncResourceDownload(string resourceUrl, Action<byte[], string, HttpStatusCode?> callback, [Optional] int? timeout)
		{
			return null;
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x204BA04", Offset = "0x204BA04", VA = "0x204BA04")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E1EC", Offset = "0xB2E1EC")]
		public static Task AsyncReachabilityCheck(string testUrl, Action<bool> callback)
		{
			return null;
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x204BB4C", Offset = "0x204BB4C", VA = "0x204BB4C")]
		public static void BlockingReachabilityCheck(string url, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x204BC9C", Offset = "0x204BC9C", VA = "0x204BC9C")]
		public static MessagePatternPair ParseResponseMessage(string message)
		{
			return default(MessagePatternPair);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x204BFB4", Offset = "0x204BFB4", VA = "0x204BFB4")]
		public static bool IsSuccessStatusCode(long statusCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x204B67C", Offset = "0x204B67C", VA = "0x204B67C")]
		public static string GetQueryStringFromKeyValues(Dictionary<string, string> parameters)
		{
			return null;
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x204BFC4", Offset = "0x204BFC4", VA = "0x204BFC4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E254", Offset = "0xB2E254")]
		public static Task RunDelayedCommand(int secs, Action command)
		{
			return null;
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x204C0FC", Offset = "0x204C0FC", VA = "0x204C0FC")]
		public static byte[] ReadAllBytes(Stream source)
		{
			return null;
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x204C334", Offset = "0x204C334", VA = "0x204C334")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E2BC", Offset = "0xB2E2BC")]
		public static Task WriteTextureAsync(Texture2D texture, ImageFormat format, string fileName, string path, Action<string> callback)
		{
			return null;
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x204C4BC", Offset = "0x204C4BC", VA = "0x204C4BC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E324", Offset = "0xB2E324")]
		public static Task WriteBytesAsync(byte[] data, string fullPath, Action<string> callback)
		{
			return null;
		}
	}
}
namespace BrainFailProductions.PolyFew.AsImpL
{
	[Token(Token = "0x2000281")]
	public class DataSet
	{
		[Token(Token = "0x2000282")]
		public struct FaceIndices
		{
			[Token(Token = "0x4000F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int vertIdx;

			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int uvIdx;

			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int normIdx;
		}

		[Token(Token = "0x2000283")]
		public class ObjectData
		{
			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<FaceGroupData> faceGroups;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<FaceIndices> allFaces;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool hasNormals;

			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool hasColors;

			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x2345F2C", Offset = "0x2345F2C", VA = "0x2345F2C")]
			public ObjectData()
			{
			}
		}

		[Token(Token = "0x2000284")]
		public class FaceGroupData
		{
			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string materialName;

			[Token(Token = "0x4000F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<FaceIndices> faces;

			[Token(Token = "0x170000EB")]
			public bool IsEmpty
			{
				[Token(Token = "0x6000CAD")]
				[Address(RVA = "0x2345ED8", Offset = "0x2345ED8", VA = "0x2345ED8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x2345E4C", Offset = "0x2345E4C", VA = "0x2345E4C")]
			public FaceGroupData()
			{
			}
		}

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ObjectData> objectList;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector3> vertList;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector2> uvList;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector3> normalList;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Color> colorList;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int unnamedGroupIndex;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ObjectData currObjData;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FaceGroupData currGroup;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool noFaceDefined;

		[Token(Token = "0x170000E9")]
		public string CurrGroupName
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x220C924", Offset = "0x220C924", VA = "0x220C924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x220C984", Offset = "0x220C984", VA = "0x220C984")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x220C9D8", Offset = "0x220C9D8", VA = "0x220C9D8")]
		public static string GetFaceIndicesKey(FaceIndices fi)
		{
			return null;
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x220CBE0", Offset = "0x220CBE0", VA = "0x220CBE0")]
		public static string FixMaterialName(string mtlName)
		{
			return null;
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x220CC90", Offset = "0x220CC90", VA = "0x220CC90")]
		public DataSet()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x220CF4C", Offset = "0x220CF4C", VA = "0x220CF4C")]
		public void AddObject(string objectName)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x220D120", Offset = "0x220D120", VA = "0x220D120")]
		public void AddGroup(string groupName)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x220D2D0", Offset = "0x220D2D0", VA = "0x220D2D0")]
		public void AddMaterialName(string matName)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x220D384", Offset = "0x220D384", VA = "0x220D384")]
		public void AddVertex(Vector3 vertex)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x220D400", Offset = "0x220D400", VA = "0x220D400")]
		public void AddUV(Vector2 uv)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x220D46C", Offset = "0x220D46C", VA = "0x220D46C")]
		public void AddNormal(Vector3 normal)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x220D4E8", Offset = "0x220D4E8", VA = "0x220D4E8")]
		public void AddColor(Color color)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x220D580", Offset = "0x220D580", VA = "0x220D580")]
		public void AddFaceIndices(FaceIndices faceIdx)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x220D63C", Offset = "0x220D63C", VA = "0x220D63C")]
		public void PrintSummary()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class MaterialData
	{
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string materialName;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color ambientColor;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color diffuseColor;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color specularColor;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color emissiveColor;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float shininess;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float overallAlpha;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int illumType;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool hasReflectionTex;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string diffuseTexPath;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture2D diffuseTex;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string bumpTexPath;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D bumpTex;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string specularTexPath;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D specularTex;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string opacityTexPath;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Texture2D opacityTex;

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x21ABE84", Offset = "0x21ABE84", VA = "0x21ABE84")]
		public MaterialData()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class ModelUtil
	{
		[Token(Token = "0x2000287")]
		public enum MtlBlendMode
		{
			[Token(Token = "0x4000F41")]
			OPAQUE,
			[Token(Token = "0x4000F42")]
			CUTOUT,
			[Token(Token = "0x4000F43")]
			FADE,
			[Token(Token = "0x4000F44")]
			TRANSPARENT
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x21BC498", Offset = "0x21BC498", VA = "0x21BC498")]
		public static void SetupMaterialWithBlendMode(Material mtl, MtlBlendMode mode)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x21BC8A4", Offset = "0x21BC8A4", VA = "0x21BC8A4")]
		public static bool ScanTransparentPixels(Texture2D texture, MtlBlendMode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x21BCA6C", Offset = "0x21BCA6C", VA = "0x21BCA6C")]
		public static void DetectMtlBlendFadeOrCutout(float alpha, MtlBlendMode mode, bool noDoubt)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x21BCAB4", Offset = "0x21BCAB4", VA = "0x21BCAB4")]
		public static Texture2D HeightToNormalMap(Texture2D bumpMap, float amount = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x21BCE5C", Offset = "0x21BCE5C", VA = "0x21BCE5C")]
		private static int WrapInt(int pos, int boundary)
		{
			return default(int);
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x21BCE78", Offset = "0x21BCE78", VA = "0x21BCE78")]
		public ModelUtil()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class ObjectBuilder
	{
		[Token(Token = "0x2000289")]
		public class ProgressInfo
		{
			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int materialsLoaded;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int objectsLoaded;

			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int groupsLoaded;

			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numGroups;

			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x1FFD6F4", Offset = "0x1FFD6F4", VA = "0x1FFD6F4")]
			public ProgressInfo()
			{
			}
		}

		[Token(Token = "0x200028A")]
		private class BuildStatus
		{
			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool newObject;

			[Token(Token = "0x4000F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int objCount;

			[Token(Token = "0x4000F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int subObjCount;

			[Token(Token = "0x4000F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int idxCount;

			[Token(Token = "0x4000F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int grpIdx;

			[Token(Token = "0x4000F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int numGroups;

			[Token(Token = "0x4000F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int grpFaceIdx;

			[Token(Token = "0x4000F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int meshPartIdx;

			[Token(Token = "0x4000F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int totFaceIdxCount;

			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject currObjGameObject;

			[Token(Token = "0x4000F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal GameObject subObjParent;

			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x1FFD6E4", Offset = "0x1FFD6E4", VA = "0x1FFD6E4")]
			public BuildStatus()
			{
			}
		}

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ImportOptions buildOptions;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BuildStatus buildStatus;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DataSet currDataSet;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject currParentObj;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, Material> currMaterials;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<MaterialData> materialData;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int MAX_VERTICES_LIMIT_FOR_A_MESH;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int MAX_INDICES_LIMIT_FOR_A_MESH;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int MAX_VERT_COUNT;

		[Token(Token = "0x170000EC")]
		public Dictionary<string, Material> ImportedMaterials
		{
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x252B33C", Offset = "0x252B33C", VA = "0x252B33C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public int NumImportedMaterials
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x252B344", Offset = "0x252B344", VA = "0x252B344")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x252B3A0", Offset = "0x252B3A0", VA = "0x252B3A0")]
		public void InitBuildMaterials(List<MaterialData> materialData, bool hasColors)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x252B630", Offset = "0x252B630", VA = "0x252B630")]
		public bool BuildMaterials(ProgressInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x252C374", Offset = "0x252C374", VA = "0x252C374")]
		public void StartBuildObjectAsync(DataSet dataSet, GameObject parentObj, [Optional] Dictionary<string, Material> materials)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x252C3D8", Offset = "0x252C3D8", VA = "0x252C3D8")]
		public bool BuildObjectAsync(ProgressInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x252D10C", Offset = "0x252D10C", VA = "0x252D10C")]
		public static void Solve(Mesh origMesh)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x252D854", Offset = "0x252D854", VA = "0x252D854")]
		public static void BuildMeshCollider(GameObject targetObject, bool convex = false, bool isTrigger = false, bool inflateMesh = false, float skinWidth = 0.01f)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x252C454", Offset = "0x252C454", VA = "0x252C454")]
		protected bool BuildNextObject(GameObject parentObj, Dictionary<string, Material> mats)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x252DA74", Offset = "0x252DA74", VA = "0x252DA74")]
		private GameObject ImportSubObject(GameObject parentObj, DataSet.ObjectData objData, Dictionary<string, Material> mats)
		{
			return null;
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x252B820", Offset = "0x252B820", VA = "0x252B820")]
		private Material BuildMaterial(MaterialData md)
		{
			return null;
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x252D9C8", Offset = "0x252D9C8", VA = "0x252D9C8")]
		private bool Using32bitIndices()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x252EB44", Offset = "0x252EB44", VA = "0x252EB44")]
		public ObjectBuilder()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public static class Triangulator
	{
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x263D2BC", Offset = "0x263D2BC", VA = "0x263D2BC")]
		public static void Triangulate(DataSet dataSet, DataSet.FaceIndices[] face)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x263D5F4", Offset = "0x263D5F4", VA = "0x263D5F4")]
		public static Vector3 FindPlaneNormal(DataSet dataSet, DataSet.FaceIndices[] face)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200028C")]
	public class ImportOptions
	{
		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB253F0", Offset = "0xB253F0")]
		public bool zUp;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25428", Offset = "0xB25428")]
		public bool litDiffuse;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25460", Offset = "0xB25460")]
		public bool convertToDoubleSided;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25498", Offset = "0xB25498")]
		public float modelScaling;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB254D0", Offset = "0xB254D0")]
		public bool reuseLoaded;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25508", Offset = "0xB25508")]
		public bool inheritLayer;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25540", Offset = "0xB25540")]
		public bool buildColliders;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25578", Offset = "0xB25578")]
		public bool colliderConvex;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB255B0", Offset = "0xB255B0")]
		public bool colliderTrigger;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB255E8", Offset = "0xB255E8")]
		public bool use32bitIndices;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25620", Offset = "0xB25620")]
		public bool hideWhileLoading;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25658", Offset = "0xB25658")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB25658", Offset = "0xB25658")]
		public Vector3 localPosition;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB256B8", Offset = "0xB256B8")]
		public Vector3 localEulerAngles;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB256F0", Offset = "0xB256F0")]
		public Vector3 localScale;

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x23D40E4", Offset = "0x23D40E4", VA = "0x23D40E4")]
		public ImportOptions()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public abstract class Loader : MonoBehaviour
	{
		[Token(Token = "0x200028E")]
		protected struct BuildStats
		{
			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float texturesTime;

			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float materialsTime;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float objectsTime;
		}

		[Token(Token = "0x200028F")]
		protected struct Stats
		{
			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float modelParseTime;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float materialsParseTime;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float buildTime;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public BuildStats buildStats;

			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float totalTime;
		}

		[StructLayout(3)]
		[Token(Token = "0x2000290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2027C", Offset = "0xB2027C")]
		private struct <Load>d__33 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<GameObject> <>t__builder;

			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string objAbsolutePath;

			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string objName;

			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Loader <>4__this;

			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string texturesFolderPath;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string materialsFolderPath;

			[Token(Token = "0x4000F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform parentObj;

			[Token(Token = "0x4000F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <lastTime>5__2;

			[Token(Token = "0x4000F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <startTime>5__3;

			[Token(Token = "0x4000F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x4000F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x234E7C4", Offset = "0x234E7C4", VA = "0x234E7C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x234F014", Offset = "0x234F014", VA = "0x234F014", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000291")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2028C", Offset = "0xB2028C")]
		private struct <LoadFromNetwork>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<GameObject> <>t__builder;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string objName;

			[Token(Token = "0x4000F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Loader <>4__this;

			[Token(Token = "0x4000F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string objURL;

			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string materialURL;

			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string diffuseTexURL;

			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string bumpTexURL;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string specularTexURL;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string opacityTexURL;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <lastTime>5__2;

			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float <startTime>5__3;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x234F070", Offset = "0x234F070", VA = "0x234F070", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x234FA98", Offset = "0x234FA98", VA = "0x234FA98", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000292")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2029C", Offset = "0xB2029C")]
		private sealed class <LoadFromNetworkWebGL>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string objName;

			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Loader <>4__this;

			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string objURL;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<Exception> OnError;

			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string materialURL;

			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string diffuseTexURL;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string bumpTexURL;

			[Token(Token = "0x4000FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string specularTexURL;

			[Token(Token = "0x4000FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string opacityTexURL;

			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Action<GameObject> OnSuccess;

			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private float <lastTime>5__2;

			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private float <startTime>5__3;

			[Token(Token = "0x170000F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CF7")]
				[Address(RVA = "0x23500EC", Offset = "0x23500EC", VA = "0x23500EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CF9")]
				[Address(RVA = "0x2350134", Offset = "0x2350134", VA = "0x2350134", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x234FAF4", Offset = "0x234FAF4", VA = "0x234FAF4")]
			[DebuggerHidden]
			public <LoadFromNetworkWebGL>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x234FB20", Offset = "0x234FB20", VA = "0x234FB20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0x234FB24", Offset = "0x234FB24", VA = "0x234FB24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x23500F4", Offset = "0x23500F4", VA = "0x23500F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000293")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB202AC", Offset = "0xB202AC")]
		private struct <Build>d__43 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Loader <>4__this;

			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string absolutePath;

			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string texturesFolderPath;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string objName;

			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform parentTransform;

			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <prevTime>5__2;

			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string <basePath>5__3;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <count>5__4;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private List<MaterialData>.Enumerator <>7__wrap4;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private MaterialData <mtl>5__6;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0x234CAE0", Offset = "0x234CAE0", VA = "0x234CAE0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x234D890", Offset = "0x234D890", VA = "0x234D890", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB202BC", Offset = "0xB202BC")]
		private struct <NetworkedBuild>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Loader <>4__this;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string diffuseTexURL;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string bumpTexURL;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string specularTexURL;

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string opacityTexURL;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string objName;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform parentTransform;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string objURL;

			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <prevTime>5__2;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private ObjectBuilder.ProgressInfo <info>5__3;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private float <objInitPerc>5__4;

			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private GameObject <newObj>5__5;

			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private float <initProgress>5__6;

			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private int <count>5__7;

			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<MaterialData>.Enumerator <>7__wrap7;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private MaterialData <mtl>5__9;

			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x23515C0", Offset = "0x23515C0", VA = "0x23515C0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x2352A20", Offset = "0x2352A20", VA = "0x2352A20", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB202CC", Offset = "0xB202CC")]
		private sealed class <NetworkedBuildWebGL>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Loader <>4__this;

			[Token(Token = "0x4000FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string diffuseTexURL;

			[Token(Token = "0x4000FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string bumpTexURL;

			[Token(Token = "0x4000FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string specularTexURL;

			[Token(Token = "0x4000FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string opacityTexURL;

			[Token(Token = "0x4000FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string objName;

			[Token(Token = "0x4000FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform parentTransform;

			[Token(Token = "0x4000FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string objURL;

			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <prevTime>5__2;

			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <count>5__3;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private List<MaterialData>.Enumerator <>7__wrap3;

			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private MaterialData <mtl>5__5;

			[Token(Token = "0x170000F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D02")]
				[Address(RVA = "0x23537B0", Offset = "0x23537B0", VA = "0x23537B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D04")]
				[Address(RVA = "0x23537F8", Offset = "0x23537F8", VA = "0x23537F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x2352A2C", Offset = "0x2352A2C", VA = "0x2352A2C")]
			[DebuggerHidden]
			public <NetworkedBuildWebGL>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x2352A58", Offset = "0x2352A58", VA = "0x2352A58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x2352AD4", Offset = "0x2352AD4", VA = "0x2352AD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x2352A78", Offset = "0x2352A78", VA = "0x2352A78")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x23537B8", Offset = "0x23537B8", VA = "0x23537B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB202DC", Offset = "0xB202DC")]
		private struct <LoadMaterialTexture>d__51 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Loader <>4__this;

			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string texturesFolderPath;

			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string basePath;

			[Token(Token = "0x4000FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string path;

			[Token(Token = "0x4000FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private byte[] <result>5__2;

			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private FileStream <stream>5__3;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<int> <>u__1;

			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x235013C", Offset = "0x235013C", VA = "0x235013C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D06")]
			[Address(RVA = "0x2350938", Offset = "0x2350938", VA = "0x2350938", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000297")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB202EC", Offset = "0xB202EC")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isWorking;

			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] downloadedBytes;

			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x234C8FC", Offset = "0x234C8FC", VA = "0x234C8FC")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x234C904", Offset = "0x234C904", VA = "0x234C904")]
			internal void <LoadMaterialTexture>b__0(byte[] bytes)
			{
			}

			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x234C910", Offset = "0x234C910", VA = "0x234C910")]
			internal void <LoadMaterialTexture>b__1(string error)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB202FC", Offset = "0xB202FC")]
		private struct <LoadMaterialTexture>d__52 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Loader <>4__this;

			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string textureURL;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass52_0 <>8__1;

			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x2350944", Offset = "0x2350944", VA = "0x2350944", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x2351058", Offset = "0x2351058", VA = "0x2351058", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000299")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2030C", Offset = "0xB2030C")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isWorking;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Loader <>4__this;

			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x234C9E0", Offset = "0x234C9E0", VA = "0x234C9E0")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x234C9E8", Offset = "0x234C9E8", VA = "0x234C9E8")]
			internal void <LoadMaterialTextureWebGL>b__0(Texture2D texture)
			{
			}

			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x234CA10", Offset = "0x234CA10", VA = "0x234CA10")]
			internal void <LoadMaterialTextureWebGL>b__1(string error)
			{
			}
		}

		[Token(Token = "0x200029A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2031C", Offset = "0xB2031C")]
		private sealed class <LoadMaterialTextureWebGL>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Loader <>4__this;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string textureURL;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass53_0 <>8__1;

			[Token(Token = "0x170000F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D12")]
				[Address(RVA = "0x2351570", Offset = "0x2351570", VA = "0x2351570", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D14")]
				[Address(RVA = "0x23515B8", Offset = "0x23515B8", VA = "0x23515B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x2351064", Offset = "0x2351064", VA = "0x2351064")]
			[DebuggerHidden]
			public <LoadMaterialTextureWebGL>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x2351090", Offset = "0x2351090", VA = "0x2351090", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x2351094", Offset = "0x2351094", VA = "0x2351094", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x2351578", Offset = "0x2351578", VA = "0x2351578", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200029B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2032C", Offset = "0xB2032C")]
		private sealed class <DownloadFile>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolyfewRuntime.ReferencedNumeric<float> downloadProgress;

			[Token(Token = "0x4000FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x4000FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<string> OnError;

			[Token(Token = "0x4000FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Loader <>4__this;

			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<byte[]> DownloadComplete;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private WWW <www>5__2;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <oldProgress>5__3;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Coroutine <progress>5__4;

			[Token(Token = "0x170000F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D18")]
				[Address(RVA = "0x234DC60", Offset = "0x234DC60", VA = "0x234DC60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D1A")]
				[Address(RVA = "0x234DCA8", Offset = "0x234DCA8", VA = "0x234DCA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x234D89C", Offset = "0x234D89C", VA = "0x234D89C")]
			[DebuggerHidden]
			public <DownloadFile>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x234D8C8", Offset = "0x234D8C8", VA = "0x234D8C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x234D8CC", Offset = "0x234D8CC", VA = "0x234D8CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x234DC68", Offset = "0x234DC68", VA = "0x234DC68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200029C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2033C", Offset = "0xB2033C")]
		private sealed class <GetProgress>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolyfewRuntime.ReferencedNumeric<float> downloadProgress;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WWW www;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <oldProgress>5__2;

			[Token(Token = "0x170000F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D1E")]
				[Address(RVA = "0x234E774", Offset = "0x234E774", VA = "0x234E774", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D20")]
				[Address(RVA = "0x234E7BC", Offset = "0x234E7BC", VA = "0x234E7BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x234E52C", Offset = "0x234E52C", VA = "0x234E52C")]
			[DebuggerHidden]
			public <GetProgress>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x234E558", Offset = "0x234E558", VA = "0x234E558", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x234E55C", Offset = "0x234E55C", VA = "0x234E55C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x234E77C", Offset = "0x234E77C", VA = "0x234E77C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200029D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2034C", Offset = "0xB2034C")]
		private sealed class <DownloadFileWebGL>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolyfewRuntime.ReferencedNumeric<float> downloadProgress;

			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<string> OnError;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Loader <>4__this;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<string> DownloadComplete;

			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private WWW <www>5__2;

			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <oldProgress>5__3;

			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Coroutine <progress>5__4;

			[Token(Token = "0x170000FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D24")]
				[Address(RVA = "0x234E0C8", Offset = "0x234E0C8", VA = "0x234E0C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D26")]
				[Address(RVA = "0x234E110", Offset = "0x234E110", VA = "0x234E110", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x234DCB0", Offset = "0x234DCB0", VA = "0x234DCB0")]
			[DebuggerHidden]
			public <DownloadFileWebGL>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x234DCDC", Offset = "0x234DCDC", VA = "0x234DCDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x234DCE0", Offset = "0x234DCE0", VA = "0x234DCE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x234E0D0", Offset = "0x234E0D0", VA = "0x234E0D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200029E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2035C", Offset = "0xB2035C")]
		private sealed class <DownloadTexFileWebGL>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400100C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400100D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400100E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolyfewRuntime.ReferencedNumeric<float> downloadProgress;

			[Token(Token = "0x400100F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x4001010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<string> OnError;

			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Loader <>4__this;

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<Texture2D> DownloadComplete;

			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private WWW <www>5__2;

			[Token(Token = "0x4001014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <oldProgress>5__3;

			[Token(Token = "0x4001015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Coroutine <progress>5__4;

			[Token(Token = "0x170000FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D2A")]
				[Address(RVA = "0x234E4DC", Offset = "0x234E4DC", VA = "0x234E4DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D2C")]
				[Address(RVA = "0x234E524", Offset = "0x234E524", VA = "0x234E524", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x234E118", Offset = "0x234E118", VA = "0x234E118")]
			[DebuggerHidden]
			public <DownloadTexFileWebGL>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x234E144", Offset = "0x234E144", VA = "0x234E144", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x234E148", Offset = "0x234E148", VA = "0x234E148", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x234E4E4", Offset = "0x234E4E4", VA = "0x234E4E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LoadingProgress totalProgress;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImportOptions buildOptions;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PolyfewRuntime.ReferencedNumeric<float> individualProgress;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static float LOAD_PHASE_PERC;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected static float TEXTURE_PHASE_PERC;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static float MATERIAL_PHASE_PERC;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected static float BUILD_PHASE_PERC;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static Dictionary<string, GameObject> loadedModels;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static Dictionary<string, int> instanceCount;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected DataSet dataSet;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected ObjectBuilder objectBuilder;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<MaterialData> materialData;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected SingleLoadingProgress objLoadingProgress;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Stats loadStats;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Texture2D loadedTexture;

		[Token(Token = "0x170000EE")]
		public bool ConvertVertAxis
		{
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0x251FB1C", Offset = "0x251FB1C", VA = "0x251FB1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0x251FB3C", Offset = "0x251FB3C", VA = "0x251FB3C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public float Scaling
		{
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0x251FBCC", Offset = "0x251FBCC", VA = "0x251FBCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x251FBE4", Offset = "0x251FBE4", VA = "0x251FBE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		protected abstract bool HasMaterialLibrary
		{
			[Token(Token = "0x6000CCC")]
			get;
		}

		[Token(Token = "0x1400001E")]
		public event Action<GameObject, string> ModelCreated
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x251FC70", Offset = "0x251FC70", VA = "0x251FC70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E51C", Offset = "0xB2E51C")]
			add
			{
			}
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x251FD10", Offset = "0x251FD10", VA = "0x251FD10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E52C", Offset = "0xB2E52C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<GameObject, string> ModelLoaded
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x251FDB0", Offset = "0x251FDB0", VA = "0x251FDB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E53C", Offset = "0xB2E53C")]
			add
			{
			}
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x251FE50", Offset = "0x251FE50", VA = "0x251FE50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E54C", Offset = "0xB2E54C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action<string> ModelError
		{
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x251FEF0", Offset = "0x251FEF0", VA = "0x251FEF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E55C", Offset = "0xB2E55C")]
			add
			{
			}
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x251FF90", Offset = "0x251FF90", VA = "0x251FF90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E56C", Offset = "0xB2E56C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x2520030", Offset = "0x2520030", VA = "0x2520030")]
		public static GameObject GetModelByPath(string absolutePath)
		{
			return null;
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x2520124", Offset = "0x2520124", VA = "0x2520124")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E57C", Offset = "0xB2E57C")]
		public Task<GameObject> Load(string objName, string objAbsolutePath, Transform parentObj, string texturesFolderPath = "", string materialsFolderPath = "")
		{
			return null;
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x25202F0", Offset = "0x25202F0", VA = "0x25202F0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E5E4", Offset = "0xB2E5E4")]
		public Task<GameObject> LoadFromNetwork(string objURL, string diffuseTexURL, string bumpTexURL, string specularTexURL, string opacityTexURL, string materialURL, string objName)
		{
			return null;
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x25204EC", Offset = "0x25204EC", VA = "0x25204EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E64C", Offset = "0xB2E64C")]
		public IEnumerator LoadFromNetworkWebGL(string objURL, string diffuseTexURL, string bumpTexURL, string specularTexURL, string opacityTexURL, string materialURL, string objName, Action<GameObject> OnSuccess, Action<Exception> OnError)
		{
			return null;
		}

		[Token(Token = "0x6000CD7")]
		public abstract string[] ParseTexturePaths(string absolutePath);

		[Token(Token = "0x6000CD8")]
		protected abstract Task LoadModelFile(string absolutePath, string texturesFolderPath = "", string materialsFolderPath = "");

		[Token(Token = "0x6000CD9")]
		protected abstract Task LoadModelFileNetworked(string objURL);

		[Token(Token = "0x6000CDA")]
		protected abstract IEnumerator LoadModelFileNetworkedWebGL(string objURL, Action<Exception> OnError);

		[Token(Token = "0x6000CDB")]
		protected abstract Task LoadMaterialLibrary(string absolutePath, string materialsFolderPath = "");

		[Token(Token = "0x6000CDC")]
		protected abstract Task LoadMaterialLibrary(string materialURL);

		[Token(Token = "0x6000CDD")]
		protected abstract IEnumerator LoadMaterialLibraryWebGL(string materialURL);

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x252063C", Offset = "0x252063C", VA = "0x252063C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E6B4", Offset = "0xB2E6B4")]
		protected Task Build(string absolutePath, string objName, Transform parentTransform, string texturesFolderPath = "")
		{
			return null;
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x25207CC", Offset = "0x25207CC", VA = "0x25207CC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E71C", Offset = "0xB2E71C")]
		protected Task NetworkedBuild(Transform parentTransform, string objName, string objURL, string diffuseTexURL, string bumpTexURL, string specularTexURL, string opacityTexURL)
		{
			return null;
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x2520994", Offset = "0x2520994", VA = "0x2520994")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E784", Offset = "0xB2E784")]
		protected IEnumerator NetworkedBuildWebGL(Transform parentTransform, string objName, string objURL, string diffuseTexURL, string bumpTexURL, string specularTexURL, string opacityTexURL)
		{
			return null;
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x2520AB8", Offset = "0x2520AB8", VA = "0x2520AB8")]
		protected string GetDirName(string absolutePath)
		{
			return null;
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x2520BEC", Offset = "0x2520BEC", VA = "0x2520BEC", Slot = "12")]
		protected virtual void OnLoaded(GameObject obj, string absolutePath)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x2520EB8", Offset = "0x2520EB8", VA = "0x2520EB8", Slot = "13")]
		protected virtual void OnCreated(GameObject obj, string absolutePath)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x2520FB4", Offset = "0x2520FB4", VA = "0x2520FB4", Slot = "14")]
		protected virtual void OnLoadFailed(string absolutePath)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x2521024", Offset = "0x2521024", VA = "0x2521024")]
		private string GetTextureUrl(string basePath, string texturePath)
		{
			return null;
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x25211B0", Offset = "0x25211B0", VA = "0x25211B0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E7EC", Offset = "0xB2E7EC")]
		private Task LoadMaterialTexture(string basePath, string path, string texturesFolderPath = "")
		{
			return null;
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x2521334", Offset = "0x2521334", VA = "0x2521334")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2E854", Offset = "0xB2E854")]
		private Task LoadMaterialTexture(string textureURL)
		{
			return null;
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x2521478", Offset = "0x2521478", VA = "0x2521478")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E8BC", Offset = "0xB2E8BC")]
		private IEnumerator LoadMaterialTextureWebGL(string textureURL)
		{
			return null;
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x252150C", Offset = "0x252150C", VA = "0x252150C")]
		private Texture2D LoadTexture(UnityWebRequest loader)
		{
			return null;
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x25217DC", Offset = "0x25217DC", VA = "0x25217DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E924", Offset = "0xB2E924")]
		public IEnumerator DownloadFile(string url, PolyfewRuntime.ReferencedNumeric<float> downloadProgress, Action<byte[]> DownloadComplete, Action<string> OnError)
		{
			return null;
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x25218BC", Offset = "0x25218BC", VA = "0x25218BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E98C", Offset = "0xB2E98C")]
		private IEnumerator GetProgress(WWW www, PolyfewRuntime.ReferencedNumeric<float> downloadProgress)
		{
			return null;
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x2521950", Offset = "0x2521950", VA = "0x2521950")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2E9F4", Offset = "0xB2E9F4")]
		public IEnumerator DownloadFileWebGL(string url, PolyfewRuntime.ReferencedNumeric<float> downloadProgress, Action<string> DownloadComplete, Action<string> OnError)
		{
			return null;
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x2521A30", Offset = "0x2521A30", VA = "0x2521A30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2EA5C", Offset = "0xB2EA5C")]
		public IEnumerator DownloadTexFileWebGL(string url, PolyfewRuntime.ReferencedNumeric<float> downloadProgress, Action<Texture2D> DownloadComplete, Action<string> OnError)
		{
			return null;
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x2521B10", Offset = "0x2521B10", VA = "0x2521B10")]
		protected Loader()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class LoaderObj : Loader
	{
		[Token(Token = "0x20002A0")]
		private class BumpParamDef
		{
			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string optionName;

			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string valueType;

			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int valueNumMin;

			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int valueNumMax;

			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x23568A4", Offset = "0x23568A4", VA = "0x23568A4")]
			public BumpParamDef(string name, string type, int numMin, int numMax)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2036C", Offset = "0xB2036C")]
		private struct <LoadModelFile>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x400101C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400101D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string absolutePath;

			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoaderObj <>4__this;

			[Token(Token = "0x4001020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private StreamReader <sr>5__2;

			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x2354F58", Offset = "0x2354F58", VA = "0x2354F58", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x2355440", Offset = "0x2355440", VA = "0x2355440", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2037C", Offset = "0xB2037C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isWorking;

			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] downloadedBytes;

			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Exception ex;

			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x2353800", Offset = "0x2353800", VA = "0x2353800")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x2353808", Offset = "0x2353808", VA = "0x2353808")]
			internal void <LoadModelFileNetworked>b__0(byte[] bytes)
			{
			}

			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x2353814", Offset = "0x2353814", VA = "0x2353814")]
			internal void <LoadModelFileNetworked>b__1(string error)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2038C", Offset = "0xB2038C")]
		private struct <LoadModelFileNetworked>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoaderObj <>4__this;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string objURL;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass4_0 <>8__1;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private StreamReader <sr>5__2;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<string> <>u__2;

			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x235544C", Offset = "0x235544C", VA = "0x235544C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x2355F80", Offset = "0x2355F80", VA = "0x2355F80", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20002A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2039C", Offset = "0xB2039C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isWorking;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LoaderObj <>4__this;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Exception ex;

			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Exception> OnError;

			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x23538EC", Offset = "0x23538EC", VA = "0x23538EC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x23538F4", Offset = "0x23538F4", VA = "0x23538F4")]
			internal void <LoadModelFileNetworkedWebGL>b__0(string text)
			{
			}

			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x235391C", Offset = "0x235391C", VA = "0x235391C")]
			internal void <LoadModelFileNetworkedWebGL>b__1(string error)
			{
			}
		}

		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB203AC", Offset = "0xB203AC")]
		private sealed class <LoadModelFileNetworkedWebGL>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoaderObj <>4__this;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Exception> OnError;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string objURL;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x17000100")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D4E")]
				[Address(RVA = "0x2356664", Offset = "0x2356664", VA = "0x2356664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000101")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D50")]
				[Address(RVA = "0x23566AC", Offset = "0x23566AC", VA = "0x23566AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x2355F8C", Offset = "0x2355F8C", VA = "0x2355F8C")]
			[DebuggerHidden]
			public <LoadModelFileNetworkedWebGL>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x2355FB8", Offset = "0x2355FB8", VA = "0x2355FB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x2355FBC", Offset = "0x2355FBC", VA = "0x2355FBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x235666C", Offset = "0x235666C", VA = "0x235666C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB203BC", Offset = "0xB203BC")]
		private struct <LoadMaterialLibrary>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoaderObj <>4__this;

			[Token(Token = "0x400103A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string absolutePath;

			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string materialsFolderPath;

			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private StreamReader <sr>5__2;

			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x2353C18", Offset = "0x2353C18", VA = "0x2353C18", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x2354254", Offset = "0x2354254", VA = "0x2354254", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB203CC", Offset = "0xB203CC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isWorking;

			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] downloadedBytes;

			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x2353A34", Offset = "0x2353A34", VA = "0x2353A34")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x2353A3C", Offset = "0x2353A3C", VA = "0x2353A3C")]
			internal void <LoadMaterialLibrary>b__0(byte[] bytes)
			{
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0x2353A48", Offset = "0x2353A48", VA = "0x2353A48")]
			internal void <LoadMaterialLibrary>b__1(string error)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB203DC", Offset = "0xB203DC")]
		private struct <LoadMaterialLibrary>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoaderObj <>4__this;

			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string materialURL;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private StreamReader <sr>5__2;

			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<string> <>u__2;

			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x2354260", Offset = "0x2354260", VA = "0x2354260", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0x2354BE0", Offset = "0x2354BE0", VA = "0x2354BE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB203EC", Offset = "0xB203EC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isWorking;

			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LoaderObj <>4__this;

			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x2353B18", Offset = "0x2353B18", VA = "0x2353B18")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x2353B20", Offset = "0x2353B20", VA = "0x2353B20")]
			internal void <LoadMaterialLibraryWebGL>b__0(string text)
			{
			}

			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x2353B48", Offset = "0x2353B48", VA = "0x2353B48")]
			internal void <LoadMaterialLibraryWebGL>b__1(string error)
			{
			}
		}

		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB203FC", Offset = "0xB203FC")]
		private sealed class <LoadMaterialLibraryWebGL>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoaderObj <>4__this;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string materialURL;

			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass8_0 <>8__1;

			[Token(Token = "0x17000102")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D5E")]
				[Address(RVA = "0x2354F08", Offset = "0x2354F08", VA = "0x2354F08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000103")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D60")]
				[Address(RVA = "0x2354F50", Offset = "0x2354F50", VA = "0x2354F50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x2354BEC", Offset = "0x2354BEC", VA = "0x2354BEC")]
			[DebuggerHidden]
			public <LoadMaterialLibraryWebGL>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x2354C18", Offset = "0x2354C18", VA = "0x2354C18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x2354C1C", Offset = "0x2354C1C", VA = "0x2354C1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x2354F10", Offset = "0x2354F10", VA = "0x2354F10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2040C", Offset = "0xB2040C")]
		private sealed class <LoadOrDownloadText>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400104F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoaderObj <>4__this;

			[Token(Token = "0x4001052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool notifyErrors;

			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <uwr>5__2;

			[Token(Token = "0x17000104")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D64")]
				[Address(RVA = "0x2356854", Offset = "0x2356854", VA = "0x2356854", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000105")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D66")]
				[Address(RVA = "0x235689C", Offset = "0x235689C", VA = "0x235689C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x23566B4", Offset = "0x23566B4", VA = "0x23566B4")]
			[DebuggerHidden]
			public <LoadOrDownloadText>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x23566E0", Offset = "0x23566E0", VA = "0x23566E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D63")]
			[Address(RVA = "0x23566E4", Offset = "0x23566E4", VA = "0x23566E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D65")]
			[Address(RVA = "0x235685C", Offset = "0x235685C", VA = "0x235685C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string mtlLib;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string loadedText;

		[Token(Token = "0x170000FF")]
		protected override bool HasMaterialLibrary
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x25243AC", Offset = "0x25243AC", VA = "0x25243AC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x2521E40", Offset = "0x2521E40", VA = "0x2521E40", Slot = "5")]
		public override string[] ParseTexturePaths(string absolutePath)
		{
			return null;
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x2522FEC", Offset = "0x2522FEC", VA = "0x2522FEC", Slot = "6")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2ED54", Offset = "0xB2ED54")]
		protected override Task LoadModelFile(string absolutePath, string texturesFolderPath = "", string materialsFolderPath = "")
		{
			return null;
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x2523134", Offset = "0x2523134", VA = "0x2523134", Slot = "7")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2EDBC", Offset = "0xB2EDBC")]
		protected override Task LoadModelFileNetworked(string objURL)
		{
			return null;
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x2523274", Offset = "0x2523274", VA = "0x2523274", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2EE24", Offset = "0xB2EE24")]
		protected override IEnumerator LoadModelFileNetworkedWebGL(string objURL, Action<Exception> OnError)
		{
			return null;
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x2523324", Offset = "0x2523324", VA = "0x2523324", Slot = "9")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2EE8C", Offset = "0xB2EE8C")]
		protected override Task LoadMaterialLibrary(string absolutePath, string materialsFolderPath = "")
		{
			return null;
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x2523488", Offset = "0x2523488", VA = "0x2523488", Slot = "10")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2EEF4", Offset = "0xB2EEF4")]
		protected override Task LoadMaterialLibrary(string materialURL)
		{
			return null;
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x25235C8", Offset = "0x25235C8", VA = "0x25235C8", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2EF5C", Offset = "0xB2EF5C")]
		protected override IEnumerator LoadMaterialLibraryWebGL(string materialURL)
		{
			return null;
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x252365C", Offset = "0x252365C", VA = "0x252365C")]
		private void GetFaceIndicesByOneFaceLine(DataSet.FaceIndices[] faces, string[] p, bool isFaceIndexPlus)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x25239C8", Offset = "0x25239C8", VA = "0x25239C8")]
		private Vector3 ConvertVec3(float x, float y, float z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x2523A10", Offset = "0x2523A10", VA = "0x2523A10")]
		private float ParseFloat(string floatString)
		{
			return default(float);
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x2523AA0", Offset = "0x2523AA0", VA = "0x2523AA0")]
		protected void ParseGeometryData(string objDataText)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x2522140", Offset = "0x2522140", VA = "0x2522140")]
		private string ParseMaterialLibName(string path)
		{
			return null;
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x25243BC", Offset = "0x25243BC", VA = "0x25243BC")]
		private void ParseMaterialData(string data)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x2522268", Offset = "0x2522268", VA = "0x2522268")]
		private void ParseMaterialData(string[] lines, List<MaterialData> mtlData)
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x2524568", Offset = "0x2524568", VA = "0x2524568")]
		private void ParseBumpParameters(string[] param, MaterialData mtlData)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x25244C0", Offset = "0x25244C0", VA = "0x25244C0")]
		private Color StringsToColor(string[] p)
		{
			return default(Color);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x2524F98", Offset = "0x2524F98", VA = "0x2524F98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2EFC4", Offset = "0xB2EFC4")]
		private IEnumerator LoadOrDownloadText(string url, bool notifyErrors = true)
		{
			return null;
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x2525040", Offset = "0x2525040", VA = "0x2525040")]
		public LoaderObj()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class TextureLoader : MonoBehaviour
	{
		[Token(Token = "0x20002AD")]
		private class TgaHeader
		{
			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte identSize;

			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public byte colorMapType;

			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public byte imageType;

			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ushort colorMapStart;

			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
			public ushort colorMapLength;

			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte colorMapBits;

			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public ushort xStart;

			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ushort ySstart;

			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
			public ushort width;

			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ushort height;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public byte bits;

			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public byte descriptor;

			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x25ADCF0", Offset = "0x25ADCF0", VA = "0x25ADCF0")]
			public TgaHeader()
			{
			}
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x205165C", Offset = "0x205165C", VA = "0x205165C")]
		public static Texture2D LoadTextureFromUrl(string url)
		{
			return null;
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x2051710", Offset = "0x2051710", VA = "0x2051710")]
		public static Texture2D LoadTexture(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x2051CAC", Offset = "0x2051CAC", VA = "0x2051CAC")]
		public static Texture2D LoadTGA(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x2051914", Offset = "0x2051914", VA = "0x2051914")]
		public static Texture2D LoadDDSManual(string ddsPath)
		{
			return null;
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x2051DE4", Offset = "0x2051DE4", VA = "0x2051DE4")]
		public static Texture2D LoadTGA(Stream TGAStream)
		{
			return null;
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x2052388", Offset = "0x2052388", VA = "0x2052388")]
		private static TgaHeader LoadTgaHeader(BinaryReader r)
		{
			return null;
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x205278C", Offset = "0x205278C", VA = "0x205278C")]
		public TextureLoader()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class SingleLoadingProgress
	{
		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fileName;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string message;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float percentage;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numObjects;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int numSubObjects;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool error;

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x24A2864", Offset = "0x24A2864", VA = "0x24A2864")]
		public SingleLoadingProgress()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class LoadingProgress
	{
		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<SingleLoadingProgress> singleProgress;

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x2521DB4", Offset = "0x2521DB4", VA = "0x2521DB4")]
		public LoadingProgress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B0")]
	public class ModelImportInfo
	{
		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25758", Offset = "0xB25758")]
		public string name;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25790", Offset = "0xB25790")]
		public string path;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB257C8", Offset = "0xB257C8")]
		public bool skip;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ImportOptions loaderOptions;

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x21BC490", Offset = "0x21BC490", VA = "0x21BC490")]
		public ModelImportInfo()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class MultiObjectImporter : ObjectImporter
	{
		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25800", Offset = "0xB25800")]
		public bool autoLoadOnStart;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25838", Offset = "0xB25838")]
		public List<ModelImportInfo> objectsList;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25870", Offset = "0xB25870")]
		public ImportOptions defaultImportOptions;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private PathSettings pathSettings;

		[Token(Token = "0x17000106")]
		public string RootPath
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x2251E58", Offset = "0x2251E58", VA = "0x2251E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x2251F0C", Offset = "0x2251F0C", VA = "0x2251F0C")]
		public void ImportModelListAsync(ModelImportInfo[] modelsInfo)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x2252130", Offset = "0x2252130", VA = "0x2252130", Slot = "10")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x22521A4", Offset = "0x22521A4", VA = "0x22521A4")]
		public MultiObjectImporter()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class ObjectImporter : MonoBehaviour
	{
		[Token(Token = "0x20002B3")]
		private enum ImportPhase
		{
			[Token(Token = "0x4001081")]
			Idle,
			[Token(Token = "0x4001082")]
			TextureImport,
			[Token(Token = "0x4001083")]
			ObjLoad,
			[Token(Token = "0x4001084")]
			AssetBuild,
			[Token(Token = "0x4001085")]
			Done
		}

		[StructLayout(3)]
		[Token(Token = "0x20002B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2041C", Offset = "0xB2041C")]
		private struct <ImportModelAsync>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<GameObject> <>t__builder;

			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectImporter <>4__this;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filePath;

			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ImportOptions options;

			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string objName;

			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform parentObj;

			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string texturesFolderPath;

			[Token(Token = "0x400108E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string materialsFolderPath;

			[Token(Token = "0x400108F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<GameObject> <>u__1;

			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0x1FFD6FC", Offset = "0x1FFD6FC", VA = "0x1FFD6FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0x1FFDBB4", Offset = "0x1FFDBB4", VA = "0x1FFDBB4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2042C", Offset = "0xB2042C")]
		private struct <ImportModelFromNetwork>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x4001090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<GameObject> <>t__builder;

			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectImporter <>4__this;

			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ImportOptions options;

			[Token(Token = "0x4001094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string objName;

			[Token(Token = "0x4001095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PolyfewRuntime.ReferencedNumeric<float> downloadProgress;

			[Token(Token = "0x4001096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string objURL;

			[Token(Token = "0x4001097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string diffuseTexURL;

			[Token(Token = "0x4001098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string bumpTexURL;

			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string specularTexURL;

			[Token(Token = "0x400109A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string opacityTexURL;

			[Token(Token = "0x400109B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string materialURL;

			[Token(Token = "0x400109C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TaskAwaiter<GameObject> <>u__1;

			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0x1FFDC10", Offset = "0x1FFDC10", VA = "0x1FFDC10", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0x1FFE114", Offset = "0x1FFE114", VA = "0x1FFE114", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PolyfewRuntime.ReferencedNumeric<float> downloadProgress;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int activeDownloads;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float objDownloadProgress;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float textureDownloadProgress;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float materialDownloadProgress;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isException;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int numTotalImports;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected bool allLoaded;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ImportOptions buildOptions;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected List<Loader> loaderList;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ImportPhase importPhase;

		[Token(Token = "0x17000107")]
		public int NumImportRequests
		{
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0x252F370", Offset = "0x252F370", VA = "0x252F370")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000021")]
		public event Action ImportingStart
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0x252ED30", Offset = "0x252ED30", VA = "0x252ED30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F15C", Offset = "0xB2F15C")]
			add
			{
			}
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0x252EDD0", Offset = "0x252EDD0", VA = "0x252EDD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F16C", Offset = "0xB2F16C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action ImportingComplete
		{
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0x252EE70", Offset = "0x252EE70", VA = "0x252EE70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F17C", Offset = "0xB2F17C")]
			add
			{
			}
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0x252EF10", Offset = "0x252EF10", VA = "0x252EF10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F18C", Offset = "0xB2F18C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<GameObject, string> CreatedModel
		{
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0x252EFB0", Offset = "0x252EFB0", VA = "0x252EFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F19C", Offset = "0xB2F19C")]
			add
			{
			}
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0x252F050", Offset = "0x252F050", VA = "0x252F050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F1AC", Offset = "0xB2F1AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<GameObject, string> ImportedModel
		{
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x252F0F0", Offset = "0x252F0F0", VA = "0x252F0F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F1BC", Offset = "0xB2F1BC")]
			add
			{
			}
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x252F190", Offset = "0x252F190", VA = "0x252F190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F1CC", Offset = "0xB2F1CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<string> ImportError
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x252F230", Offset = "0x252F230", VA = "0x252F230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F1DC", Offset = "0xB2F1DC")]
			add
			{
			}
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x252F2D0", Offset = "0x252F2D0", VA = "0x252F2D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F1EC", Offset = "0xB2F1EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x252EC48", Offset = "0x252EC48", VA = "0x252EC48")]
		public ObjectImporter()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x252F378", Offset = "0x252F378", VA = "0x252F378")]
		private Loader CreateLoader(string absolutePath, bool isNetwork = false)
		{
			return null;
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x252F674", Offset = "0x252F674", VA = "0x252F674")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2F1FC", Offset = "0xB2F1FC")]
		public Task<GameObject> ImportModelAsync(string objName, string filePath, Transform parentObj, ImportOptions options, string texturesFolderPath = "", string materialsFolderPath = "")
		{
			return null;
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x252F858", Offset = "0x252F858", VA = "0x252F858")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2F264", Offset = "0xB2F264")]
		public Task<GameObject> ImportModelFromNetwork(string objURL, string objName, string diffuseTexURL, string bumpTexURL, string specularTexURL, string opacityTexURL, string materialURL, PolyfewRuntime.ReferencedNumeric<float> downloadProgress, ImportOptions options)
		{
			return null;
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x252FA84", Offset = "0x252FA84", VA = "0x252FA84")]
		public void ImportModelFromNetworkWebGL(string objURL, string objName, string diffuseTexURL, string bumpTexURL, string specularTexURL, string opacityTexURL, string materialURL, PolyfewRuntime.ReferencedNumeric<float> downloadProgress, ImportOptions options, Action<GameObject> OnSuccess, Action<Exception> OnError)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x252FD18", Offset = "0x252FD18", VA = "0x252FD18", Slot = "4")]
		public virtual void UpdateStatus()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x252FF08", Offset = "0x252FF08", VA = "0x252FF08", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x252FF14", Offset = "0x252FF14", VA = "0x252FF14", Slot = "6")]
		protected virtual void OnImportingComplete()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x252FF28", Offset = "0x252FF28", VA = "0x252FF28", Slot = "7")]
		protected virtual void OnModelCreated(GameObject obj, string absolutePath)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x252FFA0", Offset = "0x252FFA0", VA = "0x252FFA0", Slot = "8")]
		protected virtual void OnImported(GameObject obj, string absolutePath)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x2530018", Offset = "0x2530018", VA = "0x2530018", Slot = "9")]
		protected virtual void OnImportError(string absolutePath)
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB2043C", Offset = "0xB2043C")]
	public class ObjectImporterUI : MonoBehaviour
	{
		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25908", Offset = "0xB25908")]
		public Text progressText;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25940", Offset = "0xB25940")]
		public Slider progressSlider;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB25978", Offset = "0xB25978")]
		public Image progressImage;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ObjectImporter objImporter;

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x2530088", Offset = "0x2530088", VA = "0x2530088")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x253020C", Offset = "0x253020C", VA = "0x253020C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x25302E8", Offset = "0x25302E8", VA = "0x25302E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x25303C4", Offset = "0x25303C4", VA = "0x25303C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x2530B64", Offset = "0x2530B64", VA = "0x2530B64")]
		private void OnImportStart()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x25309D4", Offset = "0x25309D4", VA = "0x25309D4")]
		private void OnImportComplete()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x2530CF0", Offset = "0x2530CF0", VA = "0x2530CF0")]
		public ObjectImporterUI()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public enum RootPathEnum
	{
		[Token(Token = "0x40010A2")]
		Url,
		[Token(Token = "0x40010A3")]
		DataPath,
		[Token(Token = "0x40010A4")]
		DataPathParent,
		[Token(Token = "0x40010A5")]
		PersistentDataPath,
		[Token(Token = "0x40010A6")]
		CurrentPath
	}
	[Token(Token = "0x20002B8")]
	public class PathSettings : MonoBehaviour
	{
		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB259B0", Offset = "0xB259B0")]
		public RootPathEnum defaultRootPath;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB259E8", Offset = "0xB259E8")]
		public RootPathEnum mobileRootPath;

		[Token(Token = "0x17000108")]
		public string RootPath
		{
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x2015574", Offset = "0x2015574", VA = "0x2015574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x2015628", Offset = "0x2015628", VA = "0x2015628")]
		public static PathSettings FindPathComponent(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x2015764", Offset = "0x2015764", VA = "0x2015764")]
		public string FullPath(string path)
		{
			return null;
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x2015800", Offset = "0x2015800", VA = "0x2015800")]
		public PathSettings()
		{
		}
	}
}
namespace BrainFailProductions.PolyFew.AsImpL.MathUtil
{
	[Token(Token = "0x20002B9")]
	public class Triangle
	{
		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vertex v1;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vertex v2;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vertex v3;

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x263C3D0", Offset = "0x263C3D0", VA = "0x263C3D0")]
		public Triangle(Vertex v1, Vertex v2, Vertex v3)
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class Vertex
	{
		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vertex prevVertex;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vertex nextVertex;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float triangleArea;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool triangleHasChanged;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25A20", Offset = "0xB25A20")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25A30", Offset = "0xB25A30")]
		private int <OriginalIndex>k__BackingField;

		[Token(Token = "0x17000109")]
		public Vector3 Position
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x264600C", Offset = "0x264600C", VA = "0x264600C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F2EC", Offset = "0xB2F2EC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x2646018", Offset = "0x2646018", VA = "0x2646018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F2FC", Offset = "0xB2F2FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public int OriginalIndex
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0x2646024", Offset = "0x2646024", VA = "0x2646024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F30C", Offset = "0xB2F30C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x264602C", Offset = "0x264602C", VA = "0x264602C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F31C", Offset = "0xB2F31C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public Vertex PreviousVertex
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x2646034", Offset = "0x2646034", VA = "0x2646034")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x263CC40", Offset = "0x263CC40", VA = "0x263CC40")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public Vertex NextVertex
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x264603C", Offset = "0x264603C", VA = "0x264603C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x263CC58", Offset = "0x263CC58", VA = "0x263CC58")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public float TriangleArea
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x263D144", Offset = "0x263D144", VA = "0x263D144")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x263D860", Offset = "0x263D860", VA = "0x263D860")]
		public Vertex(int originalIndex, Vector3 position)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x263D234", Offset = "0x263D234", VA = "0x263D234")]
		public Vector2 GetPosOnPlane(Vector3 planeNormal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x2646044", Offset = "0x2646044", VA = "0x2646044")]
		private void ComputeTriangleArea()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public static class MathUtility
	{
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x21ABE94", Offset = "0x21ABE94", VA = "0x21ABE94")]
		public static int ClampListIndex(int index, int listSize)
		{
			return default(int);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x21ABEAC", Offset = "0x21ABEAC", VA = "0x21ABEAC")]
		public static bool IsPointInTriangle(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x21ABF3C", Offset = "0x21ABF3C", VA = "0x21ABF3C")]
		public static bool IsTriangleOrientedClockwise(Vector2 v1, Vector2 v2, Vector2 v3)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x21ABF74", Offset = "0x21ABF74", VA = "0x21ABF74")]
		public static Vector3 ComputeNormal(Vector3 vert, Vector3 vNext, Vector3 vPrev)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20002BC")]
	public static class Triangulation
	{
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x263C434", Offset = "0x263C434", VA = "0x263C434")]
		public static List<Triangle> TriangulateConvexPolygon(List<Vertex> vertices, bool preserveOriginalVertices = true)
		{
			return null;
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x263C838", Offset = "0x263C838", VA = "0x263C838")]
		public static List<Triangle> TriangulateByEarClipping(List<Vertex> origVertices, Vector3 planeNormal, string meshName, bool preserveOriginalVertices = true)
		{
			return null;
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x263C744", Offset = "0x263C744", VA = "0x263C744")]
		public static Triangle ClipTriangle(Vertex vertex, List<Vertex> vertices)
		{
			return null;
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x263CDC4", Offset = "0x263CDC4", VA = "0x263CDC4")]
		private static Triangle ClipEar(Vertex earVertex, List<Vertex> earVertices, List<Vertex> vertices, Vector3 planeNormal)
		{
			return null;
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x263C5C0", Offset = "0x263C5C0", VA = "0x263C5C0")]
		private static Vertex FindMaxAreaEarVertex(List<Vertex> earVertices)
		{
			return null;
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x263CC70", Offset = "0x263CC70", VA = "0x263CC70")]
		private static List<Vertex> FindEarVertices(List<Vertex> vertices, Vector3 planeNormal)
		{
			return null;
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x263D174", Offset = "0x263D174", VA = "0x263D174")]
		private static bool IsVertexReflex(Vertex v, Vector3 vNormal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x263CF0C", Offset = "0x263CF0C", VA = "0x263CF0C")]
		private static bool IsVertexEar(Vertex v, List<Vertex> vertices, Vector3 planeNormal)
		{
			return default(bool);
		}
	}
}
namespace BrainFailProductions.PolyFewRuntime
{
	[Token(Token = "0x20002BD")]
	public class FlyCamera : MonoBehaviour
	{
		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float panSpeed;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMinLimit;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float yMaxLimit;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceMin;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float distanceMax;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody rigidbody;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float x;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float y;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool deactivated;

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x2877BB4", Offset = "0x2877BB4", VA = "0x2877BB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x2877CA0", Offset = "0x2877CA0", VA = "0x2877CA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x2877FE4", Offset = "0x2877FE4", VA = "0x2877FE4")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x2878014", Offset = "0x2878014", VA = "0x2878014")]
		public FlyCamera()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class PolygonReduction : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB204A4", Offset = "0xB204A4")]
		private sealed class <>c
		{
			[Token(Token = "0x40010DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject, PolyfewRuntime.MeshRendererPair> <>9__29_0;

			[Token(Token = "0x40010DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GameObject, PolyfewRuntime.MeshRendererPair> <>9__30_0;

			[Token(Token = "0x40010DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<Exception> <>9__31_1;

			[Token(Token = "0x40010DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<Exception> <>9__33_1;

			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x2008DBC", Offset = "0x2008DBC", VA = "0x2008DBC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x2008DC4", Offset = "0x2008DC4", VA = "0x2008DC4")]
			internal void <OnReductionChange>b__29_0(GameObject go, PolyfewRuntime.MeshRendererPair mInfo)
			{
			}

			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x2008DC8", Offset = "0x2008DC8", VA = "0x2008DC8")]
			internal void <SimplifyLossless>b__30_0(GameObject go, PolyfewRuntime.MeshRendererPair mInfo)
			{
			}

			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x2008DCC", Offset = "0x2008DCC", VA = "0x2008DCC")]
			internal void <ImportOBJ>b__31_1(Exception ex)
			{
			}

			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x2008E80", Offset = "0x2008E80", VA = "0x2008E80")]
			internal void <ExportGameObjectToOBJ>b__33_1(Exception ex)
			{
			}
		}

		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB204B4", Offset = "0xB204B4")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40010DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject importedObject;

			[Token(Token = "0x40010E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PolygonReduction <>4__this;

			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x2008F34", Offset = "0x2008F34", VA = "0x2008F34")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x2008F3C", Offset = "0x2008F3C", VA = "0x2008F3C")]
			internal void <ImportOBJ>b__0(GameObject imp)
			{
			}
		}

		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB204C4", Offset = "0xB204C4")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x40010E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PolygonReduction <>4__this;

			[Token(Token = "0x40010E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject importedObject;

			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x20091A0", Offset = "0x20091A0", VA = "0x20091A0")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x20091A8", Offset = "0x20091A8", VA = "0x20091A8")]
			internal void <ImportOBJFromNetwork>b__0(GameObject imp)
			{
			}

			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x20093CC", Offset = "0x20093CC", VA = "0x20093CC")]
			internal void <ImportOBJFromNetwork>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x20002C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB204D4", Offset = "0xB204D4")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x40010E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject exportObject;

			[Token(Token = "0x40010E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PolygonReduction <>4__this;

			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x20094AC", Offset = "0x20094AC", VA = "0x20094AC")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x20094B4", Offset = "0x20094B4", VA = "0x20094B4")]
			internal void <ExportGameObjectToOBJ>b__0()
			{
			}
		}

		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB204E4", Offset = "0xB204E4")]
		private sealed class <ShowMessage>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string message;

			[Token(Token = "0x40010E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PolygonReduction <>4__this;

			[Token(Token = "0x1700010E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DDB")]
				[Address(RVA = "0x2009728", Offset = "0x2009728", VA = "0x2009728", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DDD")]
				[Address(RVA = "0x2009770", Offset = "0x2009770", VA = "0x2009770", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x20095BC", Offset = "0x20095BC", VA = "0x20095BC")]
			[DebuggerHidden]
			public <ShowMessage>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x20095E8", Offset = "0x20095E8", VA = "0x20095E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x20095EC", Offset = "0x20095EC", VA = "0x20095EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x2009730", Offset = "0x2009730", VA = "0x2009730", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB204F4", Offset = "0xB204F4")]
		private sealed class <UpdateProgress>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolygonReduction <>4__this;

			[Token(Token = "0x17000110")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DE1")]
				[Address(RVA = "0x2009908", Offset = "0x2009908", VA = "0x2009908", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000111")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DE3")]
				[Address(RVA = "0x2009950", Offset = "0x2009950", VA = "0x2009950", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x2009778", Offset = "0x2009778", VA = "0x2009778")]
			[DebuggerHidden]
			public <UpdateProgress>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x20097A4", Offset = "0x20097A4", VA = "0x20097A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x20097A8", Offset = "0x20097A8", VA = "0x20097A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0x2009910", Offset = "0x2009910", VA = "0x2009910", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider reductionStrength;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider preservationStrength;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle preserveUVFoldover;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Toggle preserveUVSeams;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle preserveBorders;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Toggle enableSmartLinking;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Toggle preserveFace;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Toggle recalculateNormals;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle regardCurvature;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InputField trianglesCount;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text message;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text progress;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Button exportButton;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Button importFromFileSystem;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Button importFromWeb;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Slider progressSlider;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject uninteractivePanel;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject targetObject;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform preservationSphere;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public EventSystem eventSystem;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PolyfewRuntime.ObjectMeshPairs objectMeshPairs;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool didApplyLosslessLast;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool disableTemporary;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject barabarianRef;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PolyfewRuntime.ReferencedNumeric<float> downloadProgress;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool isImportingFromNetwork;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool isWebGL;

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x20BA3B4", Offset = "0x20BA3B4", VA = "0x20BA3B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x20BA4BC", Offset = "0x20BA4BC", VA = "0x20BA4BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x20BA67C", Offset = "0x20BA67C", VA = "0x20BA67C")]
		public void OnReductionChange(float value)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x20BAD50", Offset = "0x20BAD50", VA = "0x20BAD50")]
		public void SimplifyLossless()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x20BAF98", Offset = "0x20BAF98", VA = "0x20BAF98")]
		public void ImportOBJ()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x20BB248", Offset = "0x20BB248", VA = "0x20BB248")]
		public void ImportOBJFromNetwork()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x20BB5B4", Offset = "0x20BB5B4", VA = "0x20BB5B4")]
		public void ExportGameObjectToOBJ()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x20BB8F0", Offset = "0x20BB8F0", VA = "0x20BB8F0")]
		public void OnToggleStateChanged(bool isOn)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x20BB99C", Offset = "0x20BB99C", VA = "0x20BB99C")]
		public void OnPreservationStrengthChange(float value)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x20BB9A4", Offset = "0x20BB9A4", VA = "0x20BB9A4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x20BBCB8", Offset = "0x20BBCB8", VA = "0x20BBCB8")]
		public static void OnSliderSelect()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x20BBD20", Offset = "0x20BBD20", VA = "0x20BBD20")]
		public static void OnSliderDeselect()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x20BBD84", Offset = "0x20BBD84", VA = "0x20BBD84")]
		private bool IsMouseOverUI(RectTransform uiElement)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x20BBE04", Offset = "0x20BBE04", VA = "0x20BBE04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2F32C", Offset = "0xB2F32C")]
		private IEnumerator ShowMessage(string message)
		{
			return null;
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x20BBBD0", Offset = "0x20BBBD0", VA = "0x20BBBD0")]
		private void ResetSettings()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x20BB534", Offset = "0x20BB534", VA = "0x20BB534")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB2F394", Offset = "0xB2F394")]
		private IEnumerator UpdateProgress()
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x20BAA28", Offset = "0x20BAA28", VA = "0x20BAA28")]
		private void AssignMeshesFromPairs()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x20BBE98", Offset = "0x20BBE98", VA = "0x20BBE98")]
		public PolygonReduction()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public static class MeshCombiner
	{
		[Token(Token = "0x20002C6")]
		public struct StaticRenderer
		{
			[Token(Token = "0x40010F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x40010F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool isNewMesh;

			[Token(Token = "0x40010F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40010F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x40010F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material[] materials;
		}

		[Token(Token = "0x20002C7")]
		public struct SkinnedRenderer
		{
			[Token(Token = "0x40010F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool hasBlendShapes;

			[Token(Token = "0x40010F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string name;

			[Token(Token = "0x40010F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isNewMesh;

			[Token(Token = "0x40010F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x40010F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh mesh;

			[Token(Token = "0x40010FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Material[] materials;

			[Token(Token = "0x40010FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform rootBone;

			[Token(Token = "0x40010FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform[] bones;
		}

		[Serializable]
		[Token(Token = "0x20002C8")]
		public struct BlendShape
		{
			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string ShapeName;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BlendShapeFrame[] Frames;

			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x2357CAC", Offset = "0x2357CAC", VA = "0x2357CAC")]
			public BlendShape(string shapeName, BlendShapeFrame[] frames)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002C9")]
		public struct BlendShapeFrame
		{
			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string shapeName;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float frameWeight;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] deltaVertices;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] deltaNormals;

			[Token(Token = "0x4001103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3[] deltaTangents;

			[Token(Token = "0x4001104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int vertexOffset;

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x2357CE0", Offset = "0x2357CE0", VA = "0x2357CE0")]
			public BlendShapeFrame(float frameWeight, Vector3[] deltaVertices, Vector3[] deltaNormals, Vector3[] deltaTangents)
			{
			}

			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x2357D98", Offset = "0x2357D98", VA = "0x2357D98")]
			public BlendShapeFrame(string shapeName, float frameWeight, Vector3[] deltaVertices, Vector3[] deltaNormals, Vector3[] deltaTangents, int vertexOffset)
			{
			}
		}

		[Token(Token = "0x20002CA")]
		public static class MeshUtils
		{
			[Token(Token = "0x4001105")]
			public const int UVChannelCount = 8;

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x2357E20", Offset = "0x2357E20", VA = "0x2357E20")]
			public static Mesh CreateMesh(Vector3[] vertices, int[][] indices, Vector3[] normals, Vector4[] tangents, Color[] colors, BoneWeight[] boneWeights, List<Vector2>[] uvs, Matrix4x4[] bindposes, BlendShape[] blendShapes)
			{
				return null;
			}

			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x23581F0", Offset = "0x23581F0", VA = "0x23581F0")]
			public static Mesh CreateMesh(Vector3[] vertices, int[][] indices, Vector3[] normals, Vector4[] tangents, Color[] colors, BoneWeight[] boneWeights, List<Vector4>[] uvs, Matrix4x4[] bindposes, BlendShape[] blendShapes)
			{
				return null;
			}

			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x2357E4C", Offset = "0x2357E4C", VA = "0x2357E4C")]
			public static Mesh CreateMesh(Vector3[] vertices, int[][] indices, Vector3[] normals, Vector4[] tangents, Color[] colors, BoneWeight[] boneWeights, List<Vector2>[] uvs2D, List<Vector3>[] uvs3D, List<Vector4>[] uvs4D, Matrix4x4[] bindposes, BlendShape[] blendShapes)
			{
				return null;
			}

			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x23584EC", Offset = "0x23584EC", VA = "0x23584EC")]
			public static BlendShape[] GetMeshBlendShapes(Mesh mesh)
			{
				return null;
			}

			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x235836C", Offset = "0x235836C", VA = "0x235836C")]
			public static void ApplyMeshBlendShapes(Mesh mesh, BlendShape[] blendShapes)
			{
			}

			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x2358810", Offset = "0x2358810", VA = "0x2358810")]
			public static List<Vector4>[] GetMeshUVs(Mesh mesh)
			{
				return null;
			}

			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x235897C", Offset = "0x235897C", VA = "0x235897C")]
			public static List<Vector4> GetMeshUVs(Mesh mesh, int channel)
			{
				return null;
			}

			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x2358AF0", Offset = "0x2358AF0", VA = "0x2358AF0")]
			public static int GetUsedUVComponents(List<Vector4> uvs)
			{
				return default(int);
			}

			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x2358C74", Offset = "0x2358C74", VA = "0x2358C74")]
			public static Vector2[] ConvertUVsTo2D(List<Vector4> uvs)
			{
				return null;
			}

			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x2358D6C", Offset = "0x2358D6C", VA = "0x2358D6C")]
			public static Vector3[] ConvertUVsTo3D(List<Vector4> uvs)
			{
				return null;
			}

			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x2358220", Offset = "0x2358220", VA = "0x2358220")]
			public static Vector2Int[] GetSubMeshIndexMinMax(int[][] indices, [Out] IndexFormat indexFormat)
			{
				return null;
			}

			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x2358E70", Offset = "0x2358E70", VA = "0x2358E70")]
			private static void GetIndexMinMax(int[] indices, [Out] int minIndex, [Out] int maxIndex)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20504", Offset = "0xB20504")]
		private sealed class <>c
		{
			[Token(Token = "0x4001106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MeshRenderer, bool> <>9__11_0;

			[Token(Token = "0x4001108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MeshRenderer, MeshFilter> <>9__11_1;

			[Token(Token = "0x4001109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<SkinnedMeshRenderer, bool> <>9__12_0;

			[Token(Token = "0x400110A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<SkinnedMeshRenderer, bool> <>9__12_1;

			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x2357A48", Offset = "0x2357A48", VA = "0x2357A48")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x2357A50", Offset = "0x2357A50", VA = "0x2357A50")]
			internal bool <CombineStaticMeshes>b__11_0(MeshRenderer renderer)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x2357B50", Offset = "0x2357B50", VA = "0x2357B50")]
			internal MeshFilter <CombineStaticMeshes>b__11_1(MeshRenderer renderer)
			{
				return null;
			}

			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0x2357BA4", Offset = "0x2357BA4", VA = "0x2357BA4")]
			internal bool <CombineSkinnedMeshes>b__12_0(SkinnedMeshRenderer renderer)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x2357C28", Offset = "0x2357C28", VA = "0x2357C28")]
			internal bool <CombineSkinnedMeshes>b__12_1(SkinnedMeshRenderer renderer)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MeshRenderer[] unityCombinedMeshRenderers;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material[] unityCombinedMeshesMats;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool didUseUnityCombine;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public static bool generateUV2;

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x21B3E88", Offset = "0x21B3E88", VA = "0x21B3E88")]
		public static StaticRenderer[] GetStaticRenderers(MeshRenderer[] renderers)
		{
			return null;
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x21B419C", Offset = "0x21B419C", VA = "0x21B419C")]
		public static SkinnedRenderer[] GetSkinnedRenderers(SkinnedMeshRenderer[] renderers)
		{
			return null;
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x21B447C", Offset = "0x21B447C", VA = "0x21B447C")]
		public static StaticRenderer[] CombineStaticMeshes(Transform transform, int levelIndex, MeshRenderer[] renderers, bool autoName = true, string combinedBaseName = "")
		{
			return null;
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x21B618C", Offset = "0x21B618C", VA = "0x21B618C")]
		public static SkinnedRenderer[] CombineSkinnedMeshes(Transform transform, int levelIndex, SkinnedMeshRenderer[] renderers, SkinnedMeshRenderer[] renderersActuallyCombined, bool autoName = true, string combinedBaseName = "")
		{
			return null;
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x21B5938", Offset = "0x21B5938", VA = "0x21B5938")]
		public static Mesh CombineMeshes(Transform rootTransform, MeshRenderer[] renderers, [Out] Material[] resultMaterials, [Optional] Dictionary<Transform, Transform> topLevelParents, [Optional] Dictionary<string, BlendShapeFrame> blendShapes)
		{
			return null;
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x21B6924", Offset = "0x21B6924", VA = "0x21B6924")]
		public static Mesh CombineMeshes(Transform rootTransform, SkinnedMeshRenderer[] renderers, [Out] Material[] resultMaterials, [Out] Transform[] resultBones)
		{
			return null;
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x21B7868", Offset = "0x21B7868", VA = "0x21B7868")]
		public static Mesh CombineMeshes(Mesh[] meshes, Matrix4x4[] transforms, Tuple<Matrix4x4, bool>[] normalsTransforms, Material[][] materials, [Out] Material[] resultMaterials, [Optional] Dictionary<string, BlendShapeFrame> blendShapes)
		{
			return null;
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x21B79B4", Offset = "0x21B79B4", VA = "0x21B79B4")]
		public static Mesh CombineMeshes(Mesh[] meshes, Matrix4x4[] transforms, Tuple<Matrix4x4, bool>[] normalsTransforms, Material[][] materials, Transform[][] bones, [Out] Material[] resultMaterials, [Out] Transform[] resultBones, [Optional] Dictionary<string, BlendShapeFrame> blendShapes)
		{
			return null;
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x21B9678", Offset = "0x21B9678", VA = "0x21B9678")]
		private static void ParentAndResetTransform(Transform transform, Transform parentTransform)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x21B96DC", Offset = "0x21B96DC", VA = "0x21B96DC")]
		private static void ParentAndOffsetTransform(Transform transform, Transform parentTransform, Transform originalTransform)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x21B7690", Offset = "0x21B7690", VA = "0x21B7690")]
		private static Transform FindBestRootBone(Transform transform, SkinnedMeshRenderer[] skinnedMeshRenderers)
		{
			return null;
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x21B976C", Offset = "0x21B976C", VA = "0x21B976C")]
		private static Transform FindBestRootBone(Dictionary<Transform, Transform> topLevelParents, SkinnedMeshRenderer[] skinnedMeshRenderers)
		{
			return null;
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x21B9994", Offset = "0x21B9994", VA = "0x21B9994")]
		private static Transform GetTopLevelParent(Transform forObject)
		{
			return null;
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x21B95C4", Offset = "0x21B95C4", VA = "0x21B95C4")]
		private static void CopyVertexPositions(List<Vector3> list, Vector3[] arr)
		{
		}

		[Token(Token = "0x6000DF2")]
		private static void CopyVertexAttributes<T>(List<T> dest, IEnumerable<T> src, int previousVertexCount, int meshVertexCount, int totalVertexCount, T defaultValue)
		{
		}

		[Token(Token = "0x6000DF3")]
		private static T[] MergeArrays<T>(T[] arr1, T[] arr2)
		{
			return null;
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x21B925C", Offset = "0x21B925C", VA = "0x21B925C")]
		private static void TransformVertices(Vector3[] vertices, Matrix4x4 transform)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x21B92EC", Offset = "0x21B92EC", VA = "0x21B92EC")]
		private static void TransformNormals(Vector3[] normals, Tuple<Matrix4x4, bool> transform)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x21B94C8", Offset = "0x21B94C8", VA = "0x21B94C8")]
		private static void TransformTangents(Vector4[] tangents, Tuple<Matrix4x4, bool> transform)
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x21B9058", Offset = "0x21B9058", VA = "0x21B9058")]
		private static void RemapBones(BoneWeight[] boneWeights, int[] boneIndices)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x21B9A40", Offset = "0x21B9A40", VA = "0x21B9A40")]
		private static Matrix4x4 ScaleMatrix(Matrix4x4 matrix, float scale)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x21B4C50", Offset = "0x21B4C50", VA = "0x21B4C50")]
		private static void CombineMeshesUnity(Transform parentTransform, MeshFilter[] meshFilters)
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class PolyfewRuntime : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002CD")]
		public class ObjectMeshPairs : Dictionary<GameObject, MeshRendererPair>
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x2008A80", Offset = "0x2008A80", VA = "0x2008A80")]
			public ObjectMeshPairs()
			{
			}
		}

		[Token(Token = "0x20002CE")]
		public enum MeshCombineTarget
		{
			[Token(Token = "0x400110D")]
			SkinnedAndStatic,
			[Token(Token = "0x400110E")]
			StaticOnly,
			[Token(Token = "0x400110F")]
			SkinnedOnly
		}

		[Serializable]
		[Token(Token = "0x20002CF")]
		public class MeshRendererPair
		{
			[Token(Token = "0x4001110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool attachedToMeshFilter;

			[Token(Token = "0x4001111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x2006C18", Offset = "0x2006C18", VA = "0x2006C18")]
			public MeshRendererPair(bool attachedToMeshFilter, Mesh mesh)
			{
			}

			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x200894C", Offset = "0x200894C", VA = "0x200894C")]
			public void Destruct()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D0")]
		public class CustomMeshActionStructure
		{
			[Token(Token = "0x4001112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshRendererPair meshRendererPair;

			[Token(Token = "0x4001113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject gameObject;

			[Token(Token = "0x4001114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x2006528", Offset = "0x2006528", VA = "0x2006528")]
			public CustomMeshActionStructure(MeshRendererPair meshRendererPair, GameObject gameObject, Action action)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D1")]
		public class SimplificationOptions
		{
			[Token(Token = "0x4001115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float simplificationStrength;

			[Token(Token = "0x4001116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool simplifyMeshLossless;

			[Token(Token = "0x4001117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			public bool enableSmartlinking;

			[Token(Token = "0x4001118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
			public bool recalculateNormals;

			[Token(Token = "0x4001119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
			public bool preserveUVSeamEdges;

			[Token(Token = "0x400111A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool preserveUVFoldoverEdges;

			[Token(Token = "0x400111B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool preserveBorderEdges;

			[Token(Token = "0x400111C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool regardPreservationSpheres;

			[Token(Token = "0x400111D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<PreservationSphere> preservationSpheres;

			[Token(Token = "0x400111E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool regardCurvature;

			[Token(Token = "0x400111F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int maxIterations;

			[Token(Token = "0x4001120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float aggressiveness;

			[Token(Token = "0x4001121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool useEdgeSort;

			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x2008B38", Offset = "0x2008B38", VA = "0x2008B38")]
			public SimplificationOptions()
			{
			}

			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x2008BD8", Offset = "0x2008BD8", VA = "0x2008BD8")]
			public SimplificationOptions(float simplificationStrength, bool simplifyOptimal, bool enableSmartlink, bool recalculateNormals, bool preserveUVSeamEdges, bool preserveUVFoldoverEdges, bool preserveBorderEdges, bool regardToleranceSphere, List<PreservationSphere> preservationSpheres, bool regardCurvature, int maxIterations, float aggressiveness, bool useEdgeSort)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D2")]
		public class PreservationSphere
		{
			[Token(Token = "0x4001122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 worldPosition;

			[Token(Token = "0x4001123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float diameter;

			[Token(Token = "0x4001124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float preservationStrength;

			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x2008AD4", Offset = "0x2008AD4", VA = "0x2008AD4")]
			public PreservationSphere(Vector3 worldPosition, float diameter, float preservationStrength)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D3")]
		public class OBJImportOptions : ImportOptions
		{
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x2008A78", Offset = "0x2008A78", VA = "0x2008A78")]
			public OBJImportOptions()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D4")]
		public class OBJExportOptions
		{
			[Token(Token = "0x4001125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly bool applyPosition;

			[Token(Token = "0x4001126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public readonly bool applyRotation;

			[Token(Token = "0x4001127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public readonly bool applyScale;

			[Token(Token = "0x4001128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			public readonly bool generateMaterials;

			[Token(Token = "0x4001129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public readonly bool exportTextures;

			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x20089FC", Offset = "0x20089FC", VA = "0x20089FC")]
			public OBJExportOptions(bool applyPosition, bool applyRotation, bool applyScale, bool generateMaterials, bool exportTextures)
			{
			}
		}

		[Token(Token = "0x20002D5")]
		public class ReferencedNumeric<T> where T : struct, IComparable, IComparable<T>, IConvertible, IEquatable<T>, IFormattable
		{
			[Token(Token = "0x400112A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T val;

			[Token(Token = "0x17000112")]
			public T Value
			{
				[Token(Token = "0x6000E2C")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6000E2D")]
				set
				{
				}
			}

			[Token(Token = "0x6000E2E")]
			public ReferencedNumeric(T value)
			{
			}
		}

		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20514", Offset = "0xB20514")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400112B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int totalTriangles;

			[Token(Token = "0x400112C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SimplificationOptions simplificationOptions;

			[Token(Token = "0x400112D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float quality;

			[Token(Token = "0x400112E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public object threadLock1;

			[Token(Token = "0x400112F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int threadsRunning;

			[Token(Token = "0x4001130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int meshesHandled;

			[Token(Token = "0x4001131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public object threadLock3;

			[Token(Token = "0x4001132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public object threadLock2;

			[Token(Token = "0x4001133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool isError;

			[Token(Token = "0x4001134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string error;

			[Token(Token = "0x4001135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<CustomMeshActionStructure> meshAssignments;

			[Token(Token = "0x4001136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<CustomMeshActionStructure> callbackFlusher;

			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x2005F20", Offset = "0x2005F20", VA = "0x2005F20")]
			public <>c__DisplayClass10_0()
			{
			}
		}

		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20524", Offset = "0xB20524")]
		private sealed class <>c__DisplayClass10_1
		{
			[Token(Token = "0x4001137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshRendererPair meshRendererPair;

			[Token(Token = "0x4001138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject gameObject;

			[Token(Token = "0x4001139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshSimplifier meshSimplifier;

			[Token(Token = "0x400113A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public <>c__DisplayClass10_0 CS$<>8__locals1;

			[Token(Token = "0x400113B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action <>9__1;

			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x2005F28", Offset = "0x2005F28", VA = "0x2005F28")]
			public <>c__DisplayClass10_1()
			{
			}

			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x2005F30", Offset = "0x2005F30", VA = "0x2005F30")]
			internal void <SimplifyObjectDeep>b__0()
			{
			}

			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x200658C", Offset = "0x200658C", VA = "0x200658C")]
			internal void <SimplifyObjectDeep>b__1()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20534", Offset = "0xB20534")]
		private sealed class <>c
		{
			[Token(Token = "0x400113C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400113D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__10_2;

			[Token(Token = "0x400113E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__12_2;

			[Token(Token = "0x400113F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__13_2;

			[Token(Token = "0x4001140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Renderer, bool> <>9__15_0;

			[Token(Token = "0x4001141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Renderer, MeshRenderer> <>9__15_1;

			[Token(Token = "0x4001142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Renderer, bool> <>9__15_2;

			[Token(Token = "0x4001143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<Renderer, SkinnedMeshRenderer> <>9__15_3;

			[Token(Token = "0x4001144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<Renderer, bool> <>9__15_4;

			[Token(Token = "0x4001145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<Renderer, MeshRenderer> <>9__15_5;

			[Token(Token = "0x4001146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<Renderer, bool> <>9__15_6;

			[Token(Token = "0x4001147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<Renderer, SkinnedMeshRenderer> <>9__15_7;

			[Token(Token = "0x4001148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<SkinnedMeshRenderer, bool> <>9__15_8;

			[Token(Token = "0x4001149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<MeshRenderer, bool> <>9__16_0;

			[Token(Token = "0x400114A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static Func<MeshRenderer, MeshRenderer> <>9__16_1;

			[Token(Token = "0x400114B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static Func<SkinnedMeshRenderer, bool> <>9__16_2;

			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static Func<SkinnedMeshRenderer, SkinnedMeshRenderer> <>9__16_3;

			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static Func<SkinnedMeshRenderer, bool> <>9__17_0;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static Func<SkinnedMeshRenderer, bool> <>9__17_1;

			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static Func<SkinnedMeshRenderer, bool> <>9__18_0;

			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x2005300", Offset = "0x2005300", VA = "0x2005300")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x2005308", Offset = "0x2005308", VA = "0x2005308")]
			internal void <SimplifyObjectDeep>b__10_2()
			{
			}

			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x200530C", Offset = "0x200530C", VA = "0x200530C")]
			internal void <SimplifyObjectDeep>b__12_2()
			{
			}

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x2005310", Offset = "0x2005310", VA = "0x2005310")]
			internal void <SimplifyMeshes>b__13_2()
			{
			}

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x2005314", Offset = "0x2005314", VA = "0x2005314")]
			internal bool <CombineMeshesInGameObject>b__15_0(Renderer renderer)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x20054C8", Offset = "0x20054C8", VA = "0x20054C8")]
			internal MeshRenderer <CombineMeshesInGameObject>b__15_1(Renderer renderer)
			{
				return null;
			}

			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x2005544", Offset = "0x2005544", VA = "0x2005544")]
			internal bool <CombineMeshesInGameObject>b__15_2(Renderer renderer)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x20056AC", Offset = "0x20056AC", VA = "0x20056AC")]
			internal SkinnedMeshRenderer <CombineMeshesInGameObject>b__15_3(Renderer renderer)
			{
				return null;
			}

			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x2005728", Offset = "0x2005728", VA = "0x2005728")]
			internal bool <CombineMeshesInGameObject>b__15_4(Renderer renderer)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x20058BC", Offset = "0x20058BC", VA = "0x20058BC")]
			internal MeshRenderer <CombineMeshesInGameObject>b__15_5(Renderer renderer)
			{
				return null;
			}

			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x2005938", Offset = "0x2005938", VA = "0x2005938")]
			internal bool <CombineMeshesInGameObject>b__15_6(Renderer renderer)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x2005A80", Offset = "0x2005A80", VA = "0x2005A80")]
			internal SkinnedMeshRenderer <CombineMeshesInGameObject>b__15_7(Renderer renderer)
			{
				return null;
			}

			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x2005AFC", Offset = "0x2005AFC", VA = "0x2005AFC")]
			internal bool <CombineMeshesInGameObject>b__15_8(SkinnedMeshRenderer renderer)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x2005B80", Offset = "0x2005B80", VA = "0x2005B80")]
			internal bool <CombineMeshesFromRenderers>b__16_0(MeshRenderer renderer)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x2005C98", Offset = "0x2005C98", VA = "0x2005C98")]
			internal MeshRenderer <CombineMeshesFromRenderers>b__16_1(MeshRenderer renderer)
			{
				return null;
			}

			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x2005CA0", Offset = "0x2005CA0", VA = "0x2005CA0")]
			internal bool <CombineMeshesFromRenderers>b__16_2(SkinnedMeshRenderer renderer)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x2005D50", Offset = "0x2005D50", VA = "0x2005D50")]
			internal SkinnedMeshRenderer <CombineMeshesFromRenderers>b__16_3(SkinnedMeshRenderer renderer)
			{
				return null;
			}

			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x2005D58", Offset = "0x2005D58", VA = "0x2005D58")]
			internal bool <ConvertSkinnedMeshesInGameObject>b__17_0(SkinnedMeshRenderer renderer)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x2005E18", Offset = "0x2005E18", VA = "0x2005E18")]
			internal bool <ConvertSkinnedMeshesInGameObject>b__17_1(SkinnedMeshRenderer renderer)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x2005E9C", Offset = "0x2005E9C", VA = "0x2005E9C")]
			internal bool <ConvertSkinnedMeshesFromRenderers>b__18_0(SkinnedMeshRenderer renderer)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20544", Offset = "0xB20544")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ObjectMeshPairs toReturn;

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SimplificationOptions simplificationOptions;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float quality;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public object threadLock1;

			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int threadsRunning;

			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int meshesHandled;

			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public object threadLock2;

			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool isError;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string error;

			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<CustomMeshActionStructure> meshAssignments;

			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x200665C", Offset = "0x200665C", VA = "0x200665C")]
			public <>c__DisplayClass11_0()
			{
			}
		}

		[Token(Token = "0x20002DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20554", Offset = "0xB20554")]
		private sealed class <>c__DisplayClass11_1
		{
			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshRendererPair meshRendererPair;

			[Token(Token = "0x400115B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject gameObject;

			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshSimplifier meshSimplifier;

			[Token(Token = "0x400115D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public <>c__DisplayClass11_0 CS$<>8__locals1;

			[Token(Token = "0x400115E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action <>9__1;

			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x2006664", Offset = "0x2006664", VA = "0x2006664")]
			public <>c__DisplayClass11_1()
			{
			}

			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x200666C", Offset = "0x200666C", VA = "0x200666C")]
			internal void <SimplifyObjectDeep>b__0()
			{
			}

			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x2006A8C", Offset = "0x2006A8C", VA = "0x2006A8C")]
			internal void <SimplifyObjectDeep>b__1()
			{
			}
		}

		[Token(Token = "0x20002DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20564", Offset = "0xB20564")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int totalTriangles;

			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SimplificationOptions simplificationOptions;

			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float quality;

			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public object threadLock1;

			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int threadsRunning;

			[Token(Token = "0x4001164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int meshesHandled;

			[Token(Token = "0x4001165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public object threadLock3;

			[Token(Token = "0x4001166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public object threadLock2;

			[Token(Token = "0x4001167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool isError;

			[Token(Token = "0x4001168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string error;

			[Token(Token = "0x4001169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<CustomMeshActionStructure> meshAssignments;

			[Token(Token = "0x400116A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<CustomMeshActionStructure> callbackFlusher;

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x2006C60", Offset = "0x2006C60", VA = "0x2006C60")]
			public <>c__DisplayClass12_0()
			{
			}
		}

		[Token(Token = "0x20002DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20574", Offset = "0xB20574")]
		private sealed class <>c__DisplayClass12_1
		{
			[Token(Token = "0x400116B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshRendererPair meshRendererPair;

			[Token(Token = "0x400116C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject gameObject;

			[Token(Token = "0x400116D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshSimplifier meshSimplifier;

			[Token(Token = "0x400116E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public <>c__DisplayClass12_0 CS$<>8__locals1;

			[Token(Token = "0x400116F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action <>9__1;

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x2006C68", Offset = "0x2006C68", VA = "0x2006C68")]
			public <>c__DisplayClass12_1()
			{
			}

			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x2006C70", Offset = "0x2006C70", VA = "0x2006C70")]
			internal void <SimplifyObjectDeep>b__0()
			{
			}

			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x2007268", Offset = "0x2007268", VA = "0x2007268")]
			internal void <SimplifyObjectDeep>b__1()
			{
			}
		}

		[Token(Token = "0x20002DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20584", Offset = "0xB20584")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Mesh> simplifiedMeshes;

			[Token(Token = "0x4001171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SimplificationOptions simplificationOptions;

			[Token(Token = "0x4001172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float quality;

			[Token(Token = "0x4001173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public object threadLock1;

			[Token(Token = "0x4001174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int threadsRunning;

			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int meshesHandled;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public object threadLock3;

			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public object threadLock2;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool isError;

			[Token(Token = "0x4001179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string error;

			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<CustomMeshActionStructure> meshAssignments;

			[Token(Token = "0x400117B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<CustomMeshActionStructure> callbackFlusher;

			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x2007338", Offset = "0x2007338", VA = "0x2007338")]
			public <>c__DisplayClass13_0()
			{
			}
		}

		[Token(Token = "0x20002DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20594", Offset = "0xB20594")]
		private sealed class <>c__DisplayClass13_1
		{
			[Token(Token = "0x400117C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh meshToSimplify;

			[Token(Token = "0x400117D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshSimplifier meshSimplifier;

			[Token(Token = "0x400117E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass13_0 CS$<>8__locals1;

			[Token(Token = "0x400117F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action <>9__1;

			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x2007340", Offset = "0x2007340", VA = "0x2007340")]
			public <>c__DisplayClass13_1()
			{
			}

			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x2007348", Offset = "0x2007348", VA = "0x2007348")]
			internal void <SimplifyMeshes>b__0()
			{
			}

			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x2007970", Offset = "0x2007970", VA = "0x2007970")]
			internal void <SimplifyMeshes>b__1()
			{
			}
		}

		[Token(Token = "0x20002DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB205A4", Offset = "0xB205A4")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isWorking;

			[Token(Token = "0x4001181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<GameObject> OnSuccess;

			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x2007AA4", Offset = "0x2007AA4", VA = "0x2007AA4")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x2007AAC", Offset = "0x2007AAC", VA = "0x2007AAC")]
			internal void <ImportOBJFromFileSystem>b__0(GameObject importedObject)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB205B4", Offset = "0xB205B4")]
		private struct <ImportOBJFromFileSystem>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<GameObject> OnSuccess;

			[Token(Token = "0x4001185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string objAbsolutePath;

			[Token(Token = "0x4001186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string texturesFolderPath;

			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string materialsFolderPath;

			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public OBJImportOptions importOptions;

			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private <>c__DisplayClass19_0 <>8__1;

			[Token(Token = "0x400118A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<Exception> OnError;

			[Token(Token = "0x400118B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x2008058", Offset = "0x2008058", VA = "0x2008058", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x200853C", Offset = "0x200853C", VA = "0x200853C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB205C4", Offset = "0xB205C4")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isWorking;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<GameObject> OnSuccess;

			[Token(Token = "0x400118E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Exception> OnError;

			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x2007B14", Offset = "0x2007B14", VA = "0x2007B14")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x2007B1C", Offset = "0x2007B1C", VA = "0x2007B1C")]
			internal void <ImportOBJFromNetwork>b__0(GameObject importedObject)
			{
			}

			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x2007B84", Offset = "0x2007B84", VA = "0x2007B84")]
			internal void <ImportOBJFromNetwork>b__1(Exception ex)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB205D4", Offset = "0xB205D4")]
		private struct <ImportOBJFromNetwork>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<GameObject> OnSuccess;

			[Token(Token = "0x4001192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Exception> OnError;

			[Token(Token = "0x4001193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string objURL;

			[Token(Token = "0x4001194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string objName;

			[Token(Token = "0x4001195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string diffuseTexURL;

			[Token(Token = "0x4001196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string bumpTexURL;

			[Token(Token = "0x4001197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string specularTexURL;

			[Token(Token = "0x4001198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string opacityTexURL;

			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string materialURL;

			[Token(Token = "0x400119A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public ReferencedNumeric<float> downloadProgress;

			[Token(Token = "0x400119B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public OBJImportOptions importOptions;

			[Token(Token = "0x400119C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private <>c__DisplayClass20_0 <>8__1;

			[Token(Token = "0x400119D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x2008548", Offset = "0x2008548", VA = "0x2008548", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x2008940", Offset = "0x2008940", VA = "0x2008940", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB205E4", Offset = "0xB205E4")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400119E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isWorking;

			[Token(Token = "0x400119F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action OnSuccess;

			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x2007BEC", Offset = "0x2007BEC", VA = "0x2007BEC")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x2007BF4", Offset = "0x2007BF4", VA = "0x2007BF4")]
			internal void <ExportGameObjectToOBJ>b__0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB205F4", Offset = "0xB205F4")]
		private struct <ExportGameObjectToOBJ>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40011A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action OnSuccess;

			[Token(Token = "0x40011A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject toExport;

			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string exportPath;

			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public OBJExportOptions exportOptions;

			[Token(Token = "0x40011A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<Exception> OnError;

			[Token(Token = "0x40011A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private <>c__DisplayClass21_0 <>8__1;

			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x2007C1C", Offset = "0x2007C1C", VA = "0x2007C1C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x200804C", Offset = "0x200804C", VA = "0x200804C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400110B")]
		private const int MAX_LOD_COUNT = 8;

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x2022688", Offset = "0x2022688", VA = "0x2022688")]
		public static int SimplifyObjectDeep(GameObject toSimplify, SimplificationOptions simplificationOptions, Action<GameObject, MeshRendererPair> OnEachMeshSimplified)
		{
			return default(int);
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x2024E08", Offset = "0x2024E08", VA = "0x2024E08")]
		public static ObjectMeshPairs SimplifyObjectDeep(GameObject toSimplify, SimplificationOptions simplificationOptions)
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x2026A9C", Offset = "0x2026A9C", VA = "0x2026A9C")]
		public static int SimplifyObjectDeep(ObjectMeshPairs objectMeshPairs, SimplificationOptions simplificationOptions, Action<GameObject, MeshRendererPair> OnEachMeshSimplified)
		{
			return default(int);
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x20288A4", Offset = "0x20288A4", VA = "0x20288A4")]
		public static List<Mesh> SimplifyMeshes(List<Mesh> meshesToSimplify, SimplificationOptions simplificationOptions, Action<Mesh> OnEachMeshSimplified)
		{
			return null;
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x202451C", Offset = "0x202451C", VA = "0x202451C")]
		public static ObjectMeshPairs GetObjectMeshPairs(GameObject forObject, bool includeInactive)
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x20297A8", Offset = "0x20297A8", VA = "0x20297A8")]
		public static void CombineMeshesInGameObject(GameObject forObject, bool skipInactiveRenderers, Action<string, string> OnError, MeshCombineTarget combineTarget = MeshCombineTarget.SkinnedAndStatic)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x202ABA4", Offset = "0x202ABA4", VA = "0x202ABA4")]
		public static GameObject CombineMeshesFromRenderers(Transform rootTransform, MeshRenderer[] originalMeshRenderers, SkinnedMeshRenderer[] originalSkinnedMeshRenderers, Action<string, string> OnError)
		{
			return null;
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x202B438", Offset = "0x202B438", VA = "0x202B438")]
		public static void ConvertSkinnedMeshesInGameObject(GameObject forObject, bool skipInactiveRenderers, Action<string, string> OnError)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x202BC4C", Offset = "0x202BC4C", VA = "0x202BC4C")]
		public static Tuple<SkinnedMeshRenderer, MeshRenderer, Mesh>[] ConvertSkinnedMeshesFromRenderers(SkinnedMeshRenderer[] renderersToConvert, Action<string, string> OnError)
		{
			return null;
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x202C210", Offset = "0x202C210", VA = "0x202C210")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2F49C", Offset = "0xB2F49C")]
		public static void ImportOBJFromFileSystem(string objAbsolutePath, string texturesFolderPath, string materialsFolderPath, Action<GameObject> OnSuccess, Action<Exception> OnError, [Optional] OBJImportOptions importOptions)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x202C36C", Offset = "0x202C36C", VA = "0x202C36C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2F504", Offset = "0xB2F504")]
		public static void ImportOBJFromNetwork(string objURL, string objName, string diffuseTexURL, string bumpTexURL, string specularTexURL, string opacityTexURL, string materialURL, ReferencedNumeric<float> downloadProgress, Action<GameObject> OnSuccess, Action<Exception> OnError, [Optional] OBJImportOptions importOptions)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x202C528", Offset = "0x202C528", VA = "0x202C528")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2F56C", Offset = "0xB2F56C")]
		public static void ExportGameObjectToOBJ(GameObject toExport, string exportPath, Action OnSuccess, Action<Exception> OnError, [Optional] OBJExportOptions exportOptions)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x202C668", Offset = "0x202C668", VA = "0x202C668")]
		public static int CountTriangles(bool countDeep, GameObject forObject)
		{
			return default(int);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x20295E0", Offset = "0x20295E0", VA = "0x20295E0")]
		public static int CountTriangles(List<Mesh> toCount)
		{
			return default(int);
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x2024DA0", Offset = "0x2024DA0", VA = "0x2024DA0")]
		private static void SetParametersForSimplifier(SimplificationOptions simplificationOptions, MeshSimplifier meshSimplifier)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x2024870", Offset = "0x2024870", VA = "0x2024870")]
		private static bool AreAnyFeasibleMeshes(ObjectMeshPairs objectMeshPairs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x202CA50", Offset = "0x202CA50", VA = "0x202CA50")]
		private static void AssignReducedMesh(GameObject gameObject, Mesh originalMesh, Mesh reducedMesh, bool attachedToMeshfilter, bool assignBindposes)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x2024B88", Offset = "0x2024B88", VA = "0x2024B88")]
		private static int CountTriangles(ObjectMeshPairs objectMeshPairs)
		{
			return default(int);
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x202CC48", Offset = "0x202CC48", VA = "0x202CC48")]
		public PolyfewRuntime()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class UtilityServicesRuntime : MonoBehaviour
	{
		[Token(Token = "0x20002E6")]
		public class OBJExporterImporter
		{
			[StructLayout(3)]
			[Token(Token = "0x20002E7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20604", Offset = "0xB20604")]
			private struct <ExportMeshToOBJ>d__15 : IAsyncStateMachine
			{
				[Token(Token = "0x40011B2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40011B3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x40011B4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public OBJExporterImporter <>4__this;

				[Token(Token = "0x40011B5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public Mesh mesh;

				[Token(Token = "0x40011B6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public string exportPath;

				[Token(Token = "0x40011B7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private string <objectName>5__2;

				[Token(Token = "0x40011B8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private StringBuilder <sb>5__3;

				[Token(Token = "0x40011B9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				private int <lastIndex>5__4;

				[Token(Token = "0x40011BA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
				private int <faceOrder>5__5;

				[Token(Token = "0x40011BB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				private Vector3[] <>7__wrap5;

				[Token(Token = "0x40011BC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				private int <>7__wrap6;

				[Token(Token = "0x40011BD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
				private Vector3 <vx>5__8;

				[Token(Token = "0x40011BE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				private TaskAwaiter <>u__1;

				[Token(Token = "0x40011BF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				private Vector2[] <>7__wrap8;

				[Token(Token = "0x40011C0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				private Vector2 <v>5__10;

				[Token(Token = "0x40011C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
				private int[] <tris>5__11;

				[Token(Token = "0x40011C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
				private int <t>5__12;

				[Token(Token = "0x6000E77")]
				[Address(RVA = "0x25BC298", Offset = "0x25BC298", VA = "0x25BC298", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6000E78")]
				[Address(RVA = "0x25BD8B4", Offset = "0x25BD8B4", VA = "0x25BD8B4", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[StructLayout(3)]
			[Token(Token = "0x20002E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20614", Offset = "0xB20614")]
			private struct <ImportFromLocalFileSystem>d__20 : IAsyncStateMachine
			{
				[Token(Token = "0x40011C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40011C4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x40011C5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string objPath;

				[Token(Token = "0x40011C6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public string texturesFolderPath;

				[Token(Token = "0x40011C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public string materialsFolderPath;

				[Token(Token = "0x40011C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public PolyfewRuntime.OBJImportOptions importOptions;

				[Token(Token = "0x40011C9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public Action<GameObject> Callback;

				[Token(Token = "0x40011CA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				private GameObject <objectToPopulate>5__2;

				[Token(Token = "0x40011CB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				private ObjectImporter <objImporter>5__3;

				[Token(Token = "0x40011CC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				private TaskAwaiter<GameObject> <>u__1;

				[Token(Token = "0x6000E79")]
				[Address(RVA = "0x25BD8C0", Offset = "0x25BD8C0", VA = "0x25BD8C0", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6000E7A")]
				[Address(RVA = "0x25BE56C", Offset = "0x25BE56C", VA = "0x25BE56C", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[StructLayout(3)]
			[Token(Token = "0x20002E9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20624", Offset = "0xB20624")]
			private struct <ImportFromNetwork>d__21 : IAsyncStateMachine
			{
				[Token(Token = "0x40011CD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40011CE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x40011CF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public string objURL;

				[Token(Token = "0x40011D0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public string diffuseTexURL;

				[Token(Token = "0x40011D1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public string materialURL;

				[Token(Token = "0x40011D2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public PolyfewRuntime.ReferencedNumeric<float> downloadProgress;

				[Token(Token = "0x40011D3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				public PolyfewRuntime.OBJImportOptions importOptions;

				[Token(Token = "0x40011D4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				public string objName;

				[Token(Token = "0x40011D5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				public string bumpTexURL;

				[Token(Token = "0x40011D6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				public string specularTexURL;

				[Token(Token = "0x40011D7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				public string opacityTexURL;

				[Token(Token = "0x40011D8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				public Action<GameObject> OnSuccess;

				[Token(Token = "0x40011D9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				public Action<Exception> OnError;

				[Token(Token = "0x40011DA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
				private GameObject <objectToPopulate>5__2;

				[Token(Token = "0x40011DB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
				private ObjectImporter <objImporter>5__3;

				[Token(Token = "0x40011DC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
				private TaskAwaiter<GameObject> <>u__1;

				[Token(Token = "0x6000E7B")]
				[Address(RVA = "0x25BE578", Offset = "0x25BE578", VA = "0x25BE578", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6000E7C")]
				[Address(RVA = "0x25BEBC8", Offset = "0x25BEBC8", VA = "0x25BEBC8", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x20002EA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20634", Offset = "0xB20634")]
			private sealed class <>c__DisplayClass22_0
			{
				[Token(Token = "0x40011DD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public ObjectImporter objImporter;

				[Token(Token = "0x40011DE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Action<GameObject> OnSuccess;

				[Token(Token = "0x40011DF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public GameObject objectToPopulate;

				[Token(Token = "0x40011E0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public Action<Exception> OnError;

				[Token(Token = "0x6000E7D")]
				[Address(RVA = "0x25BC150", Offset = "0x25BC150", VA = "0x25BC150")]
				public <>c__DisplayClass22_0()
				{
				}

				[Token(Token = "0x6000E7E")]
				[Address(RVA = "0x25BC158", Offset = "0x25BC158", VA = "0x25BC158")]
				internal void <ImportFromNetworkWebGL>b__0(GameObject imported)
				{
				}

				[Token(Token = "0x6000E7F")]
				[Address(RVA = "0x25BC1F8", Offset = "0x25BC1F8", VA = "0x25BC1F8")]
				internal void <ImportFromNetworkWebGL>b__1(Exception exception)
				{
				}
			}

			[StructLayout(3)]
			[Token(Token = "0x20002EB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20644", Offset = "0xB20644")]
			private struct <ImportFromNetworkWebGL>d__22 : IAsyncStateMachine
			{
				[Token(Token = "0x40011E1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40011E2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x40011E3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public Action<GameObject> OnSuccess;

				[Token(Token = "0x40011E4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public Action<Exception> OnError;

				[Token(Token = "0x40011E5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public string objURL;

				[Token(Token = "0x40011E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public string diffuseTexURL;

				[Token(Token = "0x40011E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				public string materialURL;

				[Token(Token = "0x40011E8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				public PolyfewRuntime.ReferencedNumeric<float> downloadProgress;

				[Token(Token = "0x40011E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				public PolyfewRuntime.OBJImportOptions importOptions;

				[Token(Token = "0x40011EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				public string objName;

				[Token(Token = "0x40011EB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				public string bumpTexURL;

				[Token(Token = "0x40011EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				public string specularTexURL;

				[Token(Token = "0x40011ED")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				public string opacityTexURL;

				[Token(Token = "0x6000E80")]
				[Address(RVA = "0x25BEBD4", Offset = "0x25BEBD4", VA = "0x25BEBD4", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6000E81")]
				[Address(RVA = "0x25BF10C", Offset = "0x25BF10C", VA = "0x25BF10C", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool applyPosition;

			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			private bool applyRotation;

			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			private bool applyScale;

			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			private bool generateMaterials;

			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool exportTextures;

			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string exportPath;

			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private MeshFilter meshFilter;

			[Token(Token = "0x40011B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Mesh meshToExport;

			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private MeshRenderer meshRenderer;

			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x25B04F8", Offset = "0x25B04F8", VA = "0x25B04F8")]
			public OBJExporterImporter()
			{
			}

			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x25B050C", Offset = "0x25B050C", VA = "0x25B050C")]
			private void InitializeExporter(GameObject toExport, string exportPath, PolyfewRuntime.OBJExportOptions exportOptions)
			{
			}

			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x25B08F4", Offset = "0x25B08F4", VA = "0x25B08F4")]
			private void InitializeExporter(Mesh toExport, string exportPath)
			{
			}

			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x25B0ADC", Offset = "0x25B0ADC", VA = "0x25B0ADC")]
			private Vector3 RotateAroundPoint(Vector3 point, Vector3 pivot, Quaternion angle)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x25B0B3C", Offset = "0x25B0B3C", VA = "0x25B0B3C")]
			private Vector3 MultiplyVec3s(Vector3 v1, Vector3 v2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x25B0B4C", Offset = "0x25B0B4C", VA = "0x25B0B4C")]
			public void ExportGameObjectToOBJ(GameObject toExport, string exportPath, [Optional] PolyfewRuntime.OBJExportOptions exportOptions, [Optional] Action OnSuccess)
			{
			}

			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x25B277C", Offset = "0x25B277C", VA = "0x25B277C")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2F604", Offset = "0xB2F604")]
			public Task ExportMeshToOBJ(Mesh mesh, string exportPath)
			{
				return null;
			}

			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x25B28D8", Offset = "0x25B28D8", VA = "0x25B28D8")]
			private string TryExportTexture(string propertyName, Material m, string exportPath)
			{
				return null;
			}

			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x25B29EC", Offset = "0x25B29EC", VA = "0x25B29EC")]
			private string ExportTexture(Texture2D t, string exportPath)
			{
				return null;
			}

			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x25B25A8", Offset = "0x25B25A8", VA = "0x25B25A8")]
			private string ConstructOBJString(int index)
			{
				return null;
			}

			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x25B1D94", Offset = "0x25B1D94", VA = "0x25B1D94")]
			private string MaterialToString(Material m)
			{
				return null;
			}

			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x25B2D98", Offset = "0x25B2D98", VA = "0x25B2D98")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2F66C", Offset = "0xB2F66C")]
			public Task ImportFromLocalFileSystem(string objPath, string texturesFolderPath, string materialsFolderPath, Action<GameObject> Callback, [Optional] PolyfewRuntime.OBJImportOptions importOptions)
			{
				return null;
			}

			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x25B2F2C", Offset = "0x25B2F2C", VA = "0x25B2F2C")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2F6D4", Offset = "0xB2F6D4")]
			public void ImportFromNetwork(string objURL, string objName, string diffuseTexURL, string bumpTexURL, string specularTexURL, string opacityTexURL, string materialURL, PolyfewRuntime.ReferencedNumeric<float> downloadProgress, Action<GameObject> OnSuccess, Action<Exception> OnError, [Optional] PolyfewRuntime.OBJImportOptions importOptions)
			{
			}

			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x25B30E4", Offset = "0x25B30E4", VA = "0x25B30E4")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB2F73C", Offset = "0xB2F73C")]
			public void ImportFromNetworkWebGL(string objURL, string objName, string diffuseTexURL, string bumpTexURL, string specularTexURL, string opacityTexURL, string materialURL, PolyfewRuntime.ReferencedNumeric<float> downloadProgress, Action<GameObject> OnSuccess, Action<Exception> OnError, [Optional] PolyfewRuntime.OBJImportOptions importOptions)
			{
			}
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x2644C20", Offset = "0x2644C20", VA = "0x2644C20")]
		public static Texture2D DuplicateTexture(Texture2D source)
		{
			return null;
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x2644DF8", Offset = "0x2644DF8", VA = "0x2644DF8")]
		public static Renderer[] GetChildRenderersForCombining(GameObject forObject, bool skipInactiveChildObjects)
		{
			return null;
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x2645244", Offset = "0x2645244", VA = "0x2645244")]
		public static MeshRenderer CreateStaticLevelRenderer(string name, Transform parentTransform, Transform originalTransform, Mesh mesh, Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x26455C8", Offset = "0x26455C8", VA = "0x26455C8")]
		public static SkinnedMeshRenderer CreateSkinnedLevelRenderer(string name, Transform parentTransform, Transform originalTransform, Mesh mesh, Material[] materials, Transform rootBone, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x2645000", Offset = "0x2645000", VA = "0x2645000")]
		private static void CollectChildRenderersForCombining(Transform transform, List<Renderer> resultRenderers, bool skipInactiveChildObjects)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x2645564", Offset = "0x2645564", VA = "0x2645564")]
		private static void ParentAndResetTransform(Transform transform, Transform parentTransform)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x26454D4", Offset = "0x26454D4", VA = "0x26454D4")]
		public static void ParentAndOffsetTransform(Transform transform, Transform parentTransform, Transform originalTransform)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x2645810", Offset = "0x2645810", VA = "0x2645810")]
		public UtilityServicesRuntime()
		{
		}
	}
}
namespace PartyXBLCSharpSDK
{
	[Token(Token = "0x20002EC")]
	public class PARTY_XBL_ACCESSIBILITY_SETTINGS
	{
		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25A40", Offset = "0xB25A40")]
		private readonly byte <SpeechToTextEnabled>k__BackingField;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25A50", Offset = "0xB25A50")]
		private readonly byte <TextToSpeechEnabled>k__BackingField;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25A60", Offset = "0xB25A60")]
		private readonly string <LanguageCode>k__BackingField;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25A70", Offset = "0xB25A70")]
		private readonly PARTY_GENDER <Gender>k__BackingField;

		[Token(Token = "0x17000113")]
		public byte SpeechToTextEnabled
		{
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x211A850", Offset = "0x211A850", VA = "0x211A850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F7E4", Offset = "0xB2F7E4")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000114")]
		public byte TextToSpeechEnabled
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x211A858", Offset = "0x211A858", VA = "0x211A858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F7F4", Offset = "0xB2F7F4")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000115")]
		public string LanguageCode
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x211A860", Offset = "0x211A860", VA = "0x211A860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F804", Offset = "0xB2F804")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public PARTY_GENDER Gender
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x211A868", Offset = "0x211A868", VA = "0x211A868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F814", Offset = "0xB2F814")]
			get
			{
				return default(PARTY_GENDER);
			}
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x211A7E0", Offset = "0x211A7E0", VA = "0x211A7E0")]
		internal PARTY_XBL_ACCESSIBILITY_SETTINGS(PartyXBLCSharpSDK.Interop.PARTY_XBL_ACCESSIBILITY_SETTINGS interopStruct)
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class PARTY_XBL_CHAT_PERMISSION_INFO
	{
		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25A80", Offset = "0xB25A80")]
		private readonly PARTY_CHAT_PERMISSION_OPTIONS <ChatPermissionMask>k__BackingField;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25A90", Offset = "0xB25A90")]
		private readonly PARTY_XBL_CHAT_PERMISSION_MASK_REASON <Reason>k__BackingField;

		[Token(Token = "0x17000117")]
		public PARTY_CHAT_PERMISSION_OPTIONS ChatPermissionMask
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x211A8F4", Offset = "0x211A8F4", VA = "0x211A8F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F824", Offset = "0xB2F824")]
			get
			{
				return default(PARTY_CHAT_PERMISSION_OPTIONS);
			}
		}

		[Token(Token = "0x17000118")]
		public PARTY_XBL_CHAT_PERMISSION_MASK_REASON Reason
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x211A8FC", Offset = "0x211A8FC", VA = "0x211A8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F834", Offset = "0xB2F834")]
			get
			{
				return default(PARTY_XBL_CHAT_PERMISSION_MASK_REASON);
			}
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x211A8C4", Offset = "0x211A8C4", VA = "0x211A8C4")]
		internal PARTY_XBL_CHAT_PERMISSION_INFO(PartyXBLCSharpSDK.Interop.PARTY_XBL_CHAT_PERMISSION_INFO interopStruct)
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public enum PARTY_XBL_CHAT_PERMISSION_MASK_REASON : uint
	{
		[Token(Token = "0x40011F5")]
		PARTY_XBL_CHAT_PERMISSION_MASK_REASON_NO_RESTRICTION,
		[Token(Token = "0x40011F6")]
		PARTY_XBL_CHAT_PERMISSION_MASK_REASON_DETERMINING,
		[Token(Token = "0x40011F7")]
		PARTY_XBL_CHAT_PERMISSION_MASK_REASON_PRIVILEGE,
		[Token(Token = "0x40011F8")]
		PARTY_XBL_CHAT_PERMISSION_MASK_REASON_PRIVACY,
		[Token(Token = "0x40011F9")]
		PARTY_XBL_CHAT_PERMISSION_MASK_REASON_INVALID_TARGET_USER,
		[Token(Token = "0x40011FA")]
		PARTY_XBL_CHAT_PERMISSION_MASK_REASON_XBOX_LIVE_SERVICE_ERROR,
		[Token(Token = "0x40011FB")]
		PARTY_XBL_CHAT_PERMISSION_MASK_REASON_UNKNOWN_ERROR,
		[Token(Token = "0x40011FC")]
		PARTY_XBL_CHAT_PERMISSION_MASK_REASON_RESOLVE_USER_ISSUE
	}
	[Token(Token = "0x20002EF")]
	public class PARTY_XBL_CHAT_USER_HANDLE
	{
		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25AA0", Offset = "0xB25AA0")]
		private PartyXBLCSharpSDK.Interop.PARTY_XBL_CHAT_USER_HANDLE <InteropHandle>k__BackingField;

		[Token(Token = "0x17000119")]
		internal PartyXBLCSharpSDK.Interop.PARTY_XBL_CHAT_USER_HANDLE InteropHandle
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x211AA00", Offset = "0x211AA00", VA = "0x211AA00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F844", Offset = "0xB2F844")]
			get
			{
				return default(PartyXBLCSharpSDK.Interop.PARTY_XBL_CHAT_USER_HANDLE);
			}
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x211AA08", Offset = "0x211AA08", VA = "0x211AA08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F854", Offset = "0xB2F854")]
			set
			{
			}
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x211A92C", Offset = "0x211A92C", VA = "0x211A92C")]
		internal PARTY_XBL_CHAT_USER_HANDLE(PartyXBLCSharpSDK.Interop.PARTY_XBL_CHAT_USER_HANDLE interopHandle)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x211A958", Offset = "0x211A958", VA = "0x211A958")]
		internal static uint WrapAndReturnError(uint error, PartyXBLCSharpSDK.Interop.PARTY_XBL_CHAT_USER_HANDLE interopHandle, [Out] PARTY_XBL_CHAT_USER_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x211A9F8", Offset = "0x211A9F8", VA = "0x211A9F8")]
		internal void ClearInteropHandle()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public enum PARTY_XBL_CROSS_NETWORK_COMMUNICATION_PRIVACY_SETTING : uint
	{
		[Token(Token = "0x40011FF")]
		PARTY_XBL_CROSS_NETWORK_COMMUNICATION_PRIVACY_SETTING_ALLOWED,
		[Token(Token = "0x4001200")]
		PARTY_XBL_CROSS_NETWORK_COMMUNICATION_PRIVACY_SETTING_FRIENDS_ONLY,
		[Token(Token = "0x4001201")]
		PARTY_XBL_CROSS_NETWORK_COMMUNICATION_PRIVACY_SETTING_DISALLOWED
	}
	[Token(Token = "0x20002F1")]
	public class PARTY_XBL_HANDLE
	{
		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25AB0", Offset = "0xB25AB0")]
		private PartyXBLCSharpSDK.Interop.PARTY_XBL_HANDLE <InteropHandle>k__BackingField;

		[Token(Token = "0x1700011A")]
		internal PartyXBLCSharpSDK.Interop.PARTY_XBL_HANDLE InteropHandle
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x211AF80", Offset = "0x211AF80", VA = "0x211AF80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F864", Offset = "0xB2F864")]
			get
			{
				return default(PartyXBLCSharpSDK.Interop.PARTY_XBL_HANDLE);
			}
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x211AF88", Offset = "0x211AF88", VA = "0x211AF88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F874", Offset = "0xB2F874")]
			set
			{
			}
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x211AE00", Offset = "0x211AE00", VA = "0x211AE00")]
		public long GetHandleValue()
		{
			return default(long);
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x211AE2C", Offset = "0x211AE2C", VA = "0x211AE2C")]
		public PARTY_XBL_HANDLE(long handleValue)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x211AEAC", Offset = "0x211AEAC", VA = "0x211AEAC")]
		internal PARTY_XBL_HANDLE(PartyXBLCSharpSDK.Interop.PARTY_XBL_HANDLE interopHandle)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x211AED8", Offset = "0x211AED8", VA = "0x211AED8")]
		internal static uint WrapAndReturnError(uint error, PartyXBLCSharpSDK.Interop.PARTY_XBL_HANDLE interopHandle, [Out] PARTY_XBL_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x211AF78", Offset = "0x211AF78", VA = "0x211AF78")]
		internal void ClearInteropHandle()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class PARTY_XBL_HTTP_HEADER
	{
		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25AC0", Offset = "0xB25AC0")]
		private readonly string <name>k__BackingField;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25AD0", Offset = "0xB25AD0")]
		private readonly string <value>k__BackingField;

		[Token(Token = "0x1700011B")]
		public string name
		{
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x211AFF8", Offset = "0x211AFF8", VA = "0x211AFF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F884", Offset = "0xB2F884")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		public string value
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x211B000", Offset = "0x211B000", VA = "0x211B000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F894", Offset = "0xB2F894")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x211AF90", Offset = "0x211AF90", VA = "0x211AF90")]
		internal PARTY_XBL_HTTP_HEADER(PartyXBLCSharpSDK.Interop.PARTY_XBL_HTTP_HEADER interopStruct)
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public enum PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_REASON : uint
	{
		[Token(Token = "0x4001206")]
		PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_REASON_UNAUTHORIZED_LOCAL_CHAT_USER,
		[Token(Token = "0x4001207")]
		PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_REASON_FAILED_TO_GET_TOKEN_AND_SIGNATURE_FOR_LOCAL_CHAT_USER,
		[Token(Token = "0x4001208")]
		PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_REASON_XBOX_LIVE_SERVICE_TEMPORARILY_UNAVAILABLE,
		[Token(Token = "0x4001209")]
		PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_REASON_INTERNET_CONNECTIVITY_ERROR,
		[Token(Token = "0x400120A")]
		PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_REASON_XBOX_LIVE_USER_NOT_SIGNED_IN,
		[Token(Token = "0x400120B")]
		PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_REASON_UNKNOWN_ERROR
	}
	[Token(Token = "0x20002F4")]
	public class PARTY_XBL_STATE_CHANGE
	{
		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25AE0", Offset = "0xB25AE0")]
		private readonly PARTY_XBL_STATE_CHANGE_TYPE <StateChangeType>k__BackingField;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25AF0", Offset = "0xB25AF0")]
		private readonly IntPtr <StateChangeId>k__BackingField;

		[Token(Token = "0x1700011D")]
		public PARTY_XBL_STATE_CHANGE_TYPE StateChangeType
		{
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x211B9D0", Offset = "0x211B9D0", VA = "0x211B9D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F8A4", Offset = "0xB2F8A4")]
			get
			{
				return default(PARTY_XBL_STATE_CHANGE_TYPE);
			}
		}

		[Token(Token = "0x1700011E")]
		internal IntPtr StateChangeId
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x211B9D8", Offset = "0x211B9D8", VA = "0x211B9D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F8B4", Offset = "0xB2F8B4")]
			get
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x211AB28", Offset = "0x211AB28", VA = "0x211AB28")]
		protected PARTY_XBL_STATE_CHANGE(PARTY_XBL_STATE_CHANGE_TYPE StateChangeType, IntPtr StateChangeId)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x211B33C", Offset = "0x211B33C", VA = "0x211B33C")]
		internal static PARTY_XBL_STATE_CHANGE CreateFromPtr(IntPtr stateChangePtr)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F5")]
	public class PARTY_XBL_TOKEN_AND_SIGNATURE_REQUESTED_STATE_CHANGE : PARTY_XBL_STATE_CHANGE
	{
		[Serializable]
		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20654", Offset = "0xB20654")]
		private sealed class <>c
		{
			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PartyXBLCSharpSDK.Interop.PARTY_XBL_HTTP_HEADER, PARTY_XBL_HTTP_HEADER> <>9__0_0;

			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x2000178", Offset = "0x2000178", VA = "0x2000178")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x2000180", Offset = "0x2000180", VA = "0x2000180")]
			internal PARTY_XBL_HTTP_HEADER <.ctor>b__0_0(PartyXBLCSharpSDK.Interop.PARTY_XBL_HTTP_HEADER x)
			{
				return null;
			}
		}

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25B00", Offset = "0xB25B00")]
		private readonly uint <correlationId>k__BackingField;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25B10", Offset = "0xB25B10")]
		private readonly string <method>k__BackingField;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25B20", Offset = "0xB25B20")]
		private readonly string <url>k__BackingField;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25B30", Offset = "0xB25B30")]
		private readonly PARTY_XBL_HTTP_HEADER[] <headers>k__BackingField;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25B40", Offset = "0xB25B40")]
		private readonly byte[] <body>k__BackingField;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25B50", Offset = "0xB25B50")]
		private readonly bool <forceRefresh>k__BackingField;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25B60", Offset = "0xB25B60")]
		private readonly bool <allUsers>k__BackingField;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25B70", Offset = "0xB25B70")]
		private readonly PARTY_XBL_CHAT_USER_HANDLE <localChatUser>k__BackingField;

		[Token(Token = "0x1700011F")]
		public uint correlationId
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x211B9E0", Offset = "0x211B9E0", VA = "0x211B9E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F8C4", Offset = "0xB2F8C4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000120")]
		public string method
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x211B9E8", Offset = "0x211B9E8", VA = "0x211B9E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F8D4", Offset = "0xB2F8D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		public string url
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x211B9F0", Offset = "0x211B9F0", VA = "0x211B9F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F8E4", Offset = "0xB2F8E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		public PARTY_XBL_HTTP_HEADER[] headers
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x211B9F8", Offset = "0x211B9F8", VA = "0x211B9F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F8F4", Offset = "0xB2F8F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		public byte[] body
		{
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x211BA00", Offset = "0x211BA00", VA = "0x211BA00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F904", Offset = "0xB2F904")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		public bool forceRefresh
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x211BA08", Offset = "0x211BA08", VA = "0x211BA08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F914", Offset = "0xB2F914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000125")]
		public bool allUsers
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x211BA10", Offset = "0x211BA10", VA = "0x211BA10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F924", Offset = "0xB2F924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000126")]
		public PARTY_XBL_CHAT_USER_HANDLE localChatUser
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x211BA18", Offset = "0x211BA18", VA = "0x211BA18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F934", Offset = "0xB2F934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x211B6D4", Offset = "0x211B6D4", VA = "0x211B6D4")]
		internal PARTY_XBL_TOKEN_AND_SIGNATURE_REQUESTED_STATE_CHANGE(PARTY_XBL_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class PARTY_XBL_CREATE_LOCAL_CHAT_USER_COMPLETED_STATE_CHANGE : PARTY_XBL_STATE_CHANGE
	{
		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25B80", Offset = "0xB25B80")]
		private readonly PARTY_XBL_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25B90", Offset = "0xB25B90")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25BA0", Offset = "0xB25BA0")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25BB0", Offset = "0xB25BB0")]
		private readonly PARTY_XBL_CHAT_USER_HANDLE <localChatUser>k__BackingField;

		[Token(Token = "0x17000127")]
		public PARTY_XBL_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x211AB64", Offset = "0x211AB64", VA = "0x211AB64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F944", Offset = "0xB2F944")]
			get
			{
				return default(PARTY_XBL_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000128")]
		public uint errorDetail
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x211AB6C", Offset = "0x211AB6C", VA = "0x211AB6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F954", Offset = "0xB2F954")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000129")]
		public object asyncIdentifier
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x211AB74", Offset = "0x211AB74", VA = "0x211AB74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F964", Offset = "0xB2F964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public PARTY_XBL_CHAT_USER_HANDLE localChatUser
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x211AB7C", Offset = "0x211AB7C", VA = "0x211AB7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F974", Offset = "0xB2F974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x211AA10", Offset = "0x211AA10", VA = "0x211AA10")]
		internal PARTY_XBL_CREATE_LOCAL_CHAT_USER_COMPLETED_STATE_CHANGE(PARTY_XBL_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_STATE_CHANGE : PARTY_XBL_STATE_CHANGE
	{
		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25BC0", Offset = "0xB25BC0")]
		private readonly PARTY_XBL_CHAT_USER_HANDLE <localChatUser>k__BackingField;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25BD0", Offset = "0xB25BD0")]
		private readonly PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_REASON <reason>k__BackingField;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25BE0", Offset = "0xB25BE0")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x1700012B")]
		public PARTY_XBL_CHAT_USER_HANDLE localChatUser
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x211B0AC", Offset = "0x211B0AC", VA = "0x211B0AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F984", Offset = "0xB2F984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		public PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_REASON reason
		{
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x211B0B4", Offset = "0x211B0B4", VA = "0x211B0B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F994", Offset = "0xB2F994")]
			get
			{
				return default(PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_REASON);
			}
		}

		[Token(Token = "0x1700012D")]
		public uint errorDetail
		{
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x211B0BC", Offset = "0x211B0BC", VA = "0x211B0BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F9A4", Offset = "0xB2F9A4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x211B008", Offset = "0x211B008", VA = "0x211B008")]
		internal PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_STATE_CHANGE(PARTY_XBL_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class PARTY_XBL_LOGIN_TO_PLAYFAB_COMPLETED_STATE_CHANGE : PARTY_XBL_STATE_CHANGE
	{
		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25BF0", Offset = "0xB25BF0")]
		private readonly PARTY_XBL_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25C00", Offset = "0xB25C00")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25C10", Offset = "0xB25C10")]
		private readonly PARTY_XBL_CHAT_USER_HANDLE <localChatUser>k__BackingField;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25C20", Offset = "0xB25C20")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25C30", Offset = "0xB25C30")]
		private readonly string <entityId>k__BackingField;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25C40", Offset = "0xB25C40")]
		private readonly string <titlePlayerEntityToken>k__BackingField;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25C50", Offset = "0xB25C50")]
		private readonly long <expirationTime>k__BackingField;

		[Token(Token = "0x1700012E")]
		public PARTY_XBL_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x211B230", Offset = "0x211B230", VA = "0x211B230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F9B4", Offset = "0xB2F9B4")]
			get
			{
				return default(PARTY_XBL_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x1700012F")]
		public uint errorDetail
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x211B238", Offset = "0x211B238", VA = "0x211B238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F9C4", Offset = "0xB2F9C4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000130")]
		public PARTY_XBL_CHAT_USER_HANDLE localChatUser
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x211B240", Offset = "0x211B240", VA = "0x211B240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F9D4", Offset = "0xB2F9D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		public object asyncIdentifier
		{
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x211B248", Offset = "0x211B248", VA = "0x211B248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F9E4", Offset = "0xB2F9E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		public string entityId
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x211B250", Offset = "0x211B250", VA = "0x211B250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F9F4", Offset = "0xB2F9F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		public string titlePlayerEntityToken
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x211B258", Offset = "0x211B258", VA = "0x211B258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA04", Offset = "0xB2FA04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		public long expirationTime
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x211B260", Offset = "0x211B260", VA = "0x211B260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA14", Offset = "0xB2FA14")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x211B0C4", Offset = "0x211B0C4", VA = "0x211B0C4")]
		internal PARTY_XBL_LOGIN_TO_PLAYFAB_COMPLETED_STATE_CHANGE(PARTY_XBL_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class PARTY_XBL_GET_ENTITY_IDS_FROM_XBOX_LIVE_USER_IDS_COMPLETED_STATE_CHANGE : PARTY_XBL_STATE_CHANGE
	{
		[Serializable]
		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20664", Offset = "0xB20664")]
		private sealed class <>c
		{
			[Token(Token = "0x400122C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PartyXBLCSharpSDK.Interop.PARTY_XBL_XBOX_USER_ID_TO_PLAYFAB_ENTITY_ID_MAPPING, PARTY_XBL_XBOX_USER_ID_TO_PLAYFAB_ENTITY_ID_MAPPING> <>9__0_0;

			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x200009C", Offset = "0x200009C", VA = "0x200009C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x20000A4", Offset = "0x20000A4", VA = "0x20000A4")]
			internal PARTY_XBL_XBOX_USER_ID_TO_PLAYFAB_ENTITY_ID_MAPPING <.ctor>b__0_0(PartyXBLCSharpSDK.Interop.PARTY_XBL_XBOX_USER_ID_TO_PLAYFAB_ENTITY_ID_MAPPING x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25C60", Offset = "0xB25C60")]
		private readonly PARTY_XBL_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25C70", Offset = "0xB25C70")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25C80", Offset = "0xB25C80")]
		private readonly string <xboxLiveSandbox>k__BackingField;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25C90", Offset = "0xB25C90")]
		private readonly PARTY_XBL_CHAT_USER_HANDLE <localChatUser>k__BackingField;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25CA0", Offset = "0xB25CA0")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25CB0", Offset = "0xB25CB0")]
		private readonly PARTY_XBL_XBOX_USER_ID_TO_PLAYFAB_ENTITY_ID_MAPPING[] <entityIdMappings>k__BackingField;

		[Token(Token = "0x17000135")]
		public PARTY_XBL_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x211ADD0", Offset = "0x211ADD0", VA = "0x211ADD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA24", Offset = "0xB2FA24")]
			get
			{
				return default(PARTY_XBL_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000136")]
		public uint errorDetail
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x211ADD8", Offset = "0x211ADD8", VA = "0x211ADD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA34", Offset = "0xB2FA34")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000137")]
		public string xboxLiveSandbox
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x211ADE0", Offset = "0x211ADE0", VA = "0x211ADE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA44", Offset = "0xB2FA44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		public PARTY_XBL_CHAT_USER_HANDLE localChatUser
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x211ADE8", Offset = "0x211ADE8", VA = "0x211ADE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA54", Offset = "0xB2FA54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		public object asyncIdentifier
		{
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x211ADF0", Offset = "0x211ADF0", VA = "0x211ADF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA64", Offset = "0xB2FA64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		public PARTY_XBL_XBOX_USER_ID_TO_PLAYFAB_ENTITY_ID_MAPPING[] entityIdMappings
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x211ADF8", Offset = "0x211ADF8", VA = "0x211ADF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA74", Offset = "0xB2FA74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x211AB84", Offset = "0x211AB84", VA = "0x211AB84")]
		internal PARTY_XBL_GET_ENTITY_IDS_FROM_XBOX_LIVE_USER_IDS_COMPLETED_STATE_CHANGE(PARTY_XBL_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class PARTY_XBL_REQUIRED_CHAT_PERMISSION_INFO_CHANGED_STATE_CHANGE : PARTY_XBL_STATE_CHANGE
	{
		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25CC0", Offset = "0xB25CC0")]
		private readonly PARTY_XBL_CHAT_USER_HANDLE <localChatUser>k__BackingField;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25CD0", Offset = "0xB25CD0")]
		private readonly PARTY_XBL_CHAT_USER_HANDLE <targetChatUser>k__BackingField;

		[Token(Token = "0x1700013B")]
		public PARTY_XBL_CHAT_USER_HANDLE localChatUser
		{
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x211B32C", Offset = "0x211B32C", VA = "0x211B32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA84", Offset = "0xB2FA84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		public PARTY_XBL_CHAT_USER_HANDLE targetChatUser
		{
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x211B334", Offset = "0x211B334", VA = "0x211B334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FA94", Offset = "0xB2FA94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x211B268", Offset = "0x211B268", VA = "0x211B268")]
		internal PARTY_XBL_REQUIRED_CHAT_PERMISSION_INFO_CHANGED_STATE_CHANGE(PARTY_XBL_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public enum PARTY_XBL_STATE_CHANGE_RESULT : uint
	{
		[Token(Token = "0x4001231")]
		PARTY_XBL_STATE_CHANGE_RESULT_SUCCEEDED,
		[Token(Token = "0x4001232")]
		PARTY_XBL_STATE_CHANGE_RESULT_UNKNOWN_ERROR,
		[Token(Token = "0x4001233")]
		PARTY_XBL_STATE_CHANGE_RESULT_CANCELED_BY_TITLE,
		[Token(Token = "0x4001234")]
		PARTY_XBL_STATE_CHANGE_RESULT_USER_NOT_AUTHORIZED,
		[Token(Token = "0x4001235")]
		PARTY_XBL_STATE_CHANGE_RESULT_LOGIN_TO_PLAYFAB_THROTTLED,
		[Token(Token = "0x4001236")]
		PARTY_XBL_STATE_CHANGE_RESULT_PARTY_SERVICE_ERROR,
		[Token(Token = "0x4001237")]
		PARTY_XBL_STATE_CHANGE_RESULT_XBOX_LIVE_SERVICE_TEMPORARILY_UNAVAILABLE,
		[Token(Token = "0x4001238")]
		PARTY_XBL_STATE_CHANGE_RESULT_INTERNET_CONNECTIVITY_ERROR,
		[Token(Token = "0x4001239")]
		PARTY_XBL_STATE_CHANGE_RESULT_PLAYFAB_RATE_LIMIT_EXCEEDED
	}
	[Token(Token = "0x20002FE")]
	public enum PARTY_XBL_STATE_CHANGE_TYPE : uint
	{
		[Token(Token = "0x400123B")]
		PARTY_XBL_STATE_CHANGE_TYPE_CREATE_LOCAL_CHAT_USER_COMPLETED,
		[Token(Token = "0x400123C")]
		PARTY_XBL_STATE_CHANGE_TYPE_LOCAL_CHAT_USER_DESTROYED,
		[Token(Token = "0x400123D")]
		PARTY_XBL_STATE_CHANGE_TYPE_REQUIRED_CHAT_PERMISSION_INFO_CHANGED,
		[Token(Token = "0x400123E")]
		PARTY_XBL_STATE_CHANGE_TYPE_TOKEN_AND_SIGNATURE_REQUESTED,
		[Token(Token = "0x400123F")]
		PARTY_XBL_STATE_CHANGE_TYPE_LOGIN_TO_PLAYFAB_COMPLETED,
		[Token(Token = "0x4001240")]
		PARTY_XBL_STATE_CHANGE_TYPE_GET_ENTITY_IDS_FROM_XBOX_LIVE_USER_IDS_COMPLETED
	}
	[Token(Token = "0x20002FF")]
	public enum PARTY_XBL_THREAD_ID : uint
	{
		[Token(Token = "0x4001242")]
		PARTY_XBL_THREAD_ID_WEB_REQUEST
	}
	[Token(Token = "0x2000300")]
	public class PARTY_XBL_XBOX_USER_ID_TO_PLAYFAB_ENTITY_ID_MAPPING
	{
		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25CE0", Offset = "0xB25CE0")]
		private readonly ulong <xboxLiveUserId>k__BackingField;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25CF0", Offset = "0xB25CF0")]
		private readonly string <playfabEntityId>k__BackingField;

		[Token(Token = "0x1700013D")]
		public ulong xboxLiveUserId
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x211BA70", Offset = "0x211BA70", VA = "0x211BA70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAA4", Offset = "0xB2FAA4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700013E")]
		public string playfabEntityId
		{
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x211BA78", Offset = "0x211BA78", VA = "0x211BA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAB4", Offset = "0xB2FAB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x211BA20", Offset = "0x211BA20", VA = "0x211BA20")]
		internal PARTY_XBL_XBOX_USER_ID_TO_PLAYFAB_ENTITY_ID_MAPPING(PartyXBLCSharpSDK.Interop.PARTY_XBL_XBOX_USER_ID_TO_PLAYFAB_ENTITY_ID_MAPPING interopStruct)
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class XBLSDK
	{
		[Serializable]
		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20674", Offset = "0xB20674")]
		private sealed class <>c
		{
			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PartyXBLCSharpSDK.Interop.PARTY_XBL_CHAT_USER_HANDLE, PARTY_XBL_CHAT_USER_HANDLE> <>9__20_0;

			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x25B3490", Offset = "0x25B3490", VA = "0x25B3490")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x25B3498", Offset = "0x25B3498", VA = "0x25B3498")]
			internal PARTY_XBL_CHAT_USER_HANDLE <PartyXblGetChatUsers>b__20_0(PartyXBLCSharpSDK.Interop.PARTY_XBL_CHAT_USER_HANDLE s)
			{
				return null;
			}
		}

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static ObjectPool objectPool;

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x1FE60A0", Offset = "0x1FE60A0", VA = "0x1FE60A0")]
		static XBLSDK()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x1FE617C", Offset = "0x1FE617C", VA = "0x1FE617C")]
		public static uint PartyXblChatUserIsLocal(PARTY_XBL_CHAT_USER_HANDLE handle, [Out] bool isLocal)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x1FE6234", Offset = "0x1FE6234", VA = "0x1FE6234")]
		public static uint PartyXblChatUserGetXboxUserId(PARTY_XBL_CHAT_USER_HANDLE handle, [Out] ulong xboxUserId)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x1FE6250", Offset = "0x1FE6250", VA = "0x1FE6250")]
		public static uint PartyXblChatUserSetCustomContext(PARTY_XBL_CHAT_USER_HANDLE handle, object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1FE6394", Offset = "0x1FE6394", VA = "0x1FE6394")]
		public static uint PartyXblChatUserGetCustomContext(PARTY_XBL_CHAT_USER_HANDLE handle, [Out] object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1FE6480", Offset = "0x1FE6480", VA = "0x1FE6480")]
		public static uint PartyXblLocalChatUserGetAccessibilitySettings(PARTY_XBL_CHAT_USER_HANDLE handle, [Out] PARTY_XBL_ACCESSIBILITY_SETTINGS settings)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x1FE6578", Offset = "0x1FE6578", VA = "0x1FE6578")]
		public static uint PartyXblLocalChatUserGetRequiredChatPermissionInfo(PARTY_XBL_CHAT_USER_HANDLE handle, PARTY_XBL_CHAT_USER_HANDLE targetChaUser, [Out] PARTY_XBL_CHAT_PERMISSION_INFO chatPermissionInfo)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x1FE6648", Offset = "0x1FE6648", VA = "0x1FE6648")]
		public static uint PartyXblLocalChatUserGetCrossNetworkCommunicationPrivacySetting(PARTY_XBL_CHAT_USER_HANDLE handle, [Out] PARTY_XBL_CROSS_NETWORK_COMMUNICATION_PRIVACY_SETTING setting)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1FE6664", Offset = "0x1FE6664", VA = "0x1FE6664")]
		public static uint PartyXblGetErrorMessage(uint error, [Out] string errorMessage)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x1FE66D8", Offset = "0x1FE66D8", VA = "0x1FE66D8")]
		public static uint PartyXblSetThreadAffinityMask(PARTY_XBL_THREAD_ID threadId, ulong threadAffinityMask)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1FE66E0", Offset = "0x1FE66E0", VA = "0x1FE66E0")]
		public static uint PartyXblGetThreadAffinityMask(PARTY_XBL_THREAD_ID threadId, [Out] ulong threadAffinityMask)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x1FE66E8", Offset = "0x1FE66E8", VA = "0x1FE66E8")]
		public static uint PartyXblInitialize(string titleId, [Out] PARTY_XBL_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x1FE6764", Offset = "0x1FE6764", VA = "0x1FE6764")]
		public static uint PartyXblCleanup(PARTY_XBL_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1FE6784", Offset = "0x1FE6784", VA = "0x1FE6784")]
		public static uint PartyXblStartProcessingStateChanges(PARTY_XBL_HANDLE handle, [Out] List<PARTY_XBL_STATE_CHANGE> stateChanges)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x1FE6A18", Offset = "0x1FE6A18", VA = "0x1FE6A18")]
		public static uint PartyXblFinishProcessingStateChanges(PARTY_XBL_HANDLE handle, List<PARTY_XBL_STATE_CHANGE> stateChanges)
		{
			return default(uint);
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x1FE6B84", Offset = "0x1FE6B84", VA = "0x1FE6B84")]
		public static uint PartyXblCreateLocalChatUser(PARTY_XBL_HANDLE handle, ulong xboxUserId, object asyncIdentifier, [Out] PARTY_XBL_CHAT_USER_HANDLE localXboxLiveUser)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x1FE6CC8", Offset = "0x1FE6CC8", VA = "0x1FE6CC8")]
		public static uint PartyXblCompleteGetTokenAndSignatureRequest(PARTY_XBL_HANDLE handle, uint correlationId, bool succeeded, string token, string signature)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x1FE6DA8", Offset = "0x1FE6DA8", VA = "0x1FE6DA8")]
		public static uint PartyXblCreateRemoteChatUser(PARTY_XBL_HANDLE handle, ulong xboxUserId, [Out] PARTY_XBL_CHAT_USER_HANDLE chatUser)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x1FE6E18", Offset = "0x1FE6E18", VA = "0x1FE6E18")]
		public static uint PartyXblDestroyChatUser(PARTY_XBL_HANDLE handle, PARTY_XBL_CHAT_USER_HANDLE chatUser)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x1FE6E38", Offset = "0x1FE6E38", VA = "0x1FE6E38")]
		public static uint PartyXblGetChatUsers(PARTY_XBL_HANDLE handle, [Out] PARTY_XBL_CHAT_USER_HANDLE[] chatUsers)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x1FE7008", Offset = "0x1FE7008", VA = "0x1FE7008")]
		public static uint PartyXblLoginToPlayFab(PARTY_XBL_CHAT_USER_HANDLE localChatUser, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x1FE70D4", Offset = "0x1FE70D4", VA = "0x1FE70D4")]
		public static uint PartyXblGetEntityIdsFromXboxLiveUserIds(PARTY_XBL_HANDLE handle, ulong[] xboxLiveUserIds, PARTY_XBL_CHAT_USER_HANDLE localChatUser, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1FE71C0", Offset = "0x1FE71C0", VA = "0x1FE71C0")]
		public XBLSDK()
		{
		}
	}
}
namespace PartyXBLCSharpSDK.Interop
{
	[Token(Token = "0x2000303")]
	internal class PartyXblInterop
	{
		[Token(Token = "0x4001248")]
		private const string ThunkDllName = "PartyXboxLiveWin32";

		[PreserveSig]
		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x201495C", Offset = "0x201495C", VA = "0x201495C")]
		internal static extern uint PartyXblStartProcessingStateChanges(PARTY_XBL_HANDLE handle, [Out] uint stateChangeCount, [Out] IntPtr stateChanges);

		[PreserveSig]
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x20149F0", Offset = "0x20149F0", VA = "0x20149F0")]
		internal static extern uint PartyXblDestroyChatUser(PARTY_XBL_HANDLE handle, PARTY_XBL_CHAT_USER_HANDLE chatUser);

		[PreserveSig]
		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x2014A7C", Offset = "0x2014A7C", VA = "0x2014A7C")]
		internal static extern uint PartyXblInitialize(IntPtr partyHandle, byte[] titleId, [Out] PARTY_XBL_HANDLE handle);

		[PreserveSig]
		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x2014B14", Offset = "0x2014B14", VA = "0x2014B14")]
		internal static extern uint PartyXblCompleteGetTokenAndSignatureRequest(PARTY_XBL_HANDLE handle, uint correlationId, byte succeeded, byte[] token, byte[] signature);

		[PreserveSig]
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x2014BD0", Offset = "0x2014BD0", VA = "0x2014BD0")]
		internal static extern uint PartyXblLocalChatUserGetCrossNetworkCommunicationPrivacySetting(PARTY_XBL_CHAT_USER_HANDLE handle, [Out] PARTY_XBL_CROSS_NETWORK_COMMUNICATION_PRIVACY_SETTING setting);

		[PreserveSig]
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x2014C5C", Offset = "0x2014C5C", VA = "0x2014C5C")]
		internal static extern uint PartyXblLocalChatUserGetAccessibilitySettings(PARTY_XBL_CHAT_USER_HANDLE handle, [Out] PARTY_XBL_ACCESSIBILITY_SETTINGS settings);

		[PreserveSig]
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x2014CE8", Offset = "0x2014CE8", VA = "0x2014CE8")]
		internal static extern uint PartyXblCleanup(PARTY_XBL_HANDLE handle);

		[PreserveSig]
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x2014D64", Offset = "0x2014D64", VA = "0x2014D64")]
		internal static extern uint PartyXblGetChatUsers(PARTY_XBL_HANDLE handle, [Out] uint chatUserCount, [Out] IntPtr chatUsers);

		[PreserveSig]
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x2014DF8", Offset = "0x2014DF8", VA = "0x2014DF8")]
		internal static extern uint PartyXblChatUserGetXboxUserId(PARTY_XBL_CHAT_USER_HANDLE handle, [Out] ulong xboxUserId);

		[PreserveSig]
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x2014E84", Offset = "0x2014E84", VA = "0x2014E84")]
		internal static extern uint PartyXblLoginToPlayFab(PARTY_XBL_CHAT_USER_HANDLE localChatUser, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x2014F10", Offset = "0x2014F10", VA = "0x2014F10")]
		internal static extern uint PartyXblCreateRemoteChatUser(PARTY_XBL_HANDLE handle, ulong xboxUserId, [Out] PARTY_XBL_CHAT_USER_HANDLE chatUser);

		[PreserveSig]
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x2014FA4", Offset = "0x2014FA4", VA = "0x2014FA4")]
		internal static extern uint PartyXblSetThreadAffinityMask(PARTY_XBL_THREAD_ID threadId, ulong threadAffinityMask);

		[PreserveSig]
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x2015030", Offset = "0x2015030", VA = "0x2015030")]
		internal static extern uint PartyXblGetThreadAffinityMask(PARTY_XBL_THREAD_ID threadId, [Out] ulong threadAffinityMask);

		[PreserveSig]
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x20150BC", Offset = "0x20150BC", VA = "0x20150BC")]
		internal static extern uint PartyXblChatUserIsLocal(PARTY_XBL_CHAT_USER_HANDLE handle, [Out] byte isLocal);

		[PreserveSig]
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x2015148", Offset = "0x2015148", VA = "0x2015148")]
		internal static extern uint PartyXblFinishProcessingStateChanges(PARTY_XBL_HANDLE handle, uint stateChangeCount, IntPtr stateChanges);

		[PreserveSig]
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x20151DC", Offset = "0x20151DC", VA = "0x20151DC")]
		internal static extern uint PartyXblChatUserSetCustomContext(PARTY_XBL_CHAT_USER_HANDLE handle, IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x2015268", Offset = "0x2015268", VA = "0x2015268")]
		internal static extern uint PartyXblChatUserGetCustomContext(PARTY_XBL_CHAT_USER_HANDLE handle, [Out] IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x20152F4", Offset = "0x20152F4", VA = "0x20152F4")]
		internal static extern uint PartyXblGetErrorMessage(uint error, [Out] UTF8StringPtr errorMessage);

		[PreserveSig]
		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x2015380", Offset = "0x2015380", VA = "0x2015380")]
		internal static extern uint PartyXblCreateLocalChatUser(PARTY_XBL_HANDLE handle, ulong xboxUserId, IntPtr asyncIdentifier, [Out] PARTY_XBL_CHAT_USER_HANDLE localXboxLiveUser);

		[PreserveSig]
		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x2015424", Offset = "0x2015424", VA = "0x2015424")]
		internal static extern uint PartyXblLocalChatUserGetRequiredChatPermissionInfo(PARTY_XBL_CHAT_USER_HANDLE handle, PARTY_XBL_CHAT_USER_HANDLE targetChaUser, [Out] PARTY_XBL_CHAT_PERMISSION_INFO chatPermissionInfo);

		[PreserveSig]
		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x20154B8", Offset = "0x20154B8", VA = "0x20154B8")]
		internal static extern uint PartyXblGetEntityIdsFromXboxLiveUserIds(PARTY_XBL_HANDLE handle, uint xboxLiveUserIdCount, ulong[] xboxLiveUserIds, PARTY_XBL_CHAT_USER_HANDLE localChatUser, IntPtr asyncIdentifier);

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x201556C", Offset = "0x201556C", VA = "0x201556C")]
		public PartyXblInterop()
		{
		}
	}
	[Token(Token = "0x2000304")]
	internal struct PARTY_XBL_ACCESSIBILITY_SETTINGS
	{
		[Token(Token = "0x2000305")]
		[UnsafeValueType]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20684", Offset = "0xB20684")]
		public struct <languageCode>e__FixedBuffer
		{
			[Token(Token = "0x400124D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte FixedElementField;
		}

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly byte speechToTextEnabled;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal readonly byte textToSpeechEnabled;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[AttributeAttribute(Name = "FixedBufferAttribute", RVA = "0xB25D00", Offset = "0xB25D00")]
		private <languageCode>e__FixedBuffer languageCode;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal readonly PARTY_GENDER gender;

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x211A840", Offset = "0x211A840", VA = "0x211A840")]
		internal string GetLanguageCode()
		{
			return null;
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x211A870", Offset = "0x211A870", VA = "0x211A870")]
		internal PARTY_XBL_ACCESSIBILITY_SETTINGS(PartyXBLCSharpSDK.PARTY_XBL_ACCESSIBILITY_SETTINGS publicObject)
		{
		}
	}
	[Token(Token = "0x2000306")]
	internal struct PARTY_XBL_CHAT_HANDLE
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IntPtr handle;
	}
	[Token(Token = "0x2000307")]
	internal struct PARTY_XBL_CHAT_PERMISSION_INFO
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CHAT_PERMISSION_OPTIONS chatPermissionMask;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_XBL_CHAT_PERMISSION_MASK_REASON reason;

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x211A904", Offset = "0x211A904", VA = "0x211A904")]
		internal PARTY_XBL_CHAT_PERMISSION_INFO(PartyXBLCSharpSDK.PARTY_XBL_CHAT_PERMISSION_INFO publicObject)
		{
		}
	}
	[Token(Token = "0x2000308")]
	internal struct PARTY_XBL_CHAT_USER_HANDLE
	{
		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IntPtr handle;
	}
	[Token(Token = "0x2000309")]
	internal struct PARTY_XBL_HANDLE
	{
		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly IntPtr handle;

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x211AE78", Offset = "0x211AE78", VA = "0x211AE78")]
		internal PARTY_XBL_HANDLE(long handleValue)
		{
		}
	}
	[Token(Token = "0x200030A")]
	internal struct PARTY_XBL_HTTP_HEADER
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly IntPtr name;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly IntPtr value;
	}
	[Token(Token = "0x200030B")]
	internal struct PARTY_XBL_STATE_CHANGE
	{
		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_STATE_CHANGE_TYPE stateChangeType;
	}
	[Token(Token = "0x200030C")]
	internal struct PARTY_XBL_CREATE_LOCAL_CHAT_USER_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_STATE_CHANGE stateChange;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_XBL_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly IntPtr asyncIdentifier;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_XBL_CHAT_USER_HANDLE localChatUser;
	}
	[Token(Token = "0x200030D")]
	internal struct PARTY_XBL_LOGIN_TO_PLAYFAB_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_STATE_CHANGE stateChange;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_XBL_STATE_CHANGE_RESULT result;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_XBL_CHAT_USER_HANDLE localChatUser;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr asyncIdentifier;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr entityId;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly IntPtr titlePlayerEntityToken;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal readonly long expirationTime;
	}
	[Token(Token = "0x200030E")]
	internal struct PARTY_XBL_GET_ENTITY_IDS_FROM_XBOX_LIVE_USER_IDS_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_STATE_CHANGE stateChange;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_XBL_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly IntPtr xboxLiveSandbox;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_XBL_CHAT_USER_HANDLE localChatUser;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly uint entityIdMappingCount;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal readonly IntPtr entityIdMappings;
	}
	[Token(Token = "0x200030F")]
	internal struct PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_STATE_CHANGE
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_STATE_CHANGE stateChange;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_XBL_CHAT_USER_HANDLE localChatUser;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_REASON reason;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal readonly uint errorDetail;
	}
	[Token(Token = "0x2000310")]
	internal struct PARTY_XBL_REQUIRED_CHAT_PERMISSION_INFO_CHANGED_STATE_CHANGE
	{
		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_STATE_CHANGE stateChange;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_XBL_CHAT_USER_HANDLE localChatUser;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_XBL_CHAT_USER_HANDLE targetChatUser;
	}
	[Token(Token = "0x2000311")]
	internal struct PARTY_XBL_TOKEN_AND_SIGNATURE_REQUESTED_STATE_CHANGE
	{
		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_STATE_CHANGE stateChange;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly uint correlationId;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly IntPtr method;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly IntPtr url;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly uint headerCount;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr headers;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly uint bodySize;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal readonly IntPtr body;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal readonly byte forceRefresh;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		internal readonly byte allUsers;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal readonly PARTY_XBL_CHAT_USER_HANDLE localChatUser;
	}
	[StructLayout(2)]
	[Token(Token = "0x2000312")]
	internal struct PARTY_XBL_STATE_CHANGE_UNION
	{
		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_STATE_CHANGE stateChange;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_CREATE_LOCAL_CHAT_USER_COMPLETED_STATE_CHANGE createLocalChatUserCompleted;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_LOGIN_TO_PLAYFAB_COMPLETED_STATE_CHANGE loginToPlayfabCompleted;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_GET_ENTITY_IDS_FROM_XBOX_LIVE_USER_IDS_COMPLETED_STATE_CHANGE getEntityIdsFromXboxLiveUserIdsCompleted;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_LOCAL_CHAT_USER_DESTROYED_STATE_CHANGE localChatUserDestroyed;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_REQUIRED_CHAT_PERMISSION_INFO_CHANGED_STATE_CHANGE requiredChatPermissionInfoChanged;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_XBL_TOKEN_AND_SIGNATURE_REQUESTED_STATE_CHANGE tokenAndSignatureRequested;
	}
	[Token(Token = "0x2000313")]
	internal struct PARTY_XBL_XBOX_USER_ID_TO_PLAYFAB_ENTITY_ID_MAPPING
	{
		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly ulong xboxLiveUserId;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly IntPtr playfabEntityId;
	}
}
namespace PlayFab.Party
{
	[Token(Token = "0x2000314")]
	public enum AccessibilityMode
	{
		[Token(Token = "0x4001287")]
		None,
		[Token(Token = "0x4001288")]
		PlatformDefault
	}
	[Token(Token = "0x2000315")]
	public enum ChatMessageType
	{
		[Token(Token = "0x400128A")]
		Text,
		[Token(Token = "0x400128B")]
		SpeechToText,
		[Token(Token = "0x400128C")]
		TextToSpeech
	}
	[Token(Token = "0x2000316")]
	public enum ChatState
	{
		[Token(Token = "0x400128E")]
		NoAudioInput,
		[Token(Token = "0x400128F")]
		Muted,
		[Token(Token = "0x4001290")]
		MutedByPlatform,
		[Token(Token = "0x4001291")]
		Silent,
		[Token(Token = "0x4001292")]
		Talking
	}
	[Token(Token = "0x2000317")]
	public enum DeliveryOption
	{
		[Token(Token = "0x4001294")]
		BestEffort,
		[Token(Token = "0x4001295")]
		Guaranteed
	}
	[Token(Token = "0x2000318")]
	public class PlayFabLocalPlayer : PlayFabPlayer
	{
		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _languageCode;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AccessibilityMode _textToSpeechMode;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private AccessibilityMode _speechToTextMode;

		[Token(Token = "0x1700013F")]
		public string LanguageCode
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x2019E08", Offset = "0x2019E08", VA = "0x2019E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		public string PlatformSpecificUserId
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x201A124", Offset = "0x201A124", VA = "0x201A124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		public AccessibilityMode SpeechToTextMode
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x201A12C", Offset = "0x201A12C", VA = "0x201A12C")]
			get
			{
				return default(AccessibilityMode);
			}
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x201A134", Offset = "0x201A134", VA = "0x201A134")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public AccessibilityMode TextToSpeechMode
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x201A13C", Offset = "0x201A13C", VA = "0x201A13C")]
			get
			{
				return default(AccessibilityMode);
			}
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x201A144", Offset = "0x201A144", VA = "0x201A144")]
			set
			{
			}
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x2019D6C", Offset = "0x2019D6C", VA = "0x2019D6C")]
		public PlayFabLocalPlayer()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class PlayFabMultiplayerManager : MonoBehaviour
	{
		[Token(Token = "0x200031A")]
		public delegate void OnNetworkJoinedHandler(object sender, string networkId);

		[Token(Token = "0x200031B")]
		public delegate void OnNetworkLeftHandler(object sender, string networkId);

		[Token(Token = "0x200031C")]
		public delegate void OnRemotePlayerJoinedHandler(object sender, PlayFabPlayer player);

		[Token(Token = "0x200031D")]
		public delegate void OnRemotePlayerLeftHandler(object sender, PlayFabPlayer player);

		[Token(Token = "0x200031E")]
		public delegate void OnNetworkChangedHandler(object sender, string newNetworkId);

		[Token(Token = "0x200031F")]
		public delegate void OnChatMessageReceivedHandler(object sender, PlayFabPlayer from, string message, ChatMessageType type);

		[Token(Token = "0x2000320")]
		public delegate void OnDataMessageReceivedHandler(object sender, PlayFabPlayer from, byte[] buffer);

		[Token(Token = "0x2000321")]
		public delegate void OnDataMessageReceivedNoCopyHandler(object sender, PlayFabPlayer from, IntPtr buffer, uint bufferSize);

		[Token(Token = "0x2000322")]
		public delegate void OnErrorEventHandler(object sender, PlayFabMultiplayerManagerErrorArgs args);

		[Token(Token = "0x2000323")]
		internal enum _InternalPlayFabMultiplayerManagerState
		{
			[Token(Token = "0x40012D8")]
			NotInitialized,
			[Token(Token = "0x40012D9")]
			PendingInitialization,
			[Token(Token = "0x40012DA")]
			Initialized,
			[Token(Token = "0x40012DB")]
			LoginRequestIssued,
			[Token(Token = "0x40012DC")]
			LocalUserCreated,
			[Token(Token = "0x40012DD")]
			LocalUserAuthenticated,
			[Token(Token = "0x40012DE")]
			ConnectedToNetwork
		}

		[Token(Token = "0x2000324")]
		private struct QueuedStartCreateAndJoinNetworkOp
		{
			[Token(Token = "0x40012DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool queued;

			[Token(Token = "0x40012E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PlayFabNetworkConfiguration networkConfiguration;
		}

		[Token(Token = "0x2000325")]
		private struct QueuedCreateAndJoinAfterLeaveNetworkOp
		{
			[Token(Token = "0x40012E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool queued;

			[Token(Token = "0x40012E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PlayFabNetworkConfiguration networkConfiguration;
		}

		[Token(Token = "0x2000326")]
		private struct QueuedJoinNetworkOp
		{
			[Token(Token = "0x40012E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool queued;

			[Token(Token = "0x40012E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string networkId;
		}

		[Token(Token = "0x2000327")]
		private struct QueuedCompleteJoinAfterLeaveNetworkOp
		{
			[Token(Token = "0x40012E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool queued;

			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string networkId;
		}

		[Token(Token = "0x2000328")]
		public enum LogLevelType
		{
			[Token(Token = "0x40012E8")]
			None,
			[Token(Token = "0x40012E9")]
			Minimal,
			[Token(Token = "0x40012EA")]
			Verbose
		}

		[Token(Token = "0x2000329")]
		private enum PlayFabMultiplayerManagerMessageType : sbyte
		{
			[Token(Token = "0x40012EC")]
			Unset,
			[Token(Token = "0x40012ED")]
			Game,
			[Token(Token = "0x40012EE")]
			PolicyManager
		}

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlayFabMultiplayerManager _multiplayerManager;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IPlayFabChatPlatformPolicyProvider _platformPolicyProvider;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayFabLocalPlayer _localPlayer;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _networkId;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _generatedInvitationId;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<PlayFabPlayer> _remotePlayers;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PartyCSharpSDK.PARTY_HANDLE _partyHandle;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PartyCSharpSDK.PARTY_NETWORK_HANDLE _networkHandle;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PartyCSharpSDK.PARTY_LOCAL_USER_HANDLE _localUserHandle;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PartyCSharpSDK.PARTY_DEVICE_HANDLE _localDeviceHandle;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PartyCSharpSDK.PARTY_ENDPOINT_HANDLE _localEndPointHandle;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PartyCSharpSDK.PARTY_CHAT_CONTROL_HANDLE _localChatControlHandle;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PartyCSharpSDK.PARTY_NETWORK_DESCRIPTOR _networkDescriptor;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private _InternalPlayFabMultiplayerManagerState _playFabMultiplayerManagerState;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private PARTY_SEND_MESSAGE_OPTIONS _defaultSendOptions;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PartyCSharpSDK.PARTY_SEND_MESSAGE_QUEUING_CONFIGURATION _defaultQueuingConfiguration;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _isTextToSpeechEnabled;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isSpeechToTextEnabled;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _cleanupStarted;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static LogLevelType _logLevel;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _logLevelSetByUser;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<PartyCSharpSDK.PARTY_ENDPOINT_HANDLE[]> _cachedSendMessageEndpointHandles;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<PartyCSharpSDK.PARTY_CHAT_CONTROL_HANDLE[]> _cachedSendMessageChatControlHandles;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PartyCSharpSDK.PARTY_CHAT_CONTROL_HANDLE[] _cachedAllChatHandlesList;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<PartyCSharpSDK.PARTY_STATE_CHANGE> _partyStateChanges;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static PartyCSharpSDK.PARTY_ENDPOINT_HANDLE[] _emptyEndpointHandlesArray;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static PartyCSharpSDK.PARTY_CHAT_CONTROL_HANDLE[] _emptyChatControlHandlesArray;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private QueuedStartCreateAndJoinNetworkOp _queuedStartCreateAndJoinNetworkCreateLocalUserOp;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private QueuedCreateAndJoinAfterLeaveNetworkOp _queuedCreateAndJoinAfterLeaveNetworkOp;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private QueuedJoinNetworkOp _queuedJoinNetworkCreateLocalUserOp;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private QueuedCompleteJoinAfterLeaveNetworkOp _queuedCompleteJoinAfterLeaveNetworkOp;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool _isLeaveNetworkInProgress;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool _isJoinNetworkInProgress;

		[Token(Token = "0x40012BA")]
		private const int _DEVICES_PER_USER_COUNT = 1;

		[Token(Token = "0x40012BB")]
		private const int _ENDPOINTS_PER_DEVICE_COUNT = 1;

		[Token(Token = "0x40012BC")]
		private const int _USERS_PER_DEVICE = 1;

		[Token(Token = "0x40012BD")]
		private const string _NETWORK_ID_INVITE_AND_DESCRIPTOR_SEPERATOR = "|";

		[Token(Token = "0x40012BE")]
		private const PARTY_CHAT_PERMISSION_OPTIONS _CHAT_PERMISSIONS_ALL = (PARTY_CHAT_PERMISSION_OPTIONS)31u;

		[Token(Token = "0x40012BF")]
		private const PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS _PLATFORM_DEFAULT_CHAT_TRANSCRIPTION_OPTIONS = PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS.PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS_TRANSCRIBE_OTHER_CHAT_CONTROLS_WITH_MATCHING_LANGUAGES;

		[Token(Token = "0x40012C0")]
		private const string _ENTITY_TYPE_TITLE_PLAYER_ACCOUNT = "title_player_account";

		[Token(Token = "0x40012C1")]
		private const string _ErrorMessageNoUserLoggedIn = "No users logged in. You need to log in a user to PlayFab using the PlayFabClientAPI.LoginWithCustomID API.";

		[Token(Token = "0x40012C2")]
		private const string _ErrorMessageMissingNetworkId = "networkId cannot be empty.";

		[Token(Token = "0x40012C3")]
		private const string _ErrorMessageMissingNetworkConfiguration = "networkConfiguration cannot be null.";

		[Token(Token = "0x40012C4")]
		private const string _ErrorMessageMissingPlayFabTitleId = "Missing Title ID. Please set your Title ID in the PlayFab Editor Extension.";

		[Token(Token = "0x40012C5")]
		private const string _ErrorMessagePartyAlreadyInitialized = "The Party DLL could not be unloaded. Please restart Unity to unload it.";

		[Token(Token = "0x40012C6")]
		private const string _ErrorMessagePlayerNotFound = "Player not found.";

		[Token(Token = "0x40012C7")]
		private const string _ErrorMessageEmptyDataMessagePayload = "Data message cannot be empty.";

		[Token(Token = "0x40012C8")]
		private const string _ErrorMessageTooManyRecipients = "Too many recipients.";

		[Token(Token = "0x40012C9")]
		private const string _ErrorMessageCannotCallAPINotConnectedToNetwork = "You need to connect to a network before you can call this method.";

		[Token(Token = "0x40012CA")]
		private const string _ErrorMessageMissingMultiplayerManagerPrefab = "PlayFabMultiplayerManager Prefab not found.You need to add the PlayFabMultiplayerManager prefab to your scene.";

		[Token(Token = "0x40012CB")]
		private const uint _c_ErrorFailedToFindResourceSpecified = 6u;

		[Token(Token = "0x40012CC")]
		private const uint _c_ErrorAlreadyInitialized = 4101u;

		[Token(Token = "0x40012CD")]
		private const uint _c_ErrorObjectIsBeingDestroyed = 4104u;

		[Token(Token = "0x17000143")]
		public LogLevelType LogLevel
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x201CC2C", Offset = "0x201CC2C", VA = "0x201CC2C")]
			get
			{
				return default(LogLevelType);
			}
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x201CC90", Offset = "0x201CC90", VA = "0x201CC90")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public PlayFabLocalPlayer LocalPlayer
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x201CD0C", Offset = "0x201CD0C", VA = "0x201CD0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		public string NetworkId
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x201CD14", Offset = "0x201CD14", VA = "0x201CD14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		public PlayFabMultiplayerManagerState State
		{
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x201CD1C", Offset = "0x201CD1C", VA = "0x201CD1C")]
			get
			{
				return default(PlayFabMultiplayerManagerState);
			}
		}

		[Token(Token = "0x17000147")]
		public IList<PlayFabPlayer> RemotePlayers
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x201CD58", Offset = "0x201CD58", VA = "0x201CD58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000026")]
		public event OnNetworkJoinedHandler OnNetworkJoined
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x201CDAC", Offset = "0x201CDAC", VA = "0x201CDAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAC4", Offset = "0xB2FAC4")]
			add
			{
			}
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x201CE4C", Offset = "0x201CE4C", VA = "0x201CE4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAD4", Offset = "0xB2FAD4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event OnNetworkLeftHandler OnNetworkLeft
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x201CEEC", Offset = "0x201CEEC", VA = "0x201CEEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAE4", Offset = "0xB2FAE4")]
			add
			{
			}
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x201CF90", Offset = "0x201CF90", VA = "0x201CF90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAF4", Offset = "0xB2FAF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event OnRemotePlayerJoinedHandler OnRemotePlayerJoined
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x201D034", Offset = "0x201D034", VA = "0x201D034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB04", Offset = "0xB2FB04")]
			add
			{
			}
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x201D0D8", Offset = "0x201D0D8", VA = "0x201D0D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB14", Offset = "0xB2FB14")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event OnRemotePlayerLeftHandler OnRemotePlayerLeft
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x201D17C", Offset = "0x201D17C", VA = "0x201D17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB24", Offset = "0xB2FB24")]
			add
			{
			}
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x201D220", Offset = "0x201D220", VA = "0x201D220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB34", Offset = "0xB2FB34")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event OnNetworkChangedHandler OnNetworkChanged
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x201D2C4", Offset = "0x201D2C4", VA = "0x201D2C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB44", Offset = "0xB2FB44")]
			add
			{
			}
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x201D368", Offset = "0x201D368", VA = "0x201D368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB54", Offset = "0xB2FB54")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event OnChatMessageReceivedHandler OnChatMessageReceived
		{
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x201D40C", Offset = "0x201D40C", VA = "0x201D40C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB64", Offset = "0xB2FB64")]
			add
			{
			}
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x201D4B0", Offset = "0x201D4B0", VA = "0x201D4B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB74", Offset = "0xB2FB74")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event OnDataMessageReceivedHandler OnDataMessageReceived
		{
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x201D554", Offset = "0x201D554", VA = "0x201D554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB84", Offset = "0xB2FB84")]
			add
			{
			}
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x201D5F8", Offset = "0x201D5F8", VA = "0x201D5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB94", Offset = "0xB2FB94")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event OnDataMessageReceivedNoCopyHandler OnDataMessageNoCopyReceived
		{
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x201D69C", Offset = "0x201D69C", VA = "0x201D69C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FBA4", Offset = "0xB2FBA4")]
			add
			{
			}
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x201D740", Offset = "0x201D740", VA = "0x201D740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FBB4", Offset = "0xB2FBB4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event OnErrorEventHandler OnError
		{
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x201D7E4", Offset = "0x201D7E4", VA = "0x201D7E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FBC4", Offset = "0xB2FBC4")]
			add
			{
			}
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x201D888", Offset = "0x201D888", VA = "0x201D888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FBD4", Offset = "0xB2FBD4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x201A14C", Offset = "0x201A14C", VA = "0x201A14C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x201A620", Offset = "0x201A620", VA = "0x201A620")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x201A8C0", Offset = "0x201A8C0", VA = "0x201A8C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x201CB4C", Offset = "0x201CB4C", VA = "0x201CB4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x2019E80", Offset = "0x2019E80", VA = "0x2019E80")]
		public static PlayFabMultiplayerManager Get()
		{
			return null;
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x201D92C", Offset = "0x201D92C", VA = "0x201D92C")]
		public void CreateAndJoinNetwork()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x201DAC8", Offset = "0x201DAC8", VA = "0x201DAC8")]
		public void CreateAndJoinNetwork(PlayFabNetworkConfiguration networkConfiguration)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x201DD10", Offset = "0x201DD10", VA = "0x201DD10")]
		public void JoinNetwork(string networkId)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x201DF64", Offset = "0x201DF64", VA = "0x201DF64")]
		public void LeaveNetwork()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x201E128", Offset = "0x201E128", VA = "0x201E128")]
		public void SendDataMessageToAllPlayers(byte[] buffer)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x201E29C", Offset = "0x201E29C", VA = "0x201E29C")]
		public void SendDataMessage(byte[] buffer, IEnumerable<PlayFabPlayer> recipients, DeliveryOption deliveryOption)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x201E488", Offset = "0x201E488", VA = "0x201E488")]
		public void SendDataMessage(IntPtr buffer, uint bufferSize, IEnumerable<PlayFabPlayer> recipients, DeliveryOption deliveryOption)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x201E5EC", Offset = "0x201E5EC", VA = "0x201E5EC")]
		public void SendChatMessageToAllPlayers(string message)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x201E6E0", Offset = "0x201E6E0", VA = "0x201E6E0")]
		public void SendChatMessage(string message, IEnumerable<PlayFabPlayer> recipients)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x201CB50", Offset = "0x201CB50", VA = "0x201CB50")]
		internal static void _LogError(string message)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x201E880", Offset = "0x201E880", VA = "0x201E880")]
		internal static void _LogError(uint code)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x201E8EC", Offset = "0x201E8EC", VA = "0x201E8EC")]
		internal static void _LogError(uint code, PlayFabMultiplayerManagerErrorType type)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x201EB30", Offset = "0x201EB30", VA = "0x201EB30")]
		internal static void _LogError(uint code, string message, PlayFabMultiplayerManagerErrorArgs args)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x201EBD8", Offset = "0x201EBD8", VA = "0x201EBD8")]
		internal static void _LogWarning(string warningMessage)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x201EC94", Offset = "0x201EC94", VA = "0x201EC94")]
		internal static void _LogInfo(string infoMessage)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x201ED50", Offset = "0x201ED50", VA = "0x201ED50")]
		private PlayFabPlayer GetPlayerByEntityId(string entityId)
		{
			return null;
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x201EEA4", Offset = "0x201EEA4", VA = "0x201EEA4")]
		private PartyCSharpSDK.PARTY_ENDPOINT_HANDLE[] EndPointHandlesFromPlayFabPlayerListNoGC(IEnumerable<PlayFabPlayer> playerList)
		{
			return null;
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x201F0D4", Offset = "0x201F0D4", VA = "0x201F0D4")]
		private PartyCSharpSDK.PARTY_CHAT_CONTROL_HANDLE[] ChatControlHandlesFromPlayFabPlayerListNoGC(IEnumerable<PlayFabPlayer> playerList)
		{
			return null;
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x201A150", Offset = "0x201A150", VA = "0x201A150")]
		private void _Initialize()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x201A624", Offset = "0x201A624", VA = "0x201A624")]
		private void CleanUp()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x201F368", Offset = "0x201F368", VA = "0x201F368")]
		private PartyCSharpSDK.PARTY_NETWORK_DESCRIPTOR GetNetworkDescriptorFromNetworkId(string networkId)
		{
			return null;
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x201A98C", Offset = "0x201A98C", VA = "0x201A98C")]
		private void ProcessQueuedOperations()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x201F4C0", Offset = "0x201F4C0", VA = "0x201F4C0")]
		private void GetEntityTokenCompleted(GetEntityTokenResponse response)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x201F5D4", Offset = "0x201F5D4", VA = "0x201F5D4")]
		internal void _CreateLocalUser(PlayFab.ClientModels.EntityKey entityKey, string entityToken)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x201F918", Offset = "0x201F918", VA = "0x201F918")]
		private void GetEntityTokenFailed(PlayFabError error)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x201DACC", Offset = "0x201DACC", VA = "0x201DACC")]
		private void CreateAndJoinNetworkImplStart(PlayFabNetworkConfiguration networkConfiguration)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x201F984", Offset = "0x201F984", VA = "0x201F984")]
		private void CreateAndJoinNetworkImplComplete(PlayFabNetworkConfiguration networkConfiguration)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x201DD14", Offset = "0x201DD14", VA = "0x201DD14")]
		private void JoinNetworkImplStart(string networkId)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x201FBEC", Offset = "0x201FBEC", VA = "0x201FBEC")]
		private void JoinNetworkImplComplete(string networkId)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x201DF6C", Offset = "0x201DF6C", VA = "0x201DF6C")]
		private void LeaveNetworkImpl(bool wasCallInitiatedByDeveloper)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x201FD28", Offset = "0x201FD28", VA = "0x201FD28")]
		private void UpdateNetworkId(string invitationId, PartyCSharpSDK.PARTY_NETWORK_DESCRIPTOR networkDescriptor)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x201FE7C", Offset = "0x201FE7C", VA = "0x201FE7C")]
		private void ResetNetworkManagerStateAfterFailureToConnect()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x201FF28", Offset = "0x201FF28", VA = "0x201FF28")]
		private void AuthenticateLocalUserStart()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x2020034", Offset = "0x2020034", VA = "0x2020034")]
		private void AuthenticateLocalUserComplete()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x2020298", Offset = "0x2020298", VA = "0x2020298")]
		private void SetUserSettings()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x201E12C", Offset = "0x201E12C", VA = "0x201E12C")]
		internal void _SendDataMessageToAllPlayers(byte[] buffer)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x201E2A0", Offset = "0x201E2A0", VA = "0x201E2A0")]
		internal void _SendDataMessage(byte[] buffer, IEnumerable<PlayFabPlayer> recipients, DeliveryOption deliveryOption)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x201E48C", Offset = "0x201E48C", VA = "0x201E48C")]
		internal void _SendDataMessage(IntPtr buffer, uint bufferSize, IEnumerable<PlayFabPlayer> recipients, DeliveryOption deliveryOption)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x201E5F0", Offset = "0x201E5F0", VA = "0x201E5F0")]
		internal void _SendChatMessageToAllPlayers(string message)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x201E6E4", Offset = "0x201E6E4", VA = "0x201E6E4")]
		internal void _SendChatMessage(string message, IEnumerable<PlayFabPlayer> recipients)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x2020464", Offset = "0x2020464", VA = "0x2020464")]
		private void _SendChatMessageImpl(string message, PartyCSharpSDK.PARTY_CHAT_CONTROL_HANDLE[] targetChatControlHandles)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x2020454", Offset = "0x2020454", VA = "0x2020454")]
		private PARTY_SEND_MESSAGE_OPTIONS SendOptionsFromDeliveryOption(DeliveryOption deliveryOption)
		{
			return default(PARTY_SEND_MESSAGE_OPTIONS);
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x2020540", Offset = "0x2020540", VA = "0x2020540")]
		private void UpdateCachedChatControlsList()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x2020700", Offset = "0x2020700", VA = "0x2020700")]
		internal void _SetMuted(PlayFab.ClientModels.EntityKey entityKey, bool isMuted, bool isLocal)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x202098C", Offset = "0x202098C", VA = "0x202098C")]
		internal void _RaiseDataMessageReceivedEvent(PlayFabPlayer fromPlayer, IntPtr buffer, uint bufferSize)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x2020AE4", Offset = "0x2020AE4", VA = "0x2020AE4")]
		internal void _RaiseChatMessageReceivedEvent(PlayFabPlayer fromPlayer, string message, ChatMessageType chatMessageType)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x2020BA8", Offset = "0x2020BA8", VA = "0x2020BA8")]
		internal bool _IsOnDataMessageSubscribedTo()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x2020BB8", Offset = "0x2020BB8", VA = "0x2020BB8")]
		internal string _GetPlatformSpecificUserId(PlayFab.ClientModels.EntityKey entityKey)
		{
			return null;
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x2020C30", Offset = "0x2020C30", VA = "0x2020C30")]
		internal ChatState _GetChatState(PlayFab.ClientModels.EntityKey entityKey, bool _isLocal)
		{
			return default(ChatState);
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x2020DC4", Offset = "0x2020DC4", VA = "0x2020DC4")]
		internal float _GetVoiceLevel(PlayFab.ClientModels.EntityKey entityKey)
		{
			return default(float);
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x2020E7C", Offset = "0x2020E7C", VA = "0x2020E7C")]
		internal void _SetVoiceLevel(PlayFab.ClientModels.EntityKey entityKey, float voiceLevel, bool _isLocal)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x201A028", Offset = "0x201A028", VA = "0x201A028")]
		internal string _GetLanguageCode(PlayFab.ClientModels.EntityKey entityKey, bool isLocal)
		{
			return null;
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x2020FB8", Offset = "0x2020FB8", VA = "0x2020FB8")]
		internal void _SetPlayFabMultiplayerManagerInternalState(_InternalPlayFabMultiplayerManagerState state)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x2020FC0", Offset = "0x2020FC0", VA = "0x2020FC0")]
		private void SetRemotePlayerChatControlHandle(string entityId, PartyCSharpSDK.PARTY_CHAT_CONTROL_HANDLE remoteChatControlHandle)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x201F2F4", Offset = "0x201F2F4", VA = "0x201F2F4")]
		internal bool PartySucceeded(uint errorCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x202115C", Offset = "0x202115C", VA = "0x202115C")]
		internal bool PartySucceeded(uint errorCode, PlayFabMultiplayerManagerErrorType errorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x20211E0", Offset = "0x20211E0", VA = "0x20211E0")]
		internal bool InternalCheckStateChangeSucceededOrLogErrorIfFailed(PARTY_STATE_CHANGE_RESULT result, uint errorCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x2021300", Offset = "0x2021300", VA = "0x2021300")]
		internal bool InternalCheckStateChangeSucceededOrLogErrorIfFailed(PARTY_XBL_STATE_CHANGE_RESULT result, uint errorCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x202128C", Offset = "0x202128C", VA = "0x202128C")]
		private void InternalCheckStateChangeSucceededOrLogErrorIfFailedImpl(string stateChangeString, uint errorCode)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x20213A8", Offset = "0x20213A8", VA = "0x20213A8")]
		private bool RaiseErrorIfStateChangedFailed(PARTY_STATE_CHANGE_RESULT result, uint errorCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x201AC94", Offset = "0x201AC94", VA = "0x201AC94")]
		private void ProcessStateChanges()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x20213D0", Offset = "0x20213D0", VA = "0x20213D0")]
		public PlayFabMultiplayerManager()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class PlayFabMultiplayerManagerErrorArgs : EventArgs
	{
		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25DFC", Offset = "0xB25DFC")]
		private int <Code>k__BackingField;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25E0C", Offset = "0xB25E0C")]
		private string <Message>k__BackingField;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25E1C", Offset = "0xB25E1C")]
		private PlayFabMultiplayerManagerErrorType <Type>k__BackingField;

		[Token(Token = "0x17000148")]
		public int Code
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x20214F8", Offset = "0x20214F8", VA = "0x20214F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FBE4", Offset = "0xB2FBE4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x2021500", Offset = "0x2021500", VA = "0x2021500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FBF4", Offset = "0xB2FBF4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public string Message
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x2021508", Offset = "0x2021508", VA = "0x2021508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC04", Offset = "0xB2FC04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x2021510", Offset = "0x2021510", VA = "0x2021510")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC14", Offset = "0xB2FC14")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public PlayFabMultiplayerManagerErrorType Type
		{
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x2021518", Offset = "0x2021518", VA = "0x2021518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC24", Offset = "0xB2FC24")]
			get
			{
				return default(PlayFabMultiplayerManagerErrorType);
			}
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0x2021520", Offset = "0x2021520", VA = "0x2021520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC34", Offset = "0xB2FC34")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x202148C", Offset = "0x202148C", VA = "0x202148C")]
		public PlayFabMultiplayerManagerErrorArgs()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x201EA94", Offset = "0x201EA94", VA = "0x201EA94")]
		public PlayFabMultiplayerManagerErrorArgs(int code, string message, PlayFabMultiplayerManagerErrorType type)
		{
		}
	}
	[Token(Token = "0x200032B")]
	public enum PlayFabMultiplayerManagerErrorType
	{
		[Token(Token = "0x40012F3")]
		Unknown,
		[Token(Token = "0x40012F4")]
		Error,
		[Token(Token = "0x40012F5")]
		NetworkCreateError,
		[Token(Token = "0x40012F6")]
		NetworkJoinError,
		[Token(Token = "0x40012F7")]
		NetworkLeaveError
	}
	[Token(Token = "0x200032C")]
	public enum PlayFabMultiplayerManagerState
	{
		[Token(Token = "0x40012F9")]
		NotInitialized,
		[Token(Token = "0x40012FA")]
		Initialized,
		[Token(Token = "0x40012FB")]
		ConnectingToNetwork,
		[Token(Token = "0x40012FC")]
		ConnectedToNetwork
	}
	[Token(Token = "0x200032D")]
	public class PlayFabNetworkConfiguration
	{
		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint _maxPlayerCount;

		[Token(Token = "0x40012FE")]
		private const uint _MAX_SUPPORTED_PLAYER_COUNT = 32u;

		[Token(Token = "0x40012FF")]
		private const string _ErrorMessageMaxUserCountValueOutOfRange = "Value must be between 1 and {0}";

		[Token(Token = "0x1700014B")]
		public uint MaxPlayerCount
		{
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0x2021528", Offset = "0x2021528", VA = "0x2021528")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0x201D9DC", Offset = "0x201D9DC", VA = "0x201D9DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x201D9B0", Offset = "0x201D9B0", VA = "0x201D9B0")]
		public PlayFabNetworkConfiguration()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class PlayFabPlayer
	{
		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ChatState _chatState;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _voiceLevel;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isMuted;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal string _entityToken;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool _isLocal;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal string _platformSpecificUserId;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal PartyCSharpSDK.PARTY_ENDPOINT_HANDLE _endPointHandle;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal PartyCSharpSDK.PARTY_CHAT_CONTROL_HANDLE _chatControlHandle;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal bool _mutedByPlatform;

		[Token(Token = "0x4001309")]
		private const string _ErrorMessageVoiceLevelOutOfRange = "Value {0} is out of range.Value must be between 0 and 1.";

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25E2C", Offset = "0xB25E2C")]
		private PlayFab.ClientModels.EntityKey <EntityKey>k__BackingField;

		[Token(Token = "0x1700014C")]
		public ChatState ChatState
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x2021530", Offset = "0x2021530", VA = "0x2021530")]
			get
			{
				return default(ChatState);
			}
		}

		[Token(Token = "0x1700014D")]
		public PlayFab.ClientModels.EntityKey EntityKey
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0x20215B0", Offset = "0x20215B0", VA = "0x20215B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC44", Offset = "0xB2FC44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x20215B8", Offset = "0x20215B8", VA = "0x20215B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC54", Offset = "0xB2FC54")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public bool IsLocal
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x20215C0", Offset = "0x20215C0", VA = "0x20215C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014F")]
		public bool IsMuted
		{
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x20215C8", Offset = "0x20215C8", VA = "0x20215C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x20215D0", Offset = "0x20215D0", VA = "0x20215D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public float VoiceLevel
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x201F88C", Offset = "0x201F88C", VA = "0x201F88C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x202165C", Offset = "0x202165C", VA = "0x202165C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x2019D94", Offset = "0x2019D94", VA = "0x2019D94")]
		public PlayFabPlayer()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x201F884", Offset = "0x201F884", VA = "0x201F884")]
		internal void _SetEntityKey(PlayFab.ClientModels.EntityKey entityKey)
		{
		}
	}
}
namespace PlayFab.Party._Internal
{
	[Token(Token = "0x200032F")]
	internal interface IPlayFabChatPlatformPolicyProvider
	{
		[Token(Token = "0x6000F9A")]
		void SignIn();

		[Token(Token = "0x6000F9B")]
		void SendPlatformSpecificUserId(List<PlayFabPlayer> targetPlayers);

		[Token(Token = "0x6000F9C")]
		PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS GetPlatformUserChatTranscriptionPreferences();

		[Token(Token = "0x6000F9D")]
		bool IsTextToSpeechEnabled();

		[Token(Token = "0x6000F9E")]
		PARTY_CHAT_PERMISSION_OPTIONS GetChatPermissions(PlayFabPlayer targetPlayer);

		[Token(Token = "0x6000F9F")]
		void CreateOrUpdatePlatformUser(PlayFabPlayer player, bool isLocal);

		[Token(Token = "0x6000FA0")]
		void ProcessEndpointMessage(PlayFabPlayer fromPlayer, IntPtr messageBuffer, uint messageSize);

		[Token(Token = "0x6000FA1")]
		void ProcessQueuedOperations();

		[Token(Token = "0x6000FA2")]
		void ProcessStateChanges();

		[Token(Token = "0x6000FA3")]
		bool CleanUp();
	}
}
namespace PartyCSharpSDK
{
	[Token(Token = "0x2000330")]
	public class PARTY_AUDIO_FORMAT
	{
		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25E3C", Offset = "0xB25E3C")]
		private readonly uint <SamplesPerSecond>k__BackingField;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25E4C", Offset = "0xB25E4C")]
		private readonly uint <ChannelMask>k__BackingField;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25E5C", Offset = "0xB25E5C")]
		private readonly ushort <ChannelCount>k__BackingField;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25E6C", Offset = "0xB25E6C")]
		private readonly ushort <BitsPerSample>k__BackingField;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25E7C", Offset = "0xB25E7C")]
		private readonly PARTY_AUDIO_SAMPLE_TYPE <SampleType>k__BackingField;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25E8C", Offset = "0xB25E8C")]
		private readonly byte <Interleaved>k__BackingField;

		[Token(Token = "0x17000151")]
		public uint SamplesPerSecond
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x2113770", Offset = "0x2113770", VA = "0x2113770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC64", Offset = "0xB2FC64")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000152")]
		public uint ChannelMask
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x2113778", Offset = "0x2113778", VA = "0x2113778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC74", Offset = "0xB2FC74")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000153")]
		public ushort ChannelCount
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x2113780", Offset = "0x2113780", VA = "0x2113780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC84", Offset = "0xB2FC84")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000154")]
		public ushort BitsPerSample
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x2113788", Offset = "0x2113788", VA = "0x2113788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FC94", Offset = "0xB2FC94")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000155")]
		public PARTY_AUDIO_SAMPLE_TYPE SampleType
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x2113790", Offset = "0x2113790", VA = "0x2113790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FCA4", Offset = "0xB2FCA4")]
			get
			{
				return default(PARTY_AUDIO_SAMPLE_TYPE);
			}
		}

		[Token(Token = "0x17000156")]
		public byte Interleaved
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x2113798", Offset = "0x2113798", VA = "0x2113798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FCB4", Offset = "0xB2FCB4")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x2113718", Offset = "0x2113718", VA = "0x2113718")]
		internal PARTY_AUDIO_FORMAT(PartyCSharpSDK.Interop.PARTY_AUDIO_FORMAT interopStruct)
		{
		}
	}
	[Token(Token = "0x2000331")]
	public enum PARTY_AUDIO_INPUT_STATE : uint
	{
		[Token(Token = "0x4001312")]
		PARTY_AUDIO_INPUT_STATE_NO_INPUT,
		[Token(Token = "0x4001313")]
		PARTY_AUDIO_INPUT_STATE_INITIALIZED,
		[Token(Token = "0x4001314")]
		PARTY_AUDIO_INPUT_STATE_NOT_FOUND,
		[Token(Token = "0x4001315")]
		PARTY_AUDIO_INPUT_STATE_USER_CONSENT_DENIED,
		[Token(Token = "0x4001316")]
		PARTY_AUDIO_INPUT_STATE_UNSUPPORTED_FORMAT,
		[Token(Token = "0x4001317")]
		PARTY_AUDIO_INPUT_STATE_ALREADY_IN_USE,
		[Token(Token = "0x4001318")]
		PARTY_AUDIO_INPUT_STATE_UNKNOWN_ERROR
	}
	[Token(Token = "0x2000332")]
	public class PARTY_AUDIO_MANIPULATION_SINK_STREAM_CONFIGURATION
	{
		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25E9C", Offset = "0xB25E9C")]
		private readonly PARTY_AUDIO_FORMAT <Format>k__BackingField;

		[Token(Token = "0x17000157")]
		public PARTY_AUDIO_FORMAT Format
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x211388C", Offset = "0x211388C", VA = "0x211388C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FCC4", Offset = "0xB2FCC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x21137E8", Offset = "0x21137E8", VA = "0x21137E8")]
		internal PARTY_AUDIO_MANIPULATION_SINK_STREAM_CONFIGURATION(PartyCSharpSDK.Interop.PARTY_AUDIO_MANIPULATION_SINK_STREAM_CONFIGURATION interopStruct)
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class PARTY_AUDIO_MANIPULATION_SOURCE_STREAM_CONFIGURATION
	{
		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25EAC", Offset = "0xB25EAC")]
		private readonly PARTY_AUDIO_FORMAT <Format>k__BackingField;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25EBC", Offset = "0xB25EBC")]
		private readonly uint <MaxTotalAudioBufferSizeInMilliseconds>k__BackingField;

		[Token(Token = "0x17000158")]
		public PARTY_AUDIO_FORMAT Format
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x211399C", Offset = "0x211399C", VA = "0x211399C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FCD4", Offset = "0xB2FCD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		public uint MaxTotalAudioBufferSizeInMilliseconds
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x21139A4", Offset = "0x21139A4", VA = "0x21139A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FCE4", Offset = "0xB2FCE4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x21138EC", Offset = "0x21138EC", VA = "0x21138EC")]
		internal PARTY_AUDIO_MANIPULATION_SOURCE_STREAM_CONFIGURATION(PartyCSharpSDK.Interop.PARTY_AUDIO_MANIPULATION_SOURCE_STREAM_CONFIGURATION interopStruct)
		{
		}
	}
	[Token(Token = "0x2000334")]
	public enum PARTY_AUDIO_OUTPUT_STATE : uint
	{
		[Token(Token = "0x400131D")]
		PARTY_AUDIO_OUTPUT_STATE_NO_OUTPUT,
		[Token(Token = "0x400131E")]
		PARTY_AUDIO_OUTPUT_STATE_INITIALIZED,
		[Token(Token = "0x400131F")]
		PARTY_AUDIO_OUTPUT_STATE_NOT_FOUND,
		[Token(Token = "0x4001320")]
		PARTY_AUDIO_OUTPUT_STATE_UNSUPPORTED_FORMAT,
		[Token(Token = "0x4001321")]
		PARTY_AUDIO_OUTPUT_STATE_ALREADY_IN_USE,
		[Token(Token = "0x4001322")]
		PARTY_AUDIO_OUTPUT_STATE_UNKNOWN_ERROR
	}
	[Token(Token = "0x2000335")]
	public enum PARTY_AUDIO_SAMPLE_TYPE : uint
	{
		[Token(Token = "0x4001324")]
		PARTY_AUDIO_SAMPLE_TYPE_INTEGER
	}
	[Token(Token = "0x2000336")]
	public enum PARTY_AUDIO_SOURCE_TYPE : uint
	{
		[Token(Token = "0x4001326")]
		PARTY_AUDIO_SOURCE_TYPE_MICROPHONE,
		[Token(Token = "0x4001327")]
		PARTY_AUDIO_SOURCE_TYPE_TEXT_TO_SPEECH
	}
	[Token(Token = "0x2000337")]
	public class PARTY_MUTABLE_DATA_BUFFER
	{
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25ECC", Offset = "0xB25ECC")]
		private readonly IntPtr <Buffer>k__BackingField;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25EDC", Offset = "0xB25EDC")]
		private readonly uint <BufferByteCount>k__BackingField;

		[Token(Token = "0x1700015A")]
		public IntPtr Buffer
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x21171CC", Offset = "0x21171CC", VA = "0x21171CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FCF4", Offset = "0xB2FCF4")]
			get
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x1700015B")]
		public uint BufferByteCount
		{
			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x21171D4", Offset = "0x21171D4", VA = "0x21171D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FD04", Offset = "0xB2FD04")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x2117190", Offset = "0x2117190", VA = "0x2117190")]
		internal PARTY_MUTABLE_DATA_BUFFER(PartyCSharpSDK.Interop.PARTY_MUTABLE_DATA_BUFFER interopStruct)
		{
		}
	}
	[Token(Token = "0x2000338")]
	public enum PARTY_AUDIO_DEVICE_SELECTION_TYPE : uint
	{
		[Token(Token = "0x400132B")]
		PARTY_AUDIO_DEVICE_SELECTION_TYPE_NONE,
		[Token(Token = "0x400132C")]
		PARTY_AUDIO_DEVICE_SELECTION_TYPE_SYSTEM_DEFAULT,
		[Token(Token = "0x400132D")]
		PARTY_AUDIO_DEVICE_SELECTION_TYPE_PLATFORM_USER_DEFAULT,
		[Token(Token = "0x400132E")]
		PARTY_AUDIO_DEVICE_SELECTION_TYPE_MANUAL
	}
	[Token(Token = "0x2000339")]
	public enum PARTY_CHAT_CONTROL_CHAT_INDICATOR : uint
	{
		[Token(Token = "0x4001330")]
		PARTY_CHAT_CONTROL_CHAT_INDICATOR_SILENT,
		[Token(Token = "0x4001331")]
		PARTY_CHAT_CONTROL_CHAT_INDICATOR_TALKING,
		[Token(Token = "0x4001332")]
		PARTY_CHAT_CONTROL_CHAT_INDICATOR_INCOMING_VOICE_DISABLED,
		[Token(Token = "0x4001333")]
		PARTY_CHAT_CONTROL_CHAT_INDICATOR_INCOMING_COMMUNICATIONS_MUTED
	}
	[Token(Token = "0x200033A")]
	public class PARTY_CHAT_CONTROL_HANDLE
	{
		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25EEC", Offset = "0xB25EEC")]
		private PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE <InteropHandle>k__BackingField;

		[Token(Token = "0x1700015C")]
		internal PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE InteropHandle
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x2113E8C", Offset = "0x2113E8C", VA = "0x2113E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FD14", Offset = "0xB2FD14")]
			get
			{
				return default(PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE);
			}
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x2113E94", Offset = "0x2113E94", VA = "0x2113E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FD24", Offset = "0xB2FD24")]
			set
			{
			}
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x2113CF0", Offset = "0x2113CF0", VA = "0x2113CF0")]
		internal PARTY_CHAT_CONTROL_HANDLE(PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE interopHandle)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x2113DE4", Offset = "0x2113DE4", VA = "0x2113DE4")]
		internal static uint WrapAndReturnError(uint error, PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE interopHandle, [Out] PARTY_CHAT_CONTROL_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x2113E84", Offset = "0x2113E84", VA = "0x2113E84")]
		internal void ClearInteropHandle()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public enum PARTY_CHAT_PERMISSION_OPTIONS : uint
	{
		[Token(Token = "0x4001336")]
		PARTY_CHAT_PERMISSION_OPTIONS_NONE = 0u,
		[Token(Token = "0x4001337")]
		PARTY_CHAT_PERMISSION_OPTIONS_SEND_MICROPHONE_AUDIO = 1u,
		[Token(Token = "0x4001338")]
		PARTY_CHAT_PERMISSION_OPTIONS_SEND_TEXT_TO_SPEECH_AUDIO = 2u,
		[Token(Token = "0x4001339")]
		PARTY_CHAT_PERMISSION_OPTIONS_SEND_AUDIO = 3u,
		[Token(Token = "0x400133A")]
		PARTY_CHAT_PERMISSION_OPTIONS_RECEIVE_MICROPHONE_AUDIO = 4u,
		[Token(Token = "0x400133B")]
		PARTY_CHAT_PERMISSION_OPTIONS_RECEIVE_TEXT_TO_SPEECH_AUDIO = 8u,
		[Token(Token = "0x400133C")]
		PARTY_CHAT_PERMISSION_OPTIONS_RECEIVE_AUDIO = 12u,
		[Token(Token = "0x400133D")]
		PARTY_CHAT_PERMISSION_OPTIONS_RECEIVE_TEXT = 16u
	}
	[Token(Token = "0x200033C")]
	public enum PARTY_GENDER : uint
	{
		[Token(Token = "0x400133F")]
		PARTY_GENDER_NEUTRAL,
		[Token(Token = "0x4001340")]
		PARTY_GENDER_FEMALE,
		[Token(Token = "0x4001341")]
		PARTY_GENDER_MALE
	}
	[Token(Token = "0x200033D")]
	public enum PARTY_LOCAL_CHAT_CONTROL_CHAT_INDICATOR : uint
	{
		[Token(Token = "0x4001343")]
		PARTY_LOCAL_CHAT_CONTROL_CHAT_INDICATOR_SILENT,
		[Token(Token = "0x4001344")]
		PARTY_LOCAL_CHAT_CONTROL_CHAT_INDICATOR_TALKING,
		[Token(Token = "0x4001345")]
		PARTY_LOCAL_CHAT_CONTROL_CHAT_INDICATOR_AUDIO_INPUT_MUTED,
		[Token(Token = "0x4001346")]
		PARTY_LOCAL_CHAT_CONTROL_CHAT_INDICATOR_NO_AUDIO_INPUT
	}
	[Token(Token = "0x200033E")]
	public enum PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE : uint
	{
		[Token(Token = "0x4001348")]
		PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE_NARRATION,
		[Token(Token = "0x4001349")]
		PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE_VOICE_CHAT
	}
	[Token(Token = "0x200033F")]
	public enum PARTY_TEXT_CHAT_OPTIONS : uint
	{
		[Token(Token = "0x400134B")]
		PARTY_TEXT_CHAT_OPTIONS_NONE,
		[Token(Token = "0x400134C")]
		PARTY_TEXT_CHAT_OPTIONS_TRANSLATE_TO_LOCAL_LANGUAGE
	}
	[Token(Token = "0x2000340")]
	public class PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE
	{
		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25EFC", Offset = "0xB25EFC")]
		private PartyCSharpSDK.Interop.PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE <InteropHandle>k__BackingField;

		[Token(Token = "0x1700015D")]
		internal PartyCSharpSDK.Interop.PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE InteropHandle
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x211A140", Offset = "0x211A140", VA = "0x211A140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FD34", Offset = "0xB2FD34")]
			get
			{
				return default(PartyCSharpSDK.Interop.PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE);
			}
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x211A148", Offset = "0x211A148", VA = "0x211A148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FD44", Offset = "0xB2FD44")]
			set
			{
			}
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x211A06C", Offset = "0x211A06C", VA = "0x211A06C")]
		internal PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE(PartyCSharpSDK.Interop.PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE interopHandle)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x211A098", Offset = "0x211A098", VA = "0x211A098")]
		internal static uint WrapAndReturnError(uint error, PartyCSharpSDK.Interop.PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE interopHandle, [Out] PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x211A138", Offset = "0x211A138", VA = "0x211A138")]
		internal void ClearInteropHandle()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class PARTY_TRANSLATION
	{
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25F0C", Offset = "0xB25F0C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25F1C", Offset = "0xB25F1C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25F2C", Offset = "0xB25F2C")]
		private readonly string <languageCode>k__BackingField;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25F3C", Offset = "0xB25F3C")]
		private readonly PARTY_TRANSLATION_RECEIVED_OPTIONS <options>k__BackingField;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25F4C", Offset = "0xB25F4C")]
		private readonly string <translation>k__BackingField;

		[Token(Token = "0x1700015E")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x211A1C4", Offset = "0x211A1C4", VA = "0x211A1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FD54", Offset = "0xB2FD54")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x1700015F")]
		public uint errorDetail
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x211A1CC", Offset = "0x211A1CC", VA = "0x211A1CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FD64", Offset = "0xB2FD64")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000160")]
		public string languageCode
		{
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x211A1D4", Offset = "0x211A1D4", VA = "0x211A1D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FD74", Offset = "0xB2FD74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		public PARTY_TRANSLATION_RECEIVED_OPTIONS options
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x211A1DC", Offset = "0x211A1DC", VA = "0x211A1DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FD84", Offset = "0xB2FD84")]
			get
			{
				return default(PARTY_TRANSLATION_RECEIVED_OPTIONS);
			}
		}

		[Token(Token = "0x17000162")]
		public string translation
		{
			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x211A1E4", Offset = "0x211A1E4", VA = "0x211A1E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FD94", Offset = "0xB2FD94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x211A150", Offset = "0x211A150", VA = "0x211A150")]
		internal PARTY_TRANSLATION(PartyCSharpSDK.Interop.PARTY_TRANSLATION interopStruct)
		{
		}
	}
	[Token(Token = "0x2000342")]
	public enum PARTY_TRANSLATION_RECEIVED_OPTIONS : uint
	{
		[Token(Token = "0x4001354")]
		PARTY_TRANSLATION_RECEIVED_OPTIONS_NONE,
		[Token(Token = "0x4001355")]
		PARTY_TRANSLATION_RECEIVED_OPTIONS_TRUNCATED
	}
	[Token(Token = "0x2000343")]
	public enum PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS : uint
	{
		[Token(Token = "0x4001357")]
		PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS_NONE = 0u,
		[Token(Token = "0x4001358")]
		PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS_TRANSCRIBE_SELF = 1u,
		[Token(Token = "0x4001359")]
		PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS_TRANSCRIBE_OTHER_CHAT_CONTROLS_WITH_MATCHING_LANGUAGES = 2u,
		[Token(Token = "0x400135A")]
		PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS_TRANSCRIBE_OTHER_CHAT_CONTROLS_WITH_NON_MATCHING_LANGUAGES = 4u,
		[Token(Token = "0x400135B")]
		PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS_DISABLE_HYPOTHESIS_PHRASES = 8u,
		[Token(Token = "0x400135C")]
		PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS_TRANSLATE_TO_LOCAL_LANGUAGE = 0x10u
	}
	[Token(Token = "0x2000344")]
	public enum PARTY_DESTROYED_REASON : uint
	{
		[Token(Token = "0x400135E")]
		PARTY_DESTROYED_REASON_REQUESTED,
		[Token(Token = "0x400135F")]
		PARTY_DESTROYED_REASON_DISCONNECTED,
		[Token(Token = "0x4001360")]
		PARTY_DESTROYED_REASON_KICKED,
		[Token(Token = "0x4001361")]
		PARTY_DESTROYED_REASON_DEVICE_LOST_AUTHENTICATION,
		[Token(Token = "0x4001362")]
		PARTY_DESTROYED_REASON_CREATION_FAILED
	}
	[Token(Token = "0x2000345")]
	public enum PARTY_DEVICE_CONNECTION_TYPE : uint
	{
		[Token(Token = "0x4001364")]
		PARTY_DEVICE_CONNECTION_TYPE_RELAY_SERVER,
		[Token(Token = "0x4001365")]
		PARTY_DEVICE_CONNECTION_TYPE_DIRECT_PEER_CONNECTION
	}
	[Token(Token = "0x2000346")]
	public class PARTY_DEVICE_HANDLE
	{
		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25F5C", Offset = "0xB25F5C")]
		private PartyCSharpSDK.Interop.PARTY_DEVICE_HANDLE <InteropHandle>k__BackingField;

		[Token(Token = "0x17000163")]
		internal PartyCSharpSDK.Interop.PARTY_DEVICE_HANDLE InteropHandle
		{
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x2115810", Offset = "0x2115810", VA = "0x2115810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FDA4", Offset = "0xB2FDA4")]
			get
			{
				return default(PartyCSharpSDK.Interop.PARTY_DEVICE_HANDLE);
			}
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x2115818", Offset = "0x2115818", VA = "0x2115818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FDB4", Offset = "0xB2FDB4")]
			set
			{
			}
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x21149D0", Offset = "0x21149D0", VA = "0x21149D0")]
		internal PARTY_DEVICE_HANDLE(PartyCSharpSDK.Interop.PARTY_DEVICE_HANDLE interopHandle)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x2115768", Offset = "0x2115768", VA = "0x2115768")]
		internal static uint WrapAndReturnError(uint error, PartyCSharpSDK.Interop.PARTY_DEVICE_HANDLE interopHandle, [Out] PARTY_DEVICE_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x2115808", Offset = "0x2115808", VA = "0x2115808")]
		internal void ClearInteropHandle()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public enum PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS : uint
	{
		[Token(Token = "0x4001368")]
		PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS_NONE = 0u,
		[Token(Token = "0x4001369")]
		PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS_SAME_PLATFORM_TYPE = 1u,
		[Token(Token = "0x400136A")]
		PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS_DIFFERENT_PLATFORM_TYPE = 2u,
		[Token(Token = "0x400136B")]
		PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS_ANY_PLATFORM_TYPE = 3u,
		[Token(Token = "0x400136C")]
		PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS_SAME_ENTITY_LOGIN_PROVIDER = 4u,
		[Token(Token = "0x400136D")]
		PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS_DIFFERENT_ENTITY_LOGIN_PROVIDER = 8u,
		[Token(Token = "0x400136E")]
		PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS_ANY_ENTITY_LOGIN_PROVIDER = 12u
	}
	[Token(Token = "0x2000348")]
	public class PARTY_HANDLE
	{
		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25F6C", Offset = "0xB25F6C")]
		private PartyCSharpSDK.Interop.PARTY_HANDLE <InteropHandle>k__BackingField;

		[Token(Token = "0x17000164")]
		internal PartyCSharpSDK.Interop.PARTY_HANDLE InteropHandle
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x2116290", Offset = "0x2116290", VA = "0x2116290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FDC4", Offset = "0xB2FDC4")]
			get
			{
				return default(PartyCSharpSDK.Interop.PARTY_HANDLE);
			}
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0x2116298", Offset = "0x2116298", VA = "0x2116298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FDD4", Offset = "0xB2FDD4")]
			set
			{
			}
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x2116110", Offset = "0x2116110", VA = "0x2116110")]
		public long GetHandleValue()
		{
			return default(long);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x211613C", Offset = "0x211613C", VA = "0x211613C")]
		public PARTY_HANDLE(long handleValue)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x21161BC", Offset = "0x21161BC", VA = "0x21161BC")]
		internal PARTY_HANDLE(PartyCSharpSDK.Interop.PARTY_HANDLE interopHandle)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x21161E8", Offset = "0x21161E8", VA = "0x21161E8")]
		internal static uint WrapAndReturnError(uint error, PartyCSharpSDK.Interop.PARTY_HANDLE interopHandle, [Out] PARTY_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x2116288", Offset = "0x2116288", VA = "0x2116288")]
		internal void ClearInteropHandle()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class PARTY_INVITATION_CONFIGURATION
	{
		[Serializable]
		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB206BC", Offset = "0xB206BC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UTF8StringPtr, string> <>9__0_0;

			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x1FFFE84", Offset = "0x1FFFE84", VA = "0x1FFFE84")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x1FFFE8C", Offset = "0x1FFFE8C", VA = "0x1FFFE8C")]
			internal string <.ctor>b__0_0(UTF8StringPtr x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25F7C", Offset = "0xB25F7C")]
		private string <Identifier>k__BackingField;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25F8C", Offset = "0xB25F8C")]
		private PARTY_INVITATION_REVOCABILITY <Revocability>k__BackingField;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25F9C", Offset = "0xB25F9C")]
		private string[] <EntityIds>k__BackingField;

		[Token(Token = "0x17000165")]
		public string Identifier
		{
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x2116434", Offset = "0x2116434", VA = "0x2116434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FDE4", Offset = "0xB2FDE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x211643C", Offset = "0x211643C", VA = "0x211643C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FDF4", Offset = "0xB2FDF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public PARTY_INVITATION_REVOCABILITY Revocability
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x2116444", Offset = "0x2116444", VA = "0x2116444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FE04", Offset = "0xB2FE04")]
			get
			{
				return default(PARTY_INVITATION_REVOCABILITY);
			}
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x211644C", Offset = "0x211644C", VA = "0x211644C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FE14", Offset = "0xB2FE14")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public string[] EntityIds
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x2116454", Offset = "0x2116454", VA = "0x2116454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FE24", Offset = "0xB2FE24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x211645C", Offset = "0x211645C", VA = "0x211645C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FE34", Offset = "0xB2FE34")]
			set
			{
			}
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x21162A0", Offset = "0x21162A0", VA = "0x21162A0")]
		internal PARTY_INVITATION_CONFIGURATION(PartyCSharpSDK.Interop.PARTY_INVITATION_CONFIGURATION interopStruct)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x211642C", Offset = "0x211642C", VA = "0x211642C")]
		public PARTY_INVITATION_CONFIGURATION()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class PARTY_INVITATION_HANDLE
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25FAC", Offset = "0xB25FAC")]
		private PartyCSharpSDK.Interop.PARTY_INVITATION_HANDLE <InteropHandle>k__BackingField;

		[Token(Token = "0x17000168")]
		internal PartyCSharpSDK.Interop.PARTY_INVITATION_HANDLE InteropHandle
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x21168B0", Offset = "0x21168B0", VA = "0x21168B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FE44", Offset = "0xB2FE44")]
			get
			{
				return default(PartyCSharpSDK.Interop.PARTY_INVITATION_HANDLE);
			}
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x21168B8", Offset = "0x21168B8", VA = "0x21168B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FE54", Offset = "0xB2FE54")]
			set
			{
			}
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x2114DE0", Offset = "0x2114DE0", VA = "0x2114DE0")]
		internal PARTY_INVITATION_HANDLE(PartyCSharpSDK.Interop.PARTY_INVITATION_HANDLE interopHandle)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x2116808", Offset = "0x2116808", VA = "0x2116808")]
		internal static uint WrapAndReturnError(uint error, PartyCSharpSDK.Interop.PARTY_INVITATION_HANDLE interopHandle, [Out] PARTY_INVITATION_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x21168A8", Offset = "0x21168A8", VA = "0x21168A8")]
		internal void ClearInteropHandle()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public enum PARTY_INVITATION_REVOCABILITY : uint
	{
		[Token(Token = "0x4001377")]
		PARTY_INVITATION_REVOCABILITY_CREATOR,
		[Token(Token = "0x4001378")]
		PARTY_INVITATION_REVOCABILITY_ANYONE
	}
	[Token(Token = "0x200034D")]
	public class PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION
	{
		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25FBC", Offset = "0xB25FBC")]
		private PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_OPTIONS <options>k__BackingField;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25FCC", Offset = "0xB25FCC")]
		private ushort <port>k__BackingField;

		[Token(Token = "0x17000169")]
		public PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_OPTIONS options
		{
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x2116E9C", Offset = "0x2116E9C", VA = "0x2116E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FE64", Offset = "0xB2FE64")]
			get
			{
				return default(PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_OPTIONS);
			}
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x2116EA4", Offset = "0x2116EA4", VA = "0x2116EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FE74", Offset = "0xB2FE74")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public ushort port
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x2116EAC", Offset = "0x2116EAC", VA = "0x2116EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FE84", Offset = "0xB2FE84")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x2116EB4", Offset = "0x2116EB4", VA = "0x2116EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FE94", Offset = "0xB2FE94")]
			set
			{
			}
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x2116E60", Offset = "0x2116E60", VA = "0x2116E60")]
		internal PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION(PartyCSharpSDK.Interop.PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION interopStruct)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x2116E94", Offset = "0x2116E94", VA = "0x2116E94")]
		public PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public enum PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_OPTIONS : uint
	{
		[Token(Token = "0x400137C")]
		PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_OPTIONS_NONE,
		[Token(Token = "0x400137D")]
		PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_OPTIONS_EXCLUDE_GAME_CORE_PREFERRED_UDP_MULTIPLAYER_PORT
	}
	[Token(Token = "0x200034F")]
	public class PARTY_LOCAL_USER_HANDLE
	{
		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25FDC", Offset = "0xB25FDC")]
		private PartyCSharpSDK.Interop.PARTY_LOCAL_USER_HANDLE <InteropHandle>k__BackingField;

		[Token(Token = "0x1700016B")]
		internal PartyCSharpSDK.Interop.PARTY_LOCAL_USER_HANDLE InteropHandle
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x2116F8C", Offset = "0x2116F8C", VA = "0x2116F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FEA4", Offset = "0xB2FEA4")]
			get
			{
				return default(PartyCSharpSDK.Interop.PARTY_LOCAL_USER_HANDLE);
			}
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x2116F94", Offset = "0x2116F94", VA = "0x2116F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FEB4", Offset = "0xB2FEB4")]
			set
			{
			}
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x2113BF4", Offset = "0x2113BF4", VA = "0x2113BF4")]
		internal PARTY_LOCAL_USER_HANDLE(PartyCSharpSDK.Interop.PARTY_LOCAL_USER_HANDLE interopHandle)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x2116EE4", Offset = "0x2116EE4", VA = "0x2116EE4")]
		internal static uint WrapAndReturnError(uint error, PartyCSharpSDK.Interop.PARTY_LOCAL_USER_HANDLE interopHandle, [Out] PARTY_LOCAL_USER_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x2116F84", Offset = "0x2116F84", VA = "0x2116F84")]
		internal void ClearInteropHandle()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public enum PARTY_LOCAL_USER_REMOVED_REASON : uint
	{
		[Token(Token = "0x4001380")]
		PARTY_LOCAL_USER_REMOVED_REASON_AUTHENTICATION_FAILED,
		[Token(Token = "0x4001381")]
		PARTY_LOCAL_USER_REMOVED_REASON_REMOVE_LOCAL_USER,
		[Token(Token = "0x4001382")]
		PARTY_LOCAL_USER_REMOVED_REASON_DESTROY_LOCAL_USER,
		[Token(Token = "0x4001383")]
		PARTY_LOCAL_USER_REMOVED_REASON_DESTROY_NETWORK
	}
	[Token(Token = "0x2000351")]
	public enum PARTY_MESSAGE_RECEIVED_OPTIONS : uint
	{
		[Token(Token = "0x4001385")]
		PARTY_MESSAGE_RECEIVED_OPTIONS_NONE = 0u,
		[Token(Token = "0x4001386")]
		PARTY_MESSAGE_RECEIVED_OPTIONS_GUARANTEED_DELIVERY = 1u,
		[Token(Token = "0x4001387")]
		PARTY_MESSAGE_RECEIVED_OPTIONS_SEQUENTIAL_DELIVERY = 2u,
		[Token(Token = "0x4001388")]
		PARTY_MESSAGE_RECEIVED_OPTIONS_REQUIRED_FRAGMENTATION = 4u
	}
	[Token(Token = "0x2000352")]
	public enum PARTY_OPTION : uint
	{
		[Token(Token = "0x400138A")]
		PARTY_OPTION_LOCAL_UDP_SOCKET_BIND_ADDRESS,
		[Token(Token = "0x400138B")]
		PARTY_OPTION_LOCAL_DEVICE_DIRECT_PEER_CONNECTIVITY_OPTIONS_MASK
	}
	[Token(Token = "0x2000353")]
	public class PARTY_REGION
	{
		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25FEC", Offset = "0xB25FEC")]
		private readonly string <RegionName>k__BackingField;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB25FFC", Offset = "0xB25FFC")]
		private readonly uint <RoundTripLatencyInMilliseconds>k__BackingField;

		[Token(Token = "0x1700016C")]
		public string RegionName
		{
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x21179D0", Offset = "0x21179D0", VA = "0x21179D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FEC4", Offset = "0xB2FEC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public uint RoundTripLatencyInMilliseconds
		{
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0x21179D8", Offset = "0x21179D8", VA = "0x21179D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FED4", Offset = "0xB2FED4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x2117974", Offset = "0x2117974", VA = "0x2117974")]
		internal PARTY_REGION(PartyCSharpSDK.Interop.PARTY_REGION interopStruct)
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class PARTY_STATE_CHANGE
	{
		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2600C", Offset = "0xB2600C")]
		private readonly PARTY_STATE_CHANGE_TYPE <StateChangeType>k__BackingField;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2601C", Offset = "0xB2601C")]
		private readonly IntPtr <StateChangeId>k__BackingField;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool useObjectPool;

		[Token(Token = "0x1700016E")]
		public PARTY_STATE_CHANGE_TYPE StateChangeType
		{
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x211A02C", Offset = "0x211A02C", VA = "0x211A02C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FEE4", Offset = "0xB2FEE4")]
			get
			{
				return default(PARTY_STATE_CHANGE_TYPE);
			}
		}

		[Token(Token = "0x1700016F")]
		internal IntPtr StateChangeId
		{
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x211A034", Offset = "0x211A034", VA = "0x211A034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FEF4", Offset = "0xB2FEF4")]
			get
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x2113B88", Offset = "0x2113B88", VA = "0x2113B88")]
		protected PARTY_STATE_CHANGE(PARTY_STATE_CHANGE_TYPE StateChangeType, IntPtr StateChangeId)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x2118B88", Offset = "0x2118B88", VA = "0x2118B88")]
		internal static PARTY_STATE_CHANGE CreateFromPtr(IntPtr stateChangePtr)
		{
			return null;
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x2116054", Offset = "0x2116054", VA = "0x2116054", Slot = "4")]
		internal virtual void Cleanup()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class PARTY_CREATE_NEW_NETWORK_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Serializable]
		[Token(Token = "0x2000356")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB206CC", Offset = "0xB206CC")]
		private sealed class <>c
		{
			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400139B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PartyCSharpSDK.Interop.PARTY_REGION, PARTY_REGION> <>9__0_0;

			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x1FFFD98", Offset = "0x1FFFD98", VA = "0x1FFFD98")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x1FFFDA0", Offset = "0x1FFFDA0", VA = "0x1FFFDA0")]
			internal PARTY_REGION <.ctor>b__0_0(PartyCSharpSDK.Interop.PARTY_REGION x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2602C", Offset = "0xB2602C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2603C", Offset = "0xB2603C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2604C", Offset = "0xB2604C")]
		private readonly PARTY_LOCAL_USER_HANDLE <localUser>k__BackingField;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2605C", Offset = "0xB2605C")]
		private readonly PARTY_NETWORK_CONFIGURATION <networkConfiguration>k__BackingField;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2606C", Offset = "0xB2606C")]
		private readonly uint <regionCount>k__BackingField;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2607C", Offset = "0xB2607C")]
		private readonly PARTY_REGION[] <regions>k__BackingField;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2608C", Offset = "0xB2608C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2609C", Offset = "0xB2609C")]
		private readonly PARTY_NETWORK_DESCRIPTOR <networkDescriptor>k__BackingField;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB260AC", Offset = "0xB260AC")]
		private readonly string <appliedInitialInvitationIdentifier>k__BackingField;

		[Token(Token = "0x17000170")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x21151AC", Offset = "0x21151AC", VA = "0x21151AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FF04", Offset = "0xB2FF04")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000171")]
		public uint errorDetail
		{
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x21151B4", Offset = "0x21151B4", VA = "0x21151B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FF14", Offset = "0xB2FF14")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000172")]
		public PARTY_LOCAL_USER_HANDLE localUser
		{
			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0x21151BC", Offset = "0x21151BC", VA = "0x21151BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FF24", Offset = "0xB2FF24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public PARTY_NETWORK_CONFIGURATION networkConfiguration
		{
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x21151C4", Offset = "0x21151C4", VA = "0x21151C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FF34", Offset = "0xB2FF34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public uint regionCount
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x21151CC", Offset = "0x21151CC", VA = "0x21151CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FF44", Offset = "0xB2FF44")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000175")]
		public PARTY_REGION[] regions
		{
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x21151D4", Offset = "0x21151D4", VA = "0x21151D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FF54", Offset = "0xB2FF54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		public object asyncIdentifier
		{
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x21151DC", Offset = "0x21151DC", VA = "0x21151DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FF64", Offset = "0xB2FF64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public PARTY_NETWORK_DESCRIPTOR networkDescriptor
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x21151E4", Offset = "0x21151E4", VA = "0x21151E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FF74", Offset = "0xB2FF74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public string appliedInitialInvitationIdentifier
		{
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x21151EC", Offset = "0x21151EC", VA = "0x21151EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FF84", Offset = "0xB2FF84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x2114E3C", Offset = "0x2114E3C", VA = "0x2114E3C")]
		internal PARTY_CREATE_NEW_NETWORK_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class PARTY_DESTROY_LOCAL_USER_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB260BC", Offset = "0xB260BC")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB260CC", Offset = "0xB260CC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB260DC", Offset = "0xB260DC")]
		private readonly PARTY_LOCAL_USER_HANDLE <localUser>k__BackingField;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB260EC", Offset = "0xB260EC")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x17000179")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0x2115748", Offset = "0x2115748", VA = "0x2115748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FF94", Offset = "0xB2FF94")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x1700017A")]
		public uint errorDetail
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x2115750", Offset = "0x2115750", VA = "0x2115750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FFA4", Offset = "0xB2FFA4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700017B")]
		public PARTY_LOCAL_USER_HANDLE localUser
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0x2115758", Offset = "0x2115758", VA = "0x2115758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FFB4", Offset = "0xB2FFB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		public object asyncIdentifier
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0x2115760", Offset = "0x2115760", VA = "0x2115760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FFC4", Offset = "0xB2FFC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x2115630", Offset = "0x2115630", VA = "0x2115630")]
		internal PARTY_DESTROY_LOCAL_USER_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class PARTY_LOCAL_USER_REMOVED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB260FC", Offset = "0xB260FC")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2610C", Offset = "0xB2610C")]
		private readonly PARTY_LOCAL_USER_HANDLE <localUser>k__BackingField;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2611C", Offset = "0xB2611C")]
		private readonly PARTY_LOCAL_USER_REMOVED_REASON <removedReason>k__BackingField;

		[Token(Token = "0x1700017D")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x2117178", Offset = "0x2117178", VA = "0x2117178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FFD4", Offset = "0xB2FFD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		public PARTY_LOCAL_USER_HANDLE localUser
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x2117180", Offset = "0x2117180", VA = "0x2117180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FFE4", Offset = "0xB2FFE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		public PARTY_LOCAL_USER_REMOVED_REASON removedReason
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0x2117188", Offset = "0x2117188", VA = "0x2117188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FFF4", Offset = "0xB2FFF4")]
			get
			{
				return default(PARTY_LOCAL_USER_REMOVED_REASON);
			}
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x2117088", Offset = "0x2117088", VA = "0x2117088")]
		internal PARTY_LOCAL_USER_REMOVED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class PARTY_CONNECT_TO_NETWORK_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2612C", Offset = "0xB2612C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2613C", Offset = "0xB2613C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2614C", Offset = "0xB2614C")]
		private readonly PARTY_NETWORK_DESCRIPTOR <networkDescriptor>k__BackingField;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2615C", Offset = "0xB2615C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2616C", Offset = "0xB2616C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x17000180")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x21147D8", Offset = "0x21147D8", VA = "0x21147D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30004", Offset = "0xB30004")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000181")]
		public uint errorDetail
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0x21147E0", Offset = "0x21147E0", VA = "0x21147E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30014", Offset = "0xB30014")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000182")]
		public PARTY_NETWORK_DESCRIPTOR networkDescriptor
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x21147E8", Offset = "0x21147E8", VA = "0x21147E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30024", Offset = "0xB30024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public object asyncIdentifier
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x21147F0", Offset = "0x21147F0", VA = "0x21147F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30034", Offset = "0xB30034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0x21147F8", Offset = "0x21147F8", VA = "0x21147F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30044", Offset = "0xB30044")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x21145D8", Offset = "0x21145D8", VA = "0x21145D8")]
		internal PARTY_CONNECT_TO_NETWORK_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class PARTY_NETWORK_DESTROYED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2617C", Offset = "0xB2617C")]
		private readonly PARTY_DESTROYED_REASON <reason>k__BackingField;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2618C", Offset = "0xB2618C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2619C", Offset = "0xB2619C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x17000185")]
		public PARTY_DESTROYED_REASON reason
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x211776C", Offset = "0x211776C", VA = "0x211776C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30054", Offset = "0xB30054")]
			get
			{
				return default(PARTY_DESTROYED_REASON);
			}
		}

		[Token(Token = "0x17000186")]
		public uint errorDetail
		{
			[Token(Token = "0x6001010")]
			[Address(RVA = "0x2117774", Offset = "0x2117774", VA = "0x2117774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30064", Offset = "0xB30064")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000187")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x211777C", Offset = "0x211777C", VA = "0x211777C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30074", Offset = "0xB30074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x21176C4", Offset = "0x21176C4", VA = "0x21176C4")]
		internal PARTY_NETWORK_DESTROYED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class PARTY_AUTHENTICATE_LOCAL_USER_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB261AC", Offset = "0xB261AC")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB261BC", Offset = "0xB261BC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB261CC", Offset = "0xB261CC")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB261DC", Offset = "0xB261DC")]
		private readonly PARTY_LOCAL_USER_HANDLE <localUser>k__BackingField;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB261EC", Offset = "0xB261EC")]
		private readonly string <invitationIdentifier>k__BackingField;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB261FC", Offset = "0xB261FC")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x17000188")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x2113C20", Offset = "0x2113C20", VA = "0x2113C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30084", Offset = "0xB30084")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000189")]
		public uint errorDetail
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x2113C28", Offset = "0x2113C28", VA = "0x2113C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30094", Offset = "0xB30094")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700018A")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x2113C30", Offset = "0x2113C30", VA = "0x2113C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB300A4", Offset = "0xB300A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public PARTY_LOCAL_USER_HANDLE localUser
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0x2113C38", Offset = "0x2113C38", VA = "0x2113C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB300B4", Offset = "0xB300B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		public string invitationIdentifier
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x2113C40", Offset = "0x2113C40", VA = "0x2113C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB300C4", Offset = "0xB300C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public object asyncIdentifier
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0x2113C48", Offset = "0x2113C48", VA = "0x2113C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB300D4", Offset = "0xB300D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x2113A0C", Offset = "0x2113A0C", VA = "0x2113A0C")]
		internal PARTY_AUTHENTICATE_LOCAL_USER_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class PARTY_REGIONS_CHANGED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2620C", Offset = "0xB2620C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2621C", Offset = "0xB2621C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x1700018E")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x600101A")]
			[Address(RVA = "0x2117A70", Offset = "0x2117A70", VA = "0x2117A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB300E4", Offset = "0xB300E4")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x1700018F")]
		public uint errorDetail
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0x2117A78", Offset = "0x2117A78", VA = "0x2117A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB300F4", Offset = "0xB300F4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x2117A24", Offset = "0x2117A24", VA = "0x2117A24")]
		internal PARTY_REGIONS_CHANGED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class PARTY_NETWORK_CONFIGURATION_MADE_AVAILABLE_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Serializable]
		[Token(Token = "0x200035E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB206DC", Offset = "0xB206DC")]
		private sealed class <>c
		{
			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PartyCSharpSDK.Interop.PARTY_NETWORK_CONFIGURATION, PARTY_NETWORK_CONFIGURATION> <>9__0_0;

			[Token(Token = "0x6001020")]
			[Address(RVA = "0x1FFFFB0", Offset = "0x1FFFFB0", VA = "0x1FFFFB0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001021")]
			[Address(RVA = "0x1FFFFB8", Offset = "0x1FFFFB8", VA = "0x1FFFFB8")]
			internal PARTY_NETWORK_CONFIGURATION <.ctor>b__0_0(PartyCSharpSDK.Interop.PARTY_NETWORK_CONFIGURATION x)
			{
				return null;
			}
		}

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2622C", Offset = "0xB2622C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2623C", Offset = "0xB2623C")]
		private readonly PARTY_NETWORK_CONFIGURATION <networkConfiguration>k__BackingField;

		[Token(Token = "0x17000190")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0x2117458", Offset = "0x2117458", VA = "0x2117458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30104", Offset = "0xB30104")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public PARTY_NETWORK_CONFIGURATION networkConfiguration
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0x2117460", Offset = "0x2117460", VA = "0x2117460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30114", Offset = "0xB30114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x21172B4", Offset = "0x21172B4", VA = "0x21172B4")]
		internal PARTY_NETWORK_CONFIGURATION_MADE_AVAILABLE_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class PARTY_INVITATION_CREATED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2624C", Offset = "0xB2624C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2625C", Offset = "0xB2625C")]
		private readonly PARTY_INVITATION_HANDLE <invitation>k__BackingField;

		[Token(Token = "0x17000192")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0x21166E8", Offset = "0x21166E8", VA = "0x21166E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30124", Offset = "0xB30124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public PARTY_INVITATION_HANDLE invitation
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x21166F0", Offset = "0x21166F0", VA = "0x21166F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30134", Offset = "0xB30134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x211660C", Offset = "0x211660C", VA = "0x211660C")]
		internal PARTY_INVITATION_CREATED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class PARTY_INVITATION_DESTROYED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2626C", Offset = "0xB2626C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2627C", Offset = "0xB2627C")]
		private readonly PARTY_INVITATION_HANDLE <invitation>k__BackingField;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2628C", Offset = "0xB2628C")]
		private readonly PARTY_DESTROYED_REASON <reason>k__BackingField;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2629C", Offset = "0xB2629C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x17000194")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x21167E8", Offset = "0x21167E8", VA = "0x21167E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30144", Offset = "0xB30144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public PARTY_INVITATION_HANDLE invitation
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x21167F0", Offset = "0x21167F0", VA = "0x21167F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30154", Offset = "0xB30154")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		public PARTY_DESTROYED_REASON reason
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0x21167F8", Offset = "0x21167F8", VA = "0x21167F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30164", Offset = "0xB30164")]
			get
			{
				return default(PARTY_DESTROYED_REASON);
			}
		}

		[Token(Token = "0x17000197")]
		public uint errorDetail
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x2116800", Offset = "0x2116800", VA = "0x2116800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30174", Offset = "0xB30174")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x21166F8", Offset = "0x21166F8", VA = "0x21166F8")]
		internal PARTY_INVITATION_DESTROYED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class PARTY_CREATE_ENDPOINT_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB262AC", Offset = "0xB262AC")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB262BC", Offset = "0xB262BC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB262CC", Offset = "0xB262CC")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB262DC", Offset = "0xB262DC")]
		private readonly PARTY_LOCAL_USER_HANDLE <localUser>k__BackingField;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB262EC", Offset = "0xB262EC")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB262FC", Offset = "0xB262FC")]
		private readonly PARTY_ENDPOINT_HANDLE <localEndpoint>k__BackingField;

		[Token(Token = "0x17000198")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x2114C08", Offset = "0x2114C08", VA = "0x2114C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30184", Offset = "0xB30184")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000199")]
		public uint errorDetail
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0x2114C10", Offset = "0x2114C10", VA = "0x2114C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30194", Offset = "0xB30194")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700019A")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x2114C18", Offset = "0x2114C18", VA = "0x2114C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB301A4", Offset = "0xB301A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		public PARTY_LOCAL_USER_HANDLE localUser
		{
			[Token(Token = "0x600102E")]
			[Address(RVA = "0x2114C20", Offset = "0x2114C20", VA = "0x2114C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB301B4", Offset = "0xB301B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		public object asyncIdentifier
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x2114C28", Offset = "0x2114C28", VA = "0x2114C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB301C4", Offset = "0xB301C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public PARTY_ENDPOINT_HANDLE localEndpoint
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x2114C30", Offset = "0x2114C30", VA = "0x2114C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB301D4", Offset = "0xB301D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x2114A34", Offset = "0x2114A34", VA = "0x2114A34")]
		internal PARTY_CREATE_ENDPOINT_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class PARTY_ENDPOINT_CREATED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2630C", Offset = "0xB2630C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2631C", Offset = "0xB2631C")]
		private readonly PARTY_ENDPOINT_HANDLE <endpoint>k__BackingField;

		[Token(Token = "0x1700019E")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x2115A84", Offset = "0x2115A84", VA = "0x2115A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB301E4", Offset = "0xB301E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public PARTY_ENDPOINT_HANDLE endpoint
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x2115A8C", Offset = "0x2115A8C", VA = "0x2115A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB301F4", Offset = "0xB301F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x21159A8", Offset = "0x21159A8", VA = "0x21159A8")]
		internal PARTY_ENDPOINT_CREATED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class PARTY_ENDPOINT_DESTROYED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2632C", Offset = "0xB2632C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2633C", Offset = "0xB2633C")]
		private readonly PARTY_ENDPOINT_HANDLE <endpoint>k__BackingField;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2634C", Offset = "0xB2634C")]
		private readonly PARTY_DESTROYED_REASON <reason>k__BackingField;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2635C", Offset = "0xB2635C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x170001A0")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x2115B84", Offset = "0x2115B84", VA = "0x2115B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30204", Offset = "0xB30204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public PARTY_ENDPOINT_HANDLE endpoint
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x2115B8C", Offset = "0x2115B8C", VA = "0x2115B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30214", Offset = "0xB30214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public PARTY_DESTROYED_REASON reason
		{
			[Token(Token = "0x6001037")]
			[Address(RVA = "0x2115B94", Offset = "0x2115B94", VA = "0x2115B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30224", Offset = "0xB30224")]
			get
			{
				return default(PARTY_DESTROYED_REASON);
			}
		}

		[Token(Token = "0x170001A3")]
		public uint errorDetail
		{
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x2115B9C", Offset = "0x2115B9C", VA = "0x2115B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30234", Offset = "0xB30234")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x2115A94", Offset = "0x2115A94", VA = "0x2115A94")]
		internal PARTY_ENDPOINT_DESTROYED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class PARTY_REMOTE_DEVICE_CREATED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2636C", Offset = "0xB2636C")]
		private readonly PARTY_DEVICE_HANDLE <device>k__BackingField;

		[Token(Token = "0x170001A4")]
		public PARTY_DEVICE_HANDLE device
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x2117B20", Offset = "0x2117B20", VA = "0x2117B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30244", Offset = "0xB30244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x2117A80", Offset = "0x2117A80", VA = "0x2117A80")]
		internal PARTY_REMOTE_DEVICE_CREATED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class PARTY_REMOTE_DEVICE_DESTROYED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2637C", Offset = "0xB2637C")]
		private readonly PARTY_DEVICE_HANDLE <device>k__BackingField;

		[Token(Token = "0x170001A5")]
		public PARTY_DEVICE_HANDLE device
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x2117BC8", Offset = "0x2117BC8", VA = "0x2117BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30254", Offset = "0xB30254")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x2117B28", Offset = "0x2117B28", VA = "0x2117B28")]
		internal PARTY_REMOTE_DEVICE_DESTROYED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class PARTY_REMOTE_DEVICE_JOINED_NETWORK_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2638C", Offset = "0xB2638C")]
		private readonly PARTY_DEVICE_HANDLE <device>k__BackingField;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2639C", Offset = "0xB2639C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x170001A6")]
		public PARTY_DEVICE_HANDLE device
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x2117CAC", Offset = "0x2117CAC", VA = "0x2117CAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30264", Offset = "0xB30264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x2117CB4", Offset = "0x2117CB4", VA = "0x2117CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30274", Offset = "0xB30274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x2117BD0", Offset = "0x2117BD0", VA = "0x2117BD0")]
		internal PARTY_REMOTE_DEVICE_JOINED_NETWORK_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class PARTY_REMOTE_DEVICE_LEFT_NETWORK_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB263AC", Offset = "0xB263AC")]
		private readonly PARTY_DESTROYED_REASON <reason>k__BackingField;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB263BC", Offset = "0xB263BC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB263CC", Offset = "0xB263CC")]
		private readonly PARTY_DEVICE_HANDLE <device>k__BackingField;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB263DC", Offset = "0xB263DC")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x170001A8")]
		public PARTY_DESTROYED_REASON reason
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x2117DA0", Offset = "0x2117DA0", VA = "0x2117DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30284", Offset = "0xB30284")]
			get
			{
				return default(PARTY_DESTROYED_REASON);
			}
		}

		[Token(Token = "0x170001A9")]
		public uint errorDetail
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x2117DA8", Offset = "0x2117DA8", VA = "0x2117DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30294", Offset = "0xB30294")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001AA")]
		public PARTY_DEVICE_HANDLE device
		{
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x2117DB0", Offset = "0x2117DB0", VA = "0x2117DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB302A4", Offset = "0xB302A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x2117DB8", Offset = "0x2117DB8", VA = "0x2117DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB302B4", Offset = "0xB302B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x2117CBC", Offset = "0x2117CBC", VA = "0x2117CBC")]
		internal PARTY_REMOTE_DEVICE_LEFT_NETWORK_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class PARTY_ENDPOINT_MESSAGE_RECEIVED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB263EC", Offset = "0xB263EC")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB263FC", Offset = "0xB263FC")]
		private readonly PARTY_ENDPOINT_HANDLE <senderEndpoint>k__BackingField;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2640C", Offset = "0xB2640C")]
		private readonly List<PARTY_ENDPOINT_HANDLE> <receiverEndpoints>k__BackingField;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2641C", Offset = "0xB2641C")]
		private readonly PARTY_MESSAGE_RECEIVED_OPTIONS <options>k__BackingField;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2642C", Offset = "0xB2642C")]
		private readonly uint <messageSize>k__BackingField;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2643C", Offset = "0xB2643C")]
		private readonly IntPtr <messageBuffer>k__BackingField;

		[Token(Token = "0x170001AC")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x21160E0", Offset = "0x21160E0", VA = "0x21160E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB302C4", Offset = "0xB302C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		public PARTY_ENDPOINT_HANDLE senderEndpoint
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x21160E8", Offset = "0x21160E8", VA = "0x21160E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB302D4", Offset = "0xB302D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		public List<PARTY_ENDPOINT_HANDLE> receiverEndpoints
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x21160F0", Offset = "0x21160F0", VA = "0x21160F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB302E4", Offset = "0xB302E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public PARTY_MESSAGE_RECEIVED_OPTIONS options
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x21160F8", Offset = "0x21160F8", VA = "0x21160F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB302F4", Offset = "0xB302F4")]
			get
			{
				return default(PARTY_MESSAGE_RECEIVED_OPTIONS);
			}
		}

		[Token(Token = "0x170001B0")]
		public uint messageSize
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x2116100", Offset = "0x2116100", VA = "0x2116100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30304", Offset = "0xB30304")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001B1")]
		public IntPtr messageBuffer
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x2116108", Offset = "0x2116108", VA = "0x2116108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30314", Offset = "0xB30314")]
			get
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x2115C5C", Offset = "0x2115C5C", VA = "0x2115C5C")]
		internal PARTY_ENDPOINT_MESSAGE_RECEIVED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x2115E34", Offset = "0x2115E34", VA = "0x2115E34", Slot = "4")]
		internal override void Cleanup()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class PARTY_CREATE_INVITATION_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2644C", Offset = "0xB2644C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2645C", Offset = "0xB2645C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2646C", Offset = "0xB2646C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2647C", Offset = "0xB2647C")]
		private readonly PARTY_LOCAL_USER_HANDLE <localUser>k__BackingField;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2648C", Offset = "0xB2648C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2649C", Offset = "0xB2649C")]
		private readonly PARTY_INVITATION_HANDLE <invitation>k__BackingField;

		[Token(Token = "0x170001B2")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0x2114E0C", Offset = "0x2114E0C", VA = "0x2114E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30324", Offset = "0xB30324")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001B3")]
		public uint errorDetail
		{
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x2114E14", Offset = "0x2114E14", VA = "0x2114E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30334", Offset = "0xB30334")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001B4")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001050")]
			[Address(RVA = "0x2114E1C", Offset = "0x2114E1C", VA = "0x2114E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30344", Offset = "0xB30344")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public PARTY_LOCAL_USER_HANDLE localUser
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x2114E24", Offset = "0x2114E24", VA = "0x2114E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30354", Offset = "0xB30354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public object asyncIdentifier
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x2114E2C", Offset = "0x2114E2C", VA = "0x2114E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30364", Offset = "0xB30364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public PARTY_INVITATION_HANDLE invitation
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x2114E34", Offset = "0x2114E34", VA = "0x2114E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30374", Offset = "0xB30374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x2114C38", Offset = "0x2114C38", VA = "0x2114C38")]
		internal PARTY_CREATE_INVITATION_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200036A")]
	public class PARTY_DESTROY_ENDPOINT_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB264AC", Offset = "0xB264AC")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB264BC", Offset = "0xB264BC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB264CC", Offset = "0xB264CC")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB264DC", Offset = "0xB264DC")]
		private readonly PARTY_ENDPOINT_HANDLE <localEndpoint>k__BackingField;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB264EC", Offset = "0xB264EC")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x170001B8")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x2115608", Offset = "0x2115608", VA = "0x2115608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30384", Offset = "0xB30384")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001B9")]
		public uint errorDetail
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x2115610", Offset = "0x2115610", VA = "0x2115610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30394", Offset = "0xB30394")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001BA")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x2115618", Offset = "0x2115618", VA = "0x2115618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303A4", Offset = "0xB303A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		public PARTY_ENDPOINT_HANDLE localEndpoint
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x2115620", Offset = "0x2115620", VA = "0x2115620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303B4", Offset = "0xB303B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public object asyncIdentifier
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x2115628", Offset = "0x2115628", VA = "0x2115628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303C4", Offset = "0xB303C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x21154A8", Offset = "0x21154A8", VA = "0x21154A8")]
		internal PARTY_DESTROY_ENDPOINT_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class PARTY_LEAVE_NETWORK_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB264FC", Offset = "0xB264FC")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2650C", Offset = "0xB2650C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2651C", Offset = "0xB2651C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2652C", Offset = "0xB2652C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x170001BD")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x2116CC0", Offset = "0x2116CC0", VA = "0x2116CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303D4", Offset = "0xB303D4")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001BE")]
		public uint errorDetail
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x2116CC8", Offset = "0x2116CC8", VA = "0x2116CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303E4", Offset = "0xB303E4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001BF")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x2116CD0", Offset = "0x2116CD0", VA = "0x2116CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB303F4", Offset = "0xB303F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public object asyncIdentifier
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x2116CD8", Offset = "0x2116CD8", VA = "0x2116CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30404", Offset = "0xB30404")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x2116BA8", Offset = "0x2116BA8", VA = "0x2116BA8")]
		internal PARTY_LEAVE_NETWORK_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class PARTY_REMOVE_LOCAL_USER_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2653C", Offset = "0xB2653C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2654C", Offset = "0xB2654C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2655C", Offset = "0xB2655C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2656C", Offset = "0xB2656C")]
		private readonly PARTY_LOCAL_USER_HANDLE <localUser>k__BackingField;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2657C", Offset = "0xB2657C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x170001C1")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0x2117F20", Offset = "0x2117F20", VA = "0x2117F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30414", Offset = "0xB30414")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001C2")]
		public uint errorDetail
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x2117F28", Offset = "0x2117F28", VA = "0x2117F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30424", Offset = "0xB30424")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001C3")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x2117F30", Offset = "0x2117F30", VA = "0x2117F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30434", Offset = "0xB30434")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public PARTY_LOCAL_USER_HANDLE localUser
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x2117F38", Offset = "0x2117F38", VA = "0x2117F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30444", Offset = "0xB30444")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		public object asyncIdentifier
		{
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x2117F40", Offset = "0x2117F40", VA = "0x2117F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30454", Offset = "0xB30454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x2117DC0", Offset = "0x2117DC0", VA = "0x2117DC0")]
		internal PARTY_REMOVE_LOCAL_USER_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class PARTY_REVOKE_INVITATION_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2658C", Offset = "0xB2658C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2659C", Offset = "0xB2659C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB265AC", Offset = "0xB265AC")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB265BC", Offset = "0xB265BC")]
		private readonly PARTY_LOCAL_USER_HANDLE <localUser>k__BackingField;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB265CC", Offset = "0xB265CC")]
		private readonly PARTY_INVITATION_HANDLE <invitation>k__BackingField;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB265DC", Offset = "0xB265DC")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x170001C6")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x21180EC", Offset = "0x21180EC", VA = "0x21180EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30464", Offset = "0xB30464")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001C7")]
		public uint errorDetail
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x21180F4", Offset = "0x21180F4", VA = "0x21180F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30474", Offset = "0xB30474")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001C8")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x21180FC", Offset = "0x21180FC", VA = "0x21180FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30484", Offset = "0xB30484")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		public PARTY_LOCAL_USER_HANDLE localUser
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x2118104", Offset = "0x2118104", VA = "0x2118104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30494", Offset = "0xB30494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		public PARTY_INVITATION_HANDLE invitation
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x211810C", Offset = "0x211810C", VA = "0x211810C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB304A4", Offset = "0xB304A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		public object asyncIdentifier
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x2118114", Offset = "0x2118114", VA = "0x2118114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB304B4", Offset = "0xB304B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x2117F48", Offset = "0x2117F48", VA = "0x2117F48")]
		internal PARTY_REVOKE_INVITATION_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class PARTY_NETWORK_DESCRIPTOR_CHANGED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB265EC", Offset = "0xB265EC")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x170001CC")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x600106D")]
			[Address(RVA = "0x21176BC", Offset = "0x21176BC", VA = "0x21176BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB304C4", Offset = "0xB304C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x211761C", Offset = "0x211761C", VA = "0x211761C")]
		internal PARTY_NETWORK_DESCRIPTOR_CHANGED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class PARTY_LOCAL_USER_KICKED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB265FC", Offset = "0xB265FC")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2660C", Offset = "0xB2660C")]
		private readonly PARTY_LOCAL_USER_HANDLE <localUser>k__BackingField;

		[Token(Token = "0x170001CD")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0x2117078", Offset = "0x2117078", VA = "0x2117078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB304D4", Offset = "0xB304D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		public PARTY_LOCAL_USER_HANDLE localUser
		{
			[Token(Token = "0x6001070")]
			[Address(RVA = "0x2117080", Offset = "0x2117080", VA = "0x2117080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB304E4", Offset = "0xB304E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x2116F9C", Offset = "0x2116F9C", VA = "0x2116F9C")]
		internal PARTY_LOCAL_USER_KICKED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class PARTY_KICK_DEVICE_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2661C", Offset = "0xB2661C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2662C", Offset = "0xB2662C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2663C", Offset = "0xB2663C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2664C", Offset = "0xB2664C")]
		private readonly PARTY_DEVICE_HANDLE <kickedDevice>k__BackingField;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2665C", Offset = "0xB2665C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x170001CF")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0x2116A20", Offset = "0x2116A20", VA = "0x2116A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB304F4", Offset = "0xB304F4")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001D0")]
		public uint errorDetail
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0x2116A28", Offset = "0x2116A28", VA = "0x2116A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30504", Offset = "0xB30504")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001D1")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x2116A30", Offset = "0x2116A30", VA = "0x2116A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30514", Offset = "0xB30514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		public PARTY_DEVICE_HANDLE kickedDevice
		{
			[Token(Token = "0x6001075")]
			[Address(RVA = "0x2116A38", Offset = "0x2116A38", VA = "0x2116A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30524", Offset = "0xB30524")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		public object asyncIdentifier
		{
			[Token(Token = "0x6001076")]
			[Address(RVA = "0x2116A40", Offset = "0x2116A40", VA = "0x2116A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30534", Offset = "0xB30534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x21168C0", Offset = "0x21168C0", VA = "0x21168C0")]
		internal PARTY_KICK_DEVICE_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class PARTY_KICK_USER_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2666C", Offset = "0xB2666C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2667C", Offset = "0xB2667C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2668C", Offset = "0xB2668C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2669C", Offset = "0xB2669C")]
		private readonly string <kickedEntityId>k__BackingField;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB266AC", Offset = "0xB266AC")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x170001D4")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0x2116B80", Offset = "0x2116B80", VA = "0x2116B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30544", Offset = "0xB30544")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001D5")]
		public uint errorDetail
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0x2116B88", Offset = "0x2116B88", VA = "0x2116B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30554", Offset = "0xB30554")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001D6")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0x2116B90", Offset = "0x2116B90", VA = "0x2116B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30564", Offset = "0xB30564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public string kickedEntityId
		{
			[Token(Token = "0x600107B")]
			[Address(RVA = "0x2116B98", Offset = "0x2116B98", VA = "0x2116B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30574", Offset = "0xB30574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public object asyncIdentifier
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0x2116BA0", Offset = "0x2116BA0", VA = "0x2116BA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30584", Offset = "0xB30584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x2116A48", Offset = "0x2116A48", VA = "0x2116A48")]
		internal PARTY_KICK_USER_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class PARTY_CREATE_CHAT_CONTROL_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB266BC", Offset = "0xB266BC")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB266CC", Offset = "0xB266CC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB266DC", Offset = "0xB266DC")]
		private readonly PARTY_DEVICE_HANDLE <localDevice>k__BackingField;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB266EC", Offset = "0xB266EC")]
		private readonly PARTY_LOCAL_USER_HANDLE <localUser>k__BackingField;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB266FC", Offset = "0xB266FC")]
		private readonly string <languageCode>k__BackingField;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2670C", Offset = "0xB2670C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2671C", Offset = "0xB2671C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x170001D9")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x600107E")]
			[Address(RVA = "0x21149FC", Offset = "0x21149FC", VA = "0x21149FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30594", Offset = "0xB30594")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001DA")]
		public uint errorDetail
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x2114A04", Offset = "0x2114A04", VA = "0x2114A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305A4", Offset = "0xB305A4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001DB")]
		public PARTY_DEVICE_HANDLE localDevice
		{
			[Token(Token = "0x6001080")]
			[Address(RVA = "0x2114A0C", Offset = "0x2114A0C", VA = "0x2114A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305B4", Offset = "0xB305B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		public PARTY_LOCAL_USER_HANDLE localUser
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0x2114A14", Offset = "0x2114A14", VA = "0x2114A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305C4", Offset = "0xB305C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		public string languageCode
		{
			[Token(Token = "0x6001082")]
			[Address(RVA = "0x2114A1C", Offset = "0x2114A1C", VA = "0x2114A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305D4", Offset = "0xB305D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		public object asyncIdentifier
		{
			[Token(Token = "0x6001083")]
			[Address(RVA = "0x2114A24", Offset = "0x2114A24", VA = "0x2114A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305E4", Offset = "0xB305E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x6001084")]
			[Address(RVA = "0x2114A2C", Offset = "0x2114A2C", VA = "0x2114A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB305F4", Offset = "0xB305F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x2114800", Offset = "0x2114800", VA = "0x2114800")]
		internal PARTY_CREATE_CHAT_CONTROL_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class PARTY_DESTROY_CHAT_CONTROL_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2672C", Offset = "0xB2672C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2673C", Offset = "0xB2673C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2674C", Offset = "0xB2674C")]
		private readonly PARTY_DEVICE_HANDLE <localDevice>k__BackingField;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2675C", Offset = "0xB2675C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2676C", Offset = "0xB2676C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x170001E0")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x6001086")]
			[Address(RVA = "0x2115480", Offset = "0x2115480", VA = "0x2115480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30604", Offset = "0xB30604")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001E1")]
		public uint errorDetail
		{
			[Token(Token = "0x6001087")]
			[Address(RVA = "0x2115488", Offset = "0x2115488", VA = "0x2115488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30614", Offset = "0xB30614")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001E2")]
		public PARTY_DEVICE_HANDLE localDevice
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x2115490", Offset = "0x2115490", VA = "0x2115490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30624", Offset = "0xB30624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x2115498", Offset = "0x2115498", VA = "0x2115498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30634", Offset = "0xB30634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public object asyncIdentifier
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0x21154A0", Offset = "0x21154A0", VA = "0x21154A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30644", Offset = "0xB30644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x2115320", Offset = "0x2115320", VA = "0x2115320")]
		internal PARTY_DESTROY_CHAT_CONTROL_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class PARTY_CHAT_CONTROL_CREATED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2677C", Offset = "0xB2677C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <chatControl>k__BackingField;

		[Token(Token = "0x170001E5")]
		public PARTY_CHAT_CONTROL_HANDLE chatControl
		{
			[Token(Token = "0x600108C")]
			[Address(RVA = "0x2113D1C", Offset = "0x2113D1C", VA = "0x2113D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30654", Offset = "0xB30654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x2113C50", Offset = "0x2113C50", VA = "0x2113C50")]
		internal PARTY_CHAT_CONTROL_CREATED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class PARTY_CHAT_CONTROL_DESTROYED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2678C", Offset = "0xB2678C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <chatControl>k__BackingField;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2679C", Offset = "0xB2679C")]
		private readonly PARTY_DESTROYED_REASON <reason>k__BackingField;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB267AC", Offset = "0xB267AC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x170001E6")]
		public PARTY_CHAT_CONTROL_HANDLE chatControl
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0x2113DCC", Offset = "0x2113DCC", VA = "0x2113DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30664", Offset = "0xB30664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public PARTY_DESTROYED_REASON reason
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0x2113DD4", Offset = "0x2113DD4", VA = "0x2113DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30674", Offset = "0xB30674")]
			get
			{
				return default(PARTY_DESTROYED_REASON);
			}
		}

		[Token(Token = "0x170001E8")]
		public uint errorDetail
		{
			[Token(Token = "0x6001090")]
			[Address(RVA = "0x2113DDC", Offset = "0x2113DDC", VA = "0x2113DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30684", Offset = "0xB30684")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x2113D24", Offset = "0x2113D24", VA = "0x2113D24")]
		internal PARTY_CHAT_CONTROL_DESTROYED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class PARTY_CHAT_CONTROL_JOINED_NETWORK_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB267BC", Offset = "0xB267BC")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB267CC", Offset = "0xB267CC")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <chatControl>k__BackingField;

		[Token(Token = "0x170001E9")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001092")]
			[Address(RVA = "0x2113F78", Offset = "0x2113F78", VA = "0x2113F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30694", Offset = "0xB30694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		public PARTY_CHAT_CONTROL_HANDLE chatControl
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0x2113F80", Offset = "0x2113F80", VA = "0x2113F80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306A4", Offset = "0xB306A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x2113E9C", Offset = "0x2113E9C", VA = "0x2113E9C")]
		internal PARTY_CHAT_CONTROL_JOINED_NETWORK_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class PARTY_CHAT_CONTROL_LEFT_NETWORK_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB267DC", Offset = "0xB267DC")]
		private readonly PARTY_DESTROYED_REASON <reason>k__BackingField;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB267EC", Offset = "0xB267EC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB267FC", Offset = "0xB267FC")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2680C", Offset = "0xB2680C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <chatControl>k__BackingField;

		[Token(Token = "0x170001EB")]
		public PARTY_DESTROYED_REASON reason
		{
			[Token(Token = "0x6001095")]
			[Address(RVA = "0x211406C", Offset = "0x211406C", VA = "0x211406C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306B4", Offset = "0xB306B4")]
			get
			{
				return default(PARTY_DESTROYED_REASON);
			}
		}

		[Token(Token = "0x170001EC")]
		public uint errorDetail
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0x2114074", Offset = "0x2114074", VA = "0x2114074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306C4", Offset = "0xB306C4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001ED")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x211407C", Offset = "0x211407C", VA = "0x211407C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306D4", Offset = "0xB306D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public PARTY_CHAT_CONTROL_HANDLE chatControl
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x2114084", Offset = "0x2114084", VA = "0x2114084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306E4", Offset = "0xB306E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x2113F88", Offset = "0x2113F88", VA = "0x2113F88")]
		internal PARTY_CHAT_CONTROL_LEFT_NETWORK_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class PARTY_CONNECT_CHAT_CONTROL_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2681C", Offset = "0xB2681C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2682C", Offset = "0xB2682C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2683C", Offset = "0xB2683C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2684C", Offset = "0xB2684C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2685C", Offset = "0xB2685C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x170001EF")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x21145B0", Offset = "0x21145B0", VA = "0x21145B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB306F4", Offset = "0xB306F4")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001F0")]
		public uint errorDetail
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x21145B8", Offset = "0x21145B8", VA = "0x21145B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30704", Offset = "0xB30704")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001F1")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0x21145C0", Offset = "0x21145C0", VA = "0x21145C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30714", Offset = "0xB30714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0x21145C8", Offset = "0x21145C8", VA = "0x21145C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30724", Offset = "0xB30724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		public object asyncIdentifier
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0x21145D0", Offset = "0x21145D0", VA = "0x21145D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30734", Offset = "0xB30734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x2114450", Offset = "0x2114450", VA = "0x2114450")]
		internal PARTY_CONNECT_CHAT_CONTROL_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class PARTY_DISCONNECT_CHAT_CONTROL_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2686C", Offset = "0xB2686C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2687C", Offset = "0xB2687C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2688C", Offset = "0xB2688C")]
		private readonly PARTY_NETWORK_HANDLE <network>k__BackingField;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2689C", Offset = "0xB2689C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB268AC", Offset = "0xB268AC")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x170001F4")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x2115980", Offset = "0x2115980", VA = "0x2115980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30744", Offset = "0xB30744")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001F5")]
		public uint errorDetail
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x2115988", Offset = "0x2115988", VA = "0x2115988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30754", Offset = "0xB30754")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001F6")]
		public PARTY_NETWORK_HANDLE network
		{
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x2115990", Offset = "0x2115990", VA = "0x2115990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30764", Offset = "0xB30764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x2115998", Offset = "0x2115998", VA = "0x2115998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30774", Offset = "0xB30774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		public object asyncIdentifier
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x21159A0", Offset = "0x21159A0", VA = "0x21159A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30784", Offset = "0xB30784")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x2115820", Offset = "0x2115820", VA = "0x2115820")]
		internal PARTY_DISCONNECT_CHAT_CONTROL_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class PARTY_SET_CHAT_AUDIO_INPUT_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB268BC", Offset = "0xB268BC")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB268CC", Offset = "0xB268CC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB268DC", Offset = "0xB268DC")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB268EC", Offset = "0xB268EC")]
		private readonly PARTY_AUDIO_DEVICE_SELECTION_TYPE <audioDeviceSelectionType>k__BackingField;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB268FC", Offset = "0xB268FC")]
		private readonly string <audioDeviceSelectionContext>k__BackingField;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2690C", Offset = "0xB2690C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x170001F9")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x2118460", Offset = "0x2118460", VA = "0x2118460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30794", Offset = "0xB30794")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x170001FA")]
		public uint errorDetail
		{
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x2118468", Offset = "0x2118468", VA = "0x2118468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB307A4", Offset = "0xB307A4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001FB")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x2118470", Offset = "0x2118470", VA = "0x2118470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB307B4", Offset = "0xB307B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		public PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x2118478", Offset = "0x2118478", VA = "0x2118478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB307C4", Offset = "0xB307C4")]
			get
			{
				return default(PARTY_AUDIO_DEVICE_SELECTION_TYPE);
			}
		}

		[Token(Token = "0x170001FD")]
		public string audioDeviceSelectionContext
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x2118480", Offset = "0x2118480", VA = "0x2118480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB307D4", Offset = "0xB307D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public object asyncIdentifier
		{
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0x2118488", Offset = "0x2118488", VA = "0x2118488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB307E4", Offset = "0xB307E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x2118318", Offset = "0x2118318", VA = "0x2118318")]
		internal PARTY_SET_CHAT_AUDIO_INPUT_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class PARTY_SET_CHAT_AUDIO_OUTPUT_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2691C", Offset = "0xB2691C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2692C", Offset = "0xB2692C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2693C", Offset = "0xB2693C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2694C", Offset = "0xB2694C")]
		private readonly PARTY_AUDIO_DEVICE_SELECTION_TYPE <audioDeviceSelectionType>k__BackingField;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2695C", Offset = "0xB2695C")]
		private readonly string <audioDeviceSelectionContext>k__BackingField;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2696C", Offset = "0xB2696C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x170001FF")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x21185D8", Offset = "0x21185D8", VA = "0x21185D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB307F4", Offset = "0xB307F4")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000200")]
		public uint errorDetail
		{
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x21185E0", Offset = "0x21185E0", VA = "0x21185E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30804", Offset = "0xB30804")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000201")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x21185E8", Offset = "0x21185E8", VA = "0x21185E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30814", Offset = "0xB30814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		public PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType
		{
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x21185F0", Offset = "0x21185F0", VA = "0x21185F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30824", Offset = "0xB30824")]
			get
			{
				return default(PARTY_AUDIO_DEVICE_SELECTION_TYPE);
			}
		}

		[Token(Token = "0x17000203")]
		public string audioDeviceSelectionContext
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x21185F8", Offset = "0x21185F8", VA = "0x21185F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30834", Offset = "0xB30834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		public object asyncIdentifier
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x2118600", Offset = "0x2118600", VA = "0x2118600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30844", Offset = "0xB30844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x2118490", Offset = "0x2118490", VA = "0x2118490")]
		internal PARTY_SET_CHAT_AUDIO_OUTPUT_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class PARTY_LOCAL_CHAT_AUDIO_INPUT_CHANGED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2697C", Offset = "0xB2697C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2698C", Offset = "0xB2698C")]
		private readonly PARTY_AUDIO_INPUT_STATE <state>k__BackingField;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2699C", Offset = "0xB2699C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x17000205")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x2116D88", Offset = "0x2116D88", VA = "0x2116D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30854", Offset = "0xB30854")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		public PARTY_AUDIO_INPUT_STATE state
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x2116D90", Offset = "0x2116D90", VA = "0x2116D90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30864", Offset = "0xB30864")]
			get
			{
				return default(PARTY_AUDIO_INPUT_STATE);
			}
		}

		[Token(Token = "0x17000207")]
		public uint errorDetail
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x2116D98", Offset = "0x2116D98", VA = "0x2116D98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30874", Offset = "0xB30874")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x2116CE0", Offset = "0x2116CE0", VA = "0x2116CE0")]
		internal PARTY_LOCAL_CHAT_AUDIO_INPUT_CHANGED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class PARTY_LOCAL_CHAT_AUDIO_OUTPUT_CHANGED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB269AC", Offset = "0xB269AC")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB269BC", Offset = "0xB269BC")]
		private readonly PARTY_AUDIO_OUTPUT_STATE <state>k__BackingField;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB269CC", Offset = "0xB269CC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x17000208")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x2116E48", Offset = "0x2116E48", VA = "0x2116E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30884", Offset = "0xB30884")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		public PARTY_AUDIO_OUTPUT_STATE state
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x2116E50", Offset = "0x2116E50", VA = "0x2116E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30894", Offset = "0xB30894")]
			get
			{
				return default(PARTY_AUDIO_OUTPUT_STATE);
			}
		}

		[Token(Token = "0x1700020A")]
		public uint errorDetail
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x2116E58", Offset = "0x2116E58", VA = "0x2116E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308A4", Offset = "0xB308A4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x2116DA0", Offset = "0x2116DA0", VA = "0x2116DA0")]
		internal PARTY_LOCAL_CHAT_AUDIO_OUTPUT_CHANGED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class PARTY_POPULATE_AVAILABLE_TEXT_TO_SPEECH_PROFILES_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB269DC", Offset = "0xB269DC")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB269EC", Offset = "0xB269EC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB269FC", Offset = "0xB269FC")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26A0C", Offset = "0xB26A0C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x1700020B")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x2117954", Offset = "0x2117954", VA = "0x2117954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308B4", Offset = "0xB308B4")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x1700020C")]
		public uint errorDetail
		{
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x211795C", Offset = "0x211795C", VA = "0x211795C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308C4", Offset = "0xB308C4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700020D")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x2117964", Offset = "0x2117964", VA = "0x2117964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308D4", Offset = "0xB308D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		public object asyncIdentifier
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x211796C", Offset = "0x211796C", VA = "0x211796C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308E4", Offset = "0xB308E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x211783C", Offset = "0x211783C", VA = "0x211783C")]
		internal PARTY_POPULATE_AVAILABLE_TEXT_TO_SPEECH_PROFILES_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class PARTY_SET_LANGUAGE_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26A1C", Offset = "0xB26A1C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26A2C", Offset = "0xB26A2C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26A3C", Offset = "0xB26A3C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26A4C", Offset = "0xB26A4C")]
		private readonly string <languageCode>k__BackingField;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26A5C", Offset = "0xB26A5C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x1700020F")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x2118740", Offset = "0x2118740", VA = "0x2118740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB308F4", Offset = "0xB308F4")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000210")]
		public uint errorDetail
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x2118748", Offset = "0x2118748", VA = "0x2118748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30904", Offset = "0xB30904")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000211")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x2118750", Offset = "0x2118750", VA = "0x2118750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30914", Offset = "0xB30914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		public string languageCode
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x2118758", Offset = "0x2118758", VA = "0x2118758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30924", Offset = "0xB30924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		public object asyncIdentifier
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x2118760", Offset = "0x2118760", VA = "0x2118760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30934", Offset = "0xB30934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x2118608", Offset = "0x2118608", VA = "0x2118608")]
		internal PARTY_SET_LANGUAGE_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class PARTY_CHAT_TEXT_RECEIVED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Serializable]
		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB206EC", Offset = "0xB206EC")]
		private sealed class <>c
		{
			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE, PARTY_CHAT_CONTROL_HANDLE> <>9__0_0;

			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<PartyCSharpSDK.Interop.PARTY_TRANSLATION, PARTY_TRANSLATION> <>9__0_1;

			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x1FFFC4C", Offset = "0x1FFFC4C", VA = "0x1FFFC4C")]
			public <>c()
			{
			}

			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x1FFFC54", Offset = "0x1FFFC54", VA = "0x1FFFC54")]
			internal PARTY_CHAT_CONTROL_HANDLE <.ctor>b__0_0(PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE x)
			{
				return null;
			}

			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x1FFFCBC", Offset = "0x1FFFCBC", VA = "0x1FFFCBC")]
			internal PARTY_TRANSLATION <.ctor>b__0_1(PartyCSharpSDK.Interop.PARTY_TRANSLATION x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26A6C", Offset = "0xB26A6C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <senderChatControl>k__BackingField;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26A7C", Offset = "0xB26A7C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE[] <receiverChatControls>k__BackingField;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26A8C", Offset = "0xB26A8C")]
		private readonly string <languageCode>k__BackingField;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26A9C", Offset = "0xB26A9C")]
		private readonly string <chatText>k__BackingField;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26AAC", Offset = "0xB26AAC")]
		private readonly byte[] <data>k__BackingField;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26ABC", Offset = "0xB26ABC")]
		private readonly PARTY_TRANSLATION[] <translations>k__BackingField;

		[Token(Token = "0x17000214")]
		public PARTY_CHAT_CONTROL_HANDLE senderChatControl
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x2114420", Offset = "0x2114420", VA = "0x2114420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30944", Offset = "0xB30944")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		public PARTY_CHAT_CONTROL_HANDLE[] receiverChatControls
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x2114428", Offset = "0x2114428", VA = "0x2114428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30954", Offset = "0xB30954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		public string languageCode
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x2114430", Offset = "0x2114430", VA = "0x2114430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30964", Offset = "0xB30964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		public string chatText
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x2114438", Offset = "0x2114438", VA = "0x2114438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30974", Offset = "0xB30974")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		public byte[] data
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x2114440", Offset = "0x2114440", VA = "0x2114440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30984", Offset = "0xB30984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		public PARTY_TRANSLATION[] translations
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x2114448", Offset = "0x2114448", VA = "0x2114448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30994", Offset = "0xB30994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x211408C", Offset = "0x211408C", VA = "0x211408C")]
		internal PARTY_CHAT_TEXT_RECEIVED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class PARTY_SET_CHAT_AUDIO_ENCODER_BITRATE_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26ACC", Offset = "0xB26ACC")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26ADC", Offset = "0xB26ADC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26AEC", Offset = "0xB26AEC")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26AFC", Offset = "0xB26AFC")]
		private readonly uint <bitrate>k__BackingField;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26B0C", Offset = "0xB26B0C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x1700021A")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x21182F0", Offset = "0x21182F0", VA = "0x21182F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB309A4", Offset = "0xB309A4")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x1700021B")]
		public uint errorDetail
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x21182F8", Offset = "0x21182F8", VA = "0x21182F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB309B4", Offset = "0xB309B4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700021C")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x2118300", Offset = "0x2118300", VA = "0x2118300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB309C4", Offset = "0xB309C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		public uint bitrate
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x2118308", Offset = "0x2118308", VA = "0x2118308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB309D4", Offset = "0xB309D4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700021E")]
		public object asyncIdentifier
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x2118310", Offset = "0x2118310", VA = "0x2118310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB309E4", Offset = "0xB309E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x21181C4", Offset = "0x21181C4", VA = "0x21181C4")]
		internal PARTY_SET_CHAT_AUDIO_ENCODER_BITRATE_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class PARTY_SET_TEXT_CHAT_OPTIONS_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26B1C", Offset = "0xB26B1C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26B2C", Offset = "0xB26B2C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26B3C", Offset = "0xB26B3C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26B4C", Offset = "0xB26B4C")]
		private readonly PARTY_TEXT_CHAT_OPTIONS <options>k__BackingField;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26B5C", Offset = "0xB26B5C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x1700021F")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0x2118894", Offset = "0x2118894", VA = "0x2118894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB309F4", Offset = "0xB309F4")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000220")]
		public uint errorDetail
		{
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x211889C", Offset = "0x211889C", VA = "0x211889C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A04", Offset = "0xB30A04")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000221")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0x21188A4", Offset = "0x21188A4", VA = "0x21188A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A14", Offset = "0xB30A14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		public PARTY_TEXT_CHAT_OPTIONS options
		{
			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x21188AC", Offset = "0x21188AC", VA = "0x21188AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A24", Offset = "0xB30A24")]
			get
			{
				return default(PARTY_TEXT_CHAT_OPTIONS);
			}
		}

		[Token(Token = "0x17000223")]
		public object asyncIdentifier
		{
			[Token(Token = "0x60010DC")]
			[Address(RVA = "0x21188B4", Offset = "0x21188B4", VA = "0x21188B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A34", Offset = "0xB30A34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x2118768", Offset = "0x2118768", VA = "0x2118768")]
		internal PARTY_SET_TEXT_CHAT_OPTIONS_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class PARTY_SET_TEXT_TO_SPEECH_PROFILE_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26B6C", Offset = "0xB26B6C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26B7C", Offset = "0xB26B7C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26B8C", Offset = "0xB26B8C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26B9C", Offset = "0xB26B9C")]
		private readonly PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE <type>k__BackingField;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26BAC", Offset = "0xB26BAC")]
		private readonly string <profileIdentifier>k__BackingField;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26BBC", Offset = "0xB26BBC")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x17000224")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x2118A04", Offset = "0x2118A04", VA = "0x2118A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A44", Offset = "0xB30A44")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000225")]
		public uint errorDetail
		{
			[Token(Token = "0x60010DF")]
			[Address(RVA = "0x2118A0C", Offset = "0x2118A0C", VA = "0x2118A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A54", Offset = "0xB30A54")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000226")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0x2118A14", Offset = "0x2118A14", VA = "0x2118A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A64", Offset = "0xB30A64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE type
		{
			[Token(Token = "0x60010E1")]
			[Address(RVA = "0x2118A1C", Offset = "0x2118A1C", VA = "0x2118A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A74", Offset = "0xB30A74")]
			get
			{
				return default(PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE);
			}
		}

		[Token(Token = "0x17000228")]
		public string profileIdentifier
		{
			[Token(Token = "0x60010E2")]
			[Address(RVA = "0x2118A24", Offset = "0x2118A24", VA = "0x2118A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A84", Offset = "0xB30A84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public object asyncIdentifier
		{
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x2118A2C", Offset = "0x2118A2C", VA = "0x2118A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30A94", Offset = "0xB30A94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x21188BC", Offset = "0x21188BC", VA = "0x21188BC")]
		internal PARTY_SET_TEXT_TO_SPEECH_PROFILE_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class PARTY_SET_TRANSCRIPTION_OPTIONS_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26BCC", Offset = "0xB26BCC")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26BDC", Offset = "0xB26BDC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26BEC", Offset = "0xB26BEC")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26BFC", Offset = "0xB26BFC")]
		private readonly PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS <options>k__BackingField;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26C0C", Offset = "0xB26C0C")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x1700022A")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x2118B60", Offset = "0x2118B60", VA = "0x2118B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AA4", Offset = "0xB30AA4")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x1700022B")]
		public uint errorDetail
		{
			[Token(Token = "0x60010E6")]
			[Address(RVA = "0x2118B68", Offset = "0x2118B68", VA = "0x2118B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AB4", Offset = "0xB30AB4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700022C")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0x2118B70", Offset = "0x2118B70", VA = "0x2118B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AC4", Offset = "0xB30AC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		public PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS options
		{
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0x2118B78", Offset = "0x2118B78", VA = "0x2118B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AD4", Offset = "0xB30AD4")]
			get
			{
				return default(PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS);
			}
		}

		[Token(Token = "0x1700022E")]
		public object asyncIdentifier
		{
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0x2118B80", Offset = "0x2118B80", VA = "0x2118B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AE4", Offset = "0xB30AE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x2118A34", Offset = "0x2118A34", VA = "0x2118A34")]
		internal PARTY_SET_TRANSCRIPTION_OPTIONS_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class PARTY_VOICE_CHAT_TRANSCRIPTION_RECEIVED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26C1C", Offset = "0xB26C1C")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26C2C", Offset = "0xB26C2C")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26C3C", Offset = "0xB26C3C")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <senderChatControl>k__BackingField;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26C4C", Offset = "0xB26C4C")]
		private readonly List<PARTY_CHAT_CONTROL_HANDLE> <receiverChatControls>k__BackingField;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26C5C", Offset = "0xB26C5C")]
		private readonly PARTY_AUDIO_SOURCE_TYPE <sourceType>k__BackingField;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26C6C", Offset = "0xB26C6C")]
		private readonly string <languageCode>k__BackingField;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26C7C", Offset = "0xB26C7C")]
		private readonly string <transcription>k__BackingField;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26C8C", Offset = "0xB26C8C")]
		private readonly PARTY_VOICE_CHAT_TRANSCRIPTION_PHRASE_TYPE <type>k__BackingField;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26C9C", Offset = "0xB26C9C")]
		private readonly List<PARTY_TRANSLATION> <translations>k__BackingField;

		[Token(Token = "0x1700022F")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x211A798", Offset = "0x211A798", VA = "0x211A798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AF4", Offset = "0xB30AF4")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000230")]
		public uint errorDetail
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0x211A7A0", Offset = "0x211A7A0", VA = "0x211A7A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B04", Offset = "0xB30B04")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000231")]
		public PARTY_CHAT_CONTROL_HANDLE senderChatControl
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x211A7A8", Offset = "0x211A7A8", VA = "0x211A7A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B14", Offset = "0xB30B14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public List<PARTY_CHAT_CONTROL_HANDLE> receiverChatControls
		{
			[Token(Token = "0x60010EF")]
			[Address(RVA = "0x211A7B0", Offset = "0x211A7B0", VA = "0x211A7B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B24", Offset = "0xB30B24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public PARTY_AUDIO_SOURCE_TYPE sourceType
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0x211A7B8", Offset = "0x211A7B8", VA = "0x211A7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B34", Offset = "0xB30B34")]
			get
			{
				return default(PARTY_AUDIO_SOURCE_TYPE);
			}
		}

		[Token(Token = "0x17000234")]
		public string languageCode
		{
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x211A7C0", Offset = "0x211A7C0", VA = "0x211A7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B44", Offset = "0xB30B44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public string transcription
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x211A7C8", Offset = "0x211A7C8", VA = "0x211A7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B54", Offset = "0xB30B54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public PARTY_VOICE_CHAT_TRANSCRIPTION_PHRASE_TYPE type
		{
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x211A7D0", Offset = "0x211A7D0", VA = "0x211A7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B64", Offset = "0xB30B64")]
			get
			{
				return default(PARTY_VOICE_CHAT_TRANSCRIPTION_PHRASE_TYPE);
			}
		}

		[Token(Token = "0x17000237")]
		public List<PARTY_TRANSLATION> translations
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x211A7D8", Offset = "0x211A7D8", VA = "0x211A7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B74", Offset = "0xB30B74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x211A1EC", Offset = "0x211A1EC", VA = "0x211A1EC")]
		internal PARTY_VOICE_CHAT_TRANSCRIPTION_RECEIVED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x211A3F8", Offset = "0x211A3F8", VA = "0x211A3F8", Slot = "4")]
		internal override void Cleanup()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class PARTY_SYNTHESIZE_TEXT_TO_SPEECH_COMPLETED_STATE_CHANGE : PARTY_STATE_CHANGE
	{
		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26CAC", Offset = "0xB26CAC")]
		private readonly PARTY_STATE_CHANGE_RESULT <result>k__BackingField;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26CBC", Offset = "0xB26CBC")]
		private readonly uint <errorDetail>k__BackingField;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26CCC", Offset = "0xB26CCC")]
		private readonly PARTY_CHAT_CONTROL_HANDLE <localChatControl>k__BackingField;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26CDC", Offset = "0xB26CDC")]
		private readonly PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE <type>k__BackingField;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26CEC", Offset = "0xB26CEC")]
		private readonly string <textToSynthesize>k__BackingField;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26CFC", Offset = "0xB26CFC")]
		private readonly object <asyncIdentifier>k__BackingField;

		[Token(Token = "0x17000238")]
		public PARTY_STATE_CHANGE_RESULT result
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x211A03C", Offset = "0x211A03C", VA = "0x211A03C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B84", Offset = "0xB30B84")]
			get
			{
				return default(PARTY_STATE_CHANGE_RESULT);
			}
		}

		[Token(Token = "0x17000239")]
		public uint errorDetail
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x211A044", Offset = "0x211A044", VA = "0x211A044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30B94", Offset = "0xB30B94")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700023A")]
		public PARTY_CHAT_CONTROL_HANDLE localChatControl
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x211A04C", Offset = "0x211A04C", VA = "0x211A04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BA4", Offset = "0xB30BA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE type
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x211A054", Offset = "0x211A054", VA = "0x211A054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BB4", Offset = "0xB30BB4")]
			get
			{
				return default(PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE);
			}
		}

		[Token(Token = "0x1700023C")]
		public string textToSynthesize
		{
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x211A05C", Offset = "0x211A05C", VA = "0x211A05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BC4", Offset = "0xB30BC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public object asyncIdentifier
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x211A064", Offset = "0x211A064", VA = "0x211A064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BD4", Offset = "0xB30BD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x2119EE4", Offset = "0x2119EE4", VA = "0x2119EE4")]
		internal PARTY_SYNTHESIZE_TEXT_TO_SPEECH_COMPLETED_STATE_CHANGE(PARTY_STATE_CHANGE_UNION stateChange, IntPtr StateChangeId)
		{
		}
	}
	[Token(Token = "0x2000388")]
	public enum PARTY_STATE_CHANGE_RESULT : uint
	{
		[Token(Token = "0x4001467")]
		PARTY_STATE_CHANGE_RESULT_SUCCEEDED,
		[Token(Token = "0x4001468")]
		PARTY_STATE_CHANGE_RESULT_UNKNOWN_ERROR,
		[Token(Token = "0x4001469")]
		PARTY_STATE_CHANGE_RESULT_CANCELED_BY_TITLE,
		[Token(Token = "0x400146A")]
		PARTY_STATE_CHANGE_RESULT_INTERNET_CONNECTIVITY_ERROR,
		[Token(Token = "0x400146B")]
		PARTY_STATE_CHANGE_RESULT_PARTY_SERVICE_ERROR,
		[Token(Token = "0x400146C")]
		PARTY_STATE_CHANGE_RESULT_NO_SERVERS_AVAILABLE,
		[Token(Token = "0x400146D")]
		PARTY_STATE_CHANGE_RESULT_USER_NOT_AUTHORIZED,
		[Token(Token = "0x400146E")]
		PARTY_STATE_CHANGE_RESULT_USER_CREATE_NETWORK_THROTTLED,
		[Token(Token = "0x400146F")]
		PARTY_STATE_CHANGE_RESULT_TITLE_NOT_ENABLED_FOR_PARTY,
		[Token(Token = "0x4001470")]
		PARTY_STATE_CHANGE_RESULT_NETWORK_LIMIT_REACHED,
		[Token(Token = "0x4001471")]
		PARTY_STATE_CHANGE_RESULT_NETWORK_NO_LONGER_EXISTS,
		[Token(Token = "0x4001472")]
		PARTY_STATE_CHANGE_RESULT_NETWORK_NOT_JOINABLE,
		[Token(Token = "0x4001473")]
		PARTY_STATE_CHANGE_RESULT_VERSION_MISMATCH,
		[Token(Token = "0x4001474")]
		PARTY_STATE_CHANGE_RESULT_LEAVE_NETWORK_CALLED,
		[Token(Token = "0x4001475")]
		PARTY_STATE_CHANGE_RESULT_FAILED_TO_BIND_TO_LOCAL_UDP_SOCKET
	}
	[Token(Token = "0x2000389")]
	public enum PARTY_STATE_CHANGE_TYPE : uint
	{
		[Token(Token = "0x4001477")]
		PARTY_STATE_CHANGE_TYPE_REGIONS_CHANGED,
		[Token(Token = "0x4001478")]
		PARTY_STATE_CHANGE_TYPE_DESTROY_LOCAL_USER_COMPLETED,
		[Token(Token = "0x4001479")]
		PARTY_STATE_CHANGE_TYPE_CREATE_NEW_NETWORK_COMPLETED,
		[Token(Token = "0x400147A")]
		PARTY_STATE_CHANGE_TYPE_CONNECT_TO_NETWORK_COMPLETED,
		[Token(Token = "0x400147B")]
		PARTY_STATE_CHANGE_TYPE_AUTHENTICATE_LOCAL_USER_COMPLETED,
		[Token(Token = "0x400147C")]
		PARTY_STATE_CHANGE_TYPE_NETWORK_CONFIGURATION_MADE_AVAILABLE,
		[Token(Token = "0x400147D")]
		PARTY_STATE_CHANGE_TYPE_NETWORK_DESCRIPTOR_CHANGED,
		[Token(Token = "0x400147E")]
		PARTY_STATE_CHANGE_TYPE_LOCAL_USER_REMOVED,
		[Token(Token = "0x400147F")]
		PARTY_STATE_CHANGE_TYPE_REMOVE_LOCAL_USER_COMPLETED,
		[Token(Token = "0x4001480")]
		PARTY_STATE_CHANGE_TYPE_LOCAL_USER_KICKED,
		[Token(Token = "0x4001481")]
		PARTY_STATE_CHANGE_TYPE_CREATE_ENDPOINT_COMPLETED,
		[Token(Token = "0x4001482")]
		PARTY_STATE_CHANGE_TYPE_DESTROY_ENDPOINT_COMPLETED,
		[Token(Token = "0x4001483")]
		PARTY_STATE_CHANGE_TYPE_ENDPOINT_CREATED,
		[Token(Token = "0x4001484")]
		PARTY_STATE_CHANGE_TYPE_ENDPOINT_DESTROYED,
		[Token(Token = "0x4001485")]
		PARTY_STATE_CHANGE_TYPE_REMOTE_DEVICE_CREATED,
		[Token(Token = "0x4001486")]
		PARTY_STATE_CHANGE_TYPE_REMOTE_DEVICE_DESTROYED,
		[Token(Token = "0x4001487")]
		PARTY_STATE_CHANGE_TYPE_REMOTE_DEVICE_JOINED_NETWORK,
		[Token(Token = "0x4001488")]
		PARTY_STATE_CHANGE_TYPE_REMOTE_DEVICE_LEFT_NETWORK,
		[Token(Token = "0x4001489")]
		PARTY_STATE_CHANGE_TYPE_DEVICE_PROPERTIES_CHANGED,
		[Token(Token = "0x400148A")]
		PARTY_STATE_CHANGE_TYPE_LEAVE_NETWORK_COMPLETED,
		[Token(Token = "0x400148B")]
		PARTY_STATE_CHANGE_TYPE_NETWORK_DESTROYED,
		[Token(Token = "0x400148C")]
		PARTY_STATE_CHANGE_TYPE_ENDPOINT_MESSAGE_RECEIVED,
		[Token(Token = "0x400148D")]
		PARTY_STATE_CHANGE_TYPE_DATA_BUFFERS_RETURNED,
		[Token(Token = "0x400148E")]
		PARTY_STATE_CHANGE_TYPE_ENDPOINT_PROPERTIES_CHANGED,
		[Token(Token = "0x400148F")]
		PARTY_STATE_CHANGE_TYPE_SYNCHRONIZE_MESSAGES_BETWEEN_ENDPOINTS_COMPLETED,
		[Token(Token = "0x4001490")]
		PARTY_STATE_CHANGE_TYPE_CREATE_INVITATION_COMPLETED,
		[Token(Token = "0x4001491")]
		PARTY_STATE_CHANGE_TYPE_REVOKE_INVITATION_COMPLETED,
		[Token(Token = "0x4001492")]
		PARTY_STATE_CHANGE_TYPE_INVITATION_CREATED,
		[Token(Token = "0x4001493")]
		PARTY_STATE_CHANGE_TYPE_INVITATION_DESTROYED,
		[Token(Token = "0x4001494")]
		PARTY_STATE_CHANGE_TYPE_NETWORK_PROPERTIES_CHANGED,
		[Token(Token = "0x4001495")]
		PARTY_STATE_CHANGE_TYPE_KICK_DEVICE_COMPLETED,
		[Token(Token = "0x4001496")]
		PARTY_STATE_CHANGE_TYPE_KICK_USER_COMPLETED,
		[Token(Token = "0x4001497")]
		PARTY_STATE_CHANGE_TYPE_CREATE_CHAT_CONTROL_COMPLETED,
		[Token(Token = "0x4001498")]
		PARTY_STATE_CHANGE_TYPE_DESTROY_CHAT_CONTROL_COMPLETED,
		[Token(Token = "0x4001499")]
		PARTY_STATE_CHANGE_TYPE_CHAT_CONTROL_CREATED,
		[Token(Token = "0x400149A")]
		PARTY_STATE_CHANGE_TYPE_CHAT_CONTROL_DESTROYED,
		[Token(Token = "0x400149B")]
		PARTY_STATE_CHANGE_TYPE_SET_CHAT_AUDIO_ENCODER_BITRATE_COMPLETED,
		[Token(Token = "0x400149C")]
		PARTY_STATE_CHANGE_TYPE_CHAT_TEXT_RECEIVED,
		[Token(Token = "0x400149D")]
		PARTY_STATE_CHANGE_TYPE_VOICE_CHAT_TRANSCRIPTION_RECEIVED,
		[Token(Token = "0x400149E")]
		PARTY_STATE_CHANGE_TYPE_SET_CHAT_AUDIO_INPUT_COMPLETED,
		[Token(Token = "0x400149F")]
		PARTY_STATE_CHANGE_TYPE_SET_CHAT_AUDIO_OUTPUT_COMPLETED,
		[Token(Token = "0x40014A0")]
		PARTY_STATE_CHANGE_TYPE_LOCAL_CHAT_AUDIO_INPUT_CHANGED,
		[Token(Token = "0x40014A1")]
		PARTY_STATE_CHANGE_TYPE_LOCAL_CHAT_AUDIO_OUTPUT_CHANGED,
		[Token(Token = "0x40014A2")]
		PARTY_STATE_CHANGE_TYPE_SET_TEXT_TO_SPEECH_PROFILE_COMPLETED,
		[Token(Token = "0x40014A3")]
		PARTY_STATE_CHANGE_TYPE_SYNTHESIZE_TEXT_TO_SPEECH_COMPLETED,
		[Token(Token = "0x40014A4")]
		PARTY_STATE_CHANGE_TYPE_SET_LANGUAGE_COMPLETED,
		[Token(Token = "0x40014A5")]
		PARTY_STATE_CHANGE_TYPE_SET_TRANSCRIPTION_OPTIONS_COMPLETED,
		[Token(Token = "0x40014A6")]
		PARTY_STATE_CHANGE_TYPE_SET_TEXT_CHAT_OPTIONS_COMPLETED,
		[Token(Token = "0x40014A7")]
		PARTY_STATE_CHANGE_TYPE_CHAT_CONTROL_PROPERTIES_CHANGED,
		[Token(Token = "0x40014A8")]
		PARTY_STATE_CHANGE_TYPE_CHAT_CONTROL_JOINED_NETWORK,
		[Token(Token = "0x40014A9")]
		PARTY_STATE_CHANGE_TYPE_CHAT_CONTROL_LEFT_NETWORK,
		[Token(Token = "0x40014AA")]
		PARTY_STATE_CHANGE_TYPE_CONNECT_CHAT_CONTROL_COMPLETED,
		[Token(Token = "0x40014AB")]
		PARTY_STATE_CHANGE_TYPE_DISCONNECT_CHAT_CONTROL_COMPLETED,
		[Token(Token = "0x40014AC")]
		PARTY_STATE_CHANGE_TYPE_POPULATE_AVAILABLE_TEXT_TO_SPEECH_PROFILES_COMPLETED,
		[Token(Token = "0x40014AD")]
		PARTY_STATE_CHANGE_TYPE_CONFIGURE_AUDIO_MANIPULATION_VOICE_STREAM_COMPLETED,
		[Token(Token = "0x40014AE")]
		PARTY_STATE_CHANGE_TYPE_CONFIGURE_AUDIO_MANIPULATION_CAPTURE_STREAM_COMPLETED,
		[Token(Token = "0x40014AF")]
		PARTY_STATE_CHANGE_TYPE_CONFIGURE_AUDIO_MANIPULATION_RENDER_STREAM_COMPLETED
	}
	[Token(Token = "0x200038A")]
	public enum PARTY_SYNCHRONIZE_MESSAGES_BETWEEN_ENDPOINTS_OPTIONS : uint
	{
		[Token(Token = "0x40014B1")]
		PARTY_SYNCHRONIZE_MESSAGES_BETWEEN_ENDPOINTS_OPTIONS_NONE,
		[Token(Token = "0x40014B2")]
		PARTY_SYNCHRONIZE_MESSAGES_BETWEEN_ENDPOINTS_OPTIONS_SYNCHRONIZE_MESSAGES_WITH_SHARED_PROPERTIES
	}
	[Token(Token = "0x200038B")]
	public enum PARTY_THREAD_ID : uint
	{
		[Token(Token = "0x40014B4")]
		PARTY_THREAD_ID_AUDIO,
		[Token(Token = "0x40014B5")]
		PARTY_THREAD_ID_NETWORKING
	}
	[Token(Token = "0x200038C")]
	public enum PARTY_VOICE_CHAT_TRANSCRIPTION_PHRASE_TYPE : uint
	{
		[Token(Token = "0x40014B7")]
		PARTY_VOICE_CHAT_TRANSCRIPTION_PHRASE_TYPE_HYPOTHESIS,
		[Token(Token = "0x40014B8")]
		PARTY_VOICE_CHAT_TRANSCRIPTION_PHRASE_TYPE_FINAL
	}
	[Token(Token = "0x200038D")]
	public enum PARTY_CANCEL_MESSAGES_FILTER_EXPRESSION : uint
	{
		[Token(Token = "0x40014BA")]
		PARTY_CANCEL_MESSAGES_FILTER_EXPRESSION_NONE,
		[Token(Token = "0x40014BB")]
		PARTY_CANCEL_MESSAGES_FILTER_EXPRESSION_IDENTITY_AND_MASK_EQUALS_MATCH_VALUE,
		[Token(Token = "0x40014BC")]
		PARTY_CANCEL_MESSAGES_FILTER_EXPRESSION_IDENTITY_AND_MASK_DOES_NOT_EQUAL_MATCH_VALUE
	}
	[Token(Token = "0x200038E")]
	public class PARTY_ENDPOINT_HANDLE
	{
		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26D0C", Offset = "0xB26D0C")]
		private PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE <InteropHandle>k__BackingField;

		[Token(Token = "0x1700023E")]
		internal PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE InteropHandle
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x2115C4C", Offset = "0x2115C4C", VA = "0x2115C4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BE4", Offset = "0xB30BE4")]
			get
			{
				return default(PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE);
			}
			[Token(Token = "0x6001100")]
			[Address(RVA = "0x2115C54", Offset = "0x2115C54", VA = "0x2115C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30BF4", Offset = "0xB30BF4")]
			set
			{
			}
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x2114BDC", Offset = "0x2114BDC", VA = "0x2114BDC")]
		internal PARTY_ENDPOINT_HANDLE(PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE interopHandle)
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x2115BA4", Offset = "0x2115BA4", VA = "0x2115BA4")]
		internal static uint WrapAndReturnError(uint error, PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE interopHandle, [Out] PARTY_ENDPOINT_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x2115C44", Offset = "0x2115C44", VA = "0x2115C44")]
		internal void ClearInteropHandle()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public enum PARTY_ENDPOINT_STATISTIC : uint
	{
		[Token(Token = "0x40014BF")]
		PARTY_ENDPOINT_STATISTIC_CURRENTLY_QUEUED_SEND_MESSAGES,
		[Token(Token = "0x40014C0")]
		PARTY_ENDPOINT_STATISTIC_CURRENTLY_QUEUED_SEND_MESSAGE_BYTES,
		[Token(Token = "0x40014C1")]
		PARTY_ENDPOINT_STATISTIC_CURRENTLY_ACTIVE_SEND_MESSAGES,
		[Token(Token = "0x40014C2")]
		PARTY_ENDPOINT_STATISTIC_CURRENTLY_ACTIVE_SEND_MESSAGE_BYTES,
		[Token(Token = "0x40014C3")]
		PARTY_ENDPOINT_STATISTIC_TIMED_OUT_SEND_MESSAGES,
		[Token(Token = "0x40014C4")]
		PARTY_ENDPOINT_STATISTIC_TIMED_OUT_SEND_MESSAGE_BYTES,
		[Token(Token = "0x40014C5")]
		PARTY_ENDPOINT_STATISTIC_CANCELED_SEND_MESSAGES,
		[Token(Token = "0x40014C6")]
		PARTY_ENDPOINT_STATISTIC_CANCELED_SEND_MESSAGE_BYTES,
		[Token(Token = "0x40014C7")]
		PARTY_ENDPOINT_STATISTIC_AVERAGE_DEVICE_ROUND_TRIP_LATENCY_IN_MILLISECONDS
	}
	[Token(Token = "0x2000390")]
	public enum PARTY_SEND_MESSAGE_OPTIONS : uint
	{
		[Token(Token = "0x40014C9")]
		PARTY_SEND_MESSAGE_OPTIONS_DEFAULT = 0u,
		[Token(Token = "0x40014CA")]
		PARTY_SEND_MESSAGE_OPTIONS_GUARANTEED_DELIVERY = 1u,
		[Token(Token = "0x40014CB")]
		PARTY_SEND_MESSAGE_OPTIONS_BEST_EFFORT_DELIVERY = 0u,
		[Token(Token = "0x40014CC")]
		PARTY_SEND_MESSAGE_OPTIONS_SEQUENTIAL_DELIVERY = 2u,
		[Token(Token = "0x40014CD")]
		PARTY_SEND_MESSAGE_OPTIONS_NONSEQUENTIAL_DELIVERY = 0u,
		[Token(Token = "0x40014CE")]
		PARTY_SEND_MESSAGE_OPTIONS_COALESCE_OPPORTUNISTICALLY = 0u,
		[Token(Token = "0x40014CF")]
		PARTY_SEND_MESSAGE_OPTIONS_ALWAYS_COALESCE_UNTIL_FLUSHED = 8u,
		[Token(Token = "0x40014D0")]
		PARTY_SEND_MESSAGE_OPTIONS_REQUIRE_TIMELY_ACKNOWLEDGEMENT = 0u,
		[Token(Token = "0x40014D1")]
		PARTY_SEND_MESSAGE_OPTIONS_ALLOW_LAZY_ACKNOWLEDGEMENT = 16u
	}
	[Token(Token = "0x2000391")]
	public class PARTY_SEND_MESSAGE_QUEUING_CONFIGURATION
	{
		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26D1C", Offset = "0xB26D1C")]
		private sbyte <Priority>k__BackingField;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26D2C", Offset = "0xB26D2C")]
		private uint <IdentityForCancelFilters>k__BackingField;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26D3C", Offset = "0xB26D3C")]
		private uint <TimeoutInMilliseconds>k__BackingField;

		[Token(Token = "0x1700023F")]
		public sbyte Priority
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0x2118164", Offset = "0x2118164", VA = "0x2118164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C04", Offset = "0xB30C04")]
			get
			{
				return default(sbyte);
			}
			[Token(Token = "0x6001104")]
			[Address(RVA = "0x211816C", Offset = "0x211816C", VA = "0x211816C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C14", Offset = "0xB30C14")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public uint IdentityForCancelFilters
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0x2118174", Offset = "0x2118174", VA = "0x2118174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C24", Offset = "0xB30C24")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001106")]
			[Address(RVA = "0x211817C", Offset = "0x211817C", VA = "0x211817C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C34", Offset = "0xB30C34")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public uint TimeoutInMilliseconds
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x2118184", Offset = "0x2118184", VA = "0x2118184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C44", Offset = "0xB30C44")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x211818C", Offset = "0x211818C", VA = "0x211818C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C54", Offset = "0xB30C54")]
			set
			{
			}
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x211811C", Offset = "0x211811C", VA = "0x211811C")]
		internal PARTY_SEND_MESSAGE_QUEUING_CONFIGURATION(PartyCSharpSDK.Interop.PARTY_SEND_MESSAGE_QUEUING_CONFIGURATION interopStruct)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x211815C", Offset = "0x211815C", VA = "0x211815C")]
		public PARTY_SEND_MESSAGE_QUEUING_CONFIGURATION()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public static class Converters
	{
		[Token(Token = "0x6001109")]
		[Address(RVA = "0x220504C", Offset = "0x220504C", VA = "0x220504C")]
		public static IntPtr OffsetPF(this IntPtr ptr, long that)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x2205094", Offset = "0x2205094", VA = "0x2205094")]
		public static byte[] StringToNullTerminatedUTF8ByteArray(string str)
		{
			return null;
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x22051BC", Offset = "0x22051BC", VA = "0x22051BC")]
		public static byte[] StringToNullTerminatedUTF8ByteArray(string str, int requiredByteArrayLength)
		{
			return null;
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x220509C", Offset = "0x220509C", VA = "0x220509C")]
		private static byte[] StringToNullTerminatedUTF8ByteArrayInternal(string str, int requiredByteArrayLength)
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x22051C0", Offset = "0x22051C0", VA = "0x22051C0")]
		public unsafe static void StringToNullTerminatedUTF8FixedPointer(string str, byte* bytePointer, int length)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x220526C", Offset = "0x220526C", VA = "0x220526C")]
		public unsafe static string BytePointerToString(byte* bytePointer, int length)
		{
			return null;
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x2205330", Offset = "0x2205330", VA = "0x2205330")]
		public static string ByteArrayToString(byte[] arr)
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x22053A8", Offset = "0x22053A8", VA = "0x22053A8")]
		public static string ByteArrayToString(byte[] arr, int index, int count)
		{
			return null;
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x220544C", Offset = "0x220544C", VA = "0x220544C")]
		public static string PtrToStringUTF8(IntPtr rawPtr)
		{
			return null;
		}

		[Token(Token = "0x6001112")]
		public static ClassType PtrToClass<ClassType, InteropStructType>(IntPtr rawPtr, Func<InteropStructType, ClassType> ctor) where ClassType : class where InteropStructType : struct
		{
			return null;
		}

		[Token(Token = "0x6001113")]
		public static ClassType[] PtrToClassArray<ClassType, InteropStructType>(IntPtr rawPtr, SizeT count, Func<InteropStructType, ClassType> ctor)
		{
			return null;
		}

		[Token(Token = "0x6001114")]
		public static ClassType[] PtrToClassArray<ClassType, InteropStructType>(IntPtr rawPtr, uint count, Func<InteropStructType, ClassType> ctor)
		{
			return null;
		}

		[Token(Token = "0x6001115")]
		public static List<ClassType> PtrToClassListFromPool<ClassType, InteropStructType>(IntPtr rawPtr, uint count, ObjectPool objectPool)
		{
			return null;
		}

		[Token(Token = "0x6001116")]
		public static IntPtr ClassArrayToPtr<ClassType, InteropStructType>(ClassType[] inputTypes, Func<ClassType, DisposableCollection, InteropStructType> converter, DisposableCollection disposableCollection, [Out] SizeT arrayCount)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001117")]
		public static InteropStructType[] ConvertArrayToFixedLength<ClassType, InteropStructType>(ClassType[] classes, int length, Func<ClassType, InteropStructType> ctor)
		{
			return null;
		}
	}
	[Token(Token = "0x2000393")]
	public class DisposableBuffer : IDisposable
	{
		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26D4C", Offset = "0xB26D4C")]
		private IntPtr <IntPtr>k__BackingField;

		[Token(Token = "0x17000242")]
		public IntPtr IntPtr
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x2211DC0", Offset = "0x2211DC0", VA = "0x2211DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C74", Offset = "0xB30C74")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x600111E")]
			[Address(RVA = "0x2211DC8", Offset = "0x2211DC8", VA = "0x2211DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C84", Offset = "0xB30C84")]
			private set
			{
			}
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x2211B40", Offset = "0x2211B40", VA = "0x2211B40")]
		public DisposableBuffer()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x2211BC8", Offset = "0x2211BC8", VA = "0x2211BC8")]
		public DisposableBuffer(int size)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x2211C4C", Offset = "0x2211C4C", VA = "0x2211C4C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x2211CC4", Offset = "0x2211CC4", VA = "0x2211CC4")]
		private void Dispose(bool isDisposing)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x2211D54", Offset = "0x2211D54", VA = "0x2211D54", Slot = "1")]
		~DisposableBuffer()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class DisposableCollection : IDisposable
	{
		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<IDisposable> disposables;

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x2211DD0", Offset = "0x2211DD0", VA = "0x2211DD0")]
		public DisposableCollection()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x2211E5C", Offset = "0x2211E5C", VA = "0x2211E5C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x2211ED4", Offset = "0x2211ED4", VA = "0x2211ED4")]
		private void Dispose(bool isDisposing)
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x2212030", Offset = "0x2212030", VA = "0x2212030", Slot = "1")]
		~DisposableCollection()
		{
		}

		[Token(Token = "0x6001123")]
		public T Add<T>(T disposable) where T : IDisposable
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000395")]
	public static class MarshalHelpers
	{
		[Token(Token = "0x2000396")]
		public delegate uint GetContextFunc<InteropHandle>(InteropHandle handle, [Out] IntPtr context);

		[Token(Token = "0x2000397")]
		public delegate uint GetHandlesFun<InputInteropHandle>(InputInteropHandle input, [Out] uint count, [Out] IntPtr handles);

		[Token(Token = "0x6001124")]
		public static uint GetCustomContext<InteropHandle>(GetContextFunc<InteropHandle> getContextFunc, InteropHandle handle, [Out] object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x6001125")]
		public static uint SetCustomContext<InteropHandle>(GetContextFunc<InteropHandle> getContextFunc, Func<InteropHandle, IntPtr, uint> setContextFunc, InteropHandle handle, object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x6001126")]
		public static uint GetArrayOfObjects<InputInteropHandle, IntermediaObject, OutputObject>(GetHandlesFun<InputInteropHandle> getHandlesFun, Func<IntermediaObject, OutputObject> ctorFun, InputInteropHandle inputHandle, [Out] OutputObject[] outputHandles)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000398")]
	public class ObjectPool
	{
		[Token(Token = "0x2000399")]
		internal class Pool
		{
			[Token(Token = "0x40014DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int limit;

			[Token(Token = "0x40014DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal ConstructorInfo ctor;

			[Token(Token = "0x40014DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal List<object> objects;

			[Token(Token = "0x6001137")]
			[Address(RVA = "0x1FFE170", Offset = "0x1FFE170", VA = "0x1FFE170")]
			internal Pool(int limit, ConstructorInfo ctor)
			{
			}
		}

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object[] ctorParamList0Element;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static object[] ctorParamList1Element;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static object[] ctorParamList2Element;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Type, Pool> pools;

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x2530DEC", Offset = "0x2530DEC", VA = "0x2530DEC")]
		static ObjectPool()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x2530EB0", Offset = "0x2530EB0", VA = "0x2530EB0")]
		public ObjectPool()
		{
		}

		[Token(Token = "0x6001131")]
		public void AddEntry<T>(int maxLimit, Type[] ctorTypes)
		{
		}

		[Token(Token = "0x6001132")]
		public T Retrieve<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001133")]
		public T Retrieve<T>(object param)
		{
			return (T)null;
		}

		[Token(Token = "0x6001134")]
		public T Retrieve<T>(object param0, object param1)
		{
			return (T)null;
		}

		[Token(Token = "0x6001135")]
		public T Retrieve<T>(object[] ctorParams)
		{
			return (T)null;
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x2530F3C", Offset = "0x2530F3C", VA = "0x2530F3C")]
		public void Return(object o)
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class PartyConstants
	{
		[Token(Token = "0x40014DE")]
		public const int c_maxNetworkConfigurationMaxDeviceCount = 32;

		[Token(Token = "0x40014DF")]
		public const int c_maxNetworkConfigurationMaxEndpointsPerDeviceCount = 32;

		[Token(Token = "0x40014E0")]
		public const int c_maxLocalUsersPerDeviceCount = 8;

		[Token(Token = "0x40014E1")]
		public const int c_opaqueConnectionInformationByteCount = 300;

		[Token(Token = "0x40014E2")]
		public const int c_maxInvitationIdentifierStringLength = 127;

		[Token(Token = "0x40014E3")]
		public const int c_maxInvitationEntityIdCount = 1024;

		[Token(Token = "0x40014E4")]
		public const int c_maxEntityIdStringLength = 20;

		[Token(Token = "0x40014E5")]
		public const int c_networkIdentifierStringLength = 36;

		[Token(Token = "0x40014E6")]
		public const int c_maxRegionNameStringLength = 19;

		[Token(Token = "0x40014E7")]
		public const int c_maxSerializedNetworkDescriptorStringLength = 448;

		[Token(Token = "0x40014E8")]
		public const int c_maxAudioDeviceIdentifierStringLength = 999;

		[Token(Token = "0x40014E9")]
		public const int c_maxLanguageCodeStringLength = 84;

		[Token(Token = "0x40014EA")]
		public const int c_maxChatTextMessageStringLength = 1023;

		[Token(Token = "0x40014EB")]
		public const int c_maxChatTranscriptionMessageStringLength = 1023;

		[Token(Token = "0x40014EC")]
		public const int c_maxTextToSpeechProfileIdentifierStringLength = 255;

		[Token(Token = "0x40014ED")]
		public const int c_maxTextToSpeechProfileNameStringLength = 127;

		[Token(Token = "0x40014EE")]
		public const int c_maxTextToSpeechInputStringLength = 1023;

		[Token(Token = "0x40014EF")]
		public const ulong c_anyProcessor = ulong.MaxValue;

		[Token(Token = "0x40014F0")]
		public const short c_minSendMessageQueuingPriority = -5;

		[Token(Token = "0x40014F1")]
		public const short c_chatSendMessageQueuingPriority = -3;

		[Token(Token = "0x40014F2")]
		public const short c_defaultSendMessageQueuingPriority = 0;

		[Token(Token = "0x40014F3")]
		public const short c_maxSendMessageQueuingPriority = 5;

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x2014934", Offset = "0x2014934", VA = "0x2014934")]
		public PartyConstants()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class PartyError
	{
		[Token(Token = "0x40014F4")]
		public const uint Success = 0u;

		[Token(Token = "0x40014F5")]
		public const uint InvalidArg = 4u;

		[Token(Token = "0x40014F6")]
		public const uint UnsupportedPartyOption = 4305u;

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x201493C", Offset = "0x201493C", VA = "0x201493C")]
		public static bool SUCCEEDED(uint error)
		{
			return default(bool);
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x2014948", Offset = "0x2014948", VA = "0x2014948")]
		public static bool FAILED(uint error)
		{
			return default(bool);
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x2014954", Offset = "0x2014954", VA = "0x2014954")]
		public PartyError()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public struct SizeT
	{
		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly UIntPtr value;

		[Token(Token = "0x17000243")]
		public bool IsZero
		{
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x24A28BC", Offset = "0x24A28BC", VA = "0x24A28BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x24A2930", Offset = "0x24A2930", VA = "0x24A2930")]
		public SizeT(int length)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x24A29C8", Offset = "0x24A29C8", VA = "0x24A29C8")]
		public SizeT(uint length)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x24A2A60", Offset = "0x24A2A60", VA = "0x24A2A60")]
		public uint ToUInt32()
		{
			return default(uint);
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x24A2AEC", Offset = "0x24A2AEC", VA = "0x24A2AEC")]
		public int ToInt32()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200039D")]
	public struct UTF8StringPtr
	{
		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr pointer;

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x264005C", Offset = "0x264005C", VA = "0x264005C")]
		public UTF8StringPtr(string str, DisposableCollection disposableCollection)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x264017C", Offset = "0x264017C", VA = "0x264017C")]
		public string GetString()
		{
			return null;
		}
	}
	[Token(Token = "0x200039E")]
	public class PARTY_NETWORK_CONFIGURATION
	{
		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26D5C", Offset = "0xB26D5C")]
		private uint <MaxUserCount>k__BackingField;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26D6C", Offset = "0xB26D6C")]
		private uint <MaxDeviceCount>k__BackingField;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26D7C", Offset = "0xB26D7C")]
		private uint <MaxUsersPerDeviceCount>k__BackingField;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26D8C", Offset = "0xB26D8C")]
		private uint <MaxDevicesPerUserCount>k__BackingField;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26D9C", Offset = "0xB26D9C")]
		private uint <MaxEndpointsPerDeviceCount>k__BackingField;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26DAC", Offset = "0xB26DAC")]
		private PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS <DirectPeerConnectivityOptions>k__BackingField;

		[Token(Token = "0x17000244")]
		public uint MaxUserCount
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x211720C", Offset = "0x211720C", VA = "0x211720C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30C94", Offset = "0xB30C94")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001146")]
			[Address(RVA = "0x2117214", Offset = "0x2117214", VA = "0x2117214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CA4", Offset = "0xB30CA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public uint MaxDeviceCount
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x211721C", Offset = "0x211721C", VA = "0x211721C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CB4", Offset = "0xB30CB4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x2117224", Offset = "0x2117224", VA = "0x2117224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CC4", Offset = "0xB30CC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public uint MaxUsersPerDeviceCount
		{
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x211722C", Offset = "0x211722C", VA = "0x211722C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CD4", Offset = "0xB30CD4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x2117234", Offset = "0x2117234", VA = "0x2117234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CE4", Offset = "0xB30CE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public uint MaxDevicesPerUserCount
		{
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x211723C", Offset = "0x211723C", VA = "0x211723C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30CF4", Offset = "0xB30CF4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x2117244", Offset = "0x2117244", VA = "0x2117244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D04", Offset = "0xB30D04")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public uint MaxEndpointsPerDeviceCount
		{
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x211724C", Offset = "0x211724C", VA = "0x211724C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D14", Offset = "0xB30D14")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x2117254", Offset = "0x2117254", VA = "0x2117254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D24", Offset = "0xB30D24")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS DirectPeerConnectivityOptions
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x211725C", Offset = "0x211725C", VA = "0x211725C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D34", Offset = "0xB30D34")]
			get
			{
				return default(PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS);
			}
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x2117264", Offset = "0x2117264", VA = "0x2117264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D44", Offset = "0xB30D44")]
			set
			{
			}
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x2115154", Offset = "0x2115154", VA = "0x2115154")]
		internal PARTY_NETWORK_CONFIGURATION(PartyCSharpSDK.Interop.PARTY_NETWORK_CONFIGURATION interopStruct)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x2117204", Offset = "0x2117204", VA = "0x2117204")]
		public PARTY_NETWORK_CONFIGURATION()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class PARTY_NETWORK_DESCRIPTOR
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26DBC", Offset = "0xB26DBC")]
		private readonly string <NetworkIdentifier>k__BackingField;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26DCC", Offset = "0xB26DCC")]
		private readonly string <RegionName>k__BackingField;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26DDC", Offset = "0xB26DDC")]
		private readonly byte[] <OpaqueConnectionInformation>k__BackingField;

		[Token(Token = "0x1700024A")]
		public string NetworkIdentifier
		{
			[Token(Token = "0x6001152")]
			[Address(RVA = "0x2117540", Offset = "0x2117540", VA = "0x2117540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D54", Offset = "0xB30D54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		public string RegionName
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x2117548", Offset = "0x2117548", VA = "0x2117548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D64", Offset = "0xB30D64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		public byte[] OpaqueConnectionInformation
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x2117550", Offset = "0x2117550", VA = "0x2117550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D74", Offset = "0xB30D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x211475C", Offset = "0x211475C", VA = "0x211475C")]
		internal PARTY_NETWORK_DESCRIPTOR(PartyCSharpSDK.Interop.PARTY_NETWORK_DESCRIPTOR interopStruct)
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class PARTY_NETWORK_HANDLE
	{
		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB26DEC", Offset = "0xB26DEC")]
		private PartyCSharpSDK.Interop.PARTY_NETWORK_HANDLE <InteropHandle>k__BackingField;

		[Token(Token = "0x1700024D")]
		internal PartyCSharpSDK.Interop.PARTY_NETWORK_HANDLE InteropHandle
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x211782C", Offset = "0x211782C", VA = "0x211782C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D84", Offset = "0xB30D84")]
			get
			{
				return default(PartyCSharpSDK.Interop.PARTY_NETWORK_HANDLE);
			}
			[Token(Token = "0x6001159")]
			[Address(RVA = "0x2117834", Offset = "0x2117834", VA = "0x2117834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30D94", Offset = "0xB30D94")]
			set
			{
			}
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x2113BC8", Offset = "0x2113BC8", VA = "0x2113BC8")]
		internal PARTY_NETWORK_HANDLE(PartyCSharpSDK.Interop.PARTY_NETWORK_HANDLE interopHandle)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x2117784", Offset = "0x2117784", VA = "0x2117784")]
		internal static uint WrapAndReturnError(uint error, PartyCSharpSDK.Interop.PARTY_NETWORK_HANDLE interopHandle, [Out] PARTY_NETWORK_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x2117824", Offset = "0x2117824", VA = "0x2117824")]
		internal void ClearInteropHandle()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public enum PARTY_NETWORK_STATISTIC : uint
	{
		[Token(Token = "0x4001504")]
		PARTY_NETWORK_STATISTIC_AVERAGE_RELAY_SERVER_ROUND_TRIP_LATENCY_IN_MILLISECONDS,
		[Token(Token = "0x4001505")]
		PARTY_NETWORK_STATISTIC_SENT_PROTOCOL_PACKETS,
		[Token(Token = "0x4001506")]
		PARTY_NETWORK_STATISTIC_SENT_PROTOCOL_BYTES,
		[Token(Token = "0x4001507")]
		PARTY_NETWORK_STATISTIC_RETRIED_PROTOCOL_PACKETS,
		[Token(Token = "0x4001508")]
		PARTY_NETWORK_STATISTIC_RETRIED_PROTOCOL_BYTES,
		[Token(Token = "0x4001509")]
		PARTY_NETWORK_STATISTIC_DROPPED_PROTOCOL_PACKETS,
		[Token(Token = "0x400150A")]
		PARTY_NETWORK_STATISTIC_RECEIVED_PROTOCOL_PACKETS,
		[Token(Token = "0x400150B")]
		PARTY_NETWORK_STATISTIC_RECEIVED_PROTOCOL_BYTES,
		[Token(Token = "0x400150C")]
		PARTY_NETWORK_STATISTIC_CURRENTLY_QUEUED_SEND_MESSAGES,
		[Token(Token = "0x400150D")]
		PARTY_NETWORK_STATISTIC_CURRENTLY_QUEUED_SEND_MESSAGE_BYTES,
		[Token(Token = "0x400150E")]
		PARTY_NETWORK_STATISTIC_CURRENTLY_ACTIVE_SEND_MESSAGES,
		[Token(Token = "0x400150F")]
		PARTY_NETWORK_STATISTIC_CURRENTLY_ACTIVE_SEND_MESSAGE_BYTES,
		[Token(Token = "0x4001510")]
		PARTY_NETWORK_STATISTIC_TIMED_OUT_SEND_MESSAGES,
		[Token(Token = "0x4001511")]
		PARTY_NETWORK_STATISTIC_TIMED_OUT_SEND_MESSAGE_BYTES,
		[Token(Token = "0x4001512")]
		PARTY_NETWORK_STATISTIC_CANCELED_SEND_MESSAGES,
		[Token(Token = "0x4001513")]
		PARTY_NETWORK_STATISTIC_CANCELED_SEND_MESSAGE_BYTES
	}
	[Token(Token = "0x20003A2")]
	public class SDK
	{
		[Serializable]
		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2070C", Offset = "0xB2070C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PARTY_REGION, DisposableCollection, PartyCSharpSDK.Interop.PARTY_REGION> <>9__5_0;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<PartyCSharpSDK.Interop.PARTY_REGION, PARTY_REGION> <>9__11_0;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<PartyCSharpSDK.Interop.PARTY_LOCAL_USER_HANDLE, PARTY_LOCAL_USER_HANDLE> <>9__13_0;

			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<PartyCSharpSDK.Interop.PARTY_NETWORK_HANDLE, PARTY_NETWORK_HANDLE> <>9__18_0;

			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION, DisposableCollection, PartyCSharpSDK.Interop.PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION> <>9__19_0;

			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE, PARTY_CHAT_CONTROL_HANDLE> <>9__23_0;

			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE, PARTY_CHAT_CONTROL_HANDLE> <>9__28_0;

			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<PartyCSharpSDK.Interop.PARTY_DEVICE_HANDLE, PARTY_DEVICE_HANDLE> <>9__32_0;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE, PARTY_ENDPOINT_HANDLE> <>9__33_0;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<PartyCSharpSDK.Interop.PARTY_INVITATION_HANDLE, PARTY_INVITATION_HANDLE> <>9__34_0;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<PartyCSharpSDK.Interop.PARTY_LOCAL_USER_HANDLE, PARTY_LOCAL_USER_HANDLE> <>9__35_0;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<PartyCSharpSDK.Interop.PARTY_NETWORK_CONFIGURATION, PARTY_NETWORK_CONFIGURATION> <>9__36_0;

			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<PartyCSharpSDK.Interop.PARTY_INVITATION_CONFIGURATION, PARTY_INVITATION_CONFIGURATION> <>9__48_0;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static Func<string, DisposableCollection, UTF8StringPtr> <>9__51_0;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static Func<byte[], DisposableCollection, PARTY_DATA_BUFFER> <>9__51_1;

			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static Func<PARTY_ENDPOINT_HANDLE, DisposableCollection, PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE> <>9__54_0;

			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static Func<PARTY_ENDPOINT_HANDLE, DisposableCollection, PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE> <>9__55_0;

			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static Func<PARTY_ENDPOINT_HANDLE, DisposableCollection, PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE> <>9__56_0;

			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static Func<PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE, PARTY_CHAT_CONTROL_HANDLE> <>9__70_0;

			[Token(Token = "0x4001529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static Func<PARTY_CHAT_CONTROL_HANDLE, DisposableCollection, PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE> <>9__71_0;

			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static Func<PartyCSharpSDK.Interop.PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE, PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE> <>9__101_0;

			[Token(Token = "0x400152B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static Func<PartyCSharpSDK.Interop.PARTY_NETWORK_HANDLE, PARTY_NETWORK_HANDLE> <>9__112_0;

			[Token(Token = "0x60011CD")]
			[Address(RVA = "0x200ABC8", Offset = "0x200ABC8", VA = "0x200ABC8")]
			public <>c()
			{
			}

			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x200ABD0", Offset = "0x200ABD0", VA = "0x200ABD0")]
			internal PartyCSharpSDK.Interop.PARTY_REGION <PartyCreateNewNetwork>b__5_0(PARTY_REGION x, DisposableCollection xc)
			{
				return default(PartyCSharpSDK.Interop.PARTY_REGION);
			}

			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x200ABE4", Offset = "0x200ABE4", VA = "0x200ABE4")]
			internal PARTY_REGION <PartyGetRegions>b__11_0(PartyCSharpSDK.Interop.PARTY_REGION s)
			{
				return null;
			}

			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x200AC64", Offset = "0x200AC64", VA = "0x200AC64")]
			internal PARTY_LOCAL_USER_HANDLE <PartyGetLocalUsers>b__13_0(PartyCSharpSDK.Interop.PARTY_LOCAL_USER_HANDLE s)
			{
				return null;
			}

			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x200ACCC", Offset = "0x200ACCC", VA = "0x200ACCC")]
			internal PARTY_NETWORK_HANDLE <PartyGetNetworks>b__18_0(PartyCSharpSDK.Interop.PARTY_NETWORK_HANDLE s)
			{
				return null;
			}

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x200AD34", Offset = "0x200AD34", VA = "0x200AD34")]
			internal PartyCSharpSDK.Interop.PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION <PartySetOption>b__19_0(PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION x, DisposableCollection d)
			{
				return default(PartyCSharpSDK.Interop.PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION);
			}

			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x200AD60", Offset = "0x200AD60", VA = "0x200AD60")]
			internal PARTY_CHAT_CONTROL_HANDLE <PartyGetChatControls>b__23_0(PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE s)
			{
				return null;
			}

			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x200ADC8", Offset = "0x200ADC8", VA = "0x200ADC8")]
			internal PARTY_CHAT_CONTROL_HANDLE <PartyNetworkGetChatControls>b__28_0(PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE s)
			{
				return null;
			}

			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x200AE30", Offset = "0x200AE30", VA = "0x200AE30")]
			internal PARTY_DEVICE_HANDLE <PartyNetworkGetDevices>b__32_0(PartyCSharpSDK.Interop.PARTY_DEVICE_HANDLE s)
			{
				return null;
			}

			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x200AE98", Offset = "0x200AE98", VA = "0x200AE98")]
			internal PARTY_ENDPOINT_HANDLE <PartyNetworkGetEndpoints>b__33_0(PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE s)
			{
				return null;
			}

			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x200AF00", Offset = "0x200AF00", VA = "0x200AF00")]
			internal PARTY_INVITATION_HANDLE <PartyNetworkGetInvitations>b__34_0(PartyCSharpSDK.Interop.PARTY_INVITATION_HANDLE s)
			{
				return null;
			}

			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x200AF68", Offset = "0x200AF68", VA = "0x200AF68")]
			internal PARTY_LOCAL_USER_HANDLE <PartyNetworkGetLocalUsers>b__35_0(PartyCSharpSDK.Interop.PARTY_LOCAL_USER_HANDLE s)
			{
				return null;
			}

			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x200AFD0", Offset = "0x200AFD0", VA = "0x200AFD0")]
			internal PARTY_NETWORK_CONFIGURATION <PartyNetworkGetNetworkConfiguration>b__36_0(PartyCSharpSDK.Interop.PARTY_NETWORK_CONFIGURATION s)
			{
				return null;
			}

			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x200B050", Offset = "0x200B050", VA = "0x200B050")]
			internal PARTY_INVITATION_CONFIGURATION <PartyInvitationGetInvitationConfiguration>b__48_0(PartyCSharpSDK.Interop.PARTY_INVITATION_CONFIGURATION s)
			{
				return null;
			}

			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x200B0D0", Offset = "0x200B0D0", VA = "0x200B0D0")]
			internal UTF8StringPtr <PartyNetworkCreateEndpoint>b__51_0(string x, DisposableCollection d)
			{
				return default(UTF8StringPtr);
			}

			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x200B0FC", Offset = "0x200B0FC", VA = "0x200B0FC")]
			internal PARTY_DATA_BUFFER <PartyNetworkCreateEndpoint>b__51_1(byte[] x, DisposableCollection d)
			{
				return default(PARTY_DATA_BUFFER);
			}

			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x200B128", Offset = "0x200B128", VA = "0x200B128")]
			internal PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE <PartyEndpointCancelMessages>b__54_0(PARTY_ENDPOINT_HANDLE x, DisposableCollection d)
			{
				return default(PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE);
			}

			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x200B144", Offset = "0x200B144", VA = "0x200B144")]
			internal PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE <PartyEndpointFlushMessages>b__55_0(PARTY_ENDPOINT_HANDLE x, DisposableCollection d)
			{
				return default(PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE);
			}

			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x200B160", Offset = "0x200B160", VA = "0x200B160")]
			internal PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE <PartyEndpointGetEndpointStatistics>b__56_0(PARTY_ENDPOINT_HANDLE x, DisposableCollection d)
			{
				return default(PartyCSharpSDK.Interop.PARTY_ENDPOINT_HANDLE);
			}

			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x200B17C", Offset = "0x200B17C", VA = "0x200B17C")]
			internal PARTY_CHAT_CONTROL_HANDLE <PartyDeviceGetChatControls>b__70_0(PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE s)
			{
				return null;
			}

			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x200B1E4", Offset = "0x200B1E4", VA = "0x200B1E4")]
			internal PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE <PartyChatControlSendText>b__71_0(PARTY_CHAT_CONTROL_HANDLE x, DisposableCollection d)
			{
				return default(PartyCSharpSDK.Interop.PARTY_CHAT_CONTROL_HANDLE);
			}

			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x200B200", Offset = "0x200B200", VA = "0x200B200")]
			internal PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE <PartyChatControlGetAvailableTextToSpeechProfiles>b__101_0(PartyCSharpSDK.Interop.PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE s)
			{
				return null;
			}

			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x200B268", Offset = "0x200B268", VA = "0x200B268")]
			internal PARTY_NETWORK_HANDLE <PartyChatControlGetNetworks>b__112_0(PartyCSharpSDK.Interop.PARTY_NETWORK_HANDLE s)
			{
				return null;
			}
		}

		[Token(Token = "0x20003A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2071C", Offset = "0xB2071C")]
		private sealed class <>c__DisplayClass71_0
		{
			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DisposableCollection dc;

			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x200B2D0", Offset = "0x200B2D0", VA = "0x200B2D0")]
			public <>c__DisplayClass71_0()
			{
			}

			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x200B2D8", Offset = "0x200B2D8", VA = "0x200B2D8")]
			internal PARTY_DATA_BUFFER <PartyChatControlSendText>b__1(byte[] x, DisposableCollection d)
			{
				return default(PARTY_DATA_BUFFER);
			}
		}

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static ObjectPool objectPool;

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x20C63B8", Offset = "0x20C63B8", VA = "0x20C63B8")]
		static SDK()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x20C6A14", Offset = "0x20C6A14", VA = "0x20C6A14")]
		public static uint PartyInitialize(string titleId, [Out] PARTY_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x20C6A58", Offset = "0x20C6A58", VA = "0x20C6A58")]
		public static uint PartyCleanup(PARTY_HANDLE handle)
		{
			return default(uint);
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x20C6A78", Offset = "0x20C6A78", VA = "0x20C6A78")]
		public static uint PartyCreateLocalUser(PARTY_HANDLE handle, string entityId, string titlePlayerEntityToken, [Out] PARTY_LOCAL_USER_HANDLE localUser)
		{
			return default(uint);
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x20C6B18", Offset = "0x20C6B18", VA = "0x20C6B18")]
		public static uint PartyCreateNewNetwork(PARTY_HANDLE handle, PARTY_LOCAL_USER_HANDLE localUser, PARTY_NETWORK_CONFIGURATION networkConfiguration, PARTY_REGION[] regions, PARTY_INVITATION_CONFIGURATION initialInvitationConfiguration, object asyncIdentifier, [Out] PARTY_NETWORK_DESCRIPTOR networkDescriptor, [Out] string appliedInitialInvitationIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x20C6FD8", Offset = "0x20C6FD8", VA = "0x20C6FD8")]
		public static uint PartyConnectToNetwork(PARTY_HANDLE handle, PARTY_NETWORK_DESCRIPTOR networkDescriptor, object asyncIdentifier, [Out] PARTY_NETWORK_HANDLE network)
		{
			return default(uint);
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x20C7108", Offset = "0x20C7108", VA = "0x20C7108")]
		public static uint PartyStartProcessingStateChanges(PARTY_HANDLE handle, [Out] List<PARTY_STATE_CHANGE> stateChanges)
		{
			return default(uint);
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x20C739C", Offset = "0x20C739C", VA = "0x20C739C")]
		public static uint PartyFinishProcessingStateChanges(PARTY_HANDLE handle, List<PARTY_STATE_CHANGE> stateChanges)
		{
			return default(uint);
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x20C7548", Offset = "0x20C7548", VA = "0x20C7548")]
		public static uint PartyDestroyLocalUser(PARTY_HANDLE handle, PARTY_LOCAL_USER_HANDLE localUser, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x20C7624", Offset = "0x20C7624", VA = "0x20C7624")]
		public static uint PartyGetErrorMessage(uint error, [Out] string errorMessage)
		{
			return default(uint);
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x20C7698", Offset = "0x20C7698", VA = "0x20C7698")]
		public static uint PartyGetRegions(PARTY_HANDLE handle, [Out] PARTY_REGION[] regionList)
		{
			return default(uint);
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x20C7868", Offset = "0x20C7868", VA = "0x20C7868")]
		public static uint PartyGetLocalDevice(PARTY_HANDLE handle, [Out] PARTY_DEVICE_HANDLE localDevice)
		{
			return default(uint);
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x20C78D0", Offset = "0x20C78D0", VA = "0x20C78D0")]
		public static uint PartyGetLocalUsers(PARTY_HANDLE handle, [Out] PARTY_LOCAL_USER_HANDLE[] users)
		{
			return default(uint);
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x20C7AA0", Offset = "0x20C7AA0", VA = "0x20C7AA0")]
		public static uint PartyLocalUserGetEntityId(PARTY_LOCAL_USER_HANDLE localUser, [Out] string entityId)
		{
			return default(uint);
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x20C7B28", Offset = "0x20C7B28", VA = "0x20C7B28")]
		public static uint PartyLocalUserUpdateEntityToken(PARTY_LOCAL_USER_HANDLE localUser, string titlePlayerEntityToken)
		{
			return default(uint);
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x20C7B68", Offset = "0x20C7B68", VA = "0x20C7B68")]
		public static uint PartyLocalUserGetCustomContext(PARTY_LOCAL_USER_HANDLE localUser, [Out] object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x20C7C54", Offset = "0x20C7C54", VA = "0x20C7C54")]
		public static uint PartyLocalUserSetCustomContext(PARTY_LOCAL_USER_HANDLE localUser, object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x20C7D98", Offset = "0x20C7D98", VA = "0x20C7D98")]
		public static uint PartyGetNetworks(PARTY_HANDLE handle, [Out] PARTY_NETWORK_HANDLE[] networks)
		{
			return default(uint);
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x20C7F68", Offset = "0x20C7F68", VA = "0x20C7F68")]
		public static uint PartySetOption(object contextObject, PARTY_OPTION option, object value)
		{
			return default(uint);
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x20C8384", Offset = "0x20C8384", VA = "0x20C8384")]
		public static uint PartyGetOption(object contextObject, PARTY_OPTION option, [Out] object value)
		{
			return default(uint);
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x20C846C", Offset = "0x20C846C", VA = "0x20C846C")]
		public static uint PartySetThreadAffinityMask(PARTY_THREAD_ID threadId, ulong threadAffinityMask)
		{
			return default(uint);
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x20C8474", Offset = "0x20C8474", VA = "0x20C8474")]
		public static uint PartyGetThreadAffinityMask(PARTY_THREAD_ID threadId, [Out] ulong threadAffinityMask)
		{
			return default(uint);
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x20C847C", Offset = "0x20C847C", VA = "0x20C847C")]
		public static uint PartyGetChatControls(PARTY_HANDLE handle, [Out] PARTY_CHAT_CONTROL_HANDLE[] chatControls)
		{
			return default(uint);
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x20C864C", Offset = "0x20C864C", VA = "0x20C864C")]
		public static uint PartyNetworkAuthenticateLocalUser(PARTY_NETWORK_HANDLE network, PARTY_LOCAL_USER_HANDLE localUser, string invitationIdentifier, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x20C8744", Offset = "0x20C8744", VA = "0x20C8744")]
		public static uint PartyNetworkGetNetworkDescriptor(PARTY_NETWORK_HANDLE network, [Out] PARTY_NETWORK_DESCRIPTOR networkDescriptor)
		{
			return default(uint);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x20C8838", Offset = "0x20C8838", VA = "0x20C8838")]
		public static uint PartyNetworkCreateInvitation(PARTY_NETWORK_HANDLE network, PARTY_LOCAL_USER_HANDLE localUser, PARTY_INVITATION_CONFIGURATION invitationConfiguration, object asyncIdentifier, [Out] PARTY_INVITATION_HANDLE invitation)
		{
			return default(uint);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x20C8AC8", Offset = "0x20C8AC8", VA = "0x20C8AC8")]
		public static uint PartyNetworkDestroyEndpoint(PARTY_NETWORK_HANDLE network, PARTY_ENDPOINT_HANDLE localEndpoint, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x20C8BA4", Offset = "0x20C8BA4", VA = "0x20C8BA4")]
		public static uint PartyNetworkGetChatControls(PARTY_NETWORK_HANDLE network, [Out] PARTY_CHAT_CONTROL_HANDLE[] chatControls)
		{
			return default(uint);
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x20C8D74", Offset = "0x20C8D74", VA = "0x20C8D74")]
		public static uint PartyNetworkFindEndpointByUniqueIdentifier(PARTY_NETWORK_HANDLE network, ushort uniqueIdentifier, [Out] PARTY_ENDPOINT_HANDLE endpoint)
		{
			return default(uint);
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x20C8DE4", Offset = "0x20C8DE4", VA = "0x20C8DE4")]
		public static uint PartyNetworkGetCustomContext(PARTY_NETWORK_HANDLE network, [Out] object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x20C8ED0", Offset = "0x20C8ED0", VA = "0x20C8ED0")]
		public static uint PartyNetworkSetCustomContext(PARTY_NETWORK_HANDLE network, object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x20C9014", Offset = "0x20C9014", VA = "0x20C9014")]
		public static uint PartyNetworkGetDevices(PARTY_NETWORK_HANDLE network, [Out] PARTY_DEVICE_HANDLE[] devices)
		{
			return default(uint);
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x20C91E4", Offset = "0x20C91E4", VA = "0x20C91E4")]
		public static uint PartyNetworkGetEndpoints(PARTY_NETWORK_HANDLE network, [Out] PARTY_ENDPOINT_HANDLE[] endpoints)
		{
			return default(uint);
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x20C93B4", Offset = "0x20C93B4", VA = "0x20C93B4")]
		public static uint PartyNetworkGetInvitations(PARTY_NETWORK_HANDLE network, [Out] PARTY_INVITATION_HANDLE[] invitations)
		{
			return default(uint);
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x20C9584", Offset = "0x20C9584", VA = "0x20C9584")]
		public static uint PartyNetworkGetLocalUsers(PARTY_NETWORK_HANDLE network, [Out] PARTY_LOCAL_USER_HANDLE[] users)
		{
			return default(uint);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x20C9754", Offset = "0x20C9754", VA = "0x20C9754")]
		public static uint PartyNetworkGetNetworkConfiguration(PARTY_NETWORK_HANDLE network, [Out] PARTY_NETWORK_CONFIGURATION networkConfiguration)
		{
			return default(uint);
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x20C98EC", Offset = "0x20C98EC", VA = "0x20C98EC")]
		public static uint PartyNetworkGetNetworkStatistics(PARTY_NETWORK_HANDLE network, PARTY_NETWORK_STATISTIC[] statisticTypes, [Out] ulong[] statisticValues)
		{
			return default(uint);
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x20C9990", Offset = "0x20C9990", VA = "0x20C9990")]
		public static uint PartyNetworkKickDevice(PARTY_NETWORK_HANDLE network, PARTY_DEVICE_HANDLE targetDevice, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x20C9A6C", Offset = "0x20C9A6C", VA = "0x20C9A6C")]
		public static uint PartyNetworkKickUser(PARTY_NETWORK_HANDLE network, string targetEntityId, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x20C9B58", Offset = "0x20C9B58", VA = "0x20C9B58")]
		public static uint PartyNetworkLeaveNetwork(PARTY_NETWORK_HANDLE network, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x20C9C24", Offset = "0x20C9C24", VA = "0x20C9C24")]
		public static uint PartyNetworkRemoveLocalUser(PARTY_NETWORK_HANDLE network, PARTY_LOCAL_USER_HANDLE localUser, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x20C9D00", Offset = "0x20C9D00", VA = "0x20C9D00")]
		public static uint PartyNetworkRevokeInvitation(PARTY_NETWORK_HANDLE network, PARTY_LOCAL_USER_HANDLE localUser, PARTY_INVITATION_HANDLE invitation, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x20C9DE8", Offset = "0x20C9DE8", VA = "0x20C9DE8")]
		public static uint PartySerializeNetworkDescriptor(PARTY_NETWORK_DESCRIPTOR networkDescriptor, [Out] string serializedNetworkDescriptorString)
		{
			return default(uint);
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x20C9FCC", Offset = "0x20C9FCC", VA = "0x20C9FCC")]
		public static uint PartyDeserializeNetworkDescriptor(string serializedNetworkDescriptorString, [Out] PARTY_NETWORK_DESCRIPTOR networkDescriptor)
		{
			return default(uint);
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x20CA0C8", Offset = "0x20CA0C8", VA = "0x20CA0C8")]
		public static uint PartyNetworkConnectChatControl(PARTY_NETWORK_HANDLE network, PARTY_CHAT_CONTROL_HANDLE chatControl, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x20CA1A4", Offset = "0x20CA1A4", VA = "0x20CA1A4")]
		public static uint PartyNetworkDisconnectChatControl(PARTY_NETWORK_HANDLE network, PARTY_CHAT_CONTROL_HANDLE chatControl, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x20CA280", Offset = "0x20CA280", VA = "0x20CA280")]
		public static uint PartyInvitationGetCreatorEntityId(PARTY_INVITATION_HANDLE invitation, [Out] string entityId)
		{
			return default(uint);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x20CA308", Offset = "0x20CA308", VA = "0x20CA308")]
		public static uint PartyInvitationGetInvitationConfiguration(PARTY_INVITATION_HANDLE invitation, [Out] PARTY_INVITATION_CONFIGURATION configuration)
		{
			return default(uint);
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x20CA4A0", Offset = "0x20CA4A0", VA = "0x20CA4A0")]
		public static uint PartyInvitationGetCustomContext(PARTY_INVITATION_HANDLE invitation, [Out] object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x20CA58C", Offset = "0x20CA58C", VA = "0x20CA58C")]
		public static uint PartyInvitationSetCustomContext(PARTY_INVITATION_HANDLE invitation, object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x20CA6D0", Offset = "0x20CA6D0", VA = "0x20CA6D0")]
		public static uint PartyNetworkCreateEndpoint(PARTY_NETWORK_HANDLE network, PARTY_LOCAL_USER_HANDLE localUser, Dictionary<string, byte[]> keyValuePairs, object asyncIdentifier, [Out] PARTY_ENDPOINT_HANDLE endpoint)
		{
			return default(uint);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x20CAE84", Offset = "0x20CAE84", VA = "0x20CAE84")]
		public static uint PartyEndpointSendMessage(PARTY_ENDPOINT_HANDLE endpoint, PARTY_ENDPOINT_HANDLE[] targetEndpoints, PARTY_SEND_MESSAGE_OPTIONS options, PARTY_SEND_MESSAGE_QUEUING_CONFIGURATION queuingConfiguration, byte[] dataBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x20CAF70", Offset = "0x20CAF70", VA = "0x20CAF70")]
		public static uint PartyEndpointSendMessage(PARTY_ENDPOINT_HANDLE endpoint, PARTY_ENDPOINT_HANDLE[] targetEndpoints, PARTY_SEND_MESSAGE_OPTIONS options, PARTY_SEND_MESSAGE_QUEUING_CONFIGURATION queuingConfiguration, IntPtr dataBuffer, uint dataBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x20CB0D8", Offset = "0x20CB0D8", VA = "0x20CB0D8")]
		public static uint PartyEndpointCancelMessages(PARTY_ENDPOINT_HANDLE endpoint, PARTY_ENDPOINT_HANDLE[] targetEndpoints, PARTY_CANCEL_MESSAGES_FILTER_EXPRESSION filterExpression, uint messageIdentityFilterMask, uint filteredMessageIdentitiesToMatch, [Out] uint canceledMessagesCount)
		{
			return default(uint);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x20CB3A8", Offset = "0x20CB3A8", VA = "0x20CB3A8")]
		public static uint PartyEndpointFlushMessages(PARTY_ENDPOINT_HANDLE endpoint, PARTY_ENDPOINT_HANDLE[] targetEndpoints)
		{
			return default(uint);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x20CB644", Offset = "0x20CB644", VA = "0x20CB644")]
		public static uint PartyEndpointGetEndpointStatistics(PARTY_ENDPOINT_HANDLE endpoint, PARTY_ENDPOINT_HANDLE[] targetEndpoints, PARTY_ENDPOINT_STATISTIC[] statisticTypes, [Out] ulong[] statisticValues)
		{
			return default(uint);
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x20CB934", Offset = "0x20CB934", VA = "0x20CB934")]
		public static uint PartyEndpointGetCustomContext(PARTY_ENDPOINT_HANDLE endpoint, [Out] object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x20CBA20", Offset = "0x20CBA20", VA = "0x20CBA20")]
		public static uint PartyEndpointSetCustomContext(PARTY_ENDPOINT_HANDLE endpoint, object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x20CBB64", Offset = "0x20CBB64", VA = "0x20CBB64")]
		public static uint PartyEndpointGetDevice(PARTY_ENDPOINT_HANDLE endpoint, [Out] PARTY_DEVICE_HANDLE device)
		{
			return default(uint);
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x20CBBCC", Offset = "0x20CBBCC", VA = "0x20CBBCC")]
		public static uint PartyEndpointGetEntityId(PARTY_ENDPOINT_HANDLE endpoint, [Out] string entityId)
		{
			return default(uint);
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x20CBC54", Offset = "0x20CBC54", VA = "0x20CBC54")]
		public static uint PartyEndpointGetLocalUser(PARTY_ENDPOINT_HANDLE endpoint, [Out] PARTY_LOCAL_USER_HANDLE localUser)
		{
			return default(uint);
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x20CBCBC", Offset = "0x20CBCBC", VA = "0x20CBCBC")]
		public static uint PartyEndpointGetNetwork(PARTY_ENDPOINT_HANDLE endpoint, [Out] PARTY_NETWORK_HANDLE network)
		{
			return default(uint);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x20CBD24", Offset = "0x20CBD24", VA = "0x20CBD24")]
		public static uint PartyEndpointGetUniqueIdentifier(PARTY_ENDPOINT_HANDLE endpoint, [Out] ushort uniqueIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x20CBD40", Offset = "0x20CBD40", VA = "0x20CBD40")]
		public static uint PartyEndpointIsLocal(PARTY_ENDPOINT_HANDLE endpoint, [Out] bool isLocal)
		{
			return default(uint);
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x20CBDAC", Offset = "0x20CBDAC", VA = "0x20CBDAC")]
		public static uint PartyDeviceIsLocal(PARTY_DEVICE_HANDLE device, [Out] bool isLocal)
		{
			return default(uint);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x20CBE18", Offset = "0x20CBE18", VA = "0x20CBE18")]
		public static uint PartyDeviceGetCustomContext(PARTY_DEVICE_HANDLE device, [Out] object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x20CBF04", Offset = "0x20CBF04", VA = "0x20CBF04")]
		public static uint PartyDeviceSetCustomContext(PARTY_DEVICE_HANDLE device, object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x20CC048", Offset = "0x20CC048", VA = "0x20CC048")]
		public static uint PartyDeviceCreateChatControl(PARTY_DEVICE_HANDLE device, PARTY_LOCAL_USER_HANDLE localUser, string languageCode, object asyncIdentifier, [Out] PARTY_CHAT_CONTROL_HANDLE chatControl)
		{
			return default(uint);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x20CC1B8", Offset = "0x20CC1B8", VA = "0x20CC1B8")]
		public static uint PartyDeviceDestroyChatControl(PARTY_DEVICE_HANDLE device, PARTY_CHAT_CONTROL_HANDLE chatControl, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x20CC294", Offset = "0x20CC294", VA = "0x20CC294")]
		public static uint PartyDeviceGetChatControls(PARTY_DEVICE_HANDLE device, [Out] PARTY_CHAT_CONTROL_HANDLE[] chatControls)
		{
			return default(uint);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x20CC464", Offset = "0x20CC464", VA = "0x20CC464")]
		public static uint PartyChatControlSendText(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE[] targetChatControls, string chatText, byte[][] dataBuffers)
		{
			return default(uint);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x20CC828", Offset = "0x20CC828", VA = "0x20CC828")]
		public static uint PartyChatControlSetAudioInput(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType, string audioDeviceSelectionContext, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x20CC930", Offset = "0x20CC930", VA = "0x20CC930")]
		public static uint PartyChatControlGetAudioInput(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType, [Out] string audioDeviceSelectionContext, [Out] string deviceId)
		{
			return default(uint);
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x20CCA00", Offset = "0x20CCA00", VA = "0x20CCA00")]
		public static uint PartyChatControlSetAudioOutput(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType, string audioDeviceSelectionContext, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x20CCB08", Offset = "0x20CCB08", VA = "0x20CCB08")]
		public static uint PartyChatControlGetAudioOutput(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType, [Out] string audioDeviceSelectionContext, [Out] string deviceId)
		{
			return default(uint);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x20CCBD8", Offset = "0x20CCBD8", VA = "0x20CCBD8")]
		public static uint PartyChatControlSetAudioEncoderBitrate(PARTY_CHAT_CONTROL_HANDLE chatControl, uint bitrate, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x20CCCB4", Offset = "0x20CCCB4", VA = "0x20CCCB4")]
		public static uint PartyChatControlGetAudioEncoderBitrate(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] uint bitrate)
		{
			return default(uint);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x20CCCD0", Offset = "0x20CCCD0", VA = "0x20CCCD0")]
		public static uint PartyChatControlSetAudioRenderVolume(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, float volume)
		{
			return default(uint);
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x20CCCF0", Offset = "0x20CCCF0", VA = "0x20CCCF0")]
		public static uint PartyChatControlGetAudioRenderVolume(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, [Out] float volume)
		{
			return default(uint);
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x20CCD14", Offset = "0x20CCD14", VA = "0x20CCD14")]
		public static uint PartyChatControlSetAudioInputMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, bool muted)
		{
			return default(uint);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x20CCDB0", Offset = "0x20CCDB0", VA = "0x20CCDB0")]
		public static uint PartyChatControlGetAudioInputMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] bool muted)
		{
			return default(uint);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x20CCE1C", Offset = "0x20CCE1C", VA = "0x20CCE1C")]
		public static uint PartyChatControlSetIncomingAudioMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, bool muted)
		{
			return default(uint);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x20CCEC8", Offset = "0x20CCEC8", VA = "0x20CCEC8")]
		public static uint PartyChatControlGetIncomingAudioMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, [Out] bool muted)
		{
			return default(uint);
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x20CCF38", Offset = "0x20CCF38", VA = "0x20CCF38")]
		public static uint PartyChatControlSetIncomingTextMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, bool muted)
		{
			return default(uint);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x20CCFE4", Offset = "0x20CCFE4", VA = "0x20CCFE4")]
		public static uint PartyChatControlGetIncomingTextMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, [Out] bool muted)
		{
			return default(uint);
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x20CD054", Offset = "0x20CD054", VA = "0x20CD054")]
		public static uint PartyChatControlIsLocal(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] bool isLocal)
		{
			return default(uint);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x20CD0C0", Offset = "0x20CD0C0", VA = "0x20CD0C0")]
		public static uint PartyChatControlSetPermissions(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, PARTY_CHAT_PERMISSION_OPTIONS chatPermissionOptions)
		{
			return default(uint);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x20CD0E0", Offset = "0x20CD0E0", VA = "0x20CD0E0")]
		public static uint PartyChatControlGetPermissions(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, [Out] PARTY_CHAT_PERMISSION_OPTIONS chatPermissionOptions)
		{
			return default(uint);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x20CD104", Offset = "0x20CD104", VA = "0x20CD104")]
		public static uint PartyChatControlGetCustomContext(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x20CD1F0", Offset = "0x20CD1F0", VA = "0x20CD1F0")]
		public static uint PartyChatControlSetCustomContext(PARTY_CHAT_CONTROL_HANDLE chatControl, object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x20CD334", Offset = "0x20CD334", VA = "0x20CD334")]
		public static uint PartyChatControlGetLanguage(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] string languageCode)
		{
			return default(uint);
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x20CD3BC", Offset = "0x20CD3BC", VA = "0x20CD3BC")]
		public static uint PartyChatControlSetLanguage(PARTY_CHAT_CONTROL_HANDLE chatControl, string languageCode, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x20CD4BC", Offset = "0x20CD4BC", VA = "0x20CD4BC")]
		public static uint PartyChatControlSetTextChatOptions(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_TEXT_CHAT_OPTIONS options, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x20CD598", Offset = "0x20CD598", VA = "0x20CD598")]
		public static uint PartyChatControlGetTextChatOptions(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_TEXT_CHAT_OPTIONS options)
		{
			return default(uint);
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x20CD5B4", Offset = "0x20CD5B4", VA = "0x20CD5B4")]
		public static uint PartyChatControlSynthesizeTextToSpeech(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE type, string textToSynthesize, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x20CD6A8", Offset = "0x20CD6A8", VA = "0x20CD6A8")]
		public static uint PartyChatControlSetTranscriptionOptions(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS options, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x20CD784", Offset = "0x20CD784", VA = "0x20CD784")]
		public static uint PartyChatControlGetTranscriptionOptions(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS options)
		{
			return default(uint);
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x20CD7A0", Offset = "0x20CD7A0", VA = "0x20CD7A0")]
		public static uint PartyChatControlSetTextToSpeechProfile(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE type, string profileIdentifier, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x20CD894", Offset = "0x20CD894", VA = "0x20CD894")]
		public static uint PartyChatControlGetTextToSpeechProfile(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE type, [Out] PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile)
		{
			return default(uint);
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x20CD904", Offset = "0x20CD904", VA = "0x20CD904")]
		public static uint PartyChatControlPopulateAvailableTextToSpeechProfiles(PARTY_CHAT_CONTROL_HANDLE chatControl, object asyncIdentifier)
		{
			return default(uint);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x20CD9D0", Offset = "0x20CD9D0", VA = "0x20CD9D0")]
		public static uint PartyChatControlGetAvailableTextToSpeechProfiles(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE[] profiles)
		{
			return default(uint);
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x20CDBA0", Offset = "0x20CDBA0", VA = "0x20CDBA0")]
		public static uint PartyTextToSpeechProfileGetCustomContext(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, [Out] object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x20CDC8C", Offset = "0x20CDC8C", VA = "0x20CDC8C")]
		public static uint PartyTextToSpeechProfileSetCustomContext(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, object customContext)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x20CDDD0", Offset = "0x20CDDD0", VA = "0x20CDDD0")]
		public static uint PartyTextToSpeechProfileGetGender(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, [Out] PARTY_GENDER gender)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x20CDDEC", Offset = "0x20CDDEC", VA = "0x20CDDEC")]
		public static uint PartyTextToSpeechProfileGetIdentifier(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, [Out] string identifier)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x20CDE74", Offset = "0x20CDE74", VA = "0x20CDE74")]
		public static uint PartyTextToSpeechProfileGetLanguageCode(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, [Out] string languageCode)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x20CDEFC", Offset = "0x20CDEFC", VA = "0x20CDEFC")]
		public static uint PartyTextToSpeechProfileGetName(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, [Out] string name)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x20CDF84", Offset = "0x20CDF84", VA = "0x20CDF84")]
		public static uint PartyChatControlGetChatIndicator(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, [Out] PARTY_CHAT_CONTROL_CHAT_INDICATOR chatIndicator)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x20CDFA8", Offset = "0x20CDFA8", VA = "0x20CDFA8")]
		public static uint PartyChatControlGetLocalChatIndicator(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_LOCAL_CHAT_CONTROL_CHAT_INDICATOR chatIndicator)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x20CDFC4", Offset = "0x20CDFC4", VA = "0x20CDFC4")]
		public static uint PartyChatControlGetDevice(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_DEVICE_HANDLE device)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x20CE02C", Offset = "0x20CE02C", VA = "0x20CE02C")]
		public static uint PartyChatControlGetLocalUser(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_LOCAL_USER_HANDLE localUser)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x20CE094", Offset = "0x20CE094", VA = "0x20CE094")]
		public static uint PartyChatControlGetNetworks(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_NETWORK_HANDLE[] networks)
		{
			return default(uint);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x20CE264", Offset = "0x20CE264", VA = "0x20CE264")]
		public static uint PartyChatControlGetEntityId(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] string entityId)
		{
			return default(uint);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x20CE2EC", Offset = "0x20CE2EC", VA = "0x20CE2EC")]
		public SDK()
		{
		}
	}
}
namespace PartyCSharpSDK.Interop
{
	[Token(Token = "0x20003A5")]
	internal class PFPInterop
	{
		[Token(Token = "0x400152D")]
		private const string ThunkDllName = "party";

		[PreserveSig]
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x211BA80", Offset = "0x211BA80", VA = "0x211BA80")]
		internal static extern uint PartyChatControlSendText(PARTY_CHAT_CONTROL_HANDLE chatControl, uint targetChatControlCount, IntPtr targetChatControls, byte[] chatText, uint dataBufferCount, IntPtr dataBuffers);

		[PreserveSig]
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x211BB44", Offset = "0x211BB44", VA = "0x211BB44")]
		internal static extern uint PartyChatControlGetAudioEncoderBitrate(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] uint bitrate);

		[PreserveSig]
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x211BBD0", Offset = "0x211BBD0", VA = "0x211BBD0")]
		internal static extern uint PartyChatControlSetAudioEncoderBitrate(PARTY_CHAT_CONTROL_HANDLE chatControl, uint bitrate, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x211BC64", Offset = "0x211BC64", VA = "0x211BC64")]
		internal unsafe static extern uint PartyChatControlConfigureAudioManipulationCaptureStream(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_AUDIO_MANIPULATION_SINK_STREAM_CONFIGURATION* configuration, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x211BCF8", Offset = "0x211BCF8", VA = "0x211BCF8")]
		internal unsafe static extern uint PartyChatControlGetPropertyKeys(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] uint propertyCount, [Out] UTF8StringPtr* keys);

		[PreserveSig]
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x211BD98", Offset = "0x211BD98", VA = "0x211BD98")]
		internal static extern uint PartyChatControlSetTextToSpeechProfile(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE type, byte[] profileIdentifier, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x211BE44", Offset = "0x211BE44", VA = "0x211BE44")]
		internal static extern uint PartyChatControlGetTextToSpeechProfile(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE type, [Out] PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile);

		[PreserveSig]
		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x211BED8", Offset = "0x211BED8", VA = "0x211BED8")]
		internal static extern uint PartyTextToSpeechProfileGetName(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, [Out] UTF8StringPtr name);

		[PreserveSig]
		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x211BF64", Offset = "0x211BF64", VA = "0x211BF64")]
		internal static extern uint PartyTextToSpeechProfileGetGender(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, [Out] PARTY_GENDER gender);

		[PreserveSig]
		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x211BFF0", Offset = "0x211BFF0", VA = "0x211BFF0")]
		internal static extern uint PartyChatControlGetLanguage(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] UTF8StringPtr languageCode);

		[PreserveSig]
		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x211C07C", Offset = "0x211C07C", VA = "0x211C07C")]
		internal static extern uint PartyChatControlSetAudioOutput(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType, byte[] audioDeviceSelectionContext, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x211C128", Offset = "0x211C128", VA = "0x211C128")]
		internal static extern uint PartyChatControlGetAudioOutput(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType, [Out] UTF8StringPtr audioDeviceSelectionContext, [Out] UTF8StringPtr deviceId);

		[PreserveSig]
		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x211C1CC", Offset = "0x211C1CC", VA = "0x211C1CC")]
		internal static extern uint PartyChatControlSetLanguage(PARTY_CHAT_CONTROL_HANDLE chatControl, byte[] languageCode, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x211C268", Offset = "0x211C268", VA = "0x211C268")]
		internal static extern uint PartyChatControlGetDevice(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_DEVICE_HANDLE device);

		[PreserveSig]
		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x211C2F4", Offset = "0x211C2F4", VA = "0x211C2F4")]
		internal static extern uint PartyChatControlSetProperties(PARTY_CHAT_CONTROL_HANDLE chatControl, uint propertyCount, [In] UTF8StringPtr[] keys, [In] PARTY_DATA_BUFFER[] values);

		[PreserveSig]
		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x211C3A8", Offset = "0x211C3A8", VA = "0x211C3A8")]
		internal static extern uint PartyChatControlGetAvailableTextToSpeechProfiles(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] uint profileCount, [Out] IntPtr profiles);

		[PreserveSig]
		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x211C43C", Offset = "0x211C43C", VA = "0x211C43C")]
		internal static extern uint PartyChatControlGetCustomContext(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x211C4C8", Offset = "0x211C4C8", VA = "0x211C4C8")]
		internal static extern uint PartyTextToSpeechProfileGetLanguageCode(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, [Out] UTF8StringPtr languageCode);

		[PreserveSig]
		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x211C554", Offset = "0x211C554", VA = "0x211C554")]
		internal static extern uint PartyChatControlSetCustomContext(PARTY_CHAT_CONTROL_HANDLE chatControl, IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x211C5E0", Offset = "0x211C5E0", VA = "0x211C5E0")]
		internal static extern uint PartyChatControlIsLocal(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] byte isLocal);

		[PreserveSig]
		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x211C66C", Offset = "0x211C66C", VA = "0x211C66C")]
		internal static extern uint PartyChatControlGetIncomingTextMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, [Out] byte muted);

		[PreserveSig]
		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x211C700", Offset = "0x211C700", VA = "0x211C700")]
		internal static extern uint PartyChatControlSetIncomingTextMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, byte muted);

		[PreserveSig]
		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x211C794", Offset = "0x211C794", VA = "0x211C794")]
		internal static extern uint PartyChatControlSetPermissions(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, PARTY_CHAT_PERMISSION_OPTIONS chatPermissionOptions);

		[PreserveSig]
		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x211C828", Offset = "0x211C828", VA = "0x211C828")]
		internal static extern uint PartyChatControlGetPermissions(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, [Out] PARTY_CHAT_PERMISSION_OPTIONS chatPermissionOptions);

		[PreserveSig]
		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x211C8BC", Offset = "0x211C8BC", VA = "0x211C8BC")]
		internal static extern uint PartyChatControlGetNetworks(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] uint networkCount, [Out] IntPtr networks);

		[PreserveSig]
		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x211C950", Offset = "0x211C950", VA = "0x211C950")]
		internal unsafe static extern uint PartyChatControlConfigureAudioManipulationVoiceStream(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_AUDIO_MANIPULATION_SOURCE_STREAM_CONFIGURATION* configuration, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001200")]
		[Address(RVA = "0x211C9E4", Offset = "0x211C9E4", VA = "0x211C9E4")]
		internal static extern uint PartyChatControlGetLocalChatIndicator(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_LOCAL_CHAT_CONTROL_CHAT_INDICATOR chatIndicator);

		[PreserveSig]
		[Token(Token = "0x6001201")]
		[Address(RVA = "0x211CA70", Offset = "0x211CA70", VA = "0x211CA70")]
		internal unsafe static extern uint PartyChatControlGetProperty(PARTY_CHAT_CONTROL_HANDLE chatControl, byte[] key, [Out] PARTY_DATA_BUFFER* value);

		[PreserveSig]
		[Token(Token = "0x6001202")]
		[Address(RVA = "0x211CB18", Offset = "0x211CB18", VA = "0x211CB18")]
		internal static extern uint PartyChatControlGetAudioInputMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] byte muted);

		[PreserveSig]
		[Token(Token = "0x6001203")]
		[Address(RVA = "0x211CBA4", Offset = "0x211CBA4", VA = "0x211CBA4")]
		internal static extern uint PartyChatControlSetAudioInputMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, byte muted);

		[PreserveSig]
		[Token(Token = "0x6001204")]
		[Address(RVA = "0x211CC30", Offset = "0x211CC30", VA = "0x211CC30")]
		internal static extern uint PartyChatControlSetAudioRenderVolume(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, float volume);

		[PreserveSig]
		[Token(Token = "0x6001205")]
		[Address(RVA = "0x211CCCC", Offset = "0x211CCCC", VA = "0x211CCCC")]
		internal unsafe static extern uint PartyChatControlConfigureAudioManipulationRenderStream(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_AUDIO_MANIPULATION_SINK_STREAM_CONFIGURATION* configuration, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001206")]
		[Address(RVA = "0x211CD60", Offset = "0x211CD60", VA = "0x211CD60")]
		internal static extern uint PartyChatControlGetAudioRenderVolume(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, [Out] float volume);

		[PreserveSig]
		[Token(Token = "0x6001207")]
		[Address(RVA = "0x211CDF4", Offset = "0x211CDF4", VA = "0x211CDF4")]
		internal static extern uint PartyChatControlGetEntityId(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] UTF8StringPtr entityId);

		[PreserveSig]
		[Token(Token = "0x6001208")]
		[Address(RVA = "0x211CE80", Offset = "0x211CE80", VA = "0x211CE80")]
		internal static extern uint PartyChatControlGetTranscriptionOptions(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS options);

		[PreserveSig]
		[Token(Token = "0x6001209")]
		[Address(RVA = "0x211CF0C", Offset = "0x211CF0C", VA = "0x211CF0C")]
		internal static extern uint PartyTextToSpeechProfileGetIdentifier(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, [Out] UTF8StringPtr identifier);

		[PreserveSig]
		[Token(Token = "0x600120A")]
		[Address(RVA = "0x211CF98", Offset = "0x211CF98", VA = "0x211CF98")]
		internal static extern uint PartyChatControlSetTranscriptionOptions(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS options, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x600120B")]
		[Address(RVA = "0x211D02C", Offset = "0x211D02C", VA = "0x211D02C")]
		internal static extern uint PartyTextToSpeechProfileSetCustomContext(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x600120C")]
		[Address(RVA = "0x211D0B8", Offset = "0x211D0B8", VA = "0x211D0B8")]
		internal static extern uint PartyTextToSpeechProfileGetCustomContext(PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE profile, [Out] IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x600120D")]
		[Address(RVA = "0x211D144", Offset = "0x211D144", VA = "0x211D144")]
		internal static extern uint PartyChatControlPopulateAvailableTextToSpeechProfiles(PARTY_CHAT_CONTROL_HANDLE chatControl, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x600120E")]
		[Address(RVA = "0x211D1D0", Offset = "0x211D1D0", VA = "0x211D1D0")]
		internal static extern uint PartyChatControlGetChatIndicator(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, [Out] PARTY_CHAT_CONTROL_CHAT_INDICATOR chatIndicator);

		[PreserveSig]
		[Token(Token = "0x600120F")]
		[Address(RVA = "0x211D264", Offset = "0x211D264", VA = "0x211D264")]
		internal static extern uint PartyChatControlSetTextChatOptions(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_TEXT_CHAT_OPTIONS options, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001210")]
		[Address(RVA = "0x211D2F8", Offset = "0x211D2F8", VA = "0x211D2F8")]
		internal static extern uint PartyChatControlGetTextChatOptions(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_TEXT_CHAT_OPTIONS options);

		[PreserveSig]
		[Token(Token = "0x6001211")]
		[Address(RVA = "0x211D384", Offset = "0x211D384", VA = "0x211D384")]
		internal static extern uint PartyChatControlGetIncomingAudioMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, [Out] byte muted);

		[PreserveSig]
		[Token(Token = "0x6001212")]
		[Address(RVA = "0x211D418", Offset = "0x211D418", VA = "0x211D418")]
		internal static extern uint PartyChatControlSetIncomingAudioMuted(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_CHAT_CONTROL_HANDLE targetChatControl, byte muted);

		[PreserveSig]
		[Token(Token = "0x6001213")]
		[Address(RVA = "0x211D4AC", Offset = "0x211D4AC", VA = "0x211D4AC")]
		internal static extern uint PartyChatControlGetLocalUser(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_LOCAL_USER_HANDLE localUser);

		[PreserveSig]
		[Token(Token = "0x6001214")]
		[Address(RVA = "0x211D538", Offset = "0x211D538", VA = "0x211D538")]
		internal static extern uint PartyChatControlSetAudioInput(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType, byte[] audioDeviceSelectionContext, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001215")]
		[Address(RVA = "0x211D5E4", Offset = "0x211D5E4", VA = "0x211D5E4")]
		internal static extern uint PartyChatControlGetAudioInput(PARTY_CHAT_CONTROL_HANDLE chatControl, [Out] PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType, [Out] UTF8StringPtr audioDeviceSelectionContext, [Out] UTF8StringPtr deviceId);

		[PreserveSig]
		[Token(Token = "0x6001216")]
		[Address(RVA = "0x211D688", Offset = "0x211D688", VA = "0x211D688")]
		internal static extern uint PartyChatControlSynthesizeTextToSpeech(PARTY_CHAT_CONTROL_HANDLE chatControl, PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE type, byte[] textToSynthesize, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001217")]
		[Address(RVA = "0x211D734", Offset = "0x211D734", VA = "0x211D734")]
		internal unsafe static extern uint PartyDeviceGetProperty(PARTY_DEVICE_HANDLE device, byte[] key, [Out] PARTY_DATA_BUFFER* value);

		[PreserveSig]
		[Token(Token = "0x6001218")]
		[Address(RVA = "0x211D7DC", Offset = "0x211D7DC", VA = "0x211D7DC")]
		internal static extern uint PartyDeviceGetChatControls(PARTY_DEVICE_HANDLE device, [Out] uint chatControlCount, [Out] IntPtr chatControls);

		[PreserveSig]
		[Token(Token = "0x6001219")]
		[Address(RVA = "0x211D870", Offset = "0x211D870", VA = "0x211D870")]
		internal static extern uint PartyDeviceCreateChatControl(PARTY_DEVICE_HANDLE device, PARTY_LOCAL_USER_HANDLE localUser, byte[] languageCode, IntPtr asyncIdentifier, [Out] PARTY_CHAT_CONTROL_HANDLE chatControl);

		[PreserveSig]
		[Token(Token = "0x600121A")]
		[Address(RVA = "0x211D924", Offset = "0x211D924", VA = "0x211D924")]
		internal static extern uint PartyDeviceIsLocal(PARTY_DEVICE_HANDLE device, [Out] byte isLocal);

		[PreserveSig]
		[Token(Token = "0x600121B")]
		[Address(RVA = "0x211D9B0", Offset = "0x211D9B0", VA = "0x211D9B0")]
		internal static extern uint PartyDeviceSetCustomContext(PARTY_DEVICE_HANDLE device, IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x600121C")]
		[Address(RVA = "0x211DA3C", Offset = "0x211DA3C", VA = "0x211DA3C")]
		internal static extern uint PartyDeviceSetProperties(PARTY_DEVICE_HANDLE device, uint propertyCount, [In] UTF8StringPtr[] keys, [In] PARTY_DATA_BUFFER[] values);

		[PreserveSig]
		[Token(Token = "0x600121D")]
		[Address(RVA = "0x211DAF0", Offset = "0x211DAF0", VA = "0x211DAF0")]
		internal static extern uint PartyDeviceGetPropertyKeys(PARTY_DEVICE_HANDLE device, [Out] uint propertyCount, [Out] UTF8StringPtr[] keys);

		[PreserveSig]
		[Token(Token = "0x600121E")]
		[Address(RVA = "0x211DC24", Offset = "0x211DC24", VA = "0x211DC24")]
		internal static extern uint PartyDeviceGetCustomContext(PARTY_DEVICE_HANDLE device, [Out] IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x600121F")]
		[Address(RVA = "0x211DCB0", Offset = "0x211DCB0", VA = "0x211DCB0")]
		internal static extern uint PartyDeviceDestroyChatControl(PARTY_DEVICE_HANDLE device, PARTY_CHAT_CONTROL_HANDLE chatControl, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001220")]
		[Address(RVA = "0x211DD44", Offset = "0x211DD44", VA = "0x211DD44")]
		internal static extern uint PartyEndpointGetUniqueIdentifier(PARTY_ENDPOINT_HANDLE endpoint, [Out] ushort uniqueIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001221")]
		[Address(RVA = "0x211DDD0", Offset = "0x211DDD0", VA = "0x211DDD0")]
		internal static extern uint PartyEndpointSetCustomContext(PARTY_ENDPOINT_HANDLE endpoint, IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x6001222")]
		[Address(RVA = "0x211DE5C", Offset = "0x211DE5C", VA = "0x211DE5C")]
		internal static extern uint PartyEndpointCancelMessages(PARTY_ENDPOINT_HANDLE endpoint, uint targetEndpointCount, IntPtr targetEndpoints, PARTY_CANCEL_MESSAGES_FILTER_EXPRESSION filterExpression, uint messageIdentityFilterMask, uint filteredMessageIdentitiesToMatch, [Out] uint canceledMessagesCount);

		[PreserveSig]
		[Token(Token = "0x6001223")]
		[Address(RVA = "0x211DF20", Offset = "0x211DF20", VA = "0x211DF20")]
		internal static extern uint PartyEndpointGetDevice(PARTY_ENDPOINT_HANDLE endpoint, [Out] PARTY_DEVICE_HANDLE device);

		[PreserveSig]
		[Token(Token = "0x6001224")]
		[Address(RVA = "0x211DFAC", Offset = "0x211DFAC", VA = "0x211DFAC")]
		internal static extern uint PartyEndpointIsLocal(PARTY_ENDPOINT_HANDLE endpoint, [Out] byte isLocal);

		[PreserveSig]
		[Token(Token = "0x6001225")]
		[Address(RVA = "0x211E038", Offset = "0x211E038", VA = "0x211E038")]
		internal unsafe static extern uint PartyEndpointSendMessage(PARTY_ENDPOINT_HANDLE endpoint, uint targetEndpointCount, IntPtr targetEndpoints, PARTY_SEND_MESSAGE_OPTIONS options, PARTY_SEND_MESSAGE_QUEUING_CONFIGURATION* queuingConfiguration, uint dataBufferCount, PARTY_DATA_BUFFER* dataBuffers, IntPtr messageIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001226")]
		[Address(RVA = "0x211E10C", Offset = "0x211E10C", VA = "0x211E10C")]
		internal static extern uint PartyEndpointGetCustomContext(PARTY_ENDPOINT_HANDLE endpoint, [Out] IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x6001227")]
		[Address(RVA = "0x211E198", Offset = "0x211E198", VA = "0x211E198")]
		internal unsafe static extern uint PartyEndpointGetPropertyKeys(PARTY_ENDPOINT_HANDLE endpoint, [Out] uint propertyCount, [Out] UTF8StringPtr* keys);

		[PreserveSig]
		[Token(Token = "0x6001228")]
		[Address(RVA = "0x211E238", Offset = "0x211E238", VA = "0x211E238")]
		internal static extern uint PartyEndpointGetEntityId(PARTY_ENDPOINT_HANDLE endpoint, [Out] UTF8StringPtr entityId);

		[PreserveSig]
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x211E2C4", Offset = "0x211E2C4", VA = "0x211E2C4")]
		internal static extern uint PartyEndpointGetEndpointStatistics(PARTY_ENDPOINT_HANDLE endpoint, uint targetEndpointCount, IntPtr targetEndpoints, uint statisticCount, PARTY_ENDPOINT_STATISTIC[] statisticTypes, ulong[] statisticValues);

		[PreserveSig]
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x211E390", Offset = "0x211E390", VA = "0x211E390")]
		internal unsafe static extern uint PartyEndpointGetProperty(PARTY_ENDPOINT_HANDLE endpoint, byte[] key, [Out] PARTY_DATA_BUFFER* value);

		[PreserveSig]
		[Token(Token = "0x600122B")]
		[Address(RVA = "0x211E434", Offset = "0x211E434", VA = "0x211E434")]
		internal static extern uint PartyEndpointGetNetwork(PARTY_ENDPOINT_HANDLE endpoint, [Out] PARTY_NETWORK_HANDLE network);

		[PreserveSig]
		[Token(Token = "0x600122C")]
		[Address(RVA = "0x211E4C0", Offset = "0x211E4C0", VA = "0x211E4C0")]
		internal static extern uint PartyEndpointFlushMessages(PARTY_ENDPOINT_HANDLE endpoint, uint targetEndpointCount, IntPtr targetEndpoints);

		[PreserveSig]
		[Token(Token = "0x600122D")]
		[Address(RVA = "0x211E554", Offset = "0x211E554", VA = "0x211E554")]
		internal static extern uint PartyEndpointGetLocalUser(PARTY_ENDPOINT_HANDLE endpoint, [Out] PARTY_LOCAL_USER_HANDLE localUser);

		[PreserveSig]
		[Token(Token = "0x600122E")]
		[Address(RVA = "0x211E5E0", Offset = "0x211E5E0", VA = "0x211E5E0")]
		internal static extern uint PartyEndpointSetProperties(PARTY_ENDPOINT_HANDLE endpoint, uint propertyCount, [In] UTF8StringPtr[] keys, [In] PARTY_DATA_BUFFER[] values);

		[PreserveSig]
		[Token(Token = "0x600122F")]
		[Address(RVA = "0x211E694", Offset = "0x211E694", VA = "0x211E694")]
		internal static extern uint PartyNetworkSetProperties(PARTY_NETWORK_HANDLE network, uint propertyCount, [In] UTF8StringPtr[] keys, [In] PARTY_DATA_BUFFER[] values);

		[PreserveSig]
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x211E748", Offset = "0x211E748", VA = "0x211E748")]
		internal static extern uint PartyNetworkLeaveNetwork(PARTY_NETWORK_HANDLE network, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001231")]
		[Address(RVA = "0x211E7D4", Offset = "0x211E7D4", VA = "0x211E7D4")]
		internal unsafe static extern uint PartyNetworkCreateInvitation(PARTY_NETWORK_HANDLE network, PARTY_LOCAL_USER_HANDLE localUser, PARTY_INVITATION_CONFIGURATION* invitationConfiguration, IntPtr asyncIdentifier, [Out] PARTY_INVITATION_HANDLE invitation);

		[PreserveSig]
		[Token(Token = "0x6001232")]
		[Address(RVA = "0x211E880", Offset = "0x211E880", VA = "0x211E880")]
		internal static extern uint PartyNetworkGetNetworkConfiguration(PARTY_NETWORK_HANDLE network, [Out] IntPtr networkConfiguration);

		[PreserveSig]
		[Token(Token = "0x6001233")]
		[Address(RVA = "0x211E90C", Offset = "0x211E90C", VA = "0x211E90C")]
		internal unsafe static extern uint PartySerializeNetworkDescriptor(PARTY_NETWORK_DESCRIPTOR* networkDescriptor, IntPtr serializedNetworkDescriptorString);

		[PreserveSig]
		[Token(Token = "0x6001234")]
		[Address(RVA = "0x211E998", Offset = "0x211E998", VA = "0x211E998")]
		internal static extern uint PartyDeserializeNetworkDescriptor(byte[] serializedNetworkDescriptorString, [Out] PARTY_NETWORK_DESCRIPTOR networkDescriptor);

		[PreserveSig]
		[Token(Token = "0x6001235")]
		[Address(RVA = "0x211EA2C", Offset = "0x211EA2C", VA = "0x211EA2C")]
		internal static extern uint PartyNetworkDestroyEndpoint(PARTY_NETWORK_HANDLE network, PARTY_ENDPOINT_HANDLE localEndpoint, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001236")]
		[Address(RVA = "0x211EAC0", Offset = "0x211EAC0", VA = "0x211EAC0")]
		internal static extern uint PartyNetworkDisconnectChatControl(PARTY_NETWORK_HANDLE network, PARTY_CHAT_CONTROL_HANDLE chatControl, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001237")]
		[Address(RVA = "0x211EB54", Offset = "0x211EB54", VA = "0x211EB54")]
		internal static extern uint PartyNetworkGetCustomContext(PARTY_NETWORK_HANDLE network, [Out] IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x6001238")]
		[Address(RVA = "0x211EBE0", Offset = "0x211EBE0", VA = "0x211EBE0")]
		internal static extern uint PartyNetworkGetDevices(PARTY_NETWORK_HANDLE network, [Out] uint deviceCount, [Out] IntPtr devices);

		[PreserveSig]
		[Token(Token = "0x6001239")]
		[Address(RVA = "0x211EC74", Offset = "0x211EC74", VA = "0x211EC74")]
		internal static extern uint PartyNetworkSetCustomContext(PARTY_NETWORK_HANDLE network, IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x600123A")]
		[Address(RVA = "0x211ED00", Offset = "0x211ED00", VA = "0x211ED00")]
		internal static extern uint PartyNetworkKickUser(PARTY_NETWORK_HANDLE network, byte[] targetEntityId, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x600123B")]
		[Address(RVA = "0x211ED9C", Offset = "0x211ED9C", VA = "0x211ED9C")]
		internal unsafe static extern uint PartyNetworkGetPropertyKeys(PARTY_NETWORK_HANDLE network, [Out] uint propertyCount, [Out] UTF8StringPtr* keys);

		[PreserveSig]
		[Token(Token = "0x600123C")]
		[Address(RVA = "0x211EE3C", Offset = "0x211EE3C", VA = "0x211EE3C")]
		internal static extern uint PartyNetworkConnectChatControl(PARTY_NETWORK_HANDLE network, PARTY_CHAT_CONTROL_HANDLE chatControl, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x600123D")]
		[Address(RVA = "0x211EED0", Offset = "0x211EED0", VA = "0x211EED0")]
		internal static extern uint PartyNetworkRevokeInvitation(PARTY_NETWORK_HANDLE network, PARTY_LOCAL_USER_HANDLE localUser, PARTY_INVITATION_HANDLE invitation, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x600123E")]
		[Address(RVA = "0x211EF74", Offset = "0x211EF74", VA = "0x211EF74")]
		internal static extern uint PartyNetworkGetChatControls(PARTY_NETWORK_HANDLE network, [Out] uint chatControlCount, [Out] IntPtr chatControls);

		[PreserveSig]
		[Token(Token = "0x600123F")]
		[Address(RVA = "0x211F008", Offset = "0x211F008", VA = "0x211F008")]
		internal static extern uint PartyNetworkFindEndpointByUniqueIdentifier(PARTY_NETWORK_HANDLE network, ushort uniqueIdentifier, [Out] PARTY_ENDPOINT_HANDLE endpoint);

		[PreserveSig]
		[Token(Token = "0x6001240")]
		[Address(RVA = "0x211F09C", Offset = "0x211F09C", VA = "0x211F09C")]
		internal static extern uint PartyNetworkGetLocalUsers(PARTY_NETWORK_HANDLE network, [Out] uint userCount, [Out] IntPtr users);

		[PreserveSig]
		[Token(Token = "0x6001241")]
		[Address(RVA = "0x211F130", Offset = "0x211F130", VA = "0x211F130")]
		internal static extern uint PartyNetworkCreateEndpoint(PARTY_NETWORK_HANDLE network, PARTY_LOCAL_USER_HANDLE localUser, uint propertyCount, IntPtr keys, IntPtr values, IntPtr asyncIdentifier, [Out] PARTY_ENDPOINT_HANDLE endpoint);

		[PreserveSig]
		[Token(Token = "0x6001242")]
		[Address(RVA = "0x211F1F4", Offset = "0x211F1F4", VA = "0x211F1F4")]
		internal static extern uint PartyNetworkGetInvitations(PARTY_NETWORK_HANDLE network, [Out] uint invitationCount, [Out] IntPtr invitations);

		[PreserveSig]
		[Token(Token = "0x6001243")]
		[Address(RVA = "0x211F288", Offset = "0x211F288", VA = "0x211F288")]
		internal static extern uint PartyNetworkGetEndpoints(PARTY_NETWORK_HANDLE network, [Out] uint endpointCount, [Out] IntPtr endpoints);

		[PreserveSig]
		[Token(Token = "0x6001244")]
		[Address(RVA = "0x211F318", Offset = "0x211F318", VA = "0x211F318")]
		internal unsafe static extern uint PartyNetworkGetProperty(PARTY_NETWORK_HANDLE network, byte[] key, [Out] PARTY_DATA_BUFFER* value);

		[PreserveSig]
		[Token(Token = "0x6001245")]
		[Address(RVA = "0x211F3C0", Offset = "0x211F3C0", VA = "0x211F3C0")]
		internal static extern uint PartyNetworkKickDevice(PARTY_NETWORK_HANDLE network, PARTY_DEVICE_HANDLE targetDevice, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001246")]
		[Address(RVA = "0x211F454", Offset = "0x211F454", VA = "0x211F454")]
		internal static extern uint PartyNetworkGetNetworkStatistics(PARTY_NETWORK_HANDLE network, uint statisticCount, PARTY_NETWORK_STATISTIC[] statisticTypes, ulong[] statisticValues);

		[PreserveSig]
		[Token(Token = "0x6001247")]
		[Address(RVA = "0x211F508", Offset = "0x211F508", VA = "0x211F508")]
		internal static extern uint PartyNetworkGetNetworkDescriptor(PARTY_NETWORK_HANDLE network, [Out] PARTY_NETWORK_DESCRIPTOR networkDescriptor);

		[PreserveSig]
		[Token(Token = "0x6001248")]
		[Address(RVA = "0x211F594", Offset = "0x211F594", VA = "0x211F594")]
		internal static extern uint PartyNetworkRemoveLocalUser(PARTY_NETWORK_HANDLE network, PARTY_LOCAL_USER_HANDLE localUser, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001249")]
		[Address(RVA = "0x211F628", Offset = "0x211F628", VA = "0x211F628")]
		internal static extern uint PartyNetworkAuthenticateLocalUser(PARTY_NETWORK_HANDLE network, PARTY_LOCAL_USER_HANDLE localUser, byte[] invitationIdentifier, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x600124A")]
		[Address(RVA = "0x211F6D4", Offset = "0x211F6D4", VA = "0x211F6D4")]
		internal static extern uint PartyInitialize(byte[] titleId, [Out] PARTY_HANDLE handle);

		[PreserveSig]
		[Token(Token = "0x600124B")]
		[Address(RVA = "0x211F768", Offset = "0x211F768", VA = "0x211F768")]
		internal static extern uint PartyCleanup(PARTY_HANDLE handle);

		[PreserveSig]
		[Token(Token = "0x600124C")]
		[Address(RVA = "0x211F7E4", Offset = "0x211F7E4", VA = "0x211F7E4")]
		internal static extern uint PartyCreateLocalUser(PARTY_HANDLE handle, byte[] entityId, byte[] titlePlayerEntityToken, [Out] PARTY_LOCAL_USER_HANDLE localUser);

		[PreserveSig]
		[Token(Token = "0x600124D")]
		[Address(RVA = "0x211F898", Offset = "0x211F898", VA = "0x211F898")]
		internal unsafe static extern uint PartyCreateNewNetwork(PARTY_HANDLE handle, PARTY_LOCAL_USER_HANDLE localUser, PARTY_NETWORK_CONFIGURATION* networkConfiguration, uint regionCount, IntPtr regions, PARTY_INVITATION_CONFIGURATION* initialInvitationConfiguration, IntPtr asyncIdentifier, [Out] PARTY_NETWORK_DESCRIPTOR networkDescriptor, IntPtr appliedInitialInvitationIdentifier);

		[PreserveSig]
		[Token(Token = "0x600124E")]
		[Address(RVA = "0x211F974", Offset = "0x211F974", VA = "0x211F974")]
		internal static extern uint PartyGetNetworks(PARTY_HANDLE handle, [Out] uint networkCount, [Out] IntPtr networks);

		[PreserveSig]
		[Token(Token = "0x600124F")]
		[Address(RVA = "0x211FA08", Offset = "0x211FA08", VA = "0x211FA08")]
		internal static extern uint PartyInvitationGetCreatorEntityId(PARTY_INVITATION_HANDLE invitation, [Out] UTF8StringPtr entityId);

		[PreserveSig]
		[Token(Token = "0x6001250")]
		[Address(RVA = "0x211FA94", Offset = "0x211FA94", VA = "0x211FA94")]
		internal static extern uint PartySynchronizeMessagesBetweenEndpoints(PARTY_HANDLE handle, uint endpointCount, [In] PARTY_ENDPOINT_HANDLE[] endpoints, PARTY_SYNCHRONIZE_MESSAGES_BETWEEN_ENDPOINTS_OPTIONS options, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x6001251")]
		[Address(RVA = "0x211FB48", Offset = "0x211FB48", VA = "0x211FB48")]
		internal static extern uint PartyInvitationSetCustomContext(PARTY_INVITATION_HANDLE invitation, IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x6001252")]
		[Address(RVA = "0x211FBD4", Offset = "0x211FBD4", VA = "0x211FBD4")]
		internal static extern uint PartyGetChatControls(PARTY_HANDLE handle, [Out] uint chatControlCount, [Out] IntPtr chatControls);

		[PreserveSig]
		[Token(Token = "0x6001253")]
		[Address(RVA = "0x211FC68", Offset = "0x211FC68", VA = "0x211FC68")]
		internal static extern uint PartyInvitationGetInvitationConfiguration(PARTY_INVITATION_HANDLE invitation, [Out] IntPtr configuration);

		[PreserveSig]
		[Token(Token = "0x6001254")]
		[Address(RVA = "0x211FCF4", Offset = "0x211FCF4", VA = "0x211FCF4")]
		internal static extern uint PartyInvitationGetCustomContext(PARTY_INVITATION_HANDLE invitation, [Out] IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x6001255")]
		[Address(RVA = "0x211FD80", Offset = "0x211FD80", VA = "0x211FD80")]
		internal static extern uint PartyFinishProcessingStateChanges(PARTY_HANDLE handle, uint stateChangeCount, IntPtr stateChanges);

		[PreserveSig]
		[Token(Token = "0x6001256")]
		[Address(RVA = "0x211FE14", Offset = "0x211FE14", VA = "0x211FE14")]
		internal static extern uint PartySetOption(IntPtr Object, PARTY_OPTION option, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001257")]
		[Address(RVA = "0x211FEA8", Offset = "0x211FEA8", VA = "0x211FEA8")]
		internal static extern uint PartyLocalUserGetEntityId(PARTY_LOCAL_USER_HANDLE localUser, [Out] UTF8StringPtr entityId);

		[PreserveSig]
		[Token(Token = "0x6001258")]
		[Address(RVA = "0x211FF34", Offset = "0x211FF34", VA = "0x211FF34")]
		internal unsafe static extern uint PartyConnectToNetwork(PARTY_HANDLE handle, PARTY_NETWORK_DESCRIPTOR* networkDescriptor, IntPtr asyncIdentifier, [Out] PARTY_NETWORK_HANDLE network);

		[PreserveSig]
		[Token(Token = "0x6001259")]
		[Address(RVA = "0x211FFD8", Offset = "0x211FFD8", VA = "0x211FFD8")]
		internal static extern uint PartyGetRegions(PARTY_HANDLE handle, [Out] uint regionListCount, [Out] IntPtr regionList);

		[PreserveSig]
		[Token(Token = "0x600125A")]
		[Address(RVA = "0x212006C", Offset = "0x212006C", VA = "0x212006C")]
		internal static extern uint PartyLocalUserUpdateEntityToken(PARTY_LOCAL_USER_HANDLE localUser, byte[] titlePlayerEntityToken);

		[PreserveSig]
		[Token(Token = "0x600125B")]
		[Address(RVA = "0x2120100", Offset = "0x2120100", VA = "0x2120100")]
		internal static extern uint PartyDestroyLocalUser(PARTY_HANDLE handle, PARTY_LOCAL_USER_HANDLE localUser, IntPtr asyncIdentifier);

		[PreserveSig]
		[Token(Token = "0x600125C")]
		[Address(RVA = "0x2120194", Offset = "0x2120194", VA = "0x2120194")]
		internal static extern uint PartySetThreadAffinityMask(PARTY_THREAD_ID threadId, ulong threadAffinityMask);

		[PreserveSig]
		[Token(Token = "0x600125D")]
		[Address(RVA = "0x2120220", Offset = "0x2120220", VA = "0x2120220")]
		internal static extern uint PartyGetOption(IntPtr Object, PARTY_OPTION option, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600125E")]
		[Address(RVA = "0x21202B4", Offset = "0x21202B4", VA = "0x21202B4")]
		internal static extern uint PartyLocalUserGetCustomContext(PARTY_LOCAL_USER_HANDLE localUser, [Out] IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x600125F")]
		[Address(RVA = "0x2120340", Offset = "0x2120340", VA = "0x2120340")]
		internal static extern uint PartyGetErrorMessage(uint error, [Out] UTF8StringPtr errorMessage);

		[PreserveSig]
		[Token(Token = "0x6001260")]
		[Address(RVA = "0x21203CC", Offset = "0x21203CC", VA = "0x21203CC")]
		internal static extern uint PartyGetThreadAffinityMask(PARTY_THREAD_ID threadId, [Out] ulong threadAffinityMask);

		[PreserveSig]
		[Token(Token = "0x6001261")]
		[Address(RVA = "0x2120458", Offset = "0x2120458", VA = "0x2120458")]
		internal static extern uint PartyStartProcessingStateChanges(PARTY_HANDLE handle, [Out] uint stateChangeCount, [Out] IntPtr stateChanges);

		[PreserveSig]
		[Token(Token = "0x6001262")]
		[Address(RVA = "0x21204EC", Offset = "0x21204EC", VA = "0x21204EC")]
		internal static extern uint PartyGetLocalDevice(PARTY_HANDLE handle, [Out] PARTY_DEVICE_HANDLE localDevice);

		[PreserveSig]
		[Token(Token = "0x6001263")]
		[Address(RVA = "0x2120578", Offset = "0x2120578", VA = "0x2120578")]
		internal static extern uint PartyLocalUserSetCustomContext(PARTY_LOCAL_USER_HANDLE localUser, IntPtr customContext);

		[PreserveSig]
		[Token(Token = "0x6001264")]
		[Address(RVA = "0x2120604", Offset = "0x2120604", VA = "0x2120604")]
		internal static extern uint PartyGetLocalUsers(PARTY_HANDLE handle, [Out] uint userCount, [Out] IntPtr users);

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x2120698", Offset = "0x2120698", VA = "0x2120698")]
		public PFPInterop()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	internal struct PARTY_AUDIO_FORMAT
	{
		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly uint samplesPerSecond;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly uint channelMask;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly ushort channelCount;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		internal readonly ushort bitsPerSample;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal readonly PARTY_AUDIO_SAMPLE_TYPE sampleType;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly byte interleaved;

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x21137A0", Offset = "0x21137A0", VA = "0x21137A0")]
		internal PARTY_AUDIO_FORMAT(PartyCSharpSDK.PARTY_AUDIO_FORMAT publicObject)
		{
		}
	}
	[Token(Token = "0x20003A7")]
	internal struct PARTY_AUDIO_MANIPULATION_SINK_STREAM_CONFIGURATION
	{
		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_AUDIO_FORMAT format;

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x2113894", Offset = "0x2113894", VA = "0x2113894")]
		internal PARTY_AUDIO_MANIPULATION_SINK_STREAM_CONFIGURATION(PartyCSharpSDK.PARTY_AUDIO_MANIPULATION_SINK_STREAM_CONFIGURATION publicObject)
		{
		}
	}
	[Token(Token = "0x20003A8")]
	internal struct PARTY_AUDIO_MANIPULATION_SOURCE_STREAM_CONFIGURATION
	{
		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_AUDIO_FORMAT format;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal readonly uint maxTotalAudioBufferSizeInMilliseconds;

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x21139AC", Offset = "0x21139AC", VA = "0x21139AC")]
		internal PARTY_AUDIO_MANIPULATION_SOURCE_STREAM_CONFIGURATION(PartyCSharpSDK.PARTY_AUDIO_MANIPULATION_SOURCE_STREAM_CONFIGURATION publicObject)
		{
		}
	}
	[Token(Token = "0x20003A9")]
	internal struct PARTY_CHAT_CONTROL_HANDLE
	{
		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IntPtr handle;
	}
	[Token(Token = "0x20003AA")]
	internal struct PARTY_DATA_BUFFER
	{
		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly IntPtr buffer;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint bufferByteCount;

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x21151F4", Offset = "0x21151F4", VA = "0x21151F4")]
		internal PARTY_DATA_BUFFER(byte[] publicObject, DisposableCollection disposableCollection)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x2115314", Offset = "0x2115314", VA = "0x2115314")]
		internal PARTY_DATA_BUFFER(IntPtr bufferPtr, uint bufferSize)
		{
		}
	}
	[Token(Token = "0x20003AB")]
	internal struct PARTY_DEVICE_HANDLE
	{
		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IntPtr handle;
	}
	[Token(Token = "0x20003AC")]
	internal struct PARTY_ENDPOINT_HANDLE
	{
		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly IntPtr handle;
	}
	[Token(Token = "0x20003AD")]
	internal struct PARTY_HANDLE
	{
		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly IntPtr handle;

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x2116188", Offset = "0x2116188", VA = "0x2116188")]
		internal PARTY_HANDLE(long handleValue)
		{
		}
	}
	[Token(Token = "0x20003AE")]
	internal struct PARTY_INVITATION_CONFIGURATION
	{
		[Serializable]
		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2072C", Offset = "0xB2072C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, DisposableCollection, UTF8StringPtr> <>9__5_0;

			[Token(Token = "0x600126F")]
			[Address(RVA = "0x1FFFF18", Offset = "0x1FFFF18", VA = "0x1FFFF18")]
			public <>c()
			{
			}

			[Token(Token = "0x6001270")]
			[Address(RVA = "0x1FFFF20", Offset = "0x1FFFF20", VA = "0x1FFFF20")]
			internal UTF8StringPtr <.ctor>b__5_0(string x, DisposableCollection d)
			{
				return default(UTF8StringPtr);
			}
		}

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly UTF8StringPtr identifier;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_INVITATION_REVOCABILITY revocability;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal readonly uint entityIdCount;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private unsafe readonly UTF8StringPtr* entityIds;

		[Token(Token = "0x600126C")]
		internal T[] GetEntityIds<T>(Func<UTF8StringPtr, T> ctor)
		{
			return null;
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x2116464", Offset = "0x2116464", VA = "0x2116464")]
		internal PARTY_INVITATION_CONFIGURATION(PartyCSharpSDK.PARTY_INVITATION_CONFIGURATION publicObject, DisposableCollection disposableCollection)
		{
		}
	}
	[Token(Token = "0x20003B0")]
	internal struct PARTY_INVITATION_HANDLE
	{
		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IntPtr handle;
	}
	[Token(Token = "0x20003B1")]
	internal struct PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION
	{
		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_OPTIONS options;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly ushort port;

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x2116EBC", Offset = "0x2116EBC", VA = "0x2116EBC")]
		internal PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION(PartyCSharpSDK.PARTY_LOCAL_UDP_SOCKET_BIND_ADDRESS_CONFIGURATION publicObject)
		{
		}
	}
	[Token(Token = "0x20003B2")]
	internal struct PARTY_LOCAL_USER_HANDLE
	{
		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IntPtr handle;
	}
	[Token(Token = "0x20003B3")]
	internal struct PARTY_MUTABLE_DATA_BUFFER
	{
		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly IntPtr buffer;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint bufferByteCount;

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x21171DC", Offset = "0x21171DC", VA = "0x21171DC")]
		internal PARTY_MUTABLE_DATA_BUFFER(PartyCSharpSDK.PARTY_MUTABLE_DATA_BUFFER publicObject)
		{
		}
	}
	[Token(Token = "0x20003B4")]
	internal struct PARTY_NETWORK_CONFIGURATION
	{
		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly uint maxUserCount;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly uint maxDeviceCount;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint maxUsersPerDeviceCount;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal readonly uint maxDevicesPerUserCount;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly uint maxEndpointsPerDeviceCount;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal readonly PARTY_DIRECT_PEER_CONNECTIVITY_OPTIONS directPeerConnectivityOptions;

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x211726C", Offset = "0x211726C", VA = "0x211726C")]
		internal PARTY_NETWORK_CONFIGURATION(PartyCSharpSDK.PARTY_NETWORK_CONFIGURATION publicObject)
		{
		}
	}
	[Token(Token = "0x20003B5")]
	internal struct PARTY_NETWORK_DESCRIPTOR
	{
		[Token(Token = "0x20003B6")]
		[UnsafeValueType]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2073C", Offset = "0xB2073C")]
		public struct <networkIdentifier>e__FixedBuffer
		{
			[Token(Token = "0x4001552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte FixedElementField;
		}

		[Token(Token = "0x20003B7")]
		[UnsafeValueType]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20774", Offset = "0xB20774")]
		public struct <regionName>e__FixedBuffer
		{
			[Token(Token = "0x4001553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte FixedElementField;
		}

		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB207AC", Offset = "0xB207AC")]
		[UnsafeValueType]
		public struct <opaqueConnectionInformation>e__FixedBuffer
		{
			[Token(Token = "0x4001554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte FixedElementField;
		}

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FixedBufferAttribute", RVA = "0xB26DFC", Offset = "0xB26DFC")]
		private <networkIdentifier>e__FixedBuffer networkIdentifier;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "FixedBufferAttribute", RVA = "0xB26E68", Offset = "0xB26E68")]
		private <regionName>e__FixedBuffer regionName;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "FixedBufferAttribute", RVA = "0xB26ED4", Offset = "0xB26ED4")]
		private <opaqueConnectionInformation>e__FixedBuffer opaqueConnectionInformation;

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x2117468", Offset = "0x2117468", VA = "0x2117468")]
		internal string GetNetworkIdentifier()
		{
			return null;
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x2117474", Offset = "0x2117474", VA = "0x2117474")]
		internal string GetRegionName()
		{
			return null;
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x2117484", Offset = "0x2117484", VA = "0x2117484")]
		internal byte[] GetOpaqueConnectionInformation()
		{
			return null;
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x2117558", Offset = "0x2117558", VA = "0x2117558")]
		internal PARTY_NETWORK_DESCRIPTOR(PartyCSharpSDK.PARTY_NETWORK_DESCRIPTOR publicObject)
		{
		}
	}
	[Token(Token = "0x20003B9")]
	internal struct PARTY_NETWORK_HANDLE
	{
		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IntPtr handle;
	}
	[Token(Token = "0x20003BA")]
	internal struct PARTY_REGION
	{
		[Token(Token = "0x20003BB")]
		[UnsafeValueType]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB207E4", Offset = "0xB207E4")]
		public struct <regionName>e__FixedBuffer
		{
			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte FixedElementField;
		}

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FixedBufferAttribute", RVA = "0xB26F40", Offset = "0xB26F40")]
		private <regionName>e__FixedBuffer regionName;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal readonly uint roundTripLatencyInMilliseconds;

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x21179C4", Offset = "0x21179C4", VA = "0x21179C4")]
		internal string GetRegionName()
		{
			return null;
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x21179E0", Offset = "0x21179E0", VA = "0x21179E0")]
		internal PARTY_REGION(PartyCSharpSDK.PARTY_REGION publicObject)
		{
		}
	}
	[Token(Token = "0x20003BC")]
	internal struct PARTY_SEND_MESSAGE_QUEUING_CONFIGURATION
	{
		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly sbyte priority;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly uint identityForCancelFilters;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint timeoutInMilliseconds;

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x2118194", Offset = "0x2118194", VA = "0x2118194")]
		internal PARTY_SEND_MESSAGE_QUEUING_CONFIGURATION(PartyCSharpSDK.PARTY_SEND_MESSAGE_QUEUING_CONFIGURATION publicObject)
		{
		}
	}
	[Token(Token = "0x20003BD")]
	internal struct PARTY_STATE_CHANGE
	{
		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE_TYPE stateChangeType;
	}
	[Token(Token = "0x20003BE")]
	internal struct PARTY_REGIONS_CHANGED_STATE_CHANGE
	{
		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;
	}
	[Token(Token = "0x20003BF")]
	internal struct PARTY_CREATE_NEW_NETWORK_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_LOCAL_USER_HANDLE localUser;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_NETWORK_CONFIGURATION networkConfiguration;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal readonly uint regionCount;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal readonly IntPtr regions;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal readonly IntPtr asyncIdentifier;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal readonly PARTY_NETWORK_DESCRIPTOR networkDescriptor;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal readonly IntPtr appliedInitialInvitationIdentifier;
	}
	[Token(Token = "0x20003C0")]
	internal struct PARTY_CONNECT_TO_NETWORK_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal readonly PARTY_NETWORK_DESCRIPTOR networkDescriptor;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal readonly IntPtr asyncIdentifier;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal readonly PARTY_NETWORK_HANDLE network;
	}
	[Token(Token = "0x20003C1")]
	internal struct PARTY_AUTHENTICATE_LOCAL_USER_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_LOCAL_USER_HANDLE localUser;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr invitationIdentifier;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003C2")]
	internal struct PARTY_NETWORK_CONFIGURATION_MADE_AVAILABLE_STATE_CHANGE
	{
		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly IntPtr networkConfiguration;
	}
	[Token(Token = "0x20003C3")]
	internal struct PARTY_NETWORK_DESCRIPTOR_CHANGED_STATE_CHANGE
	{
		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;
	}
	[Token(Token = "0x20003C4")]
	internal struct PARTY_LOCAL_USER_REMOVED_STATE_CHANGE
	{
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_LOCAL_USER_HANDLE localUser;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_LOCAL_USER_REMOVED_REASON removedReason;
	}
	[Token(Token = "0x20003C5")]
	internal struct PARTY_REMOVE_LOCAL_USER_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_LOCAL_USER_HANDLE localUser;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003C6")]
	internal struct PARTY_DESTROY_LOCAL_USER_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_LOCAL_USER_HANDLE localUser;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003C7")]
	internal struct PARTY_LOCAL_USER_KICKED_STATE_CHANGE
	{
		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_LOCAL_USER_HANDLE localUser;
	}
	[Token(Token = "0x20003C8")]
	internal struct PARTY_CREATE_ENDPOINT_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_LOCAL_USER_HANDLE localUser;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly PARTY_ENDPOINT_HANDLE localEndpoint;
	}
	[Token(Token = "0x20003C9")]
	internal struct PARTY_DESTROY_ENDPOINT_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_ENDPOINT_HANDLE localEndpoint;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003CA")]
	internal struct PARTY_ENDPOINT_CREATED_STATE_CHANGE
	{
		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_ENDPOINT_HANDLE endpoint;
	}
	[Token(Token = "0x20003CB")]
	internal struct PARTY_ENDPOINT_DESTROYED_STATE_CHANGE
	{
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_ENDPOINT_HANDLE endpoint;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_DESTROYED_REASON reason;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal readonly uint errorDetail;
	}
	[Token(Token = "0x20003CC")]
	internal struct PARTY_REMOTE_DEVICE_CREATED_STATE_CHANGE
	{
		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_DEVICE_HANDLE device;
	}
	[Token(Token = "0x20003CD")]
	internal struct PARTY_REMOTE_DEVICE_DESTROYED_STATE_CHANGE
	{
		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_DEVICE_HANDLE device;
	}
	[Token(Token = "0x20003CE")]
	internal struct PARTY_REMOTE_DEVICE_JOINED_NETWORK_STATE_CHANGE
	{
		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_DEVICE_HANDLE device;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;
	}
	[Token(Token = "0x20003CF")]
	internal struct PARTY_REMOTE_DEVICE_LEFT_NETWORK_STATE_CHANGE
	{
		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_DESTROYED_REASON reason;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_DEVICE_HANDLE device;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_NETWORK_HANDLE network;
	}
	[Token(Token = "0x20003D0")]
	internal struct PARTY_DEVICE_PROPERTIES_CHANGED_STATE_CHANGE
	{
		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_DEVICE_HANDLE device;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly uint propertyCount;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr keys;
	}
	[Token(Token = "0x20003D1")]
	internal struct PARTY_LEAVE_NETWORK_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003D2")]
	internal struct PARTY_NETWORK_DESTROYED_STATE_CHANGE
	{
		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_DESTROYED_REASON reason;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;
	}
	[Token(Token = "0x20003D3")]
	internal struct PARTY_ENDPOINT_MESSAGE_RECEIVED_STATE_CHANGE
	{
		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_ENDPOINT_HANDLE senderEndpoint;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly uint receiverEndpointCount;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr receiverEndpoints;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly PARTY_MESSAGE_RECEIVED_OPTIONS options;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal readonly uint messageSize;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal readonly IntPtr messageBuffer;
	}
	[Token(Token = "0x20003D4")]
	internal struct PARTY_DATA_BUFFERS_RETURNED_STATE_CHANGE
	{
		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_ENDPOINT_HANDLE localSenderEndpoint;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly uint dataBufferCount;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr dataBuffers;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly IntPtr messageIdentifier;
	}
	[Token(Token = "0x20003D5")]
	internal struct PARTY_ENDPOINT_PROPERTIES_CHANGED_STATE_CHANGE
	{
		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_ENDPOINT_HANDLE endpoint;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly uint propertyCount;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr keys;
	}
	[Token(Token = "0x20003D6")]
	internal struct PARTY_SYNCHRONIZE_MESSAGES_BETWEEN_ENDPOINTS_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly uint endpointCount;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly IntPtr endpoints;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_SYNCHRONIZE_MESSAGES_BETWEEN_ENDPOINTS_OPTIONS options;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003D7")]
	internal struct PARTY_CREATE_INVITATION_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_LOCAL_USER_HANDLE localUser;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly PARTY_INVITATION_HANDLE invitation;
	}
	[Token(Token = "0x20003D8")]
	internal struct PARTY_REVOKE_INVITATION_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_LOCAL_USER_HANDLE localUser;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly PARTY_INVITATION_HANDLE invitation;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003D9")]
	internal struct PARTY_INVITATION_CREATED_STATE_CHANGE
	{
		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_INVITATION_HANDLE invitation;
	}
	[Token(Token = "0x20003DA")]
	internal struct PARTY_INVITATION_DESTROYED_STATE_CHANGE
	{
		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_INVITATION_HANDLE invitation;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_DESTROYED_REASON reason;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal readonly uint errorDetail;
	}
	[Token(Token = "0x20003DB")]
	internal struct PARTY_NETWORK_PROPERTIES_CHANGED_STATE_CHANGE
	{
		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly uint propertyCount;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr keys;
	}
	[Token(Token = "0x20003DC")]
	internal struct PARTY_KICK_DEVICE_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_DEVICE_HANDLE kickedDevice;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003DD")]
	internal struct PARTY_KICK_USER_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr kickedEntityId;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003DE")]
	internal struct PARTY_CREATE_CHAT_CONTROL_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_DEVICE_HANDLE localDevice;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_LOCAL_USER_HANDLE localUser;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr languageCode;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly IntPtr asyncIdentifier;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;
	}
	[Token(Token = "0x20003DF")]
	internal struct PARTY_DESTROY_CHAT_CONTROL_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_DEVICE_HANDLE localDevice;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003E0")]
	internal struct PARTY_CHAT_CONTROL_CREATED_STATE_CHANGE
	{
		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE chatControl;
	}
	[Token(Token = "0x20003E1")]
	internal struct PARTY_CHAT_CONTROL_DESTROYED_STATE_CHANGE
	{
		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE chatControl;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_DESTROYED_REASON reason;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal readonly uint errorDetail;
	}
	[Token(Token = "0x20003E2")]
	internal struct PARTY_SET_CHAT_AUDIO_ENCODER_BITRATE_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly uint bitrate;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003E3")]
	internal struct PARTY_CHAT_TEXT_RECEIVED_STATE_CHANGE
	{
		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE senderChatControl;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly uint receiverChatControlCount;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr receiverChatControls;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr languageCode;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly IntPtr chatText;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal readonly uint dataSize;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal readonly IntPtr data;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal readonly uint translationCount;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal readonly IntPtr translations;
	}
	[Token(Token = "0x20003E4")]
	internal struct PARTY_VOICE_CHAT_TRANSCRIPTION_RECEIVED_STATE_CHANGE
	{
		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE senderChatControl;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly uint receiverChatControlCount;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr receiverChatControls;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly PARTY_AUDIO_SOURCE_TYPE sourceType;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal readonly IntPtr languageCode;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal readonly IntPtr transcription;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal readonly PARTY_VOICE_CHAT_TRANSCRIPTION_PHRASE_TYPE type;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal readonly uint translationCount;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal readonly IntPtr translations;
	}
	[Token(Token = "0x20003E5")]
	internal struct PARTY_SET_CHAT_AUDIO_INPUT_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr audioDeviceSelectionContext;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003E6")]
	internal struct PARTY_SET_CHAT_AUDIO_OUTPUT_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_AUDIO_DEVICE_SELECTION_TYPE audioDeviceSelectionType;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr audioDeviceSelectionContext;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003E7")]
	internal struct PARTY_LOCAL_CHAT_AUDIO_INPUT_CHANGED_STATE_CHANGE
	{
		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_AUDIO_INPUT_STATE state;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal readonly uint errorDetail;
	}
	[Token(Token = "0x20003E8")]
	internal struct PARTY_LOCAL_CHAT_AUDIO_OUTPUT_CHANGED_STATE_CHANGE
	{
		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_AUDIO_OUTPUT_STATE state;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal readonly uint errorDetail;
	}
	[Token(Token = "0x20003E9")]
	internal struct PARTY_SET_TEXT_TO_SPEECH_PROFILE_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE type;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr profileIdentifier;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003EA")]
	internal struct PARTY_SYNTHESIZE_TEXT_TO_SPEECH_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_SYNTHESIZE_TEXT_TO_SPEECH_TYPE type;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr textToSynthesize;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003EB")]
	internal struct PARTY_SET_LANGUAGE_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr languageCode;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003EC")]
	internal struct PARTY_SET_TRANSCRIPTION_OPTIONS_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_VOICE_CHAT_TRANSCRIPTION_OPTIONS options;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003ED")]
	internal struct PARTY_SET_TEXT_CHAT_OPTIONS_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_TEXT_CHAT_OPTIONS options;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003EE")]
	internal struct PARTY_CHAT_CONTROL_PROPERTIES_CHANGED_STATE_CHANGE
	{
		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE chatControl;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly uint propertyCount;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr keys;
	}
	[Token(Token = "0x20003EF")]
	internal struct PARTY_CHAT_CONTROL_JOINED_NETWORK_STATE_CHANGE
	{
		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE chatControl;
	}
	[Token(Token = "0x20003F0")]
	internal struct PARTY_CHAT_CONTROL_LEFT_NETWORK_STATE_CHANGE
	{
		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_DESTROYED_REASON reason;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE chatControl;
	}
	[Token(Token = "0x20003F1")]
	internal struct PARTY_CONNECT_CHAT_CONTROL_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003F2")]
	internal struct PARTY_DISCONNECT_CHAT_CONTROL_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_NETWORK_HANDLE network;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003F3")]
	internal struct PARTY_POPULATE_AVAILABLE_TEXT_TO_SPEECH_PROFILES_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003F4")]
	internal struct PARTY_CONFIGURE_AUDIO_MANIPULATION_VOICE_STREAM_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE chatControl;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr configuration;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003F5")]
	internal struct PARTY_CONFIGURE_AUDIO_MANIPULATION_CAPTURE_STREAM_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr configuration;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[Token(Token = "0x20003F6")]
	internal struct PARTY_CONFIGURE_AUDIO_MANIPULATION_RENDER_STREAM_COMPLETED_STATE_CHANGE
	{
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly uint errorDetail;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_CHAT_CONTROL_HANDLE localChatControl;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr configuration;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly IntPtr asyncIdentifier;
	}
	[StructLayout(2)]
	[Token(Token = "0x20003F7")]
	internal struct PARTY_STATE_CHANGE_UNION
	{
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE stateChange;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_REGIONS_CHANGED_STATE_CHANGE regionsChanged;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CREATE_NEW_NETWORK_COMPLETED_STATE_CHANGE createNewNetworkCompleted;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CONNECT_TO_NETWORK_COMPLETED_STATE_CHANGE connectToNetworkCompleted;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_AUTHENTICATE_LOCAL_USER_COMPLETED_STATE_CHANGE authenticateLocalUserCompleted;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_NETWORK_CONFIGURATION_MADE_AVAILABLE_STATE_CHANGE networkConfigurationMadeAvailable;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_NETWORK_DESCRIPTOR_CHANGED_STATE_CHANGE networkDescriptorChanged;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_LOCAL_USER_REMOVED_STATE_CHANGE localUserRemoved;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_REMOVE_LOCAL_USER_COMPLETED_STATE_CHANGE removeLocalUserCompleted;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_DESTROY_LOCAL_USER_COMPLETED_STATE_CHANGE destroyLocalUserCompleted;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_LOCAL_USER_KICKED_STATE_CHANGE localUserKicked;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CREATE_ENDPOINT_COMPLETED_STATE_CHANGE createEndpointCompleted;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_DESTROY_ENDPOINT_COMPLETED_STATE_CHANGE destroyEndpointCompleted;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_ENDPOINT_CREATED_STATE_CHANGE endpointCreated;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_ENDPOINT_DESTROYED_STATE_CHANGE endpointDestroyed;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_REMOTE_DEVICE_CREATED_STATE_CHANGE remoteDeviceCreated;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_REMOTE_DEVICE_DESTROYED_STATE_CHANGE remoteDeviceDestroyed;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_REMOTE_DEVICE_JOINED_NETWORK_STATE_CHANGE remoteDeviceJoinedNetwork;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_REMOTE_DEVICE_LEFT_NETWORK_STATE_CHANGE remoteDeviceLeftNetwork;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_DEVICE_PROPERTIES_CHANGED_STATE_CHANGE devicePropertiesChanged;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_LEAVE_NETWORK_COMPLETED_STATE_CHANGE leaveNetworkCompleted;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_NETWORK_DESTROYED_STATE_CHANGE networkDestroyed;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_ENDPOINT_MESSAGE_RECEIVED_STATE_CHANGE endpointMessageReceived;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_DATA_BUFFERS_RETURNED_STATE_CHANGE dataBuffersReturned;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_ENDPOINT_PROPERTIES_CHANGED_STATE_CHANGE endpointPropertiesChanged;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_SYNCHRONIZE_MESSAGES_BETWEEN_ENDPOINTS_COMPLETED_STATE_CHANGE synchronizeMessagesBetweenEndpointsCompleted;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CREATE_INVITATION_COMPLETED_STATE_CHANGE createInvitationCompleted;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_REVOKE_INVITATION_COMPLETED_STATE_CHANGE revokeInvitationCompleted;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_INVITATION_CREATED_STATE_CHANGE invitationCreated;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_INVITATION_DESTROYED_STATE_CHANGE invitationDestroyed;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_NETWORK_PROPERTIES_CHANGED_STATE_CHANGE networkPropertiesChanged;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_KICK_DEVICE_COMPLETED_STATE_CHANGE kickDeviceCompleted;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_KICK_USER_COMPLETED_STATE_CHANGE kickUserCompleted;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CREATE_CHAT_CONTROL_COMPLETED_STATE_CHANGE createChatControlCompleted;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_DESTROY_CHAT_CONTROL_COMPLETED_STATE_CHANGE destroyChatControlCompleted;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CHAT_CONTROL_CREATED_STATE_CHANGE chatControlCreated;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CHAT_CONTROL_DESTROYED_STATE_CHANGE chatControlDestroyed;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_SET_CHAT_AUDIO_ENCODER_BITRATE_COMPLETED_STATE_CHANGE setChatAudioEncoderBitrateCompleted;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CHAT_TEXT_RECEIVED_STATE_CHANGE chatTextReceived;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_VOICE_CHAT_TRANSCRIPTION_RECEIVED_STATE_CHANGE voiceChatTranscriptionReceived;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_SET_CHAT_AUDIO_INPUT_COMPLETED_STATE_CHANGE setChatAudioInputCompleted;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_SET_CHAT_AUDIO_OUTPUT_COMPLETED_STATE_CHANGE setChatAudioOutputCompleted;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_LOCAL_CHAT_AUDIO_INPUT_CHANGED_STATE_CHANGE localChatAudioInputChanged;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_LOCAL_CHAT_AUDIO_OUTPUT_CHANGED_STATE_CHANGE localChatAudioOutputChanged;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_SET_TEXT_TO_SPEECH_PROFILE_COMPLETED_STATE_CHANGE setTextToSpeechProfileCompleted;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_SYNTHESIZE_TEXT_TO_SPEECH_COMPLETED_STATE_CHANGE synthesizeTextToSpeechCompleted;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_SET_LANGUAGE_COMPLETED_STATE_CHANGE setLanguageCompleted;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_SET_TRANSCRIPTION_OPTIONS_COMPLETED_STATE_CHANGE setTranscriptionOptionsCompleted;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_SET_TEXT_CHAT_OPTIONS_COMPLETED_STATE_CHANGE setTextChatOptionsCompleted;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CHAT_CONTROL_PROPERTIES_CHANGED_STATE_CHANGE chatControlPropertiesChanged;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CHAT_CONTROL_JOINED_NETWORK_STATE_CHANGE chatControlJoinedNetwork;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CHAT_CONTROL_LEFT_NETWORK_STATE_CHANGE chatControlLeftNetwork;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CONNECT_CHAT_CONTROL_COMPLETED_STATE_CHANGE connectChatControlCompleted;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_DISCONNECT_CHAT_CONTROL_COMPLETED_STATE_CHANGE disconnectChatControlCompleted;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_POPULATE_AVAILABLE_TEXT_TO_SPEECH_PROFILES_COMPLETED_STATE_CHANGE populateAvailableTextToSpeechProfilesCompleted;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CONFIGURE_AUDIO_MANIPULATION_VOICE_STREAM_COMPLETED_STATE_CHANGE configureAudioManipulationVoiceStreamCompleted;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CONFIGURE_AUDIO_MANIPULATION_CAPTURE_STREAM_COMPLETED_STATE_CHANGE configureAudioManipulationCaptureStreamCompleted;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_CONFIGURE_AUDIO_MANIPULATION_RENDER_STREAM_COMPLETED_STATE_CHANGE configureAudioManipulationRenderStreamCompleted;
	}
	[Token(Token = "0x20003F8")]
	internal struct PARTY_TEXT_TO_SPEECH_PROFILE_HANDLE
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IntPtr handle;
	}
	[Token(Token = "0x20003F9")]
	internal struct PARTY_TRANSLATION
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly PARTY_STATE_CHANGE_RESULT result;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal readonly uint errorDetail;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal readonly IntPtr languageCode;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly PARTY_TRANSLATION_RECEIVED_OPTIONS options;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly IntPtr translation;
	}
}
namespace emotitron
{
	[Token(Token = "0x20003FA")]
	public enum TestEnum
	{
		[Token(Token = "0x40016CF")]
		None,
		[Token(Token = "0x40016D0")]
		Some,
		[Token(Token = "0x40016D1")]
		SomeMore,
		[Token(Token = "0x40016D2")]
		All
	}
	[Token(Token = "0x20003FB")]
	[AttributeAttribute(Name = "PackObjectAttribute", RVA = "0xB2081C", Offset = "0xB2081C")]
	public class TestPackObject : NetComponent, IOnPreSimulate, IOnInterpolate
	{
		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SyncHalfFloatAttribute", RVA = "0xB26FAC", Offset = "0xB26FAC")]
		public float rotation;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SyncRangedIntAttribute", RVA = "0xB2702C", Offset = "0xB2702C")]
		public int intoroboto;

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x204DB58", Offset = "0x204DB58", VA = "0x204DB58")]
		public void RotationHook(float newrot, float oldrot)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x204DB94", Offset = "0x204DB94", VA = "0x204DB94")]
		public void SnapshotHook(float snap, float targ)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x204DB98", Offset = "0x204DB98", VA = "0x204DB98", Slot = "27")]
		public void OnPreSimulate(int frameId, int subFrameId)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x204DC1C", Offset = "0x204DC1C", VA = "0x204DC1C")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x204DC20", Offset = "0x204DC20", VA = "0x204DC20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x204DC24", Offset = "0x204DC24", VA = "0x204DC24", Slot = "28")]
		public bool OnInterpolate(int snapFrameId, int targFrameId, float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x204DC80", Offset = "0x204DC80", VA = "0x204DC80")]
		public TestPackObject()
		{
		}
	}
}
namespace emotitron.Utilities
{
	[Token(Token = "0x20003FC")]
	public enum MarkerType
	{
		[Token(Token = "0x40016D6")]
		None,
		[Token(Token = "0x40016D7")]
		Custom,
		[Token(Token = "0x40016D8")]
		Default,
		[Token(Token = "0x40016D9")]
		Player,
		[Token(Token = "0x40016DA")]
		NPC
	}
	[Serializable]
	[Token(Token = "0x20003FD")]
	public struct MarkerNameType
	{
		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public MarkerType type;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[HideInInspector]
		public int hash;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] enumNames;

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x21AB858", Offset = "0x21AB858", VA = "0x21AB858")]
		public MarkerNameType(MarkerType vitalType)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x21AB98C", Offset = "0x21AB98C", VA = "0x21AB98C")]
		public MarkerNameType(string name)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x21ABA40", Offset = "0x21ABA40", VA = "0x21ABA40", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003FE")]
	public static class NameTypeUtils
	{
		[Token(Token = "0x6001286")]
		[Address(RVA = "0x2252BFC", Offset = "0x2252BFC", VA = "0x2252BFC")]
		public static int GetVitalTypeForName(string name, string[] enumNames)
		{
			return default(int);
		}
	}
}
namespace emotitron.Utilities.Networking
{
	[Token(Token = "0x20003FF")]
	public class AutoDestroyWrongNetLib : MonoBehaviour
	{
		[Token(Token = "0x2000400")]
		public enum NetLib
		{
			[Token(Token = "0x40016E1")]
			UNET,
			[Token(Token = "0x40016E2")]
			PUN,
			[Token(Token = "0x40016E3")]
			PUN2,
			[Token(Token = "0x40016E4")]
			PUNAndPUN2
		}

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public NetLib netLib;

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x22C9010", Offset = "0x22C9010", VA = "0x22C9010")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x22C909C", Offset = "0x22C909C", VA = "0x22C909C")]
		public AutoDestroyWrongNetLib()
		{
		}
	}
}
namespace emotitron.Utilities.GUIUtilities
{
	[Token(Token = "0x2000401")]
	public class ShowIfInterfaceAttribute : PropertyAttribute
	{
		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Type type;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string tooltip;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly float min;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly float max;

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x24A1C74", Offset = "0x24A1C74", VA = "0x24A1C74")]
		public ShowIfInterfaceAttribute(Type type, string tooltip)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x24A1CC4", Offset = "0x24A1CC4", VA = "0x24A1CC4")]
		public ShowIfInterfaceAttribute(Type type, string tooltip, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xB20850", Offset = "0xB20850")]
	public class ValueTypeAttribute : PropertyAttribute
	{
		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string labeltag;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float width;

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x2645F7C", Offset = "0x2645F7C", VA = "0x2645F7C")]
		public ValueTypeAttribute(string labeltag, float width = 48f)
		{
		}
	}
}
namespace emotitron.Utilities.Example
{
	[Token(Token = "0x2000403")]
	public class BasicController : MonoBehaviour
	{
		[Token(Token = "0x2000404")]
		public enum Timing
		{
			[Token(Token = "0x4001706")]
			Auto,
			[Token(Token = "0x4001707")]
			Fixed,
			[Token(Token = "0x4001708")]
			Update,
			[Token(Token = "0x4001709")]
			LateUpdate
		}

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhotonView pv;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rb;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody2D rb2D;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public TransformCrusher TransformCrusherRef;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TransformCrusher tc;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Timing timing;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool moveRelative;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB2709C", Offset = "0xB2709C")]
		public KeyCode moveLeft;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public KeyCode moveRight;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KeyCode moveFwd;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public KeyCode moveBwd;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public KeyCode moveUp;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public KeyCode moveDn;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB270AC", Offset = "0xB270AC")]
		public KeyCode pitchPos;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public KeyCode pitchNeg;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public KeyCode yawPos;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public KeyCode yawNeg;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public KeyCode rollPos;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public KeyCode rollNeg;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB270BC", Offset = "0xB270BC")]
		public bool clampToCrusher;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float moveSpeed;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float turnSpeed;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float moveForce;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float turnForce;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float scaleSpeed;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isMine;

		[Token(Token = "0x1700024E")]
		private bool IsMine
		{
			[Token(Token = "0x600128D")]
			[Address(RVA = "0x22CBD50", Offset = "0x22CBD50", VA = "0x22CBD50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x22CBC84", Offset = "0x22CBC84", VA = "0x22CBC84")]
		private void Awake()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x22CBDF0", Offset = "0x22CBDF0", VA = "0x22CBDF0")]
		private void Start()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x22CBF8C", Offset = "0x22CBF8C", VA = "0x22CBF8C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x22CC78C", Offset = "0x22CC78C", VA = "0x22CC78C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x22CC81C", Offset = "0x22CC81C", VA = "0x22CC81C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x22CC830", Offset = "0x22CC830", VA = "0x22CC830")]
		private void SumKeys([Out] Vector3 move, [Out] Vector3 turn)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x22CC01C", Offset = "0x22CC01C", VA = "0x22CC01C")]
		private void Apply()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x22CCB10", Offset = "0x22CCB10", VA = "0x22CCB10")]
		public BasicController()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x2000405")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x22CA89C", Offset = "0x22CA89C", VA = "0x22CA89C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x22CA9BC", Offset = "0x22CA9BC", VA = "0x22CA9BC")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x22CAB6C", Offset = "0x22CAB6C", VA = "0x22CAB6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x22CAB8C", Offset = "0x22CAB8C", VA = "0x22CAB8C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x22CAC54", Offset = "0x22CAC54", VA = "0x22CAC54", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x22CACA8", Offset = "0x22CACA8", VA = "0x22CACA8")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x22CF67C", Offset = "0x22CF67C", VA = "0x22CF67C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x22CF680", Offset = "0x22CF680", VA = "0x22CF680")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x22CF6F0", Offset = "0x22CF6F0", VA = "0x22CF6F0")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x22CF760", Offset = "0x22CF760", VA = "0x22CF760")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x22CF7D0", Offset = "0x22CF7D0", VA = "0x22CF7D0")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x22CF840", Offset = "0x22CF840", VA = "0x22CF840")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x22CF8B0", Offset = "0x22CF8B0", VA = "0x22CF8B0")]
		public void Update()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x22CF8B4", Offset = "0x22CF8B4", VA = "0x22CF8B4")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x2000408")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4001715")]
			Hardware,
			[Token(Token = "0x4001716")]
			Touch
		}

		[Token(Token = "0x2000409")]
		public class VirtualAxis
		{
			[Token(Token = "0x4001717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB270CC", Offset = "0xB270CC")]
			private string <name>k__BackingField;

			[Token(Token = "0x4001718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x4001719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB270DC", Offset = "0xB270DC")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x17000250")]
			public string name
			{
				[Token(Token = "0x60012BC")]
				[Address(RVA = "0x2345AA8", Offset = "0x2345AA8", VA = "0x2345AA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DA4", Offset = "0xB30DA4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012BD")]
				[Address(RVA = "0x2345AB0", Offset = "0x2345AB0", VA = "0x2345AB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DB4", Offset = "0xB30DB4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000251")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x60012BE")]
				[Address(RVA = "0x2345AB8", Offset = "0x2345AB8", VA = "0x2345AB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DC4", Offset = "0xB30DC4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60012BF")]
				[Address(RVA = "0x2345AC0", Offset = "0x2345AC0", VA = "0x2345AC0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DD4", Offset = "0xB30DD4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000252")]
			public float GetValue
			{
				[Token(Token = "0x60012C4")]
				[Address(RVA = "0x2345BD0", Offset = "0x2345BD0", VA = "0x2345BD0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000253")]
			public float GetValueRaw
			{
				[Token(Token = "0x60012C5")]
				[Address(RVA = "0x2345BD8", Offset = "0x2345BD8", VA = "0x2345BD8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60012C0")]
			[Address(RVA = "0x2345ACC", Offset = "0x2345ACC", VA = "0x2345ACC")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x60012C1")]
			[Address(RVA = "0x2345B0C", Offset = "0x2345B0C", VA = "0x2345B0C")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x60012C2")]
			[Address(RVA = "0x2345B58", Offset = "0x2345B58", VA = "0x2345B58")]
			public void Remove()
			{
			}

			[Token(Token = "0x60012C3")]
			[Address(RVA = "0x2345BC8", Offset = "0x2345BC8", VA = "0x2345BC8")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x200040A")]
		public class VirtualButton
		{
			[Token(Token = "0x400171A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB270EC", Offset = "0xB270EC")]
			private string <name>k__BackingField;

			[Token(Token = "0x400171B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB270FC", Offset = "0xB270FC")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x400171C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x400171D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x400171E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x17000254")]
			public string name
			{
				[Token(Token = "0x60012C6")]
				[Address(RVA = "0x2345BE0", Offset = "0x2345BE0", VA = "0x2345BE0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DE4", Offset = "0xB30DE4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60012C7")]
				[Address(RVA = "0x2345BE8", Offset = "0x2345BE8", VA = "0x2345BE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30DF4", Offset = "0xB30DF4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000255")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x60012C8")]
				[Address(RVA = "0x2345BF0", Offset = "0x2345BF0", VA = "0x2345BF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E04", Offset = "0xB30E04")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60012C9")]
				[Address(RVA = "0x2345BF8", Offset = "0x2345BF8", VA = "0x2345BF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E14", Offset = "0xB30E14")]
				private set
				{
				}
			}

			[Token(Token = "0x17000256")]
			public bool GetButton
			{
				[Token(Token = "0x60012CF")]
				[Address(RVA = "0x2345D74", Offset = "0x2345D74", VA = "0x2345D74")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000257")]
			public bool GetButtonDown
			{
				[Token(Token = "0x60012D0")]
				[Address(RVA = "0x2345D7C", Offset = "0x2345D7C", VA = "0x2345D7C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000258")]
			public bool GetButtonUp
			{
				[Token(Token = "0x60012D1")]
				[Address(RVA = "0x2345DAC", Offset = "0x2345DAC", VA = "0x2345DAC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x2345C04", Offset = "0x2345C04", VA = "0x2345C04")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x60012CB")]
			[Address(RVA = "0x2345C4C", Offset = "0x2345C4C", VA = "0x2345C4C")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x2345CA0", Offset = "0x2345CA0", VA = "0x2345CA0")]
			public void Pressed()
			{
			}

			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x2345CD8", Offset = "0x2345CD8", VA = "0x2345CD8")]
			public void Released()
			{
			}

			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x2345D04", Offset = "0x2345D04", VA = "0x2345D04")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x1700024F")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x22064F0", Offset = "0x22064F0", VA = "0x22064F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x2205990", Offset = "0x2205990", VA = "0x2205990")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x2205A60", Offset = "0x2205A60", VA = "0x2205A60")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x2205B10", Offset = "0x2205B10", VA = "0x2205B10")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x2205B90", Offset = "0x2205B90", VA = "0x2205B90")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x2205C10", Offset = "0x2205C10", VA = "0x2205C10")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x2205C90", Offset = "0x2205C90", VA = "0x2205C90")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x2205D10", Offset = "0x2205D10", VA = "0x2205D10")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x2205DD4", Offset = "0x2205DD4", VA = "0x2205DD4")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x2205E54", Offset = "0x2205E54", VA = "0x2205E54")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x2205ED4", Offset = "0x2205ED4", VA = "0x2205ED4")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x2205FCC", Offset = "0x2205FCC", VA = "0x2205FCC")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x2205F40", Offset = "0x2205F40", VA = "0x2205F40")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x2206038", Offset = "0x2206038", VA = "0x2206038")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x22060BC", Offset = "0x22060BC", VA = "0x22060BC")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x2206140", Offset = "0x2206140", VA = "0x2206140")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x22061C4", Offset = "0x22061C4", VA = "0x22061C4")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x2206248", Offset = "0x2206248", VA = "0x2206248")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x22062CC", Offset = "0x22062CC", VA = "0x22062CC")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x2206350", Offset = "0x2206350", VA = "0x2206350")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x22063D4", Offset = "0x22063D4", VA = "0x22063D4")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x2206458", Offset = "0x2206458", VA = "0x2206458")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x2206568", Offset = "0x2206568", VA = "0x2206568")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x22065E8", Offset = "0x22065E8", VA = "0x22065E8")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x2206668", Offset = "0x2206668", VA = "0x2206668")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x23D4724", Offset = "0x23D4724", VA = "0x23D4724")]
		private void Update()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x23D4728", Offset = "0x23D4728", VA = "0x23D4728")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x23D47B0", Offset = "0x23D47B0", VA = "0x23D47B0")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x200040D")]
		public enum AxisOption
		{
			[Token(Token = "0x400172A")]
			Both,
			[Token(Token = "0x400172B")]
			OnlyHorizontal,
			[Token(Token = "0x400172C")]
			OnlyVertical
		}

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x23D48A0", Offset = "0x23D48A0", VA = "0x23D48A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x23D49FC", Offset = "0x23D49FC", VA = "0x23D49FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x23D4A38", Offset = "0x23D4A38", VA = "0x23D4A38")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x23D48A4", Offset = "0x23D48A4", VA = "0x23D48A4")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x23D4A9C", Offset = "0x23D4A9C", VA = "0x23D4A9C", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x23D4BC0", Offset = "0x23D4BC0", VA = "0x23D4BC0", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x23D4C08", Offset = "0x23D4C08", VA = "0x23D4C08", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x23D4C0C", Offset = "0x23D4C0C", VA = "0x23D4C0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x23D4C64", Offset = "0x23D4C64", VA = "0x23D4C64")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x200040E")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x21BB900", Offset = "0x21BB900", VA = "0x21BB900")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x21BB910", Offset = "0x21BB910", VA = "0x21BB910")]
		private void Start()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x21BB908", Offset = "0x21BB908", VA = "0x21BB908")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x21BBA24", Offset = "0x21BBA24", VA = "0x21BBA24")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x21BBCC8", Offset = "0x21BBCC8", VA = "0x21BBCC8")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB20874", Offset = "0xB20874")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x2000410")]
		public enum AxisOption
		{
			[Token(Token = "0x4001740")]
			Both,
			[Token(Token = "0x4001741")]
			OnlyHorizontal,
			[Token(Token = "0x4001742")]
			OnlyVertical
		}

		[Token(Token = "0x2000411")]
		public enum ControlStyle
		{
			[Token(Token = "0x4001744")]
			Absolute,
			[Token(Token = "0x4001745")]
			Relative,
			[Token(Token = "0x4001746")]
			Swipe
		}

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x2055E18", Offset = "0x2055E18", VA = "0x2055E18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x2055F74", Offset = "0x2055F74", VA = "0x2055F74")]
		private void Start()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x2055E1C", Offset = "0x2055E1C", VA = "0x2055E1C")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x2056008", Offset = "0x2056008", VA = "0x2056008")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x2056074", Offset = "0x2056074", VA = "0x2056074", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x20560B0", Offset = "0x20560B0", VA = "0x20560B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x20561F4", Offset = "0x20561F4", VA = "0x20561F4", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x2056228", Offset = "0x2056228", VA = "0x2056228")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x2056328", Offset = "0x2056328", VA = "0x2056328")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2710C", Offset = "0xB2710C")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x17000259")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0x26461C8", Offset = "0x26461C8", VA = "0x26461C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E24", Offset = "0xB30E24")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0x26461D4", Offset = "0x26461D4", VA = "0x26461D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E34", Offset = "0xB30E34")]
			private set
			{
			}
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x26461E0", Offset = "0x26461E0", VA = "0x26461E0")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x2646244", Offset = "0x2646244", VA = "0x2646244")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x26462A8", Offset = "0x26462A8", VA = "0x26462A8")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x2646408", Offset = "0x2646408", VA = "0x2646408")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x2646568", Offset = "0x2646568", VA = "0x2646568")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x2646608", Offset = "0x2646608", VA = "0x2646608")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x26466A8", Offset = "0x26466A8", VA = "0x26466A8")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x264674C", Offset = "0x264674C", VA = "0x264674C")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x2646754", Offset = "0x2646754", VA = "0x2646754")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x264675C", Offset = "0x264675C", VA = "0x264675C")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x60012F8")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x60012F9")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x60012FA")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x60012FB")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x60012FC")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x60012FD")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x60012FE")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x60012FF")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6001300")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6001301")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6001302")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x2646764", Offset = "0x2646764", VA = "0x2646764")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x2000413")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6001304")]
		[Address(RVA = "0x21BBCD0", Offset = "0x21BBCD0", VA = "0x21BBCD0")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x21BBD68", Offset = "0x21BBD68", VA = "0x21BBD68")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x21BBE00", Offset = "0x21BBE00", VA = "0x21BBE00", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x21BBEA4", Offset = "0x21BBEA4", VA = "0x21BBEA4", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x21BBF48", Offset = "0x21BBF48", VA = "0x21BBF48", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x21BBFEC", Offset = "0x21BBFEC", VA = "0x21BBFEC", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x21BC094", Offset = "0x21BC094", VA = "0x21BC094", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x21BC13C", Offset = "0x21BC13C", VA = "0x21BC13C", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x21BC1E0", Offset = "0x21BC1E0", VA = "0x21BC1E0", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x21BC290", Offset = "0x21BC290", VA = "0x21BC290", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x21BC334", Offset = "0x21BC334", VA = "0x21BC334", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x21BC3D8", Offset = "0x21BC3D8", VA = "0x21BC3D8", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x21BC47C", Offset = "0x21BC47C", VA = "0x21BC47C", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x21BC488", Offset = "0x21BC488", VA = "0x21BC488")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6001312")]
		[Address(RVA = "0x27BBFA4", Offset = "0x27BBFA4", VA = "0x27BBFA4", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x27BBFB8", Offset = "0x27BBFB8", VA = "0x27BBFB8", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x27BBFC4", Offset = "0x27BBFC4", VA = "0x27BBFC4", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x27BBFD0", Offset = "0x27BBFD0", VA = "0x27BBFD0", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x27BBFDC", Offset = "0x27BBFDC", VA = "0x27BBFDC", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x27BC030", Offset = "0x27BC030", VA = "0x27BC030", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x27BC084", Offset = "0x27BC084", VA = "0x27BC084", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x27BC0D8", Offset = "0x27BC0D8", VA = "0x27BC0D8", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x27BC12C", Offset = "0x27BC12C", VA = "0x27BC12C", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x27BC180", Offset = "0x27BC180", VA = "0x27BC180", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x27BC1D4", Offset = "0x27BC1D4", VA = "0x27BC1D4", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x27BC1DC", Offset = "0x27BC1DC", VA = "0x27BC1DC")]
		public StandaloneInput()
		{
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x2000415")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB208DC", Offset = "0xB208DC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB208DC", Offset = "0xB208DC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB208DC", Offset = "0xB208DC")]
	public abstract class BaseController : MonoBehaviour
	{
		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x22CB5DC", Offset = "0x22CB5DC", VA = "0x22CB5DC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x22CB658", Offset = "0x22CB658", VA = "0x22CB658", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x22CB6D4", Offset = "0x22CB6D4", VA = "0x22CB6D4", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x22CB788", Offset = "0x22CB788", VA = "0x22CB788", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x22CB82C", Offset = "0x22CB82C", VA = "0x22CB82C", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x22CB8C0", Offset = "0x22CB8C0", VA = "0x22CB8C0", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x22CB970", Offset = "0x22CB970", VA = "0x22CB970", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x22CB9EC", Offset = "0x22CB9EC", VA = "0x22CB9EC", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x22CBB24", Offset = "0x22CBB24", VA = "0x22CBB24", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x22CBBCC", Offset = "0x22CBBCC", VA = "0x22CBBCC", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001328")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x22CBC74", Offset = "0x22CBC74", VA = "0x22CBC74")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB209B4", Offset = "0xB209B4")]
	[DisallowMultipleComponent]
	public class BetterToggle : MonoBehaviour
	{
		[Token(Token = "0x2000417")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x1400002F")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x600132A")]
			[Address(RVA = "0x22CD108", Offset = "0x22CD108", VA = "0x22CD108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E44", Offset = "0xB30E44")]
			add
			{
			}
			[Token(Token = "0x600132B")]
			[Address(RVA = "0x22CD1C4", Offset = "0x22CD1C4", VA = "0x22CD1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E54", Offset = "0xB30E54")]
			remove
			{
			}
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x22CD280", Offset = "0x22CD280", VA = "0x22CD280")]
		private void Start()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x22CD378", Offset = "0x22CD378", VA = "0x22CD378")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x22CD3EC", Offset = "0x22CD3EC", VA = "0x22CD3EC")]
		public BetterToggle()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x22CD3F4", Offset = "0x22CD3F4", VA = "0x22CD3F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E64", Offset = "0xB30E64")]
		private void <Start>b__5_0(bool <p0>)
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class ChangePOV : MonoBehaviour, IMatchmakingCallbacks
	{
		[Token(Token = "0x2000419")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x14000030")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x223DF14", Offset = "0x223DF14", VA = "0x223DF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E74", Offset = "0xB30E74")]
			add
			{
			}
			[Token(Token = "0x6001335")]
			[Address(RVA = "0x223DFD0", Offset = "0x223DFD0", VA = "0x223DFD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E84", Offset = "0xB30E84")]
			remove
			{
			}
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x223E08C", Offset = "0x223E08C", VA = "0x223E08C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x223E208", Offset = "0x223E208", VA = "0x223E208")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x223E384", Offset = "0x223E384", VA = "0x223E384")]
		private void Start()
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x223E5CC", Offset = "0x223E5CC", VA = "0x223E5CC")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x223E6E0", Offset = "0x223E6E0", VA = "0x223E6E0")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x223E880", Offset = "0x223E880", VA = "0x223E880")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x223E888", Offset = "0x223E888", VA = "0x223E888")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x223E6E8", Offset = "0x223E6E8", VA = "0x223E6E8")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x223E890", Offset = "0x223E890", VA = "0x223E890")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x223E944", Offset = "0x223E944", VA = "0x223E944", Slot = "4")]
		public void OnFriendListUpdate(List<Photon.Realtime.FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x223E948", Offset = "0x223E948", VA = "0x223E948", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x223E94C", Offset = "0x223E94C", VA = "0x223E94C", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x223E950", Offset = "0x223E950", VA = "0x223E950", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x223E954", Offset = "0x223E954", VA = "0x223E954", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x223E958", Offset = "0x223E958", VA = "0x223E958", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x223E95C", Offset = "0x223E95C", VA = "0x223E95C", Slot = "10")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x223EA80", Offset = "0x223EA80", VA = "0x223EA80")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class CharacterInstantiation : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x200041B")]
		public enum SpawnSequence
		{
			[Token(Token = "0x400176F")]
			Connection,
			[Token(Token = "0x4001770")]
			Random,
			[Token(Token = "0x4001771")]
			RoundRobin
		}

		[Token(Token = "0x200041C")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SpawnPosition;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PositionOffset;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] PrefabsToInstantiate;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Transform> SpawnPoints;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool AutoSpawn;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool UseRandomOffset;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SpawnSequence Sequence;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private byte manualInstantiationEventCode;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int lastUsedSpawnPointIndex;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool manualInstantiation;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool differentPrefabs;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string localPrefabSuffix;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string remotePrefabSuffix;

		[Token(Token = "0x14000031")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0x223E14C", Offset = "0x223E14C", VA = "0x223E14C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30E94", Offset = "0xB30E94")]
			add
			{
			}
			[Token(Token = "0x600134C")]
			[Address(RVA = "0x223E2C8", Offset = "0x223E2C8", VA = "0x223E2C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30EA4", Offset = "0xB30EA4")]
			remove
			{
			}
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x223EE28", Offset = "0x223EE28", VA = "0x223EE28", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x223F05C", Offset = "0x223F05C", VA = "0x223F05C")]
		private void ManualInstantiation(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x223F5CC", Offset = "0x223F5CC", VA = "0x223F5CC", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x223F930", Offset = "0x223F930", VA = "0x223F930", Slot = "55")]
		protected virtual void GetSpawnPoint([Out] Vector3 spawnPos, [Out] Quaternion spawnRot)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x223FAD8", Offset = "0x223FAD8", VA = "0x223FAD8", Slot = "56")]
		protected virtual Transform GetSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x223FC4C", Offset = "0x223FC4C", VA = "0x223FC4C")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float oldYRotation;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion velRotation;

		[Token(Token = "0x1700025A")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0x287611C", Offset = "0x287611C", VA = "0x287611C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x287613C", Offset = "0x287613C", VA = "0x287613C", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x2876188", Offset = "0x2876188", VA = "0x2876188", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x287621C", Offset = "0x287621C", VA = "0x287621C")]
		private void Update()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x2876220", Offset = "0x2876220", VA = "0x2876220")]
		private void RotateView()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x2876334", Offset = "0x2876334", VA = "0x2876334")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB20A2C", Offset = "0xB20A2C")]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool showSpeakerLag;

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x23D2D7C", Offset = "0x23D2D7C", VA = "0x23D2D7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x23D2E58", Offset = "0x23D2E58", VA = "0x23D2E58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x23D2F34", Offset = "0x23D2F34", VA = "0x23D2F34")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x23D2F40", Offset = "0x23D2F40", VA = "0x23D2F40")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x23D2F60", Offset = "0x23D2F60", VA = "0x23D2F60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x23D30A4", Offset = "0x23D30A4", VA = "0x23D30A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x23D3208", Offset = "0x23D3208", VA = "0x23D3208")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x23D3334", Offset = "0x23D3334", VA = "0x23D3334")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float smoothing;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 offset;

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x2535CF0", Offset = "0x2535CF0", VA = "0x2535CF0", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x2535D28", Offset = "0x2535D28", VA = "0x2535D28", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x2535DA8", Offset = "0x2535DA8", VA = "0x2535DA8", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x2535DD0", Offset = "0x2535DD0", VA = "0x2535DD0")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x2535E9C", Offset = "0x2535E9C", VA = "0x2535E9C")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x2052920", Offset = "0x2052920", VA = "0x2052920", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x2052A40", Offset = "0x2052A40", VA = "0x2052A40")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class VoiceDemoUI : MonoBehaviour
	{
		[Token(Token = "0x2000422")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceNetwork punVoiceNetwork;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text punSwitchText;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text voiceSwitchText;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text calibrateText;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Recorder recorder;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugGO;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool debugMode;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float volumeBeforeMute;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x1700025B")]
		public bool DebugMode
		{
			[Token(Token = "0x600136C")]
			[Address(RVA = "0x1FE1F60", Offset = "0x1FE1F60", VA = "0x1FE1F60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x1FE1F68", Offset = "0x1FE1F68", VA = "0x1FE1F68")]
			set
			{
			}
		}

		[Token(Token = "0x14000032")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x600136E")]
			[Address(RVA = "0x1FE2090", Offset = "0x1FE2090", VA = "0x1FE2090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30EB4", Offset = "0xB30EB4")]
			add
			{
			}
			[Token(Token = "0x600136F")]
			[Address(RVA = "0x1FE214C", Offset = "0x1FE214C", VA = "0x1FE214C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30EC4", Offset = "0xB30EC4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x1FE2208", Offset = "0x1FE2208", VA = "0x1FE2208")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x1FE2280", Offset = "0x1FE2280", VA = "0x1FE2280")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x1FE2518", Offset = "0x1FE2518", VA = "0x1FE2518")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x1FE2774", Offset = "0x1FE2774", VA = "0x1FE2774")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1FE2840", Offset = "0x1FE2840", VA = "0x1FE2840")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1FE2BE8", Offset = "0x1FE2BE8", VA = "0x1FE2BE8")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x1FE2F5C", Offset = "0x1FE2F5C", VA = "0x1FE2F5C")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x1FE2F7C", Offset = "0x1FE2F7C", VA = "0x1FE2F7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x1FE359C", Offset = "0x1FE359C", VA = "0x1FE359C")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x1FE36A0", Offset = "0x1FE36A0", VA = "0x1FE36A0")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x1FE3734", Offset = "0x1FE3734", VA = "0x1FE3734")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x1FE37E8", Offset = "0x1FE37E8", VA = "0x1FE37E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x1FE3A04", Offset = "0x1FE3A04", VA = "0x1FE3A04")]
		private void PunClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x1FE3FE4", Offset = "0x1FE3FE4", VA = "0x1FE3FE4")]
		private void VoiceClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x1FE3B9C", Offset = "0x1FE3B9C", VA = "0x1FE3B9C")]
		private void UpdateUiBasedOnVoiceState(ClientState voiceClientState)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x1FE3FEC", Offset = "0x1FE3FEC", VA = "0x1FE3FEC")]
		public VoiceDemoUI()
		{
		}
	}
}
namespace Photon.Voice.Unity.Demos
{
	[Token(Token = "0x2000423")]
	public class BackgroundMusicController : MonoBehaviour
	{
		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text volumeText;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider volumeSlider;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float initialVolume;

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x22CAD20", Offset = "0x22CAD20", VA = "0x22CAD20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x22CAE1C", Offset = "0x22CAE1C", VA = "0x22CAE1C")]
		private void OnVolumeChanged(float newValue)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x22CAEE4", Offset = "0x22CAEE4", VA = "0x22CAEE4")]
		public BackgroundMusicController()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class SidebarToggle : MonoBehaviour
	{
		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button sidebarButton;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform panelsHolder;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float sidebarWidth;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool sidebarOpen;

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x24A1D2C", Offset = "0x24A1D2C", VA = "0x24A1D2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x24A1E08", Offset = "0x24A1E08", VA = "0x24A1E08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB30ED4", Offset = "0xB30ED4")]
		private void ToggleSidebar()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x24A1DEC", Offset = "0x24A1DEC", VA = "0x24A1DEC")]
		private void ToggleSidebar(bool open)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x24A1E20", Offset = "0x24A1E20", VA = "0x24A1E20")]
		public SidebarToggle()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public static class UiExtensions
	{
		[Token(Token = "0x600138B")]
		[Address(RVA = "0x26401E4", Offset = "0x26401E4", VA = "0x26401E4")]
		public static void SetPosX(this RectTransform rectTransform, float x)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x264023C", Offset = "0x264023C", VA = "0x264023C")]
		public static void SetHeight(this RectTransform rectTransform, float h)
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x2640258", Offset = "0x2640258", VA = "0x2640258")]
		public static void SetValue(this Toggle toggle, bool isOn)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x2640274", Offset = "0x2640274", VA = "0x2640274")]
		public static void SetValue(this Slider slider, float v)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x2640298", Offset = "0x2640298", VA = "0x2640298")]
		public static void SetValue(this InputField inputField, string v)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x26402B0", Offset = "0x26402B0", VA = "0x26402B0")]
		public static void DestroyChildren(this Transform transform)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x26403D4", Offset = "0x26403D4", VA = "0x26403D4")]
		public static void Hide(this CanvasGroup canvasGroup, bool blockRaycasts = false, bool interactable = false)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x2640430", Offset = "0x2640430", VA = "0x2640430")]
		public static void Show(this CanvasGroup canvasGroup, bool blockRaycasts = true, bool interactable = true)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x264048C", Offset = "0x264048C", VA = "0x264048C")]
		public static bool IsHidden(this CanvasGroup canvasGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x26404B4", Offset = "0x26404B4", VA = "0x26404B4")]
		public static bool IsShown(this CanvasGroup canvasGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x26404DC", Offset = "0x26404DC", VA = "0x26404DC")]
		public static void SetSingleOnClickCallback(this Button button, UnityAction action)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x2640524", Offset = "0x2640524", VA = "0x2640524")]
		public static void SetSingleOnValueChangedCallback(this Toggle toggle, UnityAction<bool> action)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x264059C", Offset = "0x264059C", VA = "0x264059C")]
		public static void SetSingleOnValueChangedCallback(this InputField inputField, UnityAction<string> action)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x2640614", Offset = "0x2640614", VA = "0x2640614")]
		public static void SetSingleOnEndEditCallback(this InputField inputField, UnityAction<string> action)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x264068C", Offset = "0x264068C", VA = "0x264068C")]
		public static void SetSingleOnValueChangedCallback(this Dropdown inputField, UnityAction<int> action)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x2640704", Offset = "0x2640704", VA = "0x2640704")]
		public static void SetSingleOnValueChangedCallback(this Slider slider, UnityAction<float> action)
		{
		}
	}
}
namespace Photon.Voice.Unity.Demos.DemoVoiceUI
{
	[Token(Token = "0x2000426")]
	public class CodecSettingsUI : MonoBehaviour
	{
		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Dropdown frameDurationDropdown;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown samplingRateDropdown;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputField bitrateInputField;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<string> frameDurationOptions;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<string> samplingRateOptions;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x2244E70", Offset = "0x2244E70", VA = "0x2244E70")]
		private void Awake()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x22451C4", Offset = "0x22451C4", VA = "0x22451C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x22451F0", Offset = "0x22451F0", VA = "0x22451F0")]
		private void OnBitrateChanged(string newBitrateString)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x224525C", Offset = "0x224525C", VA = "0x224525C")]
		private void OnFrameDurationChanged(int index)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x22452CC", Offset = "0x22452CC", VA = "0x22452CC")]
		private void OnSamplingRateChanged(int index)
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x2245074", Offset = "0x2245074", VA = "0x2245074")]
		private void InitFrameDuration()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x2245104", Offset = "0x2245104", VA = "0x2245104")]
		private void InitSamplingRate()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x2245170", Offset = "0x2245170", VA = "0x2245170")]
		private void InitBitrate()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x224533C", Offset = "0x224533C", VA = "0x224533C")]
		public CodecSettingsUI()
		{
		}
	}
	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB20AA4", Offset = "0xB20AA4")]
	public class DemoVoiceUI : MonoBehaviour, IInRoomCallbacks, IMatchmakingCallbacks
	{
		[Serializable]
		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB20B34", Offset = "0xB20B34")]
		private sealed class <>c
		{
			[Token(Token = "0x40017D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IAudioDesc> <>9__68_0;

			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x2346070", Offset = "0x2346070", VA = "0x2346070")]
			public <>c()
			{
			}

			[Token(Token = "0x60013D8")]
			[Address(RVA = "0x2346078", Offset = "0x2346078", VA = "0x2346078")]
			internal IAudioDesc <ToggleAudioToneFactory>b__68_0()
			{
				return null;
			}
		}

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text connectionStatusText;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text serverStatusText;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text roomStatusText;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text inputWarningText;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text rttText;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text rttVariationText;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text packetLossWarningText;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InputField localNicknameText;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle debugEchoToggle;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle reliableTransmissionToggle;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle encryptionToggle;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject webRtcDspGameObject;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle aecToggle;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle aecHighPassToggle;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InputField reverseStreamDelayInputField;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle noiseSuppressionToggle;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle agcToggle;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Slider agcCompressionGainSlider;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Toggle vadToggle;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Toggle muteToggle;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Toggle streamAudioClipToggle;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Toggle audioToneToggle;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Toggle dspToggle;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Toggle highPassToggle;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Toggle photonVadToggle;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject microphoneSetupGameObject;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private bool defaultTransmitEnabled;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private int screenWidth;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int screenHeight;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool fullScreen;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private InputField roomNameInputField;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private InputField globalMinDelaySoftInputField;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private InputField globalMaxDelaySoftInputField;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private InputField globalMaxDelayHardInputField;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private int rttYellowThreshold;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private int rttRedThreshold;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private int rttVariationYellowThreshold;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private int rttVariationRedThreshold;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GameObject compressionGainGameObject;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Text compressionGainText;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GameObject aecOptionsGameObject;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Transform RemoteVoicesPanel;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VoiceConnection voiceConnection;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private WebRtcAudioDsp voiceAudioPreprocessor;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private ConnectAndJoin connectAndJoin;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private readonly Color warningColor;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private readonly Color okColor;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private readonly Color redColor;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private readonly Color defaultColor;

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x220F28C", Offset = "0x220F28C", VA = "0x220F28C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x220FFE0", Offset = "0x220FFE0", VA = "0x220FFE0", Slot = "16")]
		protected virtual void SetDefaults()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x2210010", Offset = "0x2210010", VA = "0x2210010")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x22100CC", Offset = "0x22100CC", VA = "0x22100CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x220FF34", Offset = "0x220FF34", VA = "0x220FF34")]
		private void GetSavedNickname()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x2210188", Offset = "0x2210188", VA = "0x2210188", Slot = "17")]
		protected virtual void OnSpeakerCreated(Speaker speaker)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x22102CC", Offset = "0x22102CC", VA = "0x22102CC")]
		private void OnRemoteVoiceRemove(Speaker speaker)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x2210390", Offset = "0x2210390", VA = "0x2210390")]
		private void ToggleMute(bool isOn)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x2210400", Offset = "0x2210400", VA = "0x2210400", Slot = "18")]
		protected virtual void ToggleIsRecording(bool isRecording)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x221043C", Offset = "0x221043C", VA = "0x221043C")]
		private void ToggleDebugEcho(bool isOn)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x2210478", Offset = "0x2210478", VA = "0x2210478")]
		private void ToggleReliable(bool isOn)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x22104B4", Offset = "0x22104B4", VA = "0x22104B4")]
		private void ToggleEncryption(bool isOn)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x22104F0", Offset = "0x22104F0", VA = "0x22104F0")]
		private void ToggleAEC(bool isOn)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x2210538", Offset = "0x2210538", VA = "0x2210538")]
		private void ToggleNoiseSuppression(bool isOn)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x221055C", Offset = "0x221055C", VA = "0x221055C")]
		private void ToggleAGC(bool isOn)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x22105A4", Offset = "0x22105A4", VA = "0x22105A4")]
		private void ToggleVAD(bool isOn)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x22105C8", Offset = "0x22105C8", VA = "0x22105C8")]
		private void ToggleHighPass(bool isOn)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x22105EC", Offset = "0x22105EC", VA = "0x22105EC")]
		private void ToggleDsp(bool isOn)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x2210650", Offset = "0x2210650", VA = "0x2210650")]
		private void ToggleAudioClipStreaming(bool isOn)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x2210748", Offset = "0x2210748", VA = "0x2210748")]
		private void ToggleAudioToneFactory(bool isOn)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x2210984", Offset = "0x2210984", VA = "0x2210984")]
		private void TogglePhotonVAD(bool isOn)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x22109C0", Offset = "0x22109C0", VA = "0x22109C0")]
		private void ToggleAecHighPass(bool isOn)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x22109E4", Offset = "0x22109E4", VA = "0x22109E4")]
		private void OnAgcCompressionGainChanged(float agcCompressionGain)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x2210ACC", Offset = "0x2210ACC", VA = "0x2210ACC")]
		private void OnGlobalPlaybackDelayMinSoftChanged(string newMinDelaySoftString)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x2210BA8", Offset = "0x2210BA8", VA = "0x2210BA8")]
		private void OnGlobalPlaybackDelayMaxSoftChanged(string newMaxDelaySoftString)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x2210C80", Offset = "0x2210C80", VA = "0x2210C80")]
		private void OnGlobalPlaybackDelayMaxHardChanged(string newMaxDelayHardString)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x2210D58", Offset = "0x2210D58", VA = "0x2210D58")]
		private void OnReverseStreamDelayChanged(string newReverseStreamString)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x2210DEC", Offset = "0x2210DEC", VA = "0x2210DEC")]
		private void UpdateSyncedNickname(string nickname)
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x2210EA4", Offset = "0x2210EA4", VA = "0x2210EA4")]
		private void JoinOrCreateRoom(string roomName)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x2210FF0", Offset = "0x2210FF0", VA = "0x2210FF0", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x22115A4", Offset = "0x22115A4", VA = "0x22115A4")]
		private void SetTextColor(int textValue, Text text, int yellowThreshold, int redThreshold)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x2211568", Offset = "0x2211568", VA = "0x2211568")]
		private void ResetTextColor(Text text)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x220F444", Offset = "0x220F444", VA = "0x220F444")]
		private void InitUiCallbacks()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x220FACC", Offset = "0x220FACC", VA = "0x220FACC")]
		private void InitUiValues()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x2211624", Offset = "0x2211624", VA = "0x2211624")]
		private void SetRoomDebugText()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x2211900", Offset = "0x2211900", VA = "0x2211900", Slot = "20")]
		protected virtual void OnActorPropertiesChanged(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x2211978", Offset = "0x2211978", VA = "0x2211978", Slot = "4")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x221197C", Offset = "0x221197C", VA = "0x221197C", Slot = "5")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x2211980", Offset = "0x2211980", VA = "0x2211980", Slot = "6")]
		private void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x2211984", Offset = "0x2211984", VA = "0x2211984", Slot = "7")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x2211994", Offset = "0x2211994", VA = "0x2211994", Slot = "8")]
		private void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x2211998", Offset = "0x2211998", VA = "0x2211998", Slot = "9")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate(List<Photon.Realtime.FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x221199C", Offset = "0x221199C", VA = "0x221199C", Slot = "10")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x22119A0", Offset = "0x22119A0", VA = "0x22119A0", Slot = "11")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x22119A4", Offset = "0x22119A4", VA = "0x22119A4", Slot = "12")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x22119A8", Offset = "0x22119A8", VA = "0x22119A8", Slot = "13")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x22119AC", Offset = "0x22119AC", VA = "0x22119AC", Slot = "14")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x22119B0", Offset = "0x22119B0", VA = "0x22119B0", Slot = "15")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x2211A34", Offset = "0x2211A34", VA = "0x2211A34")]
		public DemoVoiceUI()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public struct MicRef
	{
		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder.MicType MicType;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PhotonId;

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x21B9C5C", Offset = "0x21B9C5C", VA = "0x21B9C5C")]
		public MicRef(string name, int id)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x21B9C90", Offset = "0x21B9C90", VA = "0x21B9C90")]
		public MicRef(string name)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x21B9CC0", Offset = "0x21B9CC0", VA = "0x21B9CC0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200042A")]
	public class MicrophoneDropdownFiller : MonoBehaviour
	{
		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<MicRef> micOptions;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown micDropdown;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB2761C", Offset = "0xB2761C")]
		[SerializeField]
		private GameObject refreshButton;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB27668", Offset = "0xB27668")]
		private GameObject toggleButton;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle photonToggle;

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x21B9D18", Offset = "0x21B9D18", VA = "0x21B9D18")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x21B9DB0", Offset = "0x21B9DB0", VA = "0x21B9DB0")]
		private void SetupMicDropdown()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x21BA06C", Offset = "0x21BA06C", VA = "0x21BA06C")]
		private void MicDropdownValueChanged(MicRef mic)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x21BA104", Offset = "0x21BA104", VA = "0x21BA104")]
		private void SetCurrentValue()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x21BA504", Offset = "0x21BA504", VA = "0x21BA504")]
		public void PhotonMicToggled(bool on)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x21B9D8C", Offset = "0x21B9D8C", VA = "0x21B9D8C")]
		public void RefreshMicrophones()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x21BA5A8", Offset = "0x21BA5A8", VA = "0x21BA5A8")]
		private void PhotonVoiceCreated()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x21BA5CC", Offset = "0x21BA5CC", VA = "0x21BA5CC")]
		public MicrophoneDropdownFiller()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x21BA5D4", Offset = "0x21BA5D4", VA = "0x21BA5D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3100C", Offset = "0xB3100C")]
		private void <SetupMicDropdown>b__7_0(int <p0>)
		{
		}
	}
	[Token(Token = "0x200042B")]
	public static class PhotonDemoExtensions
	{
		[Token(Token = "0x40017DD")]
		internal const string IS_MUTED_PROPERTY_KEY = "mute";

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x2018974", Offset = "0x2018974", VA = "0x2018974")]
		public static bool Mute(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x2018A6C", Offset = "0x2018A6C", VA = "0x2018A6C")]
		public static bool Unmute(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x2018B60", Offset = "0x2018B60", VA = "0x2018B60")]
		public static bool IsMuted(this Player player)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB20B54", Offset = "0xB20B54")]
	public class RemoteSpeakerUI : MonoBehaviour, IInRoomCallbacks
	{
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Image remoteIsMuting;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image remoteIsTalking;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputField minDelaySoftInputField;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InputField maxDelaySoftInputField;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputField maxDelayHardInputField;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Speaker speaker;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VoiceConnection voiceConnection;

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x20C353C", Offset = "0x20C353C", VA = "0x20C353C", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x20C3898", Offset = "0x20C3898", VA = "0x20C3898")]
		private void OnMinDelaySoftChanged(string newMinDelaySoftString)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x20C3974", Offset = "0x20C3974", VA = "0x20C3974")]
		private void OnMaxDelaySoftChanged(string newMaxDelaySoftString)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x20C3A4C", Offset = "0x20C3A4C", VA = "0x20C3A4C")]
		private void OnMaxDelayHardChanged(string newMaxDelayHardString)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x20C3B24", Offset = "0x20C3B24", VA = "0x20C3B24")]
		private void Update()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x20C3C08", Offset = "0x20C3C08", VA = "0x20C3C08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x20C3764", Offset = "0x20C3764", VA = "0x20C3764")]
		private void SetNickname()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x20C3854", Offset = "0x20C3854", VA = "0x20C3854")]
		private void SetMutedState()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x20C3C44", Offset = "0x20C3C44", VA = "0x20C3C44", Slot = "10")]
		protected virtual void SetMutedState(bool isMuted)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x20C3C68", Offset = "0x20C3C68", VA = "0x20C3C68", Slot = "11")]
		protected virtual void OnActorPropertiesChanged(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x20C3CC4", Offset = "0x20C3CC4", VA = "0x20C3CC4", Slot = "12")]
		public virtual void Init(VoiceConnection vC)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x20C3D10", Offset = "0x20C3D10", VA = "0x20C3D10", Slot = "4")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x20C3D14", Offset = "0x20C3D14", VA = "0x20C3D14", Slot = "5")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x20C3D18", Offset = "0x20C3D18", VA = "0x20C3D18", Slot = "6")]
		private void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x20C3D1C", Offset = "0x20C3D1C", VA = "0x20C3D1C", Slot = "7")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x20C3D28", Offset = "0x20C3D28", VA = "0x20C3D28", Slot = "8")]
		private void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x20C3D2C", Offset = "0x20C3D2C", VA = "0x20C3D2C")]
		public RemoteSpeakerUI()
		{
		}
	}
}
namespace Photon.Compression
{
	[Token(Token = "0x200042D")]
	public enum SerializationFlags
	{
		[Token(Token = "0x40017E8")]
		None = 0,
		[Token(Token = "0x40017E9")]
		HasContent = 1,
		[Token(Token = "0x40017EA")]
		Force = 2,
		[Token(Token = "0x40017EB")]
		ForceReliable = 4,
		[Token(Token = "0x40017EC")]
		SendToSelf = 8,
		[Token(Token = "0x40017ED")]
		NewConnection = 0x10,
		[Token(Token = "0x40017EE")]
		IsComplete = 0x20
	}
	[Serializable]
	[Token(Token = "0x200042E")]
	public abstract class LiteCrusher
	{
		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected int bits;

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x251ECF4", Offset = "0x251ECF4", VA = "0x251ECF4")]
		public static int GetBitsForMaxValue(uint maxvalue)
		{
			return default(int);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x251ED14", Offset = "0x251ED14", VA = "0x251ED14")]
		protected LiteCrusher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042F")]
	public abstract class LiteCrusher<TComp, T> : LiteCrusher where TComp : struct where T : struct
	{
		[Token(Token = "0x60013FB")]
		public abstract TComp Encode(T val);

		[Token(Token = "0x60013FC")]
		public abstract T Decode(uint val);

		[Token(Token = "0x60013FD")]
		public abstract TComp WriteValue(T val, byte[] buffer, int bitposition);

		[Token(Token = "0x60013FE")]
		public abstract void WriteCValue(uint val, byte[] buffer, int bitposition);

		[Token(Token = "0x60013FF")]
		public abstract T ReadValue(byte[] buffer, int bitposition);

		[Token(Token = "0x6001400")]
		public abstract TComp ReadCValue(byte[] buffer, int bitposition);

		[Token(Token = "0x6001401")]
		protected LiteCrusher()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public enum LiteOutOfBoundsHandling
	{
		[Token(Token = "0x40017F1")]
		Clamp,
		[Token(Token = "0x40017F2")]
		Loop
	}
	[Token(Token = "0x2000431")]
	public enum LiteFloatCompressType
	{
		[Token(Token = "0x40017F4")]
		Bits2 = 2,
		[Token(Token = "0x40017F5")]
		Bits3 = 3,
		[Token(Token = "0x40017F6")]
		Bits4 = 4,
		[Token(Token = "0x40017F7")]
		Bits5 = 5,
		[Token(Token = "0x40017F8")]
		Bits6 = 6,
		[Token(Token = "0x40017F9")]
		Bits7 = 7,
		[Token(Token = "0x40017FA")]
		Bits8 = 8,
		[Token(Token = "0x40017FB")]
		Bits9 = 9,
		[Token(Token = "0x40017FC")]
		Bits10 = 10,
		[Token(Token = "0x40017FD")]
		Bits12 = 12,
		[Token(Token = "0x40017FE")]
		Bits14 = 14,
		[Token(Token = "0x40017FF")]
		Half16 = 16,
		[Token(Token = "0x4001800")]
		Full32 = 32
	}
	[Serializable]
	[Token(Token = "0x2000432")]
	public class LiteFloatCrusher : LiteCrusher<ulong, float>
	{
		[Token(Token = "0x2000433")]
		public enum Normalization
		{
			[Token(Token = "0x400180B")]
			None,
			[Token(Token = "0x400180C")]
			Positive,
			[Token(Token = "0x400180D")]
			Negative
		}

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public Normalization normalization;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected float min;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected float max;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public LiteFloatCompressType compressType;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public LiteOutOfBoundsHandling outOfBoundsHandling;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool accurateCenter;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float encoder;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float decoder;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ulong maxCVal;

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x251ED1C", Offset = "0x251ED1C", VA = "0x251ED1C")]
		public LiteFloatCrusher()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x251EE28", Offset = "0x251EE28", VA = "0x251EE28")]
		public LiteFloatCrusher(LiteFloatCompressType compressType, float min, float max, bool accurateCenter, LiteOutOfBoundsHandling outOfBoundsHandling = LiteOutOfBoundsHandling.Clamp)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x251F134", Offset = "0x251F134", VA = "0x251F134")]
		public LiteFloatCrusher(LiteFloatCompressType compressType, Normalization normalization = Normalization.None, LiteOutOfBoundsHandling outOfBoundsHandling = LiteOutOfBoundsHandling.Clamp)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x251EDB0", Offset = "0x251EDB0", VA = "0x251EDB0")]
		public static void Recalculate(LiteFloatCompressType compressType, float min, float max, bool accurateCenter, LiteFloatCrusher crusher)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x251F220", Offset = "0x251F220", VA = "0x251F220")]
		public static void Recalculate(LiteFloatCompressType compressType, float min, float max, bool accurateCenter, int bits, float encoder, float decoder, ulong maxCVal)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x251F284", Offset = "0x251F284", VA = "0x251F284", Slot = "4")]
		public override ulong Encode(float val)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x251F3DC", Offset = "0x251F3DC", VA = "0x251F3DC", Slot = "5")]
		public override float Decode(uint cval)
		{
			return default(float);
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x251F4BC", Offset = "0x251F4BC", VA = "0x251F4BC", Slot = "6")]
		public override ulong WriteValue(float val, byte[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x251F5AC", Offset = "0x251F5AC", VA = "0x251F5AC", Slot = "7")]
		public override void WriteCValue(uint cval, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x251F5D4", Offset = "0x251F5D4", VA = "0x251F5D4", Slot = "8")]
		public override float ReadValue(byte[] buffer, int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x251F6D0", Offset = "0x251F6D0", VA = "0x251F6D0", Slot = "9")]
		public override ulong ReadCValue(byte[] buffer, int bitposition)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x2000434")]
	public enum LiteIntCompressType
	{
		[Token(Token = "0x400180F")]
		PackSigned,
		[Token(Token = "0x4001810")]
		PackUnsigned,
		[Token(Token = "0x4001811")]
		Range
	}
	[Serializable]
	[Token(Token = "0x2000435")]
	public class LiteIntCrusher : LiteCrusher<uint, int>
	{
		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public LiteIntCompressType compressType;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected int min;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected int max;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int smallest;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int biggest;

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x251F714", Offset = "0x251F714", VA = "0x251F714")]
		public LiteIntCrusher()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x251F7BC", Offset = "0x251F7BC", VA = "0x251F7BC")]
		public LiteIntCrusher(LiteIntCompressType compType = LiteIntCompressType.PackSigned, int min = -128, int max = 127)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x251F868", Offset = "0x251F868", VA = "0x251F868", Slot = "6")]
		public override uint WriteValue(int val, byte[] buffer, int bitposition)
		{
			return default(uint);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x251F91C", Offset = "0x251F91C", VA = "0x251F91C", Slot = "7")]
		public override void WriteCValue(uint cval, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x251F96C", Offset = "0x251F96C", VA = "0x251F96C", Slot = "8")]
		public override int ReadValue(byte[] buffer, int bitposition)
		{
			return default(int);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x251FA0C", Offset = "0x251FA0C", VA = "0x251FA0C", Slot = "9")]
		public override uint ReadCValue(byte[] buffer, int bitposition)
		{
			return default(uint);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x251FA6C", Offset = "0x251FA6C", VA = "0x251FA6C", Slot = "4")]
		public override uint Encode(int value)
		{
			return default(uint);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x251FAA8", Offset = "0x251FAA8", VA = "0x251FAA8", Slot = "5")]
		public override int Decode(uint cvalue)
		{
			return default(int);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x251FAD4", Offset = "0x251FAD4", VA = "0x251FAD4")]
		public static void Recalculate(int min, int max, LiteIntCrusher crusher)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x251F780", Offset = "0x251F780", VA = "0x251F780")]
		public static void Recalculate(int min, int max, int smallest, int biggest, int bits)
		{
		}
	}
	[Token(Token = "0x2000436")]
	public enum NormalizedFloatCompression
	{
		[Token(Token = "0x4001818")]
		Bits2 = 2,
		[Token(Token = "0x4001819")]
		Bits3 = 3,
		[Token(Token = "0x400181A")]
		Bits4 = 4,
		[Token(Token = "0x400181B")]
		Bits5 = 5,
		[Token(Token = "0x400181C")]
		Bits6 = 6,
		[Token(Token = "0x400181D")]
		Bits7 = 7,
		[Token(Token = "0x400181E")]
		Bits8 = 8,
		[Token(Token = "0x400181F")]
		Bits9 = 9,
		[Token(Token = "0x4001820")]
		Bits10 = 10,
		[Token(Token = "0x4001821")]
		Bits12 = 12,
		[Token(Token = "0x4001822")]
		Bits14 = 14,
		[Token(Token = "0x4001823")]
		Half16 = 16,
		[Token(Token = "0x4001824")]
		Full32 = 32
	}
	[Token(Token = "0x2000437")]
	public static class NormCompress
	{
		[Token(Token = "0x2000438")]
		public struct NormCompressCodec
		{
			[Token(Token = "0x4001846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int bits;

			[Token(Token = "0x4001847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly float encoder;

			[Token(Token = "0x4001848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly float decoder;

			[Token(Token = "0x600141C")]
			[Address(RVA = "0x1FFD6D8", Offset = "0x1FFD6D8", VA = "0x1FFD6D8")]
			public NormCompressCodec(int bits, float encoder, float decoder)
			{
			}
		}

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NormCompressCodec[] codecForBit;

		[Token(Token = "0x4001826")]
		private const float NORM_COMP_ENCODE15 = 32767f;

		[Token(Token = "0x4001827")]
		private const float NORM_COMP_DECODE15 = 3.051851E-05f;

		[Token(Token = "0x4001828")]
		private const float NORM_COMP_ENCODE14 = 16383f;

		[Token(Token = "0x4001829")]
		private const float NORM_COMP_DECODE14 = 6.103888E-05f;

		[Token(Token = "0x400182A")]
		private const float NORM_COMP_ENCODE13 = 8191f;

		[Token(Token = "0x400182B")]
		private const float NORM_COMP_DECODE13 = 0.00012208521f;

		[Token(Token = "0x400182C")]
		private const float NORM_COMP_ENCODE12 = 4095f;

		[Token(Token = "0x400182D")]
		private const float NORM_COMP_DECODE12 = 0.00024420026f;

		[Token(Token = "0x400182E")]
		private const float NORM_COMP_ENCODE11 = 2047f;

		[Token(Token = "0x400182F")]
		private const float NORM_COMP_DECODE11 = 0.0004885198f;

		[Token(Token = "0x4001830")]
		private const float NORM_COMP_ENCODE10 = 1023f;

		[Token(Token = "0x4001831")]
		private const float NORM_COMP_DECODE10 = 0.0009775171f;

		[Token(Token = "0x4001832")]
		private const float NORM_COMP_ENCODE9 = 511f;

		[Token(Token = "0x4001833")]
		private const float NORM_COMP_DECODE9 = 0.0019569471f;

		[Token(Token = "0x4001834")]
		private const float NORM_COMP_ENCODE8 = 255f;

		[Token(Token = "0x4001835")]
		private const float NORM_COMP_DECODE8 = 0.003921569f;

		[Token(Token = "0x4001836")]
		private const float NORM_COMP_ENCODE7 = 127f;

		[Token(Token = "0x4001837")]
		private const float NORM_COMP_DECODE7 = 0.003921569f;

		[Token(Token = "0x4001838")]
		private const float NORM_COMP_ENCODE6 = 63f;

		[Token(Token = "0x4001839")]
		private const float NORM_COMP_DECODE6 = 1f / 63f;

		[Token(Token = "0x400183A")]
		private const float NORM_COMP_ENCODE5 = 31f;

		[Token(Token = "0x400183B")]
		private const float NORM_COMP_DECODE5 = 1f / 31f;

		[Token(Token = "0x400183C")]
		private const float NORM_COMP_ENCODE4 = 15f;

		[Token(Token = "0x400183D")]
		private const float NORM_COMP_DECODE4 = 1f / 15f;

		[Token(Token = "0x400183E")]
		private const float NORM_COMP_ENCODE3 = 7f;

		[Token(Token = "0x400183F")]
		private const float NORM_COMP_DECODE3 = 1f / 7f;

		[Token(Token = "0x4001840")]
		private const float NORM_COMP_ENCODE2 = 3f;

		[Token(Token = "0x4001841")]
		private const float NORM_COMP_DECODE2 = 1f / 3f;

		[Token(Token = "0x4001842")]
		private const float NORM_COMP_ENCODE1 = 1f;

		[Token(Token = "0x4001843")]
		private const float NORM_COMP_DECODE1 = 1f;

		[Token(Token = "0x4001844")]
		private const float NORM_COMP_ENCODE0 = 0f;

		[Token(Token = "0x4001845")]
		private const float NORM_COMP_DECODE0 = 0f;

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x252A11C", Offset = "0x252A11C", VA = "0x252A11C")]
		static NormCompress()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x252A250", Offset = "0x252A250", VA = "0x252A250")]
		public static uint CompressNorm(this float value, int bits)
		{
			return default(uint);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x252A3D4", Offset = "0x252A3D4", VA = "0x252A3D4")]
		public static uint WriteNorm(this byte[] buffer, float value, int bitposition, int bits)
		{
			return default(uint);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x252A584", Offset = "0x252A584", VA = "0x252A584")]
		public static float ReadNorm(this byte[] buffer, int bitposition, int bits)
		{
			return default(float);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x252A240", Offset = "0x252A240", VA = "0x252A240")]
		public static uint GetMaxValueForBits(int bitcount)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000439")]
	public enum DefaultKeyRate
	{
		[Token(Token = "0x400184A")]
		Never = 0,
		[Token(Token = "0x400184B")]
		Every = 1,
		[Token(Token = "0x400184C")]
		Every2nd = 2,
		[Token(Token = "0x400184D")]
		Every3rd = 3,
		[Token(Token = "0x400184E")]
		Every4th = 4,
		[Token(Token = "0x400184F")]
		Every5th = 5,
		[Token(Token = "0x4001850")]
		Every10th = 10
	}
	[Token(Token = "0x200043A")]
	public interface IPackObj
	{
	}
	[Token(Token = "0x200043B")]
	public enum DefaultPackInclusion
	{
		[Token(Token = "0x4001852")]
		Explicit,
		[Token(Token = "0x4001853")]
		AllPublic
	}
	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xB20BCC", Offset = "0xB20BCC")]
	public class PackObjectAttribute : Attribute
	{
		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DefaultKeyRate defaultKeyRate;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public DefaultPackInclusion defaultInclusion;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SyncAs syncAs;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string postSnapCallback;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string postApplyCallback;

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x2012344", Offset = "0x2012344", VA = "0x2012344")]
		public PackObjectAttribute(DefaultKeyRate defaultKeyRate = DefaultKeyRate.Every)
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class SyncHalfFloatAttribute : SyncVarBaseAttribute, IPackSingle, IPackDouble
	{
		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly IndicatorBit indicatorBit;

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x27C7DF4", Offset = "0x27C7DF4", VA = "0x27C7DF4")]
		public SyncHalfFloatAttribute(IndicatorBit indicatorBit = IndicatorBit.None, KeyRate keyRate = KeyRate.UseDefault)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x27C7E30", Offset = "0x27C7E30", VA = "0x27C7E30", Slot = "9")]
		public override int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x27C7E44", Offset = "0x27C7E44", VA = "0x27C7E44", Slot = "10")]
		public SerializationFlags Pack(float value, float prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x27C7FB0", Offset = "0x27C7FB0", VA = "0x27C7FB0", Slot = "11")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x27C8084", Offset = "0x27C8084", VA = "0x27C8084", Slot = "12")]
		public SerializationFlags Pack(double value, double prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x27C80B4", Offset = "0x27C80B4", VA = "0x27C80B4", Slot = "13")]
		public SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Token(Token = "0x200043E")]
	public class SyncRangedIntAttribute : SyncVarBaseAttribute, IPackByte, IPackSByte, IPackUInt16, IPackInt16, IPackUInt32, IPackInt32, IPackUInt64, IPackInt64, IPackSingle, IPackDouble
	{
		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int min;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int max;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly int smallest;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int biggest;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly IndicatorBits indicatorBits;

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x27CA8B0", Offset = "0x27CA8B0", VA = "0x27CA8B0")]
		public SyncRangedIntAttribute(int min, int max, IndicatorBits indicatorBits = IndicatorBits.None, KeyRate keyRate = KeyRate.UseDefault)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x27CA920", Offset = "0x27CA920", VA = "0x27CA920", Slot = "9")]
		public override int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x27CA954", Offset = "0x27CA954", VA = "0x27CA954")]
		private SerializationFlags Write(int value, int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x27CAACC", Offset = "0x27CAACC", VA = "0x27CAACC")]
		private int Read(byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(int);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x27CAB98", Offset = "0x27CAB98", VA = "0x27CAB98", Slot = "10")]
		public SerializationFlags Pack(byte value, byte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x27CAC70", Offset = "0x27CAC70", VA = "0x27CAC70", Slot = "11")]
		public SerializationFlags Unpack(byte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x27CACA4", Offset = "0x27CACA4", VA = "0x27CACA4", Slot = "12")]
		public SerializationFlags Pack(sbyte value, sbyte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x27CAD7C", Offset = "0x27CAD7C", VA = "0x27CAD7C", Slot = "13")]
		public SerializationFlags Unpack(sbyte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x27CADB0", Offset = "0x27CADB0", VA = "0x27CADB0", Slot = "14")]
		public SerializationFlags Pack(ushort value, ushort prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x27CAE88", Offset = "0x27CAE88", VA = "0x27CAE88", Slot = "15")]
		public SerializationFlags Unpack(ushort value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x27CAEBC", Offset = "0x27CAEBC", VA = "0x27CAEBC", Slot = "16")]
		public SerializationFlags Pack(short value, short prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x27CAF94", Offset = "0x27CAF94", VA = "0x27CAF94", Slot = "17")]
		public SerializationFlags Unpack(short value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x27CAFC8", Offset = "0x27CAFC8", VA = "0x27CAFC8", Slot = "18")]
		public SerializationFlags Pack(uint value, uint prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x27CB0A0", Offset = "0x27CB0A0", VA = "0x27CB0A0", Slot = "19")]
		public SerializationFlags Unpack(uint value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x27CB0D4", Offset = "0x27CB0D4", VA = "0x27CB0D4", Slot = "20")]
		public SerializationFlags Pack(int value, int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x27CB1AC", Offset = "0x27CB1AC", VA = "0x27CB1AC", Slot = "21")]
		public SerializationFlags Unpack(int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x27CB1E0", Offset = "0x27CB1E0", VA = "0x27CB1E0", Slot = "22")]
		public SerializationFlags Pack(ulong value, ulong prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x27CB2B8", Offset = "0x27CB2B8", VA = "0x27CB2B8", Slot = "23")]
		public SerializationFlags Unpack(ulong value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x27CB2EC", Offset = "0x27CB2EC", VA = "0x27CB2EC", Slot = "24")]
		public SerializationFlags Pack(long value, long prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x27CB3C4", Offset = "0x27CB3C4", VA = "0x27CB3C4", Slot = "25")]
		public SerializationFlags Unpack(long value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x27CB3F8", Offset = "0x27CB3F8", VA = "0x27CB3F8", Slot = "26")]
		public SerializationFlags Pack(float value, float prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x27CB618", Offset = "0x27CB618", VA = "0x27CB618", Slot = "27")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x27CB64C", Offset = "0x27CB64C", VA = "0x27CB64C", Slot = "28")]
		public SerializationFlags Pack(double value, double prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x27CB864", Offset = "0x27CB864", VA = "0x27CB864", Slot = "29")]
		public SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Token(Token = "0x200043F")]
	public class SyncListAttribute : SyncVarBaseAttribute, IPackList<int>
	{
		[Token(Token = "0x600143C")]
		[Address(RVA = "0x27C80E8", Offset = "0x27C80E8", VA = "0x27C80E8", Slot = "10")]
		public SerializationFlags Pack(List<int> value, List<int> prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x27C8284", Offset = "0x27C8284", VA = "0x27C8284", Slot = "11")]
		public SerializationFlags Unpack(List<int> value, BitArray isCompleteMask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x27C83F4", Offset = "0x27C83F4", VA = "0x27C83F4")]
		public SerializationFlags Pack(List<uint> value, List<uint> prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x27C8590", Offset = "0x27C8590", VA = "0x27C8590")]
		public SerializationFlags Unpack(List<uint> value, BitArray isCompleteMask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001440")]
		public static void Copy<T>(List<T> src, List<T> trg, BitArray mask) where T : struct
		{
		}

		[Token(Token = "0x6001441")]
		public static void Capture<T>(List<T> src, List<T> trg) where T : struct
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x27C8700", Offset = "0x27C8700", VA = "0x27C8700")]
		public SyncListAttribute()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class SyncVarAttribute : SyncVarBaseAttribute, IPackByte, IPackSByte, IPackUInt16, IPackInt16, IPackUInt32, IPackInt32, IPackUInt64, IPackInt64, IPackSingle, IPackDouble, IPackString, IPackStringBuilder, IPackVector2, IPackVector3, IPackVector2Int, IPackVector3Int, IPackBoolean, IPackChar
	{
		[Token(Token = "0x400185F")]
		public const int MAX_STR_LEN = 63;

		[Token(Token = "0x4001860")]
		public const int STR_LEN_BITS = 6;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool WholeNumbers;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder sb;

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x204590C", Offset = "0x204590C", VA = "0x204590C")]
		public SyncVarAttribute(KeyRate keyRate = KeyRate.UseDefault)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x2045960", Offset = "0x2045960", VA = "0x2045960", Slot = "9")]
		public override int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x6001445")]
		public bool Compare<T>(List<T> a, List<T> b) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x2046110", Offset = "0x2046110", VA = "0x2046110", Slot = "42")]
		public SerializationFlags Pack(bool value, bool prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x20461E0", Offset = "0x20461E0", VA = "0x20461E0", Slot = "43")]
		public SerializationFlags Unpack(bool value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x2046220", Offset = "0x2046220", VA = "0x2046220", Slot = "10")]
		public SerializationFlags Pack(byte value, byte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x20462E0", Offset = "0x20462E0", VA = "0x20462E0", Slot = "11")]
		public SerializationFlags Unpack(byte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x2046320", Offset = "0x2046320", VA = "0x2046320", Slot = "12")]
		public SerializationFlags Pack(sbyte value, sbyte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x20463E0", Offset = "0x20463E0", VA = "0x20463E0", Slot = "13")]
		public SerializationFlags Unpack(sbyte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x2046420", Offset = "0x2046420", VA = "0x2046420", Slot = "14")]
		public SerializationFlags Pack(ushort value, ushort prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x20464E0", Offset = "0x20464E0", VA = "0x20464E0", Slot = "15")]
		public SerializationFlags Unpack(ushort value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x2046520", Offset = "0x2046520", VA = "0x2046520", Slot = "16")]
		public SerializationFlags Pack(short value, short prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x2046660", Offset = "0x2046660", VA = "0x2046660", Slot = "17")]
		public SerializationFlags Unpack(short value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x20466A0", Offset = "0x20466A0", VA = "0x20466A0", Slot = "44")]
		public SerializationFlags Pack(char value, char prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x2046760", Offset = "0x2046760", VA = "0x2046760", Slot = "45")]
		public SerializationFlags Unpack(char value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x20467A0", Offset = "0x20467A0", VA = "0x20467A0", Slot = "18")]
		public SerializationFlags Pack(uint value, uint prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x2046860", Offset = "0x2046860", VA = "0x2046860", Slot = "19")]
		public SerializationFlags Unpack(uint value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x20468A0", Offset = "0x20468A0", VA = "0x20468A0", Slot = "20")]
		public SerializationFlags Pack(int value, int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x2046960", Offset = "0x2046960", VA = "0x2046960", Slot = "21")]
		public SerializationFlags Unpack(int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x20469A0", Offset = "0x20469A0", VA = "0x20469A0", Slot = "22")]
		public SerializationFlags Pack(ulong value, ulong prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x2046A60", Offset = "0x2046A60", VA = "0x2046A60", Slot = "23")]
		public SerializationFlags Unpack(ulong value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x2046AA0", Offset = "0x2046AA0", VA = "0x2046AA0", Slot = "24")]
		public SerializationFlags Pack(long value, long prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x2046B60", Offset = "0x2046B60", VA = "0x2046B60", Slot = "25")]
		public SerializationFlags Unpack(long value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x2046BA0", Offset = "0x2046BA0", VA = "0x2046BA0", Slot = "26")]
		public SerializationFlags Pack(float value, float prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x2046E20", Offset = "0x2046E20", VA = "0x2046E20", Slot = "27")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x2046E7C", Offset = "0x2046E7C", VA = "0x2046E7C", Slot = "28")]
		public SerializationFlags Pack(double value, double prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x20470E4", Offset = "0x20470E4", VA = "0x20470E4", Slot = "29")]
		public SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x2047140", Offset = "0x2047140", VA = "0x2047140", Slot = "30")]
		public SerializationFlags Pack(string value, string prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x204727C", Offset = "0x204727C", VA = "0x204727C", Slot = "31")]
		public SerializationFlags Unpack(string value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x20473E8", Offset = "0x20473E8", VA = "0x20473E8", Slot = "32")]
		public SerializationFlags Pack(StringBuilder value, StringBuilder prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x204752C", Offset = "0x204752C", VA = "0x204752C", Slot = "33")]
		public SerializationFlags Unpack(StringBuilder value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x2047628", Offset = "0x2047628", VA = "0x2047628", Slot = "34")]
		public SerializationFlags Pack(Vector2 value, Vector2 prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x20477F4", Offset = "0x20477F4", VA = "0x20477F4", Slot = "35")]
		public SerializationFlags Unpack(Vector2 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x2047898", Offset = "0x2047898", VA = "0x2047898", Slot = "36")]
		public SerializationFlags Pack(Vector3 value, Vector3 prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x2047B14", Offset = "0x2047B14", VA = "0x2047B14", Slot = "37")]
		public SerializationFlags Unpack(Vector3 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x2047C04", Offset = "0x2047C04", VA = "0x2047C04", Slot = "38")]
		public SerializationFlags Pack(Vector2Int value, Vector2Int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x2047CE0", Offset = "0x2047CE0", VA = "0x2047CE0", Slot = "39")]
		public SerializationFlags Unpack(Vector2Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x2047D48", Offset = "0x2047D48", VA = "0x2047D48", Slot = "40")]
		public SerializationFlags Pack(Vector3Int value, Vector3Int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x2047E6C", Offset = "0x2047E6C", VA = "0x2047E6C", Slot = "41")]
		public SerializationFlags Unpack(Vector3Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Token(Token = "0x2000441")]
	public enum KeyRate
	{
		[Token(Token = "0x4001864")]
		UseDefault = -1,
		[Token(Token = "0x4001865")]
		Never = 0,
		[Token(Token = "0x4001866")]
		Every = 1,
		[Token(Token = "0x4001867")]
		Every2nd = 2,
		[Token(Token = "0x4001868")]
		Every3rd = 3,
		[Token(Token = "0x4001869")]
		Every4th = 4,
		[Token(Token = "0x400186A")]
		Every5th = 5,
		[Token(Token = "0x400186B")]
		Every10th = 10
	}
	[Token(Token = "0x2000442")]
	public enum SyncAs
	{
		[Token(Token = "0x400186D")]
		Auto,
		[Token(Token = "0x400186E")]
		State,
		[Token(Token = "0x400186F")]
		Trigger
	}
	[Token(Token = "0x2000443")]
	public enum SetValueTiming
	{
		[Token(Token = "0x4001871")]
		Never,
		[Token(Token = "0x4001872")]
		AfterCallback,
		[Token(Token = "0x4001873")]
		BeforeCallback
	}
	[Token(Token = "0x2000444")]
	public enum IndicatorBit
	{
		[Token(Token = "0x4001875")]
		None,
		[Token(Token = "0x4001876")]
		IsZero
	}
	[Token(Token = "0x2000445")]
	public enum IndicatorBits
	{
		[Token(Token = "0x4001878")]
		None,
		[Token(Token = "0x4001879")]
		IsZero,
		[Token(Token = "0x400187A")]
		IsZeroMidMinMax
	}
	[Token(Token = "0x2000446")]
	public class PackObjectSettings : SettingsScriptableObject<PackObjectSettings>
	{
		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB27814", Offset = "0xB27814")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB27814", Offset = "0xB27814")]
		public bool autoGenerate;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB27874", Offset = "0xB27874")]
		public bool deleteBadCode;

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x2012694", Offset = "0x2012694", VA = "0x2012694")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB3107C", Offset = "0xB3107C")]
		public static void Bootstrap()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x2012704", Offset = "0x2012704", VA = "0x2012704")]
		public PackObjectSettings()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public interface IOnElementCrusherChange
	{
		[Token(Token = "0x600146D")]
		void OnCrusherChange(ElementCrusher ec);
	}
	[Serializable]
	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB20BE0", Offset = "0xB20BE0")]
	public class ElementCrusher : Crusher<ElementCrusher>, IEquatable<ElementCrusher>, ICrusherCopy<ElementCrusher>
	{
		[Token(Token = "0x2000449")]
		public enum UniformAxes
		{
			[Token(Token = "0x40018A5")]
			NonUniform = 0,
			[Token(Token = "0x40018A6")]
			XY = 3,
			[Token(Token = "0x40018A7")]
			XZ = 5,
			[Token(Token = "0x40018A8")]
			YZ = 6,
			[Token(Token = "0x40018A9")]
			XYZ = 7
		}

		[Token(Token = "0x200044A")]
		public enum StaticTRSType
		{
			[Token(Token = "0x40018AB")]
			Position,
			[Token(Token = "0x40018AC")]
			Euler,
			[Token(Token = "0x40018AD")]
			Quaternion,
			[Token(Token = "0x40018AE")]
			Scale,
			[Token(Token = "0x40018AF")]
			Generic
		}

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<int, ElementCrusher> staticElementCrushers;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly CompressedElement reusableCE;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ElementCrusher defaultUncompressedElementCrusher;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static ElementCrusher defaultUncompressedPosCrusher;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static ElementCrusher defaultUncompressedSclCrusher;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static ElementCrusher defaultHalfFloatElementCrusher;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static ElementCrusher defaultHalfFloatPosCrusher;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static ElementCrusher defaultHalfFloatSclCrusher;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hideFieldName;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private TRSType _trsType;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Transform defaultTransform;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public UniformAxes uniformAxes;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FloatCrusher _xcrusher;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FloatCrusher _ycrusher;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FloatCrusher _zcrusher;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FloatCrusher _ucrusher;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private QuatCrusher _qcrusher;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public bool local;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		private bool useWorldBounds;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[WorldBoundsSelectAttribute]
		[HideInInspector]
		[SerializeField]
		private int boundsGroupId;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public bool enableTRSTypeSelector;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		public bool enableLocalSelector;

		[NonSerialized]
		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool cached;

		[NonSerialized]
		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		private bool cache_xEnabled;

		[NonSerialized]
		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool cache_yEnabled;

		[NonSerialized]
		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool cache_zEnabled;

		[NonSerialized]
		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool cache_uEnabled;

		[NonSerialized]
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		private bool cache_qEnabled;

		[NonSerialized]
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool cache_isUniformScale;

		[NonSerialized]
		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly int[] cache_xBits;

		[NonSerialized]
		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly int[] cache_yBits;

		[NonSerialized]
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly int[] cache_zBits;

		[NonSerialized]
		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly int[] cache_uBits;

		[NonSerialized]
		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly int[] cache_TotalBits;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ReadOnlyCollection<int> Cached_TotalBits;

		[NonSerialized]
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int cache_qBits;

		[NonSerialized]
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool cache_mustCorrectRotationX;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Bounds bounds;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static ulong[] reusableArray64;

		[Token(Token = "0x1700025C")]
		public TRSType TRSType
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0x2213C10", Offset = "0x2213C10", VA = "0x2213C10")]
			get
			{
				return default(TRSType);
			}
			[Token(Token = "0x6001472")]
			[Address(RVA = "0x2213C18", Offset = "0x2213C18", VA = "0x2213C18")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB32804", Offset = "0xB32804")]
		public FloatCrusher xcrusher
		{
			[Token(Token = "0x6001473")]
			[Address(RVA = "0x2213C54", Offset = "0x2213C54", VA = "0x2213C54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001474")]
			[Address(RVA = "0x2213C5C", Offset = "0x2213C5C", VA = "0x2213C5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3283C", Offset = "0xB3283C")]
		public FloatCrusher ycrusher
		{
			[Token(Token = "0x6001475")]
			[Address(RVA = "0x2213C60", Offset = "0x2213C60", VA = "0x2213C60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001476")]
			[Address(RVA = "0x2213C68", Offset = "0x2213C68", VA = "0x2213C68")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB32874", Offset = "0xB32874")]
		public FloatCrusher zcrusher
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0x2213C6C", Offset = "0x2213C6C", VA = "0x2213C6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001478")]
			[Address(RVA = "0x2213C74", Offset = "0x2213C74", VA = "0x2213C74")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB328AC", Offset = "0xB328AC")]
		public FloatCrusher ucrusher
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0x2213C78", Offset = "0x2213C78", VA = "0x2213C78")]
			get
			{
				return null;
			}
			[Token(Token = "0x600147A")]
			[Address(RVA = "0x2213C80", Offset = "0x2213C80", VA = "0x2213C80")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB328E4", Offset = "0xB328E4")]
		public QuatCrusher qcrusher
		{
			[Token(Token = "0x600147B")]
			[Address(RVA = "0x2213C84", Offset = "0x2213C84", VA = "0x2213C84")]
			get
			{
				return null;
			}
			[Token(Token = "0x600147C")]
			[Address(RVA = "0x2213C8C", Offset = "0x2213C8C", VA = "0x2213C8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public FloatCrusher XCrusher
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0x2213C90", Offset = "0x2213C90", VA = "0x2213C90")]
			get
			{
				return null;
			}
			[Token(Token = "0x600147E")]
			[Address(RVA = "0x2213074", Offset = "0x2213074", VA = "0x2213074")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public FloatCrusher YCrusher
		{
			[Token(Token = "0x600147F")]
			[Address(RVA = "0x22140DC", Offset = "0x22140DC", VA = "0x22140DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001480")]
			[Address(RVA = "0x2213208", Offset = "0x2213208", VA = "0x2213208")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public FloatCrusher ZCrusher
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0x22140E4", Offset = "0x22140E4", VA = "0x22140E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x221339C", Offset = "0x221339C", VA = "0x221339C")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public FloatCrusher UCrusher
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x22140EC", Offset = "0x22140EC", VA = "0x22140EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001484")]
			[Address(RVA = "0x2213A7C", Offset = "0x2213A7C", VA = "0x2213A7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public QuatCrusher QCrusher
		{
			[Token(Token = "0x6001485")]
			[Address(RVA = "0x22140F4", Offset = "0x22140F4", VA = "0x22140F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x2213870", Offset = "0x2213870", VA = "0x2213870")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		[SerializeField]
		public bool UseWorldBounds
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x2214104", Offset = "0x2214104", VA = "0x2214104")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600148A")]
			[Address(RVA = "0x221410C", Offset = "0x221410C", VA = "0x221410C")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public int BoundsGroupId
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0x221446C", Offset = "0x221446C", VA = "0x221446C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x2214474", Offset = "0x2214474", VA = "0x2214474")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public Bounds Bounds
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0x2214D80", Offset = "0x2214D80", VA = "0x2214D80")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6001492")]
			[Address(RVA = "0x2214E10", Offset = "0x2214E10", VA = "0x2214E10")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public bool Enabled
		{
			[Token(Token = "0x6001497")]
			[Address(RVA = "0x2214F9C", Offset = "0x2214F9C", VA = "0x2214F9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001498")]
			[Address(RVA = "0x221503C", Offset = "0x221503C", VA = "0x221503C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public FloatCrusher Item
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x22150EC", Offset = "0x22150EC", VA = "0x22150EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x2212DD0", Offset = "0x2212DD0", VA = "0x2212DD0")]
		public static ElementCrusher GetStaticPositionCrusher(Bounds bounds, int resolution)
		{
			return null;
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x2213798", Offset = "0x2213798", VA = "0x2213798")]
		public static ElementCrusher GetStaticQuatCrusher(int minBits)
		{
			return null;
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x2213530", Offset = "0x2213530", VA = "0x2213530")]
		public static ElementCrusher CheckAgainstStatics(ElementCrusher ec, bool CheckAgainstFloatCrushersAsWell = true)
		{
			return null;
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x22140FC", Offset = "0x22140FC", VA = "0x22140FC")]
		public void OnCrusherChange(QuatCrusher crusher)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x2214100", Offset = "0x2214100", VA = "0x2214100")]
		public void OnCrusherChange(FloatCrusher crusher)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x2214484", Offset = "0x2214484", VA = "0x2214484")]
		private void OnWorldBoundsReady()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x22144A8", Offset = "0x22144A8", VA = "0x22144A8")]
		public void ApplyWorldCrusherSettings()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x2214118", Offset = "0x2214118", VA = "0x2214118")]
		public void ApplyWorldCrusherSettings(bool newUseBounds, int newBndsGrpId)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x2214C5C", Offset = "0x2214C5C", VA = "0x2214C5C")]
		private WorldBoundsGroup GetUsedWorldBounds()
		{
			return null;
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x2214EE8", Offset = "0x2214EE8", VA = "0x2214EE8", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x2214EEC", Offset = "0x2214EEC", VA = "0x2214EEC", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x2213C98", Offset = "0x2213C98", VA = "0x2213C98")]
		public void CacheValues()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x2214EF0", Offset = "0x2214EF0", VA = "0x2214EF0")]
		private void NullUnusedCrushers()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x22151E8", Offset = "0x22151E8", VA = "0x22151E8")]
		public ElementCrusher()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x2212F64", Offset = "0x2212F64", VA = "0x2212F64")]
		internal ElementCrusher(StaticTRSType staticTrsType)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x22152F0", Offset = "0x22152F0", VA = "0x22152F0")]
		public ElementCrusher(bool enableTRSTypeSelector = true)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x2215418", Offset = "0x2215418", VA = "0x2215418")]
		public ElementCrusher(TRSType trsType, bool enableTRSTypeSelector = true)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x2214948", Offset = "0x2214948", VA = "0x2214948")]
		public void Defaults(TRSType trs)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x2215540", Offset = "0x2215540", VA = "0x2215540")]
		public void Write(CompressedElement nonalloc, Transform trans, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x2215964", Offset = "0x2215964", VA = "0x2215964")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31090", Offset = "0xB31090")]
		public CompressedElement Write(Transform trans, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x2215D84", Offset = "0x2215D84", VA = "0x2215D84")]
		public void Write(CompressedElement ce, byte[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x2215EC0", Offset = "0x2215EC0", VA = "0x2215EC0")]
		public void Write(CompressedElement ce, uint[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x2215FFC", Offset = "0x2215FFC", VA = "0x2215FFC")]
		public void Write(CompressedElement ce, ulong[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x2216138", Offset = "0x2216138", VA = "0x2216138")]
		public void Write(CompressedElement nonalloc, Vector3 v3, byte[] bytes, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x2216160", Offset = "0x2216160", VA = "0x2216160")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB310A0", Offset = "0xB310A0")]
		public CompressedElement Write(Vector3 v3, byte[] bytes, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x221566C", Offset = "0x221566C", VA = "0x221566C")]
		public void Write(CompressedElement nonalloc, Vector3 v3, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x2215A78", Offset = "0x2215A78", VA = "0x2215A78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB310B0", Offset = "0xB310B0")]
		public CompressedElement Write(Vector3 v3, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x22158C4", Offset = "0x22158C4", VA = "0x22158C4")]
		public void Write(CompressedElement nonalloc, Quaternion quat, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x2215CAC", Offset = "0x2215CAC", VA = "0x2215CAC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB310C0", Offset = "0xB310C0")]
		public CompressedElement Write(Quaternion quat, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x2216188", Offset = "0x2216188", VA = "0x2216188")]
		public void Write(CompressedElement nonalloc, Transform trans, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x22162B4", Offset = "0x22162B4", VA = "0x22162B4")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x221650C", Offset = "0x221650C", VA = "0x221650C")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ulong[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x22165AC", Offset = "0x22165AC", VA = "0x22165AC")]
		public void Read(CompressedElement nonalloc, byte[] bytes, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x2216868", Offset = "0x2216868", VA = "0x2216868")]
		public CompressedElement Read(byte[] buffer, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x22165D8", Offset = "0x22165D8", VA = "0x22165D8")]
		public void Read(CompressedElement nonalloc, byte[] bytes, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x221691C", Offset = "0x221691C", VA = "0x221691C")]
		public CompressedElement Read(byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x22169C0", Offset = "0x22169C0", VA = "0x22169C0")]
		public void Read(CompressedElement nonalloc, ulong[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x2216C50", Offset = "0x2216C50", VA = "0x2216C50")]
		public void Read(CompressedElement nonalloc, uint[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x2216EE0", Offset = "0x2216EE0", VA = "0x2216EE0")]
		public Element ReadAndDecompress(byte[] bytes, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x22170FC", Offset = "0x22170FC", VA = "0x22170FC")]
		public void Write(CompressedElement nonalloc, Transform trans, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x2217428", Offset = "0x2217428", VA = "0x2217428")]
		public void Write(Transform trans, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x22176BC", Offset = "0x22176BC", VA = "0x22176BC")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x22176E4", Offset = "0x22176E4", VA = "0x22176E4")]
		public void Write(Vector3 v3, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x2217228", Offset = "0x2217228", VA = "0x2217228")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x221753C", Offset = "0x221753C", VA = "0x221753C")]
		public void Write(Vector3 v3, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x221770C", Offset = "0x221770C", VA = "0x221770C")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ulong buffer)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x2217730", Offset = "0x2217730", VA = "0x2217730")]
		public void Write(Quaternion quat, ulong buffer)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x2217378", Offset = "0x2217378", VA = "0x2217378")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ulong buffer, int bitposition)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x2217618", Offset = "0x2217618", VA = "0x2217618")]
		public void Write(Quaternion quat, ulong buffer, int bitposition)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x2217754", Offset = "0x2217754", VA = "0x2217754")]
		public CompressedElement Write(CompressedElement ce, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x221777C", Offset = "0x221777C", VA = "0x221777C")]
		public CompressedElement Write(CompressedElement ce, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x22178E0", Offset = "0x22178E0", VA = "0x22178E0")]
		public Element Read(ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x2217A40", Offset = "0x2217A40", VA = "0x2217A40")]
		public Element Read(ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x2217B9C", Offset = "0x2217B9C", VA = "0x2217B9C")]
		public void Read(CompressedElement nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x2217BC4", Offset = "0x2217BC4", VA = "0x2217BC4")]
		public void Read(CompressedElement nonalloc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x2217E38", Offset = "0x2217E38", VA = "0x2217E38")]
		public void Read(CompressedElement nonalloc, ulong frag0, ulong frag1 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x2217F3C", Offset = "0x2217F3C", VA = "0x2217F3C")]
		public CompressedElement Read(ulong frag0, ulong frag1 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x2217FE0", Offset = "0x2217FE0", VA = "0x2217FE0")]
		public void Compress(CompressedElement nonalloc, Transform trans)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x2218420", Offset = "0x2218420", VA = "0x2218420")]
		public CompressedElement Compress(Transform trans)
		{
			return null;
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x22184AC", Offset = "0x22184AC", VA = "0x22184AC")]
		public void CompressAndWrite(Transform trans, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x22188E0", Offset = "0x22188E0", VA = "0x22188E0")]
		public void Compress(CompressedElement nonalloc, Element e)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x2218904", Offset = "0x2218904", VA = "0x2218904")]
		public CompressedElement Compress(Element e)
		{
			return null;
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x22189EC", Offset = "0x22189EC", VA = "0x22189EC")]
		public void CompressAndWrite(Element e, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x2218A1C", Offset = "0x2218A1C", VA = "0x2218A1C")]
		public void Compress(CompressedElement nonalloc, Rigidbody rb, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x22180F0", Offset = "0x22180F0", VA = "0x22180F0")]
		public void Compress(CompressedElement nonalloc, Vector3 v, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x2218E68", Offset = "0x2218E68", VA = "0x2218E68")]
		public CompressedElement Compress(Vector3 v)
		{
			return null;
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x22185D0", Offset = "0x22185D0", VA = "0x22185D0")]
		public void CompressAndWrite(Vector3 v, byte[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x221837C", Offset = "0x221837C", VA = "0x221837C")]
		public void Compress(CompressedElement nonalloc, Quaternion quat)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x2218F18", Offset = "0x2218F18", VA = "0x2218F18")]
		public CompressedElement Compress(Quaternion quat)
		{
			return null;
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x221882C", Offset = "0x221882C", VA = "0x221882C")]
		public void CompressAndWrite(Quaternion quat, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x2216FBC", Offset = "0x2216FBC", VA = "0x2216FBC")]
		public Element Decompress(CompressedElement compressed)
		{
			return default(Element);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x2218FCC", Offset = "0x2218FCC", VA = "0x2218FCC")]
		public Element Decompress(ulong cval, IncludedAxes ia = IncludedAxes.XYZ)
		{
			return default(Element);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x2219124", Offset = "0x2219124", VA = "0x2219124")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB310D0", Offset = "0xB310D0")]
		public void Apply(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x2219178", Offset = "0x2219178", VA = "0x2219178")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31108", Offset = "0xB31108")]
		public void Apply(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x2219500", Offset = "0x2219500", VA = "0x2219500")]
		public void Move(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x2219554", Offset = "0x2219554", VA = "0x2219554")]
		public void Move(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x2219918", Offset = "0x2219918", VA = "0x2219918")]
		public void Set(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x2219D08", Offset = "0x2219D08", VA = "0x2219D08")]
		public void Set(Rigidbody2D rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x221996C", Offset = "0x221996C", VA = "0x221996C")]
		public void Set(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x2219D5C", Offset = "0x2219D5C", VA = "0x2219D5C")]
		public void Set(Rigidbody2D rb2d, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x221A0C8", Offset = "0x221A0C8", VA = "0x221A0C8")]
		public void Apply(Transform trans, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x221A11C", Offset = "0x221A11C", VA = "0x221A11C")]
		public void Apply(Transform trans, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x221A6C0", Offset = "0x221A6C0", VA = "0x221A6C0")]
		public Vector3 Clamp(Vector3 v3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x221A888", Offset = "0x221A888", VA = "0x221A888")]
		public BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x221AA38", Offset = "0x221AA38", VA = "0x221AA38")]
		private bool TestMatchingUpper(uint a, uint b, int lowerbits)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x221A95C", Offset = "0x221A95C", VA = "0x221A95C")]
		public bool TestMatchingUpper(CompressedElement a, CompressedElement b, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x221AA50", Offset = "0x221AA50", VA = "0x221AA50")]
		public int TallyBits(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x221ABE8", Offset = "0x221ABE8", VA = "0x221ABE8", Slot = "9")]
		public void CopyFrom(ElementCrusher src)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x221AD2C", Offset = "0x221AD2C", VA = "0x221AD2C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x221ADF4", Offset = "0x221ADF4", VA = "0x221ADF4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x221AE80", Offset = "0x221AE80", VA = "0x221AE80", Slot = "8")]
		public bool Equals(ElementCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x221B104", Offset = "0x221B104", VA = "0x221B104", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x221B2B0", Offset = "0x221B2B0", VA = "0x221B2B0")]
		public static bool operator ==(ElementCrusher crusher1, ElementCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x221B088", Offset = "0x221B088", VA = "0x221B088")]
		public static bool operator !=(ElementCrusher crusher1, ElementCrusher crusher2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200044B")]
	public static class FloatCrusherExtensions
	{
		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x28766CC", Offset = "0x28766CC", VA = "0x28766CC")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x2876760", Offset = "0x2876760", VA = "0x2876760")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, uint buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x28767F4", Offset = "0x28767F4", VA = "0x28767F4")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ushort buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x2876888", Offset = "0x2876888", VA = "0x2876888")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, byte buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x287691C", Offset = "0x287691C", VA = "0x287691C")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x287698C", Offset = "0x287698C", VA = "0x287698C")]
		public static float ReadAndDecompress(this FloatCrusher fc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(float);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x28769F8", Offset = "0x28769F8", VA = "0x28769F8")]
		public static CompressedFloat Read(this FloatCrusher fc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x2876A7C", Offset = "0x2876A7C", VA = "0x2876A7C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB311B0", Offset = "0xB311B0")]
		public static CompressedFloat Read(this FloatCrusher fc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x2876B1C", Offset = "0x2876B1C", VA = "0x2876B1C")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x2876B8C", Offset = "0x2876B8C", VA = "0x2876B8C")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x2876BFC", Offset = "0x2876BFC", VA = "0x2876BFC")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x2876C6C", Offset = "0x2876C6C", VA = "0x2876C6C")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x2876CF8", Offset = "0x2876CF8", VA = "0x2876CF8")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x2876D84", Offset = "0x2876D84", VA = "0x2876D84")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x2876E10", Offset = "0x2876E10", VA = "0x2876E10")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x2876EC0", Offset = "0x2876EC0", VA = "0x2876EC0")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x2876F74", Offset = "0x2876F74", VA = "0x2876F74")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x2877028", Offset = "0x2877028", VA = "0x2877028")]
		public static CompressedFloat Read(this FloatCrusher fc, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x28770AC", Offset = "0x28770AC", VA = "0x28770AC")]
		public static CompressedFloat Read(this FloatCrusher fc, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x2877130", Offset = "0x2877130", VA = "0x2877130")]
		public static CompressedFloat Read(this FloatCrusher fc, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x28771B4", Offset = "0x28771B4", VA = "0x28771B4")]
		public static float ReadAndDecompress(this FloatCrusher fc, byte[] buffer, int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x2877218", Offset = "0x2877218", VA = "0x2877218")]
		public static float ReadAndDecompress(this FloatCrusher fc, uint[] buffer, int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x287727C", Offset = "0x287727C", VA = "0x287727C")]
		public static float ReadAndDecompress(this FloatCrusher fc, ulong[] buffer, int bitposition)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200044C")]
	public enum CompressLevel
	{
		[Token(Token = "0x40018B1")]
		SetBits = -1,
		[Token(Token = "0x40018B2")]
		Disabled = 0,
		[Token(Token = "0x40018B3")]
		uint16Low = 16,
		[Token(Token = "0x40018B4")]
		uint32Med = 32,
		[Token(Token = "0x40018B5")]
		uint64Hi = 64
	}
	[Serializable]
	[Token(Token = "0x200044D")]
	public class QuatCrusher : Crusher<QuatCrusher>, IEquatable<QuatCrusher>, ICrusherCopy<QuatCrusher>
	{
		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool QC_ISPRO;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB279B4", Offset = "0xB279B4")]
		[SerializeField]
		private int bits;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public CompressLevel _compressLevel;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Transform transform;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public bool local;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool isStandalone;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		public bool showEnableToggle;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		private bool enabled;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private QuatCompress.Cache cache;

		[NonSerialized]
		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool initialized;

		[Token(Token = "0x1700026C")]
		public int Bits
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x20BEBCC", Offset = "0x20BEBCC", VA = "0x20BEBCC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x20BECC0", Offset = "0x20BECC0", VA = "0x20BECC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public CompressLevel CompressLevel
		{
			[Token(Token = "0x6001505")]
			[Address(RVA = "0x20BEEE8", Offset = "0x20BEEE8", VA = "0x20BEEE8")]
			get
			{
				return default(CompressLevel);
			}
			[Token(Token = "0x6001506")]
			[Address(RVA = "0x20BEDCC", Offset = "0x20BEDCC", VA = "0x20BEDCC")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		[SerializeField]
		public bool Enabled
		{
			[Token(Token = "0x6001507")]
			[Address(RVA = "0x20BEEF0", Offset = "0x20BEEF0", VA = "0x20BEEF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001508")]
			[Address(RVA = "0x20BEEF8", Offset = "0x20BEEF8", VA = "0x20BEEF8")]
			set
			{
			}
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x20BEF70", Offset = "0x20BEF70", VA = "0x20BEF70")]
		public QuatCrusher()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x20BEFDC", Offset = "0x20BEFDC", VA = "0x20BEFDC")]
		public QuatCrusher(int bits, bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x20BF0EC", Offset = "0x20BF0EC", VA = "0x20BF0EC")]
		public QuatCrusher(bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x20BF1B8", Offset = "0x20BF1B8", VA = "0x20BF1B8")]
		public QuatCrusher(CompressLevel compressLevel, bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x20BF240", Offset = "0x20BF240", VA = "0x20BF240")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x20BF2F8", Offset = "0x20BF2F8", VA = "0x20BF2F8", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x20BF2FC", Offset = "0x20BF2FC", VA = "0x20BF2FC", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x20BEC90", Offset = "0x20BEC90", VA = "0x20BEC90")]
		public static int RoundBitsToBestPreset(int bits)
		{
			return default(int);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x20BF35C", Offset = "0x20BF35C", VA = "0x20BF35C")]
		public ulong Compress()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x20BF4B8", Offset = "0x20BF4B8", VA = "0x20BF4B8")]
		public ulong Compress(Quaternion quat)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x20BF588", Offset = "0x20BF588", VA = "0x20BF588")]
		public Quaternion Decompress(ulong compressed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x20BF638", Offset = "0x20BF638", VA = "0x20BF638")]
		public ulong Write(Quaternion quat, byte[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x20BF688", Offset = "0x20BF688", VA = "0x20BF688")]
		public ulong Write(Quaternion quat, uint[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x20BF6D8", Offset = "0x20BF6D8", VA = "0x20BF6D8")]
		public ulong Write(Quaternion quat, ulong[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x20BF728", Offset = "0x20BF728", VA = "0x20BF728")]
		public ulong Write(ulong c, byte[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x20BF760", Offset = "0x20BF760", VA = "0x20BF760")]
		public ulong Write(ulong c, uint[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x20BF798", Offset = "0x20BF798", VA = "0x20BF798")]
		public ulong Write(ulong c, ulong[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x20BF7D0", Offset = "0x20BF7D0", VA = "0x20BF7D0")]
		public Quaternion Read(byte[] buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x20BF80C", Offset = "0x20BF80C", VA = "0x20BF80C")]
		public Quaternion Read(uint[] buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x20BF848", Offset = "0x20BF848", VA = "0x20BF848")]
		public Quaternion Read(ulong[] buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x20BF884", Offset = "0x20BF884", VA = "0x20BF884")]
		public ulong Write(Quaternion quat, ulong buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x20BF8D0", Offset = "0x20BF8D0", VA = "0x20BF8D0")]
		public Quaternion Read(ulong buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x20BF90C", Offset = "0x20BF90C", VA = "0x20BF90C", Slot = "9")]
		public void CopyFrom(QuatCrusher source)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x20BF93C", Offset = "0x20BF93C", VA = "0x20BF93C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x20BF9C8", Offset = "0x20BF9C8", VA = "0x20BF9C8", Slot = "8")]
		public bool Equals(QuatCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x20BFB08", Offset = "0x20BFB08", VA = "0x20BFB08", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x20BFB78", Offset = "0x20BFB78", VA = "0x20BFB78")]
		public static bool operator ==(QuatCrusher crusher1, QuatCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x20BFA8C", Offset = "0x20BFA8C", VA = "0x20BFA8C")]
		public static bool operator !=(QuatCrusher crusher1, QuatCrusher crusher2)
		{
			return default(bool);
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x200044E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB20C28", Offset = "0xB20C28")]
	public class CompressedElement : IEquatable<CompressedElement>
	{
		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CompressedElement reusable;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedFloat cx;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompressedFloat cy;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CompressedFloat cz;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedFloat cUniform;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedQuat cQuat;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ElementCrusher crusher;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ulong[] reusableArray64;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly uint[] reusableArray32;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly byte[] reusableArray8;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB27A58", Offset = "0xB27A58")]
		public static readonly CompressedElement Empty;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static CompressedElement uppers;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static CompressedElement lowers;

		[Token(Token = "0x1700026F")]
		public uint Item
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x224729C", Offset = "0x224729C", VA = "0x224729C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x2245D58", Offset = "0x2245D58", VA = "0x2245D58")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x2245E0C", Offset = "0x2245E0C", VA = "0x2245E0C")]
		public ulong[] AsArray64(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x2245F80", Offset = "0x2245F80", VA = "0x2245F80")]
		public void AsArray64(ulong[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x224608C", Offset = "0x224608C", VA = "0x224608C")]
		public uint[] AsArray32(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x2246200", Offset = "0x2246200", VA = "0x2246200")]
		public void AsArray32(uint[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x224630C", Offset = "0x224630C", VA = "0x224630C")]
		public byte[] AsArray8(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x2246480", Offset = "0x2246480", VA = "0x2246480")]
		public void AsArray8(byte[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x224658C", Offset = "0x224658C", VA = "0x224658C")]
		public static explicit operator ulong(CompressedElement ce)
		{
			return default(ulong);
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x22465D0", Offset = "0x22465D0", VA = "0x22465D0")]
		public static explicit operator uint(CompressedElement ce)
		{
			return default(uint);
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x2246614", Offset = "0x2246614", VA = "0x2246614")]
		public static explicit operator ushort(CompressedElement ce)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x2246658", Offset = "0x2246658", VA = "0x2246658")]
		public static explicit operator byte(CompressedElement ce)
		{
			return default(byte);
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x224669C", Offset = "0x224669C", VA = "0x224669C")]
		public static explicit operator ulong[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x224672C", Offset = "0x224672C", VA = "0x224672C")]
		public static explicit operator uint[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x22467BC", Offset = "0x22467BC", VA = "0x22467BC")]
		public static explicit operator byte[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x224684C", Offset = "0x224684C", VA = "0x224684C")]
		public static explicit operator Element(CompressedElement ce)
		{
			return default(Element);
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x22468E0", Offset = "0x22468E0", VA = "0x22468E0")]
		public static explicit operator Vector3(CompressedElement ce)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x22469B0", Offset = "0x22469B0", VA = "0x22469B0")]
		public static explicit operator Quaternion(CompressedElement ce)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x2246B7C", Offset = "0x2246B7C", VA = "0x2246B7C")]
		public CompressedElement()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x2246B84", Offset = "0x2246B84", VA = "0x2246B84")]
		public CompressedElement(ElementCrusher crusher, CompressedFloat cx, CompressedFloat cy, CompressedFloat cz)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x2246C24", Offset = "0x2246C24", VA = "0x2246C24")]
		public CompressedElement(ElementCrusher crusher, uint cx, uint cy, uint cz)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x2246D78", Offset = "0x2246D78", VA = "0x2246D78")]
		public CompressedElement(ElementCrusher crusher, uint cUniform)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x2246E64", Offset = "0x2246E64", VA = "0x2246E64")]
		public CompressedElement(ElementCrusher crusher, ulong cQuat)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x2246F7C", Offset = "0x2246F7C", VA = "0x2246F7C")]
		public void Set(ElementCrusher crusher, CompressedFloat cx, CompressedFloat cy, CompressedFloat cz)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x2247008", Offset = "0x2247008", VA = "0x2247008")]
		public void Set(ElementCrusher crusher, uint cx, uint cy, uint cz)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x22470E0", Offset = "0x22470E0", VA = "0x22470E0")]
		public void Set(ElementCrusher crusher, uint cUniform)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x2247150", Offset = "0x2247150", VA = "0x2247150")]
		public void Set(ElementCrusher crusher, ulong cQuat)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x22471C0", Offset = "0x22471C0", VA = "0x22471C0")]
		public void CopyTo(CompressedElement copyTarget)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x2247230", Offset = "0x2247230", VA = "0x2247230")]
		public void CopyFrom(CompressedElement copySource)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x22472C4", Offset = "0x22472C4", VA = "0x22472C4")]
		public uint GetUInt(int axis)
		{
			return default(uint);
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x2246890", Offset = "0x2246890", VA = "0x2246890")]
		public Element Decompress()
		{
			return default(Element);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x22472EC", Offset = "0x22472EC", VA = "0x22472EC")]
		public void Serialize(byte[] buffer, int bitposition, IncludedAxes ia, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x2247324", Offset = "0x2247324", VA = "0x2247324")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB312EC", Offset = "0xB312EC")]
		public static bool Compare(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x22473D8", Offset = "0x22473D8", VA = "0x22473D8")]
		public static int HighestDifferentBit(uint a, uint b)
		{
			return default(int);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x2247408", Offset = "0x2247408", VA = "0x2247408")]
		public static void Extrapolate(ElementCrusher crusher, CompressedElement target, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x2247480", Offset = "0x2247480", VA = "0x2247480")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31324", Offset = "0xB31324")]
		public static CompressedElement Extrapolate(ElementCrusher crusher, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x2247560", Offset = "0x2247560", VA = "0x2247560")]
		public static void Extrapolate(CompressedElement target, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x22475D0", Offset = "0x22475D0", VA = "0x22475D0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31334", Offset = "0xB31334")]
		public static CompressedElement Extrapolate(CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
			return null;
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x22476AC", Offset = "0x22476AC", VA = "0x22476AC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31344", Offset = "0xB31344")]
		public static void Extrapolate(ElementCrusher crusher, CompressedElement target, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x22477D8", Offset = "0x22477D8", VA = "0x22477D8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31354", Offset = "0xB31354")]
		public static CompressedElement Extrapolate(ElementCrusher crusher, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x2247940", Offset = "0x2247940", VA = "0x2247940")]
		public static void Extrapolate(CompressedElement target, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x2247A6C", Offset = "0x2247A6C", VA = "0x2247A6C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31364", Offset = "0xB31364")]
		public static CompressedElement Extrapolate(CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x2247BD4", Offset = "0x2247BD4", VA = "0x2247BD4")]
		public static BitCullingLevel GetGuessableBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCullLvl)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x2247FC0", Offset = "0x2247FC0", VA = "0x2247FC0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31374", Offset = "0xB31374")]
		public static BitCullingLevel GetGuessableBitCullLevel(CompressedElement oldComp, CompressedElement newComp, ElementCrusher ec, BitCullingLevel maxCullLvl)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x224820C", Offset = "0x224820C", VA = "0x224820C")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x224854C", Offset = "0x224854C", VA = "0x224854C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31384", Offset = "0xB31384")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, ElementCrusher ec, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x2248838", Offset = "0x2248838", VA = "0x2248838")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31394", Offset = "0xB31394")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, FloatCrusher[] ec, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x2248AF8", Offset = "0x2248AF8", VA = "0x2248AF8")]
		private static bool TestMatchingUpper(uint a, uint b, int lowerbits)
		{
			return default(bool);
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x22483DC", Offset = "0x22483DC", VA = "0x22483DC")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x22486A4", Offset = "0x22486A4", VA = "0x22486A4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB313A4", Offset = "0xB313A4")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, ElementCrusher ec, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x224895C", Offset = "0x224895C", VA = "0x224895C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB313B4", Offset = "0xB313B4")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, FloatCrusher[] ec, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x2248B10", Offset = "0x2248B10", VA = "0x2248B10", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x22491D8", Offset = "0x22491D8", VA = "0x22491D8")]
		public static bool operator ==(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x2249234", Offset = "0x2249234", VA = "0x2249234")]
		public static bool operator !=(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x2249290", Offset = "0x2249290", VA = "0x2249290", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x2247388", Offset = "0x2247388", VA = "0x2247388", Slot = "4")]
		public bool Equals(CompressedElement other)
		{
			return default(bool);
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x2249358", Offset = "0x2249358", VA = "0x2249358", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200044F")]
	public static class CompressedElementExt
	{
		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static uint[] reusableInts;

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x2249698", Offset = "0x2249698", VA = "0x2249698")]
		public static StringBuilder AppendSB(this StringBuilder strb, CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x22499AC", Offset = "0x22499AC", VA = "0x22499AC")]
		public static void GetChangeAmount(uint[] results, CompressedElement a, CompressedElement b)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x2249AA8", Offset = "0x2249AA8", VA = "0x2249AA8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB313D4", Offset = "0xB313D4")]
		public static uint[] GetChangeAmount(CompressedElement a, CompressedElement b)
		{
			return null;
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x2249C10", Offset = "0x2249C10", VA = "0x2249C10")]
		public static void GuessUpperBits(this CompressedElement newcpos, ElementCrusher ec, CompressedElement oldcpos, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x2249CEC", Offset = "0x2249CEC", VA = "0x2249CEC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB313F4", Offset = "0xB313F4")]
		public static CompressedElement GuessUpperBits(this CompressedElement newcpos, CompressedElement oldcpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x2249E08", Offset = "0x2249E08", VA = "0x2249E08")]
		public static void OverwriteUpperBits(this CompressedElement low, CompressedElement uppers, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x2249EE8", Offset = "0x2249EE8", VA = "0x2249EE8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3143C", Offset = "0xB3143C")]
		public static CompressedElement OverwriteUpperBits(this CompressedElement low, CompressedElement up, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x2247E20", Offset = "0x2247E20", VA = "0x2247E20")]
		public static void ZeroLowerBits(this CompressedElement fullpos, CompressedElement target, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x224A028", Offset = "0x224A028", VA = "0x224A028")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31484", Offset = "0xB31484")]
		public static CompressedElement ZeroLowerBits(this CompressedElement fullpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x2247EF0", Offset = "0x2247EF0", VA = "0x2247EF0")]
		public static void ZeroUpperBits(this CompressedElement fullpos, CompressedElement target, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x224A154", Offset = "0x224A154", VA = "0x224A154")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB314CC", Offset = "0xB314CC")]
		public static CompressedElement ZeroUpperBits(this CompressedElement fullpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}
	}
	[Token(Token = "0x2000450")]
	public class CompressedMatrix : IEquatable<CompressedMatrix>
	{
		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedElement cPos;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CompressedElement cRot;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompressedElement cScl;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TransformCrusher crusher;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CompressedMatrix reusable;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly ulong[] reusableArray64;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly uint[] reusableArray32;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly byte[] reusableArray8;

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x224A2FC", Offset = "0x224A2FC", VA = "0x224A2FC")]
		public CompressedMatrix()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x224A3BC", Offset = "0x224A3BC", VA = "0x224A3BC")]
		public CompressedMatrix(TransformCrusher crusher)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x224A490", Offset = "0x224A490", VA = "0x224A490")]
		public CompressedMatrix(TransformCrusher crusher, CompressedElement cPos, CompressedElement cRot, CompressedElement cScl)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x224A5C4", Offset = "0x224A5C4", VA = "0x224A5C4")]
		public CompressedMatrix(TransformCrusher crusher, CompressedElement cPos, CompressedElement cRot, CompressedElement cScl, int pBits, int rBits, int sBits)
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x224A6F8", Offset = "0x224A6F8", VA = "0x224A6F8")]
		public void CopyTo(CompressedMatrix copyTarget)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x224A74C", Offset = "0x224A74C", VA = "0x224A74C")]
		public void CopyFrom(CompressedMatrix copySource)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x224A7A0", Offset = "0x224A7A0", VA = "0x224A7A0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x224A7F4", Offset = "0x224A7F4", VA = "0x224A7F4")]
		public ulong[] AsArray64(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x224A8C4", Offset = "0x224A8C4", VA = "0x224A8C4")]
		public void AsArray64(ulong[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x224A924", Offset = "0x224A924", VA = "0x224A924")]
		public uint[] AsArray32(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x224A9F4", Offset = "0x224A9F4", VA = "0x224A9F4")]
		public void AsArray32(uint[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x224AA54", Offset = "0x224AA54", VA = "0x224AA54")]
		public byte[] AsArray8(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x224AB24", Offset = "0x224AB24", VA = "0x224AB24")]
		public void AsArray8(byte[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x224AB84", Offset = "0x224AB84", VA = "0x224AB84")]
		public static explicit operator ulong(CompressedMatrix cm)
		{
			return default(ulong);
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x224ABD0", Offset = "0x224ABD0", VA = "0x224ABD0")]
		public static explicit operator uint(CompressedMatrix cm)
		{
			return default(uint);
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x224AC1C", Offset = "0x224AC1C", VA = "0x224AC1C")]
		public static explicit operator ushort(CompressedMatrix cm)
		{
			return default(ushort);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x224AC68", Offset = "0x224AC68", VA = "0x224AC68")]
		public static explicit operator byte(CompressedMatrix cm)
		{
			return default(byte);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x224ACB4", Offset = "0x224ACB4", VA = "0x224ACB4")]
		public static explicit operator ulong[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x224ACCC", Offset = "0x224ACCC", VA = "0x224ACCC")]
		public static explicit operator uint[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x224ACE4", Offset = "0x224ACE4", VA = "0x224ACE4")]
		public static explicit operator byte[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x224ACFC", Offset = "0x224ACFC", VA = "0x224ACFC")]
		public void Decompress(Matrix nonalloc)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x224ADB0", Offset = "0x224ADB0", VA = "0x224ADB0")]
		public Matrix Decompress()
		{
			return null;
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x224AE48", Offset = "0x224AE48", VA = "0x224AE48")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31504", Offset = "0xB31504")]
		public void Apply()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x224AEE8", Offset = "0x224AEE8", VA = "0x224AEE8")]
		public void Apply(Transform t)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x224AF90", Offset = "0x224AF90", VA = "0x224AF90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3153C", Offset = "0xB3153C")]
		public void Apply(Rigidbody rb)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x224B038", Offset = "0x224B038", VA = "0x224B038")]
		public void Set(Rigidbody rb)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x224B0E0", Offset = "0x224B0E0", VA = "0x224B0E0")]
		public void Move(Rigidbody rb)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x224B188", Offset = "0x224B188", VA = "0x224B188")]
		public static bool operator ==(CompressedMatrix a, CompressedMatrix b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x224B2A4", Offset = "0x224B2A4", VA = "0x224B2A4")]
		public static bool operator !=(CompressedMatrix a, CompressedMatrix b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x224B2CC", Offset = "0x224B2CC", VA = "0x224B2CC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x224B194", Offset = "0x224B194", VA = "0x224B194", Slot = "4")]
		public bool Equals(CompressedMatrix other)
		{
			return default(bool);
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x224B358", Offset = "0x224B358", VA = "0x224B358", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000451")]
	public struct CompressedQuat
	{
		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly QuatCrusher crusher;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong cvalue;

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x2246F50", Offset = "0x2246F50", VA = "0x2246F50")]
		public CompressedQuat(QuatCrusher crusher, ulong cvalue)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x224B554", Offset = "0x224B554", VA = "0x224B554")]
		public CompressedQuat(QuatCrusher crusher, uint cvalue)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x224B584", Offset = "0x224B584", VA = "0x224B584")]
		public CompressedQuat(QuatCrusher crusher, ushort cvalue)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x224B5B4", Offset = "0x224B5B4", VA = "0x224B5B4")]
		public CompressedQuat(QuatCrusher crusher, byte cvalue)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x224B5E4", Offset = "0x224B5E4", VA = "0x224B5E4")]
		public static implicit operator ulong(CompressedQuat cv)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x224B5EC", Offset = "0x224B5EC", VA = "0x224B5EC")]
		public static explicit operator uint(CompressedQuat cv)
		{
			return default(uint);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x224B5F4", Offset = "0x224B5F4", VA = "0x224B5F4")]
		public static explicit operator ushort(CompressedQuat cv)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x224B5FC", Offset = "0x224B5FC", VA = "0x224B5FC")]
		public static explicit operator byte(CompressedQuat cv)
		{
			return default(byte);
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x224B604", Offset = "0x224B604", VA = "0x224B604")]
		public Quaternion Decompress()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x224B62C", Offset = "0x224B62C", VA = "0x224B62C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x2000452")]
	public struct Element : IEquatable<Element>
	{
		[Token(Token = "0x2000453")]
		public enum VectorType
		{
			[Token(Token = "0x40018DC")]
			Vector3 = 1,
			[Token(Token = "0x40018DD")]
			Quaternion
		}

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VectorType vectorType;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 v;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Quaternion quat;

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x22126C8", Offset = "0x22126C8", VA = "0x22126C8")]
		public Element(Vector3 v)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x22126E0", Offset = "0x22126E0", VA = "0x22126E0")]
		public Element(Quaternion quat)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x22126F4", Offset = "0x22126F4", VA = "0x22126F4")]
		public static explicit operator Quaternion(Element e)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x2212728", Offset = "0x2212728", VA = "0x2212728")]
		public static explicit operator Vector3(Element e)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x221275C", Offset = "0x221275C", VA = "0x221275C")]
		public static Element Slerp(Element a, Element b, float t)
		{
			return default(Element);
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x22128CC", Offset = "0x22128CC", VA = "0x22128CC")]
		public static Element SlerpUnclamped(Element a, Element b, float t)
		{
			return default(Element);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x2212A10", Offset = "0x2212A10", VA = "0x2212A10")]
		public static bool operator ==(Element a, Element b)
		{
			return default(bool);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x2212A94", Offset = "0x2212A94", VA = "0x2212A94")]
		public static bool operator !=(Element a, Element b)
		{
			return default(bool);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x2212B0C", Offset = "0x2212B0C", VA = "0x2212B0C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x2212BA8", Offset = "0x2212BA8", VA = "0x2212BA8", Slot = "4")]
		public bool Equals(Element other)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x2212C2C", Offset = "0x2212C2C", VA = "0x2212C2C")]
		public static bool Equals(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x2212C54", Offset = "0x2212C54", VA = "0x2212C54")]
		public static bool Equals(Quaternion a, Quaternion b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x22128A0", Offset = "0x22128A0", VA = "0x22128A0")]
		public static implicit operator Element(Quaternion q)
		{
			return default(Element);
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x22128B4", Offset = "0x22128B4", VA = "0x22128B4")]
		public static implicit operator Element(Vector3 v)
		{
			return default(Element);
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x2212C84", Offset = "0x2212C84", VA = "0x2212C84", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x2212D50", Offset = "0x2212D50", VA = "0x2212D50", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000454")]
	public enum IncludedAxes
	{
		[Token(Token = "0x40018DF")]
		None = 0,
		[Token(Token = "0x40018E0")]
		X = 1,
		[Token(Token = "0x40018E1")]
		Y = 2,
		[Token(Token = "0x40018E2")]
		XY = 3,
		[Token(Token = "0x40018E3")]
		Z = 4,
		[Token(Token = "0x40018E4")]
		XZ = 5,
		[Token(Token = "0x40018E5")]
		YZ = 6,
		[Token(Token = "0x40018E6")]
		XYZ = 7,
		[Token(Token = "0x40018E7")]
		Uniform = 15
	}
	[Token(Token = "0x2000455")]
	public static class IncludeAxisExtensions
	{
		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x23D4390", Offset = "0x23D4390", VA = "0x23D4390")]
		public static float SqrMagnitude(this Vector3 v, IncludedAxes ia)
		{
			return default(float);
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x23D43C4", Offset = "0x23D43C4", VA = "0x23D43C4")]
		public static float Magnitude(this Vector3 v, IncludedAxes ia)
		{
			return default(float);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x23D43FC", Offset = "0x23D43FC", VA = "0x23D43FC")]
		public static Vector3 Lerp(this GameObject go, Vector3 start, Vector3 end, IncludedAxes ia, float t, bool localPosition = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x23D459C", Offset = "0x23D459C", VA = "0x23D459C")]
		public static void SetPosition(this GameObject go, Vector3 pos, IncludedAxes ia, bool localPosition = false)
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class XYZSwitchMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x1FE71C8", Offset = "0x1FE71C8", VA = "0x1FE71C8")]
		public XYZSwitchMaskAttribute()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class Matrix
	{
		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TransformCrusher crusher;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Element rotation;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 scale;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Matrix reusable;

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x21ABFD4", Offset = "0x21ABFD4", VA = "0x21ABFD4")]
		public Matrix()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x21ABFDC", Offset = "0x21ABFDC", VA = "0x21ABFDC")]
		public Matrix(TransformCrusher crusher)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x21AC010", Offset = "0x21AC010", VA = "0x21AC010")]
		public Matrix(TransformCrusher crusher, Vector3 position, Element rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x21AC0A4", Offset = "0x21AC0A4", VA = "0x21AC0A4")]
		public Matrix(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x21AC3E0", Offset = "0x21AC3E0", VA = "0x21AC3E0")]
		public void Set(TransformCrusher crusher, Vector3 position, Element rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x21AC45C", Offset = "0x21AC45C", VA = "0x21AC45C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB315B4", Offset = "0xB315B4")]
		public void Set(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x21AC460", Offset = "0x21AC460", VA = "0x21AC460")]
		public void Capture(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x21AC5E8", Offset = "0x21AC5E8", VA = "0x21AC5E8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB315EC", Offset = "0xB315EC")]
		public void Set(Transform transform)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x21AC5EC", Offset = "0x21AC5EC", VA = "0x21AC5EC")]
		public void Capture(Transform transform)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x21AC770", Offset = "0x21AC770", VA = "0x21AC770")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31624", Offset = "0xB31624")]
		public void Set(TransformCrusher crusher, Rigidbody rb)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x21AC774", Offset = "0x21AC774", VA = "0x21AC774")]
		public void Capture(TransformCrusher crusher, Rigidbody rb)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x21AC920", Offset = "0x21AC920", VA = "0x21AC920")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3165C", Offset = "0xB3165C")]
		public void Set(Rigidbody rb)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x21AC924", Offset = "0x21AC924", VA = "0x21AC924")]
		public void Capture(Rigidbody rb)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x21ACACC", Offset = "0x21ACACC", VA = "0x21ACACC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x21ACAD8", Offset = "0x21ACAD8", VA = "0x21ACAD8")]
		public void Compress(CompressedMatrix nonalloc)
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x21ACAFC", Offset = "0x21ACAFC", VA = "0x21ACAFC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31694", Offset = "0xB31694")]
		public void Apply()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x21ACB20", Offset = "0x21ACB20", VA = "0x21ACB20")]
		public void Apply(Transform t)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x21ACC10", Offset = "0x21ACC10", VA = "0x21ACC10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB316CC", Offset = "0xB316CC")]
		public void Apply(Rigidbody rb)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x21ACD00", Offset = "0x21ACD00", VA = "0x21ACD00")]
		public static Matrix Lerp(Matrix target, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x21AD068", Offset = "0x21AD068", VA = "0x21AD068")]
		public static Matrix LerpUnclamped(Matrix target, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x21AD3A4", Offset = "0x21AD3A4", VA = "0x21AD3A4")]
		public static Matrix CatmullRomLerpUnclamped(Matrix target, Matrix pre, Matrix start, Matrix end, Matrix post, float t)
		{
			return null;
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x21AD714", Offset = "0x21AD714", VA = "0x21AD714")]
		public static Matrix CatmullRomLerpUnclamped(Matrix target, Matrix pre, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x21ADA5C", Offset = "0x21ADA5C", VA = "0x21ADA5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000458")]
	public static class MatrixExtensions
	{
		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x21ADE44", Offset = "0x21ADE44", VA = "0x21ADE44")]
		public static void CopyFrom(this Matrix target, Matrix src)
		{
		}
	}
	[Token(Token = "0x2000459")]
	public interface IHasTransformCrusher
	{
		[Token(Token = "0x17000270")]
		TransformCrusher TC
		{
			[Token(Token = "0x60015C5")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x200045A")]
	public class TransformCrusher : Crusher<TransformCrusher>, ICrusherCopy<TransformCrusher>
	{
		[Token(Token = "0x40018ED")]
		public const int VersionMajor = 3;

		[Token(Token = "0x40018EE")]
		public const int VersionMinor = 5;

		[Token(Token = "0x40018EF")]
		public const int VersionRevision = 3;

		[Token(Token = "0x40018F0")]
		public const int Build = 3503;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<int, TransformCrusher> staticTransformCrushers;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB27A90", Offset = "0xB27A90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB27A90", Offset = "0xB27A90")]
		[HideInInspector]
		public Transform defaultTransform;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected ElementCrusher posCrusher;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected ElementCrusher rotCrusher;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected ElementCrusher sclCrusher;

		[NonSerialized]
		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected readonly int[] cached_pBits;

		[NonSerialized]
		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly int[] cached_rBits;

		[NonSerialized]
		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected readonly int[] cached_sBits;

		[NonSerialized]
		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected readonly int[] _cached_total;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ReadOnlyCollection<int> cached_total;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool cached;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ulong[] reusableArray64;

		[Token(Token = "0x40018FD")]
		private const string transformMissingError = "The 'defaultTransform' is null and has not be set in the inspector. For non-editor usages of TransformCrusher you need to pass the target transform to this method.";

		[Token(Token = "0x17000271")]
		public ElementCrusher PosCrusher
		{
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x26360AC", Offset = "0x26360AC", VA = "0x26360AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x26360B4", Offset = "0x26360B4", VA = "0x26360B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public ElementCrusher RotCrusher
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x26362C8", Offset = "0x26362C8", VA = "0x26362C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x26362D0", Offset = "0x26362D0", VA = "0x26362D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public ElementCrusher SclCrusher
		{
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x26364E4", Offset = "0x26364E4", VA = "0x26364E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x26364EC", Offset = "0x26364EC", VA = "0x26364EC")]
			set
			{
			}
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x2635EAC", Offset = "0x2635EAC", VA = "0x2635EAC")]
		public static TransformCrusher CheckAgainstStatics(TransformCrusher tc, bool CheckElementCrusherAsWell = true)
		{
			return null;
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x2636700", Offset = "0x2636700", VA = "0x2636700")]
		public void OnCrusherChange(ElementCrusher crusher)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x263670C", Offset = "0x263670C", VA = "0x263670C")]
		public TransformCrusher()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x26367F8", Offset = "0x26367F8", VA = "0x26367F8")]
		public TransformCrusher(bool isStatic = false)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x26368F0", Offset = "0x26368F0", VA = "0x26368F0", Slot = "8")]
		protected virtual void ConstructDefault(bool isStatic = false)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x2636B10", Offset = "0x2636B10", VA = "0x2636B10", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x2636B14", Offset = "0x2636B14", VA = "0x2636B14", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x2636B20", Offset = "0x2636B20", VA = "0x2636B20", Slot = "9")]
		public virtual void CacheValues()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x2636DC0", Offset = "0x2636DC0", VA = "0x2636DC0")]
		public void Write(CompressedMatrix cm, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x2636F1C", Offset = "0x2636F1C", VA = "0x2636F1C")]
		public void Write(CompressedMatrix cm, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x2637078", Offset = "0x2637078", VA = "0x2637078")]
		public void Write(CompressedMatrix cm, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x26371D4", Offset = "0x26371D4", VA = "0x26371D4")]
		public void Write(CompressedMatrix nonalloc, Transform transform, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x2637348", Offset = "0x2637348", VA = "0x2637348")]
		public void Write(Transform transform, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x26373EC", Offset = "0x26373EC", VA = "0x26373EC")]
		public Matrix ReadAndDecompress(ulong[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x26374B8", Offset = "0x26374B8", VA = "0x26374B8")]
		public Matrix ReadAndDecompress(uint[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x2637584", Offset = "0x2637584", VA = "0x2637584")]
		public Matrix ReadAndDecompress(byte[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x2637650", Offset = "0x2637650", VA = "0x2637650")]
		public void ReadAndDecompress(Matrix nonalloc, ulong[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x2637B00", Offset = "0x2637B00", VA = "0x2637B00")]
		public void ReadAndDecompress(Matrix nonalloc, uint[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x2637D1C", Offset = "0x2637D1C", VA = "0x2637D1C")]
		public void ReadAndDecompress(Matrix nonalloc, byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x2637414", Offset = "0x2637414", VA = "0x2637414")]
		public Matrix ReadAndDecompress(ulong[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x26374E0", Offset = "0x26374E0", VA = "0x26374E0")]
		public Matrix ReadAndDecompress(uint[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x26375AC", Offset = "0x26375AC", VA = "0x26375AC")]
		public Matrix ReadAndDecompress(byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x2637DD4", Offset = "0x2637DD4", VA = "0x2637DD4")]
		public void Read(CompressedMatrix nonalloc, byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x2637F38", Offset = "0x2637F38", VA = "0x2637F38")]
		public CompressedMatrix Read(ulong[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x2637FDC", Offset = "0x2637FDC", VA = "0x2637FDC")]
		public CompressedMatrix Read(uint[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x2638080", Offset = "0x2638080", VA = "0x2638080")]
		public CompressedMatrix Read(byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x2638124", Offset = "0x2638124", VA = "0x2638124")]
		public CompressedMatrix Read(ulong[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x26381C8", Offset = "0x26381C8", VA = "0x26381C8")]
		public CompressedMatrix Read(uint[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x263826C", Offset = "0x263826C", VA = "0x263826C")]
		public CompressedMatrix Read(byte[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x2637708", Offset = "0x2637708", VA = "0x2637708")]
		public void Read(CompressedMatrix nonalloc, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x2637BB8", Offset = "0x2637BB8", VA = "0x2637BB8")]
		public void Read(CompressedMatrix nonalloc, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x2638310", Offset = "0x2638310", VA = "0x2638310")]
		public void Write(CompressedMatrix nonalloc, Transform transform, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x2638484", Offset = "0x2638484", VA = "0x2638484")]
		public void Write(Transform transform, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x26385C8", Offset = "0x26385C8", VA = "0x26385C8")]
		public void Write(CompressedMatrix cm, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x2638700", Offset = "0x2638700", VA = "0x2638700")]
		public void Write(CompressedMatrix nonalloc, Transform transform, ulong bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x2638998", Offset = "0x2638998", VA = "0x2638998")]
		public void ReadAndDecompress(Matrix nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x2638A78", Offset = "0x2638A78", VA = "0x2638A78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31714", Offset = "0xB31714")]
		public Matrix ReadAndDecompress(ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x26389C0", Offset = "0x26389C0", VA = "0x26389C0")]
		public void ReadAndDecompress(Matrix nonalloc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x2638AA0", Offset = "0x2638AA0", VA = "0x2638AA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3174C", Offset = "0xB3174C")]
		public Matrix ReadAndDecompress(ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x2638F74", Offset = "0x2638F74", VA = "0x2638F74")]
		public void ReadAndApply(Transform target, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x2639128", Offset = "0x2639128", VA = "0x2639128")]
		public void Read(CompressedMatrix nonalloc, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x26392A4", Offset = "0x26392A4", VA = "0x26392A4")]
		public void ReadAndDecompress(Matrix nonalloc, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x2639384", Offset = "0x2639384", VA = "0x2639384")]
		public CompressedMatrix Read(ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, uint frag4 = 0u, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x2639458", Offset = "0x2639458", VA = "0x2639458")]
		public void Read(CompressedMatrix nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x2638B48", Offset = "0x2638B48", VA = "0x2638B48")]
		public void Read(CompressedMatrix nonalloc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x2639480", Offset = "0x2639480", VA = "0x2639480")]
		public CompressedMatrix Read(ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x2639524", Offset = "0x2639524", VA = "0x2639524")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31784", Offset = "0xB31784")]
		public void Compress(CompressedMatrix nonalloc)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x263952C", Offset = "0x263952C", VA = "0x263952C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB317BC", Offset = "0xB317BC")]
		public CompressedMatrix Compress()
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x26395C0", Offset = "0x26395C0", VA = "0x26395C0")]
		public void Compress(CompressedMatrix nonalloc, Matrix matrix)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x2638854", Offset = "0x2638854", VA = "0x2638854")]
		public void Compress(CompressedMatrix nonalloc, Transform transform)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x2639534", Offset = "0x2639534", VA = "0x2639534")]
		public CompressedMatrix Compress(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x2639744", Offset = "0x2639744", VA = "0x2639744")]
		public CompressedMatrix Compress(Rigidbody rb)
		{
			return null;
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x26397D0", Offset = "0x26397D0", VA = "0x26397D0")]
		public void Compress(CompressedMatrix nonalloc, Rigidbody rb)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x263987C", Offset = "0x263987C", VA = "0x263987C")]
		public CompressedMatrix Compress(Rigidbody2D rb2d)
		{
			return null;
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x2639908", Offset = "0x2639908", VA = "0x2639908")]
		public void Compress(CompressedMatrix nonalloc, Rigidbody2D rb2d)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x26399F4", Offset = "0x26399F4", VA = "0x26399F4")]
		public void CompressAndWrite(Matrix matrix, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x2639B38", Offset = "0x2639B38", VA = "0x2639B38")]
		public void CompressAndWrite(Transform transform, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x2639C44", Offset = "0x2639C44", VA = "0x2639C44")]
		public void CompressAndWrite(Rigidbody rb, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x2639E7C", Offset = "0x2639E7C", VA = "0x2639E7C")]
		public void Decompress(Matrix nonalloc, ulong[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x2639F38", Offset = "0x2639F38", VA = "0x2639F38")]
		public void Decompress(Matrix nonalloc, uint[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x2639FF4", Offset = "0x2639FF4", VA = "0x2639FF4")]
		public void Decompress(Matrix nonalloc, ulong compressed, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x263A0B0", Offset = "0x263A0B0", VA = "0x263A0B0")]
		public Matrix Decompress(ulong[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x263A1A0", Offset = "0x263A1A0", VA = "0x263A1A0")]
		public Matrix Decompress(uint[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x263A290", Offset = "0x263A290", VA = "0x263A290")]
		public Matrix Decompress(byte[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x263A380", Offset = "0x263A380", VA = "0x263A380")]
		public Matrix Decompress(ulong compressed, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x263786C", Offset = "0x263786C", VA = "0x263786C")]
		public void Decompress(Matrix nonalloc, CompressedMatrix compMatrix)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x2638CA0", Offset = "0x2638CA0", VA = "0x2638CA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB317F4", Offset = "0xB317F4")]
		public Matrix Decompress(CompressedMatrix compMatrix)
		{
			return null;
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x263A470", Offset = "0x263A470", VA = "0x263A470")]
		public void Set(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x263A580", Offset = "0x263A580", VA = "0x263A580")]
		public void Set(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x263A71C", Offset = "0x263A71C", VA = "0x263A71C")]
		public void Set(Rigidbody rb, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x263A7F8", Offset = "0x263A7F8", VA = "0x263A7F8")]
		public void Set(Rigidbody rb, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x263A8B0", Offset = "0x263A8B0", VA = "0x263A8B0")]
		public void Set(Rigidbody rb, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x263A968", Offset = "0x263A968", VA = "0x263A968")]
		public void Set(Rigidbody2D rb2d, Matrix matrix)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x263AB04", Offset = "0x263AB04", VA = "0x263AB04")]
		public void Set(Rigidbody2D rb2d, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x263AC14", Offset = "0x263AC14", VA = "0x263AC14")]
		public void Move(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x263AD38", Offset = "0x263AD38", VA = "0x263AD38")]
		public void Move(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x263AED4", Offset = "0x263AED4", VA = "0x263AED4")]
		public void Move(Rigidbody rb, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x263AFB0", Offset = "0x263AFB0", VA = "0x263AFB0")]
		public void Move(Rigidbody rb, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x263B068", Offset = "0x263B068", VA = "0x263B068")]
		public void Move(Rigidbody rb, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x263B120", Offset = "0x263B120", VA = "0x263B120")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3182C", Offset = "0xB3182C")]
		public void Apply(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x263B230", Offset = "0x263B230", VA = "0x263B230")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31864", Offset = "0xB31864")]
		public void Apply(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x263B3CC", Offset = "0x263B3CC", VA = "0x263B3CC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3189C", Offset = "0xB3189C")]
		public void Apply(ulong cvalue)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x263B3DC", Offset = "0x263B3DC", VA = "0x263B3DC")]
		public void Apply(Transform t, ulong cvalue)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x263B608", Offset = "0x263B608", VA = "0x263B608")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB318D4", Offset = "0xB318D4")]
		public void Apply(ulong u0, ulong u1, ulong u2, ulong u3, uint u4)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x263B62C", Offset = "0x263B62C", VA = "0x263B62C")]
		public void Apply(Transform t, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x263B708", Offset = "0x263B708", VA = "0x263B708")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3190C", Offset = "0xB3190C")]
		public void Apply(CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x263902C", Offset = "0x263902C", VA = "0x263902C")]
		public void Apply(Transform t, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x263B718", Offset = "0x263B718", VA = "0x263B718")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31944", Offset = "0xB31944")]
		public void Apply(Matrix matrix)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x263B480", Offset = "0x263B480", VA = "0x263B480")]
		public void Apply(Transform transform, Matrix matrix)
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x263B728", Offset = "0x263B728", VA = "0x263B728")]
		public void Capture(Rigidbody rb, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x263B76C", Offset = "0x263B76C", VA = "0x263B76C")]
		public void Capture(Rigidbody2D rb2d, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x263B7B0", Offset = "0x263B7B0", VA = "0x263B7B0")]
		public void Capture(Transform tr, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x263B8E4", Offset = "0x263B8E4", VA = "0x263B8E4")]
		public int TallyBits(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x263BA34", Offset = "0x263BA34", VA = "0x263BA34", Slot = "10")]
		public void CopyFrom(TransformCrusher source)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x263BAA4", Offset = "0x263BAA4", VA = "0x263BAA4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x263BB30", Offset = "0x263BB30", VA = "0x263BB30")]
		public bool Equals(TransformCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x263BDC4", Offset = "0x263BDC4", VA = "0x263BDC4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x263BF1C", Offset = "0x263BF1C", VA = "0x263BF1C")]
		public static bool operator ==(TransformCrusher crusher1, TransformCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x263BD48", Offset = "0x263BD48", VA = "0x263BD48")]
		public static bool operator !=(TransformCrusher crusher1, TransformCrusher crusher2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200045B")]
	public enum FactorBoundsOn
	{
		[Token(Token = "0x40018FF")]
		EnableDisable,
		[Token(Token = "0x4001900")]
		AwakeDestroy
	}
	[Token(Token = "0x200045C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB20C90", Offset = "0xB20C90")]
	public class WorldBounds : MonoBehaviour
	{
		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Bounds manualBounds;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB27B68", Offset = "0xB27B68")]
		[SerializeField]
		[HideInInspector]
		[WorldBoundsSelectAttribute]
		public int worldBoundsGrp;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		[SerializeField]
		private bool includeChildren;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB27C0C", Offset = "0xB27C0C")]
		[SerializeField]
		[HideInInspector]
		private BoundsTools.BoundsType factorIn;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public Bounds myBounds;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int myBoundsCount;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action OnWorldBoundsChange;

		[Token(Token = "0x17000274")]
		public Bounds ManualBounds
		{
			[Token(Token = "0x6001630")]
			[Address(RVA = "0x1FE4B2C", Offset = "0x1FE4B2C", VA = "0x1FE4B2C")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6001631")]
			[Address(RVA = "0x1FE4B40", Offset = "0x1FE4B40", VA = "0x1FE4B40")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public BoundsTools.BoundsType FactorIn
		{
			[Token(Token = "0x6001632")]
			[Address(RVA = "0x1FE4E9C", Offset = "0x1FE4E9C", VA = "0x1FE4E9C")]
			get
			{
				return default(BoundsTools.BoundsType);
			}
			[Token(Token = "0x6001633")]
			[Address(RVA = "0x1FE4EA4", Offset = "0x1FE4EA4", VA = "0x1FE4EA4")]
			set
			{
			}
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x1FE4EAC", Offset = "0x1FE4EAC", VA = "0x1FE4EAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x1FE4B54", Offset = "0x1FE4B54", VA = "0x1FE4B54")]
		public void CollectMyBounds()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x1FE5350", Offset = "0x1FE5350", VA = "0x1FE5350")]
		private void Start()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x1FE5354", Offset = "0x1FE5354", VA = "0x1FE5354")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x1FE554C", Offset = "0x1FE554C", VA = "0x1FE554C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x1FE5554", Offset = "0x1FE5554", VA = "0x1FE5554")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x1FE535C", Offset = "0x1FE535C", VA = "0x1FE535C")]
		public void FactorInBounds(bool b)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x1FE56B4", Offset = "0x1FE56B4", VA = "0x1FE56B4")]
		public WorldBounds()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045D")]
	public class WorldBoundsGroup
	{
		[Token(Token = "0x4001908")]
		public const string defaultName = "Default";

		[Token(Token = "0x4001909")]
		public const string newAddName = "Unnamed";

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[NonSerialized]
		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action OnWorldBoundChanged;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElementCrusher crusher;

		[NonSerialized]
		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly List<WorldBounds> activeWorldBounds;

		[NonSerialized]
		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Bounds _combinedWorldBounds;

		[Token(Token = "0x17000276")]
		public int ActiveBoundsObjCount
		{
			[Token(Token = "0x600163C")]
			[Address(RVA = "0x1FE572C", Offset = "0x1FE572C", VA = "0x1FE572C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x1FE5778", Offset = "0x1FE5778", VA = "0x1FE5778")]
		public static ElementCrusher GetUncompressedCrusher()
		{
			return null;
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x1FE5900", Offset = "0x1FE5900", VA = "0x1FE5900")]
		public void ResetActiveBounds()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x1FE50F4", Offset = "0x1FE50F4", VA = "0x1FE50F4")]
		public void RecalculateWorldCombinedBounds()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x1FE4EB0", Offset = "0x1FE4EB0", VA = "0x1FE4EB0")]
		public WorldBoundsGroup()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class WorldBoundsSelectAttributeAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001641")]
		[Address(RVA = "0x1FE5954", Offset = "0x1FE5954", VA = "0x1FE5954")]
		public WorldBoundsSelectAttributeAttribute()
		{
		}
	}
	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB20CDC", Offset = "0xB20CDC")]
	public class WorldBoundsSettings : SettingsScriptableObject<WorldBoundsSettings>
	{
		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<WorldBoundsGroup> worldBoundsGroups;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ElementCrusher defaultWorldBoundsCrusher;

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x1FE595C", Offset = "0x1FE595C", VA = "0x1FE595C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB3197C", Offset = "0xB3197C")]
		private static void Bootstrap()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x1FE5A9C", Offset = "0x1FE5A9C", VA = "0x1FE5A9C", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x1FE5B68", Offset = "0x1FE5B68", VA = "0x1FE5B68", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x1FE4F7C", Offset = "0x1FE4F7C", VA = "0x1FE4F7C")]
		public static void RemoveWorldBoundsFromAll(WorldBounds wb)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x1FE5D58", Offset = "0x1FE5D58", VA = "0x1FE5D58")]
		public static int TallyBits(int index, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x1FE5ECC", Offset = "0x1FE5ECC", VA = "0x1FE5ECC")]
		public WorldBoundsSettings()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public interface IPackObjOnReadyChange
	{
		[Token(Token = "0x6001648")]
		void OnPackObjReadyChange(FastBitMask128 readyMask, bool AllAreReady);
	}
}
namespace Photon.Compression.Internal
{
	[Token(Token = "0x2000461")]
	public class SyncRangedAttribute : SyncVarBaseAttribute, IPackSingle
	{
		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LiteFloatCrusher crusher;

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x27CA6E4", Offset = "0x27CA6E4", VA = "0x27CA6E4")]
		public SyncRangedAttribute(LiteFloatCompressType compression, float min, float max, bool accurateCenter)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x27CA79C", Offset = "0x27CA79C", VA = "0x27CA79C", Slot = "10")]
		public SerializationFlags Pack(float value, float preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x27CA868", Offset = "0x27CA868", VA = "0x27CA868", Slot = "11")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Serializable]
	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xB20CEC", Offset = "0xB20CEC")]
	public abstract class SyncVarBaseAttribute : Attribute
	{
		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SyncAs syncAs;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public KeyRate keyRate;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applyCallback;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string snapshotCallback;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SetValueTiming setValueTiming;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool interpolate;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int bitCount;

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x2047F78", Offset = "0x2047F78", VA = "0x2047F78", Slot = "7")]
		public virtual void Initialize(Type primitiveType)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x2047FAC", Offset = "0x2047FAC", VA = "0x2047FAC", Slot = "8")]
		public virtual int GetDefaultBitCount(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x2045B00", Offset = "0x2045B00", VA = "0x2045B00", Slot = "9")]
		public virtual int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x2048488", Offset = "0x2048488", VA = "0x2048488")]
		public bool IsKeyframe(int frameId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x20484BC", Offset = "0x20484BC", VA = "0x20484BC")]
		public bool IsForced(int frameId, SerializationFlags writeFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001651")]
		public bool IsForcedClass<T>(int frameId, T value, T prevValue, SerializationFlags writeFlags) where T : class
		{
			return default(bool);
		}

		[Token(Token = "0x6001652")]
		public bool IsForced<T>(int frameId, T value, T prevValue, SerializationFlags writeFlags) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x2045948", Offset = "0x2045948", VA = "0x2045948")]
		protected SyncVarBaseAttribute()
		{
		}
	}
	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xB20D00", Offset = "0xB20D00")]
	public class PackSupportedTypesAttribute : Attribute
	{
		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type supportedType;

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x2012A0C", Offset = "0x2012A0C", VA = "0x2012A0C")]
		public PackSupportedTypesAttribute(Type supportedType)
		{
		}
	}
	[Token(Token = "0x2000464")]
	public delegate SerializationFlags PackDelegate<T>(T value, T prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	[Token(Token = "0x2000465")]
	public delegate SerializationFlags UnpackDelegate<T>(T value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	[Token(Token = "0x2000466")]
	public delegate SerializationFlags PackListDelegate<T>(List<T> value, List<T> prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags) where T : struct;
	[Token(Token = "0x2000467")]
	public delegate SerializationFlags UnpackListDelegate<T>(List<T> value, BitArray mask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags) where T : struct;
	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB20D14", Offset = "0xB20D14")]
	public interface IPackList<T> where T : struct
	{
		[Token(Token = "0x6001665")]
		SerializationFlags Pack(List<T> value, List<T> prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001666")]
		SerializationFlags Unpack(List<T> value, BitArray mask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB20D7C", Offset = "0xB20D7C")]
	public interface IPackBoolean
	{
		[Token(Token = "0x6001667")]
		SerializationFlags Pack(bool value, bool prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001668")]
		SerializationFlags Unpack(bool value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB20DE4", Offset = "0xB20DE4")]
	public interface IPackChar
	{
		[Token(Token = "0x6001669")]
		SerializationFlags Pack(char value, char prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600166A")]
		SerializationFlags Unpack(char value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB20E4C", Offset = "0xB20E4C")]
	public interface IPackByte
	{
		[Token(Token = "0x600166B")]
		SerializationFlags Pack(byte value, byte prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600166C")]
		SerializationFlags Unpack(byte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200046C")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB20EB4", Offset = "0xB20EB4")]
	public interface IPackSByte
	{
		[Token(Token = "0x600166D")]
		SerializationFlags Pack(sbyte value, sbyte prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600166E")]
		SerializationFlags Unpack(sbyte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB20F1C", Offset = "0xB20F1C")]
	public interface IPackUInt16
	{
		[Token(Token = "0x600166F")]
		SerializationFlags Pack(ushort value, ushort preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001670")]
		SerializationFlags Unpack(ushort value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200046E")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB20F84", Offset = "0xB20F84")]
	public interface IPackInt16
	{
		[Token(Token = "0x6001671")]
		SerializationFlags Pack(short value, short preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001672")]
		SerializationFlags Unpack(short value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200046F")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB20FEC", Offset = "0xB20FEC")]
	public interface IPackUInt32
	{
		[Token(Token = "0x6001673")]
		SerializationFlags Pack(uint value, uint preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001674")]
		SerializationFlags Unpack(uint value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000470")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB21054", Offset = "0xB21054")]
	public interface IPackInt32
	{
		[Token(Token = "0x6001675")]
		SerializationFlags Pack(int value, int preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001676")]
		SerializationFlags Unpack(int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000471")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB210BC", Offset = "0xB210BC")]
	public interface IPackUInt64
	{
		[Token(Token = "0x6001677")]
		SerializationFlags Pack(ulong value, ulong preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001678")]
		SerializationFlags Unpack(ulong value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000472")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB21124", Offset = "0xB21124")]
	public interface IPackInt64
	{
		[Token(Token = "0x6001679")]
		SerializationFlags Pack(long value, long preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600167A")]
		SerializationFlags Unpack(long value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000473")]
	public delegate SerializationFlags PackSingleDelegate(float value, float preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	[Token(Token = "0x2000474")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB2118C", Offset = "0xB2118C")]
	public interface IPackSingle
	{
		[Token(Token = "0x600167F")]
		SerializationFlags Pack(float value, float preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001680")]
		SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000475")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB211F4", Offset = "0xB211F4")]
	public interface IPackDouble
	{
		[Token(Token = "0x6001681")]
		SerializationFlags Pack(double value, double preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001682")]
		SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000476")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB2125C", Offset = "0xB2125C")]
	public interface IPackString
	{
		[Token(Token = "0x6001683")]
		SerializationFlags Pack(string value, string preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001684")]
		SerializationFlags Unpack(string value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000477")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB212C4", Offset = "0xB212C4")]
	public interface IPackStringBuilder
	{
		[Token(Token = "0x6001685")]
		SerializationFlags Pack(StringBuilder value, StringBuilder preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001686")]
		SerializationFlags Unpack(StringBuilder value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000478")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB2132C", Offset = "0xB2132C")]
	public interface IPackVector2
	{
		[Token(Token = "0x6001687")]
		SerializationFlags Pack(Vector2 value, Vector2 preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x6001688")]
		SerializationFlags Unpack(Vector2 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000479")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB21394", Offset = "0xB21394")]
	public interface IPackVector3
	{
		[Token(Token = "0x6001689")]
		SerializationFlags Pack(Vector3 value, Vector3 preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600168A")]
		SerializationFlags Unpack(Vector3 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200047A")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB213FC", Offset = "0xB213FC")]
	public interface IPackVector2Int
	{
		[Token(Token = "0x600168B")]
		SerializationFlags Pack(Vector2Int value, Vector2Int preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600168C")]
		SerializationFlags Unpack(Vector2Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200047B")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0xB21464", Offset = "0xB21464")]
	public interface IPackVector3Int
	{
		[Token(Token = "0x600168D")]
		SerializationFlags Pack(Vector3Int value, Vector3Int preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x600168E")]
		SerializationFlags Unpack(Vector3Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200047C")]
	public abstract class PackFrame
	{
		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastBitMask128 mask;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FastBitMask128 isCompleteMask;

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x21206A0", Offset = "0x21206A0", VA = "0x21206A0")]
		protected PackFrame()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public static class PackObjectDatabase
	{
		[Token(Token = "0x200047E")]
		public delegate SerializationFlags PackStructDelegate(IntPtr obj, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x200047F")]
		public delegate SerializationFlags PackObjDelegate(object obj, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x2000480")]
		public delegate SerializationFlags PackFrameDelegate(PackFrame obj, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x2000481")]
		public delegate SerializationFlags UnpackFrameDelegate(PackFrame obj, FastBitMask128 hasContentMask, FastBitMask128 isCompleteMask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x2000482")]
		public delegate void PackCopyFrameToObjectDelegate(PackFrame src, object trg, FastBitMask128 mask, int maskOffset);

		[Token(Token = "0x2000483")]
		public delegate void PackCopyFrameToStructDelegate(PackFrame src, IntPtr trg, FastBitMask128 mask, int maskOffset);

		[Token(Token = "0x2000484")]
		public delegate void PackSnapshotObjectDelegate(PackFrame snap, PackFrame targ, object trg, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x2000485")]
		public delegate void PackSnapshotStructDelegate(PackFrame snap, PackFrame targ, IntPtr trg, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x2000486")]
		public delegate void PackInterpFrameToFrameDelegate(PackFrame start, PackFrame end, PackFrame trg, float ntime, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x2000487")]
		public delegate void PackInterpFrameToObjectDelegate(PackFrame start, PackFrame end, object trg, float ntime, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x2000488")]
		public delegate void PackInterpFrameToStructDelegate(PackFrame start, PackFrame end, IntPtr trg, float ntime, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x2000489")]
		public class PackObjectInfo
		{
			[Token(Token = "0x400191D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Type packFrameType;

			[Token(Token = "0x400191E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int maxBits;

			[Token(Token = "0x400191F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public readonly int maxBytes;

			[Token(Token = "0x4001920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly FastBitMask128 defaultReadyMask;

			[Token(Token = "0x4001921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public readonly PackObjDelegate PackObjToBuffer;

			[Token(Token = "0x4001922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public readonly PackStructDelegate PackStructToBuffer;

			[Token(Token = "0x4001923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public readonly PackFrameDelegate PackFrameToBuffer;

			[Token(Token = "0x4001924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public readonly UnpackFrameDelegate UnpackFrameFromBuffer;

			[Token(Token = "0x4001925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Func<PackFrame> FactoryFrame;

			[Token(Token = "0x4001926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Func<object, int, PackFrame[]> FactoryFramesObj;

			[Token(Token = "0x4001927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Func<IntPtr, int, PackFrame[]> FactoryFramesStruct;

			[Token(Token = "0x4001928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public PackCopyFrameToObjectDelegate CopyFrameToObj;

			[Token(Token = "0x4001929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public PackCopyFrameToStructDelegate CopyFrameToStruct;

			[Token(Token = "0x400192A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public PackSnapshotObjectDelegate SnapObject;

			[Token(Token = "0x400192B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public PackSnapshotStructDelegate SnapStruct;

			[Token(Token = "0x400192C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public PackInterpFrameToFrameDelegate InterpFrameToFrame;

			[Token(Token = "0x400192D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public PackInterpFrameToObjectDelegate InterpFrameToObj;

			[Token(Token = "0x400192E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public PackInterpFrameToStructDelegate InterpFrameToStruct;

			[Token(Token = "0x400192F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Action<object, PackFrame> CaptureObj;

			[Token(Token = "0x4001930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Action<IntPtr, PackFrame> CaptureStruct;

			[Token(Token = "0x4001931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Action<PackFrame, PackFrame> CopyFrameToFrame;

			[Token(Token = "0x4001932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public readonly int fieldCount;

			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x2001A70", Offset = "0x2001A70", VA = "0x2001A70")]
			public PackObjectInfo(FastBitMask128 defaultReadyMask, PackObjDelegate packObjToBuffer, PackFrameDelegate packFrameToBuffer, UnpackFrameDelegate unpackFrameFromBuffer, int maxBits, Func<PackFrame> factoryFrame, Func<object, int, PackFrame[]> factoryFramesObj, PackCopyFrameToObjectDelegate copyFrameToObj, Action<object, PackFrame> captureObj, Action<PackFrame, PackFrame> copyFrameToFrame, PackSnapshotObjectDelegate snapObject, PackInterpFrameToFrameDelegate interpFrameToFrame, PackInterpFrameToObjectDelegate interpFrameToObj, int fieldCount)
			{
			}

			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x2001BD8", Offset = "0x2001BD8", VA = "0x2001BD8")]
			public PackObjectInfo(FastBitMask128 defaultReadyMask, PackStructDelegate packStructToBuffer, PackFrameDelegate packFrameToBuffer, UnpackFrameDelegate unpackFrameFromBuffer, int maxBits, Func<PackFrame> factoryFrame, Func<IntPtr, int, PackFrame[]> factoryFramesStruct, PackCopyFrameToStructDelegate copyFrameToStruct, Action<IntPtr, PackFrame> captureStruct, Action<PackFrame, PackFrame> copyFrameToFrame, PackSnapshotStructDelegate snapStruct, PackInterpFrameToFrameDelegate interpFrameToFrame, PackInterpFrameToStructDelegate interpFrameToStruct, int fieldCount)
			{
			}
		}

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<Type, PackObjectInfo> packObjInfoLookup;

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x2012378", Offset = "0x2012378", VA = "0x2012378")]
		public static PackObjectInfo GetPackObjectInfo(Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x200048A")]
	public class PackFrame_TestPackObject : PackFrame
	{
		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float rotation;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int intoroboto;

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x21206A8", Offset = "0x21206A8", VA = "0x21206A8")]
		public static void Interpolate(PackFrame start, PackFrame end, PackFrame trg, float time, FastBitMask128 readyMask, int maskOffset)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x2120890", Offset = "0x2120890", VA = "0x2120890")]
		public static void Interpolate(PackFrame start, PackFrame end, object trg, float time, FastBitMask128 readyMask, int maskOffset)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x2120A50", Offset = "0x2120A50", VA = "0x2120A50")]
		public static void SnapshotCallback(PackFrame snapframe, PackFrame targframe, object trg, FastBitMask128 readyMask, int maskOffset)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x2120C4C", Offset = "0x2120C4C", VA = "0x2120C4C")]
		public static void Capture(object src, PackFrame trg)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x2120D40", Offset = "0x2120D40", VA = "0x2120D40")]
		public static void Apply(PackFrame src, object trg, FastBitMask128 mask, int maskOffset)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x2120E9C", Offset = "0x2120E9C", VA = "0x2120E9C")]
		public static void Copy(PackFrame src, PackFrame trg)
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x2120F78", Offset = "0x2120F78", VA = "0x2120F78")]
		public static PackFrame Factory()
		{
			return null;
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x2121040", Offset = "0x2121040", VA = "0x2121040")]
		public static PackFrame[] Factory(object trg, int count)
		{
			return null;
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x2121038", Offset = "0x2121038", VA = "0x2121038")]
		public PackFrame_TestPackObject()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public static class Pack_TestPackObject
	{
		[Token(Token = "0x4001935")]
		public const int LOCAL_FIELDS = 2;

		[Token(Token = "0x4001936")]
		public const int TOTAL_FIELDS = 2;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PackObjectDatabase.PackObjectInfo packObjInfo;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static PackDelegate<float> rotationPacker;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static UnpackDelegate<float> rotationUnpacker;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static PackDelegate<int> intorobotoPacker;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static UnpackDelegate<int> intorobotoUnpacker;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static bool initialized;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public static bool isInitializing;

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x2012A40", Offset = "0x2012A40", VA = "0x2012A40")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB31990", Offset = "0xB31990")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x2013610", Offset = "0x2013610", VA = "0x2013610")]
		public static SerializationFlags Pack(object obj, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x2013818", Offset = "0x2013818", VA = "0x2013818")]
		public static SerializationFlags Pack(TestPackObject packable, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x20139D8", Offset = "0x20139D8", VA = "0x20139D8")]
		public static SerializationFlags Pack(PackFrame obj, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x2013BC4", Offset = "0x2013BC4", VA = "0x2013BC4")]
		public static SerializationFlags Unpack(PackFrame obj, FastBitMask128 mask, FastBitMask128 isCompleteMask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x2013DC8", Offset = "0x2013DC8", VA = "0x2013DC8")]
		public static SerializationFlags Pack(PackFrame_TestPackObject packable, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x2013F88", Offset = "0x2013F88", VA = "0x2013F88")]
		public static SerializationFlags Unpack(PackFrame_TestPackObject packable, FastBitMask128 mask, FastBitMask128 isCompleteMask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
}
namespace Photon.Utilities
{
	[Token(Token = "0x200048C")]
	public static class BitUtilities
	{
		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x22CDB0C", Offset = "0x22CDB0C", VA = "0x22CDB0C")]
		public static int GetBitsForMaxValue(this int maxvalue)
		{
			return default(int);
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x22CDB2C", Offset = "0x22CDB2C", VA = "0x22CDB2C")]
		public static int GetBitsForMaxValue(this uint maxvalue)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200048D")]
	public class CatmulRom
	{
		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x223D67C", Offset = "0x223D67C", VA = "0x223D67C")]
		public static float CatmullRomLerp(float pre, float start, float end, float post, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x223D728", Offset = "0x223D728", VA = "0x223D728")]
		public static float CatmullRomLerp(float pre, float start, float end, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x223D7DC", Offset = "0x223D7DC", VA = "0x223D7DC")]
		public static Vector3 CatmullRomLerp(Vector2 pre, Vector2 start, Vector2 end, Vector2 post, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x223D894", Offset = "0x223D894", VA = "0x223D894")]
		public static Vector3 CatmullRomLerp(Vector2 pre, Vector2 start, Vector2 end, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x223D94C", Offset = "0x223D94C", VA = "0x223D94C")]
		public static Vector3 CatmullRomLerp(Vector3 pre, Vector3 start, Vector3 end, Vector3 post, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x223DA9C", Offset = "0x223DA9C", VA = "0x223DA9C")]
		public static Vector3 CatmullRomLerp(Vector3 pre, Vector3 start, Vector3 end, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x223DBEC", Offset = "0x223DBEC", VA = "0x223DBEC")]
		public CatmulRom()
		{
		}
	}
	[Token(Token = "0x200048E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xB214DC", Offset = "0xB214DC")]
	public class DisableFieldAttribute : PropertyAttribute
	{
		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x2211B38", Offset = "0x2211B38", VA = "0x2211B38")]
		public DisableFieldAttribute()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class MinMaxRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float max;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float min;

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x21BA674", Offset = "0x21BA674", VA = "0x21BA674")]
		public MinMaxRangeAttribute(float min, float max)
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class BitsPerRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int max;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int min;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string label;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool showLabel;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string tooltip;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool show;

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x22CDB4C", Offset = "0x22CDB4C", VA = "0x22CDB4C")]
		public BitsPerRangeAttribute(int min, int max, bool show, bool zeroBase = false, string label = "Max:", bool showLabel = true, string tooltip = "")
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x20C1EC4", Offset = "0x20C1EC4", VA = "0x20C1EC4")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000492")]
	public class SingleUnityLayer
	{
		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		private int m_LayerIndex;

		[Token(Token = "0x17000277")]
		public int LayerIndex
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x24A286C", Offset = "0x24A286C", VA = "0x24A286C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000278")]
		public int Mask
		{
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x24A2888", Offset = "0x24A2888", VA = "0x24A2888")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x24A2874", Offset = "0x24A2874", VA = "0x24A2874")]
		public void Set(int _layerIndex)
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x24A2898", Offset = "0x24A2898", VA = "0x24A2898")]
		public static implicit operator int(SingleUnityLayer m)
		{
			return default(int);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x24A28B4", Offset = "0x24A28B4", VA = "0x24A28B4")]
		public SingleUnityLayer()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class VersaMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool definesZero;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type castTo;

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x2645FC4", Offset = "0x2645FC4", VA = "0x2645FC4")]
		public VersaMaskAttribute(bool definesZero = false, [Optional] Type castTo)
		{
		}
	}
	[Token(Token = "0x2000494")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB214F0", Offset = "0xB214F0")]
	public struct FastBitMask128
	{
		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ulong seg1;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong seg2;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int bitcount;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int seg1bitcount;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int seg2bitcount;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ulong alltrue1;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong alltrue2;

		[Token(Token = "0x17000279")]
		public ulong Seg1
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x2875684", Offset = "0x2875684", VA = "0x2875684")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700027A")]
		public ulong Seg2
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x287568C", Offset = "0x287568C", VA = "0x287568C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700027B")]
		public ulong AllTrue1
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x2875694", Offset = "0x2875694", VA = "0x2875694")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700027C")]
		public ulong AllTrue2
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x287569C", Offset = "0x287569C", VA = "0x287569C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700027D")]
		public int BitCount
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x28756A4", Offset = "0x28756A4", VA = "0x28756A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x28756AC", Offset = "0x28756AC", VA = "0x28756AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public bool Item
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x28757CC", Offset = "0x28757CC", VA = "0x28757CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x28757EC", Offset = "0x28757EC", VA = "0x28757EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public bool AllAreFalse
		{
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x2875930", Offset = "0x2875930", VA = "0x2875930")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000280")]
		public bool AllAreTrue
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x2875958", Offset = "0x2875958", VA = "0x2875958")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x2875724", Offset = "0x2875724", VA = "0x2875724")]
		public FastBitMask128(int bitcount)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x2875790", Offset = "0x2875790", VA = "0x2875790")]
		public FastBitMask128(FastBitMask128 copyFrom)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x2875854", Offset = "0x2875854", VA = "0x2875854")]
		public bool Get(int bit)
		{
			return default(bool);
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x2875874", Offset = "0x2875874", VA = "0x2875874")]
		public void Set(int bit, bool value)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x28758DC", Offset = "0x28758DC", VA = "0x28758DC")]
		public void SetTrue(int bit)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x28758FC", Offset = "0x28758FC", VA = "0x28758FC")]
		public void SetFalse(int bit)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x287591C", Offset = "0x287591C", VA = "0x287591C")]
		public void SetAllTrue()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x2875928", Offset = "0x2875928", VA = "0x2875928")]
		public void SetAllFalse()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x2875994", Offset = "0x2875994", VA = "0x2875994")]
		public void OR(FastBitMask128 other)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x28759B4", Offset = "0x28759B4", VA = "0x28759B4")]
		public void OR(FastBitMask128 other, int otherOffset)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x2875A54", Offset = "0x2875A54", VA = "0x2875A54")]
		public void AND(FastBitMask128 other)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x2875A74", Offset = "0x2875A74", VA = "0x2875A74")]
		public void XOR(FastBitMask128 other)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x2875A94", Offset = "0x2875A94", VA = "0x2875A94")]
		public static FastBitMask128 operator |(FastBitMask128 a, FastBitMask128 b)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x2875AC0", Offset = "0x2875AC0", VA = "0x2875AC0")]
		public static FastBitMask128 operator &(FastBitMask128 a, FastBitMask128 b)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x2875AEC", Offset = "0x2875AEC", VA = "0x2875AEC")]
		public static FastBitMask128 operator ^(FastBitMask128 a, FastBitMask128 b)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x2875B1C", Offset = "0x2875B1C", VA = "0x2875B1C")]
		public static FastBitMask128 operator !(FastBitMask128 a)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x2875B44", Offset = "0x2875B44", VA = "0x2875B44")]
		public FastBitMask128 NOT()
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x2875B6C", Offset = "0x2875B6C", VA = "0x2875B6C")]
		public int CountTrue()
		{
			return default(int);
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x2875BDC", Offset = "0x2875BDC", VA = "0x2875BDC")]
		public int CountFalse()
		{
			return default(int);
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x2875C58", Offset = "0x2875C58", VA = "0x2875C58")]
		public void ClearBitsBefore(int start, int count)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x2875D18", Offset = "0x2875D18", VA = "0x2875D18")]
		public int CountValidRange(int start, int lookahead)
		{
			return default(int);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x2875D70", Offset = "0x2875D70", VA = "0x2875D70")]
		public void Copy(FastBitMask128 other)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x2875DAC", Offset = "0x2875DAC", VA = "0x2875DAC")]
		public bool Compare(FastBitMask128 other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000495")]
	public static class FastBitMaskExt
	{
	}
	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB21528", Offset = "0xB21528")]
	public struct FastBitMask64
	{
		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong bitmask;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int bitcount;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong alltrue;

		[Token(Token = "0x17000281")]
		public int BitCount
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0x2875DE8", Offset = "0x2875DE8", VA = "0x2875DE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001705")]
			[Address(RVA = "0x2875DF0", Offset = "0x2875DF0", VA = "0x2875DF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public bool Item
		{
			[Token(Token = "0x6001708")]
			[Address(RVA = "0x2875E5C", Offset = "0x2875E5C", VA = "0x2875E5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001709")]
			[Address(RVA = "0x2875E74", Offset = "0x2875E74", VA = "0x2875E74")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public bool AllAreFalse
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0x2875F18", Offset = "0x2875F18", VA = "0x2875F18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000284")]
		public bool AllAreTrue
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0x2875F38", Offset = "0x2875F38", VA = "0x2875F38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x2875E1C", Offset = "0x2875E1C", VA = "0x2875E1C")]
		public FastBitMask64(int bitcount)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x2875E40", Offset = "0x2875E40", VA = "0x2875E40")]
		private FastBitMask64(FastBitMask64 copyFrom)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x2875E98", Offset = "0x2875E98", VA = "0x2875E98")]
		public bool Get(int bit)
		{
			return default(bool);
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x2875EB0", Offset = "0x2875EB0", VA = "0x2875EB0")]
		public void Set(int bit, bool value)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x2875ED4", Offset = "0x2875ED4", VA = "0x2875ED4")]
		public void SetTrue(int bit)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x2875EEC", Offset = "0x2875EEC", VA = "0x2875EEC")]
		public void SetFalse(int bit)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x2875F04", Offset = "0x2875F04", VA = "0x2875F04")]
		public void SetAllTrue()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x2875F10", Offset = "0x2875F10", VA = "0x2875F10")]
		public void SetAllFalse()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x2875F5C", Offset = "0x2875F5C", VA = "0x2875F5C")]
		public void OR(FastBitMask64 other)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x2875F70", Offset = "0x2875F70", VA = "0x2875F70")]
		public void AND(FastBitMask64 other)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x2875F84", Offset = "0x2875F84", VA = "0x2875F84")]
		public void XOR(FastBitMask64 other)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x2875F98", Offset = "0x2875F98", VA = "0x2875F98")]
		public int CountTrue()
		{
			return default(int);
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x2875FD4", Offset = "0x2875FD4", VA = "0x2875FD4")]
		public int CountFalse()
		{
			return default(int);
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x287602C", Offset = "0x287602C", VA = "0x287602C")]
		public void ClearBitsBefore(int start, int count)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x287608C", Offset = "0x287608C", VA = "0x287608C")]
		public int CountValidRange(int start, int lookahead)
		{
			return default(int);
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x28760D4", Offset = "0x28760D4", VA = "0x28760D4")]
		public void Copy(FastBitMask64 other)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x28760F0", Offset = "0x28760F0", VA = "0x28760F0")]
		public bool Compare(FastBitMask64 other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000497")]
	public static class FastBitMask64Ext
	{
	}
	[Token(Token = "0x2000498")]
	public abstract class SettingsScriptableObjectBase : ScriptableObject
	{
		[Token(Token = "0x600171B")]
		public abstract void Initialize();

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x24A1074", Offset = "0x24A1074", VA = "0x24A1074")]
		protected SettingsScriptableObjectBase()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public abstract class SettingsScriptableObject<T> : SettingsScriptableObjectBase where T : SettingsScriptableObjectBase
	{
		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string AssetName;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action OnSingletonReady;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static T single;

		[Token(Token = "0x17000285")]
		public static T Single
		{
			[Token(Token = "0x600171D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171E")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600171F")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001720")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001721")]
		protected SettingsScriptableObject()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public static class BoundsTools
	{
		[Token(Token = "0x200049B")]
		public enum BoundsType
		{
			[Token(Token = "0x400195E")]
			Both,
			[Token(Token = "0x400195F")]
			MeshRenderer,
			[Token(Token = "0x4001960")]
			Collider,
			[Token(Token = "0x4001961")]
			Manual
		}

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<MeshFilter> meshFilters;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<Renderer> meshRenderers;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<Collider> colliders;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<Collider> validColliders;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly List<SpriteRenderer> spriteRenderers;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly List<Collider2D> colliders2D;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly List<Collider2D> validColliders2D;

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x22CDBE0", Offset = "0x22CDBE0", VA = "0x22CDBE0")]
		public static Bounds CollectMyBounds(this GameObject go, BoundsType factorIn, [Out] int numOfBoundsFound, bool includeChildren = true, bool includeInactive = false)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x22CEBC4", Offset = "0x22CEBC4", VA = "0x22CEBC4")]
		public static Bounds CollectMyBounds(GameObject go, BoundsType factorIn, bool includeChildren = true)
		{
			return default(Bounds);
		}
	}
	[Token(Token = "0x200049C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xB21570", Offset = "0xB21570")]
	public class EnumMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool definesZero;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type castTo;

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x286D314", Offset = "0x286D314", VA = "0x286D314")]
		public EnumMaskAttribute(bool definesZero = false, [Optional] Type castTo)
		{
		}
	}
	[Token(Token = "0x200049D")]
	public enum SmartVarTypeCode
	{
		[Token(Token = "0x4001965")]
		None,
		[Token(Token = "0x4001966")]
		Int,
		[Token(Token = "0x4001967")]
		Uint,
		[Token(Token = "0x4001968")]
		Bool,
		[Token(Token = "0x4001969")]
		Float,
		[Token(Token = "0x400196A")]
		Byte,
		[Token(Token = "0x400196B")]
		Short,
		[Token(Token = "0x400196C")]
		UShort,
		[Token(Token = "0x400196D")]
		Char
	}
	[Serializable]
	[StructLayout(2)]
	[Token(Token = "0x200049E")]
	public struct SmartVar
	{
		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SmartVarTypeCode TypeCode;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Int;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint UInt;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool Bool;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Float;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte Byte8;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public short Short;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ushort UShort;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public char Char;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SmartVar None;

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x24A2EA4", Offset = "0x24A2EA4", VA = "0x24A2EA4")]
		public static implicit operator SmartVar(int v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x24A2EB4", Offset = "0x24A2EB4", VA = "0x24A2EB4")]
		public static implicit operator SmartVar(uint v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x24A2EC4", Offset = "0x24A2EC4", VA = "0x24A2EC4")]
		public static implicit operator SmartVar(float v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x24A2ED4", Offset = "0x24A2ED4", VA = "0x24A2ED4")]
		public static implicit operator SmartVar(bool v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x24A2EE4", Offset = "0x24A2EE4", VA = "0x24A2EE4")]
		public static implicit operator SmartVar(byte v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x24A2EF4", Offset = "0x24A2EF4", VA = "0x24A2EF4")]
		public static implicit operator SmartVar(short v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x24A2F04", Offset = "0x24A2F04", VA = "0x24A2F04")]
		public static implicit operator SmartVar(ushort v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x24A2F14", Offset = "0x24A2F14", VA = "0x24A2F14")]
		public static implicit operator SmartVar(char v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x24A2F24", Offset = "0x24A2F24", VA = "0x24A2F24")]
		public static implicit operator int(SmartVar v)
		{
			return default(int);
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x24A2FD4", Offset = "0x24A2FD4", VA = "0x24A2FD4")]
		public static implicit operator uint(SmartVar v)
		{
			return default(uint);
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x24A3024", Offset = "0x24A3024", VA = "0x24A3024")]
		public static implicit operator float(SmartVar v)
		{
			return default(float);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x24A3144", Offset = "0x24A3144", VA = "0x24A3144")]
		public static implicit operator bool(SmartVar v)
		{
			return default(bool);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x24A3198", Offset = "0x24A3198", VA = "0x24A3198")]
		public static implicit operator byte(SmartVar v)
		{
			return default(byte);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x24A31E8", Offset = "0x24A31E8", VA = "0x24A31E8")]
		public static implicit operator short(SmartVar v)
		{
			return default(short);
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x24A3238", Offset = "0x24A3238", VA = "0x24A3238")]
		public static implicit operator ushort(SmartVar v)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x24A3288", Offset = "0x24A3288", VA = "0x24A3288")]
		public static implicit operator char(SmartVar v)
		{
			return default(char);
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x24A32D8", Offset = "0x24A32D8", VA = "0x24A32D8")]
		public SmartVar Copy()
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x24A32E0", Offset = "0x24A32E0", VA = "0x24A32E0")]
		public string ToStringVerbose()
		{
			return null;
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x24A3450", Offset = "0x24A3450", VA = "0x24A3450", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace Photon.Pun.Example
{
	[Token(Token = "0x200049F")]
	public class TakeOwnership : MonoBehaviour
	{
		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode keycode;

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x204C63C", Offset = "0x204C63C", VA = "0x204C63C")]
		private void Start()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x204C640", Offset = "0x204C640", VA = "0x204C640")]
		private void Update()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x204C67C", Offset = "0x204C67C", VA = "0x204C67C")]
		public void TransferOwner()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x204C728", Offset = "0x204C728", VA = "0x204C728")]
		public TakeOwnership()
		{
		}
	}
}
namespace Photon.Pun.Demo
{
	[Token(Token = "0x20004A0")]
	public class OwnerGUI : NetComponent
	{
		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text text;

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x2112570", Offset = "0x2112570", VA = "0x2112570", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x21125E0", Offset = "0x21125E0", VA = "0x21125E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x21126F4", Offset = "0x21126F4", VA = "0x21126F4")]
		public OwnerGUI()
		{
		}
	}
}
namespace Photon.Pun.Simple
{
	[Token(Token = "0x20004A1")]
	public class AutoOwnerComponentEnable : NetComponent, IOnAuthorityChanged
	{
		[Token(Token = "0x20004A2")]
		public enum EnableIf
		{
			[Token(Token = "0x4001981")]
			Ignore,
			[Token(Token = "0x4001982")]
			Owner,
			[Token(Token = "0x4001983")]
			Other
		}

		[Serializable]
		[Token(Token = "0x20004A3")]
		public class ComponentToggle
		{
			[Token(Token = "0x4001984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Behaviour component;

			[Token(Token = "0x4001985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EnableIf enableIfOwned;

			[Token(Token = "0x6001747")]
			[Address(RVA = "0x1FF9A2C", Offset = "0x1FF9A2C", VA = "0x1FF9A2C")]
			public ComponentToggle()
			{
			}
		}

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool includeChildren;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool includeUnity;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool includePhoton;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool includeSimple;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private List<ComponentToggle> componentToggles;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private List<Behaviour> componentLookup;

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x22C9858", Offset = "0x22C9858", VA = "0x22C9858", Slot = "21")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x22C99A8", Offset = "0x22C99A8", VA = "0x22C99A8", Slot = "16")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x22C99E0", Offset = "0x22C99E0", VA = "0x22C99E0", Slot = "25")]
		public override void OnAuthorityChanged(bool isMine, bool controllerChanged)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x22C9890", Offset = "0x22C9890", VA = "0x22C9890")]
		private void SwitchAuth(bool isMine)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x22C9A18", Offset = "0x22C9A18", VA = "0x22C9A18")]
		public AutoOwnerComponentEnable()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class AutoOwnerGameObjEnable : MonoBehaviour, IOnAuthorityChanged
	{
		[Token(Token = "0x20004A5")]
		public enum EnableIf
		{
			[Token(Token = "0x4001988")]
			Owner,
			[Token(Token = "0x4001989")]
			Other
		}

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnableIf enableIf;

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x22C9B00", Offset = "0x22C9B00", VA = "0x22C9B00")]
		public void Start()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x22C9C10", Offset = "0x22C9C10", VA = "0x22C9C10", Slot = "4")]
		public void OnAuthorityChanged(bool isMine, bool controllerChanged)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x22C9BC8", Offset = "0x22C9BC8", VA = "0x22C9BC8")]
		private void SwitchAuth(bool isMine)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x22C9CA0", Offset = "0x22C9CA0", VA = "0x22C9CA0")]
		public AutoOwnerGameObjEnable()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class ContactManager : MonoBehaviour
	{
		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IContactSystem> contactSystems;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<IContactTrigger> contactTriggers;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x224D2E4", Offset = "0x224D2E4", VA = "0x224D2E4")]
		public void Awake()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x224D4F4", Offset = "0x224D4F4", VA = "0x224D4F4")]
		public IContactSystem GetContacting(int index)
		{
			return null;
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x224D568", Offset = "0x224D568", VA = "0x224D568")]
		public ContactManager()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class ContactProjectile : MonoBehaviour, IProjectile, IOnPreSimulate, IOnPreUpdate
	{
		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected IProjectileCannon owner;

		[NonSerialized]
		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 velocity;

		[NonSerialized]
		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int frameId;

		[NonSerialized]
		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int subFrameId;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "EnumMaskAttribute", RVA = "0xB27D40", Offset = "0xB27D40")]
		protected RespondTo terminateOn;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "EnumMaskAttribute", RVA = "0xB27D80", Offset = "0xB27D80")]
		protected RespondTo damageOn;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Rigidbody rb;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody2D rb2d;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool _hasRigidBody;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		protected bool needsSnapshot;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IContactTrigger localContactTrigger;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected bool useRbForces;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		protected bool useRb2dForces;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		protected bool useRBGravity;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<IOnNetworkHit> onHit;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<IOnTerminate> onTerminate;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 snapPos;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 targPos;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion snapRot;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion targRot;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static List<NetObject> reusableNetObjects;

		[Token(Token = "0x17000286")]
		public IProjectileCannon Owner
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0x224D650", Offset = "0x224D650", VA = "0x224D650", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001750")]
			[Address(RVA = "0x224D658", Offset = "0x224D658", VA = "0x224D658", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public bool HasRigidbody
		{
			[Token(Token = "0x6001751")]
			[Address(RVA = "0x224D660", Offset = "0x224D660", VA = "0x224D660")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000288")]
		public VitalNameType VitalNameType
		{
			[Token(Token = "0x6001752")]
			[Address(RVA = "0x224D668", Offset = "0x224D668", VA = "0x224D668")]
			get
			{
				return default(VitalNameType);
			}
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x224D698", Offset = "0x224D698", VA = "0x224D698")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x224D758", Offset = "0x224D758", VA = "0x224D758")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x224DB58", Offset = "0x224DB58", VA = "0x224DB58")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x224DBCC", Offset = "0x224DBCC", VA = "0x224DBCC", Slot = "9")]
		public virtual void LagCompensate(float timeshift)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x224DD1C", Offset = "0x224DD1C", VA = "0x224DD1C", Slot = "6")]
		public void Initialize(IProjectileCannon owner, int frameId, int subFrameId, Vector3 localVelocity, RespondTo terminateOn, RespondTo damageOn, float timeshift = 0f)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x224E030", Offset = "0x224E030", VA = "0x224E030", Slot = "7")]
		public void OnPreSimulate(int frameId, int subFrameId)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x224E07C", Offset = "0x224E07C", VA = "0x224E07C", Slot = "10")]
		public virtual void SimulateTime(float t)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x224E1E4", Offset = "0x224E1E4", VA = "0x224E1E4", Slot = "11")]
		public virtual void OnPreUpdate()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x224E158", Offset = "0x224E158", VA = "0x224E158")]
		protected void Interpolate(float t)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x224E254", Offset = "0x224E254", VA = "0x224E254", Slot = "12")]
		protected virtual void Terminate()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x224E3D4", Offset = "0x224E3D4", VA = "0x224E3D4")]
		public ContactProjectile()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public abstract class ContactReactorBase : NetComponent, IContactReactor
	{
		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public ContactType triggerOn;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected SyncState syncState;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int syncStateMountMask;

		[Token(Token = "0x17000289")]
		public ContactType TriggerOn
		{
			[Token(Token = "0x600175F")]
			[Address(RVA = "0x224E550", Offset = "0x224E550", VA = "0x224E550", Slot = "27")]
			get
			{
				return default(ContactType);
			}
		}

		[Token(Token = "0x1700028A")]
		public abstract bool IsPickup
		{
			[Token(Token = "0x6001760")]
			get;
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x224E558", Offset = "0x224E558", VA = "0x224E558", Slot = "18")]
		public override void OnAwakeInitialize(bool isNetObject)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x224E67C", Offset = "0x224E67C", VA = "0x224E67C", Slot = "29")]
		public virtual Consumption OnContactEvent(ContactEvent contactEvent)
		{
			return default(Consumption);
		}

		[Token(Token = "0x6001763")]
		protected abstract Consumption ProcessContactEvent(ContactEvent contactEvent);

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x224EA24", Offset = "0x224EA24", VA = "0x224EA24")]
		protected ContactReactorBase()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public abstract class ContactReactorBase<T> : ContactReactorBase, IOnContactEvent where T : class, IContactSystem
	{
		[Token(Token = "0x6001765")]
		protected ContactReactorBase()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class ContactTrigger : MonoBehaviour, IContactTrigger, IContactable, IOnPreSimulate, IOnStateChange
	{
		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB27DD0", Offset = "0xB27DD0")]
		[SerializeField]
		public bool preventRepeats;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public int[] _ignoredSystems;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected List<Type> ignoredSystems;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<IOnContactEvent> OnContactEventCallbacks;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<IContactSystem> _contactSystems;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB27E54", Offset = "0xB27E54")]
		public IContactTrigger _proxy;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27E8C", Offset = "0xB27E8C")]
		private byte <Index>k__BackingField;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected NetObject netObj;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected ISyncContact syncContact;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IContactGroupsAssign contactGroupsAssign;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal ContactType usedContactTypes;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected HashSet<IContactSystem> triggeringHitscans;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected HashSet<IContactSystem> triggeringEnters;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected HashSet<IContactSystem> triggeringStays;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<IContactSystem> tempFindSystems;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static List<Type> contactSystemTypes;

		[Token(Token = "0x1700028B")]
		public bool PreventRepeats
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0x224ED80", Offset = "0x224ED80", VA = "0x224ED80", Slot = "11")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001768")]
			[Address(RVA = "0x224ED88", Offset = "0x224ED88", VA = "0x224ED88", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public List<IContactSystem> ContactSystems
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0x224ED94", Offset = "0x224ED94", VA = "0x224ED94", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028D")]
		public IContactTrigger Proxy
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x224ED9C", Offset = "0x224ED9C", VA = "0x224ED9C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176B")]
			[Address(RVA = "0x224EDA4", Offset = "0x224EDA4", VA = "0x224EDA4", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public byte Index
		{
			[Token(Token = "0x600176C")]
			[Address(RVA = "0x224EDAC", Offset = "0x224EDAC", VA = "0x224EDAC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB319D4", Offset = "0xB319D4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600176D")]
			[Address(RVA = "0x224EDB4", Offset = "0x224EDB4", VA = "0x224EDB4", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB319E4", Offset = "0xB319E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public NetObject NetObj
		{
			[Token(Token = "0x600176E")]
			[Address(RVA = "0x224EDBC", Offset = "0x224EDBC", VA = "0x224EDBC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		public ISyncContact SyncContact
		{
			[Token(Token = "0x600176F")]
			[Address(RVA = "0x224EDC4", Offset = "0x224EDC4", VA = "0x224EDC4", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		public IContactGroupsAssign ContactGroupsAssign
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0x224EDCC", Offset = "0x224EDCC", VA = "0x224EDCC", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x224EA34", Offset = "0x224EA34", VA = "0x224EA34")]
		static ContactTrigger()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x224EDD4", Offset = "0x224EDD4", VA = "0x224EDD4", Slot = "18")]
		public virtual void PollInterfaces()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x224F318", Offset = "0x224F318", VA = "0x224F318", Slot = "19")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x224F8E8", Offset = "0x224F8E8", VA = "0x224F8E8", Slot = "20")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x224F9B0", Offset = "0x224F9B0", VA = "0x224F9B0", Slot = "21")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x224FA30", Offset = "0x224FA30", VA = "0x224FA30", Slot = "17")]
		public void OnStateChange(ObjState newState, ObjState previousState, Transform attachmentTransform, [Optional] Mount attachTo, bool isReady = true)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x224FA98", Offset = "0x224FA98", VA = "0x224FA98")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x224FAAC", Offset = "0x224FAAC", VA = "0x224FAAC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x224FAC0", Offset = "0x224FAC0", VA = "0x224FAC0")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x224FB08", Offset = "0x224FB08", VA = "0x224FB08")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x224FB50", Offset = "0x224FB50", VA = "0x224FB50")]
		private void OnTriggerStay2D(Collider2D other)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x224FB64", Offset = "0x224FB64", VA = "0x224FB64")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x224FB78", Offset = "0x224FB78", VA = "0x224FB78")]
		private void OnCollisionStay2D(Collision2D collision)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x224FBC0", Offset = "0x224FBC0", VA = "0x224FBC0")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x224FC08", Offset = "0x224FC08", VA = "0x224FC08")]
		private void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x224FC1C", Offset = "0x224FC1C", VA = "0x224FC1C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x224FC30", Offset = "0x224FC30", VA = "0x224FC30")]
		private void OnCollisionExit2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x224FC78", Offset = "0x224FC78", VA = "0x224FC78")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x224FCC0", Offset = "0x224FCC0", VA = "0x224FCC0", Slot = "22")]
		protected virtual void Contact(Component otherCollider, ContactType contactType)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x2250064", Offset = "0x2250064", VA = "0x2250064")]
		protected bool CheckIsNested(IContactTrigger first, IContactTrigger second)
		{
			return default(bool);
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x2250264", Offset = "0x2250264", VA = "0x2250264", Slot = "23")]
		public virtual void OnContact(IContactTrigger otherCT, ContactType contactType)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x2250CBC", Offset = "0x2250CBC", VA = "0x2250CBC", Slot = "24")]
		public virtual Consumption ContactCallbacks(ContactEvent contactEvent)
		{
			return default(Consumption);
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x2250E38", Offset = "0x2250E38", VA = "0x2250E38", Slot = "16")]
		public void OnPreSimulate(int frameId, int subFrameId)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x224F698", Offset = "0x224F698", VA = "0x224F698")]
		internal void GetAllowedTypesFromHashes()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x224EB28", Offset = "0x224EB28", VA = "0x224EB28")]
		internal static void FindDerivedTypesFromAssembly()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x2250B34", Offset = "0x2250B34", VA = "0x2250B34")]
		private bool IsCompatibleSystem(IContactSystem system, IContactTrigger ct)
		{
			return default(bool);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x2250EB0", Offset = "0x2250EB0", VA = "0x2250EB0")]
		public ContactTrigger()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public interface IConsumable
	{
		[Token(Token = "0x17000292")]
		double Charges
		{
			[Token(Token = "0x600178B")]
			get;
			[Token(Token = "0x600178C")]
			set;
		}

		[Token(Token = "0x17000293")]
		Consumption Consumption
		{
			[Token(Token = "0x600178D")]
			get;
		}

		[Token(Token = "0x17000294")]
		ConsumedDespawn ConsumedDespawn
		{
			[Token(Token = "0x600178E")]
			get;
		}
	}
	[Token(Token = "0x20004AC")]
	public interface IContactReactor
	{
	}
	[Token(Token = "0x20004AD")]
	public interface IContactable
	{
	}
	[Token(Token = "0x20004AE")]
	public interface IContactSystem
	{
		[Token(Token = "0x17000295")]
		NetObject NetObj
		{
			[Token(Token = "0x600178F")]
			get;
		}

		[Token(Token = "0x17000296")]
		int ViewID
		{
			[Token(Token = "0x6001790")]
			get;
		}

		[Token(Token = "0x17000297")]
		bool IsMine
		{
			[Token(Token = "0x6001791")]
			get;
		}

		[Token(Token = "0x17000298")]
		byte SystemIndex
		{
			[Token(Token = "0x6001792")]
			get;
			[Token(Token = "0x6001793")]
			set;
		}

		[Token(Token = "0x17000299")]
		Mount DefaultMount
		{
			[Token(Token = "0x6001794")]
			get;
		}

		[Token(Token = "0x1700029A")]
		int ValidMountsMask
		{
			[Token(Token = "0x6001795")]
			get;
		}

		[Token(Token = "0x1700029B")]
		IContactGroupMask ValidContactGroups
		{
			[Token(Token = "0x6001796")]
			get;
		}

		[Token(Token = "0x6001797")]
		Consumption TryTrigger(IContactReactor reactor, ContactEvent contactEvent, int compatibleMounts);

		[Token(Token = "0x6001798")]
		Mount TryPickup(IContactReactor reactor, ContactEvent contactEvent);
	}
	[Token(Token = "0x20004AF")]
	public interface IContactTrigger
	{
		[Token(Token = "0x1700029C")]
		NetObject NetObj
		{
			[Token(Token = "0x6001799")]
			get;
		}

		[Token(Token = "0x1700029D")]
		byte Index
		{
			[Token(Token = "0x600179A")]
			get;
			[Token(Token = "0x600179B")]
			set;
		}

		[Token(Token = "0x1700029E")]
		IContactTrigger Proxy
		{
			[Token(Token = "0x600179E")]
			get;
			[Token(Token = "0x600179F")]
			set;
		}

		[Token(Token = "0x1700029F")]
		bool PreventRepeats
		{
			[Token(Token = "0x60017A0")]
			get;
			[Token(Token = "0x60017A1")]
			set;
		}

		[Token(Token = "0x170002A0")]
		List<IContactSystem> ContactSystems
		{
			[Token(Token = "0x60017A2")]
			get;
		}

		[Token(Token = "0x170002A1")]
		ISyncContact SyncContact
		{
			[Token(Token = "0x60017A3")]
			get;
		}

		[Token(Token = "0x170002A2")]
		IContactGroupsAssign ContactGroupsAssign
		{
			[Token(Token = "0x60017A4")]
			get;
		}

		[Token(Token = "0x600179C")]
		Consumption ContactCallbacks(ContactEvent contactEvent);

		[Token(Token = "0x600179D")]
		void OnContact(IContactTrigger otherCT, ContactType contactType);
	}
	[Token(Token = "0x20004B0")]
	public interface IOnContactEvent
	{
		[Token(Token = "0x170002A3")]
		ContactType TriggerOn
		{
			[Token(Token = "0x60017A6")]
			get;
		}

		[Token(Token = "0x60017A5")]
		Consumption OnContactEvent(ContactEvent contactEvent);
	}
	[Token(Token = "0x20004B1")]
	public interface ISyncContact
	{
		[Token(Token = "0x60017A7")]
		void SyncContactEvent(ContactEvent contactEvent);
	}
	[Token(Token = "0x20004B2")]
	public struct ContactEvent
	{
		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly IContactSystem contactSystem;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly IContactTrigger contactTrigger;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ContactType contactType;

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x224CA14", Offset = "0x224CA14", VA = "0x224CA14")]
		public ContactEvent(IContactSystem contactSystem, IContactTrigger contacter, ContactType contactType)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x224CA5C", Offset = "0x224CA5C", VA = "0x224CA5C")]
		public ContactEvent(ContactEvent contactEvent)
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class SyncContact : SyncObject<SyncContact.Frame>, ISyncContact, IOnSnapshot, IOnNetSerialize, IOnAuthorityChanged, IOnCaptureState, ISerializationOptional
	{
		[Token(Token = "0x20004B4")]
		public struct ContactRecord
		{
			[Token(Token = "0x40019BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ContactType contactType;

			[Token(Token = "0x40019BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int contactSystemViewID;

			[Token(Token = "0x40019BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public byte contactSystemIndex;

			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x200CC48", Offset = "0x200CC48", VA = "0x200CC48")]
			public ContactRecord(int contactSystemViewID, byte contactSystemIndex, ContactType contactType)
			{
			}

			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x200CC54", Offset = "0x200CC54", VA = "0x200CC54", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x20004B5")]
		public class Frame : FrameBase
		{
			[Token(Token = "0x40019C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<ContactRecord> contactRecords;

			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x200CE90", Offset = "0x200CE90", VA = "0x200CE90")]
			public Frame()
			{
			}

			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x200CF20", Offset = "0x200CF20", VA = "0x200CF20")]
			public Frame(int frameId)
			{
			}

			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x200CFC0", Offset = "0x200CFC0", VA = "0x200CFC0", Slot = "4")]
			public override void CopyFrom(FrameBase sourceFrame)
			{
			}

			[Token(Token = "0x60017BD")]
			[Address(RVA = "0x200D034", Offset = "0x200D034", VA = "0x200D034")]
			public static Frame Construct(int frameId)
			{
				return null;
			}

			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x200D098", Offset = "0x200D098", VA = "0x200D098", Slot = "5")]
			public override void Clear()
			{
			}
		}

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Frame currentState;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IContactTrigger contactTrigger;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Rigidbody rb;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Rigidbody2D rb2d;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected bool _hasRigidbody;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Queue<ContactEvent> queuedContactEvents;

		[Token(Token = "0x170002A4")]
		public bool HasRigidbody
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x27C6CB4", Offset = "0x27C6CB4", VA = "0x27C6CB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A5")]
		public GameObject VisiblePickupObj
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0x27C6CBC", Offset = "0x27C6CBC", VA = "0x27C6CBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x27C6CC4", Offset = "0x27C6CC4", VA = "0x27C6CC4", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x27C6E3C", Offset = "0x27C6E3C", VA = "0x27C6E3C", Slot = "57")]
		public virtual void SyncContactEvent(ContactEvent contactEvent)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x27C6EA0", Offset = "0x27C6EA0", VA = "0x27C6EA0", Slot = "58")]
		protected virtual bool EnqueueEvent(ContactEvent contactEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x27C6F34", Offset = "0x27C6F34", VA = "0x27C6F34", Slot = "59")]
		public virtual void OnCaptureCurrentState(int frameId)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x27C719C", Offset = "0x27C719C", VA = "0x27C719C", Slot = "60")]
		protected virtual Consumption Contact(ContactEvent contactEvent)
		{
			return default(Consumption);
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x27C7294", Offset = "0x27C7294", VA = "0x27C7294", Slot = "61")]
		protected virtual void Consume(Frame frame, ContactEvent contactEvent, Consumption consumed)
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x27C7298", Offset = "0x27C7298", VA = "0x27C7298", Slot = "62")]
		public virtual SerializationFlags OnNetSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x27C7460", Offset = "0x27C7460", VA = "0x27C7460", Slot = "53")]
		public SerializationFlags OnNetDeserialize(int originFrameId, byte[] buffer, int bitposition, FrameArrival arrival)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x27C75C8", Offset = "0x27C75C8", VA = "0x27C75C8", Slot = "40")]
		protected override void ApplySnapshot(Frame snapframe, Frame targframe, bool snapIsValid, bool targIsValid)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x27C7870", Offset = "0x27C7870", VA = "0x27C7870")]
		protected static int ConvertMaskToIndex(int mask)
		{
			return default(int);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x27C78D0", Offset = "0x27C78D0", VA = "0x27C78D0")]
		public static int ConvertIndexToMask(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x27C78E4", Offset = "0x27C78E4", VA = "0x27C78E4")]
		public SyncContact()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class BasicInventory : Inventory<Vector3Int>
	{
		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		public Vector3Int capacity;

		[Token(Token = "0x170002A6")]
		public int Volume
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x22CCB68", Offset = "0x22CCB68", VA = "0x22CCB68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A7")]
		public int Used
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x22CCBC0", Offset = "0x22CCBC0", VA = "0x22CCBC0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A8")]
		public int Remaining
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x22CCD58", Offset = "0x22CCD58", VA = "0x22CCD58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x22CCD88", Offset = "0x22CCD88", VA = "0x22CCD88", Slot = "39")]
		public override bool TestCapacity(IInventoryable<Vector3Int> inventoryable)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x22CCEB0", Offset = "0x22CCEB0", VA = "0x22CCEB0")]
		public BasicInventory()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public interface IInventoryable<T> : IContactable
	{
		[Token(Token = "0x170002A9")]
		T Size
		{
			[Token(Token = "0x60017C4")]
			get;
		}
	}
	[Token(Token = "0x20004B8")]
	public interface IInventorySystem : IContactSystem
	{
	}
	[Token(Token = "0x20004B9")]
	public interface IInventorySystem<T> : IInventorySystem, IContactSystem
	{
	}
	[Token(Token = "0x20004BA")]
	public class InventoryContactReactors : InventoryContactReactors<Vector3Int>
	{
		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected Vector3Int size;

		[Token(Token = "0x170002AA")]
		public override Vector3Int Size
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x23D47B8", Offset = "0x23D47B8", VA = "0x23D47B8", Slot = "34")]
			get
			{
				return default(Vector3Int);
			}
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x23D47C8", Offset = "0x23D47C8", VA = "0x23D47C8", Slot = "18")]
		public override void OnAwakeInitialize(bool isNetObject)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x23D4834", Offset = "0x23D4834", VA = "0x23D4834")]
		public InventoryContactReactors()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public abstract class InventoryContactReactors<T> : ContactReactorBase<IInventorySystem<T>>, IInventoryable<T>, IContactable
	{
		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int volume;

		[Token(Token = "0x170002AB")]
		public abstract T Size
		{
			[Token(Token = "0x60017C8")]
			get;
		}

		[Token(Token = "0x170002AC")]
		public int Volume
		{
			[Token(Token = "0x60017C9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002AD")]
		public override bool IsPickup
		{
			[Token(Token = "0x60017CA")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017CB")]
		protected override Consumption ProcessContactEvent(ContactEvent contactEvent)
		{
			return default(Consumption);
		}

		[Token(Token = "0x60017CC")]
		protected InventoryContactReactors()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public abstract class Inventory<T> : NetComponent, IInventorySystem<T>, IInventorySystem, IContactSystem
	{
		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected MountSelector defaultMounting;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27ECC", Offset = "0xB27ECC")]
		private Mount <DefaultMount>k__BackingField;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected ContactGroupMaskSelector contactGroups;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27EEC", Offset = "0xB27EEC")]
		private byte <SystemIndex>k__BackingField;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected MountsManager mountsLookup;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int defaultMountingMask;

		[Token(Token = "0x170002AE")]
		public Mount DefaultMount
		{
			[Token(Token = "0x60017CD")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB319F4", Offset = "0xB319F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017CE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A04", Offset = "0xB31A04")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public IContactGroupMask ValidContactGroups
		{
			[Token(Token = "0x60017CF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		public byte SystemIndex
		{
			[Token(Token = "0x60017D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A14", Offset = "0xB31A14")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60017D1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A24", Offset = "0xB31A24")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public int ValidMountsMask
		{
			[Token(Token = "0x60017D2")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017D3")]
		public override void OnAwakeInitialize(bool isNetObject)
		{
		}

		[Token(Token = "0x60017D4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60017D5")]
		public virtual Consumption TryTrigger(IContactReactor reactor, ContactEvent contactEvent, int compatibleMounts)
		{
			return default(Consumption);
		}

		[Token(Token = "0x60017D6")]
		public virtual Mount TryPickup(IContactReactor reactor, ContactEvent contactEvent)
		{
			return null;
		}

		[Token(Token = "0x60017D7")]
		public virtual bool TestCapacity(IInventoryable<T> inventoryable)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D8")]
		protected Inventory()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public enum RespondTo
	{
		[Token(Token = "0x40019CB")]
		HitSelf = 1,
		[Token(Token = "0x40019CC")]
		IContactTrigger = 2,
		[Token(Token = "0x40019CD")]
		HitNetObj = 4,
		[Token(Token = "0x40019CE")]
		HitNonNetObj = 8
	}
	[Token(Token = "0x20004BE")]
	public interface IProjectile
	{
		[Token(Token = "0x170002B2")]
		IProjectileCannon Owner
		{
			[Token(Token = "0x60017D9")]
			get;
			[Token(Token = "0x60017DA")]
			set;
		}

		[Token(Token = "0x60017DB")]
		void Initialize(IProjectileCannon owner, int frameId, int subFrameId, Vector3 velocity, RespondTo terminateOn, RespondTo damageOn, float timeshift);
	}
	[Token(Token = "0x20004BF")]
	public interface IProjectileCannon
	{
		[Token(Token = "0x170002B3")]
		PhotonView PhotonView
		{
			[Token(Token = "0x60017DC")]
			get;
		}

		[Token(Token = "0x170002B4")]
		NetObject NetObj
		{
			[Token(Token = "0x60017DD")]
			get;
		}

		[Token(Token = "0x170002B5")]
		IContactTrigger ContactTrigger
		{
			[Token(Token = "0x60017DE")]
			get;
		}

		[Token(Token = "0x170002B6")]
		int ViewID
		{
			[Token(Token = "0x60017DF")]
			get;
		}
	}
	[Token(Token = "0x20004C0")]
	public static class ProjectileHelpers
	{
		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject prefab;

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x20BD970", Offset = "0x20BD970", VA = "0x20BD970")]
		public static GameObject GetPlaceholderProj()
		{
			return null;
		}
	}
	[Token(Token = "0x20004C1")]
	public class SyncCannon : SyncShootBase, IProjectileCannon
	{
		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public GameObject projPrefab;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public Vector3 velocity;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "EnumMaskAttribute", RVA = "0xB27F1C", Offset = "0xB27F1C")]
		[SerializeField]
		public RespondTo terminateOn;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "EnumMaskAttribute", RVA = "0xB27F5C", Offset = "0xB27F5C")]
		public RespondTo damageOn;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB27F9C", Offset = "0xB27F9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB27F9C", Offset = "0xB27F9C")]
		public float lagCompensate;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static List<NetObject> reusableNetObjects;

		[Token(Token = "0x170002B7")]
		public override int ApplyOrder
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x27C67DC", Offset = "0x27C67DC", VA = "0x27C67DC", Slot = "28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x27C67E4", Offset = "0x27C67E4", VA = "0x27C67E4", Slot = "14")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x27C67EC", Offset = "0x27C67EC", VA = "0x27C67EC", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x27C691C", Offset = "0x27C691C", VA = "0x27C691C", Slot = "66")]
		protected override bool Trigger(Frame frame, int subFrameId, float timeshift = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x27C6BAC", Offset = "0x27C6BAC", VA = "0x27C6BAC")]
		public SyncCannon()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class SyncContactScan : SyncShootBase, IOnSnapshot, IOnAuthorityChanged
	{
		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool poke;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		public bool grab;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public HitscanDefinition hitscanDefinition;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28000", Offset = "0xB28000")]
		public bool visualizeHitscan;

		[Token(Token = "0x170002B8")]
		public override int ApplyOrder
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x27C79C4", Offset = "0x27C79C4", VA = "0x27C79C4", Slot = "28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x27C79CC", Offset = "0x27C79CC", VA = "0x27C79CC", Slot = "66")]
		protected override bool Trigger(Frame frame, int subFrameId, float timeshift = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x27C7DE0", Offset = "0x27C7DE0", VA = "0x27C7DE0")]
		public SyncContactScan()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public abstract class SyncShootBase : SyncObject<SyncShootBase.Frame>, IOnNetSerialize, IOnPostSimulate, IOnPreUpdate, IOnIncrementFrame, IOnSnapshot, IOnInterpolate
	{
		[Token(Token = "0x20004C4")]
		public class Frame : FrameBase
		{
			[Token(Token = "0x40019DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint triggerMask;

			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x200D524", Offset = "0x200D524", VA = "0x200D524")]
			public Frame()
			{
			}

			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x200D52C", Offset = "0x200D52C", VA = "0x200D52C")]
			public Frame(int frameId)
			{
			}

			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x200D534", Offset = "0x200D534", VA = "0x200D534", Slot = "4")]
			public override void CopyFrom(FrameBase sourceFrame)
			{
			}

			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x200D53C", Offset = "0x200D53C", VA = "0x200D53C", Slot = "5")]
			public override void Clear()
			{
			}
		}

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28038", Offset = "0xB28038")]
		protected Transform origin;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public KeyCode triggerKey;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IContactTrigger contactTrigger;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool hasSyncContact;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool triggerQueued;

		[Token(Token = "0x170002B9")]
		public IContactTrigger ContactTrigger
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0x27CB898", Offset = "0x27CB898", VA = "0x27CB898", Slot = "58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		public override int ApplyOrder
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x27CB8A0", Offset = "0x27CB8A0", VA = "0x27CB8A0", Slot = "28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x27CB8A8", Offset = "0x27CB8A8", VA = "0x27CB8A8", Slot = "18")]
		public override void OnAwakeInitialize(bool isNetObject)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x27CBA60", Offset = "0x27CBA60", VA = "0x27CBA60", Slot = "59")]
		public virtual void OnPreUpdate()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x27CBAB4", Offset = "0x27CBAB4", VA = "0x27CBAB4", Slot = "60")]
		public virtual void QueueTrigger()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x27CBB04", Offset = "0x27CBB04", VA = "0x27CBB04", Slot = "61")]
		public virtual SerializationFlags OnNetSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x27CBC10", Offset = "0x27CBC10", VA = "0x27CBC10", Slot = "62")]
		public virtual SerializationFlags OnNetDeserialize(int originFrameId, byte[] buffer, int bitposition, FrameArrival arrival)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x27CBD10", Offset = "0x27CBD10", VA = "0x27CBD10", Slot = "63")]
		public virtual void OnPostSimulate(int frameId, int subFrameId, bool isNetTick)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x27CBDFC", Offset = "0x27CBDFC", VA = "0x27CBDFC", Slot = "64")]
		public virtual void OnIncrementFrame(int newFrameId, int newSubFrameId, int previousFrameId, int prevSubFrameId)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x27CBECC", Offset = "0x27CBECC", VA = "0x27CBECC", Slot = "65")]
		protected virtual void ApplySubframe(int newFrameId, int newSubFrameId, int offset)
		{
		}

		[Token(Token = "0x60017F4")]
		protected abstract bool Trigger(Frame frame, int subFrameId, float timeshift = 0f);

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x27CBFCC", Offset = "0x27CBFCC", VA = "0x27CBFCC", Slot = "67")]
		protected virtual void TriggerCosmetic(Frame frame, int subFrameId, float timeshift = 0f)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x27C6BCC", Offset = "0x27C6BCC", VA = "0x27C6BCC")]
		protected SyncShootBase()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public enum ConsumedDespawn
	{
		[Token(Token = "0x40019E1")]
		Never,
		[Token(Token = "0x40019E2")]
		OnPartial,
		[Token(Token = "0x40019E3")]
		OnDepleted
	}
	[Token(Token = "0x20004C6")]
	public enum Consumption
	{
		[Token(Token = "0x40019E5")]
		None = 0,
		[Token(Token = "0x40019E6")]
		Partial = 1,
		[Token(Token = "0x40019E7")]
		All = 3
	}
	[Token(Token = "0x20004C7")]
	public interface IVitalsContactReactor : IContactReactor
	{
		[Token(Token = "0x170002BB")]
		VitalNameType VitalNameType
		{
			[Token(Token = "0x60017FB")]
			get;
		}

		[Token(Token = "0x170002BC")]
		bool AllowOverload
		{
			[Token(Token = "0x60017FD")]
			get;
		}

		[Token(Token = "0x170002BD")]
		bool Propagate
		{
			[Token(Token = "0x60017FE")]
			get;
		}

		[Token(Token = "0x60017FC")]
		double DischargeValue(ContactType contactType = ContactType.Undefined);
	}
	[Token(Token = "0x20004C8")]
	public interface IVitalsConsumable : IVitalsContactReactor, IContactReactor, IConsumable
	{
	}
	[Token(Token = "0x20004C9")]
	public interface IVitalsSystem : IContactSystem
	{
		[Token(Token = "0x170002BE")]
		Vitals Vitals
		{
			[Token(Token = "0x60017FF")]
			get;
		}
	}
	[Token(Token = "0x20004CA")]
	public interface IOnChangeOwnedVitals
	{
		[Token(Token = "0x6001800")]
		void OnChangeOwnedVitals(IVitalsSystem added, IVitalsSystem removed);
	}
	[Token(Token = "0x20004CB")]
	public static class OwnedIVitals
	{
		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<IVitalsSystem> ownedVitalComponents;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<IOnChangeOwnedVitals> iOnChangeOwnedVitals;

		[Token(Token = "0x170002BF")]
		public static IVitalsSystem LastItem
		{
			[Token(Token = "0x6001801")]
			[Address(RVA = "0x2112038", Offset = "0x2112038", VA = "0x2112038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x211211C", Offset = "0x211211C", VA = "0x211211C")]
		public static void OnChangeAuthority(IVitalsSystem ivc, bool isMine, bool asServer)
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public interface IOnRootVitalBecameZero
	{
		[Token(Token = "0x6001804")]
		void OnRootVitalBecameZero(Vital vital, IVitalsContactReactor causeOfDeath);
	}
	[Token(Token = "0x20004CD")]
	public class SyncVitals : SyncObject<SyncVitals.Frame>, IVitalsSystem, IContactSystem, IOnSnapshot, IOnNetSerialize, IOnAuthorityChanged, IOnPostSimulate, IOnVitalValueChange, IOnVitalChange, IOnCaptureState, IUseKeyframes, IOnStateChange
	{
		[Token(Token = "0x20004CE")]
		public class Frame : FrameBase
		{
			[Token(Token = "0x40019FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VitalsData vitalsData;

			[Token(Token = "0x6001822")]
			[Address(RVA = "0x200E16C", Offset = "0x200E16C", VA = "0x200E16C")]
			public Frame()
			{
			}

			[Token(Token = "0x6001823")]
			[Address(RVA = "0x200E174", Offset = "0x200E174", VA = "0x200E174")]
			public Frame(int frameId)
			{
			}

			[Token(Token = "0x6001824")]
			[Address(RVA = "0x200E17C", Offset = "0x200E17C", VA = "0x200E17C")]
			public Frame(int frameId, Vitals vitals)
			{
			}

			[Token(Token = "0x6001825")]
			[Address(RVA = "0x200E20C", Offset = "0x200E20C", VA = "0x200E20C", Slot = "4")]
			public override void CopyFrom(FrameBase sourceFrame)
			{
			}
		}

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28094", Offset = "0xB28094")]
		private byte <SystemIndex>k__BackingField;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vitals vitals;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected ContactGroupMaskSelector contactGroups;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB280B4", Offset = "0xB280B4")]
		public MountSelector defaultMounting;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB280EC", Offset = "0xB280EC")]
		private Mount <DefaultMount>k__BackingField;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB280FC", Offset = "0xB280FC")]
		public bool autoDespawn;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28134", Offset = "0xB28134")]
		public bool resetOnSpawn;

		[NonSerialized]
		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private VitalsData lastSentData;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<IOnVitalsValueChange> OnVitalsValueChange;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<IOnVitalsParamChange> OnVitalsParamChange;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<IOnRootVitalBecameZero> OnRootVitalBecameZero;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected SyncState syncState;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vital[] vitalArray;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Vital rootVital;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int vitalsCount;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected int defaultMountingMask;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool isPredicted;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool wasDespawned;

		[Token(Token = "0x170002C0")]
		public override int ApplyOrder
		{
			[Token(Token = "0x6001805")]
			[Address(RVA = "0x2048508", Offset = "0x2048508", VA = "0x2048508", Slot = "28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C1")]
		public override bool AllowReconstructionOfEmpty
		{
			[Token(Token = "0x6001806")]
			[Address(RVA = "0x2048510", Offset = "0x2048510", VA = "0x2048510", Slot = "42")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C2")]
		public byte SystemIndex
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0x2048518", Offset = "0x2048518", VA = "0x2048518", Slot = "54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A34", Offset = "0xB31A34")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001808")]
			[Address(RVA = "0x2048520", Offset = "0x2048520", VA = "0x2048520", Slot = "55")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A44", Offset = "0xB31A44")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public Vitals Vitals
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x2048528", Offset = "0x2048528", VA = "0x2048528", Slot = "50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public IContactGroupMask ValidContactGroups
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x2048530", Offset = "0x2048530", VA = "0x2048530", Slot = "58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		public int ValidMountsMask
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0x2048590", Offset = "0x2048590", VA = "0x2048590", Slot = "57")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C6")]
		public Mount DefaultMount
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x20485A0", Offset = "0x20485A0", VA = "0x20485A0", Slot = "56")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A54", Offset = "0xB31A54")]
			get
			{
				return null;
			}
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x20485A8", Offset = "0x20485A8", VA = "0x20485A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31A64", Offset = "0xB31A64")]
			set
			{
			}
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x20485B0", Offset = "0x20485B0", VA = "0x20485B0", Slot = "37")]
		protected override void PopulateFrames()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x20486FC", Offset = "0x20486FC", VA = "0x20486FC", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x2048970", Offset = "0x2048970", VA = "0x2048970", Slot = "21")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x2048CD0", Offset = "0x2048CD0", VA = "0x2048CD0", Slot = "25")]
		public override void OnAuthorityChanged(bool isMine, bool controllerChanged)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x2048D84", Offset = "0x2048D84", VA = "0x2048D84", Slot = "59")]
		public Consumption TryTrigger(IContactReactor icontactReactor, ContactEvent contactEvent, int compatibleMounts)
		{
			return default(Consumption);
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x2049178", Offset = "0x2049178", VA = "0x2049178")]
		protected Consumption TestConsumption(double amountConsumed, IVitalsConsumable iva, ContactEvent contactEvent)
		{
			return default(Consumption);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x2049424", Offset = "0x2049424", VA = "0x2049424", Slot = "60")]
		public Mount TryPickup(IContactReactor reactor, ContactEvent contactEvent)
		{
			return null;
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x204942C", Offset = "0x204942C", VA = "0x204942C", Slot = "65")]
		public void OnPostSimulate(int frameId, int subFrameId, bool isNetTick)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x2049458", Offset = "0x2049458", VA = "0x2049458", Slot = "70")]
		public virtual void OnCaptureCurrentState(int frameId)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x2049500", Offset = "0x2049500", VA = "0x2049500", Slot = "62")]
		public SerializationFlags OnNetSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x20495E8", Offset = "0x20495E8", VA = "0x20495E8", Slot = "63")]
		public SerializationFlags OnNetDeserialize(int originFrameId, byte[] buffer, int bitposition, FrameArrival arrival)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x20496CC", Offset = "0x20496CC", VA = "0x20496CC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31A74", Offset = "0xB31A74")]
		public double ApplyDamage(double damage)
		{
			return default(double);
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x2049738", Offset = "0x2049738", VA = "0x2049738", Slot = "66")]
		public void OnVitalValueChange(Vital vital)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x2049880", Offset = "0x2049880", VA = "0x2049880")]
		public void OnVitalParamChange(Vital vital)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x20499EC", Offset = "0x20499EC", VA = "0x20499EC", Slot = "71")]
		protected virtual void RootVitalBecameZero(Vital vital)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x2049B8C", Offset = "0x2049B8C", VA = "0x2049B8C", Slot = "69")]
		public void OnStateChange(ObjState newState, ObjState previousState, Transform attachmentTransform, [Optional] Mount attachTo, bool isReady = true)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x2049C24", Offset = "0x2049C24", VA = "0x2049C24", Slot = "40")]
		protected override void ApplySnapshot(Frame snapframe, Frame targframe, bool snapIsValid, bool targIsValid)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x2049C6C", Offset = "0x2049C6C", VA = "0x2049C6C", Slot = "48")]
		protected override void InterpolateFrame(Frame targframe, Frame startframe, Frame endframe, float t)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x2049C98", Offset = "0x2049C98", VA = "0x2049C98", Slot = "49")]
		protected override void ExtrapolateFrame(Frame prevframe, Frame snapframe, Frame targframe)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x2049D90", Offset = "0x2049D90", VA = "0x2049D90")]
		public SyncVitals()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public abstract class VitalsUISrcBase : MonoBehaviour, IOnChangeOwnedVitals
	{
		[Token(Token = "0x20004D0")]
		public enum MonitorSource
		{
			[Token(Token = "0x4001A01")]
			Auto,
			[Token(Token = "0x4001A02")]
			Owned,
			[Token(Token = "0x4001A03")]
			Self,
			[Token(Token = "0x4001A04")]
			GameObject
		}

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2816C", Offset = "0xB2816C")]
		public MonitorSource monitor;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB281B8", Offset = "0xB281B8")]
		public UnityEngine.Object vitalsSource;

		[NonSerialized]
		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vitals vitals;

		[Token(Token = "0x6001826")]
		public abstract void OnChangeOwnedVitals(IVitalsSystem added, IVitalsSystem removed);

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x1FE1AD4", Offset = "0x1FE1AD4", VA = "0x1FE1AD4", Slot = "6")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1FE1AE4", Offset = "0x1FE1AE4", VA = "0x1FE1AE4", Slot = "7")]
		public virtual IVitalsSystem ApplyVitalsSource(UnityEngine.Object srcObj)
		{
			return null;
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x1FE1E84", Offset = "0x1FE1E84", VA = "0x1FE1E84")]
		private static IVitalsSystem FindIVitalComponentOnGameObj(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1FE1F58", Offset = "0x1FE1F58", VA = "0x1FE1F58")]
		protected VitalsUISrcBase()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class VitalUI : VitalUIBase
	{
		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static GameObject vitalBarDefaultPrefab;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool autoOffset;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28214", Offset = "0xB28214")]
		public Vector3 offset;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float widthMultiplier;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2824C", Offset = "0xB2824C")]
		public bool searchChildren;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Text UIText;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Image UIImage;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public TextMesh textMesh;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SpriteRenderer barSprite;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public SpriteRenderer backSprite;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public bool billboard;

		[Token(Token = "0x4001A10")]
		private const string PLACEHOLDER_CANVAS_NAME = "PLACEHOLDER_VITALS_CANVAS";

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<SpriteRenderer> resuableFindSpriteRend;

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x264822C", Offset = "0x264822C", VA = "0x264822C", Slot = "6")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x2648740", Offset = "0x2648740", VA = "0x2648740", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x264882C", Offset = "0x264882C", VA = "0x264882C", Slot = "9")]
		public override void Recalculate()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x2648900", Offset = "0x2648900", VA = "0x2648900", Slot = "15")]
		protected virtual void AutoAlign()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x2648254", Offset = "0x2648254", VA = "0x2648254")]
		public bool FindUIElements()
		{
			return default(bool);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x26489D4", Offset = "0x26489D4", VA = "0x26489D4", Slot = "14")]
		public override void UpdateGraphics(Vital vital)
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x2648D00", Offset = "0x2648D00", VA = "0x2648D00")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x2648E28", Offset = "0x2648E28", VA = "0x2648E28")]
		public VitalUI()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public abstract class VitalUIBase : VitalsUISrcBase, IOnVitalValueChange, IOnVitalChange, IOnChangeOwnedVitals
	{
		[Token(Token = "0x20004D3")]
		public enum TargetField
		{
			[Token(Token = "0x4001A17")]
			Value,
			[Token(Token = "0x4001A18")]
			Max,
			[Token(Token = "0x4001A19")]
			MaxOverload
		}

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB282F8", Offset = "0xB282F8")]
		[HideInInspector]
		public VitalNameType targetVital;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28344", Offset = "0xB28344")]
		[HideInInspector]
		public TargetField targetField;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[HideInInspector]
		protected int vitalIndex;

		[NonSerialized]
		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Vital vital;

		[Token(Token = "0x170002C7")]
		public Vitals Vitals
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0x2648F38", Offset = "0x2648F38", VA = "0x2648F38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001835")]
			[Address(RVA = "0x2648F40", Offset = "0x2648F40", VA = "0x2648F40")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public Vital Vital
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x26492C4", Offset = "0x26492C4", VA = "0x26492C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x2648FA0", Offset = "0x2648FA0", VA = "0x2648FA0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x2649094", Offset = "0x2649094", VA = "0x2649094", Slot = "7")]
		public override IVitalsSystem ApplyVitalsSource(UnityEngine.Object vs)
		{
			return null;
		}

		[Token(Token = "0x6001837")]
		public abstract void Recalculate();

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x2648774", Offset = "0x2648774", VA = "0x2648774", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x26492CC", Offset = "0x26492CC", VA = "0x26492CC", Slot = "11")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x26492E8", Offset = "0x26492E8", VA = "0x26492E8", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x264939C", Offset = "0x264939C", VA = "0x264939C", Slot = "5")]
		public override void OnChangeOwnedVitals(IVitalsSystem added, IVitalsSystem removed)
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x2649594", Offset = "0x2649594", VA = "0x2649594")]
		public void OnVitalParamChange(Vital vital)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x2649598", Offset = "0x2649598", VA = "0x2649598", Slot = "13")]
		public virtual void OnVitalValueChange(Vital vital)
		{
		}

		[Token(Token = "0x6001840")]
		public abstract void UpdateGraphics(Vital vital);

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x2648E48", Offset = "0x2648E48", VA = "0x2648E48")]
		protected VitalUIBase()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class VitalsContactReactor : ContactReactorBase, IOnContactEvent, IVitalsContactReactor, IContactReactor, IOnStateChange
	{
		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected VitalNameType vitalNameType;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public double dischargeOnEnter;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public double dischargeOnExit;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public double dischargeOnScan;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		protected double dischargePerSec;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28468", Offset = "0xB28468")]
		public bool propagate;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool allowOverload;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		[SerializeField]
		protected bool isPickup;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		public bool useCharges;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public double _charges;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB284B0", Offset = "0xB284B0")]
		[SerializeField]
		protected double initialCharges;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Consumption consumeDespawn;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected double valuePerFixed;

		[Token(Token = "0x170002C9")]
		public virtual VitalNameType VitalNameType
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0x264A448", Offset = "0x264A448", VA = "0x264A448", Slot = "38")]
			get
			{
				return default(VitalNameType);
			}
		}

		[Token(Token = "0x170002CA")]
		public double DischargePerSec
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0x264A474", Offset = "0x264A474", VA = "0x264A474")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001844")]
			[Address(RVA = "0x264A47C", Offset = "0x264A47C", VA = "0x264A47C")]
			internal set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public virtual bool Propagate
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0x264A4BC", Offset = "0x264A4BC", VA = "0x264A4BC", Slot = "39")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001846")]
			[Address(RVA = "0x264A4C4", Offset = "0x264A4C4", VA = "0x264A4C4", Slot = "40")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public virtual bool AllowOverload
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0x264A4D0", Offset = "0x264A4D0", VA = "0x264A4D0", Slot = "41")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001848")]
			[Address(RVA = "0x264A4D8", Offset = "0x264A4D8", VA = "0x264A4D8", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public override bool IsPickup
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0x264A4E4", Offset = "0x264A4E4", VA = "0x264A4E4", Slot = "28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CE")]
		public virtual double Charges
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0x264A4EC", Offset = "0x264A4EC", VA = "0x264A4EC", Slot = "43")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x264A4F4", Offset = "0x264A4F4", VA = "0x264A4F4", Slot = "44")]
		public virtual Consumption ConsumeCharges(double amount)
		{
			return default(Consumption);
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x264A5CC", Offset = "0x264A5CC", VA = "0x264A5CC", Slot = "45")]
		protected virtual void Consume(Consumption consumed)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x264A690", Offset = "0x264A690", VA = "0x264A690", Slot = "18")]
		public override void OnAwakeInitialize(bool isNetObject)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x264A6D8", Offset = "0x264A6D8", VA = "0x264A6D8", Slot = "30")]
		protected override Consumption ProcessContactEvent(ContactEvent contactEvent)
		{
			return default(Consumption);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x264AA0C", Offset = "0x264AA0C", VA = "0x264AA0C", Slot = "37")]
		public void OnStateChange(ObjState newState, ObjState previousState, Transform attachmentTransform, [Optional] Mount attachTo, bool isReady = true)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x264AA20", Offset = "0x264AA20", VA = "0x264AA20", Slot = "34")]
		public double DischargeValue(ContactType contactType = ContactType.Undefined)
		{
			return default(double);
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x264A9C0", Offset = "0x264A9C0", VA = "0x264A9C0")]
		protected double GetValueForTriggerType(ContactType collideType)
		{
			return default(double);
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x264AB40", Offset = "0x264AB40", VA = "0x264AB40")]
		public VitalsContactReactor()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class VitalsData
	{
		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vitals vitals;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VitalData[] datas;

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x1FE19B0", Offset = "0x1FE19B0", VA = "0x1FE19B0")]
		public VitalsData(Vitals vitals)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x1FE1A50", Offset = "0x1FE1A50", VA = "0x1FE1A50")]
		public void CopyFrom(VitalsData source)
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public struct VitalData
	{
		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private double _value;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int ticksUntilRegen;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int ticksUntilDecay;

		[Token(Token = "0x170002CF")]
		public double Value
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0x26474F8", Offset = "0x26474F8", VA = "0x26474F8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001856")]
			[Address(RVA = "0x2647500", Offset = "0x2647500", VA = "0x2647500")]
			set
			{
			}
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x2647508", Offset = "0x2647508", VA = "0x2647508")]
		public VitalData(double value, int ticksUntilDecay, int ticksUntilRegen)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x2647514", Offset = "0x2647514", VA = "0x2647514", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004D7")]
	public class VitalDefinition
	{
		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<IOnVitalValueChange> iOnVitalChange;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VitalNameType vitalName;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2850C", Offset = "0xB2850C")]
		[SerializeField]
		private double _fullValue;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28558", Offset = "0xB28558")]
		[SerializeField]
		private uint _maxValue;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double startValue;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB285A4", Offset = "0xB285A4")]
		[SerializeField]
		private float regenDelay;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB285F0", Offset = "0xB285F0")]
		[SerializeField]
		private double regenRate;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2863C", Offset = "0xB2863C")]
		private float decayDelay;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28688", Offset = "0xB28688")]
		private double decayRate;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB286D4", Offset = "0xB286D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB286D4", Offset = "0xB286D4")]
		[SerializeField]
		private double absorption;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _decayDelayInTicks;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _regenDelayInTicks;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double _decayPerTick;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double _regenPerTick;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int bitsForValue;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int bitsForDecayDelay;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int bitsForRegenDelay;

		[Token(Token = "0x170002D0")]
		public VitalNameType VitalName
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0x26477DC", Offset = "0x26477DC", VA = "0x26477DC")]
			get
			{
				return default(VitalNameType);
			}
		}

		[Token(Token = "0x170002D1")]
		public double FullValue
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0x26477E8", Offset = "0x26477E8", VA = "0x26477E8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002D2")]
		public double MaxValue
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0x2646A50", Offset = "0x2646A50", VA = "0x2646A50")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002D3")]
		public double Absorbtion
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0x26477F0", Offset = "0x26477F0", VA = "0x26477F0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002D4")]
		public int DecayDelayInTicks
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0x26477F8", Offset = "0x26477F8", VA = "0x26477F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D5")]
		public int RegenDelayInTicks
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0x2647800", Offset = "0x2647800", VA = "0x2647800")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D6")]
		public double DecayPerTick
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0x2647808", Offset = "0x2647808", VA = "0x2647808")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002D7")]
		public double RegenPerTick
		{
			[Token(Token = "0x6001862")]
			[Address(RVA = "0x2647810", Offset = "0x2647810", VA = "0x2647810")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x2647714", Offset = "0x2647714", VA = "0x2647714")]
		public void AddIOnVitalChange(IOnVitalValueChange cb)
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x2647778", Offset = "0x2647778", VA = "0x2647778")]
		public void RemoveIOnVitalChange(IOnVitalValueChange cb)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x2647818", Offset = "0x2647818", VA = "0x2647818")]
		public VitalDefinition(double fullValue, uint maxValue, double startValue, double absorbtion, float regenDelay, double regenRate, float decayDelay, double decayRate, string name)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x2646BB0", Offset = "0x2646BB0", VA = "0x2646BB0")]
		public void Initialize(float tickDuration)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x26479F0", Offset = "0x26479F0", VA = "0x26479F0")]
		public void SetTickInterval(float tickInterval)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x2646CD4", Offset = "0x2646CD4", VA = "0x2646CD4")]
		public VitalData GetDefaultData()
		{
			return default(VitalData);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x2647AA0", Offset = "0x2647AA0", VA = "0x2647AA0")]
		public SerializationFlags Serialize(VitalData vitalData, VitalData prevVitalData, byte[] buffer, int bitposition, bool keyframe = true)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x2647BFC", Offset = "0x2647BFC", VA = "0x2647BFC")]
		public VitalData Deserialize(byte[] buffer, int bitposition, bool keyframe = true)
		{
			return default(VitalData);
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x2647CD4", Offset = "0x2647CD4", VA = "0x2647CD4")]
		public VitalData Extrapolate(VitalData prev)
		{
			return default(VitalData);
		}
	}
	[Token(Token = "0x20004D8")]
	public enum VitalType
	{
		[Token(Token = "0x4001A3E")]
		None,
		[Token(Token = "0x4001A3F")]
		Custom,
		[Token(Token = "0x4001A40")]
		Health,
		[Token(Token = "0x4001A41")]
		Armor,
		[Token(Token = "0x4001A42")]
		Shield,
		[Token(Token = "0x4001A43")]
		Energy,
		[Token(Token = "0x4001A44")]
		Mana,
		[Token(Token = "0x4001A45")]
		Rage
	}
	[Serializable]
	[Token(Token = "0x20004D9")]
	public struct VitalNameType
	{
		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public VitalType type;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[HideInInspector]
		public int hash;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] enumNames;

		[Token(Token = "0x170002D8")]
		public string[] EnumNames
		{
			[Token(Token = "0x600186C")]
			[Address(RVA = "0x2647E68", Offset = "0x2647E68", VA = "0x2647E68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x2647D34", Offset = "0x2647D34", VA = "0x2647D34")]
		public VitalNameType(VitalType vitalType)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x264793C", Offset = "0x264793C", VA = "0x264793C")]
		public VitalNameType(string name)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x2647ECC", Offset = "0x2647ECC", VA = "0x2647ECC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004DA")]
	public interface IOnVitalsChange
	{
	}
	[Token(Token = "0x20004DB")]
	public interface IOnVitalChange
	{
	}
	[Token(Token = "0x20004DC")]
	public interface IOnVitalsValueChange : IOnVitalsChange
	{
		[Token(Token = "0x600186F")]
		void OnVitalValueChange(Vital vital);
	}
	[Token(Token = "0x20004DD")]
	public interface IOnVitalValueChange : IOnVitalChange
	{
		[Token(Token = "0x6001870")]
		void OnVitalValueChange(Vital vital);
	}
	[Token(Token = "0x20004DE")]
	public interface IOnVitalsParamChange : IOnVitalsChange
	{
		[Token(Token = "0x6001871")]
		void OnVitalParamChange(Vital vital);
	}
	[Token(Token = "0x20004DF")]
	public interface IOnVitalParamChange : IOnVitalChange
	{
		[Token(Token = "0x6001872")]
		void OnVitalParamChange(Vital vital);
	}
	[Serializable]
	[Token(Token = "0x20004E0")]
	public class Vital
	{
		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private VitalDefinition vitalDef;

		[NonSerialized]
		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VitalData vitalData;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<IOnVitalValueChange> OnValueChangeCallbacks;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<IOnVitalParamChange> OnParamChangeCallbacks;

		[Token(Token = "0x170002D9")]
		public VitalDefinition VitalDef
		{
			[Token(Token = "0x6001873")]
			[Address(RVA = "0x2646898", Offset = "0x2646898", VA = "0x2646898")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DA")]
		public VitalData VitalData
		{
			[Token(Token = "0x6001874")]
			[Address(RVA = "0x26468A0", Offset = "0x26468A0", VA = "0x26468A0")]
			get
			{
				return default(VitalData);
			}
			[Token(Token = "0x6001875")]
			[Address(RVA = "0x26468AC", Offset = "0x26468AC", VA = "0x26468AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public double Value
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0x26468B4", Offset = "0x26468B4", VA = "0x26468B4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001877")]
			[Address(RVA = "0x26468BC", Offset = "0x26468BC", VA = "0x26468BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public int TicksUntilDecay
		{
			[Token(Token = "0x6001878")]
			[Address(RVA = "0x2646A5C", Offset = "0x2646A5C", VA = "0x2646A5C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001879")]
			[Address(RVA = "0x2646A64", Offset = "0x2646A64", VA = "0x2646A64")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public int TicksUntilRegen
		{
			[Token(Token = "0x600187A")]
			[Address(RVA = "0x2646A6C", Offset = "0x2646A6C", VA = "0x2646A6C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600187B")]
			[Address(RVA = "0x2646A74", Offset = "0x2646A74", VA = "0x2646A74")]
			set
			{
			}
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x2646A7C", Offset = "0x2646A7C", VA = "0x2646A7C")]
		public Vital(VitalDefinition vitalDef)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x2646B80", Offset = "0x2646B80", VA = "0x2646B80")]
		public void Initialize(float tickDuration)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x2646BB4", Offset = "0x2646BB4", VA = "0x2646BB4")]
		public void ResetValues()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x2646CE4", Offset = "0x2646CE4", VA = "0x2646CE4")]
		public void AddIOnVitalChange(IOnVitalChange cb)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x2646DC8", Offset = "0x2646DC8", VA = "0x2646DC8")]
		public void RemoveIOnVitalChange(IOnVitalChange cb)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x2646EAC", Offset = "0x2646EAC", VA = "0x2646EAC")]
		public void Apply(VitalData vdata)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x2646EDC", Offset = "0x2646EDC", VA = "0x2646EDC")]
		public double ApplyCharges(double amt, bool allowOverload, bool ignoreAbsorbtion)
		{
			return default(double);
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x2646FB4", Offset = "0x2646FB4", VA = "0x2646FB4")]
		public bool IsFull(bool allowOverload)
		{
			return default(bool);
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x2646FF0", Offset = "0x2646FF0", VA = "0x2646FF0")]
		public double ApplyChange(IVitalsContactReactor iVitalsAffector, ContactEvent contectEvent)
		{
			return default(double);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x26470B8", Offset = "0x26470B8", VA = "0x26470B8")]
		public double ApplyChange(double amount, [Optional] IVitalsContactReactor reactor)
		{
			return default(double);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x26471CC", Offset = "0x26471CC", VA = "0x26471CC")]
		public void DisruptRegen()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x26471F0", Offset = "0x26471F0", VA = "0x26471F0")]
		public void DisruptDecay()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x2647214", Offset = "0x2647214", VA = "0x2647214")]
		public double TestApplyChange(IVitalsContactReactor iVitalsAffector, ContactEvent contactEvent)
		{
			return default(double);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x26472DC", Offset = "0x26472DC", VA = "0x26472DC")]
		public double TestApplyChange(double charge, IVitalsContactReactor iVitalsAffector)
		{
			return default(double);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x26473D0", Offset = "0x26473D0", VA = "0x26473D0")]
		public void Simulate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E1")]
	public class Vitals : IOnVitalValueChange, IOnVitalChange, IOnVitalParamChange
	{
		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<IOnVitalValueChange> OnVitalValueChangeCallbacks;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IOnVitalParamChange> OnVitalParamChangeCallbacks;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public List<VitalDefinition> vitalDefs;

		[NonSerialized]
		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vital[] vitalArray;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, Vital> vitalLookup;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int vitalCount;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool initialized;

		[Token(Token = "0x170002DE")]
		public List<VitalDefinition> VitalDefs
		{
			[Token(Token = "0x600188B")]
			[Address(RVA = "0x26495A8", Offset = "0x26495A8", VA = "0x26495A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DF")]
		public Vital[] VitalArray
		{
			[Token(Token = "0x600188C")]
			[Address(RVA = "0x26495B0", Offset = "0x26495B0", VA = "0x26495B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x26495E0", Offset = "0x26495E0", VA = "0x26495E0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x2649868", Offset = "0x2649868", VA = "0x2649868")]
		public void ResetValues()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x2649010", Offset = "0x2649010", VA = "0x2649010")]
		public Vital GetVital(VitalNameType vitalNameType)
		{
			return null;
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x26491FC", Offset = "0x26491FC", VA = "0x26491FC")]
		public int GetVitalIndex(VitalNameType vitalNameType)
		{
			return default(int);
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x26498D8", Offset = "0x26498D8", VA = "0x26498D8")]
		public SerializationFlags Serialize(VitalsData vdata, VitalsData lastVData, byte[] buffer, int bitposition, bool keyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x2649A14", Offset = "0x2649A14", VA = "0x2649A14")]
		public SerializationFlags Deserialize(VitalsData vdata, byte[] buffer, int bitposition, bool keyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x2649B54", Offset = "0x2649B54", VA = "0x2649B54")]
		public void Apply(VitalsData vdata)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x2649C08", Offset = "0x2649C08", VA = "0x2649C08")]
		private double ApplyCharges(int vitalIdx, double discharge, bool allowOverload, bool propagate)
		{
			return default(double);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x2649CD4", Offset = "0x2649CD4", VA = "0x2649CD4")]
		public double ApplyCharges(double discharge, bool allowOverload, bool propagate)
		{
			return default(double);
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x2649CEC", Offset = "0x2649CEC", VA = "0x2649CEC")]
		public double ApplyCharges(VitalNameType vitalNameType, double discharge, bool allowOverload, bool propagate)
		{
			return default(double);
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x2649D70", Offset = "0x2649D70", VA = "0x2649D70")]
		public void CheckForDisrupt(double consumed)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x2649E34", Offset = "0x2649E34", VA = "0x2649E34")]
		public void DisruptRegen()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x2649DC8", Offset = "0x2649DC8", VA = "0x2649DC8")]
		public void DisruptDecay()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x2649EA0", Offset = "0x2649EA0", VA = "0x2649EA0", Slot = "4")]
		public void OnVitalValueChange(Vital vital)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x2649FC0", Offset = "0x2649FC0", VA = "0x2649FC0", Slot = "5")]
		public void OnVitalParamChange(Vital vital)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x264A0E0", Offset = "0x264A0E0", VA = "0x264A0E0")]
		public void Simulate()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x264A154", Offset = "0x264A154", VA = "0x264A154")]
		public Vitals()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class EnableOnNetObjReady : MonoBehaviour, IOnNetObjReady
	{
		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject visibilityObject;

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x286B960", Offset = "0x286B960", VA = "0x286B960")]
		public void Reset()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x286B990", Offset = "0x286B990", VA = "0x286B990")]
		public void Awake()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x286BA38", Offset = "0x286BA38", VA = "0x286BA38")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x286BB0C", Offset = "0x286BB0C", VA = "0x286BB0C", Slot = "4")]
		public void OnNetObjReadyChange(bool ready)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x286BBC8", Offset = "0x286BBC8", VA = "0x286BBC8")]
		public EnableOnNetObjReady()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public enum FrameArrival
	{
		[Token(Token = "0x4001A57")]
		IsFuture = -1,
		[Token(Token = "0x4001A58")]
		IsTarget,
		[Token(Token = "0x4001A59")]
		IsSnap,
		[Token(Token = "0x4001A5A")]
		IsLate
	}
	[Token(Token = "0x20004E4")]
	public class Mount : NetComponent, IOnPreQuit, IOnPreNetDestroy
	{
		[Token(Token = "0x4001A5B")]
		public const string ROOT_MOUNT_NAME = "Root";

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28788", Offset = "0xB28788")]
		[HideInInspector]
		public MountSelector mountType;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		public int componentIndex;

		[NonSerialized]
		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<IMountable> mountedObjs;

		[NonSerialized]
		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MountsManager mountsLookup;

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x21BCE80", Offset = "0x21BCE80", VA = "0x21BCE80", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x21BCEF0", Offset = "0x21BCEF0", VA = "0x21BCEF0", Slot = "27")]
		public void OnPreQuit()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x21BD0C0", Offset = "0x21BD0C0", VA = "0x21BD0C0", Slot = "28")]
		public void OnPreNetDestroy(NetObject rootNetObj)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x21BCEF4", Offset = "0x21BCEF4", VA = "0x21BCEF4")]
		public void DismountAll()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x21BD154", Offset = "0x21BD154", VA = "0x21BD154")]
		public static void ChangeMounting(IMountable mountable, Mount prevMount, Mount newMount)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x21BD228", Offset = "0x21BD228", VA = "0x21BD228")]
		public Mount()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E5")]
	public struct MountMaskSelector
	{
		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int mask;

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x21BD2BC", Offset = "0x21BD2BC", VA = "0x21BD2BC")]
		public MountMaskSelector(int mountTypeMask)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x21BD2C4", Offset = "0x21BD2C4", VA = "0x21BD2C4")]
		public MountMaskSelector(bool allTrue)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x21BD3D4", Offset = "0x21BD3D4", VA = "0x21BD3D4")]
		public static implicit operator int(MountMaskSelector selector)
		{
			return default(int);
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x21BD3D8", Offset = "0x21BD3D8", VA = "0x21BD3D8")]
		public static implicit operator MountMaskSelector(int mask)
		{
			return default(MountMaskSelector);
		}
	}
	[Serializable]
	[Token(Token = "0x20004E6")]
	public struct MountSelector
	{
		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x21BD3E0", Offset = "0x21BD3E0", VA = "0x21BD3E0")]
		public MountSelector(int index)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x21BD3E8", Offset = "0x21BD3E8", VA = "0x21BD3E8")]
		public static implicit operator int(MountSelector selector)
		{
			return default(int);
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x21BD3EC", Offset = "0x21BD3EC", VA = "0x21BD3EC")]
		public static implicit operator MountSelector(int id)
		{
			return default(MountSelector);
		}
	}
	[Token(Token = "0x20004E7")]
	public class MountSettings : SettingsScriptableObject<MountSettings>
	{
		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private List<string> mountNames;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int mountTypeCount;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int bitsForMountId;

		[Token(Token = "0x170002E0")]
		public static int AllTrueMask
		{
			[Token(Token = "0x60018B3")]
			[Address(RVA = "0x21BD2F4", Offset = "0x21BD2F4", VA = "0x21BD2F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x21BD3F4", Offset = "0x21BD3F4", VA = "0x21BD3F4", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x21BD4F8", Offset = "0x21BD4F8", VA = "0x21BD4F8")]
		public static int GetIndex(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x21BD594", Offset = "0x21BD594", VA = "0x21BD594")]
		public static string GetName(int index)
		{
			return null;
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x21BD670", Offset = "0x21BD670", VA = "0x21BD670")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB31AAC", Offset = "0xB31AAC")]
		private static void Bootstrap()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x21BD6E0", Offset = "0x21BD6E0", VA = "0x21BD6E0")]
		public MountSettings()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB21584", Offset = "0xB21584")]
	[DisallowMultipleComponent]
	public class MountsManager : MonoBehaviour, IOnAwake, IOnPreQuit
	{
		[NonSerialized]
		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<int, Mount> mountIdLookup;

		[NonSerialized]
		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Mount> indexedMounts;

		[NonSerialized]
		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int bitsForMountId;

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x21BE540", Offset = "0x21BE540", VA = "0x21BE540", Slot = "4")]
		public void OnAwake()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x21BE780", Offset = "0x21BE780", VA = "0x21BE780", Slot = "5")]
		public void OnPreQuit()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x21BE5B4", Offset = "0x21BE5B4", VA = "0x21BE5B4")]
		public List<Mount> CollectMounts(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x21BE82C", Offset = "0x21BE82C", VA = "0x21BE82C")]
		public Mount GetMount(int mountId)
		{
			return null;
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x21BE784", Offset = "0x21BE784", VA = "0x21BE784")]
		public void UnmountAll()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x21BE8A0", Offset = "0x21BE8A0", VA = "0x21BE8A0")]
		public MountsManager()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB215D0", Offset = "0xB215D0")]
	public class MountThrow : NetComponent, IOnPreUpdate, IOnPreSimulate
	{
		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KeyCode throwKey;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mount mount;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool fromRoot;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool inheritRBVelocity;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 offset;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 velocity;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool throwQueued;

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x21BE070", Offset = "0x21BE070", VA = "0x21BE070", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x21BE138", Offset = "0x21BE138", VA = "0x21BE138", Slot = "27")]
		public void OnPreUpdate()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x21BE178", Offset = "0x21BE178", VA = "0x21BE178", Slot = "28")]
		public void OnPreSimulate(int frameId, int subFrameId)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x21BE518", Offset = "0x21BE518", VA = "0x21BE518")]
		public MountThrow()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public enum PassThruType
	{
		[Token(Token = "0x4001A70")]
		SetTrigger,
		[Token(Token = "0x4001A71")]
		ResetTrigger,
		[Token(Token = "0x4001A72")]
		Play,
		[Token(Token = "0x4001A73")]
		PlayFixed,
		[Token(Token = "0x4001A74")]
		CrossFade,
		[Token(Token = "0x4001A75")]
		CrossFadeFixed
	}
	[Token(Token = "0x20004EB")]
	public struct AnimPassThru
	{
		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PassThruType passThruType;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int hash;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float normlTime;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fixedTime;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int layer;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalApplyTiming localApplyTiming;

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x22C6418", Offset = "0x22C6418", VA = "0x22C6418")]
		public AnimPassThru(PassThruType triggerType, int hash, int layer, float normTime, float otherTime, float duration, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class SyncAnimator : SyncObject<SyncAnimator.Frame>, IOnSnapshot, IOnNetSerialize, IOnAuthorityChanged, ISyncAnimator, IReadyable, IUseKeyframes, IOnInterpolate, IOnCaptureState
	{
		[Token(Token = "0x20004ED")]
		public class Frame : FrameBase
		{
			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SyncAnimator syncAnimator;

			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SmartVar[] parameters;

			[Token(Token = "0x4001AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int?[] stateHashes;

			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool[] layerIsInTransition;

			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float[] normalizedTime;

			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float?[] layerWeights;

			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Queue<AnimPassThru> passThrus;

			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x200C678", Offset = "0x200C678", VA = "0x200C678")]
			public Frame()
			{
			}

			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x200C680", Offset = "0x200C680", VA = "0x200C680")]
			public Frame(SyncAnimator syncAnimator, int frameId)
			{
			}

			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x200C8B0", Offset = "0x200C8B0", VA = "0x200C8B0", Slot = "4")]
			public override void CopyFrom(FrameBase sourceFrame)
			{
			}

			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x200CAF0", Offset = "0x200CAF0", VA = "0x200CAF0", Slot = "5")]
			public override void Clear()
			{
			}
		}

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, Dictionary<int, int>> masterSharedTriggHashes;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<int, List<int>> masterSharedTriggIndexes;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public List<int> sharedTriggIndexes;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<int, int> sharedTriggHashes;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<int, Dictionary<int, int>> masterSharedStateHashes;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<int, List<int>> masterSharedStateIndexes;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public List<int> sharedStateIndexes;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<int, int> sharedStateHashes;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28874", Offset = "0xB28874")]
		public Animator animator;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB288AC", Offset = "0xB288AC")]
		public bool autoRootMotion;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[HideInInspector]
		public bool syncPassThrus;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public NormalizedFloatCompression passthruNormTimeCompress;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public bool syncStates;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public NormalizedFloatCompression normalizedTimeCompress;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public bool syncLayers;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[HideInInspector]
		public bool syncLayerWeights;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public NormalizedFloatCompression layerWeightCompress;

		[NonSerialized]
		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int layerCount;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public bool syncParams;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[HideInInspector]
		public bool useGlobalParamSettings;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<int, ParameterDefaults> masterSharedParamDefaults;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public ParameterDefaults sharedParamDefaults;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<int, ParameterSettings[]> masterSharedParamSettings;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public ParameterSettings[] sharedParamSettings;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public int paramCount;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int bitsForTriggerIndex;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int bitsForStateIndex;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int bitsForTransIndex;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int bitsForLayerIndex;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool defaultRootMotion;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int[] lastAnimationHash;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private uint[] lastLayerWeight;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private SmartVar[] lastSentParams;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Frame currentFrame;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Dictionary<int, Stack<Frame[]>> masterSharedFramePool;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<Animator> foundAnimators;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static List<SyncAnimator> foundSyncs;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private readonly Queue<AnimPassThru> passThruQueue;

		[Token(Token = "0x170002E1")]
		public override int ApplyOrder
		{
			[Token(Token = "0x60018C1")]
			[Address(RVA = "0x27C10FC", Offset = "0x27C10FC", VA = "0x27C10FC", Slot = "28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E2")]
		public override bool AllowReconstructionOfEmpty
		{
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0x27C1104", Offset = "0x27C1104", VA = "0x27C1104", Slot = "42")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x27C110C", Offset = "0x27C110C", VA = "0x27C110C", Slot = "37")]
		protected override void PopulateFrames()
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x27C1608", Offset = "0x27C1608", VA = "0x27C1608", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x27C2638", Offset = "0x27C2638", VA = "0x27C2638", Slot = "16")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x27C2730", Offset = "0x27C2730", VA = "0x27C2730", Slot = "21")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x27C2768", Offset = "0x27C2768", VA = "0x27C2768", Slot = "25")]
		public override void OnAuthorityChanged(bool isMine, bool controllerChanged)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x27C2670", Offset = "0x27C2670", VA = "0x27C2670")]
		private void AutoRootMotion(bool isMine)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x27C16FC", Offset = "0x27C16FC", VA = "0x27C16FC")]
		private void FindUnsyncedAnimator()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x27C13E0", Offset = "0x27C13E0", VA = "0x27C13E0")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x27C1B40", Offset = "0x27C1B40", VA = "0x27C1B40")]
		private void ConnectSharedCaches()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x27C27E4", Offset = "0x27C27E4", VA = "0x27C27E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x27C289C", Offset = "0x27C289C", VA = "0x27C289C", Slot = "51")]
		public SerializationFlags OnNetSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x27C2AE4", Offset = "0x27C2AE4", VA = "0x27C2AE4", Slot = "52")]
		public SerializationFlags OnNetDeserialize(int originFrameId, byte[] buffer, int bitposition, FrameArrival arrival)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x27C2C7C", Offset = "0x27C2C7C", VA = "0x27C2C7C", Slot = "58")]
		public virtual void OnCaptureCurrentState(int frameId)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x27C2A0C", Offset = "0x27C2A0C", VA = "0x27C2A0C")]
		private SerializationFlags WriteAllToBuffer(Frame frame, byte[] buffer, int bitposition, bool isKeyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x27C2BB0", Offset = "0x27C2BB0", VA = "0x27C2BB0")]
		private void ReadAllFromBuffer(Frame frame, byte[] buffer, int bitposition, bool isKeyframe)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x27C36C0", Offset = "0x27C36C0", VA = "0x27C36C0")]
		private SerializationFlags WriteParameters(Frame frame, byte[] buffer, int bitposition, bool isKeyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x27C2D4C", Offset = "0x27C2D4C", VA = "0x27C2D4C")]
		private void CaptureParameters(Frame frame)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x27C4638", Offset = "0x27C4638", VA = "0x27C4638")]
		private void ReadParameters(Frame frame, byte[] buffer, int bitposition, bool isKeyframe)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x27C4E68", Offset = "0x27C4E68", VA = "0x27C4E68")]
		private void CompleteTargetParameters()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x27C4F3C", Offset = "0x27C4F3C", VA = "0x27C4F3C")]
		private void InterpolateParams(float t)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x27C5398", Offset = "0x27C5398", VA = "0x27C5398")]
		private void ExtrapolateParams(Frame prev, Frame targ, Frame newtarg)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x27C56DC", Offset = "0x27C56DC", VA = "0x27C56DC")]
		private void EnqueuePassthrough(PassThruType type, int hash, int layer, float ntime, float otime, float duration, LocalApplyTiming localApplyTiming)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x27C0B94", Offset = "0x27C0B94", VA = "0x27C0B94")]
		public void SetTrigger(string triggerName, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x27C58D8", Offset = "0x27C58D8", VA = "0x27C58D8")]
		public void SetTrigger(int hash, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x27C58F8", Offset = "0x27C58F8", VA = "0x27C58F8")]
		public void ResetTrigger(string triggerName, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x27C5944", Offset = "0x27C5944", VA = "0x27C5944")]
		public void ResetTrigger(int hash, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x27C5964", Offset = "0x27C5964", VA = "0x27C5964")]
		public void Play(string stateName, int layer = -1, float normalizedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x27C59C8", Offset = "0x27C59C8", VA = "0x27C59C8")]
		public void Play(int hash, int layer = -1, float normalizedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x27C59E4", Offset = "0x27C59E4", VA = "0x27C59E4")]
		public void PlayInFixedTime(string stateName, int layer = -1, float fixedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x27C5A48", Offset = "0x27C5A48", VA = "0x27C5A48")]
		public void PlayInFixedTime(int hash, int layer = -1, float fixedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x27C5A68", Offset = "0x27C5A68", VA = "0x27C5A68")]
		public void CrossFade(string stateName, float duration, int layer = -1, float normalizedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x27C5AD0", Offset = "0x27C5AD0", VA = "0x27C5AD0")]
		public void CrossFade(int hash, float duration, int layer = -1, float normalizedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x27C0BE0", Offset = "0x27C0BE0", VA = "0x27C0BE0")]
		public void CrossFadeInFixedTime(string stateName, float duration, int layer = -1, float fixedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x27C5AF4", Offset = "0x27C5AF4", VA = "0x27C5AF4")]
		public void CrossFadeInFixedTime(int hash, float duration, int layer = -1, float fixedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x27C5B10", Offset = "0x27C5B10", VA = "0x27C5B10")]
		private void ExecutePassThruQueue(Frame frame)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x27C57FC", Offset = "0x27C57FC", VA = "0x27C57FC")]
		private void ExecutePassThru(AnimPassThru pt)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x27C3388", Offset = "0x27C3388", VA = "0x27C3388")]
		private SerializationFlags WritePassThrus(Frame frame, byte[] buffer, int bitposition, bool isKeyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x27C2F28", Offset = "0x27C2F28", VA = "0x27C2F28")]
		private void CapturePassThrus(Frame frame)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x27C42E4", Offset = "0x27C42E4", VA = "0x27C42E4")]
		private void ReadPassThrus(Frame frame, byte[] buffer, int bitposition, bool isKeyframe)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x27C3018", Offset = "0x27C3018", VA = "0x27C3018")]
		private void CaptureStates(Frame frame)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x27C3B38", Offset = "0x27C3B38", VA = "0x27C3B38")]
		private SerializationFlags WriteStates(Frame frame, byte[] buffer, int bitposition, bool isKeyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x27C490C", Offset = "0x27C490C", VA = "0x27C490C")]
		private void ReadStates(Frame frame, byte[] buffer, int bitposition, bool isKeyframe)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x27C5BE4", Offset = "0x27C5BE4", VA = "0x27C5BE4")]
		private void ApplyState(Frame applyFrame)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x27C32A0", Offset = "0x27C32A0", VA = "0x27C32A0")]
		private void CaptureLayerWeights(Frame frame)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x27C4070", Offset = "0x27C4070", VA = "0x27C4070")]
		private SerializationFlags WriteLayerWeights(Frame frame, byte[] buffer, int bitposition, bool isKeyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x27C4CA4", Offset = "0x27C4CA4", VA = "0x27C4CA4")]
		private SerializationFlags ReadLayerWeights(Frame frame, byte[] buffer, int bitposition, bool isKeyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x27C5DB4", Offset = "0x27C5DB4", VA = "0x27C5DB4")]
		private void ApplyLayerWeights(Frame applyFrame)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x27C5EBC", Offset = "0x27C5EBC", VA = "0x27C5EBC", Slot = "39")]
		public override bool OnSnapshot(int prevFrameId, int snapFrameId, int targFrameId, bool prevIsValid, bool snapIsValid, bool targIsValid)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x27C5F84", Offset = "0x27C5F84", VA = "0x27C5F84")]
		private void ApplyFrame(Frame frame)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x27C5FE0", Offset = "0x27C5FE0", VA = "0x27C5FE0", Slot = "47")]
		public override bool OnInterpolate(int snapFrameId, int targFrameId, float t)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x27C6094", Offset = "0x27C6094", VA = "0x27C6094", Slot = "48")]
		protected override void InterpolateFrame(Frame targframe, Frame startframe, Frame endframe, float t)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x27C629C", Offset = "0x27C629C", VA = "0x27C629C", Slot = "49")]
		protected override void ExtrapolateFrame(Frame prevframe, Frame snapframe, Frame targframe)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x27C62D0", Offset = "0x27C62D0", VA = "0x27C62D0")]
		private void ExtrapolateState()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x27C6100", Offset = "0x27C6100", VA = "0x27C6100")]
		private void InterpolateState(Frame targFrame, Frame strFrame, Frame endFrame, float t)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x27C6344", Offset = "0x27C6344", VA = "0x27C6344")]
		public SyncAnimator()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class SyncAdditiveMover : NetComponent, ITransformController, IOnPreUpdate, IOnPreSimulate
	{
		[Serializable]
		[Token(Token = "0x20004EF")]
		public class TRSDefinition : TRSDefinitionBase
		{
			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 addVector;

			[Token(Token = "0x6001905")]
			[Address(RVA = "0x200C668", Offset = "0x200C668", VA = "0x200C668")]
			public TRSDefinition()
			{
			}
		}

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public TRSDefinition posDef;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public TRSDefinition rotDef;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public TRSDefinition sclDef;

		[Token(Token = "0x170002E3")]
		public bool HandlesInterpolation
		{
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x27C0DC8", Offset = "0x27C0DC8", VA = "0x27C0DC8", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E4")]
		public bool HandlesExtrapolation
		{
			[Token(Token = "0x6001900")]
			[Address(RVA = "0x27C0DD0", Offset = "0x27C0DD0", VA = "0x27C0DD0", Slot = "28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x27C0DD8", Offset = "0x27C0DD8", VA = "0x27C0DD8", Slot = "30")]
		public void OnPreSimulate(int frameId, int subFrameId)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x27C1004", Offset = "0x27C1004", VA = "0x27C1004", Slot = "29")]
		public void OnPreUpdate()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x27C0E80", Offset = "0x27C0E80", VA = "0x27C0E80")]
		private void AddVector()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x27C103C", Offset = "0x27C103C", VA = "0x27C103C")]
		public SyncAdditiveMover()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F0")]
	public class TRSDefinitionBase
	{
		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool local;

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x204C62C", Offset = "0x204C62C", VA = "0x204C62C")]
		public TRSDefinitionBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F1")]
	public abstract class SyncMoverBase<TTRSDef, TFrame> : SyncObject<TFrame>, ITransformController, IOnPreSimulate, IOnPreUpdate where TTRSDef : TRSDefinitionBase, new() where TFrame : FrameBase, new()
	{
		[Token(Token = "0x20004F2")]
		public enum MovementRelation
		{
			[Token(Token = "0x4001AB6")]
			Absolute,
			[Token(Token = "0x4001AB7")]
			Relative
		}

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public TTRSDef posDef;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public TTRSDef rotDef;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public TTRSDef sclDef;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Rigidbody rb;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Rigidbody2D rb2d;

		[NonSerialized]
		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SyncTransform syncTransform;

		[Token(Token = "0x170002E5")]
		public virtual bool HandlesInterpolation
		{
			[Token(Token = "0x6001907")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E6")]
		public virtual bool HandlesExtrapolation
		{
			[Token(Token = "0x6001908")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001909")]
		public override void OnAwakeInitialize(bool isNetObject)
		{
		}

		[Token(Token = "0x600190A")]
		public override void OnStartInitialize(bool isNetObject)
		{
		}

		[Token(Token = "0x600190B")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600190C")]
		public virtual void Recalculate()
		{
		}

		[Token(Token = "0x600190D")]
		protected abstract void InitializeTRS(TTRSDef def, TRS type);

		[Token(Token = "0x600190E")]
		public abstract void OnPreSimulate(int frameId, int subFrameId);

		[Token(Token = "0x600190F")]
		public abstract void OnPreUpdate();

		[Token(Token = "0x6001910")]
		protected SyncMoverBase()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class SyncNodeMover : SyncMoverBase<SyncNodeMover.TRSDefinition, SyncNodeMover.Frame>, IOnPreUpdate, IOnPreSimulate, IOnCaptureState, IOnNetSerialize, IOnSnapshot, IOnInterpolate, IReadyable
	{
		[Token(Token = "0x20004F4")]
		public enum Movement
		{
			[Token(Token = "0x4001AC6")]
			Oscillate,
			[Token(Token = "0x4001AC7")]
			Trigger
		}

		[Serializable]
		[Token(Token = "0x20004F5")]
		public class Node
		{
			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] trs;

			[Token(Token = "0x170002E9")]
			public Vector3 Pos
			{
				[Token(Token = "0x6001927")]
				[Address(RVA = "0x200D238", Offset = "0x200D238", VA = "0x200D238")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001928")]
				[Address(RVA = "0x200D270", Offset = "0x200D270", VA = "0x200D270")]
				set
				{
				}
			}

			[Token(Token = "0x170002EA")]
			public Vector3 Rot
			{
				[Token(Token = "0x6001929")]
				[Address(RVA = "0x200D2A8", Offset = "0x200D2A8", VA = "0x200D2A8")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600192A")]
				[Address(RVA = "0x200D2E4", Offset = "0x200D2E4", VA = "0x200D2E4")]
				set
				{
				}
			}

			[Token(Token = "0x170002EB")]
			public Vector3 Scl
			{
				[Token(Token = "0x600192B")]
				[Address(RVA = "0x200D320", Offset = "0x200D320", VA = "0x200D320")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600192C")]
				[Address(RVA = "0x200D35C", Offset = "0x200D35C", VA = "0x200D35C")]
				set
				{
				}
			}

			[Token(Token = "0x600192D")]
			[Address(RVA = "0x200D398", Offset = "0x200D398", VA = "0x200D398")]
			public Node()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F6")]
		public class TRSDefinition : TRSDefinitionBase
		{
			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public AxisMask includeAxes;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MovementRelation relation;

			[Token(Token = "0x600192E")]
			[Address(RVA = "0x200D454", Offset = "0x200D454", VA = "0x200D454")]
			public TRSDefinition()
			{
			}
		}

		[Token(Token = "0x20004F7")]
		public class Frame : FrameBase
		{
			[Token(Token = "0x4001ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int targetNode;

			[Token(Token = "0x4001ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float phase;

			[Token(Token = "0x4001ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public uint cphase;

			[Token(Token = "0x600192F")]
			[Address(RVA = "0x200D0F8", Offset = "0x200D0F8", VA = "0x200D0F8")]
			public Frame()
			{
			}

			[Token(Token = "0x6001930")]
			[Address(RVA = "0x200D100", Offset = "0x200D100", VA = "0x200D100")]
			public Frame(int frameId)
			{
			}

			[Token(Token = "0x6001931")]
			[Address(RVA = "0x200D108", Offset = "0x200D108", VA = "0x200D108", Slot = "4")]
			public override void CopyFrom(FrameBase sourceFrame)
			{
			}

			[Token(Token = "0x6001932")]
			[Address(RVA = "0x200D1B4", Offset = "0x200D1B4", VA = "0x200D1B4", Slot = "5")]
			public override void Clear()
			{
			}

			[Token(Token = "0x6001933")]
			[Address(RVA = "0x200D1E8", Offset = "0x200D1E8", VA = "0x200D1E8")]
			public bool Compare(Frame otherFrame)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB28A04", Offset = "0xB28A04")]
		public float predictWithRTT;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public List<Node> nodes;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Movement movement;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public float oscillatePeriod;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public AnimationCurve oscillateCurve;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public LiteFloatCrusher floatCrusher;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float currentPhase;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected int queuedTargetNode;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected int targetNode;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected double timeoffset;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected float snapPhase;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected float targPhase;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected float accumulatedTime;

		[Token(Token = "0x170002E7")]
		public Node StartNode
		{
			[Token(Token = "0x6001911")]
			[Address(RVA = "0x27C8708", Offset = "0x27C8708", VA = "0x27C8708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		public Node EndNode
		{
			[Token(Token = "0x6001912")]
			[Address(RVA = "0x27C8768", Offset = "0x27C8768", VA = "0x27C8768")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x27C87DC", Offset = "0x27C87DC", VA = "0x27C87DC", Slot = "14")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x27C8980", Offset = "0x27C8980", VA = "0x27C8980", Slot = "57")]
		protected override void InitializeTRS(TRSDefinition def, TRS type)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x27C8B8C", Offset = "0x27C8B8C", VA = "0x27C8B8C", Slot = "58")]
		public override void OnPreSimulate(int frameId, int subFrameId)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x27C8CF8", Offset = "0x27C8CF8", VA = "0x27C8CF8", Slot = "59")]
		public override void OnPreUpdate()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x27C8C34", Offset = "0x27C8C34", VA = "0x27C8C34")]
		private void OwnerInterpolate()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x27C906C", Offset = "0x27C906C", VA = "0x27C906C")]
		public void Trigger(int targetNode)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x27C9074", Offset = "0x27C9074", VA = "0x27C9074")]
		public void TriggerMin()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x27C9078", Offset = "0x27C9078", VA = "0x27C9078")]
		public void TriggerMax()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x27C907C", Offset = "0x27C907C", VA = "0x27C907C")]
		private void TriggerLerp()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x27C8DEC", Offset = "0x27C8DEC", VA = "0x27C8DEC")]
		private void Oscillate(float lerpT)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x27C9450", Offset = "0x27C9450", VA = "0x27C9450", Slot = "60")]
		public void OnCaptureCurrentState(int frameId)
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x27C94C8", Offset = "0x27C94C8", VA = "0x27C94C8", Slot = "61")]
		public SerializationFlags OnNetSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x27C9538", Offset = "0x27C9538", VA = "0x27C9538", Slot = "62")]
		public SerializationFlags OnNetDeserialize(int originFrameId, byte[] buffer, int bitposition, FrameArrival arrival)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x27C95D8", Offset = "0x27C95D8", VA = "0x27C95D8", Slot = "40")]
		protected override void ApplySnapshot(Frame snapframe, Frame targframe, bool snapIsVaid, bool targIsValid)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x27C976C", Offset = "0x27C976C", VA = "0x27C976C", Slot = "47")]
		public override bool OnInterpolate(int snapFrameId, int targFrameId, float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x27C9854", Offset = "0x27C9854", VA = "0x27C9854", Slot = "46")]
		protected override void ConstructMissingFrame(Frame prevFrame, Frame snapframe, Frame targframe)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x27C8DCC", Offset = "0x27C8DCC", VA = "0x27C8DCC")]
		protected float OscillatePhaseToLerpT(float phase)
		{
			return default(float);
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x27C8DA0", Offset = "0x27C8DA0", VA = "0x27C8DA0")]
		protected float TimeToPhase(double time)
		{
			return default(float);
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x27C9080", Offset = "0x27C9080", VA = "0x27C9080")]
		private void ApplyOscillate(Vector3 pos, Vector3 rot, Vector3 scl)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x27C9930", Offset = "0x27C9930", VA = "0x27C9930")]
		public SyncNodeMover()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class AutoMountHitscan : HitscanComponent
	{
		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected SyncState syncState;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Queue<Mount> foundMounts;

		[Token(Token = "0x170002EC")]
		public SyncState SyncState
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0x22C9390", Offset = "0x22C9390", VA = "0x22C9390")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x22C9398", Offset = "0x22C9398", VA = "0x22C9398", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x22C9460", Offset = "0x22C9460", VA = "0x22C9460", Slot = "25")]
		public override void OnAuthorityChanged(bool isMine, bool controllerChanged)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x22C9580", Offset = "0x22C9580", VA = "0x22C9580", Slot = "28")]
		public override void OnPreSimulate(int frameId, int subFrameId)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x22C96B0", Offset = "0x22C96B0", VA = "0x22C96B0", Slot = "30")]
		public override bool ProcessHit(Collider hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x22C97CC", Offset = "0x22C97CC", VA = "0x22C97CC")]
		public AutoMountHitscan()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public enum ObjState
	{
		[Token(Token = "0x4001AD1")]
		Despawned = 0,
		[Token(Token = "0x4001AD2")]
		Visible = 1,
		[Token(Token = "0x4001AD3")]
		Mounted = 2,
		[Token(Token = "0x4001AD4")]
		AnchoredPosition = 4,
		[Token(Token = "0x4001AD5")]
		AnchoredRotation = 8,
		[Token(Token = "0x4001AD6")]
		Anchored = 12,
		[Token(Token = "0x4001AD7")]
		Dropped = 16,
		[Token(Token = "0x4001AD8")]
		Transit = 32
	}
	[Token(Token = "0x20004FA")]
	public enum ObjStateEditor
	{
		[Token(Token = "0x4001ADA")]
		Despawned = 0,
		[Token(Token = "0x4001ADB")]
		Visible = 1,
		[Token(Token = "0x4001ADC")]
		Mounted = 2,
		[Token(Token = "0x4001ADD")]
		AnchoredPosition = 4,
		[Token(Token = "0x4001ADE")]
		AnchoredRotation = 8,
		[Token(Token = "0x4001ADF")]
		Dropped = 0x10,
		[Token(Token = "0x4001AE0")]
		Transit = 0x20
	}
	[Token(Token = "0x20004FB")]
	public interface IMountable
	{
		[Token(Token = "0x170002ED")]
		Mount CurrentMount
		{
			[Token(Token = "0x600193A")]
			get;
		}

		[Token(Token = "0x170002EE")]
		bool IsDroppable
		{
			[Token(Token = "0x600193B")]
			get;
		}

		[Token(Token = "0x170002EF")]
		bool IsThrowable
		{
			[Token(Token = "0x600193C")]
			get;
		}

		[Token(Token = "0x170002F0")]
		Rigidbody Rb
		{
			[Token(Token = "0x600193D")]
			get;
		}

		[Token(Token = "0x170002F1")]
		Rigidbody2D Rb2d
		{
			[Token(Token = "0x600193E")]
			get;
		}

		[Token(Token = "0x600193F")]
		void ImmediateUnmount();
	}
	[Token(Token = "0x20004FC")]
	public interface IOnStateChange
	{
		[Token(Token = "0x6001940")]
		void OnStateChange(ObjState newState, ObjState previousState, Transform attachmentTransform, [Optional] Mount attachTo, bool isReady = true);
	}
	[Token(Token = "0x20004FD")]
	public interface IFlagTeleport
	{
		[Token(Token = "0x6001941")]
		void FlagTeleport();
	}
	[Serializable]
	[Token(Token = "0x20004FE")]
	public class ObjStateLogic : MaskLogic
	{
		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static int[] stateValues;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static string[] stateNames;

		[Token(Token = "0x170002F2")]
		protected override bool DefinesZero
		{
			[Token(Token = "0x6001942")]
			[Address(RVA = "0x252B100", Offset = "0x252B100", VA = "0x252B100", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F3")]
		protected override string[] EnumNames
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0x252B108", Offset = "0x252B108", VA = "0x252B108", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		protected override int[] EnumValues
		{
			[Token(Token = "0x6001944")]
			[Address(RVA = "0x252B16C", Offset = "0x252B16C", VA = "0x252B16C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F5")]
		protected override int DefaultValue
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0x252B1D0", Offset = "0x252B1D0", VA = "0x252B1D0", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x252B1D8", Offset = "0x252B1D8", VA = "0x252B1D8")]
		public ObjStateLogic()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class MountSwitcher : NetComponent, IOnPreUpdate, IOnPreSimulate
	{
		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KeyCode keycode;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MountSelector mount;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool triggered;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SyncState syncState;

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x21BD894", Offset = "0x21BD894", VA = "0x21BD894", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x21BDD2C", Offset = "0x21BDD2C", VA = "0x21BDD2C", Slot = "27")]
		public void OnPreUpdate()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x21BDD60", Offset = "0x21BDD60", VA = "0x21BDD60", Slot = "28")]
		public void OnPreSimulate(int frameId, int subFrameId)
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x21BE05C", Offset = "0x21BE05C", VA = "0x21BE05C")]
		public MountSwitcher()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public interface IAutoKinematic
	{
		[Token(Token = "0x170002F6")]
		bool AutoKinematicEnabled
		{
			[Token(Token = "0x600194C")]
			get;
		}
	}
	[Token(Token = "0x2000501")]
	public enum KinematicSetting
	{
		[Token(Token = "0x4001AE8")]
		Ignore,
		[Token(Token = "0x4001AE9")]
		Default,
		[Token(Token = "0x4001AEA")]
		NonKinematic,
		[Token(Token = "0x4001AEB")]
		Kinematic
	}
	[Token(Token = "0x2000502")]
	[DisallowMultipleComponent]
	public class OnStateChangeKinematic : NetComponent, IOnStateChange, IApplyOrder, IAutoKinematic
	{
		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KinematicSetting onDespawned;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public KinematicSetting onAnchored;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public KinematicSetting onMounted;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KinematicSetting onTransit;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public KinematicSetting onDropped;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KinematicSetting onVisible;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28A6C", Offset = "0xB28A6C")]
		public bool autoDestroy;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ObjState currentState;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rb;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody2D rb2d;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool kinematicDefault;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int interpolateDefault;

		[Token(Token = "0x170002F7")]
		public int ApplyOrder
		{
			[Token(Token = "0x600194D")]
			[Address(RVA = "0x2534F9C", Offset = "0x2534F9C", VA = "0x2534F9C", Slot = "28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F8")]
		public bool AutoKinematicEnabled
		{
			[Token(Token = "0x600194E")]
			[Address(RVA = "0x2534FA4", Offset = "0x2534FA4", VA = "0x2534FA4", Slot = "29")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x2534FAC", Offset = "0x2534FAC", VA = "0x2534FAC", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x2535198", Offset = "0x2535198", VA = "0x2535198", Slot = "25")]
		public override void OnAuthorityChanged(bool isMine, bool controllerChanged)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x25351FC", Offset = "0x25351FC", VA = "0x25351FC", Slot = "27")]
		public void OnStateChange(ObjState newState, ObjState previousState, Transform attachmentTransform, [Optional] Mount attachTo, bool isReady = true)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x2535248", Offset = "0x2535248", VA = "0x2535248", Slot = "30")]
		protected virtual void SetUnownedKinematics()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x25352D8", Offset = "0x25352D8", VA = "0x25352D8", Slot = "31")]
		protected virtual void SetOwnedKinematics(ObjState state)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x253548C", Offset = "0x253548C", VA = "0x253548C")]
		public OnStateChangeKinematic()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public enum DisplayToggle
	{
		[Token(Token = "0x4001AF9")]
		GameObject,
		[Token(Token = "0x4001AFA")]
		Component,
		[Token(Token = "0x4001AFB")]
		Renderer
	}
	[Token(Token = "0x2000504")]
	public class OnStateChangeToggle : NetComponent, IOnStateChange
	{
		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28AA4", Offset = "0xB28AA4")]
		[HideInInspector]
		public DisplayToggle toggle;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28AF0", Offset = "0xB28AF0")]
		[HideInInspector]
		public Component component;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public GameObject _gameObject;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Renderer _renderer;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public ObjStateLogic stateLogic;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool reactToAttached;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MonoBehaviour monob;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool show;

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x25354B4", Offset = "0x25354B4", VA = "0x25354B4", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x2535660", Offset = "0x2535660", VA = "0x2535660", Slot = "27")]
		public void OnStateChange(ObjState newState, ObjState previousState, Transform pickup, [Optional] Mount attachedTo, bool isReady = true)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x2535728", Offset = "0x2535728", VA = "0x2535728")]
		private void DeferredEnable()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x2535834", Offset = "0x2535834", VA = "0x2535834")]
		public OnStateChangeToggle()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public struct StateChangeInfo
	{
		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ObjState objState;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Mount mount;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3? offsetPos;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion? offsetRot;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3? velocity;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool force;

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x27BCFBC", Offset = "0x27BCFBC", VA = "0x27BCFBC")]
		public StateChangeInfo(StateChangeInfo src)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x27BD03C", Offset = "0x27BD03C", VA = "0x27BD03C")]
		public StateChangeInfo(ObjState itemState, Mount mount, Vector3? offsetPos, Quaternion? offsetRot, Vector3? velocity, bool force)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x27BD0BC", Offset = "0x27BD0BC", VA = "0x27BD0BC")]
		public StateChangeInfo(ObjState itemState, Mount mount, Vector3? offsetPos, Vector3? velocity, bool force)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x27BD128", Offset = "0x27BD128", VA = "0x27BD128")]
		public StateChangeInfo(ObjState itemState, Mount mount, bool force)
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class SyncOwner : SyncObject<SyncOwner.Frame>, IOnCaptureState, IOnNetSerialize, IOnSnapshot, IUseKeyframes, IOnIncrementFrame
	{
		[Token(Token = "0x2000507")]
		public class Frame : FrameBase
		{
			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int ownerActorId;

			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool ownerHasChanged;

			[Token(Token = "0x6001967")]
			[Address(RVA = "0x200D468", Offset = "0x200D468", VA = "0x200D468", Slot = "5")]
			public override void Clear()
			{
			}

			[Token(Token = "0x6001968")]
			[Address(RVA = "0x200D47C", Offset = "0x200D47C", VA = "0x200D47C", Slot = "4")]
			public override void CopyFrom(FrameBase sourceFrame)
			{
			}

			[Token(Token = "0x6001969")]
			[Address(RVA = "0x200D51C", Offset = "0x200D51C", VA = "0x200D51C")]
			public Frame()
			{
			}
		}

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool reliableOwnerChange;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		protected bool pendingOwnerChange;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected int pendingOwnerId;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected int ticksUntilOwnershipRetry;

		[Token(Token = "0x170002F9")]
		public override int ApplyOrder
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x27C9F24", Offset = "0x27C9F24", VA = "0x27C9F24", Slot = "28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x27C9F2C", Offset = "0x27C9F2C", VA = "0x27C9F2C", Slot = "25")]
		public override void OnAuthorityChanged(bool isMine, bool controllerChanged)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x27C9FAC", Offset = "0x27C9FAC", VA = "0x27C9FAC")]
		public void TransferOwner(int newOwnerId)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x27C9FF0", Offset = "0x27C9FF0", VA = "0x27C9FF0", Slot = "50")]
		public void OnCaptureCurrentState(int frameId)
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x27CA18C", Offset = "0x27CA18C", VA = "0x27CA18C", Slot = "51")]
		public SerializationFlags OnNetSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x27CA26C", Offset = "0x27CA26C", VA = "0x27CA26C", Slot = "52")]
		public SerializationFlags OnNetDeserialize(int originFrameId, byte[] buffer, int bitposition, FrameArrival frameArrival)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x27CA344", Offset = "0x27CA344", VA = "0x27CA344", Slot = "40")]
		protected override void ApplySnapshot(Frame snapframe, Frame targframe, bool snapIsValid, bool targIsValid)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x27CA450", Offset = "0x27CA450", VA = "0x27CA450")]
		protected void DeferredOwnerChange()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x27CA50C", Offset = "0x27CA50C", VA = "0x27CA50C", Slot = "56")]
		public void OnIncrementFrame(int newFrameId, int newSubFrameId, int previousFrameId, int prevSubFrameId)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x27CA680", Offset = "0x27CA680", VA = "0x27CA680")]
		public SyncOwner()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public interface ISpawnController
	{
		[Token(Token = "0x600196A")]
		bool AllowNetObjectReadyCallback(bool ready);
	}
	[Token(Token = "0x2000509")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB21648", Offset = "0xB21648")]
	[DisallowMultipleComponent]
	public class SyncSpawnTimer : SyncObject<SyncSpawnTimer.Frame>, ISpawnController, ISerializationOptional, IOnNetSerialize, IUseKeyframes, IOnSnapshot, IOnCaptureState, IOnStateChange
	{
		[Token(Token = "0x200050A")]
		public class Frame : FrameBase
		{
			[Token(Token = "0x4001B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int ticksUntilRespawn;

			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int ticksUntilDespawn;

			[Token(Token = "0x6001976")]
			[Address(RVA = "0x200D564", Offset = "0x200D564", VA = "0x200D564")]
			public Frame()
			{
			}

			[Token(Token = "0x6001977")]
			[Address(RVA = "0x200D56C", Offset = "0x200D56C", VA = "0x200D56C")]
			public Frame(int frameId)
			{
			}

			[Token(Token = "0x6001978")]
			[Address(RVA = "0x200D574", Offset = "0x200D574", VA = "0x200D574", Slot = "4")]
			public override void CopyFrom(FrameBase sourceFrame)
			{
			}

			[Token(Token = "0x6001979")]
			[Address(RVA = "0x200D618", Offset = "0x200D618", VA = "0x200D618")]
			public bool Compare(Frame otherFrame)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[HideInInspector]
		public float initialDelay;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[HideInInspector]
		public bool respawnEnable;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "EnumMaskAttribute", RVA = "0xB28BDC", Offset = "0xB28BDC")]
		public ObjState despawnOn;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28C68", Offset = "0xB28C68")]
		[SerializeField]
		[HideInInspector]
		public float despawnDelay;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[HideInInspector]
		public bool despawnEnable;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "EnumMaskAttribute", RVA = "0xB28CFC", Offset = "0xB28CFC")]
		public ObjState respawnOn;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28D88", Offset = "0xB28D88")]
		[HideInInspector]
		public float respawnDelay;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected SyncState syncState;

		[NonSerialized]
		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected int ticksUntilRespawn;

		[NonSerialized]
		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected int ticksUntilDespawn;

		[NonSerialized]
		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected int spawnWaitAsTicks;

		[NonSerialized]
		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected int respawnWaitAsTicks;

		[NonSerialized]
		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected int despawnWaitAsTicks;

		[NonSerialized]
		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected bool hadInitialSpawn;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected int bitsForTicksUntilRespawn;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected int bitsForTicksUntilDespawn;

		[Token(Token = "0x170002FA")]
		public override int ApplyOrder
		{
			[Token(Token = "0x600196B")]
			[Address(RVA = "0x27CBFD0", Offset = "0x27CBFD0", VA = "0x27CBFD0", Slot = "28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x27CBFD8", Offset = "0x27CBFD8", VA = "0x27CBFD8", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x27CC12C", Offset = "0x27CC12C", VA = "0x27CC12C", Slot = "50")]
		public bool AllowNetObjectReadyCallback(bool ready)
		{
			return default(bool);
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x27CC148", Offset = "0x27CC148", VA = "0x27CC148", Slot = "16")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x27CC194", Offset = "0x27CC194", VA = "0x27CC194", Slot = "21")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x27CC1C0", Offset = "0x27CC1C0", VA = "0x27CC1C0", Slot = "58")]
		public void OnStateChange(ObjState newState, ObjState previousState, Transform attachmentTransform, [Optional] Mount attachTo, bool isReady = true)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x27CC628", Offset = "0x27CC628", VA = "0x27CC628", Slot = "59")]
		public virtual void OnCaptureCurrentState(int frameId)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x27CC8F8", Offset = "0x27CC8F8", VA = "0x27CC8F8", Slot = "60")]
		public virtual SerializationFlags OnNetSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x27CCA28", Offset = "0x27CCA28", VA = "0x27CCA28", Slot = "53")]
		public SerializationFlags OnNetDeserialize(int originFrameId, byte[] buffer, int bitposition, FrameArrival frameArrival)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x27CCB50", Offset = "0x27CCB50", VA = "0x27CCB50", Slot = "40")]
		protected override void ApplySnapshot(Frame snapframe, Frame targframe, bool snapIsValid, bool targIsValid)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x27CCC3C", Offset = "0x27CCC3C", VA = "0x27CCC3C")]
		public SyncSpawnTimer()
		{
		}
	}
	[Token(Token = "0x200050B")]
	[DisallowMultipleComponent]
	public class SyncState : SyncObject<SyncState.Frame>, IMountable, IOnCaptureState, IOnNetSerialize, IOnSnapshot, IReadyable, IOnNetObjReady, IUseKeyframes
	{
		[Token(Token = "0x200050C")]
		public class Frame : FrameBase
		{
			[Token(Token = "0x200050D")]
			public enum Changes
			{
				[Token(Token = "0x4001B3D")]
				None,
				[Token(Token = "0x4001B3E")]
				MountIdChange
			}

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ObjState state;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int? mountToViewID;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int? mountTypeId;

			[Token(Token = "0x600199E")]
			[Address(RVA = "0x200D658", Offset = "0x200D658", VA = "0x200D658")]
			public Frame()
			{
			}

			[Token(Token = "0x600199F")]
			[Address(RVA = "0x200D660", Offset = "0x200D660", VA = "0x200D660")]
			public Frame(int frameId)
			{
			}

			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x200D668", Offset = "0x200D668", VA = "0x200D668", Slot = "4")]
			public override void CopyFrom(FrameBase sourceFrame)
			{
			}

			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x200D714", Offset = "0x200D714", VA = "0x200D714", Slot = "5")]
			public override void Clear()
			{
			}

			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x200D740", Offset = "0x200D740", VA = "0x200D740")]
			public bool Compare(Frame otherFrame)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "EnumMaskAttribute", RVA = "0xB28DE4", Offset = "0xB28DE4")]
		public ObjState initialState;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "EnumMaskAttribute", RVA = "0xB28E50", Offset = "0xB28E50")]
		public ObjState respawnState;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "EnumMaskAttribute", RVA = "0xB28EBC", Offset = "0xB28EBC")]
		public ObjState readyState;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "EnumMaskAttribute", RVA = "0xB28F28", Offset = "0xB28F28")]
		public ObjState unreadyState;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28F94", Offset = "0xB28F94")]
		public MountMaskSelector mountableTo;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB28FCC", Offset = "0xB28FCC")]
		public bool autoReset;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29004", Offset = "0xB29004")]
		public bool autoOwnerChange;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2903C", Offset = "0xB2903C")]
		public bool mountReliable;

		[NonSerialized]
		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Frame currentState;

		[NonSerialized]
		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Mount currentMount;

		[NonSerialized]
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool netObjIsReady;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected MountsManager mountsLookup;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected SyncTransform syncTransform;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected SyncOwner syncOwner;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected ISpawnController iSpawnController;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Dictionary<int, int> mountTypeIdToIndex;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected int[] indexToMountTypeId;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected int bitsForMountType;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected StateChangeInfo respawnStateInfo;

		[NonSerialized]
		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<IOnStateChange> onStateChangeCallbacks;

		[NonSerialized]
		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public List<IFlagTeleport> flagTeleportCallbacks;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected Queue<StateChangeInfo> stateChangeQueue;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected Frame prevSerializedFrame;

		[Token(Token = "0x170002FB")]
		public override int ApplyOrder
		{
			[Token(Token = "0x600197A")]
			[Address(RVA = "0x27CCCB4", Offset = "0x27CCCB4", VA = "0x27CCCB4", Slot = "28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002FC")]
		public Mount CurrentMount
		{
			[Token(Token = "0x600197B")]
			[Address(RVA = "0x27CCCBC", Offset = "0x27CCCBC", VA = "0x27CCCBC", Slot = "50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600197C")]
			[Address(RVA = "0x27CCCC4", Offset = "0x27CCCC4", VA = "0x27CCCC4")]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public bool IsThrowable
		{
			[Token(Token = "0x600197D")]
			[Address(RVA = "0x27CCCCC", Offset = "0x27CCCCC", VA = "0x27CCCCC", Slot = "52")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FE")]
		public bool IsDroppable
		{
			[Token(Token = "0x600197E")]
			[Address(RVA = "0x27CCCD4", Offset = "0x27CCCD4", VA = "0x27CCCD4", Slot = "51")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FF")]
		public Rigidbody Rb
		{
			[Token(Token = "0x600197F")]
			[Address(RVA = "0x27CCCDC", Offset = "0x27CCCDC", VA = "0x27CCCDC", Slot = "53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		public Rigidbody2D Rb2d
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0x27CCCFC", Offset = "0x27CCCFC", VA = "0x27CCCFC", Slot = "54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		public override bool AllowReconstructionOfEmpty
		{
			[Token(Token = "0x6001981")]
			[Address(RVA = "0x27CCD1C", Offset = "0x27CCD1C", VA = "0x27CCD1C", Slot = "42")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x27CCD24", Offset = "0x27CCD24", VA = "0x27CCD24", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x27CCEEC", Offset = "0x27CCEEC", VA = "0x27CCEEC", Slot = "21")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x27CD2C0", Offset = "0x27CD2C0", VA = "0x27CD2C0", Slot = "16")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x27CD42C", Offset = "0x27CD42C", VA = "0x27CD42C", Slot = "25")]
		public override void OnAuthorityChanged(bool isMine, bool controllerChanged)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x27CD4D0", Offset = "0x27CD4D0", VA = "0x27CD4D0", Slot = "64")]
		public virtual void OnNetObjReadyChange(bool ready)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x27CD68C", Offset = "0x27CD68C", VA = "0x27CD68C")]
		public void SoftMount(Mount attachTo)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x27CD7A4", Offset = "0x27CD7A4", VA = "0x27CD7A4")]
		public void HardMount(Mount mountTo)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x27CD8BC", Offset = "0x27CD8BC", VA = "0x27CD8BC")]
		public void Spawn()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x27CC6E8", Offset = "0x27CC6E8", VA = "0x27CC6E8")]
		public void Respawn(bool immediate)
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x27CC7C0", Offset = "0x27CC7C0", VA = "0x27CC7C0")]
		public void Despawn(bool immediate)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x27CD8C0", Offset = "0x27CD8C0", VA = "0x27CD8C0", Slot = "55")]
		public void ImmediateUnmount()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x27CD9A4", Offset = "0x27CD9A4", VA = "0x27CD9A4")]
		public void Drop(Mount newMount, bool force = false)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x27CDA74", Offset = "0x27CDA74", VA = "0x27CDA74")]
		public void Throw(Vector3 position, Quaternion rotation, Vector3 velocity)
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x27CDC34", Offset = "0x27CDC34", VA = "0x27CDC34")]
		public void ThrowLocal(Transform origin, Vector3 offset, Vector3 velocity)
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x27CDDA8", Offset = "0x27CDDA8", VA = "0x27CDDA8", Slot = "65")]
		public virtual void QueueStateChange(ObjState newState, Mount newMount, bool force)
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x27CDE80", Offset = "0x27CDE80", VA = "0x27CDE80", Slot = "66")]
		public virtual void QueueStateChange(ObjState newState, Mount newMount, Vector3 offset, Vector3 velocity, bool force)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x27CDFF0", Offset = "0x27CDFF0", VA = "0x27CDFF0", Slot = "67")]
		protected virtual void DequeueStateChanges()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x27CE0C4", Offset = "0x27CE0C4", VA = "0x27CE0C4", Slot = "68")]
		protected virtual void ChangeState(StateChangeInfo stateChangeInfo)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x27CE930", Offset = "0x27CE930", VA = "0x27CE930")]
		private void ChangeOwnerToParentMountsOwner()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x27CEB94", Offset = "0x27CEB94", VA = "0x27CEB94", Slot = "69")]
		protected virtual void InvalidMountHandler(ObjState newState, Mount newMount, bool force)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x27CEC98", Offset = "0x27CEC98", VA = "0x27CEC98", Slot = "70")]
		public virtual bool ChangeMount(int newMountId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x27CF190", Offset = "0x27CF190", VA = "0x27CF190", Slot = "56")]
		public void OnCaptureCurrentState(int frameId)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x27CF200", Offset = "0x27CF200", VA = "0x27CF200", Slot = "57")]
		public SerializationFlags OnNetSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x27CF4D0", Offset = "0x27CF4D0", VA = "0x27CF4D0", Slot = "58")]
		public SerializationFlags OnNetDeserialize(int originFrameId, byte[] buffer, int bitposition, FrameArrival arrival)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x27CF6B4", Offset = "0x27CF6B4", VA = "0x27CF6B4", Slot = "40")]
		protected override void ApplySnapshot(Frame snapframe, Frame targframe, bool snapIsValid, bool targIsValid)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x27CF9C0", Offset = "0x27CF9C0", VA = "0x27CF9C0")]
		private void ApplyFrame(Frame frame)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x27CF818", Offset = "0x27CF818", VA = "0x27CF818")]
		public static Mount GetMount(int? viewID, int? mountId)
		{
			return null;
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x27CFB94", Offset = "0x27CFB94", VA = "0x27CFB94")]
		public SyncState()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class TeleportMarker : MonoBehaviour
	{
		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MarkerNameType markerType;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<int, List<TeleportMarker>> lookup;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<int, int> nexts;

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x204C964", Offset = "0x204C964", VA = "0x204C964")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x204CB00", Offset = "0x204CB00", VA = "0x204CB00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x204CC74", Offset = "0x204CC74", VA = "0x204CC74")]
		public static TeleportMarker GetRandomMarker(int hash, float seed)
		{
			return null;
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x204CDB4", Offset = "0x204CDB4", VA = "0x204CDB4")]
		public static TeleportMarker GetNextMarker(int hash)
		{
			return null;
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x204CF94", Offset = "0x204CF94", VA = "0x204CF94")]
		public TeleportMarker()
		{
		}
	}
	[Token(Token = "0x200050F")]
	public interface ISyncTransform
	{
	}
	[Token(Token = "0x2000510")]
	public interface ITransformController
	{
		[Token(Token = "0x17000302")]
		bool HandlesInterpolation
		{
			[Token(Token = "0x60019A9")]
			get;
		}

		[Token(Token = "0x17000303")]
		bool HandlesExtrapolation
		{
			[Token(Token = "0x60019AA")]
			get;
		}
	}
	[Token(Token = "0x2000511")]
	[DisallowMultipleComponent]
	public class SyncTransform : SyncObject<SyncTransform.Frame>, ISyncTransform, IOnSnapshot, IOnNetSerialize, IOnAuthorityChanged, IReadyable, IUseKeyframes, IDeltaFrameChangeDetect, IOnInterpolate, IOnCaptureState, IFlagTeleport
	{
		[Token(Token = "0x2000512")]
		public class Frame : FrameBase
		{
			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool hasTeleported;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matrix m;

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CompressedMatrix cm;

			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SyncTransform owner;

			[Token(Token = "0x4001B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Matrix telem;

			[Token(Token = "0x4001B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CompressedMatrix telecm;

			[Token(Token = "0x4001B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int parentHash;

			[Token(Token = "0x4001B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int telePparentHash;

			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x200D808", Offset = "0x200D808", VA = "0x200D808")]
			public Frame()
			{
			}

			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x200D90C", Offset = "0x200D90C", VA = "0x200D90C")]
			public Frame(SyncTransform sst, int frameId)
			{
			}

			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x200DAD8", Offset = "0x200DAD8", VA = "0x200DAD8")]
			public Frame(Frame srcFrame, int frameId)
			{
			}

			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x200DBF8", Offset = "0x200DBF8", VA = "0x200DBF8")]
			public void Set(SyncTransform sst, int frameId)
			{
			}

			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x200DC40", Offset = "0x200DC40", VA = "0x200DC40", Slot = "4")]
			public override void CopyFrom(FrameBase sourceFrame)
			{
			}

			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x200DD2C", Offset = "0x200DD2C", VA = "0x200DD2C")]
			public bool FastCompareCompressed(Frame other)
			{
				return default(bool);
			}

			[Token(Token = "0x60019C5")]
			[Address(RVA = "0x200DD54", Offset = "0x200DD54", VA = "0x200DD54")]
			public bool FastCompareUncompressed(Frame other)
			{
				return default(bool);
			}

			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x200DE38", Offset = "0x200DE38", VA = "0x200DE38", Slot = "5")]
			public override void Clear()
			{
			}

			[Token(Token = "0x60019C7")]
			[Address(RVA = "0x200DE68", Offset = "0x200DE68", VA = "0x200DE68", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29074", Offset = "0xB29074")]
		public Interpolation interpolation;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB290AC", Offset = "0xB290AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB290AC", Offset = "0xB290AC")]
		public float extrapolateRatio;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected int extrapolationCount;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29100", Offset = "0xB29100")]
		public float teleportThreshold;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float teleportThresholdSqrMag;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29138", Offset = "0xB29138")]
		public bool teleportReliable;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Dictionary<int, TransformCrusher> masterSharedCrushers;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TransformCrusher transformCrusher;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool hasTeleported;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected int teleNewParentId;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Matrix preTeleportM;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected CompressedMatrix preTeleportCM;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rigidbody rb;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Rigidbody2D rb2d;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<ITransformController> iTransformControllers;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected bool allowInterpolation;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		protected bool allowReconstructionOfEmpty;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Stack<Frame[]> framePool;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Frame prevSentFrame;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool skipInterpolation;

		[Token(Token = "0x17000304")]
		public override bool AllowInterpolation
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0x2044118", Offset = "0x2044118", VA = "0x2044118", Slot = "41")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000305")]
		public override bool AllowReconstructionOfEmpty
		{
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0x2044120", Offset = "0x2044120", VA = "0x2044120", Slot = "42")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000306")]
		public override int ApplyOrder
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0x2044128", Offset = "0x2044128", VA = "0x2044128", Slot = "28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x2043ED8", Offset = "0x2043ED8", VA = "0x2043ED8", Slot = "60")]
		public void FlagTeleport()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x2044064", Offset = "0x2044064", VA = "0x2044064")]
		public void UpdateParent(ObjState state, Transform newParent)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x2044130", Offset = "0x2044130", VA = "0x2044130", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x2044398", Offset = "0x2044398", VA = "0x2044398")]
		private void ConnectSharedCaches()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x2044460", Offset = "0x2044460", VA = "0x2044460")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x20444F4", Offset = "0x20444F4", VA = "0x20444F4", Slot = "37")]
		protected override void PopulateFrames()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x2043F20", Offset = "0x2043F20", VA = "0x2043F20")]
		protected void CaptureCurrent(Matrix m, CompressedMatrix cm, bool forceUseTransform = false)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x20447E0", Offset = "0x20447E0", VA = "0x20447E0", Slot = "61")]
		public virtual void OnCaptureCurrentState(int frameId)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x20448C0", Offset = "0x20448C0", VA = "0x20448C0", Slot = "51")]
		public SerializationFlags OnNetSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x2044A8C", Offset = "0x2044A8C", VA = "0x2044A8C", Slot = "52")]
		public SerializationFlags OnNetDeserialize(int originFrameId, byte[] buffer, int bitposition, FrameArrival arrival)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x2044BBC", Offset = "0x2044BBC", VA = "0x2044BBC", Slot = "39")]
		public override bool OnSnapshot(int prevFrameId, int snapFrameId, int targFrameId, bool prevIsValid, bool snapIsValid, bool targIsValid)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x2044D18", Offset = "0x2044D18", VA = "0x2044D18")]
		protected void ApplyFrame(Frame frame)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x2044D70", Offset = "0x2044D70", VA = "0x2044D70", Slot = "47")]
		public override bool OnInterpolate(int snapFrameId, int targFrameId, float t)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x2044F50", Offset = "0x2044F50", VA = "0x2044F50", Slot = "48")]
		protected override void InterpolateFrame(Frame targframe, Frame startframe, Frame endframe, float t)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x204507C", Offset = "0x204507C", VA = "0x204507C", Slot = "49")]
		protected override void ExtrapolateFrame(Frame prevframe, Frame snapframe, Frame targframe)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x2045248", Offset = "0x2045248", VA = "0x2045248")]
		public SyncTransform()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public static class ApplyOrderConstants
	{
		[Token(Token = "0x4001B5E")]
		public const int MAX_ORDER_VAL = 24;

		[Token(Token = "0x4001B5F")]
		public const int COLLISIONS = 2;

		[Token(Token = "0x4001B60")]
		public const int STATE_TIMER = 3;

		[Token(Token = "0x4001B61")]
		public const int STATES = 5;

		[Token(Token = "0x4001B62")]
		public const int TRANSFORM = 9;

		[Token(Token = "0x4001B63")]
		public const int ANIMATOR = 11;

		[Token(Token = "0x4001B64")]
		public const int DEFAULT = 13;

		[Token(Token = "0x4001B65")]
		public const int VITALS = 15;

		[Token(Token = "0x4001B66")]
		public const int HITSCAN = 17;

		[Token(Token = "0x4001B67")]
		public const int WEAPONS = 19;

		[Token(Token = "0x4001B68")]
		public const int OWNERSHIP = 21;
	}
	[Token(Token = "0x2000514")]
	public enum TRS
	{
		[Token(Token = "0x4001B6A")]
		Position,
		[Token(Token = "0x4001B6B")]
		Rotation,
		[Token(Token = "0x4001B6C")]
		Scale
	}
	[Token(Token = "0x2000515")]
	public enum AxisMask
	{
		[Token(Token = "0x4001B6E")]
		None,
		[Token(Token = "0x4001B6F")]
		X,
		[Token(Token = "0x4001B70")]
		Y,
		[Token(Token = "0x4001B71")]
		XY,
		[Token(Token = "0x4001B72")]
		Z,
		[Token(Token = "0x4001B73")]
		XZ,
		[Token(Token = "0x4001B74")]
		YZ,
		[Token(Token = "0x4001B75")]
		XYZ
	}
	[Token(Token = "0x2000516")]
	public enum Replication
	{
		[Token(Token = "0x4001B77")]
		OwnerSend = 1,
		[Token(Token = "0x4001B78")]
		MasterSend
	}
	[Token(Token = "0x2000517")]
	public enum Interpolation
	{
		[Token(Token = "0x4001B7A")]
		None,
		[Token(Token = "0x4001B7B")]
		Linear,
		[Token(Token = "0x4001B7C")]
		CatmullRom
	}
	[Token(Token = "0x2000518")]
	public enum LocalApplyTiming
	{
		[Token(Token = "0x4001B7E")]
		Never,
		[Token(Token = "0x4001B7F")]
		Immediately,
		[Token(Token = "0x4001B80")]
		OnSend
	}
	[Token(Token = "0x2000519")]
	public enum HitscanType
	{
		[Token(Token = "0x4001B82")]
		Raycast,
		[Token(Token = "0x4001B83")]
		SphereCast,
		[Token(Token = "0x4001B84")]
		CapsuleCast,
		[Token(Token = "0x4001B85")]
		BoxCast,
		[Token(Token = "0x4001B86")]
		OverlapSphere,
		[Token(Token = "0x4001B87")]
		OverlapCapsule,
		[Token(Token = "0x4001B88")]
		OverlapBox
	}
	[Token(Token = "0x200051A")]
	public static class HitscanTypeExt
	{
		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x23D0004", Offset = "0x23D0004", VA = "0x23D0004")]
		public static bool IsCast(this HitscanType hitscanType)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x23CFB58", Offset = "0x23CFB58", VA = "0x23CFB58")]
		public static bool IsOverlap(this HitscanType hitscanType)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x23D3A88", Offset = "0x23D3A88", VA = "0x23D3A88")]
		public static bool UsesRadius(this HitscanType hitscanType)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x23D3AAC", Offset = "0x23D3AAC", VA = "0x23D3AAC")]
		public static bool IsBox(this HitscanType hitscanType)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x23D3AC4", Offset = "0x23D3AC4", VA = "0x23D3AC4")]
		public static bool IsCapsule(this HitscanType hitscanType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200051B")]
	public static class GenericHitscanExt
	{
		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Collider[] reusableColliderArray;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static RaycastHit[] reusableRayHitArray;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<NetworkHit> reusableHitscanHitList;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<NetObject> reusableNetObjectsList;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static GameObject DebugSpherePrefab;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject DebugCylinderPrefab;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static GameObject DebugCubePrefab;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly Dictionary<int, int> reusableGameObjIntDict;

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x23CD84C", Offset = "0x23CD84C", VA = "0x23CD84C")]
		private static GameObject SetUpDebugPrimitive(this GameObject go, string name, bool createCylinderChild = false)
		{
			return null;
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x23CDA44", Offset = "0x23CDA44", VA = "0x23CDA44")]
		private static void CreateDebugPrimitives()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x23CDC5C", Offset = "0x23CDC5C", VA = "0x23CDC5C")]
		public static void VisualizeHitscan(this HitscanDefinition hd, Transform origin, float duration = 0.5f)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x23CED28", Offset = "0x23CED28", VA = "0x23CED28")]
		public static int GenericHitscanNonAlloc(this HitscanDefinition hd, Transform origin, [Out] RaycastHit[] rayhits, [Out] Collider[] hits, int nearestIndex, bool showDebugWidgets = false, bool useSecondaryRealm = false)
		{
			return default(int);
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x23CF594", Offset = "0x23CF594", VA = "0x23CF594")]
		public static int GenericHitscanNonAlloc(this HitscanDefinition hd, Transform origin, NetObject ownerNetObj, List<NetworkHit> hitscanHits, int nearestIndex, bool showDebugWidgets = false, bool useSecondaryRealm = false)
		{
			return default(int);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x23CEE00", Offset = "0x23CEE00", VA = "0x23CEE00")]
		public static int GenericHitscanNonAlloc(this HitscanDefinition hd, Transform origin, Collider[] hits, RaycastHit[] rayhits, int nearestIndex, bool showDebugWidgets = false, bool useSecondaryRealm = false)
		{
			return default(int);
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x23CFB64", Offset = "0x23CFB64", VA = "0x23CFB64")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31B60", Offset = "0xB31B60")]
		public static int GenericCastNonAlloc(this Transform srcT, Collider[] hits, RaycastHit[] rayhits, float distance, float radius, int mask, Quaternion orientation, bool useOffset, Vector3 offset1, Vector3 offset2, HitscanType hitscanType)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200051C")]
	public abstract class HitscanComponent : NetComponent, IOnPreSimulate
	{
		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject origin;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HitscanDefinition hitscanDefinition;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29170", Offset = "0xB29170")]
		public bool ignoreSelf;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool visualize;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		protected bool triggerQueued;

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x23D333C", Offset = "0x23D333C", VA = "0x23D333C", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x23D33EC", Offset = "0x23D33EC", VA = "0x23D33EC", Slot = "28")]
		public virtual void OnPreSimulate(int frameId, int subFrameId)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x23D3514", Offset = "0x23D3514", VA = "0x23D3514", Slot = "29")]
		public virtual void ProcessHits(Collider[] hits, int hitcount)
		{
		}

		[Token(Token = "0x60019D8")]
		public abstract bool ProcessHit(Collider hit);

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x23D39A4", Offset = "0x23D39A4", VA = "0x23D39A4")]
		protected HitscanComponent()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public enum Replicate
	{
		[Token(Token = "0x4001B97")]
		None,
		[Token(Token = "0x4001B98")]
		CastOnly,
		[Token(Token = "0x4001B99")]
		Hits,
		[Token(Token = "0x4001B9A")]
		HitsWithContactGroups
	}
	[Serializable]
	[Token(Token = "0x200051E")]
	public class HitscanDefinition
	{
		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Replicate ownerToAuthority;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Replicate authorityToAll;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB291A8", Offset = "0xB291A8")]
		public LayerMask layerMask;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool useOffset;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset1;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset2;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 halfExtents;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 orientation;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HitscanType hitscanType;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float distance;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float radius;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool nearestOnly;

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x23D3A20", Offset = "0x23D3A20", VA = "0x23D3A20")]
		public HitscanDefinition()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public interface IOnNetObjReady
	{
		[Token(Token = "0x60019DB")]
		void OnNetObjReadyChange(bool ready);
	}
	[Token(Token = "0x2000520")]
	public interface IOnJoinedRoom
	{
		[Token(Token = "0x60019DC")]
		void OnJoinedRoom();
	}
	[Token(Token = "0x2000521")]
	public interface IOnAwake
	{
		[Token(Token = "0x60019DD")]
		void OnAwake();
	}
	[Token(Token = "0x2000522")]
	public interface IOnStart
	{
		[Token(Token = "0x60019DE")]
		void OnStart();
	}
	[Token(Token = "0x2000523")]
	public interface IOnEnable
	{
		[Token(Token = "0x60019DF")]
		void OnPostEnable();
	}
	[Token(Token = "0x2000524")]
	public interface IOnDisable
	{
		[Token(Token = "0x60019E0")]
		void OnPostDisable();
	}
	[Token(Token = "0x2000525")]
	public interface IOnPreNetDestroy
	{
		[Token(Token = "0x60019E1")]
		void OnPreNetDestroy(NetObject roothNetObj);
	}
	[Token(Token = "0x2000526")]
	public interface ISyncAnimator
	{
	}
	[Token(Token = "0x2000527")]
	public interface IApplyOrder
	{
		[Token(Token = "0x17000307")]
		int ApplyOrder
		{
			[Token(Token = "0x60019E2")]
			get;
		}
	}
	[Token(Token = "0x2000528")]
	public interface IAdjustableApplyOrder : IApplyOrder
	{
	}
	[Token(Token = "0x2000529")]
	public interface IReadyable
	{
		[Token(Token = "0x17000308")]
		bool AlwaysReady
		{
			[Token(Token = "0x60019E3")]
			get;
		}
	}
	[Token(Token = "0x200052A")]
	public interface IUseKeyframes
	{
		[Token(Token = "0x60019E4")]
		bool IsKeyframe(int frameId);
	}
	[Token(Token = "0x200052B")]
	public interface IDeltaFrameChangeDetect : IUseKeyframes
	{
		[Token(Token = "0x17000309")]
		bool UseDeltas
		{
			[Token(Token = "0x60019E5")]
			get;
			[Token(Token = "0x60019E6")]
			set;
		}
	}
	[Token(Token = "0x200052C")]
	public interface ISerializationOptional : IOnNetSerialize
	{
		[Token(Token = "0x1700030A")]
		bool IncludeInSerialization
		{
			[Token(Token = "0x60019E7")]
			get;
		}
	}
	[Token(Token = "0x200052D")]
	public interface IOnNetSerialize
	{
		[Token(Token = "0x1700030B")]
		bool SkipWhenEmpty
		{
			[Token(Token = "0x60019EA")]
			get;
		}

		[Token(Token = "0x60019E8")]
		SerializationFlags OnNetSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags);

		[Token(Token = "0x60019E9")]
		SerializationFlags OnNetDeserialize(int originFrameId, byte[] buffer, int bitposition, FrameArrival frameArrival);
	}
	[Token(Token = "0x200052E")]
	public interface IOnCriticallyLateFrame
	{
		[Token(Token = "0x60019EB")]
		void HandleCriticallyLateFrame(int frameId);
	}
	[Token(Token = "0x200052F")]
	public interface IOnSnapshot
	{
		[Token(Token = "0x60019EC")]
		bool OnSnapshot(int pre1FrameId, int snapFrameId, int targFrameId, bool prevIsValid, bool snapIsValid, bool targIsValid);
	}
	[Token(Token = "0x2000530")]
	public interface IOnInterpolate
	{
		[Token(Token = "0x60019ED")]
		bool OnInterpolate(int snapFrameId, int targFrameId, float t);
	}
	[Token(Token = "0x2000531")]
	public interface IOnQuantize
	{
		[Token(Token = "0x60019EE")]
		void OnQuantize(int frameId);
	}
	[Token(Token = "0x2000532")]
	public interface IOnCaptureState
	{
		[Token(Token = "0x60019EF")]
		void OnCaptureCurrentState(int frameId);
	}
	[Token(Token = "0x2000533")]
	public interface IOnAuthorityChanged
	{
		[Token(Token = "0x60019F0")]
		void OnAuthorityChanged(bool isMine, bool asServer);
	}
	[Token(Token = "0x2000534")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB21700", Offset = "0xB21700")]
	public abstract class NetComponent : MonoBehaviour, IOnJoinedRoom, IOnAwake, IOnStart, IOnEnable, IOnDisable, IOnAuthorityChanged
	{
		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		protected int prefabInstanceId;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected NetObject netObj;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29218", Offset = "0xB29218")]
		private RigidbodyType <RigidbodyType>k__BackingField;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected PhotonView photonView;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool hadFirstAuthorityAssgn;

		[Token(Token = "0x1700030C")]
		public NetObject NetObj
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x2252C84", Offset = "0x2252C84", VA = "0x2252C84", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		public RigidbodyType RigidbodyType
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x2252C8C", Offset = "0x2252C8C", VA = "0x2252C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31BAC", Offset = "0xB31BAC")]
			get
			{
				return default(RigidbodyType);
			}
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x2252C94", Offset = "0x2252C94", VA = "0x2252C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31BBC", Offset = "0xB31BBC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public int ViewID
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x2252C9C", Offset = "0x2252C9C", VA = "0x2252C9C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700030F")]
		public PhotonView PhotonView
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x2252CBC", Offset = "0x2252CBC", VA = "0x2252CBC", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000310")]
		public bool IsMine
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x2252CC4", Offset = "0x2252CC4", VA = "0x2252CC4", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000311")]
		public int ControllerActorNr
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x2252CE4", Offset = "0x2252CE4", VA = "0x2252CE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x2252D04", Offset = "0x2252D04", VA = "0x2252D04", Slot = "14")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x2252D08", Offset = "0x2252D08", VA = "0x2252D08", Slot = "15")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x2252D0C", Offset = "0x2252D0C", VA = "0x2252D0C", Slot = "16")]
		public virtual void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x2252D10", Offset = "0x2252D10", VA = "0x2252D10")]
		public void Awake()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x2252E10", Offset = "0x2252E10", VA = "0x2252E10", Slot = "17")]
		public virtual void OnAwake()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x2252EE0", Offset = "0x2252EE0", VA = "0x2252EE0", Slot = "18")]
		public virtual void OnAwakeInitialize(bool isNetObject)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x2252EE4", Offset = "0x2252EE4", VA = "0x2252EE4", Slot = "19")]
		protected virtual NetObject EnsureComponentsDependenciesExist()
		{
			return null;
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x225316C", Offset = "0x225316C", VA = "0x225316C", Slot = "20")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x2253208", Offset = "0x2253208", VA = "0x2253208", Slot = "21")]
		public virtual void OnStart()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x225321C", Offset = "0x225321C", VA = "0x225321C", Slot = "22")]
		public virtual void OnStartInitialize(bool isNetObject)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x2253220", Offset = "0x2253220", VA = "0x2253220", Slot = "23")]
		public virtual void OnPostEnable()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x2253224", Offset = "0x2253224", VA = "0x2253224", Slot = "24")]
		public virtual void OnPostDisable()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x225322C", Offset = "0x225322C", VA = "0x225322C", Slot = "25")]
		public virtual void OnAuthorityChanged(bool isMine, bool controllerChanged)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x2253278", Offset = "0x2253278", VA = "0x2253278", Slot = "26")]
		public virtual void OnFirstAuthorityAssign(bool isMine, bool asServer)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x225327C", Offset = "0x225327C", VA = "0x225327C")]
		protected NetComponent()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public static class DoubleTime
	{
		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static double time;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static double prevUpdateTime;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static double prevFixedTime;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static double deltaTime;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static double timeSinceFixed;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static double fixedTime;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static double fixedDeltaTime;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float normTimeSinceFixed;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static double updateTime;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static float mixedDeltaTime;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static bool isInFixed;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private static bool isFirstUpdatePostFixed;

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x221209C", Offset = "0x221209C", VA = "0x221209C")]
		public static void SnapFixed()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x2212190", Offset = "0x2212190", VA = "0x2212190")]
		public static void SnapUpdate()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public interface IOnTickPreSerialization
	{
		[Token(Token = "0x6001A09")]
		SerializationFlags OnPreSerializeTick(int frameId, byte[] buffer, int bitposition);
	}
	[Token(Token = "0x2000537")]
	public interface IOnPreUpdate
	{
		[Token(Token = "0x6001A0A")]
		void OnPreUpdate();
	}
	[Token(Token = "0x2000538")]
	public interface IOnPostUpdate
	{
		[Token(Token = "0x6001A0B")]
		void OnPostUpdate();
	}
	[Token(Token = "0x2000539")]
	public interface IOnPreLateUpdate
	{
		[Token(Token = "0x6001A0C")]
		void OnPreLateUpdate();
	}
	[Token(Token = "0x200053A")]
	public interface IOnPostLateUpdate
	{
		[Token(Token = "0x6001A0D")]
		void OnPostLateUpdate();
	}
	[Token(Token = "0x200053B")]
	public interface IOnPreSimulate
	{
		[Token(Token = "0x6001A0E")]
		void OnPreSimulate(int frameId, int subFrameId);
	}
	[Token(Token = "0x200053C")]
	public interface IOnPostSimulate
	{
		[Token(Token = "0x6001A0F")]
		void OnPostSimulate(int frameId, int subFrameId, bool isNetTick);
	}
	[Token(Token = "0x200053D")]
	public interface IOnIncrementFrame
	{
		[Token(Token = "0x6001A10")]
		void OnIncrementFrame(int newFrameId, int newSubFrameId, int previousFrameId, int prevSubFrameId);
	}
	[Token(Token = "0x200053E")]
	public interface IOnPreQuit
	{
		[Token(Token = "0x6001A11")]
		void OnPreQuit();
	}
	[Token(Token = "0x200053F")]
	public interface IOnPostCallbackLoop
	{
		[Token(Token = "0x6001A12")]
		void OnPostCallback();
	}
	[Token(Token = "0x2000540")]
	public interface IOnTickSnapshot
	{
		[Token(Token = "0x6001A13")]
		bool OnSnapshot(int newTargetFrameId);
	}
	[Token(Token = "0x2000541")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB21738", Offset = "0xB21738")]
	public class NetMaster : MonoBehaviour
	{
		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetMaster single;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool isShuttingDown;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected static float lastSentTickTime;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _currFrameId;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _currSubFrameId;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _prevFrameId;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _prevSubFrameId;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29228", Offset = "0xB29228")]
		private static float <NormTimeSinceFixed>k__BackingField;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected static float rtt;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool simulationHasRun;

		[Token(Token = "0x4001BC2")]
		public const int BITS_FOR_NETOBJ_SIZE = 16;

		[Token(Token = "0x17000312")]
		public static int CurrentFrameId
		{
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0x2253284", Offset = "0x2253284", VA = "0x2253284")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000313")]
		public static int CurrentSubFrameId
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x22532D0", Offset = "0x22532D0", VA = "0x22532D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000314")]
		public static int PreviousFrameId
		{
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0x225331C", Offset = "0x225331C", VA = "0x225331C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000315")]
		public static int PreviousSubFrameId
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0x2253368", Offset = "0x2253368", VA = "0x2253368")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000316")]
		public static float NormTimeSinceFixed
		{
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0x22533B4", Offset = "0x22533B4", VA = "0x22533B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31BCC", Offset = "0xB31BCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0x2253400", Offset = "0x2253400", VA = "0x2253400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31BDC", Offset = "0xB31BDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public static float RTT
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0x2253458", Offset = "0x2253458", VA = "0x2253458")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x22534A4", Offset = "0x22534A4", VA = "0x22534A4")]
		public static void EnsureExistsInScene()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x2253884", Offset = "0x2253884", VA = "0x2253884")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x2253A14", Offset = "0x2253A14", VA = "0x2253A14")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x2253C28", Offset = "0x2253C28", VA = "0x2253C28")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x2253FCC", Offset = "0x2253FCC", VA = "0x2253FCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x2254AC0", Offset = "0x2254AC0", VA = "0x2254AC0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x2253EC4", Offset = "0x2253EC4", VA = "0x2253EC4")]
		private void PostSimulate()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x225514C", Offset = "0x225514C", VA = "0x225514C")]
		private static void IncrementFrameId()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x2254E5C", Offset = "0x2254E5C", VA = "0x2254E5C")]
		private static void SerializeAllAndSend()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x225604C", Offset = "0x225604C", VA = "0x225604C")]
		private static void SerializeNetObjDict(NonAllocDictionary<int, NetObject> dict, byte[] buffer, int bitposition, SerializationFlags flags, SerializationFlags writeFlags)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x22567B8", Offset = "0x22567B8", VA = "0x22567B8")]
		public static void ReceiveMessage(object conn, int connId, byte[] buffer)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x2257138", Offset = "0x2257138", VA = "0x2257138")]
		public static FrameArrival CheckFrameArrival(int incomingFrame)
		{
			return default(FrameArrival);
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x2257220", Offset = "0x2257220", VA = "0x2257220")]
		public NetMaster()
		{
		}
	}
	[Token(Token = "0x2000542")]
	public static class NetMasterCallbacks
	{
		[Token(Token = "0x2000543")]
		public struct DelayedRegistrationItem
		{
			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public object comp;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool register;

			[Token(Token = "0x6001A36")]
			[Address(RVA = "0x1FFCFEC", Offset = "0x1FFCFEC", VA = "0x1FFCFEC")]
			public DelayedRegistrationItem(object comp, bool register)
			{
			}
		}

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<IOnTickPreSerialization> onTickPreSerializations;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<IOnPreUpdate> onPreUpdates;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<IOnPostUpdate> onPostUpdates;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<IOnPreLateUpdate> onPreLateUpdates;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<IOnPostLateUpdate> onPostLateUpdates;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static List<IOnIncrementFrame> onIncrementFrames;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<IOnPreSimulate> onPreSimulates;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static List<IOnPostSimulate> onPostSimulates;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static List<IOnTickSnapshot> onSnapshots;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static List<IOnInterpolate> onInterpolates;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static List<IOnPreQuit> onPreQuits;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Queue<Action> postCallbackActions;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Queue<Action> postSimulateActions;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Queue<Action> postSerializationActions;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Queue<DelayedRegistrationItem> pendingRegistrations;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static bool callbacksLocked;

		[Token(Token = "0x17000318")]
		public static bool CallbacksLocked
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x2257548", Offset = "0x2257548", VA = "0x2257548")]
			set
			{
			}
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x2257228", Offset = "0x2257228", VA = "0x2257228")]
		public static void RegisterCallbackInterfaces(object comp, bool register = true, bool delay = false)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x2253A98", Offset = "0x2253A98", VA = "0x2253A98")]
		public static void OnPreQuitCallbacks()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x22542D8", Offset = "0x22542D8", VA = "0x22542D8")]
		public static void OnPreUpdateCallbacks()
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x2254908", Offset = "0x2254908", VA = "0x2254908")]
		public static void OnInterpolateCallbacks(int _prevFrameId, int _currFrameId, float t)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x2254B18", Offset = "0x2254B18", VA = "0x2254B18")]
		public static void OnPreLateUpdateCallbacks()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x2254CA8", Offset = "0x2254CA8", VA = "0x2254CA8")]
		public static void OnPostSimulateCallbacks(int _currFrameId, int _currSubFrameId, bool isNetTick)
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x22554A0", Offset = "0x22554A0", VA = "0x22554A0")]
		public static void OnIncrementFrameCallbacks(int _currFrameId, int _currSubFrameId, int _prevFrameId, int _prevSubFrameId)
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x2255C6C", Offset = "0x2255C6C", VA = "0x2255C6C")]
		public static void OnSnapshotCallbacks(int _currFrameId)
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x2255E9C", Offset = "0x2255E9C", VA = "0x2255E9C")]
		public static void OnPreSerializeTickCallbacks(int _currFrameId, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x22576F0", Offset = "0x22576F0", VA = "0x22576F0")]
		public static void OnPreSimulateCallbacks(int currentFrameId, int currentSubFrameId)
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x2257958", Offset = "0x2257958", VA = "0x2257958")]
		public static void OnPostUpdateCallbacks()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x2257BA8", Offset = "0x2257BA8", VA = "0x2257BA8")]
		public static void OnPostLateUpdateCallbacks()
		{
		}
	}
	[Token(Token = "0x2000544")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB21770", Offset = "0xB21770")]
	public class NetMasterLate : MonoBehaviour
	{
		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetMasterLate single;

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x22582B4", Offset = "0x22582B4", VA = "0x22582B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x22583E4", Offset = "0x22583E4", VA = "0x22583E4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x2258500", Offset = "0x2258500", VA = "0x2258500")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x22585AC", Offset = "0x22585AC", VA = "0x22585AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x2258658", Offset = "0x2258658", VA = "0x2258658")]
		public NetMasterLate()
		{
		}
	}
	[Token(Token = "0x2000545")]
	public enum RigidbodyType
	{
		[Token(Token = "0x4001BD7")]
		None,
		[Token(Token = "0x4001BD8")]
		RB,
		[Token(Token = "0x4001BD9")]
		RB2D
	}
	[Token(Token = "0x2000546")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB217A8", Offset = "0xB217A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB217A8", Offset = "0xB217A8")]
	public class NetObject : MonoBehaviour, IMatchmakingCallbacks, IOnPhotonViewPreNetDestroy, IPhotonViewCallback, IOnPhotonViewOwnerChange, IOnPhotonViewControllerChange, IOnPreUpdate, IOnPreSimulate, IOnPostSimulate, IOnQuantize, IOnIncrementFrame, IOnPreQuit
	{
		[Token(Token = "0x2000547")]
		private class PackObjRecord
		{
			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Component component;

			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PackObjectDatabase.PackObjectInfo info;

			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PackFrame[] packFrames;

			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FastBitMask128 prevReadyMask;

			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public FastBitMask128 readyMask;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public IPackObjOnReadyChange onReadyCallback;

			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0x1FFD310", Offset = "0x1FFD310", VA = "0x1FFD310")]
			public PackObjRecord()
			{
			}
		}

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29238", Offset = "0xB29238")]
		protected bool skipWhenEmpty;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29294", Offset = "0xB29294")]
		[HideInInspector]
		protected bool ignoreNonControllerUpdates;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB292F0", Offset = "0xB292F0")]
		[HideInInspector]
		[SerializeField]
		protected bool resimulateLateArrivals;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody _rigidbody;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Rigidbody2D _rigidbody2D;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NonAllocDictionary<int, NetObject> activeControlledNetObjs;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NonAllocDictionary<int, NetObject> activeUncontrolledNetObjs;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Queue<NetObject> pendingActiveNetObjDictChanges;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool netObjDictsLocked;

		[NonSerialized]
		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<Component, int> colliderLookup;

		[NonSerialized]
		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Component> indexedColliders;

		[NonSerialized]
		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int bitsForColliderIndex;

		[NonSerialized]
		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FastBitMask128 frameValidMask;

		[NonSerialized]
		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int[] originHistory;

		[NonSerialized]
		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FastBitMask128 syncObjReadyMask;

		[NonSerialized]
		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FastBitMask128 packObjReadyMask;

		[NonSerialized]
		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly Dictionary<Component, int> packObjIndexLookup;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool _allObjsAreReady;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected int viewID;

		[NonSerialized]
		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public PhotonView photonView;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<Component> reusableComponents;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly List<IOnJoinedRoom> onJoinedRoomCallbacks;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly List<IOnAwake> onAwakeCallbacks;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly List<IOnStart> onStartCallbacks;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly List<IOnEnable> onEnableCallbacks;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly List<IOnDisable> onDisableCallbacks;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public readonly List<IOnPreUpdate> onPreUpdateCallbacks;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public readonly List<IOnAuthorityChanged> onAuthorityChangedCallbacks;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public readonly List<IOnNetSerialize> onNetSerializeCallbacks;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public readonly List<IOnCriticallyLateFrame> onCriticallyLateFrameCallbacks;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public readonly List<IOnIncrementFrame> onIncrementFramesCallbacks;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public readonly List<IOnSnapshot> onSnapshotCallbacks;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public readonly List<IOnQuantize> onQuantizeCallbacks;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public readonly List<IOnInterpolate> onInterpolateCallbacks;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public readonly List<IOnCaptureState> onCaptureCurrentStateCallbacks;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public readonly List<IOnPreSimulate> onPreSimulateCallbacks;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public readonly List<IOnPostSimulate> onPostSimulateCallbacks;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public readonly List<IOnPreQuit> onPreQuitCallbacks;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public readonly List<IOnPreNetDestroy> onPreNetDestroyCallbacks;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private readonly List<IOnNetObjReady> onNetObjReadyCallbacks;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private readonly List<SyncObject> syncObjects;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private readonly List<PackObjRecord> packObjects;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool processedInitialBacklog;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float firstDeserializeTime;

		[Token(Token = "0x17000319")]
		public bool SkipWhenEmpty
		{
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x225A26C", Offset = "0x225A26C", VA = "0x225A26C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031A")]
		public bool IgnoreNonControllerUpdates
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0x225A274", Offset = "0x225A274", VA = "0x225A274")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031B")]
		public bool ResimulateLateArrivals
		{
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0x225A27C", Offset = "0x225A27C", VA = "0x225A27C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031C")]
		public Rigidbody Rb
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0x225A284", Offset = "0x225A284", VA = "0x225A284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		public Rigidbody2D Rb2D
		{
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0x225A28C", Offset = "0x225A28C", VA = "0x225A28C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		public static bool NetObjDictsLocked
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0x2254468", Offset = "0x2254468", VA = "0x2254468")]
			set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public bool AllObjsAreReady
		{
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0x225A80C", Offset = "0x225A80C", VA = "0x225A80C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0x225A600", Offset = "0x225A600", VA = "0x225A600")]
			private set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public int ViewID
		{
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0x225A854", Offset = "0x225A854", VA = "0x225A854")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x225A58C", Offset = "0x225A58C", VA = "0x225A58C")]
		public void OnSyncObjReadyChange(SyncObject sobj, ReadyStateEnum readyState)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x225A758", Offset = "0x225A758", VA = "0x225A758")]
		public void OnPackObjReadyChange(Component pobj, ReadyStateEnum readyState)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x225A85C", Offset = "0x225A85C", VA = "0x225A85C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x225B148", Offset = "0x225B148", VA = "0x225B148")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x225B4F8", Offset = "0x225B4F8", VA = "0x225B4F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x225B6B4", Offset = "0x225B6B4", VA = "0x225B6B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x225B870", Offset = "0x225B870", VA = "0x225B870", Slot = "19")]
		public void OnPreQuit()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x225B974", Offset = "0x225B974", VA = "0x225B974", Slot = "11")]
		public void OnPreNetDestroy(PhotonView rootView)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x225BB00", Offset = "0x225BB00", VA = "0x225BB00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x225BC7C", Offset = "0x225BC7C", VA = "0x225BC7C", Slot = "20")]
		public virtual void PrepareForDestroy()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x225BD38", Offset = "0x225BD38", VA = "0x225BD38", Slot = "12")]
		public void OnOwnerChange(Player newOwner, Player previousOwner)
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x225BD74", Offset = "0x225BD74", VA = "0x225BD74", Slot = "13")]
		public void OnControllerChange(Player newController, Player previousController)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x225BDB0", Offset = "0x225BDB0", VA = "0x225BDB0", Slot = "4")]
		public void OnFriendListUpdate(List<Photon.Realtime.FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x225BDB4", Offset = "0x225BDB4", VA = "0x225BDB4", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x225BDB8", Offset = "0x225BDB8", VA = "0x225BDB8", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x225BDBC", Offset = "0x225BDBC", VA = "0x225BDBC", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x225BFBC", Offset = "0x225BFBC", VA = "0x225BFBC", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x225BFC0", Offset = "0x225BFC0", VA = "0x225BFC0", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x225BFC4", Offset = "0x225BFC4", VA = "0x225BFC4", Slot = "10")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x225A294", Offset = "0x225A294", VA = "0x225A294")]
		private void DetermineActiveAndControlled(bool amController)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x225B394", Offset = "0x225B394", VA = "0x225B394")]
		public void OnChangeAuthority(bool isMine, bool controllerHasChanged)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x225ADD0", Offset = "0x225ADD0", VA = "0x225ADD0")]
		private void CollectAndReorderInterfaces()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x225C67C", Offset = "0x225C67C", VA = "0x225C67C")]
		public void RemoveInterfaces(Component comp)
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x225BFC8", Offset = "0x225BFC8", VA = "0x225BFC8")]
		private void AddInterfaces(Component comp, bool remove = false)
		{
		}

		[Token(Token = "0x6001A5D")]
		private void AddInterfaceToList<T>(object comp, List<T> list, bool remove, bool checkSerializationOptional = false) where T : class
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x225C350", Offset = "0x225C350", VA = "0x225C350")]
		private void AddPackObjects(Component comp)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x225C684", Offset = "0x225C684", VA = "0x225C684", Slot = "14")]
		public void OnPreUpdate()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x225C79C", Offset = "0x225C79C", VA = "0x225C79C")]
		public SerializationFlags GenerateMessage(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x225CB80", Offset = "0x225CB80", VA = "0x225CB80")]
		public SerializationFlags OnSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x2256A3C", Offset = "0x2256A3C", VA = "0x2256A3C")]
		public void OnDeserialize(int connId, int originFrameId, byte[] buffer, int bitposition, bool hasData, FrameArrival arrival)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x225CFE0", Offset = "0x225CFE0", VA = "0x225CFE0", Slot = "15")]
		public void OnPreSimulate(int frameId, int _currSubFrameId)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x225D17C", Offset = "0x225D17C", VA = "0x225D17C", Slot = "16")]
		public void OnPostSimulate(int frameId, int subFrameId, bool isNetTick)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x2256594", Offset = "0x2256594", VA = "0x2256594")]
		public SerializationFlags OnNetSerialize(int frameId, byte[] buffer, int bitposition, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x225C7FC", Offset = "0x225C7FC", VA = "0x225C7FC")]
		public void OnCaptureCurrentState(int frameId)
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x225C9EC", Offset = "0x225C9EC", VA = "0x225C9EC", Slot = "17")]
		public void OnQuantize(int frameId)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x225D32C", Offset = "0x225D32C", VA = "0x225D32C", Slot = "18")]
		public void OnIncrementFrame(int newFrameId, int newSubFrameId, int previousFrameId, int prevSubFrameId)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x2255660", Offset = "0x2255660", VA = "0x2255660")]
		public bool OnSnapshot(int localTargFrameId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x225CE9C", Offset = "0x225CE9C", VA = "0x225CE9C")]
		private void BroadcastReadyMaskChange(PackObjRecord p)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x2254594", Offset = "0x2254594", VA = "0x2254594")]
		public bool OnInterpolate(int localSnapFrameId, int localTargFrameId, float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x225D474", Offset = "0x225D474", VA = "0x225D474")]
		public NetObject()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public enum FrameContents
	{
		[Token(Token = "0x4001C0D")]
		Empty,
		[Token(Token = "0x4001C0E")]
		Partial,
		[Token(Token = "0x4001C0F")]
		NoChange,
		[Token(Token = "0x4001C10")]
		Extrapolated,
		[Token(Token = "0x4001C11")]
		Complete
	}
	[Token(Token = "0x2000549")]
	public abstract class FrameBase
	{
		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameId;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FrameContents content;

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x2879640", Offset = "0x2879640", VA = "0x2879640")]
		public FrameBase()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x2879648", Offset = "0x2879648", VA = "0x2879648")]
		public FrameBase(int frameId)
		{
		}

		[Token(Token = "0x6001A71")]
		public static TFrame Instantiate<TFrame>(int frameId) where TFrame : FrameBase
		{
			return null;
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x2879674", Offset = "0x2879674", VA = "0x2879674", Slot = "4")]
		public virtual void CopyFrom(FrameBase sourceFrame)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x2879694", Offset = "0x2879694", VA = "0x2879694", Slot = "5")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6001A74")]
		public static void PopulateFrames<TFrame>(TFrame[] frames) where TFrame : FrameBase
		{
		}
	}
	[Token(Token = "0x200054A")]
	public enum ReadyStateEnum
	{
		[Token(Token = "0x4001C15")]
		Unready,
		[Token(Token = "0x4001C16")]
		Ready,
		[Token(Token = "0x4001C17")]
		Disabled
	}
	[Token(Token = "0x200054B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB21844", Offset = "0xB21844")]
	public abstract class SyncObject : NetComponent, IOnEnable, IOnDisable, IApplyOrder
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int _applyOrder;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2934C", Offset = "0xB2934C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2934C", Offset = "0xB2934C")]
		[SerializeField]
		protected int keyframeRate;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB293C0", Offset = "0xB293C0")]
		protected bool useDeltas;

		[Token(Token = "0x4001C1B")]
		private const string ALWAYS_READY_TOOLTIP = "When true, the NetObject will not factor this SyncObj's ready state into firing IOnNetObjReady callbacks.";

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "ShowIfInterfaceAttribute", RVA = "0xB2941C", Offset = "0xB2941C")]
		public bool _alwaysReady;

		[Token(Token = "0x4001C1D")]
		private const string INCLUDE_SERIALIZATION_TOOLTIP = "When false, the NetObject will not serialize this SyncObj's state. This cannot be changed at runtime. Disable this component on the owner to disable sync at runtime instead.";

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29498", Offset = "0xB29498")]
		public bool serializeThis;

		[NonSerialized]
		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int syncObjIndex;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected ReadyStateEnum _readyState;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<SyncObject, ReadyStateEnum> onReadyCallbacks;

		[Token(Token = "0x17000321")]
		public virtual int ApplyOrder
		{
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0x27C9C0C", Offset = "0x27C9C0C", VA = "0x27C9C0C", Slot = "28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000322")]
		public bool UseDeltas
		{
			[Token(Token = "0x6001A76")]
			[Address(RVA = "0x27C9C14", Offset = "0x27C9C14", VA = "0x27C9C14", Slot = "29")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A77")]
			[Address(RVA = "0x27C9C1C", Offset = "0x27C9C1C", VA = "0x27C9C1C", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public virtual bool AlwaysReady
		{
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x27C9C2C", Offset = "0x27C9C2C", VA = "0x27C9C2C", Slot = "33")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000324")]
		public virtual bool IncludeInSerialization
		{
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x27C9C34", Offset = "0x27C9C34", VA = "0x27C9C34", Slot = "34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000325")]
		public bool SkipWhenEmpty
		{
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x27C9C3C", Offset = "0x27C9C3C", VA = "0x27C9C3C", Slot = "35")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000326")]
		public int SyncObjIndex
		{
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x27C9C44", Offset = "0x27C9C44", VA = "0x27C9C44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x27C9C4C", Offset = "0x27C9C4C", VA = "0x27C9C4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public ReadyStateEnum ReadyState
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x27C9C54", Offset = "0x27C9C54", VA = "0x27C9C54")]
			get
			{
				return default(ReadyStateEnum);
			}
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x27C9C5C", Offset = "0x27C9C5C", VA = "0x27C9C5C")]
			set
			{
			}
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x27C296C", Offset = "0x27C296C", VA = "0x27C296C", Slot = "31")]
		public bool IsKeyframe(int frameId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x27C9C28", Offset = "0x27C9C28", VA = "0x27C9C28", Slot = "32")]
		public virtual void ResetBuffers()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x27C9CFC", Offset = "0x27C9CFC", VA = "0x27C9CFC", Slot = "23")]
		public override void OnPostEnable()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x27C9D04", Offset = "0x27C9D04", VA = "0x27C9D04", Slot = "25")]
		public override void OnAuthorityChanged(bool isMine, bool controllerChanged)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x27C9E24", Offset = "0x27C9E24", VA = "0x27C9E24", Slot = "24")]
		public override void OnPostDisable()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x27C9E50", Offset = "0x27C9E50", VA = "0x27C9E50", Slot = "17")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x27C9E58", Offset = "0x27C9E58", VA = "0x27C9E58", Slot = "36")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x27C9E5C", Offset = "0x27C9E5C", VA = "0x27C9E5C")]
		protected int ConvertSecsToTicks(float seconds)
		{
			return default(int);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x27C9F00", Offset = "0x27C9F00", VA = "0x27C9F00")]
		protected SyncObject()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public abstract class SyncObject<TFrame> : SyncObject where TFrame : FrameBase
	{
		[NonSerialized]
		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TFrame[] frames;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TFrame prevFrame;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TFrame snapFrame;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TFrame targFrame;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TFrame offtickFrame;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool hadInitialSnapshot;

		[Token(Token = "0x17000328")]
		public virtual bool AllowInterpolation
		{
			[Token(Token = "0x6001A8F")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000329")]
		public virtual bool AllowReconstructionOfEmpty
		{
			[Token(Token = "0x6001A90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032A")]
		public virtual bool AllowReconstructionOfPartial
		{
			[Token(Token = "0x6001A91")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A88")]
		public override void OnAwake()
		{
		}

		[Token(Token = "0x6001A89")]
		public override void OnPostDisable()
		{
		}

		[Token(Token = "0x6001A8A")]
		public override void OnAuthorityChanged(bool isMine, bool controllerChanged)
		{
		}

		[Token(Token = "0x6001A8B")]
		protected virtual void PopulateFrames()
		{
		}

		[Token(Token = "0x6001A8C")]
		protected virtual void InitialCompleteSnapshot(TFrame frame)
		{
		}

		[Token(Token = "0x6001A8D")]
		public virtual bool OnSnapshot(int prevFrameId, int snapFrameId, int targFrameId, bool prevIsValid, bool snapIsValid, bool targIsValid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8E")]
		protected virtual void ApplySnapshot(TFrame snapframe, TFrame targframe, bool snapIsValid, bool targIsValid)
		{
		}

		[Token(Token = "0x6001A92")]
		protected virtual void ReconstructEmptyFrame()
		{
		}

		[Token(Token = "0x6001A93")]
		protected virtual void ReconstructIncompleteFrame()
		{
		}

		[Token(Token = "0x6001A94")]
		protected virtual void ConstructMissingFrame(TFrame prevFrame, TFrame snapframe, TFrame targframe)
		{
		}

		[Token(Token = "0x6001A95")]
		public virtual bool OnInterpolate(int snapFrameId, int targFrameId, float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A96")]
		protected virtual void InterpolateFrame(TFrame targframe, TFrame startframe, TFrame endframe, float t)
		{
		}

		[Token(Token = "0x6001A97")]
		protected virtual void ExtrapolateFrame(TFrame prevframe, TFrame snapframe, TFrame targframe)
		{
		}

		[Token(Token = "0x6001A98")]
		protected SyncObject()
		{
		}
	}
	[Token(Token = "0x200054D")]
	public class TickEngineSettings : SettingsScriptableObject<TickEngineSettings>
	{
		[Token(Token = "0x200054E")]
		public enum FrameCountEnum
		{
			[Token(Token = "0x4001C45")]
			FrameCount12 = 12,
			[Token(Token = "0x4001C46")]
			FrameCount30 = 30,
			[Token(Token = "0x4001C47")]
			FrameCount60 = 60,
			[Token(Token = "0x4001C48")]
			FrameCount120 = 120
		}

		[Token(Token = "0x200054F")]
		public enum BufferCorrection
		{
			[Token(Token = "0x4001C4A")]
			Manual,
			[Token(Token = "0x4001C4B")]
			Auto
		}

		[Token(Token = "0x2000550")]
		public enum LogInfoLevel
		{
			[Token(Token = "0x4001C4D")]
			All,
			[Token(Token = "0x4001C4E")]
			WarningsAndErrors,
			[Token(Token = "0x4001C4F")]
			ErrorsOnly,
			[Token(Token = "0x4001C50")]
			None
		}

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB294E4", Offset = "0xB294E4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB294E4", Offset = "0xB294E4")]
		public bool enableTickEngine;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29530", Offset = "0xB29530")]
		public bool sendWhenSolo;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29568", Offset = "0xB29568")]
		[SerializeField]
		private LogInfoLevel logLevel;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB295B4", Offset = "0xB295B4")]
		[SerializeField]
		[HideInInspector]
		private FrameCountEnum _frameCount;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int frameCount;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private BufferCorrection _bufferCorrection;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29648", Offset = "0xB29648")]
		[HideInInspector]
		private int _targetBufferSize;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int targetBufferSize;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB296A4", Offset = "0xB296A4")]
		private int _maxBufferSize;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int maxBufferSize;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29700", Offset = "0xB29700")]
		[SerializeField]
		[HideInInspector]
		private int _minBufferSize;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int minBufferSize;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2975C", Offset = "0xB2975C")]
		[SerializeField]
		private int _ticksBeforeGrow;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int ticksBeforeGrow;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB297B8", Offset = "0xB297B8")]
		private int _ticksBeforeShrink;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int ticksBeforeShrink;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29814", Offset = "0xB29814")]
		private int _sendEveryXTick;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int sendEveryXTick;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29870", Offset = "0xB29870")]
		public static int halfFrameCount;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int thirdFrameCount;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int quaterFrameCount;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int frameCountBits;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static float netTickInterval;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static float netTickIntervalInv;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static float targetBufferInterval;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static float secondsOfBuffer;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static float secondsOfHalfBuffer;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static float bufferTargSecs;

		[Token(Token = "0x1700032B")]
		public static LogInfoLevel LogLevel
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x2052CF8", Offset = "0x2052CF8", VA = "0x2052CF8")]
			get
			{
				return default(LogInfoLevel);
			}
		}

		[Token(Token = "0x1700032C")]
		public static int MaxKeyframes
		{
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0x2052D78", Offset = "0x2052D78", VA = "0x2052D78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x2052E10", Offset = "0x2052E10", VA = "0x2052E10")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB31BEC", Offset = "0xB31BEC")]
		public static void Bootstrap()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x2052E8C", Offset = "0x2052E8C", VA = "0x2052E8C")]
		private void CalculateBufferValues()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x20530AC", Offset = "0x20530AC", VA = "0x20530AC")]
		public TickEngineSettings()
		{
		}
	}
	[Token(Token = "0x2000551")]
	public class ConnectionTickOffsets
	{
		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int connId;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int originToLocalFrame;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int localToOriginFrame;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numOfSequentialFramesWithTooSmallBuffer;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numOfSequentialFramesWithTooLargeBuffer;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool frameArrivedTooLate;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool hadInitialSnapshot;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int advanceCount;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float[] frameArriveTime;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float[] frameTimeBeforeConsumption;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FastBitMask128 validFrameMask;

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x224C140", Offset = "0x224C140", VA = "0x224C140")]
		public int ConvertFrameLocalToOrigin(int localFrameId)
		{
			return default(int);
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x224C1C8", Offset = "0x224C1C8", VA = "0x224C1C8")]
		public int ConvertFrameOriginToLocal(int originFrameId)
		{
			return default(int);
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x224C250", Offset = "0x224C250", VA = "0x224C250")]
		public ConnectionTickOffsets(int connId, int originToLocal, int localToOrigin)
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x224C3B0", Offset = "0x224C3B0", VA = "0x224C3B0")]
		public void SnapshotAdvance()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x224C664", Offset = "0x224C664", VA = "0x224C664")]
		public void PostSnapshot()
		{
		}
	}
	[Token(Token = "0x2000552")]
	public class SimulateHealth : MonoBehaviour
	{
		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vitals vitals;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VitalNameType vitalType;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode AddHealthKey;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode RemHealthKey;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode DamagehKey;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float amount;

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x24A25BC", Offset = "0x24A25BC", VA = "0x24A25BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x24A2730", Offset = "0x24A2730", VA = "0x24A2730")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x24A27F4", Offset = "0x24A27F4", VA = "0x24A27F4")]
		public SimulateHealth()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public class AutoZoom : MonoBehaviour
	{
		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<Transform> watched;

		[Token(Token = "0x4001C63")]
		public const float MAX_FOV = 75f;

		[Token(Token = "0x4001C64")]
		public const float MIN_FOV = 15f;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB29884", Offset = "0xB29884")]
		[HideInInspector]
		public float window;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		[AttributeAttribute(Name = "ValueTypeAttribute", RVA = "0xB298C8", Offset = "0xB298C8")]
		public float panRate;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ValueTypeAttribute", RVA = "0xB2991C", Offset = "0xB2991C")]
		[HideInInspector]
		public float zoomRate;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera cam;

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x22C9FE4", Offset = "0x22C9FE4", VA = "0x22C9FE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x22CA10C", Offset = "0x22CA10C", VA = "0x22CA10C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x22CA21C", Offset = "0x22CA21C", VA = "0x22CA21C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x22CA4CC", Offset = "0x22CA4CC", VA = "0x22CA4CC")]
		public AutoZoom()
		{
		}
	}
	[Token(Token = "0x2000554")]
	public enum ContactType
	{
		[Token(Token = "0x4001C6A")]
		Undefined = 0,
		[Token(Token = "0x4001C6B")]
		Enter = 1,
		[Token(Token = "0x4001C6C")]
		Stay = 2,
		[Token(Token = "0x4001C6D")]
		Exit = 4,
		[Token(Token = "0x4001C6E")]
		Hitscan = 8
	}
	[Serializable]
	[Token(Token = "0x2000555")]
	public abstract class MaskLogic
	{
		[Token(Token = "0x2000556")]
		public enum Operator
		{
			[Token(Token = "0x4001C74")]
			EQUALS,
			[Token(Token = "0x4001C75")]
			AND,
			[Token(Token = "0x4001C76")]
			OR
		}

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Operator operation;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int stateMask;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int notMask;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int trueMask;

		[Token(Token = "0x1700032D")]
		protected abstract string[] EnumNames
		{
			[Token(Token = "0x6001AAC")]
			get;
		}

		[Token(Token = "0x1700032E")]
		protected abstract int[] EnumValues
		{
			[Token(Token = "0x6001AAD")]
			get;
		}

		[Token(Token = "0x1700032F")]
		protected abstract bool DefinesZero
		{
			[Token(Token = "0x6001AAE")]
			get;
		}

		[Token(Token = "0x17000330")]
		protected abstract int DefaultValue
		{
			[Token(Token = "0x6001AAF")]
			get;
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x21ABDA0", Offset = "0x21ABDA0", VA = "0x21ABDA0")]
		public MaskLogic()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x21ABDE0", Offset = "0x21ABDE0", VA = "0x21ABDE0")]
		public void RecalculateMasks()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x21ABE08", Offset = "0x21ABE08", VA = "0x21ABE08")]
		public bool Evaluate(int state)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000557")]
	[DisallowMultipleComponent]
	public class AutoDestroyUnspawned : MonoBehaviour
	{
		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onlyIfPrefab;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool hasPrefabParent;

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x22C8E6C", Offset = "0x22C8E6C", VA = "0x22C8E6C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB31C00", Offset = "0xB31C00")]
		public static void DestroyUnspawned()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x22C9000", Offset = "0x22C9000", VA = "0x22C9000")]
		public AutoDestroyUnspawned()
		{
		}
	}
	[Token(Token = "0x2000558")]
	public class AutoLayerByAuthority : MonoBehaviour
	{
		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int authorityLayer;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nonAuthorityLayer;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int projectileLayer;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool applyToChildren;

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x22C90A4", Offset = "0x22C90A4", VA = "0x22C90A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x22C9250", Offset = "0x22C9250", VA = "0x22C9250")]
		public void OnChangeAuthority(bool IsMine, bool serverIsActive)
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x22C9118", Offset = "0x22C9118", VA = "0x22C9118")]
		public void SetChildrenLayer(Transform t, int layer)
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x22C936C", Offset = "0x22C936C", VA = "0x22C936C")]
		public AutoLayerByAuthority()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class GenericSpawnPoint : MonoBehaviour
	{
		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29970", Offset = "0xB29970")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29970", Offset = "0xB29970")]
		public LayerMask layerMask;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blockedCheckRadius;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<GenericSpawnPoint> spawns;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lastPicked;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Collider[] reusable;

		[Token(Token = "0x17000331")]
		public bool IsBlocked
		{
			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0x23D02F4", Offset = "0x23D02F4", VA = "0x23D02F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x23D01CC", Offset = "0x23D01CC", VA = "0x23D01CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x23D0260", Offset = "0x23D0260", VA = "0x23D0260")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x23D03CC", Offset = "0x23D03CC", VA = "0x23D03CC")]
		public static Transform GetRandomSpawnPoint(bool avoidCollision = true)
		{
			return null;
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x23D0604", Offset = "0x23D0604", VA = "0x23D0604")]
		public static Transform GetNextSpawnPoint(bool avoidCollision = true)
		{
			return null;
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x23D0804", Offset = "0x23D0804", VA = "0x23D0804")]
		public static Transform GetSpawnPointFromValue(int value)
		{
			return null;
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x23D0908", Offset = "0x23D0908", VA = "0x23D0908")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x23D0958", Offset = "0x23D0958", VA = "0x23D0958")]
		public GenericSpawnPoint()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public interface IContactGroupsAssign
	{
		[Token(Token = "0x17000332")]
		int Mask
		{
			[Token(Token = "0x6001AC2")]
			get;
		}

		[Token(Token = "0x17000333")]
		bool ApplyToChildren
		{
			[Token(Token = "0x6001AC3")]
			get;
		}
	}
	[Token(Token = "0x200055B")]
	public interface IOnNetworkHit
	{
		[Token(Token = "0x6001AC4")]
		void OnNetworkHit(NetworkHits results);
	}
	[Token(Token = "0x200055C")]
	public interface IOnTerminate
	{
		[Token(Token = "0x6001AC5")]
		void OnTerminate();
	}
	[Token(Token = "0x200055D")]
	public struct NetworkHit
	{
		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly int netObjId;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly int hitMask;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int colliderId;

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x225DD54", Offset = "0x225DD54", VA = "0x225DD54")]
		public NetworkHit(int objectID, int hitMask, int colliderId)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x225DD60", Offset = "0x225DD60", VA = "0x225DD60")]
		public void Serialize(byte[] buffer, int bitposition, int bitsForHitmask, int bitsForColliderId)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x225DDE0", Offset = "0x225DDE0", VA = "0x225DDE0")]
		public static NetworkHit Deserialize(byte[] buffer, int bitposition, int bitsForHitmask, int bitsForColliderId)
		{
			return default(NetworkHit);
		}
	}
	[Token(Token = "0x200055E")]
	public class NetworkHits
	{
		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly List<NetworkHit> hits;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool nearestOnly;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nearestIndex;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bitsForContactGroupMask;

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x225DE60", Offset = "0x225DE60", VA = "0x225DE60")]
		public NetworkHits(bool nearestOnly, int bitsForContactGroupMask)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x225DF14", Offset = "0x225DF14", VA = "0x225DF14")]
		public void Reset(bool nearestOnly, int bitsForContactGroupMask)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x225DF90", Offset = "0x225DF90", VA = "0x225DF90")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x225DFF0", Offset = "0x225DFF0", VA = "0x225DFF0")]
		public SerializationFlags Serialize(byte[] buffer, int bitposition, int bitsForColliderId)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x225E1CC", Offset = "0x225E1CC", VA = "0x225E1CC")]
		public SerializationFlags Deserialize(byte[] buffer, int bitposition, int bitsForColliderId)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x225E314", Offset = "0x225E314", VA = "0x225E314", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace Photon.Pun.Simple.Pooling
{
	[Token(Token = "0x200055F")]
	public class Pool : MonoBehaviour
	{
		[Token(Token = "0x2000560")]
		private struct PoolItemDef
		{
			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject prefab;

			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int growBy;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type scriptToAdd;

			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0x2009958", Offset = "0x2009958", VA = "0x2009958")]
			public PoolItemDef(GameObject prefab, int growBy, Type scriptToAdd)
			{
			}
		}

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<GameObject, Stack<Pool>> pools;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<GameObject, PoolItemDef> poolItemDefs;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject origPrefab;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Rigidbody rb;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Component extraScript;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float deathClock;

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x20BBF28", Offset = "0x20BBF28", VA = "0x20BBF28")]
		public static void AddPrefabToPool(GameObject _prefab, int startingSize = 8, int _growBy = 8, [Optional] Type _scriptToAdd, bool tidyUp = false)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x20BC2C8", Offset = "0x20BC2C8", VA = "0x20BC2C8")]
		public static Pool Spawn(GameObject origPrefab, Transform t, float duration = 5f)
		{
			return null;
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x20BC69C", Offset = "0x20BC69C", VA = "0x20BC69C")]
		public static Pool Spawn(GameObject origPrefab, Vector3 pos, Quaternion rot, Vector3 scl, float duration = 5f)
		{
			return null;
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x20BC3B4", Offset = "0x20BC3B4", VA = "0x20BC3B4")]
		public static Pool Spawn(GameObject origPrefab, Vector3 pos, Quaternion rot, float duration = 5f)
		{
			return null;
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x20BC124", Offset = "0x20BC124", VA = "0x20BC124")]
		private static void GrowPool(GameObject _prefab, int growAmt = -1)
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x20BC7A0", Offset = "0x20BC7A0", VA = "0x20BC7A0")]
		private static void AddItemToPool(GameObject go, GameObject _prefab, PoolItemDef def)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x20BC9D8", Offset = "0x20BC9D8", VA = "0x20BC9D8")]
		private static void ReturnToPool(Pool p, GameObject _prefab)
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x20BC974", Offset = "0x20BC974", VA = "0x20BC974")]
		public void CacheComponents()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x20BCA94", Offset = "0x20BCA94", VA = "0x20BCA94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x20BCB00", Offset = "0x20BCB00", VA = "0x20BCB00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x20BCB70", Offset = "0x20BCB70", VA = "0x20BCB70")]
		public Pool()
		{
		}
	}
}
namespace Photon.Pun.Simple.GhostWorlds
{
	[Token(Token = "0x2000561")]
	public interface IHasNetworkID
	{
		[Token(Token = "0x17000334")]
		uint ViewID
		{
			[Token(Token = "0x6001ADC")]
			get;
		}
	}
}
namespace Photon.Pun.Simple.Debugging
{
	[Token(Token = "0x2000562")]
	public class UIConsole : MonoBehaviour
	{
		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxSize;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool logToDebug;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringBuilder strb;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static UIConsole single;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Text uitext;

		[Token(Token = "0x17000335")]
		public static UIConsole Single
		{
			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0x263D8B8", Offset = "0x263D8B8", VA = "0x263D8B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		public UIConsole __
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x263E780", Offset = "0x263E780", VA = "0x263E780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x263DD2C", Offset = "0x263DD2C", VA = "0x263DD2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x263DE18", Offset = "0x263DE18", VA = "0x263DE18")]
		public static void Log(string str)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x263E0A8", Offset = "0x263E0A8", VA = "0x263E0A8")]
		public UIConsole _(object str)
		{
			return null;
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x263E150", Offset = "0x263E150", VA = "0x263E150")]
		public UIConsole _(string str)
		{
			return null;
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x263E1E0", Offset = "0x263E1E0", VA = "0x263E1E0")]
		public UIConsole _(int str)
		{
			return null;
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x263E270", Offset = "0x263E270", VA = "0x263E270")]
		public UIConsole _(uint str)
		{
			return null;
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x263E300", Offset = "0x263E300", VA = "0x263E300")]
		public UIConsole _(byte str)
		{
			return null;
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x263E390", Offset = "0x263E390", VA = "0x263E390")]
		public UIConsole _(sbyte str)
		{
			return null;
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x263E420", Offset = "0x263E420", VA = "0x263E420")]
		public UIConsole _(short str)
		{
			return null;
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x263E4B0", Offset = "0x263E4B0", VA = "0x263E4B0")]
		public UIConsole _(ushort str)
		{
			return null;
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x263E540", Offset = "0x263E540", VA = "0x263E540")]
		public UIConsole _(long str)
		{
			return null;
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x263E5D0", Offset = "0x263E5D0", VA = "0x263E5D0")]
		public UIConsole _(ulong str)
		{
			return null;
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x263E660", Offset = "0x263E660", VA = "0x263E660")]
		public UIConsole _(float str)
		{
			return null;
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x263E6F0", Offset = "0x263E6F0", VA = "0x263E6F0")]
		public UIConsole _(double str)
		{
			return null;
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x263E818", Offset = "0x263E818", VA = "0x263E818")]
		public static void Refresh()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x263E97C", Offset = "0x263E97C", VA = "0x263E97C")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x263D9A0", Offset = "0x263D9A0", VA = "0x263D9A0")]
		public static UIConsole CreateGUI()
		{
			return null;
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x263EA98", Offset = "0x263EA98", VA = "0x263EA98")]
		public UIConsole()
		{
		}
	}
}
namespace Photon.Pun.Simple.ContactGroups
{
	[Token(Token = "0x2000563")]
	public class ContactGroupAssign : MonoBehaviour, IContactGroupsAssign, IContactGroupMask
	{
		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ContactGroupMaskSelector contactGroups;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29A00", Offset = "0xB29A00")]
		protected bool applyToChildren;

		[Token(Token = "0x17000337")]
		public bool ApplyToChildren
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x224CAA0", Offset = "0x224CAA0", VA = "0x224CAA0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000338")]
		public int Mask
		{
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0x224CAA8", Offset = "0x224CAA8", VA = "0x224CAA8", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x224CAB0", Offset = "0x224CAB0", VA = "0x224CAB0")]
		public ContactGroupAssign()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000564")]
	public struct ContactGroupMaskSelector : IContactGroupMask
	{
		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int mask;

		[Token(Token = "0x17000339")]
		public int Mask
		{
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x224CAC0", Offset = "0x224CAC0", VA = "0x224CAC0", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x224CAC8", Offset = "0x224CAC8", VA = "0x224CAC8")]
			set
			{
			}
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x224CAD0", Offset = "0x224CAD0", VA = "0x224CAD0")]
		public ContactGroupMaskSelector(int mask)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x224CAD8", Offset = "0x224CAD8", VA = "0x224CAD8")]
		public static implicit operator int(ContactGroupMaskSelector selector)
		{
			return default(int);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x224CADC", Offset = "0x224CADC", VA = "0x224CADC")]
		public static implicit operator ContactGroupMaskSelector(int mask)
		{
			return default(ContactGroupMaskSelector);
		}
	}
	[Serializable]
	[Token(Token = "0x2000565")]
	public struct ContactGroupSelector : IContactGroupMask
	{
		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x1700033A")]
		public int Mask
		{
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0x224CAE4", Offset = "0x224CAE4", VA = "0x224CAE4", Slot = "4")]
			get
			{
				return default(int);
			}
		}
	}
	[Token(Token = "0x2000566")]
	public class ContactGroupSettings : SettingsScriptableObject<ContactGroupSettings>
	{
		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool initialized;

		[Token(Token = "0x4001C9C")]
		public const string DEF_NAME = "Default";

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<string> contactGroupTags;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, int> rewindLayerTagToId;

		[NonSerialized]
		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int bitsForMask;

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x224CB04", Offset = "0x224CB04", VA = "0x224CB04")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB31C14", Offset = "0xB31C14")]
		private static void Bootstrap()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x224CB74", Offset = "0x224CB74", VA = "0x224CB74", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x224CF90", Offset = "0x224CF90", VA = "0x224CF90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31C28", Offset = "0xB31C28")]
		public static int FindClosestMatch(string n, int id)
		{
			return default(int);
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x224D09C", Offset = "0x224D09C", VA = "0x224D09C")]
		public ContactGroupSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000567")]
	public class ContactGroupValues
	{
		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public List<float> values;

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x224D22C", Offset = "0x224D22C", VA = "0x224D22C")]
		public ContactGroupValues()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public interface IContactGroupMask
	{
		[Token(Token = "0x1700033B")]
		int Mask
		{
			[Token(Token = "0x6001B00")]
			get;
		}
	}
}
namespace Photon.Pun.Simple.Internal
{
	[Serializable]
	[Token(Token = "0x2000569")]
	public class ParameterDefaults
	{
		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParameterInterpolation interpolateFloats;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ParameterInterpolation interpolateInts;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParameterExtrapolation extrapolateFloats;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ParameterExtrapolation extrapolateInts;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParameterExtrapolation extrapolateBools;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ParameterExtrapolation extrapolateTriggers;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool includeFloats;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool includeInts;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool includeBools;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool includeTriggers;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public SmartVar defaultFloat;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public SmartVar defaultInt;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public SmartVar defaultBool;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SmartVar defaultTrigger;

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x2014164", Offset = "0x2014164", VA = "0x2014164")]
		public ParameterDefaults()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056A")]
	public class ParameterSettings
	{
		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int hash;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AnimatorControllerParameterType paramType;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool include;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ParameterInterpolation interpolate;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParameterExtrapolation extrapolate;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public SmartVar defaultValue;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LiteFloatCrusher fcrusher;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LiteIntCrusher icrusher;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<int> rebuiltHashes;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<ParameterSettings> rebuiltSettings;

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x201422C", Offset = "0x201422C", VA = "0x201422C")]
		public ParameterSettings(int hash, ParameterDefaults defs, int paramCount, AnimatorControllerParameterType paramType)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x2014458", Offset = "0x2014458", VA = "0x2014458")]
		public static List<string> RebuildParamSettings(Animator a, ParameterSettings[] paraSettings, int paramCount, ParameterDefaults defs)
		{
			return null;
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x201473C", Offset = "0x201473C", VA = "0x201473C")]
		private static int GetHashIndex(ParameterSettings[] ps, int lookfor)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200056B")]
	public enum ParameterInterpolation
	{
		[Token(Token = "0x4001CBA")]
		Default,
		[Token(Token = "0x4001CBB")]
		Hold,
		[Token(Token = "0x4001CBC")]
		Lerp,
		[Token(Token = "0x4001CBD")]
		Advance
	}
	[Token(Token = "0x200056C")]
	public enum ParameterMissingHold
	{
		[Token(Token = "0x4001CBF")]
		Default,
		[Token(Token = "0x4001CC0")]
		Hold
	}
	[Token(Token = "0x200056D")]
	public enum ParameterExtrapolation
	{
		[Token(Token = "0x4001CC2")]
		Default,
		[Token(Token = "0x4001CC3")]
		Hold,
		[Token(Token = "0x4001CC4")]
		Lerp
	}
	[Token(Token = "0x200056E")]
	public static class NetObjColliderExt
	{
		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<Component> reusableComponents;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly List<Collider> reusableColliders;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly List<Collider2D> reusableColliders2D;

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x22596B0", Offset = "0x22596B0", VA = "0x22596B0")]
		public static void IndexColliders(this NetObject netObj)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x2259A40", Offset = "0x2259A40", VA = "0x2259A40")]
		public static int GetFirstChildCollider(this Transform transform, Component firstFoundCollider, bool countTriggers, bool countNonTriggers)
		{
			return default(int);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x2259E68", Offset = "0x2259E68", VA = "0x2259E68")]
		public static int CountChildCollider(this Transform transform, bool countTriggers, bool countNonTriggers)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200056F")]
	public class TickManager : IInRoomCallbacks
	{
		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<int, ConnectionTickOffsets> perConnOffsets;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly List<int> connections;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static TickManager single;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool needToSendInitialForNewConn;

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x20531A8", Offset = "0x20531A8", VA = "0x20531A8")]
		public static void Bootstrap()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x2053288", Offset = "0x2053288", VA = "0x2053288", Slot = "4")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x205351C", Offset = "0x205351C", VA = "0x205351C", Slot = "5")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x20536A8", Offset = "0x20536A8", VA = "0x20536A8", Slot = "6")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x20536AC", Offset = "0x20536AC", VA = "0x20536AC", Slot = "7")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x20536B0", Offset = "0x20536B0", VA = "0x20536B0", Slot = "8")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x20536B4", Offset = "0x20536B4", VA = "0x20536B4")]
		public static void PreSnapshot(int currentFrameId)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x20538CC", Offset = "0x20538CC", VA = "0x20538CC")]
		public static void PostSnapshot(int currentFrameId)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x2053A4C", Offset = "0x2053A4C", VA = "0x2053A4C")]
		public static ConnectionTickOffsets LogIncomingFrame(int connId, int originFrameId, [Out] FrameArrival arrival)
		{
			return null;
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x2053C9C", Offset = "0x2053C9C", VA = "0x2053C9C")]
		private static void LogNewConnection(int connId, int originFrameId, int frameCount, [Out] ConnectionTickOffsets offsets)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x20532F8", Offset = "0x20532F8", VA = "0x20532F8")]
		private static void AddConnection(int connId, [Optional] ConnectionTickOffsets offsets)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x2053588", Offset = "0x2053588", VA = "0x2053588")]
		public static void RemoveConnection(int connId)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x2053280", Offset = "0x2053280", VA = "0x2053280")]
		public TickManager()
		{
		}
	}
	[Token(Token = "0x2000570")]
	public static class CallbackUtilities
	{
		[Token(Token = "0x6001B18")]
		public static int RegisterInterface<T>(List<T> callbackList, object c, bool register) where T : class
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000571")]
	public static class NetMsgCallbacks
	{
		[Token(Token = "0x2000572")]
		public delegate void ByteBufferCallback(object conn, int connId, byte[] buffer);

		[Token(Token = "0x2000573")]
		private class CallbackLists
		{
			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ByteBufferCallback> bufferCallbacks;

			[Token(Token = "0x6001B26")]
			[Address(RVA = "0x1FFD308", Offset = "0x1FFD308", VA = "0x1FFD308")]
			public CallbackLists()
			{
			}
		}

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, CallbackLists> callbacks;

		[Token(Token = "0x4001CCD")]
		public const byte DEF_MSG_ID = 215;

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x2258660", Offset = "0x2258660", VA = "0x2258660")]
		private static void RegisterOnEventListener()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x2258738", Offset = "0x2258738", VA = "0x2258738")]
		public static void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x2258A38", Offset = "0x2258A38", VA = "0x2258A38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31C90", Offset = "0xB31C90")]
		public static void RegisterCallback(byte msgid, ByteBufferCallback callback, bool asServer)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x2253818", Offset = "0x2253818", VA = "0x2253818")]
		public static void RegisterCallback(ByteBufferCallback callback)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x2258CD8", Offset = "0x2258CD8", VA = "0x2258CD8")]
		public static void RegisterCallback(byte msgid, ByteBufferCallback callback)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x2258F78", Offset = "0x2258F78", VA = "0x2258F78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB31CC8", Offset = "0xB31CC8")]
		public static void UnregisterCallback(byte msgid, ByteBufferCallback callback, bool asServer)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x2259104", Offset = "0x2259104", VA = "0x2259104")]
		public static void UnregisterCallback(ByteBufferCallback callback)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x2259170", Offset = "0x2259170", VA = "0x2259170")]
		public static void UnregisterCallback(byte msgid, ByteBufferCallback callback)
		{
		}
	}
	[Token(Token = "0x2000574")]
	public enum ReceiveGroup
	{
		[Token(Token = "0x4001CD0")]
		Others,
		[Token(Token = "0x4001CD1")]
		All,
		[Token(Token = "0x4001CD2")]
		Master
	}
	[Token(Token = "0x2000575")]
	public static class NetMsgSends
	{
		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool unreliableCapable;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static byte[] reusableBuffer;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static byte[] reusableNetObjBuffer;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static HashSet<int> newPlayers;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static RaiseEventOptions[] opts;

		[Token(Token = "0x1700033C")]
		public static bool ReadyToSend
		{
			[Token(Token = "0x6001B29")]
			[Address(RVA = "0x2253E5C", Offset = "0x2253E5C", VA = "0x2253E5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033D")]
		public static bool AmActiveServer
		{
			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0x2259454", Offset = "0x2259454", VA = "0x2259454")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x2259390", Offset = "0x2259390", VA = "0x2259390")]
		private static void CacheSettings()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x2256248", Offset = "0x2256248", VA = "0x2256248")]
		public static void Send(this byte[] buffer, int bitposition, UnityEngine.Object refObj, SerializationFlags flags, bool flush = false)
		{
		}
	}
	[Token(Token = "0x2000576")]
	public static class SimpleDocsURLS
	{
		[Token(Token = "0x4001CD8")]
		public const string CORE_PATH = "https://doc.photonengine.com/en-us/pun/current/gameplay/simple/";

		[Token(Token = "0x4001CD9")]
		public const string OVERVIEW_PATH = "https://doc.photonengine.com/en-us/pun/current/gameplay/simple/simpleoverview";

		[Token(Token = "0x4001CDA")]
		public const string SYNCCOMPS_PATH = "https://doc.photonengine.com/en-us/pun/current/gameplay/simple/simplecoresynccomponents";

		[Token(Token = "0x4001CDB")]
		public const string SUBSYS_PATH = "https://doc.photonengine.com/en-us/pun/current/gameplay/simple/simplesubsystems";

		[Token(Token = "0x4001CDC")]
		public const string CORE_OBJS_PATH = "https://doc.photonengine.com/en-us/pun/current/gameplay/simple/simplecoreobjects";

		[Token(Token = "0x4001CDD")]
		public const string PACK_OBJS_PATH = "https://doc.photonengine.com/en-us/pun/current/gameplay/simple/simplepackobjects";

		[Token(Token = "0x4001CDE")]
		public const string CONTACT_SYSTEM = "https://doc.photonengine.com/en-us/pun/current/gameplay/simple/simplesubsystems#contact_system";

		[Token(Token = "0x4001CDF")]
		public const string MOUNT_SYSTEM = "https://doc.photonengine.com/en-us/pun/current/gameplay/simple/simplesubsystems#mount_system";

		[Token(Token = "0x4001CE0")]
		public const string TICK_SETTINGS = "https://doc.photonengine.com/en-us/pun/current/gameplay/simple/simplecoreobjects#tick_engine_settings";
	}
}
namespace Photon.Pun.UtilityScripts
{
	[Token(Token = "0x2000577")]
	public static class CopyComponent
	{
		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x22055DC", Offset = "0x22055DC", VA = "0x22055DC")]
		public static Component ComponentCopy(this Component original, GameObject destination)
		{
			return null;
		}

		[Token(Token = "0x6001B2D")]
		public static T GetCopyOf<T>(this T comp, T other) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001B2E")]
		public static T AddColliderCopy<T>(this GameObject go, T toAdd) where T : Collider
		{
			return null;
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x2000578")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x224B874", Offset = "0x224B874", VA = "0x224B874")]
		public void Start()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x224BA30", Offset = "0x224BA30", VA = "0x224BA30")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x224BB88", Offset = "0x224BB88", VA = "0x224BB88", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x224BB8C", Offset = "0x224BB8C", VA = "0x224BB8C", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x224BC24", Offset = "0x224BC24", VA = "0x224BC24", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x224BD2C", Offset = "0x224BD2C", VA = "0x224BD2C", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x224BD30", Offset = "0x224BD30", VA = "0x224BD30", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x224BD34", Offset = "0x224BD34", VA = "0x224BD34", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x224BE34", Offset = "0x224BE34", VA = "0x224BE34", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x224BE38", Offset = "0x224BE38", VA = "0x224BE38", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x224BE3C", Offset = "0x224BE3C", VA = "0x224BE3C", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x224BE40", Offset = "0x224BE40", VA = "0x224BE40", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x224BE44", Offset = "0x224BE44", VA = "0x224BE44", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x224BE48", Offset = "0x224BE48", VA = "0x224BE48", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x224BE4C", Offset = "0x224BE4C", VA = "0x224BE4C", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x224BE50", Offset = "0x224BE50", VA = "0x224BE50", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x224BEC4", Offset = "0x224BEC4", VA = "0x224BEC4", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x224BEC8", Offset = "0x224BEC8", VA = "0x224BEC8", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x224BF8C", Offset = "0x224BF8C", VA = "0x224BF8C", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x224BF90", Offset = "0x224BF90", VA = "0x224BF90")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x224C0C8", Offset = "0x224C0C8", VA = "0x224C0C8")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x2000579")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x286D440", Offset = "0x286D440", VA = "0x286D440")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x286D554", Offset = "0x286D554", VA = "0x286D554")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x200057A")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x2534F14", Offset = "0x2534F14", VA = "0x2534F14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x2534F94", Offset = "0x2534F94", VA = "0x2534F94")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x200057B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB218BC", Offset = "0xB218BC")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x2051034", Offset = "0x2051034", VA = "0x2051034")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x2051098", Offset = "0x2051098", VA = "0x2051098")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x20510CC", Offset = "0x20510CC", VA = "0x20510CC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x2051100", Offset = "0x2051100", VA = "0x2051100", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x20511C8", Offset = "0x20511C8", VA = "0x20511C8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x2051290", Offset = "0x2051290", VA = "0x2051290")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB21924", Offset = "0xB21924")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x20512D4", Offset = "0x20512D4", VA = "0x20512D4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x2051448", Offset = "0x2051448", VA = "0x2051448")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x20513E0", Offset = "0x20513E0", VA = "0x20513E0")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x205150C", Offset = "0x205150C", VA = "0x205150C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x2051584", Offset = "0x2051584", VA = "0x2051584", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x20515F8", Offset = "0x20515F8", VA = "0x20515F8")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x200057D")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001CF0")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001CF1")]
		public const string Tab = "    ";

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x22CA584", Offset = "0x22CA584", VA = "0x22CA584")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB31D40", Offset = "0xB31D40")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB31D40", Offset = "0xB31D40")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x22CA61C", Offset = "0x22CA61C", VA = "0x22CA61C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB31DA0", Offset = "0xB31DA0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB31DA0", Offset = "0xB31DA0")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x22CA6C4", Offset = "0x22CA6C4", VA = "0x22CA6C4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB31E00", Offset = "0xB31E00")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB31E00", Offset = "0xB31E00")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x22CA75C", Offset = "0x22CA75C", VA = "0x22CA75C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB31E60", Offset = "0xB31E60")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB31E60", Offset = "0xB31E60")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x22CA7F4", Offset = "0x22CA7F4", VA = "0x22CA7F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB31EC0", Offset = "0xB31EC0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB31EC0", Offset = "0xB31EC0")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x200057E")]
	public class CAPI
	{
		[Token(Token = "0x200057F")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000580")]
		public enum Result
		{
			[Token(Token = "0x4001CFD")]
			Success = 0,
			[Token(Token = "0x4001CFE")]
			Failure = -1000,
			[Token(Token = "0x4001CFF")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001D00")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001D01")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001D02")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001D03")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001D04")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001D05")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000581")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly System.Version version;

			[PreserveSig]
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0x1FF9DC8", Offset = "0x1FF9DC8", VA = "0x1FF9DC8")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001CF2")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001CFA")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static System.Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x22CF928", Offset = "0x22CF928", VA = "0x22CF928")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x22CF9B8", Offset = "0x22CF9B8", VA = "0x22CF9B8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x22CFBEC", Offset = "0x22CFBEC", VA = "0x22CFBEC")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x22CFCD8", Offset = "0x22CFCD8", VA = "0x22CFCD8")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x22CFD48", Offset = "0x22CFD48", VA = "0x22CFD48")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x22CFDBC", Offset = "0x22CFDBC", VA = "0x22CFDBC")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x22CFE3C", Offset = "0x22CFE3C", VA = "0x22CFE3C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x22CFF88", Offset = "0x22CFF88", VA = "0x22CFF88")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x22D0008", Offset = "0x22D0008", VA = "0x22D0008")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x22D0154", Offset = "0x22D0154", VA = "0x22D0154")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x22D01D4", Offset = "0x22D01D4", VA = "0x22D01D4")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x22D0254", Offset = "0x22D0254", VA = "0x22D0254")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x22D02D4", Offset = "0x22D02D4", VA = "0x22D02D4")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x22D0354", Offset = "0x22D0354", VA = "0x22D0354")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x22D03E4", Offset = "0x22D03E4", VA = "0x22D03E4")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x22D0474", Offset = "0x22D0474", VA = "0x22D0474")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x22D0504", Offset = "0x22D0504", VA = "0x22D0504")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x22D0584", Offset = "0x22D0584", VA = "0x22D0584")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x22D0604", Offset = "0x22D0604", VA = "0x22D0604")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x22D0694", Offset = "0x22D0694", VA = "0x22D0694")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x22D0724", Offset = "0x22D0724", VA = "0x22D0724")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x22D07B4", Offset = "0x22D07B4", VA = "0x22D07B4")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x22D0834", Offset = "0x22D0834", VA = "0x22D0834")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x22D08D4", Offset = "0x22D08D4", VA = "0x22D08D4")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x22D0950", Offset = "0x22D0950", VA = "0x22D0950")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x22D09F0", Offset = "0x22D09F0", VA = "0x22D09F0")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x22D0AB0", Offset = "0x22D0AB0", VA = "0x22D0AB0")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x22D0B78", Offset = "0x22D0B78", VA = "0x22D0B78")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x22D0C08", Offset = "0x22D0C08", VA = "0x22D0C08")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x22D0C98", Offset = "0x22D0C98", VA = "0x22D0C98")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x22D0D28", Offset = "0x22D0D28", VA = "0x22D0D28")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x22D0DB8", Offset = "0x22D0DB8", VA = "0x22D0DB8")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x22D0E48", Offset = "0x22D0E48", VA = "0x22D0E48")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x22D0EC8", Offset = "0x22D0EC8", VA = "0x22D0EC8")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x22D0FE4", Offset = "0x22D0FE4", VA = "0x22D0FE4")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x22D0F54", Offset = "0x22D0F54", VA = "0x22D0F54")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x22D1208", Offset = "0x22D1208", VA = "0x22D1208")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x22D1380", Offset = "0x22D1380", VA = "0x22D1380")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001B7F")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x22D1400", Offset = "0x22D1400", VA = "0x22D1400")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x22D16B0", Offset = "0x22D16B0", VA = "0x22D16B0")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x22D1730", Offset = "0x22D1730", VA = "0x22D1730")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x22D18A8", Offset = "0x22D18A8", VA = "0x22D18A8")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x22D1928", Offset = "0x22D1928", VA = "0x22D1928")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x22D1AA0", Offset = "0x22D1AA0", VA = "0x22D1AA0")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x22D1B20", Offset = "0x22D1B20", VA = "0x22D1B20")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x22D1C98", Offset = "0x22D1C98", VA = "0x22D1C98")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x22D1D18", Offset = "0x22D1D18", VA = "0x22D1D18")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x22D1E90", Offset = "0x22D1E90", VA = "0x22D1E90")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x22D1F10", Offset = "0x22D1F10", VA = "0x22D1F10")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x22D1F90", Offset = "0x22D1F90", VA = "0x22D1F90")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x22D2028", Offset = "0x22D2028", VA = "0x22D2028")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x22D20A8", Offset = "0x22D20A8", VA = "0x22D20A8")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x22D2288", Offset = "0x22D2288", VA = "0x22D2288")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x22D23E8", Offset = "0x22D23E8", VA = "0x22D23E8")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x22D2208", Offset = "0x22D2208", VA = "0x22D2208")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x22D2468", Offset = "0x22D2468", VA = "0x22D2468")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x22D24E8", Offset = "0x22D24E8", VA = "0x22D24E8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x22D2578", Offset = "0x22D2578", VA = "0x22D2578")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x22D25F8", Offset = "0x22D25F8", VA = "0x22D25F8")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x22D2688", Offset = "0x22D2688", VA = "0x22D2688")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x22D2708", Offset = "0x22D2708", VA = "0x22D2708")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x22D2788", Offset = "0x22D2788", VA = "0x22D2788")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x22D2A14", Offset = "0x22D2A14", VA = "0x22D2A14")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x22D2AA4", Offset = "0x22D2AA4", VA = "0x22D2AA4")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ulong textureID, Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x22D2CD4", Offset = "0x22D2CD4", VA = "0x22D2CD4")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x22D2D6C", Offset = "0x22D2D6C", VA = "0x22D2D6C")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x22D2EC4", Offset = "0x22D2EC4", VA = "0x22D2EC4")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x22D2F44", Offset = "0x22D2F44", VA = "0x22D2F44")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x22D2FC4", Offset = "0x22D2FC4", VA = "0x22D2FC4")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x22D3120", Offset = "0x22D3120", VA = "0x22D3120")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x22D31A0", Offset = "0x22D31A0", VA = "0x22D31A0")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x22D32FC", Offset = "0x22D32FC", VA = "0x22D32FC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x22D337C", Offset = "0x22D337C", VA = "0x22D337C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x22D340C", Offset = "0x22D340C", VA = "0x22D340C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x22D349C", Offset = "0x22D349C", VA = "0x22D349C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x22D352C", Offset = "0x22D352C", VA = "0x22D352C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x22D35AC", Offset = "0x22D35AC", VA = "0x22D35AC")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x22D3634", Offset = "0x22D3634", VA = "0x22D3634")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x22D36BC", Offset = "0x22D36BC", VA = "0x22D36BC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x22D373C", Offset = "0x22D373C", VA = "0x22D373C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x22D37BC", Offset = "0x22D37BC", VA = "0x22D37BC")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x22D3870", Offset = "0x22D3870", VA = "0x22D3870")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x22D3900", Offset = "0x22D3900", VA = "0x22D3900")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x22D3990", Offset = "0x22D3990", VA = "0x22D3990")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x22D3A10", Offset = "0x22D3A10", VA = "0x22D3A10")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x22D3A90", Offset = "0x22D3A90", VA = "0x22D3A90")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x22D3B10", Offset = "0x22D3B10", VA = "0x22D3B10")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x22D3BA8", Offset = "0x22D3BA8", VA = "0x22D3BA8")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x22D3C38", Offset = "0x22D3C38", VA = "0x22D3C38")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x22D3CC8", Offset = "0x22D3CC8", VA = "0x22D3CC8")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x22D3D58", Offset = "0x22D3D58", VA = "0x22D3D58")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x22D3DF0", Offset = "0x22D3DF0", VA = "0x22D3DF0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x22D3E88", Offset = "0x22D3E88", VA = "0x22D3E88")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x22D3F08", Offset = "0x22D3F08", VA = "0x22D3F08")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x22D3F88", Offset = "0x22D3F88", VA = "0x22D3F88")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x22D40E4", Offset = "0x22D40E4", VA = "0x22D40E4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x22D4164", Offset = "0x22D4164", VA = "0x22D4164")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x22D42C0", Offset = "0x22D42C0", VA = "0x22D42C0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x22D4340", Offset = "0x22D4340", VA = "0x22D4340")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x22D447C", Offset = "0x22D447C", VA = "0x22D447C")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x22D44FC", Offset = "0x22D44FC", VA = "0x22D44FC")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x22D46D8", Offset = "0x22D46D8", VA = "0x22D46D8")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x22D49B8", Offset = "0x22D49B8", VA = "0x22D49B8")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x22D4658", Offset = "0x22D4658", VA = "0x22D4658")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x22D4A48", Offset = "0x22D4A48", VA = "0x22D4A48")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x22D4AC8", Offset = "0x22D4AC8", VA = "0x22D4AC8")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x22D4B58", Offset = "0x22D4B58", VA = "0x22D4B58")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x22D4BE8", Offset = "0x22D4BE8", VA = "0x22D4BE8")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x22D4C78", Offset = "0x22D4C78", VA = "0x22D4C78")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x22D4D18", Offset = "0x22D4D18", VA = "0x22D4D18")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x22D4DB8", Offset = "0x22D4DB8", VA = "0x22D4DB8")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x22D4E58", Offset = "0x22D4E58", VA = "0x22D4E58")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x22D4ED8", Offset = "0x22D4ED8", VA = "0x22D4ED8")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x22D4F58", Offset = "0x22D4F58", VA = "0x22D4F58")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x22D4FD8", Offset = "0x22D4FD8", VA = "0x22D4FD8")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x22D5058", Offset = "0x22D5058", VA = "0x22D5058")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x22D50D8", Offset = "0x22D50D8", VA = "0x22D50D8")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x22D5200", Offset = "0x22D5200", VA = "0x22D5200")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x22D5298", Offset = "0x22D5298", VA = "0x22D5298")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x22D5318", Offset = "0x22D5318", VA = "0x22D5318")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x22D5380", Offset = "0x22D5380", VA = "0x22D5380")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x22D54D8", Offset = "0x22D54D8", VA = "0x22D54D8")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x22D5568", Offset = "0x22D5568", VA = "0x22D5568")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x22D56C0", Offset = "0x22D56C0", VA = "0x22D56C0")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x22D5750", Offset = "0x22D5750", VA = "0x22D5750")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x22D57F0", Offset = "0x22D57F0", VA = "0x22D57F0")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x22D5BC0", Offset = "0x22D5BC0", VA = "0x22D5BC0")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x22D5C40", Offset = "0x22D5C40", VA = "0x22D5C40")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x22D5CD8", Offset = "0x22D5CD8", VA = "0x22D5CD8")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x22D6538", Offset = "0x22D6538", VA = "0x22D6538")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x22D65B8", Offset = "0x22D65B8", VA = "0x22D65B8")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x22CF8BC", Offset = "0x22CF8BC", VA = "0x22CF8BC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB31F20", Offset = "0xB31F20")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x22D6650", Offset = "0x22D6650", VA = "0x22D6650")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x22D66D4", Offset = "0x22D66D4", VA = "0x22D66D4")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x22D6754", Offset = "0x22D6754", VA = "0x22D6754")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x22D67D4", Offset = "0x22D67D4", VA = "0x22D67D4")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x22D6854", Offset = "0x22D6854", VA = "0x22D6854")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x22D71F0", Offset = "0x22D71F0", VA = "0x22D71F0")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x22D7270", Offset = "0x22D7270", VA = "0x22D7270")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x22D76AC", Offset = "0x22D76AC", VA = "0x22D76AC")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x22D7614", Offset = "0x22D7614", VA = "0x22D7614")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x22D7720", Offset = "0x22D7720", VA = "0x22D7720")]
		public CAPI()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x2000582")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB2198C", Offset = "0xB2198C")]
	public class GradientUI : BaseMeshEffect
	{
		[Token(Token = "0x2000583")]
		public enum Type
		{
			[Token(Token = "0x4001D0C")]
			Horizontal,
			[Token(Token = "0x4001D0D")]
			Vertical
		}

		[Token(Token = "0x2000584")]
		public enum Blend
		{
			[Token(Token = "0x4001D0F")]
			Override,
			[Token(Token = "0x4001D10")]
			Add,
			[Token(Token = "0x4001D11")]
			Multiply
		}

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Type _gradientType;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Blend _blendMode;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB29AAC", Offset = "0xB29AAC")]
		[SerializeField]
		private float _offset;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Gradient _effectGradient;

		[Token(Token = "0x1700033E")]
		public Blend BlendMode
		{
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0x23D0CFC", Offset = "0x23D0CFC", VA = "0x23D0CFC")]
			get
			{
				return default(Blend);
			}
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0x23D0D04", Offset = "0x23D0D04", VA = "0x23D0D04")]
			set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public Gradient EffectGradient
		{
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x23D0D0C", Offset = "0x23D0D0C", VA = "0x23D0D0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0x23D0D14", Offset = "0x23D0D14", VA = "0x23D0D14")]
			set
			{
			}
		}

		[Token(Token = "0x17000340")]
		public Type GradientType
		{
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x23D0D1C", Offset = "0x23D0D1C", VA = "0x23D0D1C")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0x23D0D24", Offset = "0x23D0D24", VA = "0x23D0D24")]
			set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public float Offset
		{
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0x23D0D2C", Offset = "0x23D0D2C", VA = "0x23D0D2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0x23D0D34", Offset = "0x23D0D34", VA = "0x23D0D34")]
			set
			{
			}
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x23D0D3C", Offset = "0x23D0D3C", VA = "0x23D0D3C", Slot = "20")]
		public override void ModifyMesh(VertexHelper helper)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x23D11E4", Offset = "0x23D11E4", VA = "0x23D11E4")]
		private Color BlendColor(Color colorA, Color colorB)
		{
			return default(Color);
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x23D123C", Offset = "0x23D123C", VA = "0x23D123C")]
		public GradientUI()
		{
		}
	}
	[Token(Token = "0x2000585")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB219C4", Offset = "0xB219C4")]
	public class GradientUI1 : BaseMeshEffect
	{
		[Token(Token = "0x2000586")]
		public enum Type
		{
			[Token(Token = "0x4001D17")]
			Horizontal,
			[Token(Token = "0x4001D18")]
			Vertical
		}

		[Token(Token = "0x2000587")]
		public enum Blend
		{
			[Token(Token = "0x4001D1A")]
			Override,
			[Token(Token = "0x4001D1B")]
			Add,
			[Token(Token = "0x4001D1C")]
			Multiply
		}

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Type _gradientType;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Blend _blendMode;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB29B1C", Offset = "0xB29B1C")]
		[SerializeField]
		private float _offset;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Gradient _effectGradient;

		[Token(Token = "0x17000342")]
		public Blend BlendMode
		{
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0x23D13A8", Offset = "0x23D13A8", VA = "0x23D13A8")]
			get
			{
				return default(Blend);
			}
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x23D13B0", Offset = "0x23D13B0", VA = "0x23D13B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public Gradient EffectGradient
		{
			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0x23D13B8", Offset = "0x23D13B8", VA = "0x23D13B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0x23D13C0", Offset = "0x23D13C0", VA = "0x23D13C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public Type GradientType
		{
			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0x23D13C8", Offset = "0x23D13C8", VA = "0x23D13C8")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0x23D13D0", Offset = "0x23D13D0", VA = "0x23D13D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public float Offset
		{
			[Token(Token = "0x6001C00")]
			[Address(RVA = "0x23D13D8", Offset = "0x23D13D8", VA = "0x23D13D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0x23D13E0", Offset = "0x23D13E0", VA = "0x23D13E0")]
			set
			{
			}
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x23D13E8", Offset = "0x23D13E8", VA = "0x23D13E8", Slot = "20")]
		public override void ModifyMesh(VertexHelper helper)
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x23D1890", Offset = "0x23D1890", VA = "0x23D1890")]
		private Color BlendColor(Color colorA, Color colorB)
		{
			return default(Color);
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x23D18E8", Offset = "0x23D18E8", VA = "0x23D18E8")]
		public GradientUI1()
		{
		}
	}
}
namespace UnityEngine.VFX.Utility
{
	[Token(Token = "0x2000588")]
	[AttributeAttribute(Name = "VFXBinderAttribute", RVA = "0xB219FC", Offset = "0xB219FC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB219FC", Offset = "0xB219FC")]
	internal class VFXPositionBinderCUSTOM : VFXBinderBase
	{
		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "VFXPropertyBindingAttribute", RVA = "0xB29B6C", Offset = "0xB29B6C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB29B6C", Offset = "0xB29B6C")]
		protected ExposedProperty m_Property;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Target;

		[Token(Token = "0x17000346")]
		public string Property
		{
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x2645818", Offset = "0x2645818", VA = "0x2645818")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0x2645838", Offset = "0x2645838", VA = "0x2645838")]
			set
			{
			}
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x264586C", Offset = "0x264586C", VA = "0x264586C", Slot = "4")]
		public override bool IsValid(VisualEffect component)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x2645920", Offset = "0x2645920", VA = "0x2645920", Slot = "9")]
		public override void UpdateBinding(VisualEffect component)
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x2645984", Offset = "0x2645984", VA = "0x2645984", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x2645A58", Offset = "0x2645A58", VA = "0x2645A58")]
		public VFXPositionBinderCUSTOM()
		{
		}
	}
	[Token(Token = "0x2000589")]
	[AttributeAttribute(Name = "VFXBinderAttribute", RVA = "0xB21A5C", Offset = "0xB21A5C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB21A5C", Offset = "0xB21A5C")]
	public class VFXTransformBinderCUSTOM : VFXBinderBase
	{
		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB29C44", Offset = "0xB29C44")]
		[SerializeField]
		[AttributeAttribute(Name = "VFXPropertyBindingAttribute", RVA = "0xB29C44", Offset = "0xB29C44")]
		protected ExposedProperty m_Property;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Target;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ExposedProperty Position;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ExposedProperty Angles;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ExposedProperty Scale;

		[Token(Token = "0x17000347")]
		public string Property
		{
			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0x2645AC8", Offset = "0x2645AC8", VA = "0x2645AC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0x2645AE8", Offset = "0x2645AE8", VA = "0x2645AE8")]
			set
			{
			}
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x2645C2C", Offset = "0x2645C2C", VA = "0x2645C2C", Slot = "7")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x2645C54", Offset = "0x2645C54", VA = "0x2645C54")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x2645B24", Offset = "0x2645B24", VA = "0x2645B24")]
		private void UpdateSubProperties()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x2645C58", Offset = "0x2645C58", VA = "0x2645C58", Slot = "4")]
		public override bool IsValid(VisualEffect component)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x2645D4C", Offset = "0x2645D4C", VA = "0x2645D4C", Slot = "9")]
		public override void UpdateBinding(VisualEffect component)
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x2645E38", Offset = "0x2645E38", VA = "0x2645E38", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x2645F0C", Offset = "0x2645F0C", VA = "0x2645F0C")]
		public VFXTransformBinderCUSTOM()
		{
		}
	}
}
namespace UnityEngine.Rendering.Universal
{
	[Token(Token = "0x200058A")]
	public class MobileBloomUrp : ScriptableRendererFeature
	{
		[Serializable]
		[Token(Token = "0x200058B")]
		public class MobileBloomSettings
		{
			[Token(Token = "0x4001D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderPassEvent Event;

			[Token(Token = "0x4001D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material blitMaterial;

			[Token(Token = "0x4001D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB29D00", Offset = "0xB29D00")]
			public int NumberOfPasses;

			[Token(Token = "0x4001D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB29D18", Offset = "0xB29D18")]
			public float BlurAmount;

			[Token(Token = "0x4001D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color BloomColor;

			[Token(Token = "0x4001D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB29D30", Offset = "0xB29D30")]
			public float BloomAmount;

			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB29D48", Offset = "0xB29D48")]
			public float BloomThreshold;

			[Token(Token = "0x6001C17")]
			[Address(RVA = "0x1FFBC14", Offset = "0x1FFBC14", VA = "0x1FFBC14")]
			public MobileBloomSettings()
			{
			}
		}

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MobileBloomSettings settings;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MobileBloomUrpPass mobilePostProcessLwrpPass;

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x21BA7B8", Offset = "0x21BA7B8", VA = "0x21BA7B8", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x21BAA94", Offset = "0x21BAA94", VA = "0x21BAA94", Slot = "6")]
		public override void AddRenderPasses(ScriptableRenderer renderer, RenderingData renderingData)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x21BAB1C", Offset = "0x21BAB1C", VA = "0x21BAB1C")]
		public MobileBloomUrp()
		{
		}
	}
	[Token(Token = "0x200058C")]
	internal class MobileBloomUrpPass : ScriptableRenderPass
	{
		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material material;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTargetIdentifier source;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTargetIdentifier bloomTemp;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RenderTargetIdentifier bloomTemp1;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTargetIdentifier bloomTex;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RenderTargetIdentifier tempCopy;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private readonly string tag;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private readonly int numberOfPasses;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private readonly float blurAmount;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private readonly Color bloomColor;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private readonly float bloomAmount;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private readonly float bloomThreshold;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int blurAmountString;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int bloomColorString;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int blAmountString;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int thresholdString;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int blurTempString;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int blurTemp1String;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int blurTexString;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int tempCopyString;

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x21BA8B0", Offset = "0x21BA8B0", VA = "0x21BA8B0")]
		public MobileBloomUrpPass(RenderPassEvent renderPassEvent, Material material, int numberOfPasses, float blurAmount, Color bloomColor, float bloomAmount, float bloomThreshold, string tag)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x21BAB94", Offset = "0x21BAB94", VA = "0x21BAB94")]
		public void Setup(RenderTargetIdentifier source)
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x21BABAC", Offset = "0x21BABAC", VA = "0x21BABAC", Slot = "9")]
		public override void Execute(ScriptableRenderContext context, RenderingData renderingData)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x21BB678", Offset = "0x21BB678", VA = "0x21BB678", Slot = "4")]
		public override void FrameCleanup(CommandBuffer cmd)
		{
		}
	}
}
namespace Mirror.OculusP2P
{
	[Token(Token = "0x200058D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB21ABC", Offset = "0xB21ABC")]
	public class BidirectionalDictionary<T1, T2> : IEnumerable
	{
		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<T1, T2> t1ToT2Dict;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<T2, T1> t2ToT1Dict;

		[Token(Token = "0x17000348")]
		public IEnumerable<T1> FirstTypes
		{
			[Token(Token = "0x6001C1D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000349")]
		public IEnumerable<T2> SecondTypes
		{
			[Token(Token = "0x6001C1E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		public int Count
		{
			[Token(Token = "0x6001C20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034B")]
		public T1 Item
		{
			[Token(Token = "0x6001C2B")]
			get
			{
				return (T1)null;
			}
			[Token(Token = "0x6001C2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		public T2 Item
		{
			[Token(Token = "0x6001C2D")]
			get
			{
				return (T2)null;
			}
			[Token(Token = "0x6001C2E")]
			set
			{
			}
		}

		[Token(Token = "0x6001C1F")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001C21")]
		public void Add(T1 key, T2 value)
		{
		}

		[Token(Token = "0x6001C22")]
		public void Add(T2 key, T1 value)
		{
		}

		[Token(Token = "0x6001C23")]
		public T2 Get(T1 key)
		{
			return (T2)null;
		}

		[Token(Token = "0x6001C24")]
		public T1 Get(T2 key)
		{
			return (T1)null;
		}

		[Token(Token = "0x6001C25")]
		public bool TryGetValue(T1 key, [Out] T2 value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C26")]
		public bool TryGetValue(T2 key, [Out] T1 value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C27")]
		public bool Contains(T1 key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C28")]
		public bool Contains(T2 key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C29")]
		public void Remove(T1 key)
		{
		}

		[Token(Token = "0x6001C2A")]
		public void Remove(T2 key)
		{
		}

		[Token(Token = "0x6001C2F")]
		public BidirectionalDictionary()
		{
		}
	}
	[Token(Token = "0x200058E")]
	public interface IClient
	{
		[Token(Token = "0x1700034D")]
		bool Connected
		{
			[Token(Token = "0x6001C30")]
			get;
		}

		[Token(Token = "0x1700034E")]
		bool Error
		{
			[Token(Token = "0x6001C31")]
			get;
		}

		[Token(Token = "0x6001C32")]
		void ReceiveData();

		[Token(Token = "0x6001C33")]
		void Disconnect();

		[Token(Token = "0x6001C34")]
		void FlushData();

		[Token(Token = "0x6001C35")]
		void Send(byte[] data, int channelId);
	}
	[Token(Token = "0x200058F")]
	public interface IServer
	{
		[Token(Token = "0x6001C36")]
		void ReceiveData();

		[Token(Token = "0x6001C37")]
		void Send(int connectionId, byte[] data, int channelId);

		[Token(Token = "0x6001C38")]
		bool Disconnect(int connectionId);

		[Token(Token = "0x6001C39")]
		void FlushData();

		[Token(Token = "0x6001C3A")]
		string ServerGetClientAddress(int connectionId);

		[Token(Token = "0x6001C3B")]
		void Shutdown();
	}
	[Token(Token = "0x2000590")]
	public class OculusClient : OculusCommon, IClient
	{
		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21AF4", Offset = "0xB21AF4")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OculusTransport transport;

			[Token(Token = "0x6001C54")]
			[Address(RVA = "0x1FFE290", Offset = "0x1FFE290", VA = "0x1FFE290")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001C55")]
			[Address(RVA = "0x1FFE298", Offset = "0x1FFE298", VA = "0x1FFE298")]
			internal void <CreateClient>b__0()
			{
			}

			[Token(Token = "0x6001C56")]
			[Address(RVA = "0x1FFE2C0", Offset = "0x1FFE2C0", VA = "0x1FFE2C0")]
			internal void <CreateClient>b__1()
			{
			}

			[Token(Token = "0x6001C57")]
			[Address(RVA = "0x1FFE2E8", Offset = "0x1FFE2E8", VA = "0x1FFE2E8")]
			internal void <CreateClient>b__2(byte[] data, int ch)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21B04", Offset = "0xB21B04")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Message<NetworkingPeer>.Callback <>9__25_0;

			[Token(Token = "0x6001C59")]
			[Address(RVA = "0x1FFE284", Offset = "0x1FFE284", VA = "0x1FFE284")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0x1FFE28C", Offset = "0x1FFE28C", VA = "0x1FFE28C")]
			internal void <Dispose>b__25_0(Message<NetworkingPeer> _)
			{
			}
		}

		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21B14", Offset = "0xB21B14")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte[] data;

			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int ch;

			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OculusClient <>4__this;

			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0x1FFE394", Offset = "0x1FFE394", VA = "0x1FFE394")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0x1FFE39C", Offset = "0x1FFE39C", VA = "0x1FFE39C")]
			internal void <ReceiveData>b__0()
			{
			}
		}

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D60", Offset = "0xB29D60")]
		private bool <Connected>k__BackingField;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D70", Offset = "0xB29D70")]
		private bool <Error>k__BackingField;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TimeSpan ConnectionTimeout;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ulong HostID;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Action> BufferedData;

		[Token(Token = "0x1700034F")]
		public bool Connected
		{
			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0x25310B0", Offset = "0x25310B0", VA = "0x25310B0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31F88", Offset = "0xB31F88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0x25310B8", Offset = "0x25310B8", VA = "0x25310B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31F98", Offset = "0xB31F98")]
			private set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public bool Error
		{
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0x25310C4", Offset = "0x25310C4", VA = "0x25310C4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31FA8", Offset = "0xB31FA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0x25310CC", Offset = "0x25310CC", VA = "0x25310CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31FB8", Offset = "0xB31FB8")]
			private set
			{
			}
		}

		[Token(Token = "0x14000033")]
		private event Action<byte[], int> OnReceivedData
		{
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0x25310D8", Offset = "0x25310D8", VA = "0x25310D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31FC8", Offset = "0xB31FC8")]
			add
			{
			}
			[Token(Token = "0x6001C41")]
			[Address(RVA = "0x2531178", Offset = "0x2531178", VA = "0x2531178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31FD8", Offset = "0xB31FD8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		private event Action OnConnected
		{
			[Token(Token = "0x6001C42")]
			[Address(RVA = "0x2531218", Offset = "0x2531218", VA = "0x2531218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31FE8", Offset = "0xB31FE8")]
			add
			{
			}
			[Token(Token = "0x6001C43")]
			[Address(RVA = "0x25312B8", Offset = "0x25312B8", VA = "0x25312B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31FF8", Offset = "0xB31FF8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		private event Action OnDisconnected
		{
			[Token(Token = "0x6001C44")]
			[Address(RVA = "0x2531358", Offset = "0x2531358", VA = "0x2531358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32008", Offset = "0xB32008")]
			add
			{
			}
			[Token(Token = "0x6001C45")]
			[Address(RVA = "0x25313F8", Offset = "0x25313F8", VA = "0x25313F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32018", Offset = "0xB32018")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x2531498", Offset = "0x2531498", VA = "0x2531498")]
		private OculusClient()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x253152C", Offset = "0x253152C", VA = "0x253152C")]
		public static OculusClient CreateClient(OculusTransport transport, string host)
		{
			return null;
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x25317E4", Offset = "0x25317E4", VA = "0x25317E4")]
		private void Connect(string host)
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x25319C8", Offset = "0x25319C8", VA = "0x25319C8")]
		private void OnConnectionStatusChanged(Message<NetworkingPeer> message)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x2531D14", Offset = "0x2531D14", VA = "0x2531D14", Slot = "7")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x2531D84", Offset = "0x2531D84", VA = "0x2531D84")]
		protected void Dispose()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x2531CB0", Offset = "0x2531CB0", VA = "0x2531CB0")]
		private void InternalDisconnect()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x2531EBC", Offset = "0x2531EBC", VA = "0x2531EBC", Slot = "6")]
		public void ReceiveData()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x253215C", Offset = "0x253215C", VA = "0x253215C", Slot = "9")]
		public void Send(byte[] data, int channelId)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x25319A8", Offset = "0x25319A8", VA = "0x25319A8")]
		private void OnConnectionFailed()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x2532264", Offset = "0x2532264", VA = "0x2532264", Slot = "8")]
		public void FlushData()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x2531C18", Offset = "0x2531C18", VA = "0x2531C18")]
		private static void OculusLog(string msg)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x2532268", Offset = "0x2532268", VA = "0x2532268")]
		private static void OculusLogWarning(string msg)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x2531910", Offset = "0x2531910", VA = "0x2531910")]
		private static void OculusLogError(string msg)
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class OculusCommon
	{
		[Token(Token = "0x4001D51")]
		public const int ReliableMaxMessageSize = 65535;

		[Token(Token = "0x4001D52")]
		public const int UnreliableMaxMessageSize = 1200;

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x2532300", Offset = "0x2532300", VA = "0x2532300")]
		public static bool CanParseId(string address)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x25321E4", Offset = "0x25321E4", VA = "0x25321E4")]
		protected bool SendPacket(ulong userId, byte[] data, int channelId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x2532040", Offset = "0x2532040", VA = "0x2532040")]
		protected (byte[], int) ProcessPacket(Packet packet)
		{
			return default((byte[], int));
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x2531E94", Offset = "0x2531E94", VA = "0x2531E94")]
		public static void DisposeAllPackets()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x253245C", Offset = "0x253245C", VA = "0x253245C")]
		private void OculusLog(string msg)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x25323C4", Offset = "0x25323C4", VA = "0x25323C4")]
		private void OculusLogWarning(string msg)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x253232C", Offset = "0x253232C", VA = "0x253232C")]
		private void OculusLogError(string msg)
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x2531524", Offset = "0x2531524", VA = "0x2531524")]
		public OculusCommon()
		{
		}
	}
	[Token(Token = "0x2000595")]
	public class OculusServer : OculusCommon, IServer
	{
		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21B24", Offset = "0xB21B24")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OculusTransport transport;

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x1FFE474", Offset = "0x1FFE474", VA = "0x1FFE474")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x1FFE47C", Offset = "0x1FFE47C", VA = "0x1FFE47C")]
			internal void <CreateServer>b__0(int id)
			{
			}

			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x1FFE4E8", Offset = "0x1FFE4E8", VA = "0x1FFE4E8")]
			internal void <CreateServer>b__1(int id)
			{
			}

			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0x1FFE554", Offset = "0x1FFE554", VA = "0x1FFE554")]
			internal void <CreateServer>b__2(int id, byte[] data, int ch)
			{
			}

			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0x1FFE610", Offset = "0x1FFE610", VA = "0x1FFE610")]
			internal void <CreateServer>b__3(int id, Exception exception)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21B34", Offset = "0xB21B34")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Message<NetworkingPeer>.Callback <>9__25_0;

			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Message<NetworkingPeer>.Callback <>9__25_1;

			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x1FFE464", Offset = "0x1FFE464", VA = "0x1FFE464")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x1FFE46C", Offset = "0x1FFE46C", VA = "0x1FFE46C")]
			internal void <Shutdown>b__25_0(Message<NetworkingPeer> _)
			{
			}

			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x1FFE470", Offset = "0x1FFE470", VA = "0x1FFE470")]
			internal void <Shutdown>b__25_1(Message<NetworkingPeer> _)
			{
			}
		}

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly BidirectionalDictionary<ulong, int> _oculusIDToMirrorID;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int _maxConnections;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _nextConnectionID;

		[Token(Token = "0x14000036")]
		private event Action<int> OnConnected
		{
			[Token(Token = "0x6001C65")]
			[Address(RVA = "0x25324F4", Offset = "0x25324F4", VA = "0x25324F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32028", Offset = "0xB32028")]
			add
			{
			}
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0x2532594", Offset = "0x2532594", VA = "0x2532594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32038", Offset = "0xB32038")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		private event Action<int, byte[], int> OnReceivedData
		{
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0x2532634", Offset = "0x2532634", VA = "0x2532634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32048", Offset = "0xB32048")]
			add
			{
			}
			[Token(Token = "0x6001C68")]
			[Address(RVA = "0x25326D4", Offset = "0x25326D4", VA = "0x25326D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32058", Offset = "0xB32058")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		private event Action<int> OnDisconnected
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x2532774", Offset = "0x2532774", VA = "0x2532774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32068", Offset = "0xB32068")]
			add
			{
			}
			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0x2532814", Offset = "0x2532814", VA = "0x2532814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32078", Offset = "0xB32078")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		private event Action<int, Exception> OnReceivedError
		{
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x25328B4", Offset = "0x25328B4", VA = "0x25328B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32088", Offset = "0xB32088")]
			add
			{
			}
			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0x2532954", Offset = "0x2532954", VA = "0x2532954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32098", Offset = "0xB32098")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x25329F4", Offset = "0x25329F4", VA = "0x25329F4")]
		private OculusServer(int maxConnections)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x2532B48", Offset = "0x2532B48", VA = "0x2532B48")]
		public static OculusServer CreateServer(OculusTransport transport, int maxConnections)
		{
			return null;
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x2532E9C", Offset = "0x2532E9C", VA = "0x2532E9C")]
		private void OnPeerConnectRequest(Message<NetworkingPeer> message)
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x25330D8", Offset = "0x25330D8", VA = "0x25330D8")]
		private void OnConnectionStatusChanged(Message<NetworkingPeer> message)
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x25332C0", Offset = "0x25332C0", VA = "0x25332C0")]
		private void InternalDisconnect(int connId, ulong userId)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x2533448", Offset = "0x2533448", VA = "0x2533448", Slot = "6")]
		public bool Disconnect(int connectionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x2533568", Offset = "0x2533568", VA = "0x2533568", Slot = "7")]
		public void FlushData()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x253356C", Offset = "0x253356C", VA = "0x253356C", Slot = "4")]
		public void ReceiveData()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x25336A8", Offset = "0x25336A8", VA = "0x25336A8", Slot = "5")]
		public void Send(int connectionId, byte[] data, int channelId)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x253381C", Offset = "0x253381C", VA = "0x253381C", Slot = "8")]
		public string ServerGetClientAddress(int connectionId)
		{
			return null;
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x2533978", Offset = "0x2533978", VA = "0x2533978", Slot = "9")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x2533040", Offset = "0x2533040", VA = "0x2533040")]
		private static void OculusLog(string msg)
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x25333B0", Offset = "0x25333B0", VA = "0x25333B0")]
		private static void OculusLogWarning(string msg)
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x2532E04", Offset = "0x2532E04", VA = "0x2532E04")]
		private static void OculusLogError(string msg)
		{
		}
	}
	[Token(Token = "0x2000598")]
	public class OculusTransport : Transport
	{
		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private User _user;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IClient client;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IServer server;

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x2533B20", Offset = "0x2533B20", VA = "0x2533B20")]
		public void LoggedIn(User user)
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x2533B28", Offset = "0x2533B28", VA = "0x2533B28")]
		public new void LateUpdate()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x2533C80", Offset = "0x2533C80", VA = "0x2533C80", Slot = "5")]
		public override bool ClientConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x2533DBC", Offset = "0x2533DBC", VA = "0x2533DBC", Slot = "6")]
		public override void ClientConnect(string address)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x25340A4", Offset = "0x25340A4", VA = "0x25340A4", Slot = "8")]
		public override void ClientSend(int channelId, ArraySegment<byte> segment)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x25341F8", Offset = "0x25341F8", VA = "0x25341F8", Slot = "10")]
		public override void ClientDisconnect()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x2533D68", Offset = "0x2533D68", VA = "0x2533D68")]
		public bool ClientActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x2534274", Offset = "0x2534274", VA = "0x2534274", Slot = "12")]
		public override bool ServerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x25342C8", Offset = "0x25342C8", VA = "0x25342C8", Slot = "13")]
		public override void ServerStart()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x2534548", Offset = "0x2534548", VA = "0x2534548", Slot = "11")]
		public override Uri ServerUri()
		{
			return null;
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x25345DC", Offset = "0x25345DC", VA = "0x25345DC", Slot = "14")]
		public override void ServerSend(int connectionId, int channelId, ArraySegment<byte> segment)
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x2534768", Offset = "0x2534768", VA = "0x2534768", Slot = "16")]
		public override void ServerDisconnect(int connectionId)
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x253484C", Offset = "0x253484C", VA = "0x253484C", Slot = "17")]
		public override string ServerGetClientAddress(int connectionId)
		{
			return null;
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x2534964", Offset = "0x2534964", VA = "0x2534964", Slot = "18")]
		public override void ServerStop()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x25349AC", Offset = "0x25349AC", VA = "0x25349AC", Slot = "26")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x2534BAC", Offset = "0x2534BAC", VA = "0x2534BAC", Slot = "19")]
		public override int GetMaxPacketSize(int channelId)
		{
			return default(int);
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x2534CA8", Offset = "0x2534CA8", VA = "0x2534CA8", Slot = "4")]
		public override bool Available()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x2534DD8", Offset = "0x2534DD8", VA = "0x2534DD8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x2534DDC", Offset = "0x2534DDC", VA = "0x2534DDC")]
		private void OculusLog(string msg)
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x2534C10", Offset = "0x2534C10", VA = "0x2534C10")]
		private void OculusLogWarning(string msg)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x2534E74", Offset = "0x2534E74", VA = "0x2534E74")]
		private void OculusLogError(string msg)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x2534F0C", Offset = "0x2534F0C", VA = "0x2534F0C")]
		public OculusTransport()
		{
		}
	}
}
namespace MagicLightProbes
{
	[Token(Token = "0x2000599")]
	public class MLPDataSaver
	{
		[Token(Token = "0x6001C9A")]
		public static void SaveData<T>(T data, string fullFilePath, string consoleString = "")
		{
		}

		[Token(Token = "0x6001C9B")]
		public static T LoadData<T>(T dataRecipient, string fullFilePath, string consoleStringSuccess = "", string consoleStringFail = "")
		{
			return (T)null;
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x25264B4", Offset = "0x25264B4", VA = "0x25264B4")]
		public MLPDataSaver()
		{
		}
	}
	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB21B44", Offset = "0xB21B44")]
	[ExecuteInEditMode]
	public class MagicLightProbes : MonoBehaviour
	{
		[Token(Token = "0x200059B")]
		public struct VolumeParameters
		{
			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int volumeIndex;

			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 position;

			[Token(Token = "0x4001E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 demensions;

			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0x235696C", Offset = "0x235696C", VA = "0x235696C")]
			public VolumeParameters(int _volumeIndex, Vector3 _position, Vector3 _demensions)
			{
			}
		}

		[Token(Token = "0x200059C")]
		public enum FillingMode
		{
			[Token(Token = "0x4001E0C")]
			VerticalDublicating,
			[Token(Token = "0x4001E0D")]
			FullFilling,
			[Token(Token = "0x4001E0E")]
			SeparateFilling
		}

		[Token(Token = "0x200059D")]
		public enum Workflow
		{
			[Token(Token = "0x4001E10")]
			Simple,
			[Token(Token = "0x4001E11")]
			Advanced
		}

		[Token(Token = "0x200059E")]
		public enum BoundsDisplayMode
		{
			[Token(Token = "0x4001E13")]
			Always,
			[Token(Token = "0x4001E14")]
			OnSelection
		}

		[Token(Token = "0x200059F")]
		public enum DebugPasses
		{
			[Token(Token = "0x4001E16")]
			MaximumHeight,
			[Token(Token = "0x4001E17")]
			GeometryCollision,
			[Token(Token = "0x4001E18")]
			GeometryIntersections,
			[Token(Token = "0x4001E19")]
			NearGeometry,
			[Token(Token = "0x4001E1A")]
			OutOfRange,
			[Token(Token = "0x4001E1B")]
			OutOfRangeBorders,
			[Token(Token = "0x4001E1C")]
			ShadingBorders,
			[Token(Token = "0x4001E1D")]
			ContrastAreas,
			[Token(Token = "0x4001E1E")]
			NearLights,
			[Token(Token = "0x4001E1F")]
			LightIntensity,
			[Token(Token = "0x4001E20")]
			UnlitProbes,
			[Token(Token = "0x4001E21")]
			EqualProbes,
			[Token(Token = "0x4001E22")]
			GeometryEdges,
			[Token(Token = "0x4001E23")]
			EqualColor
		}

		[Token(Token = "0x20005A0")]
		public enum DrawModes
		{
			[Token(Token = "0x4001E25")]
			Accepted,
			[Token(Token = "0x4001E26")]
			Culled,
			[Token(Token = "0x4001E27")]
			Both
		}

		[Token(Token = "0x20005A1")]
		public enum CalculationTarget
		{
			[Token(Token = "0x4001E29")]
			GeometryEdges,
			[Token(Token = "0x4001E2A")]
			GeneralCalculation
		}

		[Serializable]
		[Token(Token = "0x20005A2")]
		private struct TempPointData
		{
			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float xPos;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float yPos;

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float zPos;

			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0x2356960", Offset = "0x2356960", VA = "0x2356960")]
			public TempPointData(Vector3 _position)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A3")]
		public class WorkPathFoundEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x2356980", Offset = "0x2356980", VA = "0x2356980")]
			public WorkPathFoundEvent()
			{
			}
		}

		[Token(Token = "0x4001D61")]
		private const string COMPUTE_SHADERS_FOLDER = "/Passes/Compute Shaders/";

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator lightProbesVolumeCalculatingRoutine;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator lightProbesVolumeCalculatingSubRoutine;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator executingPassesRoutine;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IEnumerator volumeDivideingRoutine;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<string> groundAndFloorKeywords;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject probesVolume;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool useDynamicDensity;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float volumeSpacing;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float volumeSpacingMin;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float volumeSpacingMax;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float cornersDetectionThreshold;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float cornersDetectionThresholdMin;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float cornersDetectionThresholdMax;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float lastCornersDetectionThreshold;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float lastCornersDetectionThresholdMin;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float lastCornersDetectionThresholdMax;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int lastMaxProbesInVolume;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int maxProbesInVolume;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int defaultMaxProbesCount;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float lastVolumeSpacing;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float lastVolumeSpacingMin;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float lastVolumeSpacingMax;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool volumeSpacingChanged;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool tooManySubVolumes;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public FillingMode fillingMode;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Workflow workflow;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float maxHeightAboveGeometry;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float lastMaxHeightAboveGeometry;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float maxHeightAboveTerrain;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool considerDistanceToLights;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float lightIntensityTreshold;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float colorTreshold;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float collisionDetectionRadius;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool saveProbesNearbyGeometry;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float cornerProbesSpacing;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float nearbyGeometryDetectionRadius;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float nearbyGeometryDetectionRadiusMin;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float nearbyGeometryDetectionRadiusMax;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float distanceFromNearbyGeometry;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool fillEquivalentVolume;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float equivalentVolumeFillingRate;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool fillUnlitVolume;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public bool fillFreeVolume;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float unlitVolumeFillingRate;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float freeVolumeFillingRate;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool cullAcceptedVolume;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float acceptedVolumeFillingRate;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float nearbyGeometryVolumeFillingRate;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float verticalDublicatingHeight;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float verticalDublicatingStep;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public LayerMask raycastFilter;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public List<MLPLight> excludedLights;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask layerMask;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public int firstCollisionLayer;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool useMultithreading;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject previousSelection;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool unloaded;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		public bool sceneChanging;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		public bool waitForPrevious;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public MagicLightProbes previousVolume;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool optimizeForMixedLighting;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool lastOptimizeForMixedLightingValue;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		public bool preventLeakageThroughWalls;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
		public bool useVolumeBottom;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float lastColorThreshold;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float lastLightIntensityThreshold;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float lastEquivalentVolumeFillingRate;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float lastUnlitVolumeFillingRate;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float lastFreeVolumeFillingRate;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float lastCornerProbesSpacing;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float lastDistanceFromGeometry;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public bool debugMode;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float debugObjectScale;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public BoundsDisplayMode boundsDisplayMode;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public DebugPasses debugPass;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public DrawModes drawMode;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool debugShowLightIntensity;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
		public bool showPreviewGrid;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15E")]
		public bool nextStep;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15F")]
		public bool cullByColor;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool forceSaveProbesOnShadingBorders;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public string dataPath;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string workPath;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public bool workPathFound;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public List<Vector3> localFinishedPositions;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public ComputeShader calculateVolumeFilling;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public ComputeShader calculateProbeSpacing;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public ComputeShader calculateDistanceFromGeometry;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public MLPVolume currentVolume;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public MLPQuickEditing quickEditingComponent;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public bool recalculationRequired;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private List<Collider> lightColliders;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private List<Collider> objectColliders;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private List<MLPPointData> finalDebugAcceptedPoints;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private List<MLPPointData> finalDebugCulledPoints;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private List<GameObject> tempObjects;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private List<GameObject> temporarilyDisabledDynamicObjects;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private List<GameObject> staticObjectsWithoutCollider;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private GameObject combinedVolumeObject;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private VolumeParameters currentEditingVolume;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector3 currentSelectedObjectLastPosition;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private GameObject lastSelectedObject;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public bool cancelCombination;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public List<IEnumerator> passesToExecute;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public List<GameObject> staticObjects;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public List<MLPLight> lights;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public List<MLPPointData> tmpSharedPointsArray;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public List<MLPPointData> tmpOutOfRangePoints;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public List<MLPPointData> tmpOutOfMaxHeightPoints;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public List<MLPPointData> tmpGeometryCollisionPoints;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public List<MLPPointData> tmpContrastOnOutOfRangePoints;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public List<MLPPointData> tmpContrastShadingBordersPoints;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public List<MLPPointData> tmpUnlitPoints;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public List<MLPPointData> tmpFreePoints;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public List<MLPPointData> tmpNearbyGeometryPoints;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public List<MLPPointData> tmpPointsNearGeometryIntersections;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public List<MLPPointData> tmpNearbyLightsPoints;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public List<MLPPointData> tmpEqualPoints;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public List<MLPPointData> debugCulledPoints;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public List<MLPPointData> debugAcceptedPoints;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public List<GameObject> subVolumesDivided;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public List<Vector3> points;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public List<VolumeParameters> innerVolumes;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public List<VolumeParameters> subVolumesParameters;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public List<MagicLightProbes> innerVolumesObjects;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public List<LayerMask> layerMasks;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public List<Vector3> transformedPoints;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public string assetEditorPath;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public MagicLightProbes parentVolume;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool operationalDataLost;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public bool localOperationalDataLost;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x301")]
		public bool recombinationNeeded;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x302")]
		public bool isInBackground;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x303")]
		public bool realtimeEditing;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		public bool calculated;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x305")]
		public bool calculatingError;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public int xPointsCount;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		public int yPointsCount;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public int zPointsCount;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public float prevVolumeScaleX;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public float prevVolumeScaleY;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public float prevVolumeScaleZ;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public int totalProbes;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public int totalProbesInSubVolume;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public int totalProbesInVolume;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public bool calculatingVolume;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32D")]
		public bool calculatingVolumeSubPass;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public string currentPass;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public int currentPassProgressCounter;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		public int currentPassProgressFrameSkipper;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public float totalProgress;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		public float currentPassProgress;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public int selectedTab;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public bool showOptionsInManagerWindow;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34D")]
		public bool restored;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public int currentVolumePart;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float eta;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public bool changed;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x359")]
		public bool redivideParts;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35A")]
		public bool combinedVolumeError;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35B")]
		private bool passesExecuting;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		private int totalProgressCounter;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private int totalProgressFrameSkipper;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		private float startTime;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private float endTime;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private bool scenePreparing;

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x2526EFC", Offset = "0x2526EFC", VA = "0x2526EFC")]
		public void CheckForNearContrast(MLPPointData pointForCheck)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x25271E0", Offset = "0x25271E0", VA = "0x25271E0")]
		public bool UpdateProgress(int count, int period = 100)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x2527228", Offset = "0x2527228", VA = "0x2527228")]
		private bool UpdateTotalProgress(int count, int period = 100)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x2527270", Offset = "0x2527270", VA = "0x2527270")]
		public MagicLightProbes()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB21B90", Offset = "0xB21B90")]
	[ExecuteInEditMode]
	public class MLPCombinedVolume : MonoBehaviour
	{
		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x25264AC", Offset = "0x25264AC", VA = "0x25264AC")]
		public MLPCombinedVolume()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB21BDC", Offset = "0xB21BDC")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	public class MLPLight : MonoBehaviour
	{
		[Token(Token = "0x20005A6")]
		public enum CalculationType
		{
			[Token(Token = "0x4001E52")]
			AccurateShadows,
			[Token(Token = "0x4001E53")]
			LightIntensity
		}

		[Token(Token = "0x20005A7")]
		public enum MLPLightType
		{
			[Token(Token = "0x4001E55")]
			Spot,
			[Token(Token = "0x4001E56")]
			Directional,
			[Token(Token = "0x4001E57")]
			Point,
			[Token(Token = "0x4001E58")]
			Area,
			[Token(Token = "0x4001E59")]
			Mesh
		}

		[Token(Token = "0x20005A8")]
		public enum MLPLightTypeMA
		{
			[Token(Token = "0x4001E5B")]
			Area = 3,
			[Token(Token = "0x4001E5C")]
			Mesh
		}

		[Token(Token = "0x20005A9")]
		public enum TracePointSettingType
		{
			[Token(Token = "0x4001E5E")]
			Auto,
			[Token(Token = "0x4001E5F")]
			Custom
		}

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MLPLightType lightType;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MLPLightTypeMA lightTypeMA;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MLPLightType lastLightType;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CalculationType calculationType;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TracePointSettingType tracePointSettingType;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LightmapBakeType lightMode;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light targetLight;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject parentGameObject;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 position;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 forward;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool saveNearbyProbes;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float saveRadius;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float range;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool useSourceParameters;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool reverseDirection;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float angle;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool customTracePoints;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool accurateTrace;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int accuracy;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int lastAccuracy;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool isDirectional;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float tracePointSize;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float lastTracePointSize;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MeshFilter lastMesh;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<GameObject> tracePoints;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<MLPTracePoint> tracePointsData;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MLPTracePoint mainTracePoint;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public MagicLightProbes parentVolume;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool showOptionsInManagerWindow;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float intensity;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool resetEditor;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool showLightOnScene;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		public bool saveOnOutOfRange;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		public bool isHDRP;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector2 hdrpAreaSize;

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x25264CC", Offset = "0x25264CC", VA = "0x25264CC")]
		public MLPLight()
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public class MLPPointData
	{
		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lightIntensity;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxIntencity;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int col;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int row;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int depth;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<float> distancesToLights;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector3> collisionPoints;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<MLPPointData> nearbyPoints;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MLPPointData> nearbyPointsOptimaziable;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool removed;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool outOfRange;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool inSaveRange;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool savedNearGeometry;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool contrastOnOutOfRangeArea;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool inRangeOfLight;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool contrastOnShadingArea;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public bool equalIntensity;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool equalColor;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool borderPoint;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool outOfMaxHeight;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float angleToLight;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 contactPoint;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool inCorner;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool lockForCull;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool onGeometryEdge;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool lightLeakLocked;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 collisionNormal;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<MLPLight> inRangeForLights;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<MLPLight> inShadowForLights;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject temporaryObject;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject collisionObject;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color averagedColor;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool xEndPoint;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool yEndPoint;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool zEndPoint;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		public bool xStartPoint;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool yStartPoint;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public bool zStartPoint;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int equivalent;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float avaragedColorValue;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool isUnlit;

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x25265B8", Offset = "0x25265B8", VA = "0x25265B8")]
		public void SetPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x25265C4", Offset = "0x25265C4", VA = "0x25265C4")]
		public void SetOutOfRange(bool visibility)
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x25265D0", Offset = "0x25265D0", VA = "0x25265D0")]
		public void SetLightIntensity(float intensity)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x25265D8", Offset = "0x25265D8", VA = "0x25265D8")]
		public void SetInSaveRange(bool value)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x25265E4", Offset = "0x25265E4", VA = "0x25265E4")]
		public void SetInContrastArea(bool value)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x25265F0", Offset = "0x25265F0", VA = "0x25265F0")]
		public MLPPointData()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	[ExecuteInEditMode]
	public class MLPPortal : MonoBehaviour
	{
		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float yStep;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float zStep;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int yCounter;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int zCounter;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool calculate;

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x25267C0", Offset = "0x25267C0", VA = "0x25267C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x25267C4", Offset = "0x25267C4", VA = "0x25267C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x2526804", Offset = "0x2526804", VA = "0x2526804")]
		private void DrawRayX(Vector3 dir)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x25269F8", Offset = "0x25269F8", VA = "0x25269F8")]
		private void DrawRayZ(Vector3 dir)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x2526BE0", Offset = "0x2526BE0", VA = "0x2526BE0")]
		public MLPPortal()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB21C48", Offset = "0xB21C48")]
	public class MLPQuickEditing : MonoBehaviour
	{
		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MagicLightProbes parent;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float gizmoScale;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float drawDistance;

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x2526BE8", Offset = "0x2526BE8", VA = "0x2526BE8")]
		public MLPQuickEditing()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AD")]
	public class MLPTracePoint
	{
		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 forward;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject pointGameObject;

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x2526BF8", Offset = "0x2526BF8", VA = "0x2526BF8")]
		public MLPTracePoint()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	[ExecuteInEditMode]
	public class MLPVolume : MonoBehaviour
	{
		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MagicLightProbes parentRootComponent;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public MeshRenderer selfRenderer;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool showGizmoSelected;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isPartVolume;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool isSubdividedPart;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool isCalculated;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool isInProcess;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool skipped;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int id;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color colorOnSelection;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MLPPointData> localAcceptedPoints;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<MLPPointData> localNearbyGeometryPoints;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<MLPPointData> localContrastPoints;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<MLPPointData> localCornerPoints;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Vector3> localNearbyGeometryPointsPositions;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Vector3> resultNearbyGeometryPointsPositions;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Vector3> localCornerPointsPositions;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Vector3> resultLocalCornerPointsPositions;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Vector3> localEquivalentPointsPositions;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Vector3> resultLocalEquivalentPointsPositions;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<Vector3> resultLocalFreePointsPositions;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Vector3> localUnlitPointsPositions;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<Vector3> localFreePointsPositions;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Vector3> resultLocalUnlitPointsPositions;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<Vector3> localDirections;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<Vector3> localAvaragedDirections;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<MLPPointData> localColorThresholdEditingPoints;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int objectsInside;

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x2526C00", Offset = "0x2526C00", VA = "0x2526C00")]
		public MLPVolume()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	public class CheckForLightLeakAreas
	{
		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21C90", Offset = "0xB21C90")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000351")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CBA")]
				[Address(RVA = "0x1FFABC4", Offset = "0x1FFABC4", VA = "0x1FFABC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000352")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CBC")]
				[Address(RVA = "0x1FFAC0C", Offset = "0x1FFAC0C", VA = "0x1FFAC0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0x1FFA530", Offset = "0x1FFA530", VA = "0x1FFA530")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x1FFA55C", Offset = "0x1FFA55C", VA = "0x1FFA55C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x1FFA560", Offset = "0x1FFA560", VA = "0x1FFA560", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x1FFABCC", Offset = "0x1FFABCC", VA = "0x1FFABCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x2242FF8", Offset = "0x2242FF8", VA = "0x2242FF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB320A8", Offset = "0xB320A8")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x2243078", Offset = "0x2243078", VA = "0x2243078")]
		public CheckForLightLeakAreas()
		{
		}
	}
	[Token(Token = "0x20005B1")]
	public class DublicateVertical
	{
		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21CA0", Offset = "0xB21CA0")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <steps>5__2;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<MLPPointData> <candidates>5__3;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<MLPPointData> <savedNearGeometry>5__4;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__5;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<MLPPointData>.Enumerator <>7__wrap5;

			[Token(Token = "0x17000353")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC3")]
				[Address(RVA = "0x2346A84", Offset = "0x2346A84", VA = "0x2346A84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000354")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CC5")]
				[Address(RVA = "0x2346ACC", Offset = "0x2346ACC", VA = "0x2346ACC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0x2346100", Offset = "0x2346100", VA = "0x2346100")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0x234612C", Offset = "0x234612C", VA = "0x234612C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0x23461A4", Offset = "0x23461A4", VA = "0x23461A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0x2346148", Offset = "0x2346148", VA = "0x2346148")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0x2346A8C", Offset = "0x2346A8C", VA = "0x2346A8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x2212358", Offset = "0x2212358", VA = "0x2212358")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32160", Offset = "0xB32160")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x22123D8", Offset = "0x22123D8", VA = "0x22123D8")]
		public DublicateVertical()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public static class RandomGen
	{
		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random _global;

		[Token(Token = "0x4001EC0")]
		[ThreadStatic]
		private static System.Random _local;

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x20C1C38", Offset = "0x20C1C38", VA = "0x20C1C38")]
		public static int Next(int min, int max)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20005B4")]
	public class EquivalentProbesOptimization
	{
		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21CB0", Offset = "0xB21CB0")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MLPVolume currentVolume;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool realtimeEditing;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3[] <exit>5__2;

			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<MLPPointData> <tempList>5__3;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__4;

			[Token(Token = "0x17000355")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CCD")]
				[Address(RVA = "0x2347508", Offset = "0x2347508", VA = "0x2347508", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000356")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CCF")]
				[Address(RVA = "0x2347550", Offset = "0x2347550", VA = "0x2347550", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0x2346E10", Offset = "0x2346E10", VA = "0x2346E10")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0x2346E3C", Offset = "0x2346E3C", VA = "0x2346E3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0x2346E40", Offset = "0x2346E40", VA = "0x2346E40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0x2347510", Offset = "0x2347510", VA = "0x2347510", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x286D360", Offset = "0x286D360", VA = "0x286D360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32218", Offset = "0xB32218")]
		public IEnumerator ExecutePass(MagicLightProbes parent, [Optional] MLPVolume currentVolume, bool realtimeEditing = false)
		{
			return null;
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x286D408", Offset = "0x286D408", VA = "0x286D408")]
		public EquivalentProbesOptimization()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public class PartialVolumeFilling
	{
		[Token(Token = "0x20005B7")]
		public enum TargetPoint
		{
			[Token(Token = "0x4001ECA")]
			Unlit,
			[Token(Token = "0x4001ECB")]
			Equivalent,
			[Token(Token = "0x4001ECC")]
			Free
		}

		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21CC0", Offset = "0xB21CC0")]
		private sealed class <ExecutePass>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetPoint targetPoint;

			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MLPVolume currentVolume;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool realtimeEditing;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<MLPPointData> <tempList>5__2;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Vector3> <realTimeEditingList>5__3;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vector3> <targetPoints>5__4;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <fillingRate>5__5;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3[] <exit>5__6;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <i>5__7;

			[Token(Token = "0x17000357")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CD5")]
				[Address(RVA = "0x20037F4", Offset = "0x20037F4", VA = "0x20037F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000358")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CD7")]
				[Address(RVA = "0x200383C", Offset = "0x200383C", VA = "0x200383C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0x2002AE4", Offset = "0x2002AE4", VA = "0x2002AE4")]
			[DebuggerHidden]
			public <ExecutePass>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0x2002B10", Offset = "0x2002B10", VA = "0x2002B10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0x2002B14", Offset = "0x2002B14", VA = "0x2002B14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0x20037FC", Offset = "0x20037FC", VA = "0x20037FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x201487C", Offset = "0x201487C", VA = "0x201487C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB322D0", Offset = "0xB322D0")]
		public IEnumerator ExecutePass(MagicLightProbes parent, TargetPoint targetPoint, [Optional] MLPVolume currentVolume, bool realtimeEditing = false)
		{
			return null;
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x201492C", Offset = "0x201492C", VA = "0x201492C")]
		public PartialVolumeFilling()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public class RemoveUnusedPoints
	{
		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21CD0", Offset = "0xB21CD0")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<MLPPointData> <pointsToRemove>5__2;

			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x17000359")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CDD")]
				[Address(RVA = "0x200A9AC", Offset = "0x200A9AC", VA = "0x200A9AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CDF")]
				[Address(RVA = "0x200A9F4", Offset = "0x200A9F4", VA = "0x200A9F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0x200A468", Offset = "0x200A468", VA = "0x200A468")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x200A494", Offset = "0x200A494", VA = "0x200A494", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x200A498", Offset = "0x200A498", VA = "0x200A498", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x200A9B4", Offset = "0x200A9B4", VA = "0x200A9B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x20C3D34", Offset = "0x20C3D34", VA = "0x20C3D34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32388", Offset = "0xB32388")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x20C3DB4", Offset = "0x20C3DB4", VA = "0x20C3DB4")]
		public RemoveUnusedPoints()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	public class SetDistanceFromGeometry
	{
		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21CE0", Offset = "0xB21CE0")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MLPVolume currentVolume;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[] <exit>5__2;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x1700035B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CE5")]
				[Address(RVA = "0x200C4C8", Offset = "0x200C4C8", VA = "0x200C4C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CE7")]
				[Address(RVA = "0x200C510", Offset = "0x200C510", VA = "0x200C510", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0x200BF94", Offset = "0x200BF94", VA = "0x200BF94")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0x200BFC0", Offset = "0x200BFC0", VA = "0x200BFC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0x200BFC4", Offset = "0x200BFC4", VA = "0x200BFC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0x200C4D0", Offset = "0x200C4D0", VA = "0x200C4D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x24A0FD8", Offset = "0x24A0FD8", VA = "0x24A0FD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB32440", Offset = "0xB32440")]
		public IEnumerator ExecutePass(MagicLightProbes parent, MLPVolume currentVolume)
		{
			return null;
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x24A106C", Offset = "0x24A106C", VA = "0x24A106C")]
		public SetDistanceFromGeometry()
		{
		}
	}
}
namespace LuxLWRPEssentials
{
	[Token(Token = "0x20005BD")]
	public class DecalManager : MonoBehaviour
	{
		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Gizmos;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DrawDecalGizmos;

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x220E2BC", Offset = "0x220E2BC", VA = "0x220E2BC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x220E330", Offset = "0x220E330", VA = "0x220E330")]
		public DecalManager()
		{
		}
	}
	[Token(Token = "0x20005BE")]
	public class LuxLWRP_HelpBtn : PropertyAttribute
	{
		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string URL;

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x252542C", Offset = "0x252542C", VA = "0x252542C")]
		public LuxLWRP_HelpBtn(string URL)
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public class LuxLWRP_LayerBasedCulling : MonoBehaviour
	{
		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LuxLWRP_HelpBtn", RVA = "0xB29E30", Offset = "0xB29E30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29E30", Offset = "0xB29E30")]
		public LayerMask SmallDetailsLayer;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SmallDetailsDistance;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask MediumDetailsLayer;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MediumDetailsDistance;

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x2525460", Offset = "0x2525460", VA = "0x2525460")]
		private int GetLayerNumber(int LayerValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x2525480", Offset = "0x2525480", VA = "0x2525480")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x2525628", Offset = "0x2525628", VA = "0x2525628")]
		public LuxLWRP_LayerBasedCulling()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C0")]
	public enum RTSize
	{
		[Token(Token = "0x4001EEC")]
		_128 = 0x80,
		[Token(Token = "0x4001EED")]
		_256 = 0x100,
		[Token(Token = "0x4001EEE")]
		_512 = 0x200
	}
	[Serializable]
	[Token(Token = "0x20005C1")]
	public enum RTFormat
	{
		[Token(Token = "0x4001EF0")]
		ARGB32,
		[Token(Token = "0x4001EF1")]
		ARGBHalf
	}
	[Serializable]
	[Token(Token = "0x20005C2")]
	public enum GustMixLayer
	{
		[Token(Token = "0x4001EF3")]
		Layer_0,
		[Token(Token = "0x4001EF4")]
		Layer_1,
		[Token(Token = "0x4001EF5")]
		Layer_2
	}
	[Token(Token = "0x20005C3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB21CF0", Offset = "0xB21CF0")]
	public class LuxLWRP_Wind : MonoBehaviour
	{
		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29E94", Offset = "0xB29E94")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB29E94", Offset = "0xB29E94")]
		[AttributeAttribute(Name = "LuxLWRP_HelpBtn", RVA = "0xB29E94", Offset = "0xB29E94")]
		public bool UpdateInEditMode;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29EF8", Offset = "0xB29EF8")]
		public RTSize Resolution;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RTFormat Format;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture WindBaseTex;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader WindCompositeShader;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29F30", Offset = "0xB29F30")]
		public float Grass;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float Foliage;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB29F68", Offset = "0xB29F68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29F68", Offset = "0xB29F68")]
		public float BaseWindSpeed;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB29FC8", Offset = "0xB29FC8")]
		public float SizeInWorldSpace;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB2A000", Offset = "0xB2A000")]
		public float speedLayer0;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float speedLayer1;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float speedLayer2;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A014", Offset = "0xB2A014")]
		public int GrassGustTiling;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float GrassGustSpeed;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public GustMixLayer LayerToMixWith;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A04C", Offset = "0xB2A04C")]
		public float JitterFrequency;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float JitterHighFrequency;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture WindRenderTexture;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_material;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 uvs;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 uvs1;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 uvs2;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 uvs3;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int WindRTPID;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform trans;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WindZone windZone;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float mainWind;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float turbulence;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int LuxLWRPWindDirSizePID;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int LuxLWRPWindStrengthMultipliersPID;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int LuxLWRPSinTimePID;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int LuxLWRPGustPID;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int LuxLWRPGustMixLayerPID;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int LuxLWRPWindUVsPID;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int LuxLWRPWindUVs1PID;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int LuxLWRPWindUVs2PID;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int LuxLWRPWindUVs3PID;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int previousRTSize;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int previousRTFormat;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector4 WindDirectionSize;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] MixLayers;

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x2525640", Offset = "0x2525640", VA = "0x2525640")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x2525B54", Offset = "0x2525B54", VA = "0x2525B54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x252580C", Offset = "0x252580C", VA = "0x252580C")]
		private void SetupRT()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x252599C", Offset = "0x252599C", VA = "0x252599C")]
		private void GetPIDs()
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x2525CC4", Offset = "0x2525CC4", VA = "0x2525CC4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x2525ED4", Offset = "0x2525ED4", VA = "0x2525ED4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x2526358", Offset = "0x2526358", VA = "0x2526358")]
		public LuxLWRP_Wind()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB21D68", Offset = "0xB21D68")]
	public class GetTerrainHeightNormalMap : MonoBehaviour
	{
		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData targetTerrainData;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string savePathTerrainHeightNormalMap;

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x23D0A3C", Offset = "0x23D0A3C", VA = "0x23D0A3C")]
		public void GetTerData()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x23D0B18", Offset = "0x23D0B18", VA = "0x23D0B18")]
		public GetTerrainHeightNormalMap()
		{
		}
	}
}
namespace LuxLWRPEssentials.Demo
{
	[Token(Token = "0x20005C5")]
	public class AnimateSphere : MonoBehaviour
	{
		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform trans;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float yPos;

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x22C651C", Offset = "0x22C651C", VA = "0x22C651C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x22C65A0", Offset = "0x22C65A0", VA = "0x22C65A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x22C6618", Offset = "0x22C6618", VA = "0x22C6618")]
		public AnimateSphere()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class CheckSettings : MonoBehaviour
	{
		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x2243080", Offset = "0x2243080", VA = "0x2243080")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x22431E0", Offset = "0x22431E0", VA = "0x22431E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x22431E4", Offset = "0x22431E4", VA = "0x22431E4")]
		public CheckSettings()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class ExtendedFlycam : MonoBehaviour
	{
		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float climbSpeed;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float normalMoveSpeed;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoveFactor;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fastMoveFactor;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationX;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationY;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isOrtho;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cam;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isActive;

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x2871E54", Offset = "0x2871E54", VA = "0x2871E54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x2871F3C", Offset = "0x2871F3C", VA = "0x2871F3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x2872610", Offset = "0x2872610", VA = "0x2872610")]
		public ExtendedFlycam()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	public class MouseSelect : MonoBehaviour
	{
		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform selectedTransform;

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x21BED14", Offset = "0x21BED14", VA = "0x21BED14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x21BEF50", Offset = "0x21BEF50", VA = "0x21BEF50")]
		public MouseSelect()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public class ToggleOutlineSelection : MonoBehaviour
	{
		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material SelectionMaterial;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material OutlineMaterial;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer rend;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material[] BaseMatArray;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material[] SelectedMatArray;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool Selected;

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x20559E4", Offset = "0x20559E4", VA = "0x20559E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x2055B38", Offset = "0x2055B38", VA = "0x2055B38")]
		public void Select()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x2055B90", Offset = "0x2055B90", VA = "0x2055B90")]
		public ToggleOutlineSelection()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	public class ToggleRimSelection : MonoBehaviour
	{
		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color ActiveRimColor;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2A084", Offset = "0xB2A084")]
		public bool Selected;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer rend;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool Changed;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int RimColorPID;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock block;

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x2055C1C", Offset = "0x2055C1C", VA = "0x2055C1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x2055D4C", Offset = "0x2055D4C", VA = "0x2055D4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x2055DB0", Offset = "0x2055DB0", VA = "0x2055DB0")]
		public ToggleRimSelection()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x20005CB")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x4001F3B")]
		NONE = 0u,
		[Token(Token = "0x4001F3C")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x4001F3D")]
		STAGE = 2u,
		[Token(Token = "0x4001F3E")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x4001F3F")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x20005CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB21DE0", Offset = "0xB21DE0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB21DE0", Offset = "0xB21DE0")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB21E40", Offset = "0xB21E40")]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x1700036C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D34")]
				[Address(RVA = "0x23495BC", Offset = "0x23495BC", VA = "0x23495BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D36")]
				[Address(RVA = "0x2349604", Offset = "0x2349604", VA = "0x2349604", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x23494AC", Offset = "0x23494AC", VA = "0x23494AC")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x23494D8", Offset = "0x23494D8", VA = "0x23494D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x23494DC", Offset = "0x23494DC", VA = "0x23494DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x23495C4", Offset = "0x23495C4", VA = "0x23495C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A0BC", Offset = "0xB2A0BC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB2A0BC", Offset = "0xB2A0BC")]
		private Transform _stage;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A12C", Offset = "0xB2A12C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB2A12C", Offset = "0xB2A12C")]
		private Transform _stageTransform;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A19C", Offset = "0xB2A19C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB2A19C", Offset = "0xB2A19C")]
		private Camera _HMDCamera;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB2A20C", Offset = "0xB2A20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A20C", Offset = "0xB2A20C")]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB2A27C", Offset = "0xB2A27C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A27C", Offset = "0xB2A27C")]
		private bool _disableStandardAssets;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A2EC", Offset = "0xB2A2EC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB2A2EC", Offset = "0xB2A2EC")]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A35C", Offset = "0xB2A35C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB2A35C", Offset = "0xB2A35C")]
		private string[] _excludeBehaviours;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB2A3CC", Offset = "0xB2A3CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A3CC", Offset = "0xB2A3CC")]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x1700035D")]
		public Transform stage
		{
			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0x25165B0", Offset = "0x25165B0", VA = "0x25165B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x2516658", Offset = "0x2516658", VA = "0x2516658")]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB3293C", Offset = "0xB3293C")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x2516778", Offset = "0x2516778", VA = "0x2516778")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x251677C", Offset = "0x251677C", VA = "0x251677C")]
			set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x2516780", Offset = "0x2516780", VA = "0x2516780")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000360")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x2516858", Offset = "0x2516858", VA = "0x2516858")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000361")]
		public Transform stageTransform
		{
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x2516930", Offset = "0x2516930", VA = "0x2516930")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x2516938", Offset = "0x2516938", VA = "0x2516938")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public Camera HMDCamera
		{
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0x2516940", Offset = "0x2516940", VA = "0x2516940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0x2516948", Offset = "0x2516948", VA = "0x2516948")]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x2516A68", Offset = "0x2516A68", VA = "0x2516A68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x2516A70", Offset = "0x2516A70", VA = "0x2516A70")]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x2516B18", Offset = "0x2516B18", VA = "0x2516B18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0x2516B20", Offset = "0x2516B20", VA = "0x2516B20")]
			set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0x2516B2C", Offset = "0x2516B2C", VA = "0x2516B2C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001D19")]
			[Address(RVA = "0x2516B34", Offset = "0x2516B34", VA = "0x2516B34")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0x2516B3C", Offset = "0x2516B3C", VA = "0x2516B3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0x2516B44", Offset = "0x2516B44", VA = "0x2516B44")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x2516B90", Offset = "0x2516B90", VA = "0x2516B90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0x2516B98", Offset = "0x2516B98", VA = "0x2516B98")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public bool isValid
		{
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0x2516BA4", Offset = "0x2516BA4", VA = "0x2516BA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000369")]
		public bool isActive
		{
			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0x2516D30", Offset = "0x2516D30", VA = "0x2516D30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036A")]
		private bool _isReady
		{
			[Token(Token = "0x6001D20")]
			[Address(RVA = "0x2516D38", Offset = "0x2516D38", VA = "0x2516D38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036B")]
		public SDKRender render
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0x2516DBC", Offset = "0x2516DBC", VA = "0x2516DBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x2516DC4", Offset = "0x2516DC4", VA = "0x2516DC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x2516E28", Offset = "0x2516E28", VA = "0x2516E28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x2516FD4", Offset = "0x2516FD4", VA = "0x2516FD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x2516FDC", Offset = "0x2516FDC", VA = "0x2516FDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB324F8", Offset = "0xB324F8")]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x2516DD0", Offset = "0x2516DD0", VA = "0x2516DD0")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x251705C", Offset = "0x251705C", VA = "0x251705C")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x2517068", Offset = "0x2517068", VA = "0x2517068")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x2517124", Offset = "0x2517124", VA = "0x2517124")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x25173EC", Offset = "0x25173EC", VA = "0x25173EC")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x25174F0", Offset = "0x25174F0", VA = "0x25174F0")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x2517464", Offset = "0x2517464", VA = "0x2517464")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x25174A8", Offset = "0x25174A8", VA = "0x25174A8")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x25171CC", Offset = "0x25171CC", VA = "0x25171CC")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x2516E4C", Offset = "0x2516E4C", VA = "0x2516E4C")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x2517534", Offset = "0x2517534", VA = "0x2517534")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x20005CE")]
	public static class SDKBridge
	{
		[Token(Token = "0x20005CF")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x1700036E")]
		public static bool IsActive
		{
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x20CEBC0", Offset = "0x20CEBC0", VA = "0x20CEBC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x20CE718", Offset = "0x20CE718", VA = "0x20CE718")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x20CE720", Offset = "0x20CE720", VA = "0x20CE720")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x20CE728", Offset = "0x20CE728", VA = "0x20CE728")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x20CE730", Offset = "0x20CE730", VA = "0x20CE730")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x20CE738", Offset = "0x20CE738", VA = "0x20CE738")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x20CE740", Offset = "0x20CE740", VA = "0x20CE740")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x20CE77C", Offset = "0x20CE77C", VA = "0x20CE77C")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x20CE7B8", Offset = "0x20CE7B8", VA = "0x20CE7B8")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x20CE7C0", Offset = "0x20CE7C0", VA = "0x20CE7C0")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x20CE7C8", Offset = "0x20CE7C8", VA = "0x20CE7C8")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x20CE804", Offset = "0x20CE804", VA = "0x20CE804")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x20CE840", Offset = "0x20CE840", VA = "0x20CE840")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x20CE87C", Offset = "0x20CE87C", VA = "0x20CE87C")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x20CE884", Offset = "0x20CE884", VA = "0x20CE884")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x20CE90C", Offset = "0x20CE90C", VA = "0x20CE90C")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x20CEA24", Offset = "0x20CEA24", VA = "0x20CEA24")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x20CEAF0", Offset = "0x20CEAF0", VA = "0x20CEAF0")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x20CEB58", Offset = "0x20CEB58", VA = "0x20CEB58")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x20CEC74", Offset = "0x20CEC74", VA = "0x20CEC74")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x20CED28", Offset = "0x20CED28", VA = "0x20CED28")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x6001D4C")]
		public static bool GetStructFromGlobalChannel<T>(T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4D")]
		public static int AddStructToGlobalChannel<T>(T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001D4E")]
		public static bool GetStructFromLocalChannel<T>(T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4F")]
		public static int AddStructToLocalChannel<T>(T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001D50")]
		public static void AddStructToFrame<T>(T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x20CEF50", Offset = "0x20CEF50", VA = "0x20CEF50")]
		public static bool UpdateInputFrame(SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x20CF338", Offset = "0x20CF338", VA = "0x20CF338")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x20CF508", Offset = "0x20CF508", VA = "0x20CF508")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x20CF654", Offset = "0x20CF654", VA = "0x20CF654")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x20CF7D8", Offset = "0x20CF7D8", VA = "0x20CF7D8")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x20CF884", Offset = "0x20CF884", VA = "0x20CF884")]
		public static bool GetResolution(SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005D0")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CommandBuffer _clipPlaneCommandBuffer;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _combineAlphaCommandBuffer;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer _captureTextureCommandBuffer;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer _applyTextureCommandBuffer;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommandBuffer _optimizedRenderingCommandBuffer;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraEvent _clipPlaneCameraEvent;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CameraEvent _clipPlaneCombineAlphaCameraEvent;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraEvent _captureTextureEvent;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraEvent _applyTextureEvent;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraEvent _optimizedRenderingCameraEvent;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _writeMaterial;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LIV _liv;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKResolution _resolution;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Camera _cameraInstance;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private SDKPose _requestedPose;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x1700036F")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x2496430", Offset = "0x2496430", VA = "0x2496430")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000370")]
		private bool interlacedRendering
		{
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x2496488", Offset = "0x2496488", VA = "0x2496488")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000371")]
		private bool canRenderBackground
		{
			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0x24964A0", Offset = "0x24964A0", VA = "0x24964A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000372")]
		private bool canRenderForeground
		{
			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0x2496538", Offset = "0x2496538", VA = "0x2496538")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000373")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0x24965E4", Offset = "0x24965E4", VA = "0x24965E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000374")]
		public LIV liv
		{
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x2499FC0", Offset = "0x2499FC0", VA = "0x2499FC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0x2499FC8", Offset = "0x2499FC8", VA = "0x2499FC8")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x17000376")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x2499FD8", Offset = "0x2499FD8", VA = "0x2499FD8")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x17000377")]
		public SDKResolution resolution
		{
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0x2499FE8", Offset = "0x2499FE8", VA = "0x2499FE8")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x17000378")]
		public Camera cameraInstance
		{
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x2499FF0", Offset = "0x2499FF0", VA = "0x2499FF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		public Camera cameraReference
		{
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0x24993C8", Offset = "0x24993C8", VA = "0x24993C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037A")]
		public Camera hmdCamera
		{
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x2499FF8", Offset = "0x2499FF8", VA = "0x2499FF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		public Transform stage
		{
			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0x249A018", Offset = "0x249A018", VA = "0x249A018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		public Transform stageTransform
		{
			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x249A038", Offset = "0x249A038", VA = "0x249A038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6001D70")]
			[Address(RVA = "0x249A058", Offset = "0x249A058", VA = "0x249A058")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700037E")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x6001D71")]
			[Address(RVA = "0x2498830", Offset = "0x2498830", VA = "0x2498830")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700037F")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x6001D72")]
			[Address(RVA = "0x2498908", Offset = "0x2498908", VA = "0x2498908")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000380")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6001D73")]
			[Address(RVA = "0x2498DCC", Offset = "0x2498DCC", VA = "0x2498DCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000381")]
		public bool canSetPose
		{
			[Token(Token = "0x6001D74")]
			[Address(RVA = "0x249A140", Offset = "0x249A140", VA = "0x249A140")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x2496260", Offset = "0x2496260", VA = "0x2496260")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x2496380", Offset = "0x2496380", VA = "0x2496380")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x2496668", Offset = "0x2496668", VA = "0x2496668")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x2496ED0", Offset = "0x2496ED0", VA = "0x2496ED0")]
		public void Render()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x2497588", Offset = "0x2497588", VA = "0x2497588")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x2497888", Offset = "0x2497888", VA = "0x2497888")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x2498198", Offset = "0x2498198", VA = "0x2498198")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x2496760", Offset = "0x2496760", VA = "0x2496760")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x2499C90", Offset = "0x2499C90", VA = "0x2499C90")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x2499E40", Offset = "0x2499E40", VA = "0x2499E40", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x249A160", Offset = "0x249A160", VA = "0x249A160")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x249A518", Offset = "0x249A518", VA = "0x249A518")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x249A6D0", Offset = "0x249A6D0", VA = "0x249A6D0")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x249A74C", Offset = "0x249A74C", VA = "0x249A74C")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x2499E84", Offset = "0x2499E84", VA = "0x2499E84")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x2496FA4", Offset = "0x2496FA4", VA = "0x2496FA4")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x2497014", Offset = "0x2497014", VA = "0x2497014")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x249751C", Offset = "0x249751C", VA = "0x249751C")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x2498618", Offset = "0x2498618", VA = "0x2498618")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x2498B4C", Offset = "0x2498B4C", VA = "0x2498B4C")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x2498CD0", Offset = "0x2498CD0", VA = "0x2498CD0")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x249920C", Offset = "0x249920C", VA = "0x249920C")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x2499278", Offset = "0x2499278", VA = "0x2499278")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x249A8E0", Offset = "0x249A8E0", VA = "0x249A8E0")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x249AB1C", Offset = "0x249AB1C", VA = "0x249AB1C")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x249ABBC", Offset = "0x249ABBC", VA = "0x249ABBC")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x249AC5C", Offset = "0x249AC5C", VA = "0x249AC5C")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x2497278", Offset = "0x2497278", VA = "0x2497278")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x2498BB8", Offset = "0x2498BB8", VA = "0x2498BB8")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}
	}
	[Token(Token = "0x20005D1")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4001F88")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4001F89")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x4001F8A")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x4001F8B")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x4001F8C")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x4001F8D")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x4001F8E")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x4001F8F")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x4001F90")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4001F91")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x4001F92")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x2498ABC", Offset = "0x2498ABC", VA = "0x2498ABC")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x2498D84", Offset = "0x2498D84", VA = "0x2498D84")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x24991C4", Offset = "0x24991C4", VA = "0x24991C4")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x24992E4", Offset = "0x24992E4", VA = "0x24992E4")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x2498B04", Offset = "0x2498B04", VA = "0x2498B04")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x2498D3C", Offset = "0x2498D3C", VA = "0x2498D3C")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x20005D2")]
	public struct SDKConstants
	{
		[Token(Token = "0x4001F93")]
		public const string SDK_ID = "B84IVQU0FGLF87KZXQ8PBS1FIKBV5RLQ";

		[Token(Token = "0x4001F94")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x4001F95")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x20005D3")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4001F97")]
		NONE = 0,
		[Token(Token = "0x4001F98")]
		GAME = 63
	}
	[Token(Token = "0x20005D4")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x4001F9A")]
		NONE = 0uL,
		[Token(Token = "0x4001F9B")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x4001F9C")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x4001F9D")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x4001F9E")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x4001F9F")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x4001FA0")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4001FA1")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x4001FA2")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x4001FA3")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x4001FA4")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x4001FA5")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x20005D5")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4001FA7")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001FA8")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x4001FA9")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x4001FAA")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x20005D6")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x4001FAC")]
		UNDEFINED,
		[Token(Token = "0x4001FAD")]
		COLOR_BUFFER
	}
	[Token(Token = "0x20005D7")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x4001FAF")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001FB0")]
		ARGB32 = 10u
	}
	[Token(Token = "0x20005D8")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x4001FB2")]
		UNDEFINED,
		[Token(Token = "0x4001FB3")]
		RAW,
		[Token(Token = "0x4001FB4")]
		DIRECTX,
		[Token(Token = "0x4001FB5")]
		OPENGL,
		[Token(Token = "0x4001FB6")]
		VULKAN,
		[Token(Token = "0x4001FB7")]
		METAL
	}
	[Token(Token = "0x20005D9")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x4001FB9")]
		UNDEFINED,
		[Token(Token = "0x4001FBA")]
		LINEAR,
		[Token(Token = "0x4001FBB")]
		SRGB
	}
	[Token(Token = "0x20005DA")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x4001FBD")]
		UNDEFINED,
		[Token(Token = "0x4001FBE")]
		FORWARD,
		[Token(Token = "0x4001FBF")]
		DEFERRED,
		[Token(Token = "0x4001FC0")]
		VERTEX_LIT,
		[Token(Token = "0x4001FC1")]
		UNIVERSAL,
		[Token(Token = "0x4001FC2")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x20005DB")]
	public struct SDKResolution
	{
		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x17000382")]
		public static SDKResolution zero
		{
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x2496758", Offset = "0x2496758", VA = "0x2496758")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x249AE04", Offset = "0x249AE04", VA = "0x249AE04", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005DC")]
	public struct SDKVector3
	{
		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x17000383")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x249B4EC", Offset = "0x249B4EC", VA = "0x249B4EC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000384")]
		public static SDKVector3 one
		{
			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x249B7D0", Offset = "0x249B7D0", VA = "0x249B7D0")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000385")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x249BC00", Offset = "0x249BC00", VA = "0x249BC00")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000386")]
		public static SDKVector3 up
		{
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x249BC10", Offset = "0x249BC10", VA = "0x249BC10")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000387")]
		public static SDKVector3 right
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x249BC20", Offset = "0x249BC20", VA = "0x249BC20")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x249B9E0", Offset = "0x249B9E0", VA = "0x249B9E0")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x249A514", Offset = "0x249A514", VA = "0x249A514")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x249BC30", Offset = "0x249BC30", VA = "0x249BC30")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x249BC40", Offset = "0x249BC40", VA = "0x249BC40")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x249BC50", Offset = "0x249BC50", VA = "0x249BC50")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x249BC60", Offset = "0x249BC60", VA = "0x249BC60")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x249BC70", Offset = "0x249BC70", VA = "0x249BC70", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005DD")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x17000388")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x20CFEE8", Offset = "0x20CFEE8", VA = "0x20CFEE8")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x20D1990", Offset = "0x20D1990", VA = "0x20D1990")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x20D19C0", Offset = "0x20D19C0", VA = "0x20D19C0")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x20D19C4", Offset = "0x20D19C4", VA = "0x20D19C4")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x20D1A7C", Offset = "0x20D1A7C", VA = "0x20D1A7C")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x20D1AF0", Offset = "0x20D1AF0", VA = "0x20D1AF0")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x20D1B94", Offset = "0x20D1B94", VA = "0x20D1B94", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005DE")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x17000389")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0x20CFBAC", Offset = "0x20CFBAC", VA = "0x20CFBAC")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x20D0758", Offset = "0x20D0758", VA = "0x20D0758")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x20D079C", Offset = "0x20D079C", VA = "0x20D079C")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x20D07E0", Offset = "0x20D07E0", VA = "0x20D07E0")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x20D0898", Offset = "0x20D0898", VA = "0x20D0898")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x20D09AC", Offset = "0x20D09AC", VA = "0x20D09AC")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x20D0A04", Offset = "0x20D0A04", VA = "0x20D0A04")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x20D0A40", Offset = "0x20D0A40", VA = "0x20D0A40")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x20D0AD4", Offset = "0x20D0AD4", VA = "0x20D0AD4")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x20D0B00", Offset = "0x20D0B00", VA = "0x20D0B00")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x20D0BEC", Offset = "0x20D0BEC", VA = "0x20D0BEC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005DF")]
	public struct SDKPlane
	{
		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x1700038A")]
		public static SDKPlane empty
		{
			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0x20D12FC", Offset = "0x20D12FC", VA = "0x20D12FC")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x20D1294", Offset = "0x20D1294", VA = "0x20D1294")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x20D1330", Offset = "0x20D1330", VA = "0x20D1330", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E0")]
	public struct SDKPriority
	{
		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x1700038B")]
		public static SDKPriority empty
		{
			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0x20D0384", Offset = "0x20D0384", VA = "0x20D0384")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x20D16C8", Offset = "0x20D16C8", VA = "0x20D16C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E1")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x1700038C")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0x20CE2F4", Offset = "0x20CE2F4", VA = "0x20CE2F4")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x20CE458", Offset = "0x20CE458", VA = "0x20CE458", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E2")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x1700038D")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0x20CF22C", Offset = "0x20CF22C", VA = "0x20CF22C")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x20D0390", Offset = "0x20D0390", VA = "0x20D0390")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x20D03A0", Offset = "0x20D03A0", VA = "0x20D03A0")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x20D03B4", Offset = "0x20D03B4", VA = "0x20D03B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E3")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x1700038E")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0x20D1160", Offset = "0x20D1160", VA = "0x20D1160")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x20D11C4", Offset = "0x20D11C4", VA = "0x20D11C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E4")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x1700038F")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x249B3FC", Offset = "0x249B3FC", VA = "0x249B3FC")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x249B4FC", Offset = "0x249B4FC", VA = "0x249B4FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E5")]
	public struct SDKTexture
	{
		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x17000390")]
		public static SDKTexture empty
		{
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x249AF84", Offset = "0x249AF84", VA = "0x249AF84")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x249AFD0", Offset = "0x249AFD0", VA = "0x249AFD0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E6")]
	public struct SDKTransform
	{
		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x17000391")]
		public static SDKTransform empty
		{
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x249B78C", Offset = "0x249B78C", VA = "0x249B78C")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x249B7E0", Offset = "0x249B7E0", VA = "0x249B7E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E7")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x17000392")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x20CFB78", Offset = "0x20CFB78", VA = "0x20CFB78")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x20CFBD8", Offset = "0x20CFBD8", VA = "0x20CFBD8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E8")]
	public struct SDKControllerState
	{
		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x17000393")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x20CFDEC", Offset = "0x20CFDEC", VA = "0x20CFDEC")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x20CFEFC", Offset = "0x20CFEFC", VA = "0x20CFEFC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E9")]
	public struct SDKPose
	{
		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x17000394")]
		public static SDKPose empty
		{
			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x20D02EC", Offset = "0x20D02EC", VA = "0x20D02EC")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x20D1400", Offset = "0x20D1400", VA = "0x20D1400", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005EA")]
	public static class SDKUtils
	{
		[Token(Token = "0x17000395")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x249B8EC", Offset = "0x249B8EC", VA = "0x249B8EC")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x24997A4", Offset = "0x24997A4", VA = "0x24997A4")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x249B8D4", Offset = "0x249B8D4", VA = "0x249B8D4")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x249AD64", Offset = "0x249AD64", VA = "0x249AD64")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x249B91C", Offset = "0x249B91C", VA = "0x249B91C")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x249ACFC", Offset = "0x249ACFC", VA = "0x249ACFC")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x249B93C", Offset = "0x249B93C", VA = "0x249B93C")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x249B948", Offset = "0x249B948", VA = "0x249B948")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x249B95C", Offset = "0x249B95C", VA = "0x249B95C")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, [Out] Vector3 position, [Out] Quaternion rotation)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x2499460", Offset = "0x2499460", VA = "0x2499460")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x249892C", Offset = "0x249892C", VA = "0x249892C")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x249A460", Offset = "0x249A460", VA = "0x249A460")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x249B9E4", Offset = "0x249B9E4", VA = "0x249B9E4")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x6001DD5")]
		public static bool DestroyObject<T>(T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD6")]
		public static bool DisposeObject<T>(T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x249A980", Offset = "0x249A980", VA = "0x249A980")]
		public static bool CreateTexture(RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x2499F00", Offset = "0x2499F00", VA = "0x2499F00")]
		public static void DestroyTexture(RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x2497170", Offset = "0x2497170", VA = "0x2497170")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x2498684", Offset = "0x2498684", VA = "0x2498684")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x2496494", Offset = "0x2496494", VA = "0x2496494")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x2498DEC", Offset = "0x2498DEC", VA = "0x2498DEC")]
		public static void DisableStandardAssets(Camera cameraInstance, MonoBehaviour[] behaviours, bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x249932C", Offset = "0x249932C", VA = "0x249932C")]
		public static void RestoreStandardAssets(MonoBehaviour[] behaviours, bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x2498F98", Offset = "0x2498F98", VA = "0x2498F98")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace SonicBloom.Koreo.Demos
{
	[Token(Token = "0x20005EB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB21E60", Offset = "0xB21E60")]
	public class ColorAdjuster : MonoBehaviour
	{
		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventID]
		public string eventID;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] objectsToColor;

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x224598C", Offset = "0x224598C", VA = "0x224598C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x2245A9C", Offset = "0x2245A9C", VA = "0x2245A9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x2245C00", Offset = "0x2245C00", VA = "0x2245C00")]
		private void AdjustColor(KoreographyEvent evt, int sampleTime, int sampleDelta, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x2245CC4", Offset = "0x2245CC4", VA = "0x2245CC4")]
		private void ApplyColorToObjects(Color color)
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x2245D50", Offset = "0x2245D50", VA = "0x2245D50")]
		public ColorAdjuster()
		{
		}
	}
	[Token(Token = "0x20005EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB21E98", Offset = "0xB21E98")]
	public class CubeScaler : MonoBehaviour
	{
		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventID]
		public string eventID;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minScale;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxScale;

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x22068C8", Offset = "0x22068C8", VA = "0x22068C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x22069D8", Offset = "0x22069D8", VA = "0x22069D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x2206B3C", Offset = "0x2206B3C", VA = "0x2206B3C")]
		private void AdjustScale(KoreographyEvent evt, int sampleTime, int sampleDelta, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x2206C08", Offset = "0x2206C08", VA = "0x2206C08")]
		public CubeScaler()
		{
		}
	}
	[Token(Token = "0x20005ED")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB21ED0", Offset = "0xB21ED0")]
	public class DemoControlsUI : MonoBehaviour
	{
		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource audioCom;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float pitch;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIStyle rightAlignStyle;

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x220E390", Offset = "0x220E390", VA = "0x220E390")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x220E3C4", Offset = "0x220E3C4", VA = "0x220E3C4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x220E894", Offset = "0x220E894", VA = "0x220E894")]
		public DemoControlsUI()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB21F08", Offset = "0xB21F08")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB21F08", Offset = "0xB21F08")]
	public class EmitParticlesOnSpan : MonoBehaviour
	{
		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventID]
		public string eventID;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float particlesPerBeat;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem particleCom;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lastEmitFrame;

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x286B5D8", Offset = "0x286B5D8", VA = "0x286B5D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x286B718", Offset = "0x286B718", VA = "0x286B718")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x286B87C", Offset = "0x286B87C", VA = "0x286B87C")]
		private void OnParticleControlEvent(KoreographyEvent evt)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x286B948", Offset = "0x286B948", VA = "0x286B948")]
		public EmitParticlesOnSpan()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB21F94", Offset = "0xB21F94")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB21F94", Offset = "0xB21F94")]
	public class MusicalImpulse : MonoBehaviour
	{
		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventID]
		public string eventID;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float jumpSpeed;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody rigidbodyCom;

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x2252270", Offset = "0x2252270", VA = "0x2252270")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x22523B0", Offset = "0x22523B0", VA = "0x22523B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x2252514", Offset = "0x2252514", VA = "0x2252514")]
		private void AddImpulse(KoreographyEvent evt)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x2252554", Offset = "0x2252554", VA = "0x2252554")]
		public MusicalImpulse()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB22020", Offset = "0xB22020")]
	public class TempoSwitch : MonoBehaviour
	{
		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Behaviour[] quarterNoteGroup;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Behaviour[] eighthNoteGroup;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int lastQuarterNote;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int lastEighthNote;

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x204D9D8", Offset = "0x204D9D8", VA = "0x204D9D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x204DAC4", Offset = "0x204DAC4", VA = "0x204DAC4")]
		private void SwitchGroup(Behaviour[] behaviours, bool bGroupOn)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x204DB40", Offset = "0x204DB40", VA = "0x204DB40")]
		public TempoSwitch()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB22058", Offset = "0xB22058")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB22058", Offset = "0xB22058")]
	public class UIMessageSetter : MonoBehaviour
	{
		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventID]
		public string eventID;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text guiTextCom;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private KoreographyEvent curTextEvent;

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x263F788", Offset = "0x263F788", VA = "0x263F788")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x263F8C8", Offset = "0x263F8C8", VA = "0x263F8C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x263FA2C", Offset = "0x263FA2C", VA = "0x263FA2C")]
		private void UpdateText(KoreographyEvent evt, int sampleTime, int sampleDelta, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x263FB5C", Offset = "0x263FB5C", VA = "0x263FB5C")]
		public UIMessageSetter()
		{
		}
	}
}
namespace AkilliMum.Standard.Invisible
{
	[Token(Token = "0x20005F2")]
	public class SimpleRotater : MonoBehaviour
	{
		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float XSpeed;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float YSpeed;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ZSpeed;

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x24A24F8", Offset = "0x24A24F8", VA = "0x24A24F8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x24A2540", Offset = "0x24A2540", VA = "0x24A2540")]
		public SimpleRotater()
		{
		}
	}
}
namespace AkilliMum.SRP.Mirror
{
	[Token(Token = "0x20005F3")]
	public class ExecuteOnMainThread : MonoBehaviour
	{
		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<ThreadAction> _actions;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static object Lock;

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x2870870", Offset = "0x2870870", VA = "0x2870870")]
		protected void Execute(Action action, string groupName = "", float delay = 0f, bool stopOnTimeScale = true)
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x2870A58", Offset = "0x2870A58", VA = "0x2870A58")]
		protected void CancelExecute(string groupName)
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x2870C80", Offset = "0x2870C80", VA = "0x2870C80", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x2870FEC", Offset = "0x2870FEC", VA = "0x2870FEC")]
		public ExecuteOnMainThread()
		{
		}
	}
	[Token(Token = "0x20005F4")]
	internal class ThreadAction
	{
		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A49C", Offset = "0xB2A49C")]
		private Action <Action>k__BackingField;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A4AC", Offset = "0xB2A4AC")]
		private bool <IsReady>k__BackingField;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A4BC", Offset = "0xB2A4BC")]
		private bool <StopOnTimeScale>k__BackingField;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A4CC", Offset = "0xB2A4CC")]
		private string <GroupName>k__BackingField;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private System.Timers.Timer _timer;

		[Token(Token = "0x17000396")]
		public Action Action
		{
			[Token(Token = "0x6001E01")]
			[Address(RVA = "0x2052A50", Offset = "0x2052A50", VA = "0x2052A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB325B0", Offset = "0xB325B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E02")]
			[Address(RVA = "0x2052A58", Offset = "0x2052A58", VA = "0x2052A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB325C0", Offset = "0xB325C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public bool IsReady
		{
			[Token(Token = "0x6001E03")]
			[Address(RVA = "0x2052A60", Offset = "0x2052A60", VA = "0x2052A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB325D0", Offset = "0xB325D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E04")]
			[Address(RVA = "0x2052A68", Offset = "0x2052A68", VA = "0x2052A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB325E0", Offset = "0xB325E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public bool StopOnTimeScale
		{
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x2052A74", Offset = "0x2052A74", VA = "0x2052A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB325F0", Offset = "0xB325F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E06")]
			[Address(RVA = "0x2052A7C", Offset = "0x2052A7C", VA = "0x2052A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32600", Offset = "0xB32600")]
			set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public string GroupName
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x2052A88", Offset = "0x2052A88", VA = "0x2052A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32610", Offset = "0xB32610")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x2052A90", Offset = "0x2052A90", VA = "0x2052A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32620", Offset = "0xB32620")]
			set
			{
			}
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x2052A98", Offset = "0x2052A98", VA = "0x2052A98")]
		public void Start(float delay)
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x2052B90", Offset = "0x2052B90", VA = "0x2052B90")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x2052BB0", Offset = "0x2052BB0", VA = "0x2052BB0")]
		public void Continue()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x2052BD0", Offset = "0x2052BD0", VA = "0x2052BD0")]
		public ThreadAction()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x2052BD8", Offset = "0x2052BD8", VA = "0x2052BD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32630", Offset = "0xB32630")]
		private void <Start>b__17_0(object o, ElapsedEventArgs e)
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public class EffectsGui : ExecuteOnMainThread
	{
		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Cam;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text Text;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _selectedShader;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EffectBase[] _behaviours;

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x22123E8", Offset = "0x22123E8", VA = "0x22123E8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x2212458", Offset = "0x2212458", VA = "0x2212458")]
		public void ChangeEffect()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x2212574", Offset = "0x2212574", VA = "0x2212574")]
		public void LoadShaderScene()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x22125E8", Offset = "0x22125E8", VA = "0x22125E8")]
		public void LoadEffectsScene()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x221265C", Offset = "0x221265C", VA = "0x221265C")]
		public EffectsGui()
		{
		}
	}
	[Token(Token = "0x20005F6")]
	public class FpsGui : MonoBehaviour
	{
		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Text;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float updateInterval;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float accum;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int frames;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timeleft;

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x2879510", Offset = "0x2879510", VA = "0x2879510")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x287951C", Offset = "0x287951C", VA = "0x287951C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x2879630", Offset = "0x2879630", VA = "0x2879630")]
		public FpsGui()
		{
		}
	}
	[Token(Token = "0x20005F7")]
	public class MainGui : ExecuteOnMainThread
	{
		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light Light;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material Day;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material Night;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _day;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text ShaderName;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject NormalFloor;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject MirrorFloor;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject MirrorBlurFloor;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject MirrorBlurTexFloor;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject MirrorRefFloor;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject MirrorRefTexFloor;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject MirrorTexFloorSurf;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject MirrorBlurTexFloorSurf;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject MirrorRefTexFloorSurf;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject MirrorAlphaTexFloorSurf;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject MirrorTransparent;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject MirrorAlphaReflect;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject Refraction;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject Blur;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject Mosaic;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject PostEffect;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject Portal;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject Ghost;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject Car;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject Heli;

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x2527A2C", Offset = "0x2527A2C", VA = "0x2527A2C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x2527AD4", Offset = "0x2527AD4", VA = "0x2527AD4")]
		public void Off()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x2527C80", Offset = "0x2527C80", VA = "0x2527C80")]
		public void ActivateShadows()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x2527A58", Offset = "0x2527A58", VA = "0x2527A58")]
		public void ActivateDefault()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x2527CC8", Offset = "0x2527CC8", VA = "0x2527CC8")]
		public void SwitchSpinning()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x2527DB0", Offset = "0x2527DB0", VA = "0x2527DB0")]
		public void SwitchDayNight()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x2527E2C", Offset = "0x2527E2C", VA = "0x2527E2C")]
		public void ActivateMirror()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x2528214", Offset = "0x2528214", VA = "0x2528214")]
		public void ActivateRefraction()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x2528290", Offset = "0x2528290", VA = "0x2528290")]
		public void ActivateBlur()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x252830C", Offset = "0x252830C", VA = "0x252830C")]
		public void ActivateDistortion()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x252839C", Offset = "0x252839C", VA = "0x252839C")]
		public void ActivateMosaic()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x2528418", Offset = "0x2528418", VA = "0x2528418")]
		public void ActivatePostEffect()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x2528494", Offset = "0x2528494", VA = "0x2528494")]
		public void ActivatePortal()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x25284C8", Offset = "0x25284C8", VA = "0x25284C8")]
		public void ActivateGhost()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x2528558", Offset = "0x2528558", VA = "0x2528558")]
		public void LoadShaderScene()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x25285CC", Offset = "0x25285CC", VA = "0x25285CC")]
		public void LoadEffectsScene()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x2528640", Offset = "0x2528640", VA = "0x2528640")]
		public MainGui()
		{
		}
	}
	[Token(Token = "0x20005F8")]
	public class SceneChanger : MonoBehaviour
	{
		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x249BD40", Offset = "0x249BD40", VA = "0x249BD40")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x249BD4C", Offset = "0x249BD4C", VA = "0x249BD4C")]
		public void Back()
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x249BDC0", Offset = "0x249BDC0", VA = "0x249BDC0")]
		public void Blur()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x249BE34", Offset = "0x249BE34", VA = "0x249BE34")]
		public void Mirror()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x249BEA8", Offset = "0x249BEA8", VA = "0x249BEA8")]
		public void Mirror_()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x249BF1C", Offset = "0x249BF1C", VA = "0x249BF1C")]
		public void MirrorBlur()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x249BF90", Offset = "0x249BF90", VA = "0x249BF90")]
		public void MirrorBlur_()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x249C004", Offset = "0x249C004", VA = "0x249C004")]
		public void MirrorBlurTex()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x249C078", Offset = "0x249C078", VA = "0x249C078")]
		public void MirrorBlurTex_()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x249C0EC", Offset = "0x249C0EC", VA = "0x249C0EC")]
		public void MirrorRefracted()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x249C160", Offset = "0x249C160", VA = "0x249C160")]
		public void MirrorRefracted_()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x249C1D4", Offset = "0x249C1D4", VA = "0x249C1D4")]
		public void MirrorTex()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x249C248", Offset = "0x249C248", VA = "0x249C248")]
		public void MirrorTex_()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x249C2BC", Offset = "0x249C2BC", VA = "0x249C2BC")]
		public void MirrorTexRefracted()
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x249C330", Offset = "0x249C330", VA = "0x249C330")]
		public void Mosaic()
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x249C3A4", Offset = "0x249C3A4", VA = "0x249C3A4")]
		public void RefractionFlat()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x249C418", Offset = "0x249C418", VA = "0x249C418")]
		public void MirrorMask()
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x249C48C", Offset = "0x249C48C", VA = "0x249C48C")]
		public void MirrorMaskRefracted()
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x249C500", Offset = "0x249C500", VA = "0x249C500")]
		public void MirrorMaskRipple()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x249C574", Offset = "0x249C574", VA = "0x249C574")]
		public void MirrorMaskWave()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x249C5E8", Offset = "0x249C5E8", VA = "0x249C5E8")]
		public void MirrorRipple()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x249C65C", Offset = "0x249C65C", VA = "0x249C65C")]
		public void MirrorWave()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x249C6D0", Offset = "0x249C6D0", VA = "0x249C6D0")]
		public void MirrorAR()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x249C744", Offset = "0x249C744", VA = "0x249C744")]
		public void MirrorDepth()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x249C7B8", Offset = "0x249C7B8", VA = "0x249C7B8")]
		public void MirrorGlass()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x249C82C", Offset = "0x249C82C", VA = "0x249C82C")]
		public SceneChanger()
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public class SimpleCameraMove : MonoBehaviour
	{
		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lookSpeed;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float moveSpeed;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float rotationX;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float rotationY;

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x24A1E38", Offset = "0x24A1E38", VA = "0x24A1E38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x24A2114", Offset = "0x24A2114", VA = "0x24A2114")]
		public SimpleCameraMove()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public class SimpleMover : MonoBehaviour
	{
		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MoveOnXMin;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MoveOnXMax;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isGoingLeft;

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x24A2194", Offset = "0x24A2194", VA = "0x24A2194")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x24A2388", Offset = "0x24A2388", VA = "0x24A2388")]
		public SimpleMover()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	public class SimpleRotater : MonoBehaviour
	{
		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float XSpeed;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float YSpeed;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ZSpeed;

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x24A24A8", Offset = "0x24A24A8", VA = "0x24A24A8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x24A24F0", Offset = "0x24A24F0", VA = "0x24A24F0")]
		public SimpleRotater()
		{
		}
	}
	[Token(Token = "0x20005FC")]
	public class SimpleRotaterAround : MonoBehaviour
	{
		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Around;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Angle;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ToRotateAround;

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x24A2548", Offset = "0x24A2548", VA = "0x24A2548")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x24A25B4", Offset = "0x24A25B4", VA = "0x24A25B4")]
		public SimpleRotaterAround()
		{
		}
	}
	[Token(Token = "0x20005FD")]
	public class StoreTransform
	{
		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 eulerAngles;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion rotation;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 localScale;

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x27BFD7C", Offset = "0x27BFD7C", VA = "0x27BFD7C")]
		public StoreTransform()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	public static class TransformExt
	{
		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x263C060", Offset = "0x263C060", VA = "0x263C060")]
		public static StoreTransform SaveLocal(this Transform aTransform)
		{
			return null;
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x263C120", Offset = "0x263C120", VA = "0x263C120")]
		public static StoreTransform SaveWorld(this Transform aTransform)
		{
			return null;
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x263C1E0", Offset = "0x263C1E0", VA = "0x263C1E0")]
		public static void LoadLocal(this Transform aTransform, StoreTransform aData)
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x263C258", Offset = "0x263C258", VA = "0x263C258")]
		public static void LoadWorld(this Transform aTransform, StoreTransform aData)
		{
		}
	}
	[Token(Token = "0x20005FF")]
	public class EffectBase : MonoBehaviour
	{
		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x22123E0", Offset = "0x22123E0", VA = "0x22123E0")]
		public EffectBase()
		{
		}
	}
	[Token(Token = "0x2000600")]
	[ExecuteAlways]
	public class CameraShade : EffectBase
	{
		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A4DC", Offset = "0xB2A4DC")]
		public bool IsEnabled;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A514", Offset = "0xB2A514")]
		public string Name;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A54C", Offset = "0xB2A54C")]
		public bool IsMirrorInMirror;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A584", Offset = "0xB2A584")]
		public string MirrorInMirrorId;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A5BC", Offset = "0xB2A5BC")]
		public bool TurnOffOcclusion;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A5F4", Offset = "0xB2A5F4")]
		public bool UseObjectBoundsForViewport;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A62C", Offset = "0xB2A62C")]
		public DeviceType DeviceType;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A664", Offset = "0xB2A664")]
		public WorkType WorkType;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A69C", Offset = "0xB2A69C")]
		public FollowVector UpVector;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A6D4", Offset = "0xB2A6D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2A6D4", Offset = "0xB2A6D4")]
		public float Intensity;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A728", Offset = "0xB2A728")]
		public bool DisableGBuffer;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A760", Offset = "0xB2A760")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2A760", Offset = "0xB2A760")]
		public int RunForEveryXthFrame;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2A7B4", Offset = "0xB2A7B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A7B4", Offset = "0xB2A7B4")]
		public int CameraLODLevel;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2A808", Offset = "0xB2A808")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A808", Offset = "0xB2A808")]
		public int TextureLODLevel;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _oldTextureLODLevel;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A85C", Offset = "0xB2A85C")]
		public bool HDR;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _oldHDR;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A894", Offset = "0xB2A894")]
		public bool MSAA;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A8CC", Offset = "0xB2A8CC")]
		public bool DisablePixelLights;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IList<SceneLights> _additionalLights;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A904", Offset = "0xB2A904")]
		public bool Shadow;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A93C", Offset = "0xB2A93C")]
		public bool Cull;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A974", Offset = "0xB2A974")]
		public float CullDistance;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A9AC", Offset = "0xB2A9AC")]
		public TextureSizeType TextureSize;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2A9E4", Offset = "0xB2A9E4")]
		public int ManualSize;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _oldTextureSize;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AA1C", Offset = "0xB2AA1C")]
		public bool UseCameraClipPlane;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AA54", Offset = "0xB2AA54")]
		public float ClipPlaneOffset;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AA8C", Offset = "0xB2AA8C")]
		public LayerMask ReflectLayers;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AAC4", Offset = "0xB2AAC4")]
		public LayerMask DirectLayers;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AAFC", Offset = "0xB2AAFC")]
		public bool MixBlackColor;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AB34", Offset = "0xB2AB34")]
		public bool EnableDepthBlur;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		private bool _oldEnableDepthBlur;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AB6C", Offset = "0xB2AB6C")]
		public Shader DepthBlurShader;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material _depthBlurMaterial;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2ABA4", Offset = "0xB2ABA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2ABA4", Offset = "0xB2ABA4")]
		public float DepthBlurCutoff;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2ABF8", Offset = "0xB2ABF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2ABF8", Offset = "0xB2ABF8")]
		public int DepthBlurIterations;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2AC4C", Offset = "0xB2AC4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AC4C", Offset = "0xB2AC4C")]
		public float DepthBlurSurfacePower;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2ACA0", Offset = "0xB2ACA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2ACA0", Offset = "0xB2ACA0")]
		public int DepthBlurHorizontalMultiplier;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2ACF8", Offset = "0xB2ACF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2ACF8", Offset = "0xB2ACF8")]
		public int DepthBlurVerticalMultiplier;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AD50", Offset = "0xB2AD50")]
		public bool EnableSimpleDepth;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		private bool _oldEnableSimpleDepth;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AD88", Offset = "0xB2AD88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2AD88", Offset = "0xB2AD88")]
		public float SimpleDepthCutoff;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2ADDC", Offset = "0xB2ADDC")]
		public Shade[] Shades;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Renderer> _renderers;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AE14", Offset = "0xB2AE14")]
		public bool EnableFinalShader;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AE4C", Offset = "0xB2AE4C")]
		public Shader FinalShader;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material _finalMaterial;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AE84", Offset = "0xB2AE84")]
		public bool EnableARMode;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AEBC", Offset = "0xB2AEBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2AEBC", Offset = "0xB2AEBC")]
		public int Iterations;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AF10", Offset = "0xB2AF10")]
		public float NeighbourPixels;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AF48", Offset = "0xB2AF48")]
		public float BlockSize;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AF80", Offset = "0xB2AF80")]
		public bool EnableRefraction;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AFB8", Offset = "0xB2AFB8")]
		public Texture2D RefractionTexture;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2AFF0", Offset = "0xB2AFF0")]
		public float Refraction;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B028", Offset = "0xB2B028")]
		public bool EnableWaves;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B060", Offset = "0xB2B060")]
		public Texture2D WaveNoiseTexture;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B098", Offset = "0xB2B098")]
		public float WaveSize;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B0D0", Offset = "0xB2B0D0")]
		public float WaveDistortion;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B108", Offset = "0xB2B108")]
		public float WaveSpeed;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B140", Offset = "0xB2B140")]
		public bool EnableRipples;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B178", Offset = "0xB2B178")]
		public Texture2D RippleTexture;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B1B0", Offset = "0xB2B1B0")]
		public float RippleSize;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B1E8", Offset = "0xB2B1E8")]
		public float RippleRefraction;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B220", Offset = "0xB2B220")]
		public float RippleDensity;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B258", Offset = "0xB2B258")]
		public float RippleSpeed;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B290", Offset = "0xB2B290")]
		public bool EnableMask;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B2C8", Offset = "0xB2B2C8")]
		public Texture2D MaskTexture;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B300", Offset = "0xB2B300")]
		public Vector2 MaskTiling;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B338", Offset = "0xB2B338")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B338", Offset = "0xB2B338")]
		public float MaskCutoff;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B38C", Offset = "0xB2B38C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B38C", Offset = "0xB2B38C")]
		public float MaskEdgeDarkness;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int _stereoEye;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private bool _isObjectVisible;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		private bool _usePreviousTexture;

		[Token(Token = "0x40020BE")]
		public const string CamNameStartsWith = "Mirror Refl Camera id ";

		[NonSerialized]
		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Camera _camera;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Camera _cameraAttachedTo;

		[NonSerialized]
		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public ScriptableRenderContext _context;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private GameObject ReflectionCameraPrefab;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject _reflectionCameraPrefabInstance;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private System.Collections.Hashtable _reflectionCameras;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private RenderTexture _reflectionTexture1;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private RenderTexture _reflectionTexture1Other;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private RenderTexture _reflectionTexture2;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private RenderTexture _reflectionTexture2Other;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private RenderTexture _reflectionTexture3;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private RenderTexture _reflectionTexture3Other;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private RenderTexture _opaqueTexture1;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private RenderTexture _opaqueTexture1Other;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private RenderTexture _reflectionTextureDepth;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private RenderTexture _reflectionTextureOtherDepth;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private RenderTexture _reflectionTexture1_copy;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private RenderTexture _reflectionTexture1Other_copy;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private RenderTexture _reflectionTexture2_copy;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private RenderTexture _reflectionTexture2Other_copy;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private RenderTexture _reflectionTexture3_copy;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private RenderTexture _reflectionTexture3Other_copy;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private RenderTexture _reflectionTextureDepth_copy;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private RenderTexture _reflectionTextureOtherDepth_copy;

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x22D7800", Offset = "0x22D7800", VA = "0x22D7800", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x22D78D4", Offset = "0x22D78D4", VA = "0x22D78D4")]
		public void InitializeProperties()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x22D7AC8", Offset = "0x22D7AC8", VA = "0x22D7AC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x22D7ACC", Offset = "0x22D7ACC", VA = "0x22D7ACC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x22D7AD0", Offset = "0x22D7AD0", VA = "0x22D7AD0")]
		public void ExecuteBeforeCameraRender(ScriptableRenderContext context, Camera cameraSrp)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x22D7B34", Offset = "0x22D7B34", VA = "0x22D7B34", Slot = "5")]
		public virtual IList<Camera> RenderReflective(CameraShadeMultiManager manager, [Optional] Camera sentCamera, bool invert = true, bool renderCam = true)
		{
			return null;
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x22DA354", Offset = "0x22DA354", VA = "0x22DA354")]
		private Camera GetCamera(Camera sentCamera)
		{
			return null;
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x22DA400", Offset = "0x22DA400", VA = "0x22DA400", Slot = "6")]
		public virtual void CommonRender(ScriptableRenderContext context, Camera cameraSrp)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x22D7C90", Offset = "0x22D7C90", VA = "0x22D7C90")]
		private Camera RenderMe(CameraShadeMultiManager manager, Camera sentCamera, bool invert = true, bool renderCam = true)
		{
			return null;
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x22DD868", Offset = "0x22DD868", VA = "0x22DD868")]
		private Rect GetBoundRect(Matrix4x4 mat)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x22DDD28", Offset = "0x22DDD28", VA = "0x22DDD28")]
		private Matrix4x4 GetBoundMatrix(Rect rect)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x22DDCB8", Offset = "0x22DDCB8", VA = "0x22DDCB8")]
		private Vector3 WorldPointToViewport(Matrix4x4 mat, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x22DCB10", Offset = "0x22DCB10", VA = "0x22DCB10")]
		public bool CheckFrustum(Camera cam)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x22DA404", Offset = "0x22DA404", VA = "0x22DA404")]
		public bool IsObjectVisible(Camera cam)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x22DCB18", Offset = "0x22DCB18", VA = "0x22DCB18")]
		public void UpdateMaterialProperties(Camera sentCamera)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x22DDF24", Offset = "0x22DDF24", VA = "0x22DDF24")]
		public IList<RenderTexture> CopyTextures()
		{
			return null;
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x22DE818", Offset = "0x22DE818", VA = "0x22DE818")]
		public void PasteTextures(IList<RenderTexture> textures)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x22DC844", Offset = "0x22DC844", VA = "0x22DC844")]
		private Vector4 CameraSpacePlane(Matrix4x4 worldToCameraMatrix, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x22DEC4C", Offset = "0x22DEC4C", VA = "0x22DEC4C")]
		private static float sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x22DC934", Offset = "0x22DC934", VA = "0x22DC934")]
		private static void MakeProjectionMatrixOblique(Matrix4x4 matrix, Vector4 clipPlane)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x22DEC6C", Offset = "0x22DEC6C", VA = "0x22DEC6C", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x22DBEF0", Offset = "0x22DBEF0", VA = "0x22DBEF0")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x22DF404", Offset = "0x22DF404", VA = "0x22DF404")]
		public int[] GetTextureSizes()
		{
			return null;
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x22DA574", Offset = "0x22DA574", VA = "0x22DA574")]
		private void CreateMirrorObjects(Camera currentCamera, [Out] Camera reflectionCamera)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x22DF58C", Offset = "0x22DF58C", VA = "0x22DF58C")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x22DC5A0", Offset = "0x22DC5A0", VA = "0x22DC5A0")]
		private void CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x6001E69")]
		private T CopyComponent<T>(T original, GameObject destination) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x22DF6C0", Offset = "0x22DF6C0", VA = "0x22DF6C0")]
		public CameraShade()
		{
		}
	}
	[Token(Token = "0x2000601")]
	public enum FollowVector
	{
		[Token(Token = "0x40020D8")]
		None = 0,
		[Token(Token = "0x40020D9")]
		RedX = 1,
		[Token(Token = "0x40020DA")]
		RedX_Negative = 4,
		[Token(Token = "0x40020DB")]
		GreenY = 2,
		[Token(Token = "0x40020DC")]
		GreenY_Negative = 5,
		[Token(Token = "0x40020DD")]
		BlueZ = 3,
		[Token(Token = "0x40020DE")]
		BlueZ_Negative = 6
	}
	[Token(Token = "0x2000602")]
	public enum WorkType
	{
		[Token(Token = "0x40020E0")]
		Reflect = 1,
		[Token(Token = "0x40020E1")]
		Direct,
		[Token(Token = "0x40020E2")]
		Transparent,
		[Token(Token = "0x40020E3")]
		Water
	}
	[Token(Token = "0x2000603")]
	public enum TextureSizeType
	{
		[Token(Token = "0x40020E5")]
		Manual = 0,
		[Token(Token = "0x40020E6")]
		x4 = 6,
		[Token(Token = "0x40020E7")]
		x2 = 5,
		[Token(Token = "0x40020E8")]
		Full = 1,
		[Token(Token = "0x40020E9")]
		Half = 2,
		[Token(Token = "0x40020EA")]
		Quarter = 4
	}
	[Token(Token = "0x2000604")]
	public enum DeviceType
	{
		[Token(Token = "0x40020EC")]
		Normal = 0,
		[Token(Token = "0x40020ED")]
		OculusVR = 1,
		[Token(Token = "0x40020EE")]
		OculusVR_RiftS = 2,
		[Token(Token = "0x40020EF")]
		OculusVR_Quest = 3,
		[Token(Token = "0x40020F0")]
		AR = 30
	}
	[Serializable]
	[Token(Token = "0x2000605")]
	public class Shade
	{
		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject ObjectToShade;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material MaterialToChange;

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x24A107C", Offset = "0x24A107C", VA = "0x24A107C")]
		public Shade()
		{
		}
	}
	[Token(Token = "0x2000606")]
	public class SceneLights
	{
		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Light Light;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Intensity;

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x24A0FD0", Offset = "0x24A0FD0", VA = "0x24A0FD0")]
		public SceneLights()
		{
		}
	}
	[Token(Token = "0x2000607")]
	public class CameraShadeMultiManager : EffectBase
	{
		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IList<CameraShade> _originalCameraShades;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraShade[,] _copyCameraShades;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IList<RenderTexture>[,] _copyTextures;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B3E4", Offset = "0xB2B3E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B3E4", Offset = "0xB2B3E4")]
		public int Depth;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B438", Offset = "0xB2B438")]
		public string MirrorInMirrorId;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B470", Offset = "0xB2B470")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B470", Offset = "0xB2B470")]
		public float DecreaseSize2OverXTimes;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B4C4", Offset = "0xB2B4C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B4C4", Offset = "0xB2B4C4")]
		public int ShadowDepth;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B518", Offset = "0xB2B518")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B518", Offset = "0xB2B518")]
		public int DisableMSAAAfterXthDepth;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2B56C", Offset = "0xB2B56C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B56C", Offset = "0xB2B56C")]
		public int DisablePixelLightsAfterXthDepth;

		[NonSerialized]
		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Camera _camera;

		[NonSerialized]
		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ScriptableRenderContext _context;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera[] cameraList;

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x2239944", Offset = "0x2239944", VA = "0x2239944")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x223A0F0", Offset = "0x223A0F0", VA = "0x223A0F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x2239A18", Offset = "0x2239A18", VA = "0x2239A18")]
		public void InitializeProperties()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x223A1BC", Offset = "0x223A1BC", VA = "0x223A1BC")]
		public void ExecuteBeforeCameraRender(ScriptableRenderContext context, Camera cameraSrp)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x223B4A8", Offset = "0x223B4A8", VA = "0x223B4A8")]
		private int GetNextCamIndex(int camIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x223A1F0", Offset = "0x223A1F0", VA = "0x223A1F0")]
		public void RenderReflective()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x223B568", Offset = "0x223B568", VA = "0x223B568")]
		public CameraShadeMultiManager()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x223B614", Offset = "0x223B614", VA = "0x223B614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32680", Offset = "0xB32680")]
		private bool <InitializeProperties>b__13_0(CameraShade a)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000608")]
	public class Container
	{
		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B5C0", Offset = "0xB2B5C0")]
		private Camera <Camera>k__BackingField;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B5D0", Offset = "0xB2B5D0")]
		private CameraShade <CameraShade>k__BackingField;

		[Token(Token = "0x1700039A")]
		public Camera Camera
		{
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0x2204EB4", Offset = "0x2204EB4", VA = "0x2204EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32690", Offset = "0xB32690")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0x2204EBC", Offset = "0x2204EBC", VA = "0x2204EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB326A0", Offset = "0xB326A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public CameraShade CameraShade
		{
			[Token(Token = "0x6001E77")]
			[Address(RVA = "0x2204EC4", Offset = "0x2204EC4", VA = "0x2204EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB326B0", Offset = "0xB326B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E78")]
			[Address(RVA = "0x2204ECC", Offset = "0x2204ECC", VA = "0x2204ECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB326C0", Offset = "0xB326C0")]
			set
			{
			}
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x2204ED4", Offset = "0x2204ED4", VA = "0x2204ED4")]
		public Container()
		{
		}
	}
	[Token(Token = "0x2000609")]
	public static class Extensions
	{
		[Token(Token = "0x6001E7A")]
		public static void CopyTo<T>(this Component comp, T target) where T : Component, new()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x2872634", Offset = "0x2872634", VA = "0x2872634")]
		public static bool IsVisibleFrom(this Renderer renderer, Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x2872738", Offset = "0x2872738", VA = "0x2872738")]
		public static void SimpleCopy(object source, object target)
		{
		}
	}
}
namespace Mirror
{
	[StructLayout(3, CharSet = CharSet.Auto)]
	[Token(Token = "0x2000610")]
	public static class GeneratedNetworkCode
	{
		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x23C8FCC", Offset = "0x23C8FCC", VA = "0x23C8FCC")]
		public static ReadyMessage _Read_Mirror.ReadyMessage(NetworkReader reader)
		{
			return default(ReadyMessage);
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x23C8FD4", Offset = "0x23C8FD4", VA = "0x23C8FD4")]
		public static void _Write_Mirror.ReadyMessage(NetworkWriter writer, ReadyMessage value)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x23C8FD8", Offset = "0x23C8FD8", VA = "0x23C8FD8")]
		public static NotReadyMessage _Read_Mirror.NotReadyMessage(NetworkReader reader)
		{
			return default(NotReadyMessage);
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x23C8FE0", Offset = "0x23C8FE0", VA = "0x23C8FE0")]
		public static void _Write_Mirror.NotReadyMessage(NetworkWriter writer, NotReadyMessage value)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x23C8FE4", Offset = "0x23C8FE4", VA = "0x23C8FE4")]
		public static AddPlayerMessage _Read_Mirror.AddPlayerMessage(NetworkReader reader)
		{
			return default(AddPlayerMessage);
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x23C8FEC", Offset = "0x23C8FEC", VA = "0x23C8FEC")]
		public static void _Write_Mirror.AddPlayerMessage(NetworkWriter writer, AddPlayerMessage value)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x23C8FF0", Offset = "0x23C8FF0", VA = "0x23C8FF0")]
		public static SceneMessage _Read_Mirror.SceneMessage(NetworkReader reader)
		{
			return default(SceneMessage);
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x23C90A0", Offset = "0x23C90A0", VA = "0x23C90A0")]
		public static SceneOperation _Read_Mirror.SceneOperation(NetworkReader reader)
		{
			return default(SceneOperation);
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x23C910C", Offset = "0x23C910C", VA = "0x23C910C")]
		public static void _Write_Mirror.SceneMessage(NetworkWriter writer, SceneMessage value)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x23C91AC", Offset = "0x23C91AC", VA = "0x23C91AC")]
		public static void _Write_Mirror.SceneOperation(NetworkWriter writer, SceneOperation value)
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x23C9220", Offset = "0x23C9220", VA = "0x23C9220")]
		public static CommandMessage _Read_Mirror.CommandMessage(NetworkReader reader)
		{
			return default(CommandMessage);
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x23C92F4", Offset = "0x23C92F4", VA = "0x23C92F4")]
		public static void _Write_Mirror.CommandMessage(NetworkWriter writer, CommandMessage value)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x23C939C", Offset = "0x23C939C", VA = "0x23C939C")]
		public static RpcMessage _Read_Mirror.RpcMessage(NetworkReader reader)
		{
			return default(RpcMessage);
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x23C9470", Offset = "0x23C9470", VA = "0x23C9470")]
		public static void _Write_Mirror.RpcMessage(NetworkWriter writer, RpcMessage value)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x23C9518", Offset = "0x23C9518", VA = "0x23C9518")]
		public static SpawnMessage _Read_Mirror.SpawnMessage(NetworkReader reader)
		{
			return default(SpawnMessage);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x23C9664", Offset = "0x23C9664", VA = "0x23C9664")]
		public static void _Write_Mirror.SpawnMessage(NetworkWriter writer, SpawnMessage value)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x23C9778", Offset = "0x23C9778", VA = "0x23C9778")]
		public static ObjectSpawnStartedMessage _Read_Mirror.ObjectSpawnStartedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnStartedMessage);
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x23C9780", Offset = "0x23C9780", VA = "0x23C9780")]
		public static void _Write_Mirror.ObjectSpawnStartedMessage(NetworkWriter writer, ObjectSpawnStartedMessage value)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x23C9784", Offset = "0x23C9784", VA = "0x23C9784")]
		public static ObjectSpawnFinishedMessage _Read_Mirror.ObjectSpawnFinishedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnFinishedMessage);
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x23C978C", Offset = "0x23C978C", VA = "0x23C978C")]
		public static void _Write_Mirror.ObjectSpawnFinishedMessage(NetworkWriter writer, ObjectSpawnFinishedMessage value)
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x23C9790", Offset = "0x23C9790", VA = "0x23C9790")]
		public static ObjectDestroyMessage _Read_Mirror.ObjectDestroyMessage(NetworkReader reader)
		{
			return default(ObjectDestroyMessage);
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x23C9804", Offset = "0x23C9804", VA = "0x23C9804")]
		public static void _Write_Mirror.ObjectDestroyMessage(NetworkWriter writer, ObjectDestroyMessage value)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x23C9878", Offset = "0x23C9878", VA = "0x23C9878")]
		public static ObjectHideMessage _Read_Mirror.ObjectHideMessage(NetworkReader reader)
		{
			return default(ObjectHideMessage);
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x23C98EC", Offset = "0x23C98EC", VA = "0x23C98EC")]
		public static void _Write_Mirror.ObjectHideMessage(NetworkWriter writer, ObjectHideMessage value)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x23C9960", Offset = "0x23C9960", VA = "0x23C9960")]
		public static EntityStateMessage _Read_Mirror.EntityStateMessage(NetworkReader reader)
		{
			return default(EntityStateMessage);
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x23C9A1C", Offset = "0x23C9A1C", VA = "0x23C9A1C")]
		public static void _Write_Mirror.EntityStateMessage(NetworkWriter writer, EntityStateMessage value)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x23C9AA4", Offset = "0x23C9AA4", VA = "0x23C9AA4")]
		public static NetworkPingMessage _Read_Mirror.NetworkPingMessage(NetworkReader reader)
		{
			return default(NetworkPingMessage);
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x23C9B10", Offset = "0x23C9B10", VA = "0x23C9B10")]
		public static void _Write_Mirror.NetworkPingMessage(NetworkWriter writer, NetworkPingMessage value)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x23C9B8C", Offset = "0x23C9B8C", VA = "0x23C9B8C")]
		public static NetworkPongMessage _Read_Mirror.NetworkPongMessage(NetworkReader reader)
		{
			return default(NetworkPongMessage);
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x23C9C1C", Offset = "0x23C9C1C", VA = "0x23C9C1C")]
		public static void _Write_Mirror.NetworkPongMessage(NetworkWriter writer, NetworkPongMessage value)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x23C9CAC", Offset = "0x23C9CAC", VA = "0x23C9CAC")]
		public static ZTagUser _Read_ZTagUser(NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x23C9DD4", Offset = "0x23C9DD4", VA = "0x23C9DD4")]
		public static void _Write_ZTagUser(NetworkWriter writer, ZTagUser value)
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x23C9ED8", Offset = "0x23C9ED8", VA = "0x23C9ED8")]
		public static void _Write_NetworkRoomManagerZRace/GameModes(NetworkWriter writer, NetworkRoomManagerZRace.GameModes value)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x23C9F4C", Offset = "0x23C9F4C", VA = "0x23C9F4C")]
		public static NetworkRoomManagerZRace.GameModes _Read_NetworkRoomManagerZRace/GameModes(NetworkReader reader)
		{
			return default(NetworkRoomManagerZRace.GameModes);
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x23C9FB8", Offset = "0x23C9FB8", VA = "0x23C9FB8")]
		public static void _Write_NetworkPlayerControllerZRace/WishState(NetworkWriter writer, NetworkPlayerControllerZRace.WishState value)
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x23CA02C", Offset = "0x23CA02C", VA = "0x23CA02C")]
		public static NetworkPlayerControllerZRace.WishState _Read_NetworkPlayerControllerZRace/WishState(NetworkReader reader)
		{
			return default(NetworkPlayerControllerZRace.WishState);
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x23CA098", Offset = "0x23CA098", VA = "0x23CA098")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB326F0", Offset = "0xB326F0")]
		public static void InitReadWriters()
		{
		}
	}
}
