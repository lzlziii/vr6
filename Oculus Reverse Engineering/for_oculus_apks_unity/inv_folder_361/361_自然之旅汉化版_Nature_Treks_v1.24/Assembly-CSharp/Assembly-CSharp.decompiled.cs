using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using AmplifyColor;
using CurvedUI;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using FIMSpace.Basics;
using FIMSpace.FLook;
using FreakLib.Music;
using Game.General.Navigation;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using UltimateGameTools.MeshSimplifier;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("3.7.1.6")]
[Token(Token = "0x2000002")]
public class RandomMaterial : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer targetRenderer;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xF04630", Offset = "0xF04630", VA = "0xF04630")]
	public void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xF04634", Offset = "0xF04634", VA = "0xF04634")]
	public void ChangeMaterial()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xF04698", Offset = "0xF04698", VA = "0xF04698")]
	public RandomMaterial()
	{
	}
}
[Token(Token = "0x2000003")]
public class UnluckDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xE733EC", Offset = "0xE733EC", VA = "0xE733EC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xE734D4", Offset = "0xE734D4", VA = "0xE734D4")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xE7350C", Offset = "0xE7350C", VA = "0xE7350C")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xE73658", Offset = "0xE73658", VA = "0xE73658")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xE737A4", Offset = "0xE737A4", VA = "0xE737A4")]
	public UnluckDistanceDisabler()
	{
	}
}
[Token(Token = "0x2000004")]
public class LookAtCamera : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera lookAtCamera;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lookOnlyOnAwake;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xCAC9CC", Offset = "0xCAC9CC", VA = "0xCAC9CC")]
	public void Start()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xCACAB8", Offset = "0xCACAB8", VA = "0xCACAB8")]
	public void Update()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xCACA68", Offset = "0xCACA68", VA = "0xCACA68")]
	public void LookCam()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xCACAC8", Offset = "0xCACAC8", VA = "0xCACAC8")]
	public LookAtCamera()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FEA54", Offset = "0x9FEA54")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xCE5600", Offset = "0xCE5600", VA = "0xCE5600")]
	private void Start()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xCE59B8", Offset = "0xCE59B8", VA = "0xCE59B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xCE5604", Offset = "0xCE5604", VA = "0xCE5604")]
	public void Init()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xCE59BC", Offset = "0xCE59BC", VA = "0xCE59BC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xCE5EF4", Offset = "0xCE5EF4", VA = "0xCE5EF4")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xCE5FA4", Offset = "0xCE5FA4", VA = "0xCE5FA4")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000006")]
public class FlockChild : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04C40", Offset = "0xA04C40")]
	public FlockController _spawner;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04C50", Offset = "0xA04C50")]
	public Vector3 _wayPoint;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _speed;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04C60", Offset = "0xA04C60")]
	public bool _dived;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04C70", Offset = "0xA04C70")]
	public float _stuckCounter;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04C80", Offset = "0xA04C80")]
	public float _damping;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04C90", Offset = "0xA04C90")]
	public bool _soar;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04CA0", Offset = "0xA04CA0")]
	public bool _landing;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04CB0", Offset = "0xA04CB0")]
	public float _targetSpeed;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04CC0", Offset = "0xA04CC0")]
	public bool _move;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _model;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _modelT;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04CD0", Offset = "0xA04CD0")]
	public float _avoidValue;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04CE0", Offset = "0xA04CE0")]
	public float _avoidDistance;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _soarTimer;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _instantiated;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _updateSeed;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04CF0", Offset = "0xA04CF0")]
	public bool _avoid;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _thisT;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 _landingPosOffset;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xEA4E74", Offset = "0xEA4E74", VA = "0xEA4E74")]
	public void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xEA55BC", Offset = "0xEA55BC", VA = "0xEA55BC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xEA5D90", Offset = "0xEA5D90", VA = "0xEA5D90")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xEA5DD0", Offset = "0xEA5DD0", VA = "0xEA5DD0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xEA4FA0", Offset = "0xEA4FA0", VA = "0xEA4FA0")]
	public void FindRequiredComponents()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xEA52E8", Offset = "0xEA52E8", VA = "0xEA52E8")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xEA555C", Offset = "0xEA555C", VA = "0xEA555C")]
	public void InitAvoidanceValues()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xEA5184", Offset = "0xEA5184", VA = "0xEA5184")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xEA5628", Offset = "0xEA5628", VA = "0xEA5628")]
	public void SoarTimeLimit()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xEA568C", Offset = "0xEA568C", VA = "0xEA568C")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xEA57CC", Offset = "0xEA57CC", VA = "0xEA57CC")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xEA60D0", Offset = "0xEA60D0", VA = "0xEA60D0")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xEA5B68", Offset = "0xEA5B68", VA = "0xEA5B68")]
	public void LimitRotationOfModel()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xEA50D4", Offset = "0xEA50D4", VA = "0xEA50D4")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xEA66D8", Offset = "0xEA66D8", VA = "0xEA66D8")]
	public void SetRandomMode()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xEA5E80", Offset = "0xEA5E80", VA = "0xEA5E80")]
	public void Flap()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xEA51F8", Offset = "0xEA51F8", VA = "0xEA51F8")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xEA67A0", Offset = "0xEA67A0", VA = "0xEA67A0")]
	public void Soar()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xEA6838", Offset = "0xEA6838", VA = "0xEA6838")]
	public void Dive()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xEA6B2C", Offset = "0xEA6B2C", VA = "0xEA6B2C")]
	public void animationSpeed()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xEA6DE0", Offset = "0xEA6DE0", VA = "0xEA6DE0")]
	public FlockChild()
	{
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FEA8C", Offset = "0x9FEA8C")]
public class FlockChildSound : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] _idleSounds;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _idleSoundRandomChance;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] _flightSounds;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _flightSoundRandomChance;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] _scareSounds;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _pitchMin;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _pitchMax;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _volumeMin;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _volumeMax;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FlockChild _flockChild;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource _audio;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasLanded;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xEA6E08", Offset = "0xEA6E08", VA = "0xEA6E08")]
	public void Start()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xEA6EE0", Offset = "0xEA6EE0", VA = "0xEA6EE0")]
	public void PlayRandomSound()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xEA70FC", Offset = "0xEA70FC", VA = "0xEA70FC")]
	public void ScareSound()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xEA720C", Offset = "0xEA720C", VA = "0xEA720C")]
	public FlockChildSound()
	{
	}
}
[Token(Token = "0x2000008")]
public class FlockController : MonoBehaviour
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockChild _childPrefab;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _childAmount;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _slowSpawn;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _spawnSphere;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _spawnSphereHeight;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _spawnSphereDepth;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _minSpeed;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _maxSpeed;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _minScale;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _maxScale;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _soarFrequency;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _soarAnimation;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _flapAnimation;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string _idleAnimation;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _diveValue;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _diveFrequency;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _minDamping;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _maxDamping;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _waypointDistance;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _minAnimationSpeed;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _randomPositionTimer;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _positionSphere;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _positionSphereHeight;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _positionSphereDepth;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool _childTriggerPos;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _forcedRandomDelay;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool _flatFly;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool _flatSoar;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	public bool _birdAvoid;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int _birdAvoidHorizontalForce;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool _birdAvoidDown;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool _birdAvoidUp;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int _birdAvoidVerticalForce;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _birdAvoidDistanceMax;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float _birdAvoidDistanceMin;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float _soarMaxTime;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<FlockChild> _roamers;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 _posBuffer;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int _updateDivisor;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float _newDelta;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int _updateCounter;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float _activeChildren;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform _groupTransform;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string _groupName;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool _groupChildToFlock;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 _startPosOffset;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform _thisT;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xEA7230", Offset = "0xEA7230", VA = "0xEA7230")]
	public void Start()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xEA7380", Offset = "0xEA7380", VA = "0xEA7380")]
	public void AddChild(int amount)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xEA75C0", Offset = "0xEA75C0", VA = "0xEA75C0")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xEA7620", Offset = "0xEA7620", VA = "0xEA7620")]
	public void RemoveChild(int amount)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xEA773C", Offset = "0xEA773C", VA = "0xEA773C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xEA7480", Offset = "0xEA7480", VA = "0xEA7480")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xEA77AC", Offset = "0xEA77AC", VA = "0xEA77AC")]
	public void UpdateChildAmount()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xEA7844", Offset = "0xEA7844", VA = "0xEA7844")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xEA5F58", Offset = "0xEA5F58", VA = "0xEA5F58")]
	public void SetFlockRandomPosition()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xEA7B14", Offset = "0xEA7B14", VA = "0xEA7B14")]
	public void destroyBirds()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xEA7BF4", Offset = "0xEA7BF4", VA = "0xEA7BF4")]
	public FlockController()
	{
	}
}
[Token(Token = "0x2000009")]
public class FlockScare : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController[] landingSpotControllers;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scareInterval;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceToScare;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int checkEveryNthLandingSpot;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int InvokeAmounts;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lsc;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ls;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LandingSpotController currentController;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xEA7D0C", Offset = "0xEA7D0C", VA = "0xEA7D0C")]
	private void CheckProximityToLandingSpots()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xEA7DE8", Offset = "0xEA7DE8", VA = "0xEA7DE8")]
	private void IterateLandingSpots()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xEA7E98", Offset = "0xEA7E98", VA = "0xEA7E98")]
	private bool CheckDistanceToLandingSpot(LandingSpotController lc)
	{
		return default(bool);
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xEA8034", Offset = "0xEA8034", VA = "0xEA8034")]
	private void Invoker()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xEA80CC", Offset = "0xEA80CC", VA = "0xEA80CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xEA8148", Offset = "0xEA8148", VA = "0xEA8148")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xEA819C", Offset = "0xEA819C", VA = "0xEA819C")]
	public FlockScare()
	{
	}
}
[Token(Token = "0x200000A")]
public class FlockWaypointTrigger : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _timer;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockChild _flockChild;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xEA81B4", Offset = "0xEA81B4", VA = "0xEA81B4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xEA828C", Offset = "0xEA828C", VA = "0xEA828C")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xEA82A8", Offset = "0xEA82A8", VA = "0xEA82A8")]
	public FlockWaypointTrigger()
	{
	}
}
[Token(Token = "0x200000B")]
public class LandingButtons : MonoBehaviour
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController _landingSpotController;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockController _flockController;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hSliderValue;

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xEBC950", Offset = "0xEBC950", VA = "0xEBC950")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xEBCD00", Offset = "0xEBCD00", VA = "0xEBCD00")]
	public LandingButtons()
	{
	}
}
[Token(Token = "0x200000C")]
public class LandingSpot : MonoBehaviour
{
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04000", Offset = "0xA04000")]
	private sealed class <GetFlockChild>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minDelay;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDelay;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpot <>4__this;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0xCA74D8", Offset = "0xCA74D8", VA = "0xCA74D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0xCA7540", Offset = "0xCA7540", VA = "0xCA7540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xCA6E18", Offset = "0xCA6E18", VA = "0xCA6E18")]
		[DebuggerHidden]
		public <GetFlockChild>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xCA6E44", Offset = "0xCA6E44", VA = "0xCA6E44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xCA6E48", Offset = "0xCA6E48", VA = "0xCA6E48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xCA74E0", Offset = "0xCA74E0", VA = "0xCA74E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04D00", Offset = "0xA04D00")]
	public FlockChild landingChild;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04D10", Offset = "0xA04D10")]
	public bool landing;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int lerpCounter;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LandingSpotController _controller;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _idle;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _thisT;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _gotcha;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xEBCD10", Offset = "0xEBCD10", VA = "0xEBCD10")]
	public void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xEBCEC4", Offset = "0xEBCEC4", VA = "0xEBCEC4")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xEBD2C4", Offset = "0xEBD2C4", VA = "0xEBD2C4")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xEBDBD8", Offset = "0xEBDBD8", VA = "0xEBDBD8")]
	public void StraightenBird()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xEBDA2C", Offset = "0xEBDA2C", VA = "0xEBDA2C")]
	public void RotateBird()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xEBDC54", Offset = "0xEBDC54", VA = "0xEBDC54")]
	public void GetMeABird()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xEBCE40", Offset = "0xEBCE40", VA = "0xEBCE40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1B168", Offset = "0xA1B168")]
	public IEnumerator GetFlockChild(float minDelay, float maxDelay)
	{
		return null;
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xEBDC88", Offset = "0xEBDC88", VA = "0xEBDC88")]
	public void InstantLand()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xEBDFDC", Offset = "0xEBDFDC", VA = "0xEBDFDC")]
	public void ReleaseFlockChild()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xEBE2C4", Offset = "0xEBE2C4", VA = "0xEBE2C4")]
	public LandingSpot()
	{
	}
}
[Token(Token = "0x200000D")]
public class LandingSpotController : MonoBehaviour
{
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04010", Offset = "0xA04010")]
	private sealed class <InstantLandOnStart>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0xCA7F1C", Offset = "0xCA7F1C", VA = "0xCA7F1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0xCA7F84", Offset = "0xCA7F84", VA = "0xCA7F84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xCA7A28", Offset = "0xCA7A28", VA = "0xCA7A28")]
		[DebuggerHidden]
		public <InstantLandOnStart>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xCA7DA4", Offset = "0xCA7DA4", VA = "0xCA7DA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xCA7DA8", Offset = "0xCA7DA8", VA = "0xCA7DA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xCA7F24", Offset = "0xCA7F24", VA = "0xCA7F24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04020", Offset = "0xA04020")]
	private sealed class <InstantLand>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0xCA7D34", Offset = "0xCA7D34", VA = "0xCA7D34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0xCA7D9C", Offset = "0xCA7D9C", VA = "0xCA7D9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xCA7AD4", Offset = "0xCA7AD4", VA = "0xCA7AD4")]
		[DebuggerHidden]
		public <InstantLand>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xCA7BBC", Offset = "0xCA7BBC", VA = "0xCA7BBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xCA7BC0", Offset = "0xCA7BC0", VA = "0xCA7BC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xCA7D3C", Offset = "0xCA7D3C", VA = "0xCA7D3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _randomRotate;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 _autoCatchDelay;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 _autoDismountDelay;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _maxBirdDistance;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _minBirdDistance;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _takeClosest;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlockController _flock;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _landOnStart;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool _soarLand;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool _onlyBirdsAbove;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _landingSpeedModifier;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _landingTurnSpeedModifier;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _featherPS;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _thisT;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _activeLandingSpots;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _snapLandDistance;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _landedRotateSpeed;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _gizmoSize;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xCA7548", Offset = "0xCA7548", VA = "0xCA7548")]
	public void Start()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xCA77AC", Offset = "0xCA77AC", VA = "0xCA77AC")]
	public void ScareAll()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xCA77B8", Offset = "0xCA77B8", VA = "0xCA77B8")]
	public void ScareAll(float minDelay, float maxDelay)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xCA78F8", Offset = "0xCA78F8", VA = "0xCA78F8")]
	public void LandAll()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xCA772C", Offset = "0xCA772C", VA = "0xCA772C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1B1CC", Offset = "0xA1B1CC")]
	public IEnumerator InstantLandOnStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xCA7A54", Offset = "0xCA7A54", VA = "0xCA7A54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1B230", Offset = "0xA1B230")]
	public IEnumerator InstantLand(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xCA7B00", Offset = "0xCA7B00", VA = "0xCA7B00")]
	public LandingSpotController()
	{
	}
}
[Token(Token = "0x200000E")]
public class MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scrollSpeed;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMinLimit;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float yMaxLimit;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMin;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distanceMax;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float smoothTime;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rotationYAxis;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rotationXAxis;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float velocityX;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float velocityY;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool start;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xCB647C", Offset = "0xCB647C", VA = "0xCB647C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xCB64B4", Offset = "0xCB64B4", VA = "0xCB64B4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xCB6810", Offset = "0xCB6810", VA = "0xCB6810")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xCB68C0", Offset = "0xCB68C0", VA = "0xCB68C0")]
	public MouseOrbit()
	{
	}
}
[Token(Token = "0x200000F")]
public class Rotater : MonoBehaviour
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xD6AB78", Offset = "0xD6AB78", VA = "0xD6AB78")]
	private void Update()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xD6ABB8", Offset = "0xD6ABB8", VA = "0xD6ABB8")]
	public Rotater()
	{
	}
}
[Token(Token = "0x2000010")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FEAF0", Offset = "0x9FEAF0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FEAF0", Offset = "0x9FEAF0")]
public class CameraDepthMode : MonoBehaviour
{
	[Token(Token = "0x600005B")]
	[Address(RVA = "0x119EDDC", Offset = "0x119EDDC", VA = "0x119EDDC")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x119EE40", Offset = "0x119EE40", VA = "0x119EE40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x119EEA4", Offset = "0x119EEA4", VA = "0x119EEA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x119EF08", Offset = "0x119EF08", VA = "0x119EF08")]
	public CameraDepthMode()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FEB64", Offset = "0x9FEB64")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FEB64", Offset = "0x9FEB64")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FEB64", Offset = "0x9FEB64")]
public class FogControl : MonoBehaviour
{
	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FadeSpeed;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float Rate;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnderWaterFog fog;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera cam;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xEA82B8", Offset = "0xEA82B8", VA = "0xEA82B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xEA83D4", Offset = "0xEA83D4", VA = "0xEA83D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xEA83D8", Offset = "0xEA83D8", VA = "0xEA83D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xEA82BC", Offset = "0xEA82BC", VA = "0xEA82BC")]
	private void init()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xEA8584", Offset = "0xEA8584", VA = "0xEA8584")]
	public FogControl()
	{
	}
}
[Token(Token = "0x2000012")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FEC00", Offset = "0x9FEC00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FEC00", Offset = "0x9FEC00")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FEC00", Offset = "0x9FEC00")]
public class UnderWaterFog : MonoBehaviour
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color fogColor;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA04D20", Offset = "0xA04D20")]
	public float height;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA04D58", Offset = "0xA04D58")]
	public float heightDensity;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA04D74", Offset = "0xA04D74")]
	public float startDistance;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader fogShader;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material fogMaterial;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE069BC", Offset = "0xE069BC", VA = "0xE069BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xE069C0", Offset = "0xE069C0", VA = "0xE069C0")]
	public bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xE06B10", Offset = "0xE06B10", VA = "0xE06B10")]
	[AttributeAttribute(Name = "ImageEffectOpaque", RVA = "0xA1B294", Offset = "0xA1B294")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE07304", Offset = "0xE07304", VA = "0xE07304")]
	private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE07474", Offset = "0xE07474", VA = "0xE07474")]
	public UnderWaterFog()
	{
	}
}
[Token(Token = "0x2000013")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FEC98", Offset = "0x9FEC98")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FEC98", Offset = "0x9FEC98")]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x20003E7")]
	private enum QualityLevels
	{
		[Token(Token = "0x40019E3")]
		High = 1,
		[Token(Token = "0x40019E4")]
		Medium = 2,
		[Token(Token = "0x40019E5")]
		Low = 4,
		[Token(Token = "0x40019E6")]
		VeryLow = 8
	}

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask reflectionMask;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private QualityLevels Quality;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA04DBC", Offset = "0xA04DBC")]
	public Color clearColor;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool reflectSkybox;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA04DF4", Offset = "0xA04DF4")]
	public bool UpdateSceneView;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float clipPlaneOffset;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string reflectionSampler;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_Oldpos;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera m_ReflectionCamera;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material m_SharedMaterial;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<Camera, bool> m_HelperCameras;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xCB39D8", Offset = "0xCB39D8", VA = "0xCB39D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xCB3AC4", Offset = "0xCB3AC4", VA = "0xCB3AC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xCB3B78", Offset = "0xCB3B78", VA = "0xCB3B78")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xCB3A5C", Offset = "0xCB3A5C", VA = "0xCB3A5C")]
	public void setMaterial()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xCB3BFC", Offset = "0xCB3BFC", VA = "0xCB3BFC")]
	private Camera CreateReflectionCameraFor(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xCB3F1C", Offset = "0xCB3F1C", VA = "0xCB3F1C")]
	private void SetStandardCameraParameter(Camera cam, LayerMask mask)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xCB3FD0", Offset = "0xCB3FD0", VA = "0xCB3FD0")]
	private RenderTexture CreateTextureFor(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xCB40D8", Offset = "0xCB40D8", VA = "0xCB40D8")]
	public void RenderHelpCameras(Camera currentCam)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xCB49DC", Offset = "0xCB49DC", VA = "0xCB49DC")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xCB4A3C", Offset = "0xCB4A3C", VA = "0xCB4A3C")]
	public void WaterTileBeingRendered(Transform tr, Camera currentCam)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xCB4B34", Offset = "0xCB4B34", VA = "0xCB4B34")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xCB4248", Offset = "0xCB4248", VA = "0xCB4248")]
	private void RenderReflectionFor(Camera cam, Camera reflectCamera)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xCB4B68", Offset = "0xCB4B68", VA = "0xCB4B68")]
	private void SaneCameraSettings(Camera helperCam)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xCB5068", Offset = "0xCB5068", VA = "0xCB5068")]
	private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xCB4BCC", Offset = "0xCB4BCC", VA = "0xCB4BCC")]
	private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xCB52A0", Offset = "0xCB52A0", VA = "0xCB52A0")]
	private static float Sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xCB4E84", Offset = "0xCB4E84", VA = "0xCB4E84")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xCB52C0", Offset = "0xCB52C0", VA = "0xCB52C0")]
	public MirrorReflection()
	{
	}
}
[Token(Token = "0x2000014")]
public class Animate : MonoBehaviour
{
	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 texture1Speed;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 texture2Speed;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 bumpMap1Speed;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 bumpMap2Speed;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 distortSpeed;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 distort1Speed;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 distort2Speed;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 texture1UV;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 texture2UV;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 bumpMap1UV;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 bumpMap2UV;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 distortUV;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2 distort1UV;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2 distort2UV;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x119384C", Offset = "0x119384C", VA = "0x119384C")]
	private void Start()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1193984", Offset = "0x1193984", VA = "0x1193984")]
	private void Update()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1193C1C", Offset = "0x1193C1C", VA = "0x1193C1C")]
	public Animate()
	{
	}
}
[Token(Token = "0x2000015")]
public class AnimateUnderwater : MonoBehaviour
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 distort1Speed;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 distort2Speed;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 distortionMap1UV;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 distortionMap2UV;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1193E2C", Offset = "0x1193E2C", VA = "0x1193E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1193ED8", Offset = "0x1193ED8", VA = "0x1193ED8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1193FD8", Offset = "0x1193FD8", VA = "0x1193FD8")]
	public AnimateUnderwater()
	{
	}
}
[Token(Token = "0x2000016")]
public static class FAnimatorMethods
{
	[Token(Token = "0x6000081")]
	[Address(RVA = "0xEE9480", Offset = "0xEE9480", VA = "0xEE9480")]
	public static void LerpFloatValue(Animator animator, string name = "RunWalk", float value = 0f, float deltaSpeed = 8f)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xEE94FC", Offset = "0xEE94FC", VA = "0xEE94FC")]
	public static bool CheckAnimationEnd(Animator animator, int layer = 0, bool reverse = false, bool checkAnimLoop = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xEE95D8", Offset = "0xEE95D8", VA = "0xEE95D8")]
	public static void ResetLayersWeights(Animator animator, float speed = 10f)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xEE9688", Offset = "0xEE9688", VA = "0xEE9688")]
	public static void LerpLayerWeight(Animator animator, int layer = 0, float newValue = 1f, float speed = 8f)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xEE9704", Offset = "0xEE9704", VA = "0xEE9704")]
	public static bool StateExists(Animator animator, string clipName, int layer = 0)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000017")]
public static class FColorMethods
{
	[Token(Token = "0x6000086")]
	[Address(RVA = "0xEE9748", Offset = "0xEE9748", VA = "0xEE9748")]
	public static Color ChangeColorAlpha(Color color, float alpha)
	{
		return default(Color);
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xEE977C", Offset = "0xEE977C", VA = "0xEE977C")]
	public static Color ChangeColorsValue(Color color, float brightenOrDarken = 0f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xEE97B8", Offset = "0xEE97B8", VA = "0xEE97B8")]
	public static Color32 HexToColor(string hex)
	{
		return default(Color32);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xEE99D0", Offset = "0xEE99D0", VA = "0xEE99D0")]
	public static string ColorToHex(Color32 color, bool addHash = true)
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xEE9CA8", Offset = "0xEE9CA8", VA = "0xEE9CA8")]
	public static string ColorToHex(Color color, bool addHash = true)
	{
		return null;
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xEE9D28", Offset = "0xEE9D28", VA = "0xEE9D28")]
	public static void LerpMaterialColor(Material mat, string property, Color targetColor, float deltaMultiplier = 8f)
	{
	}
}
[Token(Token = "0x2000018")]
public static class FDebug
{
	[Token(Token = "0x600008C")]
	[Address(RVA = "0xEEA05C", Offset = "0xEEA05C", VA = "0xEEA05C")]
	public static void Log(string log)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xEEA0E4", Offset = "0xEEA0E4", VA = "0xEEA0E4")]
	public static void Log(string log, string category)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xEE9904", Offset = "0xEE9904", VA = "0xEE9904")]
	public static void LogRed(string log)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xEEA3CC", Offset = "0xEEA3CC", VA = "0xEEA3CC")]
	public static void LogOrange(string log)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xEEA498", Offset = "0xEEA498", VA = "0xEEA498")]
	public static void LogYellow(string log)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xEEA324", Offset = "0xEEA324", VA = "0xEEA324")]
	public static string MarkerColor(string color)
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xEEA384", Offset = "0xEEA384", VA = "0xEEA384")]
	public static string EndColorMarker()
	{
		return null;
	}
}
[Token(Token = "0x2000019")]
public static class FEasing
{
	[Token(Token = "0x20003E8")]
	public enum EFease
	{
		[Token(Token = "0x40019E8")]
		EaseInCubic,
		[Token(Token = "0x40019E9")]
		EaseOutCubic,
		[Token(Token = "0x40019EA")]
		EaseInOutCubic,
		[Token(Token = "0x40019EB")]
		EaseInOutElastic,
		[Token(Token = "0x40019EC")]
		EaseInElastic,
		[Token(Token = "0x40019ED")]
		EaseOutElastic,
		[Token(Token = "0x40019EE")]
		EaseInExpo,
		[Token(Token = "0x40019EF")]
		EaseOutExpo,
		[Token(Token = "0x40019F0")]
		EaseInOutExpo,
		[Token(Token = "0x40019F1")]
		Linear
	}

	[Token(Token = "0x20003E9")]
	public delegate float Function(float s, float e, float v, float extraParameter = 1f);

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xEEA564", Offset = "0xEEA564", VA = "0xEEA564")]
	public static float EaseInCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xEEA57C", Offset = "0xEEA57C", VA = "0xEEA57C")]
	public static float EaseOutCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xEEA5A4", Offset = "0xEEA5A4", VA = "0xEEA5A4")]
	public static float EaseInOutCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xEEA5FC", Offset = "0xEEA5FC", VA = "0xEEA5FC")]
	public static float EaseOutElastic(float start, float end, float value, float rangeMul = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xEEA6F8", Offset = "0xEEA6F8", VA = "0xEEA6F8")]
	public static float EaseInElastic(float start, float end, float value, float rangeMul = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xEEA7F8", Offset = "0xEEA7F8", VA = "0xEEA7F8")]
	public static float EaseInOutElastic(float start, float end, float value, float rangeMul = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xEEA964", Offset = "0xEEA964", VA = "0xEEA964")]
	public static float EaseInExpo(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xEEA9FC", Offset = "0xEEA9FC", VA = "0xEEA9FC")]
	public static float EaseOutExpo(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xEEAA94", Offset = "0xEEAA94", VA = "0xEEAA94")]
	public static float EaseInOutExpo(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xEEAB84", Offset = "0xEEAB84", VA = "0xEEAB84")]
	public static float Linear(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xEEAC0C", Offset = "0xEEAC0C", VA = "0xEEAC0C")]
	public static Function GetEasingFunction(EFease easingFunction)
	{
		return null;
	}
}
[Token(Token = "0x200001A")]
public static class FLogicMethods
{
	[Token(Token = "0x600009E")]
	[Address(RVA = "0x13AB670", Offset = "0x13AB670", VA = "0x13AB670")]
	public static float FLerp(float a, float b, float t, float factor = 0.01f)
	{
		return default(float);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x13AB734", Offset = "0x13AB734", VA = "0x13AB734")]
	public static float FAbs(float value)
	{
		return default(float);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x13AB744", Offset = "0x13AB744", VA = "0x13AB744")]
	public static float TopDownDistanceManhattan(Vector3 a, Vector3 b)
	{
		return default(float);
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x13AB774", Offset = "0x13AB774", VA = "0x13AB774")]
	public static float DistanceManhattan(Vector3 a, Vector3 b)
	{
		return default(float);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x13AB7B8", Offset = "0x13AB7B8", VA = "0x13AB7B8")]
	public static float WrapAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x13AB7F0", Offset = "0x13AB7F0", VA = "0x13AB7F0")]
	public static Vector3 WrapVector(Vector3 angles)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x13AB8A8", Offset = "0x13AB8A8", VA = "0x13AB8A8")]
	public static float UnwrapAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x13AB8E0", Offset = "0x13AB8E0", VA = "0x13AB8E0")]
	public static Vector3 UnwrapVector(Vector3 angles)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x13AB99C", Offset = "0x13AB99C", VA = "0x13AB99C")]
	public static bool IsAlmostEqual(float val, float to, int afterComma = 2, float addRange = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x13ABA58", Offset = "0x13ABA58", VA = "0x13ABA58")]
	public static Quaternion TopDownAngle(Vector3 from, Vector3 to)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x13A4A68", Offset = "0x13A4A68", VA = "0x13A4A68")]
	public static Quaternion TopDownAnglePosition2D(Vector2 from, Vector2 to, float offset = 0f)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x200001B")]
public static class FStringMethods
{
	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x13ADB6C", Offset = "0x13ADB6C", VA = "0x13ADB6C")]
	public static string IntToString(int value, int signs)
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x13ADC50", Offset = "0x13ADC50", VA = "0x13ADC50")]
	public static string CapitalizeOnlyFirstLetter(string text)
	{
		return null;
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x13ADD28", Offset = "0x13ADD28", VA = "0x13ADD28")]
	public static string CapitalizeFirstLetter(string text)
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x13ADDBC", Offset = "0x13ADDBC", VA = "0x13ADDBC")]
	public static string ReplaceSpacesWithUnderline(string text)
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x13ADE48", Offset = "0x13ADE48", VA = "0x13ADE48")]
	public static string GetEndOfStringFromSeparator(string source, char[] separators, int which = 1, bool fromEnd = false)
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x13ADF9C", Offset = "0x13ADF9C", VA = "0x13ADF9C")]
	public static string GetEndOfStringFromStringSeparator(string source, string[] separators, int which = 1, bool rest = false)
	{
		return null;
	}
}
[Token(Token = "0x200001C")]
public static class FTransformMethods
{
	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x13AE130", Offset = "0x13AE130", VA = "0x13AE130")]
	public static Transform FindChildByNameInDepth(string name, Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60000B0")]
	public static List<T> FindComponentsInAllChildren<T>(Transform transformToSearchIn) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	public static T FindComponentInAllChildren<T>(Transform transformToSearchIn) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	public static T FindComponentInAllParents<T>(Transform transformToSearchIn) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x13AE220", Offset = "0x13AE220", VA = "0x13AE220")]
	public static void ChangeActiveChildrenInside(Transform parentOfThem, bool active)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x13AE2AC", Offset = "0x13AE2AC", VA = "0x13AE2AC")]
	public static void ChangeActiveThroughParentTo(Transform start, Transform end, bool active, bool changeParentsChildrenActivation = false)
	{
	}
}
[Token(Token = "0x200001D")]
public static class FVectorMethods
{
	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x13AE3D0", Offset = "0x13AE3D0", VA = "0x13AE3D0")]
	public static Vector3 RandomVector(float rangeA, float rangeB)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x13A5D78", Offset = "0x13A5D78", VA = "0x13A5D78")]
	public static float VectorSum(Vector3 vector)
	{
		return default(float);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x13AE458", Offset = "0x13AE458", VA = "0x13AE458")]
	public static Vector3 RandomVectorNoY(float rangeA, float rangeB)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x13AE4CC", Offset = "0x13AE4CC", VA = "0x13AE4CC")]
	public static Vector3 RandomVectorMinMax(float min, float max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x13AE5C0", Offset = "0x13AE5C0", VA = "0x13AE5C0")]
	public static Vector3 RandomVectorNoYMinMax(float min, float max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x13AE680", Offset = "0x13AE680", VA = "0x13AE680")]
	public static Vector3 GetUIPositionFromWorldPosition(Vector3 position, Camera camera, RectTransform canvas)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x13AE73C", Offset = "0x13AE73C", VA = "0x13AE73C")]
	public static Vector3 PosFromMatrix(Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x13AE7E0", Offset = "0x13AE7E0", VA = "0x13AE7E0")]
	public static Quaternion RotFromMatrix(Matrix4x4 m)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x13AE8FC", Offset = "0x13AE8FC", VA = "0x13AE8FC")]
	public static Vector3 ScaleFromMatrix(Matrix4x4 m)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200001E")]
public class FSPStaticMeshHolder : MonoBehaviour
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FSPStaticMeshHolder _instance;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, Mesh> _meshLinks;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int receiverID;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x13ABB30", Offset = "0x13ABB30", VA = "0x13ABB30")]
	public static FSPStaticMeshHolder Get()
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x13ABB80", Offset = "0x13ABB80", VA = "0x13ABB80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x13ABD08", Offset = "0x13ABD08", VA = "0x13ABD08")]
	public Mesh GetMesh(int receiverID)
	{
		return null;
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x13ABBD8", Offset = "0x13ABBD8", VA = "0x13ABBD8")]
	private void LinkMeshes()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x13ABD70", Offset = "0x13ABD70", VA = "0x13ABD70")]
	public FSPStaticMeshHolder()
	{
	}
}
[Token(Token = "0x200001F")]
public class GlobalProjectorLightCamera : MonoBehaviour
{
	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action PreCullCallback;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action PostRenderCallback;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xEA9388", Offset = "0xEA9388", VA = "0xEA9388")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xEA939C", Offset = "0xEA939C", VA = "0xEA939C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xEA93B0", Offset = "0xEA93B0", VA = "0xEA93B0")]
	public GlobalProjectorLightCamera()
	{
	}
}
[Token(Token = "0x2000020")]
public class GlobalProjectorManager : MonoBehaviour
{
	[Token(Token = "0x20003EA")]
	public enum ProjectionCulling
	{
		[Token(Token = "0x40019F3")]
		None,
		[Token(Token = "0x40019F4")]
		ProjectorBounds,
		[Token(Token = "0x40019F5")]
		ProjectionVolumeBounds
	}

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ProjectorEyeTexture _Tex;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ProjectorEyeTexture _TexLight;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material _ProjectorMaterialShadow;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material _ProjectorMaterialLight;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Matrix4x4 _ProjectorMatrix;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Matrix4x4 _ProjectorClipMatrix;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Matrix4x4 _BiasMatrix;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Matrix4x4 _ViewMatrix;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Matrix4x4 _BPV;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Matrix4x4 _BPVClip;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Matrix4x4 _ModelMatrix;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Matrix4x4 _FinalMatrix;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Matrix4x4 _FinalClipMatrix;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private MaterialPropertyBlock _MBP;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private int[] _ShadowResolutions;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public bool useNonAllocCulling;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string GlobalProjectorLayer;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private float _BatchBreak;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GlobalProjectorManager _Instance;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private Vector3 _GlobalProjectionDir;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private int _GlobalShadowResolution;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private ProjectionCulling _GlobalShadowCullingMode;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float _GlobalCutOffDistance;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private bool _GlobalFlipX;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A9")]
	private bool _GlobalFlipY;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AA")]
	private bool _renderShadows;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Camera _ProjectorCamera;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private Camera _ProjectorCameraLight;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private List<ShadowProjector> _ShadowProjectors;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private List<ShadowProjector> _LightProjectors;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private List<ShadowReceiver> _ShadowReceivers;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private List<ShadowTrigger> _ShadowTriggers;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private Texture2D _textureRead;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool _anyTriggersAlive;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E9")]
	private bool _shouldCheckTriggers;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Plane[] _mainCameraPlanes;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private bool _cameraPlainsCalculated;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private Bounds _projectorBounds;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Shader _globalProjectorShader;

	[Token(Token = "0x17000001")]
	public static Vector3 GlobalProjectionDir
	{
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0xEA9624", Offset = "0xEA9624", VA = "0xEA9624")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60000C6")]
		[Address(RVA = "0xEA93B8", Offset = "0xEA93B8", VA = "0xEA93B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public static int GlobalShadowResolution
	{
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0xEA97D4", Offset = "0xEA97D4", VA = "0xEA97D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0xEA96A0", Offset = "0xEA96A0", VA = "0xEA96A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public static ProjectionCulling GlobalShadowCullingMode
	{
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xEA98C0", Offset = "0xEA98C0", VA = "0xEA98C0")]
		get
		{
			return default(ProjectionCulling);
		}
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xEA9848", Offset = "0xEA9848", VA = "0xEA9848")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public static float GlobalCutOffDistance
	{
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xEA99B4", Offset = "0xEA99B4", VA = "0xEA99B4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xEA9934", Offset = "0xEA9934", VA = "0xEA9934")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public static bool GlobalFlipX
	{
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xEA9B54", Offset = "0xEA9B54", VA = "0xEA9B54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xEA9A28", Offset = "0xEA9A28", VA = "0xEA9A28")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public static bool GlobalFlipY
	{
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0xEA9CD0", Offset = "0xEA9CD0", VA = "0xEA9CD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xEA9BC8", Offset = "0xEA9BC8", VA = "0xEA9BC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public bool ShadowsOn
	{
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0xEA9D50", Offset = "0xEA9D50", VA = "0xEA9D50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0xEA9D44", Offset = "0xEA9D44", VA = "0xEA9D44")]
		set
		{
		}
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xEA9D58", Offset = "0xEA9D58", VA = "0xEA9D58")]
	public static GlobalProjectorManager Get()
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xEA9E9C", Offset = "0xEA9E9C", VA = "0xEA9E9C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xEAA360", Offset = "0xEAA360", VA = "0xEAA360")]
	private void CreateLightCamera()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xEAA6C4", Offset = "0xEAA6C4", VA = "0xEAA6C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xEAA6C8", Offset = "0xEAA6C8", VA = "0xEAA6C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xEAA6CC", Offset = "0xEAA6CC", VA = "0xEAA6CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xEAA734", Offset = "0xEAA734", VA = "0xEAA734")]
	public static bool Exists()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xEAA7CC", Offset = "0xEAA7CC", VA = "0xEAA7CC")]
	public Texture GetShadowTexture()
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xEAA7E8", Offset = "0xEAA7E8", VA = "0xEAA7E8")]
	public void AddProjector(ShadowProjector projector)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xEAAA04", Offset = "0xEAAA04", VA = "0xEAAA04")]
	public void RemoveProjector(ShadowProjector projector)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xEAAB24", Offset = "0xEAAB24", VA = "0xEAAB24")]
	public void AddReceiver(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xEAABC8", Offset = "0xEAABC8", VA = "0xEAABC8")]
	private void CheckForTerrain(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xEAACCC", Offset = "0xEAACCC", VA = "0xEAACCC")]
	public void AddShadowTrigger(ShadowTrigger trigger)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xEAAD60", Offset = "0xEAAD60", VA = "0xEAAD60")]
	public void RemoveShadowTrigger(ShadowTrigger trigger)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xEAAE00", Offset = "0xEAAE00", VA = "0xEAAE00")]
	public void RemoveReceiver(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xEA94F4", Offset = "0xEA94F4", VA = "0xEA94F4")]
	private void OnProjectionDirChange()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xEA9764", Offset = "0xEA9764", VA = "0xEA9764")]
	private void OnShadowResolutionChange()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xEAA518", Offset = "0xEAA518", VA = "0xEAA518")]
	private void CreateProjectorEyeTexture()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xEAA524", Offset = "0xEAA524", VA = "0xEAA524")]
	private void CreateProjectorEyeTexture(bool shadow, bool light)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xEA9B30", Offset = "0xEA9B30", VA = "0xEA9B30")]
	private void ForceShadowDummyRebuild()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xEAAE98", Offset = "0xEAAE98", VA = "0xEAAE98")]
	private void ForceShadowDummyRebuild(List<ShadowProjector> projectors)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xEAAF30", Offset = "0xEAAF30", VA = "0xEAAF30")]
	private void CalculateShadowBounds(Camera targetCamera, List<ShadowProjector> projectors)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xEAB538", Offset = "0xEAB538", VA = "0xEAB538")]
	private void CheckMainCameraPlains()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xEAB5A4", Offset = "0xEAB5A4", VA = "0xEAB5A4")]
	private bool IsProjectionVolumeVisible(Plane[] planes, ShadowProjector projector)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xEAB870", Offset = "0xEAB870", VA = "0xEAB870")]
	public void SetTriggerTexPixel(Vector3 point, bool checkShadow, bool checkLight, int triggerID)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xEAB894", Offset = "0xEAB894", VA = "0xEAB894")]
	private void SetTriggerTexPixel(Camera camera, ProjectorEyeTexture tex, Vector3 point, int triggerID)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xEABAC4", Offset = "0xEABAC4", VA = "0xEABAC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xEABB80", Offset = "0xEABB80", VA = "0xEABB80")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xEABBE0", Offset = "0xEABBE0", VA = "0xEABBE0")]
	private void RenderProjectors(Camera targetCamera, List<ShadowProjector> projectors, Material material)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xEAC0C4", Offset = "0xEAC0C4", VA = "0xEAC0C4")]
	private void Render(Material material)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xEAC6FC", Offset = "0xEAC6FC", VA = "0xEAC6FC")]
	private void PreventDynamicBatchUnity5()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xEAC7AC", Offset = "0xEAC7AC", VA = "0xEAC7AC")]
	private void CheckTriggers(bool shadow)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xEAC484", Offset = "0xEAC484", VA = "0xEAC484")]
	private void ApplyTerrainTextureMatrix(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xEACAF4", Offset = "0xEACAF4", VA = "0xEACAF4")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xEACBAC", Offset = "0xEACBAC", VA = "0xEACBAC")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xEACC64", Offset = "0xEACC64", VA = "0xEACC64")]
	private void OnLightPreCull()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xEACD1C", Offset = "0xEACD1C", VA = "0xEACD1C")]
	private void OnLightPostRender()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xEACDD4", Offset = "0xEACDD4", VA = "0xEACDD4")]
	public GlobalProjectorManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000021")]
public class ProjectorEyeTexture
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RenderTexture _RenderTexture;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D _RenderTextureDummy;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _Camera;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xEF379C", Offset = "0xEF379C", VA = "0xEF379C")]
	public ProjectorEyeTexture(Camera camera, int size)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xEF38E4", Offset = "0xEF38E4", VA = "0xEF38E4")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xEF39B0", Offset = "0xEF39B0", VA = "0xEF39B0")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xEF39B8", Offset = "0xEF39B8", VA = "0xEF39B8")]
	public RenderTexture GetRenderTexture()
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xEF39C0", Offset = "0xEF39C0", VA = "0xEF39C0")]
	public void GrabScreenIfNeeded()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xEF38DC", Offset = "0xEF38DC", VA = "0xEF38DC")]
	public bool RenderTextureSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000022")]
public class ProjectorShadowDummy : MonoBehaviour
{
	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _ShadowLocalOffset;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion _RotationAngleOffset;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _freezeXRot;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool _freezeYRot;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool _freezeZRot;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion _AngleOffset;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xEF39C4", Offset = "0xEF39C4", VA = "0xEF39C4")]
	public void OnPreRenderShadowDummy(Camera camera)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xEF3EE8", Offset = "0xEF3EE8", VA = "0xEF3EE8")]
	public ProjectorShadowDummy()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FED0C", Offset = "0x9FED0C")]
public class ShadowProjector : MonoBehaviour
{
	[Token(Token = "0x20003EB")]
	private static class MeshGen
	{
		[Token(Token = "0x6001901")]
		[Address(RVA = "0xCDEE38", Offset = "0xCDEE38", VA = "0xCDEE38")]
		public static Mesh CreatePlane(Vector3 up, Vector3 right, Rect uvRect, Color color, ShadowProjector parent)
		{
			return null;
		}
	}

	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04030", Offset = "0xA04030")]
	private sealed class <ReturnShadowDistance>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShadowProjector <>4__this;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001905")]
			[Address(RVA = "0xCE0124", Offset = "0xCE0124", VA = "0xCE0124", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001907")]
			[Address(RVA = "0xCE018C", Offset = "0xCE018C", VA = "0xCE018C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xCDF6F4", Offset = "0xCDF6F4", VA = "0xCDF6F4")]
		[DebuggerHidden]
		public <ReturnShadowDistance>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xCE0038", Offset = "0xCE0038", VA = "0xCE0038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xCE003C", Offset = "0xCE003C", VA = "0xCE003C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xCE012C", Offset = "0xCE012C", VA = "0xCE012C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Vector3 _GlobalProjectionDir;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected int _GlobalShadowResolution;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GlobalProjectorManager.ProjectionCulling _GlobalShadowCullingMode;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _EnableCutOff;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected float _GlobalCutOffDistance;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected bool _GlobalFlipX;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	protected bool _GlobalFlipY;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _ShadowSize;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Color _ShadowColor;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float _ShadowOpacity;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material _Material;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool _IsLight;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private Vector3 _ShadowLocalOffset;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Quaternion _RotationAngleOffset;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool _FreezeXRot;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[SerializeField]
	private bool _FreezeYRot;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	[SerializeField]
	private bool _FreezeZRot;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private Rect _UVRect;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private bool _AutoSizeOpacity;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float _AutoSOCutOffDistance;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float _AutoSORayOriginOffset;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float _AutoSOMaxScaleMultiplier;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private int _AutoSORaycastLayer;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshRenderer _Renderer;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Mesh _ShadowDummyMesh;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ProjectorShadowDummy _ShadowDummy;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _initialSize;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _initialOpacity;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _discarded;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool doAutoChange;

	[Token(Token = "0x17000008")]
	public Vector3 GlobalProjectionDir
	{
		[Token(Token = "0x6000104")]
		[Address(RVA = "0xCDDE30", Offset = "0xCDDE30", VA = "0xCDDE30")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000103")]
		[Address(RVA = "0xCDDD5C", Offset = "0xCDDD5C", VA = "0xCDDD5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public int GlobalShadowResolution
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0xCDDEEC", Offset = "0xCDDEEC", VA = "0xCDDEEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000105")]
		[Address(RVA = "0xCDDE3C", Offset = "0xCDDE3C", VA = "0xCDDE3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public GlobalProjectorManager.ProjectionCulling GlobalShadowCullingMode
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0xCDDFA4", Offset = "0xCDDFA4", VA = "0xCDDFA4")]
		get
		{
			return default(GlobalProjectorManager.ProjectionCulling);
		}
		[Token(Token = "0x6000107")]
		[Address(RVA = "0xCDDEF4", Offset = "0xCDDEF4", VA = "0xCDDEF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public bool EnableCutOff
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0xCDDFCC", Offset = "0xCDDFCC", VA = "0xCDDFCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000109")]
		[Address(RVA = "0xCDDFAC", Offset = "0xCDDFAC", VA = "0xCDDFAC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public float GlobalCutOffDistance
	{
		[Token(Token = "0x600010C")]
		[Address(RVA = "0xCDE084", Offset = "0xCDE084", VA = "0xCDE084")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600010B")]
		[Address(RVA = "0xCDDFD4", Offset = "0xCDDFD4", VA = "0xCDDFD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public bool GlobalFlipX
	{
		[Token(Token = "0x600010E")]
		[Address(RVA = "0xCDE144", Offset = "0xCDE144", VA = "0xCDE144")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600010D")]
		[Address(RVA = "0xCDE08C", Offset = "0xCDE08C", VA = "0xCDE08C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public bool GlobalFlipY
	{
		[Token(Token = "0x6000110")]
		[Address(RVA = "0xCDE204", Offset = "0xCDE204", VA = "0xCDE204")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600010F")]
		[Address(RVA = "0xCDE14C", Offset = "0xCDE14C", VA = "0xCDE14C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public float ShadowSize
	{
		[Token(Token = "0x6000112")]
		[Address(RVA = "0xCDE328", Offset = "0xCDE328", VA = "0xCDE328")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000111")]
		[Address(RVA = "0xCDE20C", Offset = "0xCDE20C", VA = "0xCDE20C")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Color ShadowColor
	{
		[Token(Token = "0x6000114")]
		[Address(RVA = "0xCDE4F0", Offset = "0xCDE4F0", VA = "0xCDE4F0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000113")]
		[Address(RVA = "0xCDE330", Offset = "0xCDE330", VA = "0xCDE330")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public float ShadowOpacity
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0xCDE5A4", Offset = "0xCDE5A4", VA = "0xCDE5A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000115")]
		[Address(RVA = "0xCDE4FC", Offset = "0xCDE4FC", VA = "0xCDE4FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public bool IsLight
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0xCDE5B8", Offset = "0xCDE5B8", VA = "0xCDE5B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000117")]
		[Address(RVA = "0xCDE5AC", Offset = "0xCDE5AC", VA = "0xCDE5AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Vector3 ShadowLocalOffset
	{
		[Token(Token = "0x600011A")]
		[Address(RVA = "0xCDE678", Offset = "0xCDE678", VA = "0xCDE678")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000119")]
		[Address(RVA = "0xCDE5C0", Offset = "0xCDE5C0", VA = "0xCDE5C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public Quaternion RotationAngleOffset
	{
		[Token(Token = "0x600011C")]
		[Address(RVA = "0xCDE738", Offset = "0xCDE738", VA = "0xCDE738")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600011B")]
		[Address(RVA = "0xCDE684", Offset = "0xCDE684", VA = "0xCDE684")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public bool FreezeXRot
	{
		[Token(Token = "0x600011E")]
		[Address(RVA = "0xCDE7E4", Offset = "0xCDE7E4", VA = "0xCDE7E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600011D")]
		[Address(RVA = "0xCDE744", Offset = "0xCDE744", VA = "0xCDE744")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool FreezeYRot
	{
		[Token(Token = "0x6000120")]
		[Address(RVA = "0xCDE88C", Offset = "0xCDE88C", VA = "0xCDE88C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600011F")]
		[Address(RVA = "0xCDE7EC", Offset = "0xCDE7EC", VA = "0xCDE7EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool FreezeZRot
	{
		[Token(Token = "0x6000122")]
		[Address(RVA = "0xCDE934", Offset = "0xCDE934", VA = "0xCDE934")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000121")]
		[Address(RVA = "0xCDE894", Offset = "0xCDE894", VA = "0xCDE894")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public Rect UVRect
	{
		[Token(Token = "0x6000124")]
		[Address(RVA = "0xCDE9F8", Offset = "0xCDE9F8", VA = "0xCDE9F8")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x6000123")]
		[Address(RVA = "0xCDE93C", Offset = "0xCDE93C", VA = "0xCDE93C")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public bool AutoSizeOpacity
	{
		[Token(Token = "0x6000126")]
		[Address(RVA = "0xCDEA10", Offset = "0xCDEA10", VA = "0xCDEA10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000125")]
		[Address(RVA = "0xCDEA04", Offset = "0xCDEA04", VA = "0xCDEA04")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public float AutoSOCutOffDistance
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0xCDEA20", Offset = "0xCDEA20", VA = "0xCDEA20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000127")]
		[Address(RVA = "0xCDEA18", Offset = "0xCDEA18", VA = "0xCDEA18")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float AutoSORayOriginOffset
	{
		[Token(Token = "0x600012A")]
		[Address(RVA = "0xCDEA30", Offset = "0xCDEA30", VA = "0xCDEA30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000129")]
		[Address(RVA = "0xCDEA28", Offset = "0xCDEA28", VA = "0xCDEA28")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public float AutoSOMaxScaleMultiplier
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0xCDEA40", Offset = "0xCDEA40", VA = "0xCDEA40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600012B")]
		[Address(RVA = "0xCDEA38", Offset = "0xCDEA38", VA = "0xCDEA38")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public int AutoSORaycastLayer
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0xCDEA50", Offset = "0xCDEA50", VA = "0xCDEA50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600012D")]
		[Address(RVA = "0xCDEA48", Offset = "0xCDEA48", VA = "0xCDEA48")]
		set
		{
		}
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xCDEA58", Offset = "0xCDEA58", VA = "0xCDEA58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xCDF5E0", Offset = "0xCDF5E0", VA = "0xCDF5E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xCDF684", Offset = "0xCDF684", VA = "0xCDF684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1B2A4", Offset = "0xA1B2A4")]
	private IEnumerator ReturnShadowDistance()
	{
		return null;
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xCDF720", Offset = "0xCDF720", VA = "0xCDF720")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xCDF7AC", Offset = "0xCDF7AC", VA = "0xCDF7AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xCDF8A0", Offset = "0xCDF8A0", VA = "0xCDF8A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xCDF948", Offset = "0xCDF948", VA = "0xCDF948")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xCDF964", Offset = "0xCDF964", VA = "0xCDF964")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xCDF980", Offset = "0xCDF980", VA = "0xCDF980")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xCDF9A0", Offset = "0xCDF9A0", VA = "0xCDF9A0")]
	public void Discard(bool discard)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xCDF9D0", Offset = "0xCDF9D0", VA = "0xCDF9D0")]
	public bool IsDiscarded()
	{
		return default(bool);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xCDF9D8", Offset = "0xCDF9D8", VA = "0xCDF9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xCDFB58", Offset = "0xCDFB58", VA = "0xCDFB58")]
	public void OnPreRenderShadowProjector(Camera camera)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xCDFC00", Offset = "0xCDFC00", VA = "0xCDFC00")]
	public Matrix4x4 ShadowDummyLocalToWorldMatrix()
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xCDFC3C", Offset = "0xCDFC3C", VA = "0xCDFC3C")]
	public float GetShadowWorldSize()
	{
		return default(float);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xCDFE34", Offset = "0xCDFE34", VA = "0xCDFE34")]
	public Vector3 GetShadowPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xCDE2B4", Offset = "0xCDE2B4", VA = "0xCDE2B4")]
	private void OnShadowSizeChanged()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xCDE9F4", Offset = "0xCDE9F4", VA = "0xCDE9F4")]
	public void OnUVRectChanged()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xCDE40C", Offset = "0xCDE40C", VA = "0xCDE40C")]
	public void OnShadowColorChanged()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xCDFE60", Offset = "0xCDFE60", VA = "0xCDFE60")]
	private void RebuildMesh()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xCDFF50", Offset = "0xCDFF50", VA = "0xCDFF50")]
	public ShadowProjector()
	{
	}
}
[Token(Token = "0x2000024")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FED44", Offset = "0x9FED44")]
public class ShadowReceiver : MonoBehaviour
{
	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh _mesh;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh _meshCopy;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Terrain _terrain;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material _terrainMaterial;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isTerrain;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _standardTerrain;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int _id;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xCE0194", Offset = "0xCE0194", VA = "0xCE0194")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xCE0420", Offset = "0xCE0420", VA = "0xCE0420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xCE0684", Offset = "0xCE0684", VA = "0xCE0684")]
	public Mesh GetMesh()
	{
		return null;
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xCE070C", Offset = "0xCE070C", VA = "0xCE070C")]
	public bool IsTerrain()
	{
		return default(bool);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xCE07C0", Offset = "0xCE07C0", VA = "0xCE07C0")]
	public bool IsStandardTerrain()
	{
		return default(bool);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xCE07C8", Offset = "0xCE07C8", VA = "0xCE07C8")]
	public Terrain GetTerrain()
	{
		return null;
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xCE07D0", Offset = "0xCE07D0", VA = "0xCE07D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xCE07D4", Offset = "0xCE07D4", VA = "0xCE07D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xCE0914", Offset = "0xCE0914", VA = "0xCE0914")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xCE0918", Offset = "0xCE0918", VA = "0xCE0918")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xCE091C", Offset = "0xCE091C", VA = "0xCE091C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xCE056C", Offset = "0xCE056C", VA = "0xCE056C")]
	private void AddReceiver()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xCE07D8", Offset = "0xCE07D8", VA = "0xCE07D8")]
	private void RemoveReceiver()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xCE0920", Offset = "0xCE0920", VA = "0xCE0920")]
	public ShadowReceiver()
	{
	}
}
[Token(Token = "0x2000025")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FED7C", Offset = "0x9FED7C")]
public class ShadowTrigger : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnShadowEnter;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnShadowStay;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnShadowExit;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _InShadow;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _DetectShadow;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool _DetectLight;

	[Token(Token = "0x1700001E")]
	public bool DetectShadow
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0xCE0934", Offset = "0xCE0934", VA = "0xCE0934")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000152")]
		[Address(RVA = "0xCE0928", Offset = "0xCE0928", VA = "0xCE0928")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public bool DetectLight
	{
		[Token(Token = "0x6000155")]
		[Address(RVA = "0xCE0948", Offset = "0xCE0948", VA = "0xCE0948")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000154")]
		[Address(RVA = "0xCE093C", Offset = "0xCE093C", VA = "0xCE093C")]
		set
		{
		}
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xCE0950", Offset = "0xCE0950", VA = "0xCE0950")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xCE0954", Offset = "0xCE0954", VA = "0xCE0954")]
	private void Start()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xCE0A00", Offset = "0xCE0A00", VA = "0xCE0A00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xCE0A04", Offset = "0xCE0A04", VA = "0xCE0A04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xCE0AB0", Offset = "0xCE0AB0", VA = "0xCE0AB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xCE0958", Offset = "0xCE0958", VA = "0xCE0958")]
	private void AddShadowTrigger()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xCE0A08", Offset = "0xCE0A08", VA = "0xCE0A08")]
	private void RemoveShadowTrigger()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xCE0AB4", Offset = "0xCE0AB4", VA = "0xCE0AB4")]
	public void OnTriggerCheckDone(bool pointInShadow)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xCE0AFC", Offset = "0xCE0AFC", VA = "0xCE0AFC")]
	public ShadowTrigger()
	{
	}
}
[Token(Token = "0x2000026")]
public class SchoolBubbles : MonoBehaviour
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem _bubbleParticles;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _emitEverySecond;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _speedEmitMultiplier;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _minBubbles;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int _maxBubbles;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xD2855C", Offset = "0xD2855C", VA = "0xD2855C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xD28600", Offset = "0xD28600", VA = "0xD28600")]
	public void EmitBubbles(Vector3 pos, float amount)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xD28714", Offset = "0xD28714", VA = "0xD28714")]
	public SchoolBubbles()
	{
	}
}
[Token(Token = "0x2000027")]
public class SchoolChild : MonoBehaviour
{
	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04FBC", Offset = "0xA04FBC")]
	public SchoolController _spawner;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _wayPoint;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04FCC", Offset = "0xA04FCC")]
	public float _speed;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _stuckCounter;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _damping;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _model;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _targetSpeed;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float tParam;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _rotateCounterR;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _rotateCounterL;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _scanner;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _scan;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _instantiated;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _updateSeed;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA04FDC", Offset = "0xA04FDC")]
	public Transform _cacheTransform;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xD28730", Offset = "0xD28730", VA = "0xD28730")]
	public void Start()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xD292F4", Offset = "0xD292F4", VA = "0xD292F4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xD29238", Offset = "0xD29238", VA = "0xD29238")]
	public void FrameSkipSeedInit()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xD29074", Offset = "0xD29074", VA = "0xD29074")]
	public void CheckForBubblesThenInvoke()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xD29B64", Offset = "0xD29B64", VA = "0xD29B64")]
	public void EmitBubbles()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xD29BAC", Offset = "0xD29BAC", VA = "0xD29BAC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xD29BE8", Offset = "0xD29BE8", VA = "0xD29BE8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xD28A78", Offset = "0xD28A78", VA = "0xD28A78")]
	public void LocateRequiredChildren()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xD28E98", Offset = "0xD28E98", VA = "0xD28E98")]
	public void SkewModelForLessUniformedMovement()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xD289D0", Offset = "0xD289D0", VA = "0xD289D0")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xD28C24", Offset = "0xD28C24", VA = "0xD28C24")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xD29160", Offset = "0xD29160", VA = "0xD29160")]
	public void GetStartPos()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xD29C28", Offset = "0xD29C28", VA = "0xD29C28")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xD29880", Offset = "0xD29880", VA = "0xD29880")]
	public void RayCastToPushAwayFromObstacles()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xD29DB8", Offset = "0xD29DB8", VA = "0xD29DB8")]
	public void RayCastToPushAwayFromObstaclesCheckForCollision()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xD29D18", Offset = "0xD29D18", VA = "0xD29D18")]
	public void RotateScanner()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xD2A140", Offset = "0xD2A140", VA = "0xD2A140")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xD29700", Offset = "0xD29700", VA = "0xD29700")]
	public void ForwardMovement()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xD2949C", Offset = "0xD2949C", VA = "0xD2949C")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xD29368", Offset = "0xD29368", VA = "0xD29368")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xD2AADC", Offset = "0xD2AADC", VA = "0xD2AADC")]
	public void CheckIfThisShouldTriggerNewFlockWaypoint()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xD2AA2C", Offset = "0xD2AA2C", VA = "0xD2AA2C")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xD298C4", Offset = "0xD298C4", VA = "0xD298C4")]
	public void SetAnimationSpeed()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xD28F74", Offset = "0xD28F74", VA = "0xD28F74")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xD29048", Offset = "0xD29048", VA = "0xD29048")]
	public void SetRandomWaypoint()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xD2ACA4", Offset = "0xD2ACA4", VA = "0xD2ACA4")]
	public SchoolChild()
	{
	}
}
[Token(Token = "0x2000028")]
public class SchoolController : MonoBehaviour
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SchoolChild[] _childPrefab;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _groupTransform;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string _groupName;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _groupChildToSchool;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int _childAmount;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _spawnSphere;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _spawnSphereDepth;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _spawnSphereHeight;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _childSpeedMultipler;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _minSpeed;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _maxSpeed;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve _speedCurveMultiplier;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _minScale;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _maxScale;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _minDamping;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _maxDamping;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _waypointDistance;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _minAnimationSpeed;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _randomPositionTimerMax;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _randomPositionTimerMin;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _acceleration;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _brake;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float _positionSphere;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _positionSphereDepth;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float _positionSphereHeight;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool _childTriggerPos;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool _autoRandomPosition;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float _forcedRandomDelay;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float _schoolSpeed;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<SchoolChild> _roamers;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector3 _posBuffer;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 _posOffset;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool _avoidance;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float _avoidAngle;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float _avoidDistance;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float _avoidSpeed;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float _stopDistance;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float _stopSpeedMultiplier;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool _push;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float _pushDistance;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float _pushForce;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SchoolBubbles _bubbles;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int _updateDivisor;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float _newDelta;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int _updateCounter;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int _activeChildren;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xD2ACC8", Offset = "0xD2ACC8", VA = "0xD2ACC8")]
	public void Start()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xD2AF28", Offset = "0xD2AF28", VA = "0xD2AF28")]
	public void Update()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xD2B030", Offset = "0xD2B030", VA = "0xD2B030")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xD2ADDC", Offset = "0xD2ADDC", VA = "0xD2ADDC")]
	public void AddFish(int amount)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xD2B17C", Offset = "0xD2B17C", VA = "0xD2B17C")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xD2B1DC", Offset = "0xD2B1DC", VA = "0xD2B1DC")]
	public void RemoveFish(int amount)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xD2AF9C", Offset = "0xD2AF9C", VA = "0xD2AF9C")]
	public void UpdateFishAmount()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xD2AB00", Offset = "0xD2AB00", VA = "0xD2AB00")]
	public void SetRandomWaypointPosition()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xD2B2C8", Offset = "0xD2B2C8", VA = "0xD2B2C8")]
	public void AutoRandomWaypointPosition()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xD2AF1C", Offset = "0xD2AF1C", VA = "0xD2AF1C")]
	public float RandomWaypointTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xD2B354", Offset = "0xD2B354", VA = "0xD2B354")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xD2B5C8", Offset = "0xD2B5C8", VA = "0xD2B5C8")]
	public SchoolController()
	{
	}
}
[Token(Token = "0x2000029")]
public class isKinematic : MonoBehaviour
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Component[] rigidbodies;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x210F678", Offset = "0x210F678", VA = "0x210F678")]
	private void Start()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x210F768", Offset = "0x210F768", VA = "0x210F768")]
	private void Update()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x210F76C", Offset = "0x210F76C", VA = "0x210F76C")]
	public isKinematic()
	{
	}
}
[Token(Token = "0x200002A")]
public class SeaTurtleCameraScript : MonoBehaviour
{
	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float turnSpeed;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject seaTurtleCamera;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cameraAngleX;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float cameraAngleY;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cameraDistance;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xD2BF20", Offset = "0xD2BF20", VA = "0xD2BF20")]
	public void Start()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xD2C018", Offset = "0xD2C018", VA = "0xD2C018")]
	private void Update()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xD2C374", Offset = "0xD2C374", VA = "0xD2C374")]
	public void TargetSet(GameObject aTarget)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xD2C184", Offset = "0xD2C184", VA = "0xD2C184")]
	public void CameraRotationX()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xD2C27C", Offset = "0xD2C27C", VA = "0xD2C27C")]
	public void CameraRotationY()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xD2C37C", Offset = "0xD2C37C", VA = "0xD2C37C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xD2C49C", Offset = "0xD2C49C", VA = "0xD2C49C")]
	public SeaTurtleCameraScript()
	{
	}
}
[Token(Token = "0x200002B")]
public class SeaTurtleCharacter : MonoBehaviour
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator seaTurtleAnimator;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody seaTurtleRigid;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isSwimming;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxForwardSpeed;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxTurnSpeed;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxUpDownSpeed;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float forwardSpeed;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float turnSpeed;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float upDownSpeed;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float forwardAcceleration;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float turnAcceleration;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float upDownAcceleration;

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xD2C4C0", Offset = "0xD2C4C0", VA = "0xD2C4C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xD2C664", Offset = "0xD2C664", VA = "0xD2C664")]
	public void Attack()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xD2C6C0", Offset = "0xD2C6C0", VA = "0xD2C6C0")]
	public void Hit()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xD2C71C", Offset = "0xD2C71C", VA = "0xD2C71C")]
	public void Eat()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xD2C778", Offset = "0xD2C778", VA = "0xD2C778")]
	public void Death()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xD2C7D4", Offset = "0xD2C7D4", VA = "0xD2C7D4")]
	public void Rebirth()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xD2C548", Offset = "0xD2C548", VA = "0xD2C548")]
	public void Swim()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xD2C5D8", Offset = "0xD2C5D8", VA = "0xD2C5D8")]
	public void UpFromWater()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xD2C830", Offset = "0xD2C830", VA = "0xD2C830")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xD2C834", Offset = "0xD2C834", VA = "0xD2C834")]
	public void Move()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xD2CC28", Offset = "0xD2CC28", VA = "0xD2CC28")]
	public SeaTurtleCharacter()
	{
	}
}
[Token(Token = "0x200002C")]
public class SeaTurtleUserController : MonoBehaviour
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SeaTurtleCharacter seaTurtleCharacter;

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xD2CC4C", Offset = "0xD2CC4C", VA = "0xD2CC4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xD2CCA4", Offset = "0xD2CCA4", VA = "0xD2CCA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xD2CDC4", Offset = "0xD2CDC4", VA = "0xD2CDC4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xD2CECC", Offset = "0xD2CECC", VA = "0xD2CECC")]
	public SeaTurtleUserController()
	{
	}
}
[Token(Token = "0x200002D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FEDB4", Offset = "0x9FEDB4")]
public class RamSpline : MonoBehaviour
{
	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineProfile currentProfile;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile oldProfile;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<RamSpline> beginnigChildSplines;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<RamSpline> endingChildSplines;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RamSpline beginningSpline;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RamSpline endingSpline;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int beginningConnectionID;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int endingConnectionID;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float beginningMinWidth;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float beginningMaxWidth;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float endingMinWidth;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float endingMaxWidth;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int toolbarInt;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool invertUVDirection;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool uvRotation;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshFilter meshfilter;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector4> controlPoints;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Quaternion> controlPointsRotations;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Quaternion> controlPointsOrientation;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vector3> controlPointsUp;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Vector3> controlPointsDown;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<float> controlPointsSnap;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<AnimationCurve> controlPointsMeshCurves;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AnimationCurve terrainCurve;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int detailTerrain;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int detailTerrainForward;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool normalFromRaycast;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool snapToTerrain;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public LayerMask snapMask;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<Vector3> points;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<Vector3> pointsUp;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Vector3> pointsDown;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Vector3> points2;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Vector3> verticesBeginning;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Vector3> verticesEnding;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<Vector3> normalsBeginning;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<Vector3> normalsEnding;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<float> widths;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<float> snaps;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<float> lerpValues;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<Quaternion> orientations;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public List<Vector3> tangents;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<Vector3> normalsList;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color[] colors;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float minVal;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float maxVal;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float width;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int vertsInShape;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float traingleDensity;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float uvScale;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Material oldMaterial;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool showVertexColors;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool showFlowMap;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool overrideFlowMap;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	public bool drawOnMesh;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	public bool uvScaleOverride;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	public bool debug;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Color drawColor;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float flowSpeed;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public float flowDirection;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float opacity;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float drawSize;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float length;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float fulllength;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float minMaxWidth;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float uvWidth;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float uvBeginning;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xEFEB8C", Offset = "0xEFEB8C", VA = "0xEFEB8C")]
	public void Start()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xEFF824", Offset = "0xEFF824", VA = "0xEFF824")]
	public void GenerateBeginningParentBased()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xEFFBA0", Offset = "0xEFFBA0", VA = "0xEFFBA0")]
	public void GenerateEndingParentBased()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xEFEB90", Offset = "0xEFEB90", VA = "0xEFEB90")]
	public void GenerateSpline([Optional] List<RamSpline> generatedSplines)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xEFFF24", Offset = "0xEFFF24", VA = "0xEFFF24")]
	private void CalculateCatmullRomSideSplines(List<Vector4> controlPoints, int pos)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xF00694", Offset = "0xF00694", VA = "0xF00694")]
	private void CalculateCatmullRomSplineParameters(List<Vector4> controlPoints, int pos, bool initialPoints = false)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xF00A78", Offset = "0xF00A78", VA = "0xF00A78")]
	private void CalculateCatmullRomSpline(List<Vector3> controlPoints, int pos, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xF03C28", Offset = "0xF03C28", VA = "0xF03C28")]
	private void CalculatePointPosition(List<Vector3> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xF035F0", Offset = "0xF035F0", VA = "0xF035F0")]
	private void CalculatePointParameters(List<Vector4> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xF02DE4", Offset = "0xF02DE4", VA = "0xF02DE4")]
	private int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xF02E70", Offset = "0xF02E70", VA = "0xF02E70")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xF03200", Offset = "0xF03200", VA = "0xF03200")]
	private Vector3 GetCatmullRomTangent(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xF03528", Offset = "0xF03528", VA = "0xF03528")]
	private Vector3 CalculateNormal(Vector3 tangent, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xF00D84", Offset = "0xF00D84", VA = "0xF00D84")]
	private void GenerateMesh(ref Mesh mesh)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xF03DFC", Offset = "0xF03DFC", VA = "0xF03DFC")]
	private float FlowCalculate(float u, float normalY)
	{
		return default(float);
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xF03ECC", Offset = "0xF03ECC", VA = "0xF03ECC")]
	public RamSpline()
	{
	}
}
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FEE18", Offset = "0x9FEE18")]
public class SplineProfile : ScriptableObject
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material splineMaterial;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minVal;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxVal;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int vertsInShape;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float traingleDensity;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float uvScale;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool uvRotation;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xCEA544", Offset = "0xCEA544", VA = "0xCEA544")]
	public SplineProfile()
	{
	}
}
[Token(Token = "0x200002F")]
public class StandardWater : MonoBehaviour
{
	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 currentSpeed;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 altCurrentSpeed;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float offsetX;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float offsetY;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float altOffsetX;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float altOffsetY;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer renderer;

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xCEAB44", Offset = "0xCEAB44", VA = "0xCEAB44")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xCEAB9C", Offset = "0xCEAB9C", VA = "0xCEAB9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xCEACE4", Offset = "0xCEACE4", VA = "0xCEACE4")]
	public StandardWater()
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FEE6C", Offset = "0x9FEE6C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FEE6C", Offset = "0x9FEE6C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FEE6C", Offset = "0x9FEE6C")]
public class SgtGravityReceiver : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody body;

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x138A188", Offset = "0x138A188", VA = "0x138A188", Slot = "4")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x138A4A0", Offset = "0x138A4A0", VA = "0x138A4A0")]
	public SgtGravityReceiver()
	{
	}
}
[Token(Token = "0x2000031")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FEF04", Offset = "0x9FEF04")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FEF04", Offset = "0x9FEF04")]
public class SgtGravitySource : MonoBehaviour
{
	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtGravitySource> AllGravitySources;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA04FEC", Offset = "0xA04FEC")]
	public float Mass;

	[NonSerialized]
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody body;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x138A4A8", Offset = "0x138A4A8", VA = "0x138A4A8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x138A52C", Offset = "0x138A52C", VA = "0x138A52C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x138A5B0", Offset = "0x138A5B0", VA = "0x138A5B0", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x138A698", Offset = "0x138A698", VA = "0x138A698")]
	public SgtGravitySource()
	{
	}
}
[Token(Token = "0x2000032")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FEF50", Offset = "0x9FEF50")]
public class SgtRotate : MonoBehaviour
{
	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 DegreesPerSecond;

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x11EE2D4", Offset = "0x11EE2D4", VA = "0x11EE2D4", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x11EE390", Offset = "0x11EE390", VA = "0x11EE390")]
	public SgtRotate()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FEF88", Offset = "0x9FEF88")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x9FEF88", Offset = "0x9FEF88")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FEF88", Offset = "0x9FEF88")]
public class SgtSimpleOrbit : MonoBehaviour
{
	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05024", Offset = "0xA05024")]
	public float Radius;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0505C", Offset = "0xA0505C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0505C", Offset = "0xA0505C")]
	public float Oblateness;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA050B0", Offset = "0xA050B0")]
	public Vector3 Center;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA050E8", Offset = "0xA050E8")]
	public float Angle;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05120", Offset = "0xA05120")]
	public float DegreesPerSecond;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x11EF328", Offset = "0x11EF328", VA = "0x11EF328", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x11EF45C", Offset = "0x11EF45C", VA = "0x11EF45C")]
	public SgtSimpleOrbit()
	{
	}
}
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FEFE4", Offset = "0x9FEFE4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FEFE4", Offset = "0x9FEFE4")]
public class SgtVelocity : MonoBehaviour
{
	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05158", Offset = "0xA05158")]
	public Vector3 Velocity;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA05190", Offset = "0xA05190")]
	[SerializeField]
	private Vector3 expectedVelocity;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody body;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xCDDBD8", Offset = "0xCDDBD8", VA = "0xCDDBD8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xCDDD44", Offset = "0xCDDD44", VA = "0xCDDD44", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xCDDD4C", Offset = "0xCDDD4C", VA = "0xCDDD4C", Slot = "6")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xCDDBE0", Offset = "0xCDDBE0", VA = "0xCDDBE0")]
	private void UpdateVelocity(bool forceSet = false)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xCDDD54", Offset = "0xCDDD54", VA = "0xCDDD54")]
	public SgtVelocity()
	{
	}
}
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF06C", Offset = "0x9FF06C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF06C", Offset = "0x9FF06C")]
public class SgtAdvancedBelt : SgtBelt
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA051C8", Offset = "0xA051C8")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA051C8", Offset = "0xA051C8")]
	public int Seed;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05214", Offset = "0xA05214")]
	public AnimationCurve DistanceDistribution;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0524C", Offset = "0xA0524C")]
	public AnimationCurve HeightDistribution;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05284", Offset = "0xA05284")]
	public AnimationCurve SpeedDistribution;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA052BC", Offset = "0xA052BC")]
	public AnimationCurve SpeedNoiseDistribution;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA052F4", Offset = "0xA052F4")]
	public AnimationCurve RadiusDistribution;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0532C", Offset = "0xA0532C")]
	public AnimationCurve SpinDistribution;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05364", Offset = "0xA05364")]
	public int AsteroidCount;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Keyframe[] defaultDistanceKeyframes;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Keyframe[] defaultHeightKeyframes;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Keyframe[] defaultSpeedKeyframes;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Keyframe[] defaultSpeedOffsetKeyframes;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Keyframe[] defaultRadiusKeyframes;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Keyframe[] defaultSpinKeyframes;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xD2E8DC", Offset = "0xD2E8DC", VA = "0xD2E8DC")]
	public static SgtAdvancedBelt CreateAdvancedBelt(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xD2EA18", Offset = "0xD2EA18", VA = "0xD2EA18")]
	public static SgtAdvancedBelt CreateAdvancedBelt(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xD2EB60", Offset = "0xD2EB60", VA = "0xD2EB60", Slot = "12")]
	protected override void StartOnce()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xD2EE0C", Offset = "0xD2EE0C", VA = "0xD2EE0C", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xD2EE80", Offset = "0xD2EE80", VA = "0xD2EE80", Slot = "16")]
	protected override void NextQuad(ref SgtBeltAsteroid asteroid, int asteroidIndex)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xD2F020", Offset = "0xD2F020", VA = "0xD2F020", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xD2F080", Offset = "0xD2F080", VA = "0xD2F080")]
	public SgtAdvancedBelt()
	{
	}
}
[Token(Token = "0x2000036")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF0B8", Offset = "0x9FF0B8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF0B8", Offset = "0x9FF0B8")]
public class SgtAtmosphere : MonoBehaviour
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtAtmosphere> AllAtmospheres;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0539C", Offset = "0xA0539C")]
	public Color Color;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA053D4", Offset = "0xA053D4")]
	public float Brightness;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0540C", Offset = "0xA0540C")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05444", Offset = "0xA05444")]
	public int RenderQueueOffset;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0547C", Offset = "0xA0547C")]
	public float Height;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA054B4", Offset = "0xA054B4")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA054B4", Offset = "0xA054B4")]
	public float InnerFog;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05514", Offset = "0xA05514")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA05514", Offset = "0xA05514")]
	public float OuterFog;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05574", Offset = "0xA05574")]
	public float Sky;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA055AC", Offset = "0xA055AC")]
	public float CameraOffset;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA055E4", Offset = "0xA055E4")]
	public bool Lit;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0561C", Offset = "0xA0561C")]
	public Texture LightingTex;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05654", Offset = "0xA05654")]
	public bool Scattering;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0568C", Offset = "0xA0568C")]
	public bool GroundScattering;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA056C4", Offset = "0xA056C4")]
	public Texture ScatteringTex;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA056FC", Offset = "0xA056FC")]
	public float ScatteringStrength;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05734", Offset = "0xA05734")]
	public float ScatteringMie;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0576C", Offset = "0xA0576C")]
	public float ScatteringRayleigh;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA057A4", Offset = "0xA057A4")]
	public bool Night;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA057DC", Offset = "0xA057DC")]
	public float NightSky;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05814", Offset = "0xA05814")]
	public SgtEase.Type NightEase;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0584C", Offset = "0xA0584C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0584C", Offset = "0xA0584C")]
	public float NightStart;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA058A0", Offset = "0xA058A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA058A0", Offset = "0xA058A0")]
	public float NightEnd;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA058F4", Offset = "0xA058F4")]
	public float NightPower;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0592C", Offset = "0xA0592C")]
	public List<Light> Lights;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05964", Offset = "0xA05964")]
	public List<SgtShadow> Shadows;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0599C", Offset = "0xA0599C")]
	public Texture InnerDepthTex;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA059D4", Offset = "0xA059D4")]
	public float InnerMeshRadius;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05A0C", Offset = "0xA05A0C")]
	public List<MeshRenderer> InnerRenderers;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05A44", Offset = "0xA05A44")]
	public Texture2D OuterDepthTex;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05A7C", Offset = "0xA05A7C")]
	public float OuterMeshRadius;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05AB4", Offset = "0xA05AB4")]
	public List<Mesh> OuterMeshes;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<SgtAtmosphereOuter> Outers;

	[NonSerialized]
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material InnerMaterial;

	[NonSerialized]
	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material OuterMaterial;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected bool awakeCalled;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	[SerializeField]
	protected bool startCalled;

	[NonSerialized]
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	protected bool updateMaterialsCalled;

	[NonSerialized]
	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
	protected bool updateOutersCalled;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SgtTerrain terrain;

	[Token(Token = "0x17000020")]
	public float OuterRadius
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xD2F5D8", Offset = "0xD2F5D8", VA = "0xD2F5D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xD2F5E8", Offset = "0xD2F5E8", VA = "0xD2F5E8")]
	public void UpdateDepthTex()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xD2F6E8", Offset = "0xD2F6E8", VA = "0xD2F6E8")]
	public void UpdateLightingTex()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xD2F7E8", Offset = "0xD2F7E8", VA = "0xD2F7E8")]
	public void UpdateScatteringTex()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xD2F8E8", Offset = "0xD2F8E8", VA = "0xD2F8E8")]
	public void UpdateTerrainMaterials()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xD2FA1C", Offset = "0xD2FA1C", VA = "0xD2FA1C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B308", Offset = "0xA1B308")]
	public void UpdateMaterials()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xD30288", Offset = "0xD30288", VA = "0xD30288")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B340", Offset = "0xA1B340")]
	public void ApplyInnerMaterial()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xD3035C", Offset = "0xD3035C", VA = "0xD3035C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B378", Offset = "0xA1B378")]
	public void RemoveInnerMaterial()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xD30430", Offset = "0xD30430", VA = "0xD30430")]
	public static SgtAtmosphere CreateAtmosphere(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xD3056C", Offset = "0xD3056C", VA = "0xD3056C")]
	public static SgtAtmosphere CreateAtmosphere(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xD306B4", Offset = "0xD306B4", VA = "0xD306B4")]
	public void AddInnerRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xD307E4", Offset = "0xD307E4", VA = "0xD307E4")]
	public void RemoveRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xD308CC", Offset = "0xD308CC", VA = "0xD308CC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B3B0", Offset = "0xA1B3B0")]
	public void UpdateOuters()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xD30E24", Offset = "0xD30E24", VA = "0xD30E24", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xD31104", Offset = "0xD31104", VA = "0xD31104", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xD313F0", Offset = "0xD313F0", VA = "0xD313F0", Slot = "6")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xD315B0", Offset = "0xD315B0", VA = "0xD315B0", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xD317C0", Offset = "0xD317C0", VA = "0xD317C0", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xD31944", Offset = "0xD31944", VA = "0xD31944")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xD31C88", Offset = "0xD31C88", VA = "0xD31C88")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xD32134", Offset = "0xD32134", VA = "0xD32134")]
	private float GetSky(Camera camera)
	{
		return default(float);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xD300DC", Offset = "0xD300DC", VA = "0xD300DC")]
	private void UpdateMaterialNonSerialized()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xD3111C", Offset = "0xD3111C", VA = "0xD3111C")]
	private void StartOnce()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xD310C0", Offset = "0xD310C0", VA = "0xD310C0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xD30AA4", Offset = "0xD30AA4", VA = "0xD30AA4")]
	private SgtAtmosphereOuter GetOrAddOuter(int index)
	{
		return null;
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xD32554", Offset = "0xD32554", VA = "0xD32554")]
	public SgtAtmosphere()
	{
	}
}
[Token(Token = "0x2000037")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF104", Offset = "0x9FF104")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF104", Offset = "0x9FF104")]
public class SgtAtmosphereDepth : MonoBehaviour
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05B0C", Offset = "0xA05B0C")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05B44", Offset = "0xA05B44")]
	public int Width;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05B7C", Offset = "0xA05B7C")]
	public TextureFormat Format;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05BB4", Offset = "0xA05BB4")]
	public Color HorizonColor;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05BEC", Offset = "0xA05BEC")]
	public SgtEase.Type InnerEase;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05C24", Offset = "0xA05C24")]
	public Color InnerColor;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05C5C", Offset = "0xA05C5C")]
	public float InnerColorPower;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05C94", Offset = "0xA05C94")]
	public float InnerAlphaPower;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05CCC", Offset = "0xA05CCC")]
	public SgtEase.Type OuterEase;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05D04", Offset = "0xA05D04")]
	public Color OuterColor;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05D3C", Offset = "0xA05D3C")]
	public float OuterColorPower;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05D74", Offset = "0xA05D74")]
	public float OuterAlphaPower;

	[NonSerialized]
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Texture2D generatedInnerTexture;

	[NonSerialized]
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Texture2D generatedOuterTexture;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA05DAC", Offset = "0xA05DAC")]
	private bool startCalled;

	[Token(Token = "0x17000021")]
	public Texture2D GeneratedInnerTexture
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xD32654", Offset = "0xD32654", VA = "0xD32654")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public Texture2D GeneratedOuterTexture
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xD3265C", Offset = "0xD3265C", VA = "0xD3265C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xD32664", Offset = "0xD32664", VA = "0xD32664")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B3E8", Offset = "0xA1B3E8")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xD327B0", Offset = "0xD327B0", VA = "0xD327B0")]
	private void ValidateTexture(ref Texture2D texture2D, string createName)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xD32978", Offset = "0xD32978", VA = "0xD32978")]
	private void WriteTexture(Texture2D texture2D, float u, int x, Color baseColor, SgtEase.Type ease, float colorPower, float alphaPower)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xD32AB8", Offset = "0xD32AB8", VA = "0xD32AB8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B420", Offset = "0xA1B420")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xD32C58", Offset = "0xD32C58", VA = "0xD32C58", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xD32D24", Offset = "0xD32D24", VA = "0xD32D24", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xD32DD4", Offset = "0xD32DD4", VA = "0xD32DD4", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xD32C68", Offset = "0xD32C68", VA = "0xD32C68")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xD32E5C", Offset = "0xD32E5C", VA = "0xD32E5C")]
	public SgtAtmosphereDepth()
	{
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF150", Offset = "0x9FF150")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF150", Offset = "0x9FF150")]
public class SgtAtmosphereLighting : MonoBehaviour
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05DE4", Offset = "0xA05DE4")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05E1C", Offset = "0xA05E1C")]
	public int Width;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05E54", Offset = "0xA05E54")]
	public TextureFormat Format;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05E8C", Offset = "0xA05E8C")]
	public SgtEase.Type SunsetEase;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05EC4", Offset = "0xA05EC4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA05EC4", Offset = "0xA05EC4")]
	public float SunsetStart;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05F18", Offset = "0xA05F18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA05F18", Offset = "0xA05F18")]
	public float SunsetEnd;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05F6C", Offset = "0xA05F6C")]
	public float SunsetPowerR;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05FA4", Offset = "0xA05FA4")]
	public float SunsetPowerG;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05FDC", Offset = "0xA05FDC")]
	public float SunsetPowerB;

	[NonSerialized]
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x17000023")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xD32F30", Offset = "0xD32F30", VA = "0xD32F30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xD32F38", Offset = "0xD32F38", VA = "0xD32F38")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B458", Offset = "0xA1B458")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xD33274", Offset = "0xD33274", VA = "0xD33274")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xD3315C", Offset = "0xD3315C", VA = "0xD3315C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B490", Offset = "0xA1B490")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xD333A0", Offset = "0xD333A0", VA = "0xD333A0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xD33434", Offset = "0xD33434", VA = "0xD33434", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xD334E4", Offset = "0xD334E4", VA = "0xD334E4", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xD333B0", Offset = "0xD333B0", VA = "0xD333B0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xD33558", Offset = "0xD33558", VA = "0xD33558")]
	public SgtAtmosphereLighting()
	{
	}
}
[Token(Token = "0x2000039")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF19C", Offset = "0x9FF19C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF19C", Offset = "0x9FF19C")]
public class SgtAtmosphereLights : MonoBehaviour
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06024", Offset = "0xA06024")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0605C", Offset = "0xA0605C")]
	public bool RequireSameLayer;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06094", Offset = "0xA06094")]
	public bool RequireSameTag;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA060CC", Offset = "0xA060CC")]
	public string RequireNameContains;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xD33588", Offset = "0xD33588", VA = "0xD33588")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B4C8", Offset = "0xA1B4C8")]
	public void UpdateLights()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xD33690", Offset = "0xD33690", VA = "0xD33690", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xD336A0", Offset = "0xD336A0", VA = "0xD336A0", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xD33750", Offset = "0xD33750", VA = "0xD33750")]
	public SgtAtmosphereLights()
	{
	}
}
[Token(Token = "0x200003A")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF1E8", Offset = "0x9FF1E8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF1E8", Offset = "0x9FF1E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FF1E8", Offset = "0x9FF1E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FF1E8", Offset = "0x9FF1E8")]
public class SgtAtmosphereOuter : MonoBehaviour
{
	[Token(Token = "0x20003ED")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xD337E8", Offset = "0xD337E8", VA = "0xD337E8")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06114", Offset = "0xA06114")]
	public SgtAtmosphere Atmosphere;

	[NonSerialized]
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xD30BE4", Offset = "0xD30BE4", VA = "0xD30BE4")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xD2FFC4", Offset = "0xD2FFC4", VA = "0xD2FFC4")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xD30CFC", Offset = "0xD30CFC", VA = "0xD30CFC")]
	public void SetScale(float scale)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xD31BF8", Offset = "0xD31BF8", VA = "0xD31BF8")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xD32098", Offset = "0xD32098", VA = "0xD32098")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xD31B6C", Offset = "0xD31B6C", VA = "0xD31B6C")]
	public void Revert()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xD324B8", Offset = "0xD324B8", VA = "0xD324B8")]
	public static SgtAtmosphereOuter Create(SgtAtmosphere atmosphere)
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xD30D88", Offset = "0xD30D88", VA = "0xD30D88")]
	public static void Pool(SgtAtmosphereOuter outer)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xD318A0", Offset = "0xD318A0", VA = "0xD318A0")]
	public static void MarkForDestruction(SgtAtmosphereOuter outer)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xD33758", Offset = "0xD33758", VA = "0xD33758", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xD337E0", Offset = "0xD337E0", VA = "0xD337E0")]
	public SgtAtmosphereOuter()
	{
	}
}
[Token(Token = "0x200003B")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF2A8", Offset = "0x9FF2A8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF2A8", Offset = "0x9FF2A8")]
public class SgtAtmosphereScattering : MonoBehaviour
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0614C", Offset = "0xA0614C")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06184", Offset = "0xA06184")]
	public int Width;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA061BC", Offset = "0xA061BC")]
	public TextureFormat Format;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Scale;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA061F4", Offset = "0xA061F4")]
	public float Mie;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0622C", Offset = "0xA0622C")]
	public float Rayleigh;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06264", Offset = "0xA06264")]
	public SgtEase.Type SunsetEase;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0629C", Offset = "0xA0629C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0629C", Offset = "0xA0629C")]
	public float SunsetStart;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA062F0", Offset = "0xA062F0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA062F0", Offset = "0xA062F0")]
	public float SunsetEnd;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06344", Offset = "0xA06344")]
	public float SunsetPowerR;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0637C", Offset = "0xA0637C")]
	public float SunsetPowerG;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA063B4", Offset = "0xA063B4")]
	public float SunsetPowerB;

	[NonSerialized]
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D generatedTexture;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA063EC", Offset = "0xA063EC")]
	private bool startCalled;

	[Token(Token = "0x17000024")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xD337F0", Offset = "0xD337F0", VA = "0xD337F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xD337F8", Offset = "0xD337F8", VA = "0xD337F8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B500", Offset = "0xA1B500")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xD33B34", Offset = "0xD33B34", VA = "0xD33B34")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xD33A1C", Offset = "0xD33A1C", VA = "0xD33A1C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B538", Offset = "0xA1B538")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xD33C6C", Offset = "0xD33C6C", VA = "0xD33C6C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xD33D00", Offset = "0xD33D00", VA = "0xD33D00", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xD33DB0", Offset = "0xD33DB0", VA = "0xD33DB0", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xD33C7C", Offset = "0xD33C7C", VA = "0xD33C7C")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xD33E24", Offset = "0xD33E24", VA = "0xD33E24")]
	public SgtAtmosphereScattering()
	{
	}
}
[Token(Token = "0x200003C")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF2F4", Offset = "0x9FF2F4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF2F4", Offset = "0x9FF2F4")]
public class SgtAtmosphereShadows : MonoBehaviour
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06424", Offset = "0xA06424")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0645C", Offset = "0xA0645C")]
	public bool RequireSameLayer;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06494", Offset = "0xA06494")]
	public bool RequireSameTag;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA064CC", Offset = "0xA064CC")]
	public string RequireNameContains;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xD33E64", Offset = "0xD33E64", VA = "0xD33E64")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B570", Offset = "0xA1B570")]
	public void UpdateShadows()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xD33F6C", Offset = "0xD33F6C", VA = "0xD33F6C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xD33F7C", Offset = "0xD33F7C", VA = "0xD33F7C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xD3402C", Offset = "0xD3402C", VA = "0xD3402C")]
	public SgtAtmosphereShadows()
	{
	}
}
[Token(Token = "0x200003D")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF340", Offset = "0x9FF340")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF340", Offset = "0x9FF340")]
public class SgtAurora : MonoBehaviour
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06514", Offset = "0xA06514")]
	public Texture MainTex;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0654C", Offset = "0xA0654C")]
	public Color Color;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06584", Offset = "0xA06584")]
	public float Brightness;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA065BC", Offset = "0xA065BC")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA065F4", Offset = "0xA065F4")]
	public int RenderQueueOffset;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0662C", Offset = "0xA0662C")]
	public float CameraOffset;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06664", Offset = "0xA06664")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA06664", Offset = "0xA06664")]
	public int Seed;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA066B0", Offset = "0xA066B0")]
	public float RadiusMin;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA066E8", Offset = "0xA066E8")]
	public float RadiusMax;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06720", Offset = "0xA06720")]
	public int PathCount;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06758", Offset = "0xA06758")]
	public int PathDetail;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06790", Offset = "0xA06790")]
	public float TrailEdgeFade;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA067C8", Offset = "0xA067C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA067C8", Offset = "0xA067C8")]
	public float PathLengthMin;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0681C", Offset = "0xA0681C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0681C", Offset = "0xA0681C")]
	public float PathLengthMax;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06870", Offset = "0xA06870")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA06870", Offset = "0xA06870")]
	public float StartMin;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA068C4", Offset = "0xA068C4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA068C4", Offset = "0xA068C4")]
	public float StartMax;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06918", Offset = "0xA06918")]
	public float StartBias;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06950", Offset = "0xA06950")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA06950", Offset = "0xA06950")]
	public float StartTop;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA069A4", Offset = "0xA069A4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA069A4", Offset = "0xA069A4")]
	public int PointDetail;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA069FC", Offset = "0xA069FC")]
	public float PointSpiral;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06A34", Offset = "0xA06A34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA06A34", Offset = "0xA06A34")]
	public float PointJitter;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06A88", Offset = "0xA06A88")]
	public float TrailTile;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06AC0", Offset = "0xA06AC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA06AC0", Offset = "0xA06AC0")]
	public float TrailHeights;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06B18", Offset = "0xA06B18")]
	public int TrailHeightsDetail;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06B50", Offset = "0xA06B50")]
	public Gradient Colors;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06B88", Offset = "0xA06B88")]
	public int ColorsDetail;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06BC0", Offset = "0xA06BC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA06BC0", Offset = "0xA06BC0")]
	public float ColorsAlpha;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06C14", Offset = "0xA06C14")]
	public float ColorsAlphaBias;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06C4C", Offset = "0xA06C4C")]
	public bool FadeNear;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06C84", Offset = "0xA06C84")]
	public Texture FadeNearTex;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06CBC", Offset = "0xA06CBC")]
	public float FadeNearRadius;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06CF4", Offset = "0xA06CF4")]
	public float FadeNearThickness;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06D2C", Offset = "0xA06D2C")]
	public bool Anim;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06D64", Offset = "0xA06D64")]
	public float AnimOffset;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06D9C", Offset = "0xA06D9C")]
	public float AnimSpeed;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06DD4", Offset = "0xA06DD4")]
	public float AnimStrength;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06E0C", Offset = "0xA06E0C")]
	public int AnimStrengthDetail;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06E44", Offset = "0xA06E44")]
	public float AnimAngle;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06E7C", Offset = "0xA06E7C")]
	public int AnimAngleDetail;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<SgtAuroraModel> Models;

	[NonSerialized]
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material Material;

	[NonSerialized]
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Mesh> Meshes;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	protected bool updateMeshesAndModelsCalled;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Vector3> positions;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Vector4> coords0;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<Color> colors;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<Vector3> normals;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<int> indices;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xD34034", Offset = "0xD34034", VA = "0xD34034")]
	public void UpdateMainTex()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xD340D8", Offset = "0xD340D8", VA = "0xD340D8")]
	public void UpdateFadeNearTex()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xD3417C", Offset = "0xD3417C", VA = "0xD3417C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B5A8", Offset = "0xA1B5A8")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xD34688", Offset = "0xD34688", VA = "0xD34688")]
	private void BakeMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xD34844", Offset = "0xD34844", VA = "0xD34844")]
	private Mesh GetMesh(int index)
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xD34A88", Offset = "0xD34A88", VA = "0xD34A88")]
	private Vector3 GetStart(float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xD34BEC", Offset = "0xD34BEC", VA = "0xD34BEC")]
	private Vector3 GetNext(Vector3 point, float angle, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xD34D08", Offset = "0xD34D08", VA = "0xD34D08")]
	private float GetNextAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xD34D38", Offset = "0xD34D38", VA = "0xD34D38")]
	private float GetNextStrength()
	{
		return default(float);
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xD34D48", Offset = "0xD34D48", VA = "0xD34D48")]
	private Color GetNextColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xD34E40", Offset = "0xD34E40", VA = "0xD34E40")]
	private float GetNextHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000224")]
	private void Shift<T>(ref T a, ref T b, ref T c, T d, ref float f)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xD34E50", Offset = "0xD34E50", VA = "0xD34E50")]
	private void AddPath(ref Mesh mesh, ref int meshCount, ref int vertexCount)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xD35C08", Offset = "0xD35C08", VA = "0xD35C08")]
	private Vector3 GetNormal(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xD35CE4", Offset = "0xD35CE4", VA = "0xD35CE4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B5E0", Offset = "0xA1B5E0")]
	public void UpdateMeshesAndModels()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xD36368", Offset = "0xD36368", VA = "0xD36368")]
	public static SgtAurora CreateAurora(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xD364A4", Offset = "0xD364A4", VA = "0xD364A4")]
	public static SgtAurora CreateAurora(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xD365EC", Offset = "0xD365EC", VA = "0xD365EC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xD36814", Offset = "0xD36814", VA = "0xD36814", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xD3682C", Offset = "0xD3682C", VA = "0xD3682C", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xD3690C", Offset = "0xD3690C", VA = "0xD3690C", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xD36AD0", Offset = "0xD36AD0", VA = "0xD36AD0", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xD36D50", Offset = "0xD36D50", VA = "0xD36D50")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xD37094", Offset = "0xD37094", VA = "0xD37094")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xD36090", Offset = "0xD36090", VA = "0xD36090")]
	private SgtAuroraModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xD367D0", Offset = "0xD367D0", VA = "0xD367D0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xD372B0", Offset = "0xD372B0", VA = "0xD372B0")]
	public SgtAurora()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF38C", Offset = "0x9FF38C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF38C", Offset = "0x9FF38C")]
public class SgtAuroraFadeNear : MonoBehaviour
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06EC4", Offset = "0xA06EC4")]
	public SgtAurora Aurora;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06EFC", Offset = "0xA06EFC")]
	public int Width;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06F34", Offset = "0xA06F34")]
	public TextureFormat Format;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06F6C", Offset = "0xA06F6C")]
	public SgtEase.Type Ease;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06FA4", Offset = "0xA06FA4")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA06FDC", Offset = "0xA06FDC")]
	private bool startCalled;

	[Token(Token = "0x17000025")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0xD374A0", Offset = "0xD374A0", VA = "0xD374A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xD374A8", Offset = "0xD374A8", VA = "0xD374A8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B618", Offset = "0xA1B618")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xD37774", Offset = "0xD37774", VA = "0xD37774")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xD376D4", Offset = "0xD376D4", VA = "0xD376D4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B650", Offset = "0xA1B650")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xD37864", Offset = "0xD37864", VA = "0xD37864", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xD378F8", Offset = "0xD378F8", VA = "0xD378F8", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xD379A8", Offset = "0xD379A8", VA = "0xD379A8", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xD37874", Offset = "0xD37874", VA = "0xD37874")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xD37A1C", Offset = "0xD37A1C", VA = "0xD37A1C")]
	public SgtAuroraFadeNear()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF3D8", Offset = "0x9FF3D8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF3D8", Offset = "0x9FF3D8")]
public class SgtAuroraMainTex : MonoBehaviour
{
	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SgtAurora Aurora;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07014", Offset = "0xA07014")]
	public int Width;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0704C", Offset = "0xA0704C")]
	public int Height;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07084", Offset = "0xA07084")]
	public TextureFormat Format;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA070BC", Offset = "0xA070BC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA070BC", Offset = "0xA070BC")]
	public float NoiseStrength;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07110", Offset = "0xA07110")]
	public int NoisePoints;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07148", Offset = "0xA07148")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA07148", Offset = "0xA07148")]
	public int NoiseSeed;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07194", Offset = "0xA07194")]
	public SgtEase.Type TopEase;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA071CC", Offset = "0xA071CC")]
	public float TopPower;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07204", Offset = "0xA07204")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07204", Offset = "0xA07204")]
	public float MiddlePoint;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07258", Offset = "0xA07258")]
	public Color MiddleColor;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07290", Offset = "0xA07290")]
	public SgtEase.Type MiddleEase;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA072C8", Offset = "0xA072C8")]
	public float MiddlePower;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07300", Offset = "0xA07300")]
	public SgtEase.Type BottomEase;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07338", Offset = "0xA07338")]
	public float BottomPower;

	[NonSerialized]
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA07370", Offset = "0xA07370")]
	private bool startCalled;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<float> noisePoints;

	[Token(Token = "0x17000026")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xD37A3C", Offset = "0xD37A3C", VA = "0xD37A3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xD37A44", Offset = "0xD37A44", VA = "0xD37A44")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B688", Offset = "0xA1B688")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xD37E80", Offset = "0xD37E80", VA = "0xD37E80")]
	private void WriteTexture(float u, float v, int x, int y)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xD37DE0", Offset = "0xD37DE0", VA = "0xD37DE0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B6C0", Offset = "0xA1B6C0")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xD381F8", Offset = "0xD381F8", VA = "0xD381F8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xD3828C", Offset = "0xD3828C", VA = "0xD3828C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xD3833C", Offset = "0xD3833C", VA = "0xD3833C", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xD38208", Offset = "0xD38208", VA = "0xD38208")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xD383B0", Offset = "0xD383B0", VA = "0xD383B0")]
	public SgtAuroraMainTex()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF424", Offset = "0x9FF424")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF424", Offset = "0x9FF424")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x9FF424", Offset = "0x9FF424")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FF424", Offset = "0x9FF424")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FF424", Offset = "0x9FF424")]
public class SgtAuroraModel : MonoBehaviour
{
	[Token(Token = "0x20003EE")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xD38534", Offset = "0xD38534", VA = "0xD38534")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA073A8", Offset = "0xA073A8")]
	public SgtAurora Aurora;

	[NonSerialized]
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[NonSerialized]
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xD361D0", Offset = "0xD361D0", VA = "0xD361D0")]
	public void SetMesh(Mesh newMesh)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xD3458C", Offset = "0xD3458C", VA = "0xD3458C")]
	public void SetMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xD37004", Offset = "0xD37004", VA = "0xD37004")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xD37178", Offset = "0xD37178", VA = "0xD37178")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xD36F78", Offset = "0xD36F78", VA = "0xD36F78")]
	public void Revert()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xD37214", Offset = "0xD37214", VA = "0xD37214")]
	public static SgtAuroraModel Create(SgtAurora aurora)
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xD362CC", Offset = "0xD362CC", VA = "0xD362CC")]
	public static void Pool(SgtAuroraModel model)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xD36CAC", Offset = "0xD36CAC", VA = "0xD36CAC")]
	public static void MarkForDestruction(SgtAuroraModel model)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xD384A4", Offset = "0xD384A4", VA = "0xD384A4", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xD3852C", Offset = "0xD3852C", VA = "0xD3852C")]
	public SgtAuroraModel()
	{
	}
}
[Token(Token = "0x2000041")]
public abstract class SgtBelt : SgtQuads
{
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA073E0", Offset = "0xA073E0")]
	public Texture HeightTex;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07418", Offset = "0xA07418")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA07418", Offset = "0xA07418")]
	public float OrbitOffset;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07478", Offset = "0xA07478")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA07478", Offset = "0xA07478")]
	public float OrbitSpeed;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA074D8", Offset = "0xA074D8")]
	public bool Lit;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07510", Offset = "0xA07510")]
	public Texture LightingTex;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07548", Offset = "0xA07548")]
	public List<Light> Lights;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07580", Offset = "0xA07580")]
	public List<SgtShadow> Shadows;

	[Token(Token = "0x17000027")]
	protected override string ShaderName
	{
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xD3853C", Offset = "0xD3853C", VA = "0xD3853C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xD38584", Offset = "0xD38584", VA = "0xD38584")]
	public SgtCustomBelt MakeEditableCopy(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xD386A4", Offset = "0xD386A4", VA = "0xD386A4")]
	public SgtCustomBelt MakeEditableCopy(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xD38A2C", Offset = "0xD38A2C", VA = "0xD38A2C", Slot = "14")]
	public virtual void UpdateLightingTex()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xD38AD0", Offset = "0xD38AD0", VA = "0xD38AD0", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xD38B9C", Offset = "0xD38B9C", VA = "0xD38B9C", Slot = "15")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xD38DA0", Offset = "0xD38DA0", VA = "0xD38DA0", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xD38E6C", Offset = "0xD38E6C", VA = "0xD38E6C", Slot = "11")]
	protected override void BuildMaterial()
	{
	}

	[Token(Token = "0x600025A")]
	protected abstract void NextQuad(ref SgtBeltAsteroid quad, int starIndex);

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xD38F40", Offset = "0xD38F40", VA = "0xD38F40", Slot = "13")]
	protected override void BuildMesh(Mesh mesh, int asteroidIndex, int asteroidCount)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xD398AC", Offset = "0xD398AC", VA = "0xD398AC")]
	private void ObserverPreRender(SgtObserver observer)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xD39970", Offset = "0xD39970", VA = "0xD39970")]
	protected void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xD2F08C", Offset = "0xD2F08C", VA = "0xD2F08C")]
	protected SgtBelt()
	{
	}
}
[Serializable]
[Token(Token = "0x2000042")]
public class SgtBeltAsteroid
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SgtBeltAsteroid Temp;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA075B8", Offset = "0xA075B8")]
	public int Variant;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA075F0", Offset = "0xA075F0")]
	public Color Color;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07628", Offset = "0xA07628")]
	public float Radius;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07660", Offset = "0xA07660")]
	public float Height;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07698", Offset = "0xA07698")]
	public float Angle;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA076D0", Offset = "0xA076D0")]
	public float Spin;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07708", Offset = "0xA07708")]
	public float OrbitAngle;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07740", Offset = "0xA07740")]
	public float OrbitSpeed;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07778", Offset = "0xA07778")]
	public float OrbitDistance;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xD39AB0", Offset = "0xD39AB0", VA = "0xD39AB0")]
	public void CopyFrom(SgtBeltAsteroid other)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xD389F8", Offset = "0xD389F8", VA = "0xD389F8")]
	public SgtBeltAsteroid()
	{
	}
}
[Token(Token = "0x2000043")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF4F4", Offset = "0x9FF4F4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF4F4", Offset = "0x9FF4F4")]
public class SgtBeltLighting : MonoBehaviour
{
	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA077B0", Offset = "0xA077B0")]
	public SgtBelt Belt;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA077E8", Offset = "0xA077E8")]
	public int Width;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07820", Offset = "0xA07820")]
	public TextureFormat Format;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07858", Offset = "0xA07858")]
	public float FrontPower;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07890", Offset = "0xA07890")]
	public float BackPower;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA078C8", Offset = "0xA078C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA078C8", Offset = "0xA078C8")]
	public float BackStrength;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0791C", Offset = "0xA0791C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0791C", Offset = "0xA0791C")]
	public float BaseStrength;

	[NonSerialized]
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA07970", Offset = "0xA07970")]
	private bool startCalled;

	[Token(Token = "0x17000028")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xD39B6C", Offset = "0xD39B6C", VA = "0xD39B6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xD39B74", Offset = "0xD39B74", VA = "0xD39B74")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B6F8", Offset = "0xA1B6F8")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xD39E4C", Offset = "0xD39E4C", VA = "0xD39E4C")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xD39DA0", Offset = "0xD39DA0", VA = "0xD39DA0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B730", Offset = "0xA1B730")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xD39F68", Offset = "0xD39F68", VA = "0xD39F68", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xD39FFC", Offset = "0xD39FFC", VA = "0xD39FFC", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xD3A0AC", Offset = "0xD3A0AC", VA = "0xD3A0AC", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xD39F78", Offset = "0xD39F78", VA = "0xD39F78")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xD3A120", Offset = "0xD3A120", VA = "0xD3A120")]
	public SgtBeltLighting()
	{
	}
}
[Token(Token = "0x2000044")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF540", Offset = "0x9FF540")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF540", Offset = "0x9FF540")]
public class SgtBeltLights : MonoBehaviour
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA079A8", Offset = "0xA079A8")]
	public SgtBelt Belt;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA079E0", Offset = "0xA079E0")]
	public bool RequireSameLayer;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07A18", Offset = "0xA07A18")]
	public bool RequireSameTag;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07A50", Offset = "0xA07A50")]
	public string RequireNameContains;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xD3A13C", Offset = "0xD3A13C", VA = "0xD3A13C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B768", Offset = "0xA1B768")]
	public void UpdateLights()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xD3A244", Offset = "0xD3A244", VA = "0xD3A244", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xD3A254", Offset = "0xD3A254", VA = "0xD3A254", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xD3A304", Offset = "0xD3A304", VA = "0xD3A304")]
	public SgtBeltLights()
	{
	}
}
[Token(Token = "0x2000045")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF58C", Offset = "0x9FF58C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF58C", Offset = "0x9FF58C")]
public class SgtBeltShadows : MonoBehaviour
{
	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07A98", Offset = "0xA07A98")]
	public SgtBelt Belt;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07AD0", Offset = "0xA07AD0")]
	public bool RequireSameLayer;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07B08", Offset = "0xA07B08")]
	public bool RequireSameTag;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07B40", Offset = "0xA07B40")]
	public string RequireNameContains;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xD3A30C", Offset = "0xD3A30C", VA = "0xD3A30C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B7A0", Offset = "0xA1B7A0")]
	public void UpdateShadows()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xD3A414", Offset = "0xD3A414", VA = "0xD3A414", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xD3A424", Offset = "0xD3A424", VA = "0xD3A424", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xD3A4D4", Offset = "0xD3A4D4", VA = "0xD3A4D4")]
	public SgtBeltShadows()
	{
	}
}
[Serializable]
[Token(Token = "0x2000046")]
public struct SgtBoundsD
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool set;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public double minX;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public double minY;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public double minZ;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double maxX;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double maxY;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double maxZ;

	[Token(Token = "0x17000029")]
	public double SizeX
	{
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xAD8E94", Offset = "0xAD8E94", VA = "0xAD8E94")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700002A")]
	public double SizeY
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xAD8EA4", Offset = "0xAD8EA4", VA = "0xAD8EA4")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700002B")]
	public double SizeZ
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xAD8EB4", Offset = "0xAD8EB4", VA = "0xAD8EB4")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700002C")]
	public SgtVector3D Center
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xAD8EC4", Offset = "0xAD8EC4", VA = "0xAD8EC4")]
		get
		{
			return default(SgtVector3D);
		}
	}

	[Token(Token = "0x1700002D")]
	public SgtVector3D Size
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xAD8ECC", Offset = "0xAD8ECC", VA = "0xAD8ECC")]
		get
		{
			return default(SgtVector3D);
		}
	}

	[Token(Token = "0x1700002E")]
	public double ExtentsX
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xAD8ED4", Offset = "0xAD8ED4", VA = "0xAD8ED4")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700002F")]
	public double ExtentsY
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xAD8EDC", Offset = "0xAD8EDC", VA = "0xAD8EDC")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000030")]
	public double ExtentsZ
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xAD8EE4", Offset = "0xAD8EE4", VA = "0xAD8EE4")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000031")]
	public SgtVector3D Extents
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xAD8EEC", Offset = "0xAD8EEC", VA = "0xAD8EEC")]
		get
		{
			return default(SgtVector3D);
		}
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xAD8EF4", Offset = "0xAD8EF4", VA = "0xAD8EF4")]
	public void Add(SgtVector3D xyz)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xAD8EFC", Offset = "0xAD8EFC", VA = "0xAD8EFC")]
	public bool Contains(SgtVector3D xyz)
	{
		return default(bool);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xAD8F04", Offset = "0xAD8F04", VA = "0xAD8F04")]
	public bool Contains(long x, long y, long z)
	{
		return default(bool);
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xAD8F64", Offset = "0xAD8F64", VA = "0xAD8F64")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xAD8F78", Offset = "0xAD8F78", VA = "0xAD8F78", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xAD8F80", Offset = "0xAD8F80", VA = "0xAD8F80", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xD3AA10", Offset = "0xD3AA10", VA = "0xD3AA10")]
	public static bool operator ==(SgtBoundsD a, SgtBoundsD b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xD3AA7C", Offset = "0xD3AA7C", VA = "0xD3AA7C")]
	public static bool operator !=(SgtBoundsD a, SgtBoundsD b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xD3AAE8", Offset = "0xD3AAE8", VA = "0xD3AAE8")]
	public static explicit operator Bounds(SgtBoundsD a)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xAD8F88", Offset = "0xAD8F88", VA = "0xAD8F88", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000047")]
public struct SgtBoundsL
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public long minX;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public long minY;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long minZ;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long maxX;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public long maxY;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public long maxZ;

	[Token(Token = "0x17000032")]
	public SgtBoundsL Double
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xAD8F90", Offset = "0xAD8F90", VA = "0xAD8F90")]
		get
		{
			return default(SgtBoundsL);
		}
	}

	[Token(Token = "0x17000033")]
	public long SizeX
	{
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xAD8FB0", Offset = "0xAD8FB0", VA = "0xAD8FB0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000034")]
	public long SizeY
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0xAD8FC0", Offset = "0xAD8FC0", VA = "0xAD8FC0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000035")]
	public long SizeZ
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xAD8FD0", Offset = "0xAD8FD0", VA = "0xAD8FD0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000036")]
	public SgtRectL RectZY
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xAD8FE0", Offset = "0xAD8FE0", VA = "0xAD8FE0")]
		get
		{
			return default(SgtRectL);
		}
	}

	[Token(Token = "0x17000037")]
	public SgtRectL RectXZ
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xAD8FFC", Offset = "0xAD8FFC", VA = "0xAD8FFC")]
		get
		{
			return default(SgtRectL);
		}
	}

	[Token(Token = "0x17000038")]
	public SgtRectL RectXY
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xAD901C", Offset = "0xAD901C", VA = "0xAD901C")]
		get
		{
			return default(SgtRectL);
		}
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xAD9038", Offset = "0xAD9038", VA = "0xAD9038")]
	public SgtBoundsL(long x, long y, long z, long size)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xAD9060", Offset = "0xAD9060", VA = "0xAD9060")]
	public SgtBoundsL(long newMinX, long newMinY, long newMinZ, long newMaxX, long newMaxY, long newMaxZ)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xAD9070", Offset = "0xAD9070", VA = "0xAD9070")]
	public void ClampTo(SgtBoundsL other)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xAD90A4", Offset = "0xAD90A4", VA = "0xAD90A4")]
	public bool Contains(SgtVector3L xyz)
	{
		return default(bool);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xAD9104", Offset = "0xAD9104", VA = "0xAD9104")]
	public bool Contains(long x, long y, long z)
	{
		return default(bool);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xAD9158", Offset = "0xAD9158", VA = "0xAD9158")]
	public bool IsInsideX(long x)
	{
		return default(bool);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xAD917C", Offset = "0xAD917C", VA = "0xAD917C")]
	public bool IsInsideY(long y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xAD91A0", Offset = "0xAD91A0", VA = "0xAD91A0")]
	public bool IsInsideZ(long z)
	{
		return default(bool);
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xAD91C4", Offset = "0xAD91C4", VA = "0xAD91C4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xAD91D4", Offset = "0xAD91D4", VA = "0xAD91D4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xAD91DC", Offset = "0xAD91DC", VA = "0xAD91DC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xD3B2BC", Offset = "0xD3B2BC", VA = "0xD3B2BC")]
	public static bool operator ==(SgtBoundsL a, SgtBoundsL b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xD3B328", Offset = "0xD3B328", VA = "0xD3B328")]
	public static bool operator !=(SgtBoundsL a, SgtBoundsL b)
	{
		return default(bool);
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xAD91E4", Offset = "0xAD91E4", VA = "0xAD91E4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000048")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF5D8", Offset = "0x9FF5D8")]
public class SgtBox : SgtShape
{
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07B88", Offset = "0xA07B88")]
	public Vector3 Extents;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07BC0", Offset = "0xA07BC0")]
	public SgtEase.Type Ease;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07BF8", Offset = "0xA07BF8")]
	public float Power;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xD3B708", Offset = "0xD3B708", VA = "0xD3B708", Slot = "4")]
	public override float GetDensity(Vector3 worldPoint)
	{
		return default(float);
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xD3B860", Offset = "0xD3B860", VA = "0xD3B860")]
	public static SgtBox CreateBox(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xD3B978", Offset = "0xD3B978", VA = "0xD3B978")]
	public static SgtBox CreateBox(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xD3BAC0", Offset = "0xD3BAC0", VA = "0xD3BAC0")]
	public SgtBox()
	{
	}
}
[Token(Token = "0x2000049")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF610", Offset = "0x9FF610")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF610", Offset = "0x9FF610")]
public class SgtBoxStarfield : SgtPointStarfield
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07C30", Offset = "0xA07C30")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA07C30", Offset = "0xA07C30")]
	public int Seed;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07C7C", Offset = "0xA07C7C")]
	public Vector3 Extents;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07CB4", Offset = "0xA07CB4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07CB4", Offset = "0xA07CB4")]
	public float Offset;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07D08", Offset = "0xA07D08")]
	public int StarCount;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07D40", Offset = "0xA07D40")]
	public float StarRadiusMin;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07D78", Offset = "0xA07D78")]
	public float StarRadiusMax;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07DB0", Offset = "0xA07DB0")]
	public float StarRadiusBias;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07DE8", Offset = "0xA07DE8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07DE8", Offset = "0xA07DE8")]
	public float StarPulseMax;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x137D00C", Offset = "0x137D00C", VA = "0x137D00C")]
	public static SgtBoxStarfield CreateBoxStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x137D124", Offset = "0x137D124", VA = "0x137D124")]
	public static SgtBoxStarfield CreateBoxStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x137D3BC", Offset = "0x137D3BC", VA = "0x137D3BC", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x137D4D4", Offset = "0x137D4D4", VA = "0x137D4D4", Slot = "15")]
	protected override void NextQuad(ref SgtPointStar star, int starIndex)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x137D768", Offset = "0x137D768", VA = "0x137D768", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x137D848", Offset = "0x137D848", VA = "0x137D848")]
	public SgtBoxStarfield()
	{
	}
}
[Token(Token = "0x200004A")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF65C", Offset = "0x9FF65C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FF65C", Offset = "0x9FF65C")]
public class SgtCameraDepth : SgtDepth
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07E3C", Offset = "0xA07E3C")]
	public int Resolution;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07E74", Offset = "0xA07E74")]
	public float Size;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera cachedCamera;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture renderTexture;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D readTexture;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x137D988", Offset = "0x137D988", VA = "0x137D988")]
	public static SgtCameraDepth CreateDepthCamera(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x137DAA0", Offset = "0x137DAA0", VA = "0x137DAA0")]
	public static SgtCameraDepth CreateDepthCamera(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x137DBE4", Offset = "0x137DBE4", VA = "0x137DBE4", Slot = "4")]
	protected override float DoCalculate(Vector3 eye, Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x137E274", Offset = "0x137E274", VA = "0x137E274", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x137E278", Offset = "0x137E278", VA = "0x137E278", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x137E110", Offset = "0x137E110", VA = "0x137E110")]
	private void UpdateCamera()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x137E300", Offset = "0x137E300", VA = "0x137E300")]
	public SgtCameraDepth()
	{
	}
}
[Token(Token = "0x200004B")]
public class SgtCameraState
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Camera Camera;

	[Token(Token = "0x60002AC")]
	public static T Save<T>(ref List<T> cameraStates, Camera camera) where T : SgtCameraState, new()
	{
		return null;
	}

	[Token(Token = "0x60002AD")]
	public static T Restore<T>(List<T> cameraStates, Camera camera) where T : SgtCameraState
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	public static void Clear<T>(List<T> cameraStates) where T : SgtCameraState
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x137E374", Offset = "0x137E374", VA = "0x137E374")]
	public SgtCameraState()
	{
	}
}
[Token(Token = "0x200004C")]
public static class SgtClassPool<T> where T : class
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<T> pool;

	[Token(Token = "0x17000039")]
	public static int Count
	{
		[Token(Token = "0x60002B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002B1")]
	static SgtClassPool()
	{
	}

	[Token(Token = "0x60002B2")]
	public static T Add(T entry)
	{
		return null;
	}

	[Token(Token = "0x60002B3")]
	public static T Add(T element, Action<T> onAdd)
	{
		return null;
	}

	[Token(Token = "0x60002B4")]
	public static T Pop()
	{
		return null;
	}
}
[Token(Token = "0x200004D")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF6D0", Offset = "0x9FF6D0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF6D0", Offset = "0x9FF6D0")]
public class SgtCloudsphere : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtCloudsphere> AllCloudspheres;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07EAC", Offset = "0xA07EAC")]
	public Color Color;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07EE4", Offset = "0xA07EE4")]
	public float Brightness;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07F1C", Offset = "0xA07F1C")]
	public float MeshRadius;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07F54", Offset = "0xA07F54")]
	public List<Mesh> Meshes;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07F8C", Offset = "0xA07F8C")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07FC4", Offset = "0xA07FC4")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA07FFC", Offset = "0xA07FFC")]
	public float Radius;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08034", Offset = "0xA08034")]
	public bool Fade;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0806C", Offset = "0xA0806C")]
	public Texture FadeTex;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA080A4", Offset = "0xA080A4")]
	public float FadeDistance;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA080DC", Offset = "0xA080DC")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA080DC", Offset = "0xA080DC")]
	public float CameraOffset;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0813C", Offset = "0xA0813C")]
	public Cubemap MainTex;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08174", Offset = "0xA08174")]
	public Texture2D DepthTex;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA081AC", Offset = "0xA081AC")]
	public bool Lit;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA081E4", Offset = "0xA081E4")]
	public Texture LightingTex;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0821C", Offset = "0xA0821C")]
	public List<Light> Lights;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08254", Offset = "0xA08254")]
	public List<SgtShadow> Shadows;

	[NonSerialized]
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material Material;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public List<SgtCloudsphereModel> Models;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool updateModelsCalled;

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x137E37C", Offset = "0x137E37C", VA = "0x137E37C")]
	public void UpdateDeptchTex()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x137E420", Offset = "0x137E420", VA = "0x137E420")]
	public void UpdateFadeTex()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x137E4C4", Offset = "0x137E4C4", VA = "0x137E4C4")]
	public void UpdateLightingTex()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x137E568", Offset = "0x137E568", VA = "0x137E568")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B7D8", Offset = "0xA1B7D8")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x137EC90", Offset = "0x137EC90", VA = "0x137EC90")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B810", Offset = "0xA1B810")]
	public void UpdateModels()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x137F198", Offset = "0x137F198", VA = "0x137F198")]
	public static SgtCloudsphere CreateCloudsphere(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x137F2D4", Offset = "0x137F2D4", VA = "0x137F2D4")]
	public static SgtCloudsphere CreateCloudsphere(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x137F418", Offset = "0x137F418", VA = "0x137F418", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x137F684", Offset = "0x137F684", VA = "0x137F684", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x137F69C", Offset = "0x137F69C", VA = "0x137F69C", Slot = "6")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1380020", Offset = "0x1380020", VA = "0x1380020", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1380228", Offset = "0x1380228", VA = "0x1380228", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x13803A0", Offset = "0x13803A0", VA = "0x13803A0")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x138079C", Offset = "0x138079C", VA = "0x138079C")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x138060C", Offset = "0x138060C", VA = "0x138060C")]
	private void UpdateMaterialNonSerialized()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x137EE38", Offset = "0x137EE38", VA = "0x137EE38")]
	private SgtCloudsphereModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x137F640", Offset = "0x137F640", VA = "0x137F640")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1380B9C", Offset = "0x1380B9C", VA = "0x1380B9C")]
	public SgtCloudsphere()
	{
	}
}
[Token(Token = "0x200004E")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF71C", Offset = "0x9FF71C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF71C", Offset = "0x9FF71C")]
public class SgtCloudsphereDepth : MonoBehaviour
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA082AC", Offset = "0xA082AC")]
	public SgtCloudsphere Cloudsphere;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA082E4", Offset = "0xA082E4")]
	public int Width;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0831C", Offset = "0xA0831C")]
	public TextureFormat Format;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08354", Offset = "0xA08354")]
	public SgtEase.Type RimEase;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0838C", Offset = "0xA0838C")]
	public Color RimColor;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA083C4", Offset = "0xA083C4")]
	public float RimPower;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA083FC", Offset = "0xA083FC")]
	public float AlphaDensity;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08434", Offset = "0xA08434")]
	public float AlphaFade;

	[NonSerialized]
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0846C", Offset = "0xA0846C")]
	private bool startCalled;

	[Token(Token = "0x1700003A")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x1380C64", Offset = "0x1380C64", VA = "0x1380C64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1380C6C", Offset = "0x1380C6C", VA = "0x1380C6C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B848", Offset = "0xA1B848")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x138105C", Offset = "0x138105C", VA = "0x138105C")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1380F44", Offset = "0x1380F44", VA = "0x1380F44")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B880", Offset = "0xA1B880")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1381328", Offset = "0x1381328", VA = "0x1381328", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x13813BC", Offset = "0x13813BC", VA = "0x13813BC", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x138146C", Offset = "0x138146C", VA = "0x138146C", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1381338", Offset = "0x1381338", VA = "0x1381338")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x13814E0", Offset = "0x13814E0", VA = "0x13814E0")]
	public SgtCloudsphereDepth()
	{
	}
}
[Token(Token = "0x200004F")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF768", Offset = "0x9FF768")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF768", Offset = "0x9FF768")]
public class SgtCloudsphereFade : MonoBehaviour
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SgtCloudsphere Cloudsphere;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Width;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA084A4", Offset = "0xA084A4")]
	public TextureFormat Format;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SgtEase.Type Ease;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA084DC", Offset = "0xA084DC")]
	private bool startCalled;

	[Token(Token = "0x1700003B")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x1381560", Offset = "0x1381560", VA = "0x1381560")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1381568", Offset = "0x1381568", VA = "0x1381568")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B8B8", Offset = "0xA1B8B8")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x13818A8", Offset = "0x13818A8", VA = "0x13818A8")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1381790", Offset = "0x1381790", VA = "0x1381790")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B8F0", Offset = "0xA1B8F0")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1381988", Offset = "0x1381988", VA = "0x1381988", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1381A1C", Offset = "0x1381A1C", VA = "0x1381A1C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1381ACC", Offset = "0x1381ACC", VA = "0x1381ACC", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1381998", Offset = "0x1381998", VA = "0x1381998")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1381B40", Offset = "0x1381B40", VA = "0x1381B40")]
	public SgtCloudsphereFade()
	{
	}
}
[Token(Token = "0x2000050")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF7B4", Offset = "0x9FF7B4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF7B4", Offset = "0x9FF7B4")]
public class SgtCloudsphereLighting : MonoBehaviour
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08514", Offset = "0xA08514")]
	public SgtCloudsphere Cloudsphere;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0854C", Offset = "0xA0854C")]
	public int Width;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08584", Offset = "0xA08584")]
	public TextureFormat Format;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA085BC", Offset = "0xA085BC")]
	public SgtEase.Type SunsetEase;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA085F4", Offset = "0xA085F4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA085F4", Offset = "0xA085F4")]
	public float SunsetStart;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08648", Offset = "0xA08648")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA08648", Offset = "0xA08648")]
	public float SunsetEnd;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0869C", Offset = "0xA0869C")]
	public float SunsetPowerR;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA086D4", Offset = "0xA086D4")]
	public float SunsetPowerG;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0870C", Offset = "0xA0870C")]
	public float SunsetPowerB;

	[NonSerialized]
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D generatedTexture;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA08744", Offset = "0xA08744")]
	private bool startCalled;

	[Token(Token = "0x1700003C")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x1381B60", Offset = "0x1381B60", VA = "0x1381B60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1381B68", Offset = "0x1381B68", VA = "0x1381B68")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B928", Offset = "0xA1B928")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1381EA0", Offset = "0x1381EA0", VA = "0x1381EA0")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1381D88", Offset = "0x1381D88", VA = "0x1381D88")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B960", Offset = "0xA1B960")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1381FC0", Offset = "0x1381FC0", VA = "0x1381FC0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1382054", Offset = "0x1382054", VA = "0x1382054", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1382104", Offset = "0x1382104", VA = "0x1382104", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1381FD0", Offset = "0x1381FD0", VA = "0x1381FD0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1382178", Offset = "0x1382178", VA = "0x1382178")]
	public SgtCloudsphereLighting()
	{
	}
}
[Token(Token = "0x2000051")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF800", Offset = "0x9FF800")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF800", Offset = "0x9FF800")]
public class SgtCloudsphereLights : MonoBehaviour
{
	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0877C", Offset = "0xA0877C")]
	public SgtCloudsphere Cloudsphere;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA087B4", Offset = "0xA087B4")]
	public bool RequireSameLayer;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA087EC", Offset = "0xA087EC")]
	public bool RequireSameTag;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08824", Offset = "0xA08824")]
	public string RequireNameContains;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x13821A8", Offset = "0x13821A8", VA = "0x13821A8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B998", Offset = "0xA1B998")]
	public void UpdateLights()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1382560", Offset = "0x1382560", VA = "0x1382560", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1382570", Offset = "0x1382570", VA = "0x1382570", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1382620", Offset = "0x1382620", VA = "0x1382620")]
	public SgtCloudsphereLights()
	{
	}
}
[Token(Token = "0x2000052")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF84C", Offset = "0x9FF84C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF84C", Offset = "0x9FF84C")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x9FF84C", Offset = "0x9FF84C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FF84C", Offset = "0x9FF84C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FF84C", Offset = "0x9FF84C")]
public class SgtCloudsphereModel : MonoBehaviour
{
	[Token(Token = "0x20003EF")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x138275C", Offset = "0x138275C", VA = "0x138275C")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0886C", Offset = "0xA0886C")]
	public SgtCloudsphere Cloudsphere;

	[NonSerialized]
	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[NonSerialized]
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x137EF78", Offset = "0x137EF78", VA = "0x137EF78")]
	public void SetMesh(Mesh newMesh)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x137E990", Offset = "0x137E990", VA = "0x137E990")]
	public void SetMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x137F074", Offset = "0x137F074", VA = "0x137F074")]
	public void SetScale(float scale)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1380B00", Offset = "0x1380B00", VA = "0x1380B00")]
	public static SgtCloudsphereModel Create(SgtCloudsphere cloudsphere)
	{
		return null;
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x137F0FC", Offset = "0x137F0FC", VA = "0x137F0FC")]
	public static void Pool(SgtCloudsphereModel model)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x13802FC", Offset = "0x13802FC", VA = "0x13802FC")]
	public static void MarkForDestruction(SgtCloudsphereModel model)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x138070C", Offset = "0x138070C", VA = "0x138070C")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1380880", Offset = "0x1380880", VA = "0x1380880")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1380680", Offset = "0x1380680", VA = "0x1380680")]
	public void Revert()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x13826CC", Offset = "0x13826CC", VA = "0x13826CC", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1382754", Offset = "0x1382754", VA = "0x1382754")]
	public SgtCloudsphereModel()
	{
	}
}
[Token(Token = "0x2000053")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF91C", Offset = "0x9FF91C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF91C", Offset = "0x9FF91C")]
public class SgtCloudsphereShadows : MonoBehaviour
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA088A4", Offset = "0xA088A4")]
	public SgtCloudsphere Cloudsphere;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA088DC", Offset = "0xA088DC")]
	public bool RequireSameLayer;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08914", Offset = "0xA08914")]
	public bool RequireSameTag;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0894C", Offset = "0xA0894C")]
	public string RequireNameContains;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1382764", Offset = "0x1382764", VA = "0x1382764")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1B9D0", Offset = "0xA1B9D0")]
	public void UpdateShadows()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1382AA4", Offset = "0x1382AA4", VA = "0x1382AA4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1382AB4", Offset = "0x1382AB4", VA = "0x1382AB4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1382B64", Offset = "0x1382B64", VA = "0x1382B64")]
	public SgtCloudsphereShadows()
	{
	}
}
[Token(Token = "0x2000054")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF968", Offset = "0x9FF968")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF968", Offset = "0x9FF968")]
public class SgtComponentPool : MonoBehaviour
{
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtComponentPool> AllComponentPools;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08994", Offset = "0xA08994")]
	public string TypeName;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA089CC", Offset = "0xA089CC")]
	public List<Component> Elements;

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1382B6C", Offset = "0x1382B6C", VA = "0x1382B6C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1382BF0", Offset = "0x1382BF0", VA = "0x1382BF0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1382C74", Offset = "0x1382C74", VA = "0x1382C74", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1382D78", Offset = "0x1382D78", VA = "0x1382D78")]
	public SgtComponentPool()
	{
	}
}
[Token(Token = "0x2000055")]
public static class SgtComponentPool<T> where T : Component
{
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04040", Offset = "0xA04040")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string typeName;

		[Token(Token = "0x600190B")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x600190C")]
		internal bool <UpdateComponent>b__0(SgtComponentPool p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SgtComponentPool pool;

	[Token(Token = "0x1700003D")]
	public static int Count
	{
		[Token(Token = "0x60002FB")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002FC")]
	public static T Add(T entry)
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	public static T Add(T element, Action<T> onAdd)
	{
		return null;
	}

	[Token(Token = "0x60002FE")]
	public static void Cache()
	{
	}

	[Token(Token = "0x60002FF")]
	public static T Pop(Transform parent, string name, int layer)
	{
		return null;
	}

	[Token(Token = "0x6000300")]
	public static T Pop()
	{
		return null;
	}

	[Token(Token = "0x6000301")]
	public static T Pop(Predicate<T> match)
	{
		return null;
	}

	[Token(Token = "0x6000302")]
	private static void UpdateComponent(bool allowCreation)
	{
	}
}
[Token(Token = "0x2000056")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FF9B4", Offset = "0x9FF9B4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FF9B4", Offset = "0x9FF9B4")]
public class SgtCustomBelt : SgtBelt
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08A04", Offset = "0xA08A04")]
	public List<SgtBeltAsteroid> Asteroids;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1382E5C", Offset = "0x1382E5C", VA = "0x1382E5C")]
	public static SgtCustomBelt CreateCustomBelt(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1382F74", Offset = "0x1382F74", VA = "0x1382F74")]
	public static SgtCustomBelt CreateCustomBelt(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x13830B8", Offset = "0x13830B8", VA = "0x13830B8", Slot = "8")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1383194", Offset = "0x1383194", VA = "0x1383194", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x13831E8", Offset = "0x13831E8", VA = "0x13831E8", Slot = "16")]
	protected override void NextQuad(ref SgtBeltAsteroid asteroid, int asteroidIndex)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1383274", Offset = "0x1383274", VA = "0x1383274", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1383278", Offset = "0x1383278", VA = "0x1383278")]
	public SgtCustomBelt()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFA00", Offset = "0x9FFA00")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFA00", Offset = "0x9FFA00")]
public class SgtCustomStarfield : SgtPointStarfield
{
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08A3C", Offset = "0xA08A3C")]
	public List<SgtPointStar> Stars;

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1383280", Offset = "0x1383280", VA = "0x1383280")]
	public static SgtCustomStarfield CreateCustomStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1383398", Offset = "0x1383398", VA = "0x1383398")]
	public static SgtCustomStarfield CreateCustomStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x13834DC", Offset = "0x13834DC", VA = "0x13834DC", Slot = "8")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x13835B8", Offset = "0x13835B8", VA = "0x13835B8", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x138360C", Offset = "0x138360C", VA = "0x138360C", Slot = "15")]
	protected override void NextQuad(ref SgtPointStar quad, int starIndex)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x13836F0", Offset = "0x13836F0", VA = "0x13836F0", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x13836F4", Offset = "0x13836F4", VA = "0x13836F4")]
	public SgtCustomStarfield()
	{
	}
}
[Token(Token = "0x2000058")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFA4C", Offset = "0x9FFA4C")]
public class SgtDebris : MonoBehaviour
{
	[Token(Token = "0x20003F1")]
	public enum StateType
	{
		[Token(Token = "0x40019FE")]
		Hide,
		[Token(Token = "0x40019FF")]
		Fade,
		[Token(Token = "0x4001A00")]
		Show
	}

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnSpawn;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnDespawn;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08A74", Offset = "0xA08A74")]
	public bool Pool;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08AAC", Offset = "0xA08AAC")]
	public StateType State;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08AE4", Offset = "0xA08AE4")]
	public SgtDebris Prefab;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08B1C", Offset = "0xA08B1C")]
	public Vector3 Scale;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08B54", Offset = "0xA08B54")]
	public SgtVector3L Cell;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float Show;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x13836F8", Offset = "0x13836F8", VA = "0x13836F8")]
	public SgtDebris()
	{
	}
}
[Token(Token = "0x2000059")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFA84", Offset = "0x9FFA84")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFA84", Offset = "0x9FFA84")]
public class SgtDebrisGrid : MonoBehaviour
{
	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08B8C", Offset = "0xA08B8C")]
	public Transform Target;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08BC4", Offset = "0xA08BC4")]
	public SgtShapeGroup SpawnInside;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08BFC", Offset = "0xA08BFC")]
	public float ShowDistance;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08C34", Offset = "0xA08C34")]
	public float HideDistance;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08C6C", Offset = "0xA08C6C")]
	public double CellSize;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08CA4", Offset = "0xA08CA4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA08CA4", Offset = "0xA08CA4")]
	public float CellNoise;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08CF8", Offset = "0xA08CF8")]
	public float DebrisCountTarget;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08D30", Offset = "0xA08D30")]
	public float ScaleMin;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08D68", Offset = "0xA08D68")]
	public float ScaleMax;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08DA0", Offset = "0xA08DA0")]
	public float ScaleBias;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08DD8", Offset = "0xA08DD8")]
	public bool RandomRotation;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08E10", Offset = "0xA08E10")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA08E10", Offset = "0xA08E10")]
	public int Seed;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08E5C", Offset = "0xA08E5C")]
	public List<SgtDebris> Prefabs;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<SgtDebris> Debris;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float minScale;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SgtBoundsL bounds;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SgtDebris targetPrefab;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1383700", Offset = "0x1383700", VA = "0x1383700")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BA08", Offset = "0xA1BA08")]
	public void ClearDebris()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x13838AC", Offset = "0x13838AC", VA = "0x13838AC")]
	public void UpdateDebris()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x138431C", Offset = "0x138431C", VA = "0x138431C")]
	public void UpdateDebrisScale(Vector3 worldPoint)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1384608", Offset = "0x1384608", VA = "0x1384608")]
	public static SgtDebrisGrid CreateDebrisGrid(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1384720", Offset = "0x1384720", VA = "0x1384720")]
	public static SgtDebrisGrid CreateDebrisGrid(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1384864", Offset = "0x1384864", VA = "0x1384864", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1383FC8", Offset = "0x1383FC8", VA = "0x1383FC8")]
	private void Spawn(long x, long y, long z, Vector3 point)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1384868", Offset = "0x1384868", VA = "0x1384868")]
	private SgtDebris Spawn(SgtDebris prefab)
	{
		return null;
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x13837EC", Offset = "0x13837EC", VA = "0x13837EC")]
	private void Despawn(SgtDebris debris)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x13842A8", Offset = "0x13842A8", VA = "0x13842A8")]
	private void Despawn(SgtDebris debris, int index)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1384A9C", Offset = "0x1384A9C", VA = "0x1384A9C")]
	private bool DebrisMatch(SgtDebris debris)
	{
		return default(bool);
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1384B64", Offset = "0x1384B64", VA = "0x1384B64")]
	public SgtDebrisGrid()
	{
	}
}
[Token(Token = "0x200005A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFAD0", Offset = "0x9FFAD0")]
public class SgtDebrisSpawner : MonoBehaviour
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtDebrisSpawner> AllDebrisSpawners;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08EA4", Offset = "0xA08EA4")]
	public Transform Follower;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08EDC", Offset = "0xA08EDC")]
	public float ShowSpeed;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08F14", Offset = "0xA08F14")]
	public float ShowDistance;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08F4C", Offset = "0xA08F4C")]
	public float HideDistance;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08F84", Offset = "0xA08F84")]
	public int SpawnLimit;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08FBC", Offset = "0xA08FBC")]
	public float SpawnRateMin;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08FF4", Offset = "0xA08FF4")]
	public float SpawnRateMax;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0902C", Offset = "0xA0902C")]
	public float SpawnScaleMin;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09064", Offset = "0xA09064")]
	public float SpawnScaleMax;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0909C", Offset = "0xA0909C")]
	public bool SpawnOnAwake;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA090D4", Offset = "0xA090D4")]
	public List<SgtDebris> Prefabs;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0910C", Offset = "0xA0910C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0910C", Offset = "0xA0910C")]
	public List<SgtShape> Shapes;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SgtDebris> Debris;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float spawnCooldown;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 followerPosition;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 followerVelocity;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float minScale;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SgtDebris targetPrefab;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1384BA8", Offset = "0x1384BA8", VA = "0x1384BA8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BA40", Offset = "0xA1BA40")]
	public void ClearDebris()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1384D9C", Offset = "0x1384D9C", VA = "0x1384D9C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BA78", Offset = "0xA1BA78")]
	public void SpawnDebrisInside()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1384DA4", Offset = "0x1384DA4", VA = "0x1384DA4")]
	public void SpawnDebris(bool inside)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x13852E4", Offset = "0x13852E4", VA = "0x13852E4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BAB0", Offset = "0xA1BAB0")]
	public void SpawnAllDebrisInside()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1385364", Offset = "0x1385364", VA = "0x1385364")]
	public float GetDensity(Vector3 worldPosition)
	{
		return default(float);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1385488", Offset = "0x1385488", VA = "0x1385488")]
	public static SgtDebrisSpawner CreateDebrisSpawner(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x13855C4", Offset = "0x13855C4", VA = "0x13855C4")]
	public static SgtDebrisSpawner CreateDebrisSpawner(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1385708", Offset = "0x1385708", VA = "0x1385708", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1385830", Offset = "0x1385830", VA = "0x1385830", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x13858BC", Offset = "0x13858BC", VA = "0x13858BC", Slot = "6")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1385A4C", Offset = "0x1385A4C", VA = "0x1385A4C", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1385198", Offset = "0x1385198", VA = "0x1385198")]
	private SgtDebris Spawn(SgtDebris prefab)
	{
		return null;
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1384CB4", Offset = "0x1384CB4", VA = "0x1384CB4")]
	private void Despawn(SgtDebris debris, int index)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1385F44", Offset = "0x1385F44", VA = "0x1385F44", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1385740", Offset = "0x1385740", VA = "0x1385740")]
	private void ResetFollower()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1385FC8", Offset = "0x1385FC8", VA = "0x1385FC8")]
	private bool DebrisMatch(SgtDebris debris)
	{
		return default(bool);
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1386090", Offset = "0x1386090", VA = "0x1386090")]
	public SgtDebrisSpawner()
	{
	}
}
[Token(Token = "0x200005B")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFB08", Offset = "0x9FFB08")]
public abstract class SgtDepth : MonoBehaviour
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0916C", Offset = "0xA0916C")]
	public LayerMask Layers;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA091A4", Offset = "0xA091A4")]
	public SgtEase.Type Ease;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool busy;

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x138613C", Offset = "0x138613C", VA = "0x138613C")]
	public float Calculate(Vector3 eye, Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x6000331")]
	protected abstract float DoCalculate(Vector3 eye, Vector3 target);

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x137E340", Offset = "0x137E340", VA = "0x137E340")]
	protected SgtDepth()
	{
	}
}
[Token(Token = "0x200005C")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFB18", Offset = "0x9FFB18")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x9FFB18", Offset = "0x9FFB18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FFB18", Offset = "0x9FFB18")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFB18", Offset = "0x9FFB18")]
public class SgtDepthTextureMode : MonoBehaviour
{
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA091DC", Offset = "0xA091DC")]
	public DepthTextureMode DepthMode;

	[NonSerialized]
	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cachedCamera;

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1386250", Offset = "0x1386250", VA = "0x1386250")]
	public void UpdateDepthMode()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x13862FC", Offset = "0x13862FC", VA = "0x13862FC", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1386300", Offset = "0x1386300", VA = "0x1386300")]
	public SgtDepthTextureMode()
	{
	}
}
[Token(Token = "0x200005D")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFBC0", Offset = "0x9FFBC0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FFBC0", Offset = "0x9FFBC0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFBC0", Offset = "0x9FFBC0")]
public class SgtDisplacedMesh : MonoBehaviour
{
	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09214", Offset = "0xA09214")]
	public Mesh OriginalMesh;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0924C", Offset = "0xA0924C")]
	public Texture2D HeightTex;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09284", Offset = "0xA09284")]
	public float InnerRadius;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA092BC", Offset = "0xA092BC")]
	public float OuterRadius;

	[NonSerialized]
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh displacedMesh;

	[NonSerialized]
	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshFilter meshFilter;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1386308", Offset = "0x1386308", VA = "0x1386308")]
	public float GetSurfaceHeightLocal(Vector3 localPosition)
	{
		return default(float);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x138652C", Offset = "0x138652C", VA = "0x138652C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BAE8", Offset = "0xA1BAE8")]
	public void RebuildMesh()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x13867C0", Offset = "0x13867C0", VA = "0x13867C0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1386858", Offset = "0x1386858", VA = "0x1386858", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x138698C", Offset = "0x138698C", VA = "0x138698C", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1386504", Offset = "0x1386504", VA = "0x1386504")]
	private float GetHeightTexAlphaBilinear(Vector2 uv)
	{
		return default(float);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1386A38", Offset = "0x1386A38", VA = "0x1386A38")]
	private float GetHeightTexAlphaCubic(Vector2 uv)
	{
		return default(float);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1386DDC", Offset = "0x1386DDC", VA = "0x1386DDC")]
	private float GetHeightTexAlphaCos(Vector2 uv)
	{
		return default(float);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1386F6C", Offset = "0x1386F6C", VA = "0x1386F6C")]
	private int RepeatX(int x)
	{
		return default(int);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1386FD4", Offset = "0x1386FD4", VA = "0x1386FD4")]
	private int ClampY(int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x138703C", Offset = "0x138703C", VA = "0x138703C")]
	private float Coserp(float a, float b, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1386DA4", Offset = "0x1386DA4", VA = "0x1386DA4")]
	public static float Cubic(float a, float b, float c, float d, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1386D2C", Offset = "0x1386D2C", VA = "0x1386D2C")]
	private void FracInt(float v, out int i, out float f)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1386D44", Offset = "0x1386D44", VA = "0x1386D44")]
	private float GetPixel(int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x13870E0", Offset = "0x13870E0", VA = "0x13870E0")]
	public SgtDisplacedMesh()
	{
	}
}
[Token(Token = "0x200005E")]
public static class SgtEase
{
	[Token(Token = "0x20003F2")]
	public enum Type
	{
		[Token(Token = "0x4001A02")]
		Linear,
		[Token(Token = "0x4001A03")]
		Smoothstep,
		[Token(Token = "0x4001A04")]
		Sinusoidial,
		[Token(Token = "0x4001A05")]
		Quadratic,
		[Token(Token = "0x4001A06")]
		Circular,
		[Token(Token = "0x4001A07")]
		Cubic,
		[Token(Token = "0x4001A08")]
		Quartic,
		[Token(Token = "0x4001A09")]
		Quintic,
		[Token(Token = "0x4001A0A")]
		Exponential
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x138117C", Offset = "0x138117C", VA = "0x138117C")]
	public static float Evaluate(Type ease, float t)
	{
		return default(float);
	}
}
[Token(Token = "0x200005F")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFC58", Offset = "0x9FFC58")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFC58", Offset = "0x9FFC58")]
public class SgtEllipticalStarfield : SgtPointStarfield
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA092F4", Offset = "0xA092F4")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA092F4", Offset = "0xA092F4")]
	public int Seed;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09340", Offset = "0xA09340")]
	public float Radius;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09378", Offset = "0xA09378")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA09378", Offset = "0xA09378")]
	public float Symmetry;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA093CC", Offset = "0xA093CC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA093CC", Offset = "0xA093CC")]
	public float Offset;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09420", Offset = "0xA09420")]
	public bool Inverse;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09458", Offset = "0xA09458")]
	public int StarCount;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09490", Offset = "0xA09490")]
	public float StarRadiusMin;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA094C8", Offset = "0xA094C8")]
	public float StarRadiusMax;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09500", Offset = "0xA09500")]
	public float StarRadiusBias;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09538", Offset = "0xA09538")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA09538", Offset = "0xA09538")]
	public float StarPulseMax;

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x13870F4", Offset = "0x13870F4", VA = "0x13870F4")]
	public static SgtEllipticalStarfield CreateEllipticalStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x138720C", Offset = "0x138720C", VA = "0x138720C")]
	public static SgtEllipticalStarfield CreateEllipticalStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1387350", Offset = "0x1387350", VA = "0x1387350", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x13873C0", Offset = "0x13873C0", VA = "0x13873C0", Slot = "15")]
	protected override void NextQuad(ref SgtPointStar quad, int starIndex)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x13875F0", Offset = "0x13875F0", VA = "0x13875F0", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x138764C", Offset = "0x138764C", VA = "0x138764C")]
	public SgtEllipticalStarfield()
	{
	}
}
[Token(Token = "0x2000060")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFCA4", Offset = "0x9FFCA4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFCA4", Offset = "0x9FFCA4")]
public class SgtFlare : MonoBehaviour
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0958C", Offset = "0xA0958C")]
	public Mesh Mesh;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA095C4", Offset = "0xA095C4")]
	public Material Material;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA095FC", Offset = "0xA095FC")]
	public float HideThickness;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09634", Offset = "0xA09634")]
	public SgtDepth Depth;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0966C", Offset = "0xA0966C")]
	public bool FollowCameras;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA096A4", Offset = "0xA096A4")]
	public float FollowDistance;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA096DC", Offset = "0xA096DC")]
	public float CameraOffset;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SgtFlareModel Model;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool busy;

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x138766C", Offset = "0x138766C", VA = "0x138766C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BB20", Offset = "0xA1BB20")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1387818", Offset = "0x1387818", VA = "0x1387818")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BB58", Offset = "0xA1BB58")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x13879C4", Offset = "0x13879C4", VA = "0x13879C4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BB90", Offset = "0xA1BB90")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1387B0C", Offset = "0x1387B0C", VA = "0x1387B0C")]
	public static SgtFlare CreateFlare(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1387C24", Offset = "0x1387C24", VA = "0x1387C24")]
	public static SgtFlare CreateFlare(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1387D68", Offset = "0x1387D68", VA = "0x1387D68", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1387EF8", Offset = "0x1387EF8", VA = "0x1387EF8", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1388088", Offset = "0x1388088", VA = "0x1388088", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1388110", Offset = "0x1388110", VA = "0x1388110", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x13881BC", Offset = "0x13881BC", VA = "0x13881BC")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1388A60", Offset = "0x1388A60", VA = "0x1388A60")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x1388BF8", Offset = "0x1388BF8", VA = "0x1388BF8")]
	public SgtFlare()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFCF0", Offset = "0x9FFCF0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFCF0", Offset = "0x9FFCF0")]
public class SgtFlareMaterial : MonoBehaviour
{
	[Token(Token = "0x20003F3")]
	public enum ZTestState
	{
		[Token(Token = "0x4001A0C")]
		LEqual = 2,
		[Token(Token = "0x4001A0D")]
		Always = 6
	}

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09714", Offset = "0xA09714")]
	public SgtFlare Flare;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0974C", Offset = "0xA0974C")]
	public ZTestState ZTest;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09784", Offset = "0xA09784")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA097BC", Offset = "0xA097BC")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA097F4", Offset = "0xA097F4")]
	public TextureFormat Format;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0982C", Offset = "0xA0982C")]
	public int Width;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09864", Offset = "0xA09864")]
	public Color Color;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0989C", Offset = "0xA0989C")]
	public SgtEase.Type Ease;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA098D4", Offset = "0xA098D4")]
	public float PowerR;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0990C", Offset = "0xA0990C")]
	public float PowerG;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09944", Offset = "0xA09944")]
	public float PowerB;

	[NonSerialized]
	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material generatedMaterial;

	[NonSerialized]
	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x1700003E")]
	public Material GeneratedMaterial
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x1388C10", Offset = "0x1388C10", VA = "0x1388C10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x1388C18", Offset = "0x1388C18", VA = "0x1388C18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1388C20", Offset = "0x1388C20", VA = "0x1388C20")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BBC8", Offset = "0xA1BBC8")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1388E34", Offset = "0x1388E34", VA = "0x1388E34")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BC00", Offset = "0xA1BC00")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x138909C", Offset = "0x138909C", VA = "0x138909C")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1388D38", Offset = "0x1388D38", VA = "0x1388D38")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BC38", Offset = "0xA1BC38")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x138920C", Offset = "0x138920C", VA = "0x138920C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x13892E8", Offset = "0x13892E8", VA = "0x13892E8", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1389300", Offset = "0x1389300", VA = "0x1389300", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x138921C", Offset = "0x138921C", VA = "0x138921C")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1389388", Offset = "0x1389388", VA = "0x1389388")]
	public SgtFlareMaterial()
	{
	}
}
[Token(Token = "0x2000062")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFD3C", Offset = "0x9FFD3C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFD3C", Offset = "0x9FFD3C")]
public class SgtFlareMesh : MonoBehaviour
{
	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0998C", Offset = "0xA0998C")]
	public SgtFlare Flare;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA099C4", Offset = "0xA099C4")]
	public int Detail;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA099FC", Offset = "0xA099FC")]
	public float Radius;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09A34", Offset = "0xA09A34")]
	public bool Wave;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09A6C", Offset = "0xA09A6C")]
	public float WaveStrength;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09AA4", Offset = "0xA09AA4")]
	public int WavePoints;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09ADC", Offset = "0xA09ADC")]
	public float WavePower;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09B14", Offset = "0xA09B14")]
	public float WavePhase;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09B4C", Offset = "0xA09B4C")]
	public bool Noise;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09B84", Offset = "0xA09B84")]
	public float NoiseStrength;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09BBC", Offset = "0xA09BBC")]
	public int NoisePoints;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09BF4", Offset = "0xA09BF4")]
	public float NoisePower;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09C2C", Offset = "0xA09C2C")]
	public float NoisePhase;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09C64", Offset = "0xA09C64")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA09C64", Offset = "0xA09C64")]
	public int NoiseSeed;

	[NonSerialized]
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh generatedMesh;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA09CB0", Offset = "0xA09CB0")]
	private bool startCalled;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<float> points;

	[Token(Token = "0x17000040")]
	public Mesh GeneratedMesh
	{
		[Token(Token = "0x6000363")]
		[Address(RVA = "0x13893F0", Offset = "0x13893F0", VA = "0x13893F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x13893F8", Offset = "0x13893F8", VA = "0x13893F8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BC70", Offset = "0xA1BC70")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1389BD8", Offset = "0x1389BD8", VA = "0x1389BD8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BCA8", Offset = "0xA1BCA8")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1389CB0", Offset = "0x1389CB0", VA = "0x1389CB0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1389D44", Offset = "0x1389D44", VA = "0x1389D44", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1389DF4", Offset = "0x1389DF4", VA = "0x1389DF4", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1389CC0", Offset = "0x1389CC0", VA = "0x1389CC0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1389EC4", Offset = "0x1389EC4", VA = "0x1389EC4")]
	public SgtFlareMesh()
	{
	}
}
[Token(Token = "0x2000063")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFD88", Offset = "0x9FFD88")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFD88", Offset = "0x9FFD88")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FFD88", Offset = "0x9FFD88")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FFD88", Offset = "0x9FFD88")]
public class SgtFlareModel : MonoBehaviour
{
	[Token(Token = "0x20003F4")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion LocalRotation;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 LocalScale;

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x138A180", Offset = "0x138A180", VA = "0x138A180")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09CE8", Offset = "0xA09CE8")]
	public SgtFlare Flare;

	[NonSerialized]
	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1387700", Offset = "0x1387700", VA = "0x1387700")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x13878AC", Offset = "0x13878AC", VA = "0x13878AC")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1389F70", Offset = "0x1389F70", VA = "0x1389F70")]
	public void SetRotation(Quaternion rotation)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1387A70", Offset = "0x1387A70", VA = "0x1387A70")]
	public static SgtFlareModel Create(SgtFlare flare)
	{
		return null;
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1389FC4", Offset = "0x1389FC4", VA = "0x1389FC4")]
	public static void Pool(SgtFlareModel model)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1388118", Offset = "0x1388118", VA = "0x1388118")]
	public static void MarkForDestruction(SgtFlareModel model)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1388990", Offset = "0x1388990", VA = "0x1388990")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1388B1C", Offset = "0x1388B1C", VA = "0x1388B1C")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x13886BC", Offset = "0x13886BC", VA = "0x13886BC")]
	public void Revert()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x138A060", Offset = "0x138A060", VA = "0x138A060", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x138A0F0", Offset = "0x138A0F0", VA = "0x138A0F0", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x138A178", Offset = "0x138A178", VA = "0x138A178")]
	public SgtFlareModel()
	{
	}
}
[Token(Token = "0x2000064")]
public enum SgtForceType
{
	[Token(Token = "0x40003B0")]
	AddForce,
	[Token(Token = "0x40003B1")]
	AddForceAtPosition
}
[Token(Token = "0x2000065")]
public static class SgtHelper
{
	[Token(Token = "0x20003F5")]
	private class LightProperties
	{
		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Direction;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Position;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Color;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Scatter;

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x138E60C", Offset = "0x138E60C", VA = "0x138E60C")]
		public LightProperties()
		{
		}
	}

	[Token(Token = "0x20003F6")]
	private class ShadowProperties
	{
		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Texture;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Matrix;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Ratio;

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x138E998", Offset = "0x138E998", VA = "0x138E998")]
		public ShadowProperties()
		{
		}
	}

	[Token(Token = "0x40003B2")]
	public const string ShaderNamePrefix = "Hidden/Sgt";

	[Token(Token = "0x40003B3")]
	public const string ComponentMenuPrefix = "Space Graphics Toolkit/SGT ";

	[Token(Token = "0x40003B4")]
	public const string GameObjectMenuPrefix = "GameObject/Space Graphics Toolkit/";

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float InscribedBox;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int QuadsPerMesh;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Material> tempMaterials;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stack<UnityEngine.Random.State> seedStates;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<Material> materials;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<Light> tempLights;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static List<LightProperties> cachedLightProperties;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static List<string> cachedLightKeywords;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static List<ShadowProperties> cachedShadowProperties;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static List<string> cachedShadowKeywords;

	[Token(Token = "0x6000378")]
	public static void ClearCapacity<T>(List<T> list, int minCapacity)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x13887BC", Offset = "0x13887BC", VA = "0x13887BC")]
	public static bool Enabled(Behaviour b)
	{
		return default(bool);
	}

	[Token(Token = "0x600037A")]
	public static T GetOrAddComponent<T>(GameObject gameObject, bool recordUndo = true) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600037B")]
	public static T AddComponent<T>(GameObject gameObject, bool recordUndo = true) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600037C")]
	public static T Destroy<T>(T o) where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x138A71C", Offset = "0x138A71C", VA = "0x138A71C")]
	public static bool Zero(float v)
	{
		return default(bool);
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x137EB54", Offset = "0x137EB54", VA = "0x137EB54")]
	public static float Reciprocal(float v)
	{
		return default(float);
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x138A790", Offset = "0x138A790", VA = "0x138A790")]
	public static float Acos(float v)
	{
		return default(float);
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x138A828", Offset = "0x138A828", VA = "0x138A828")]
	public static Vector3 Reciprocal3(Vector3 xyz)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x137EE24", Offset = "0x137EE24", VA = "0x137EE24")]
	public static float Divide(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x138A8CC", Offset = "0x138A8CC", VA = "0x138A8CC")]
	public static Vector4 NewVector4(Vector3 xyz, float w)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x13849E0", Offset = "0x13849E0", VA = "0x13849E0")]
	public static float Pow(float a, float p)
	{
		return default(float);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1389C78", Offset = "0x1389C78", VA = "0x1389C78")]
	public static float CubicInterpolate(float a, float b, float c, float d, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x138A8FC", Offset = "0x138A8FC", VA = "0x138A8FC")]
	public static float HermiteInterpolate(float a, float b, float c, float d, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x138A964", Offset = "0x138A964", VA = "0x138A964")]
	public static Color HermiteInterpolate(Color a, Color b, Color c, Color d, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x138AB7C", Offset = "0x138AB7C", VA = "0x138AB7C")]
	public static Vector3 HermiteInterpolate3(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x138ADC4", Offset = "0x138ADC4", VA = "0x138ADC4")]
	public static float DampenFactor(float dampening, float elapsed)
	{
		return default(float);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x138AE40", Offset = "0x138AE40", VA = "0x138AE40")]
	public static float Dampen(float current, float target, float dampening, float elapsed)
	{
		return default(float);
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1385E74", Offset = "0x1385E74", VA = "0x1385E74")]
	public static float Dampen(float current, float target, float dampening, float elapsed, float minStep)
	{
		return default(float);
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x138AEFC", Offset = "0x138AEFC", VA = "0x138AEFC")]
	public static Quaternion Dampen(Quaternion current, Quaternion target, float dampening, float elapsed)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x138AFF0", Offset = "0x138AFF0", VA = "0x138AFF0")]
	public static Quaternion Dampen(Quaternion current, Quaternion target, float dampening, float elapsed, float minStep)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x138B15C", Offset = "0x138B15C", VA = "0x138B15C")]
	public static Vector3 Dampen3(Vector3 current, Vector3 target, float dampening, float elapsed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x138B248", Offset = "0x138B248", VA = "0x138B248")]
	public static Vector3 Dampen3(Vector3 current, Vector3 target, float dampening, float elapsed, float minStep)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x138B358", Offset = "0x138B358", VA = "0x138B358")]
	public static int Mod(int a, int b)
	{
		return default(int);
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x138B36C", Offset = "0x138B36C", VA = "0x138B36C")]
	public static Bounds NewBoundsFromMinMax(Vector3 min, Vector3 max)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x138B3B0", Offset = "0x138B3B0", VA = "0x138B3B0")]
	public static Bounds NewBoundsCenter(Bounds b, Vector3 c)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000392")]
	public static void ResizeArrayTo<T>(ref List<T> array, int size, Func<int, T> newT, Action<T> removeT)
	{
	}

	[Token(Token = "0x6000393")]
	public static bool RequireArraySize<T>(ref T[] array, int size)
	{
		return default(bool);
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1383F18", Offset = "0x1383F18", VA = "0x1383F18")]
	public static void BeginRandomSeed(int newSeed, long x, long y, long z)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x137D42C", Offset = "0x137D42C", VA = "0x137D42C")]
	public static void BeginRandomSeed(int newSeed)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x137D7C4", Offset = "0x137D7C4", VA = "0x137D7C4")]
	public static void EndRandomSeed()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x137E86C", Offset = "0x137E86C", VA = "0x137E86C")]
	public static Material CreateTempMaterial(string materialName, string shaderName)
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1389B28", Offset = "0x1389B28", VA = "0x1389B28")]
	public static Mesh CreateTempMesh(string meshName)
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1380E8C", Offset = "0x1380E8C", VA = "0x1380E8C")]
	public static Texture2D CreateTempTexture2D(string name, int width, int height, TextureFormat format = TextureFormat.ARGB32, bool mips = false, bool linear = false)
	{
		return null;
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x138B558", Offset = "0x138B558", VA = "0x138B558")]
	public static Texture2D CreateTexture2D(string name, int width, int height, TextureFormat format = TextureFormat.ARGB32, bool mips = false, bool linear = false, bool recordUndo = true)
	{
		return null;
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x138B610", Offset = "0x138B610", VA = "0x138B610")]
	public static Material CreateMaterial(string shaderName, bool recordUndo = true)
	{
		return null;
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x138B688", Offset = "0x138B688", VA = "0x138B688")]
	public static GameObject CloneGameObject(GameObject source, Transform parent, bool keepName = false)
	{
		return null;
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x138B794", Offset = "0x138B794", VA = "0x138B794")]
	public static GameObject CloneGameObject(GameObject source, Transform parent, Vector3 localPosition, Quaternion localRotation, bool keepName = false)
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x138B9E0", Offset = "0x138B9E0", VA = "0x138B9E0")]
	public static GameObject CreateGameObject(string name, int layer, [Optional] Transform parent, bool recordUndo = true)
	{
		return null;
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x137D268", Offset = "0x137D268", VA = "0x137D268")]
	public static GameObject CreateGameObject(string name, int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale, bool recordUndo = true)
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x138BB28", Offset = "0x138BB28", VA = "0x138BB28")]
	public static void SetSharedMaterial(Renderer r, Material m)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x138BC0C", Offset = "0x138BC0C", VA = "0x138BC0C")]
	public static void SetSharedMesh(MeshFilter mf, Mesh m)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x138BCF0", Offset = "0x138BCF0", VA = "0x138BCF0")]
	public static void SetEnabled(Behaviour b, bool enabled)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x138BDA8", Offset = "0x138BDA8", VA = "0x138BDA8")]
	public static void SetEnabled(Collider c, bool enabled)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x138BE60", Offset = "0x138BE60", VA = "0x138BE60")]
	public static void SetEnabled(Renderer r, bool enabled)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x138BF18", Offset = "0x138BF18", VA = "0x138BF18")]
	public static void SetPosition(Transform t, float x, float y, float z)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x138BFCC", Offset = "0x138BFCC", VA = "0x138BFCC")]
	public static void SetPosition(Transform t, Vector3 v)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x138C08C", Offset = "0x138C08C", VA = "0x138C08C")]
	public static void SetLocalPosition(Transform t, float x, float y, float z)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x138C140", Offset = "0x138C140", VA = "0x138C140")]
	public static void SetLocalPosition(Transform t, Vector3 v)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1382628", Offset = "0x1382628", VA = "0x1382628")]
	public static void SetLocalScale(Transform t, float v)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x138C328", Offset = "0x138C328", VA = "0x138C328")]
	public static void SetLocalScale(Transform t, float x, float y, float z)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x138C200", Offset = "0x138C200", VA = "0x138C200")]
	public static void SetLocalScale(Transform t, Vector3 v)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x138C3DC", Offset = "0x138C3DC", VA = "0x138C3DC")]
	public static void SetLocalRotation(Transform t, Quaternion q)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x138C4A4", Offset = "0x138C4A4", VA = "0x138C4A4")]
	public static void SetRotation(Transform t, Quaternion q)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x138C56C", Offset = "0x138C56C", VA = "0x138C56C")]
	public static float DistanceToHorizon(float radius, float distanceToCenter)
	{
		return default(float);
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x138C610", Offset = "0x138C610", VA = "0x138C610")]
	public static Vector2 CartesianToPolar(Vector3 xyz)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1386424", Offset = "0x1386424", VA = "0x1386424")]
	public static Vector2 CartesianToPolarUV(Vector3 xyz)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x138C6D8", Offset = "0x138C6D8", VA = "0x138C6D8")]
	public static Vector4 CalculateSpriteUV(Sprite s)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x138C8A8", Offset = "0x138C8A8", VA = "0x138C8A8")]
	public static void CalculateAtmosphereThicknessAtHorizon(float groundRadius, float skyRadius, float distance, out float groundThickness, out float skyThickness)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x137EA9C", Offset = "0x137EA9C", VA = "0x137EA9C")]
	public static void EnableKeyword(string keyword, Material material)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x137EBD8", Offset = "0x137EBD8", VA = "0x137EBD8")]
	public static void DisableKeyword(string keyword, Material material)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x138C9AC", Offset = "0x138C9AC", VA = "0x138C9AC")]
	public static void SetKeywords(Material m, List<string> keywords)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x138CAB8", Offset = "0x138CAB8", VA = "0x138CAB8")]
	public static void SetKeywords(Material m, List<string> keywords, ref string[] lastKeywords)
	{
	}

	[Token(Token = "0x60003B7")]
	public static bool ArraysEqual<T>(T[] a, List<T> b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x138CC80", Offset = "0x138CC80", VA = "0x138CC80")]
	public static void AddMaterial(Renderer r, Material m)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x138CF14", Offset = "0x138CF14", VA = "0x138CF14")]
	public static void ReplaceMaterial(Renderer r, Material m)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x138D200", Offset = "0x138D200", VA = "0x138D200")]
	public static void RemoveMaterial(Renderer r, Material m)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x138D418", Offset = "0x138D418", VA = "0x138D418")]
	public static float UniformScale(Vector3 scale)
	{
		return default(float);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x138D4AC", Offset = "0x138D4AC", VA = "0x138D4AC")]
	public static Matrix4x4 Rotation(Quaternion q)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x138D5B4", Offset = "0x138D5B4", VA = "0x138D5B4")]
	public static Matrix4x4 Translation(Vector3 xyz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x138D664", Offset = "0x138D664", VA = "0x138D664")]
	public static Matrix4x4 Scaling(float xyz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x138D710", Offset = "0x138D710", VA = "0x138D710")]
	public static Matrix4x4 Scaling(Vector3 xyz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x138D7CC", Offset = "0x138D7CC", VA = "0x138D7CC")]
	public static Matrix4x4 Scaling(float x, float y, float z)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x138D888", Offset = "0x138D888", VA = "0x138D888")]
	public static Matrix4x4 ShearingX(Vector2 yz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x138D93C", Offset = "0x138D93C", VA = "0x138D93C")]
	public static Matrix4x4 ShearingY(Vector2 xz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x138D9F0", Offset = "0x138D9F0", VA = "0x138D9F0")]
	public static Matrix4x4 ShearingZ(Vector2 xy)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x137EA8C", Offset = "0x137EA8C", VA = "0x137EA8C")]
	public static Color Brighten(Color color, float brightness)
	{
		return default(Color);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x138DAAC", Offset = "0x138DAAC", VA = "0x138DAAC")]
	public static Color Premultiply(Color color)
	{
		return default(Color);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1382868", Offset = "0x1382868", VA = "0x1382868")]
	public static void GetShadows(GameObject gameObject, ref List<SgtShadow> shadows, bool RequireSameLayer, bool RequireSameTag, string RequireNameContains)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x13822AC", Offset = "0x13822AC", VA = "0x13822AC")]
	public static void GetLights(GameObject gameObject, ref List<Light> lights, bool RequireSameLayer, bool RequireSameTag, string RequireNameContains)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x138DABC", Offset = "0x138DABC", VA = "0x138DABC")]
	public static void CalculateLight(Light light, Vector3 center, Transform directionTransform, Transform positionTransform, ref Vector3 position, ref Vector3 direction, ref Color color)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x137F7C0", Offset = "0x137F7C0", VA = "0x137F7C0")]
	public static void SetTempMaterial(Material material)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x138DE28", Offset = "0x138DE28", VA = "0x138DE28")]
	public static void SetTempMaterial(Material material1, Material material2)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x138DEF4", Offset = "0x138DEF4", VA = "0x138DEF4")]
	public static void SetTempMaterial(List<Material> materials)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x138DFC0", Offset = "0x138DFC0", VA = "0x138DFC0")]
	public static void EnableKeyword(string keyword)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x138E10C", Offset = "0x138E10C", VA = "0x138E10C")]
	public static void DisableKeyword(string keyword)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x138E258", Offset = "0x138E258", VA = "0x138E258")]
	public static void SetMatrix(string key, Matrix4x4 value)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x138E3C8", Offset = "0x138E3C8", VA = "0x138E3C8")]
	private static LightProperties GetLightProperties(int index)
	{
		return null;
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x138E614", Offset = "0x138E614", VA = "0x138E614")]
	private static string GetLightKeyword(int index)
	{
		return null;
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x137F864", Offset = "0x137F864", VA = "0x137F864")]
	public static void WriteLights(bool lit, List<Light> lights, int maxLights, Vector3 center, Transform directionTransform, Transform positionTransform, Color tint, float scatterStrength)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x138E778", Offset = "0x138E778", VA = "0x138E778")]
	private static ShadowProperties GetShadowProperties(int index)
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x138E9A0", Offset = "0x138E9A0", VA = "0x138E9A0")]
	private static string GetShadowKeyword(int index)
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x137FCDC", Offset = "0x137FCDC", VA = "0x137FCDC")]
	public static void WriteShadows(List<SgtShadow> shadows, int maxShadows)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x138091C", Offset = "0x138091C", VA = "0x138091C")]
	public static void WriteShadowsNonSerialized(List<SgtShadow> shadows, int maxShadows)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x138EB04", Offset = "0x138EB04", VA = "0x138EB04")]
	public static void WriteMie(float sharpness, float strength)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x138ECD4", Offset = "0x138ECD4", VA = "0x138ECD4")]
	public static void WriteRayleigh(float strength)
	{
	}
}
[Token(Token = "0x2000066")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFE48", Offset = "0x9FFE48")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFE48", Offset = "0x9FFE48")]
public class SgtJovian : MonoBehaviour
{
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtJovian> AllJovians;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09D20", Offset = "0xA09D20")]
	public Color Color;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09D58", Offset = "0xA09D58")]
	public float Brightness;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09D90", Offset = "0xA09D90")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09DC8", Offset = "0xA09DC8")]
	public int RenderQueueOffset;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09E00", Offset = "0xA09E00")]
	public Cubemap MainTex;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09E38", Offset = "0xA09E38")]
	public Texture2D DepthTex;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09E70", Offset = "0xA09E70")]
	public float Sky;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09EA8", Offset = "0xA09EA8")]
	public bool Lit;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09EE0", Offset = "0xA09EE0")]
	public Texture LightingTex;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09F18", Offset = "0xA09F18")]
	public List<Light> Lights;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09F50", Offset = "0xA09F50")]
	public List<SgtShadow> Shadows;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09F88", Offset = "0xA09F88")]
	public bool Scattering;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09FC0", Offset = "0xA09FC0")]
	public Texture ScatteringTex;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09FF8", Offset = "0xA09FF8")]
	public float ScatteringStrength;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A030", Offset = "0xA0A030")]
	public float MeshRadius;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A068", Offset = "0xA0A068")]
	public List<Mesh> Meshes;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0A0A0", Offset = "0xA0A0A0")]
	public List<SgtJovianModel> Models;

	[NonSerialized]
	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material Material;

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x138F010", Offset = "0x138F010", VA = "0x138F010", Slot = "4")]
	public virtual void UpdateDepthTex()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x138F0B4", Offset = "0x138F0B4", VA = "0x138F0B4", Slot = "5")]
	public virtual void UpdateLightingTex()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x138F158", Offset = "0x138F158", VA = "0x138F158", Slot = "6")]
	public virtual void UpdateScatteringTex()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x138F1FC", Offset = "0x138F1FC", VA = "0x138F1FC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BCE0", Offset = "0xA1BCE0")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x138F7A8", Offset = "0x138F7A8", VA = "0x138F7A8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BD18", Offset = "0xA1BD18")]
	public void UpdateModels()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x138FBDC", Offset = "0x138FBDC", VA = "0x138FBDC")]
	public static SgtJovian CreateJovian(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x138FD18", Offset = "0x138FD18", VA = "0x138FD18")]
	public static SgtJovian CreateJovian(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x138FE5C", Offset = "0x138FE5C", VA = "0x138FE5C", Slot = "7")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1390004", Offset = "0x1390004", VA = "0x1390004", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x139008C", Offset = "0x139008C", VA = "0x139008C", Slot = "9")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x13901EC", Offset = "0x13901EC", VA = "0x13901EC", Slot = "10")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1390394", Offset = "0x1390394", VA = "0x1390394", Slot = "11")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x138F5F8", Offset = "0x138F5F8", VA = "0x138F5F8")]
	private void UpdateMaterialNonSerialized()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x139050C", Offset = "0x139050C", VA = "0x139050C")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x138F8E8", Offset = "0x138F8E8", VA = "0x138F8E8")]
	private SgtJovianModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x13907D0", Offset = "0x13907D0", VA = "0x13907D0")]
	public SgtJovian()
	{
	}
}
[Token(Token = "0x2000067")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFE94", Offset = "0x9FFE94")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFE94", Offset = "0x9FFE94")]
public class SgtJovianDepth : MonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A0D8", Offset = "0xA0A0D8")]
	public SgtJovian Jovian;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A110", Offset = "0xA0A110")]
	public int Width;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A148", Offset = "0xA0A148")]
	public TextureFormat Format;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A180", Offset = "0xA0A180")]
	public SgtEase.Type RimEase;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A1B8", Offset = "0xA0A1B8")]
	public float RimPower;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A1F0", Offset = "0xA0A1F0")]
	public Color RimColor;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A228", Offset = "0xA0A228")]
	public float AlphaDensity;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A260", Offset = "0xA0A260")]
	public float AlphaFade;

	[NonSerialized]
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0A298", Offset = "0xA0A298")]
	private bool startCalled;

	[Token(Token = "0x17000041")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1390898", Offset = "0x1390898", VA = "0x1390898")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x13908A0", Offset = "0x13908A0", VA = "0x13908A0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BD50", Offset = "0xA1BD50")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1390B68", Offset = "0x1390B68", VA = "0x1390B68")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1390AC8", Offset = "0x1390AC8", VA = "0x1390AC8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BD88", Offset = "0xA1BD88")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1390C8C", Offset = "0x1390C8C", VA = "0x1390C8C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1390D20", Offset = "0x1390D20", VA = "0x1390D20", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1390DD0", Offset = "0x1390DD0", VA = "0x1390DD0", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1390C9C", Offset = "0x1390C9C", VA = "0x1390C9C")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1390E44", Offset = "0x1390E44", VA = "0x1390E44")]
	public SgtJovianDepth()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFEE0", Offset = "0x9FFEE0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFEE0", Offset = "0x9FFEE0")]
public class SgtJovianLighting : MonoBehaviour
{
	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A2D0", Offset = "0xA0A2D0")]
	public SgtJovian Jovian;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A308", Offset = "0xA0A308")]
	public int Width;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A340", Offset = "0xA0A340")]
	public TextureFormat Format;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A378", Offset = "0xA0A378")]
	public SgtEase.Type SunsetEase;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A3B0", Offset = "0xA0A3B0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0A3B0", Offset = "0xA0A3B0")]
	public float SunsetStart;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A404", Offset = "0xA0A404")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0A404", Offset = "0xA0A404")]
	public float SunsetEnd;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A458", Offset = "0xA0A458")]
	public float SunsetPowerR;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A490", Offset = "0xA0A490")]
	public float SunsetPowerG;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A4C8", Offset = "0xA0A4C8")]
	public float SunsetPowerB;

	[NonSerialized]
	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0A500", Offset = "0xA0A500")]
	private bool startCalled;

	[Token(Token = "0x17000042")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x1390EC0", Offset = "0x1390EC0", VA = "0x1390EC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1390EC8", Offset = "0x1390EC8", VA = "0x1390EC8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BDC0", Offset = "0xA1BDC0")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1391190", Offset = "0x1391190", VA = "0x1391190")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x13910E8", Offset = "0x13910E8", VA = "0x13910E8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BDF8", Offset = "0xA1BDF8")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x13912B0", Offset = "0x13912B0", VA = "0x13912B0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1391344", Offset = "0x1391344", VA = "0x1391344", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x13913F4", Offset = "0x13913F4", VA = "0x13913F4", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x13912C0", Offset = "0x13912C0", VA = "0x13912C0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1391468", Offset = "0x1391468", VA = "0x1391468")]
	public SgtJovianLighting()
	{
	}
}
[Token(Token = "0x2000069")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFF2C", Offset = "0x9FFF2C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFF2C", Offset = "0x9FFF2C")]
public class SgtJovianLights : MonoBehaviour
{
	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A538", Offset = "0xA0A538")]
	public SgtJovian Jovian;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A570", Offset = "0xA0A570")]
	public bool RequireSameLayer;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A5A8", Offset = "0xA0A5A8")]
	public bool RequireSameTag;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A5E0", Offset = "0xA0A5E0")]
	public string RequireNameContains;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1391498", Offset = "0x1391498", VA = "0x1391498")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BE30", Offset = "0xA1BE30")]
	public void UpdateLights()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x139159C", Offset = "0x139159C", VA = "0x139159C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x13915AC", Offset = "0x13915AC", VA = "0x13915AC", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x139165C", Offset = "0x139165C", VA = "0x139165C")]
	public SgtJovianLights()
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x9FFF78", Offset = "0x9FFF78")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FFF78", Offset = "0x9FFF78")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x9FFF78", Offset = "0x9FFF78")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FFF78", Offset = "0x9FFF78")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FFF78", Offset = "0x9FFF78")]
public class SgtJovianModel : MonoBehaviour
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A628", Offset = "0xA0A628")]
	public SgtJovian Jovian;

	[NonSerialized]
	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x138FA28", Offset = "0x138FA28", VA = "0x138FA28")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x138F4E0", Offset = "0x138F4E0", VA = "0x138F4E0")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1390734", Offset = "0x1390734", VA = "0x1390734")]
	public static SgtJovianModel Create(SgtJovian jovian)
	{
		return null;
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x138FB40", Offset = "0x138FB40", VA = "0x138FB40")]
	public static void Pool(SgtJovianModel model)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1390468", Offset = "0x1390468", VA = "0x1390468")]
	public static void MarkForDestruction(SgtJovianModel model)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1391664", Offset = "0x1391664", VA = "0x1391664", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x13916EC", Offset = "0x13916EC", VA = "0x13916EC")]
	public SgtJovianModel()
	{
	}
}
[Token(Token = "0x200006B")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00048", Offset = "0xA00048")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00048", Offset = "0xA00048")]
public class SgtJovianScattering : MonoBehaviour
{
	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A660", Offset = "0xA0A660")]
	public SgtJovian Jovian;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A698", Offset = "0xA0A698")]
	public int Width;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A6D0", Offset = "0xA0A6D0")]
	public int Height;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A708", Offset = "0xA0A708")]
	public TextureFormat Format;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A740", Offset = "0xA0A740")]
	public float Mie;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A778", Offset = "0xA0A778")]
	public float Rayleigh;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A7B0", Offset = "0xA0A7B0")]
	public SgtEase.Type SunsetEase;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A7E8", Offset = "0xA0A7E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0A7E8", Offset = "0xA0A7E8")]
	public float SunsetStart;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A83C", Offset = "0xA0A83C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0A83C", Offset = "0xA0A83C")]
	public float SunsetEnd;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A890", Offset = "0xA0A890")]
	public float SunsetPowerR;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A8C8", Offset = "0xA0A8C8")]
	public float SunsetPowerG;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A900", Offset = "0xA0A900")]
	public float SunsetPowerB;

	[NonSerialized]
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0A938", Offset = "0xA0A938")]
	private bool startCalled;

	[Token(Token = "0x17000043")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x13916F4", Offset = "0x13916F4", VA = "0x13916F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x13916FC", Offset = "0x13916FC", VA = "0x13916FC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BE68", Offset = "0xA1BE68")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1391A20", Offset = "0x1391A20", VA = "0x1391A20")]
	private void WriteTexture(float u, float v, int x, int y)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1391978", Offset = "0x1391978", VA = "0x1391978")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BEA0", Offset = "0xA1BEA0")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1391B8C", Offset = "0x1391B8C", VA = "0x1391B8C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1391C20", Offset = "0x1391C20", VA = "0x1391C20", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1391CD0", Offset = "0x1391CD0", VA = "0x1391CD0", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1391B9C", Offset = "0x1391B9C", VA = "0x1391B9C")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1391D44", Offset = "0x1391D44", VA = "0x1391D44")]
	public SgtJovianScattering()
	{
	}
}
[Token(Token = "0x200006C")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00094", Offset = "0xA00094")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00094", Offset = "0xA00094")]
public class SgtJovianShadows : MonoBehaviour
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A970", Offset = "0xA0A970")]
	public SgtJovian Jovian;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A9A8", Offset = "0xA0A9A8")]
	public bool RequireSameLayer;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A9E0", Offset = "0xA0A9E0")]
	public bool RequireSameTag;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AA18", Offset = "0xA0AA18")]
	public string RequireNameContains;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1391D88", Offset = "0x1391D88", VA = "0x1391D88")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BED8", Offset = "0xA1BED8")]
	public void UpdateShadows()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1391E8C", Offset = "0x1391E8C", VA = "0x1391E8C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1391E9C", Offset = "0x1391E9C", VA = "0x1391E9C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1391F4C", Offset = "0x1391F4C", VA = "0x1391F4C")]
	public SgtJovianShadows()
	{
	}
}
[Token(Token = "0x200006D")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA000E0", Offset = "0xA000E0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA000E0", Offset = "0xA000E0")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA000E0", Offset = "0xA000E0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA000E0", Offset = "0xA000E0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA000E0", Offset = "0xA000E0")]
public class SgtLightning : MonoBehaviour
{
	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AA60", Offset = "0xA0AA60")]
	public SgtLightningSpawner LightningSpawner;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AA98", Offset = "0xA0AA98")]
	public float Age;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AAD0", Offset = "0xA0AAD0")]
	public float Life;

	[NonSerialized]
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material material;

	[Token(Token = "0x17000044")]
	public Material Material
	{
		[Token(Token = "0x6000414")]
		[Address(RVA = "0x1391F54", Offset = "0x1391F54", VA = "0x1391F54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1391F5C", Offset = "0x1391F5C", VA = "0x1391F5C")]
	public void SetMesh(Mesh newMesh)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1392058", Offset = "0x1392058", VA = "0x1392058")]
	public void SetMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1392154", Offset = "0x1392154", VA = "0x1392154")]
	public static SgtLightning Create(SgtLightningSpawner lightningSpawner)
	{
		return null;
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x13921F0", Offset = "0x13921F0", VA = "0x13921F0")]
	public static void Pool(SgtLightning model)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x139228C", Offset = "0x139228C", VA = "0x139228C")]
	public static void MarkForDestruction(SgtLightning model)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1392330", Offset = "0x1392330", VA = "0x1392330", Slot = "4")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x13923A4", Offset = "0x13923A4", VA = "0x13923A4", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x139252C", Offset = "0x139252C", VA = "0x139252C")]
	public SgtLightning()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA001B0", Offset = "0xA001B0")]
public class SgtLightningSpawner : MonoBehaviour
{
	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SgtLightningSpawner> AllLightningSpawner;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AB08", Offset = "0xA0AB08")]
	public float DelayMin;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AB40", Offset = "0xA0AB40")]
	public float DelayMax;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AB78", Offset = "0xA0AB78")]
	public float LifeMin;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ABB0", Offset = "0xA0ABB0")]
	public float LifeMax;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ABE8", Offset = "0xA0ABE8")]
	public float Radius;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AC20", Offset = "0xA0AC20")]
	public float Size;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AC58", Offset = "0xA0AC58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0AC58", Offset = "0xA0AC58")]
	public int Detail;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ACB0", Offset = "0xA0ACB0")]
	public Gradient Colors;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ACE8", Offset = "0xA0ACE8")]
	public float Brightness;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AD20", Offset = "0xA0AD20")]
	public List<Sprite> Sprites;

	[NonSerialized]
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mesh Mesh;

	[NonSerialized]
	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float cooldown;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0AD58", Offset = "0xA0AD58")]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool updateMeshCalled;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GradientColorKey[] defaultColors;

	[Token(Token = "0x17000045")]
	public Sprite RandomSprite
	{
		[Token(Token = "0x600041D")]
		[Address(RVA = "0x1392534", Offset = "0x1392534", VA = "0x1392534")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public Color RandomColor
	{
		[Token(Token = "0x600041E")]
		[Address(RVA = "0x13925CC", Offset = "0x13925CC", VA = "0x13925CC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x139260C", Offset = "0x139260C", VA = "0x139260C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BF10", Offset = "0xA1BF10")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1392A5C", Offset = "0x1392A5C", VA = "0x1392A5C")]
	public SgtLightning Spawn()
	{
		return null;
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1392DCC", Offset = "0x1392DCC", VA = "0x1392DCC")]
	public static SgtLightningSpawner CreateLightningSpawner(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1392F08", Offset = "0x1392F08", VA = "0x1392F08")]
	public static SgtLightningSpawner CreateLightningSpawner(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x139304C", Offset = "0x139304C", VA = "0x139304C", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x13930A4", Offset = "0x13930A4", VA = "0x13930A4", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x13930CC", Offset = "0x13930CC", VA = "0x13930CC", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x13931A8", Offset = "0x13931A8", VA = "0x13931A8", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x139320C", Offset = "0x139320C", VA = "0x139320C", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1393078", Offset = "0x1393078", VA = "0x1393078")]
	private void ResetDelay()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x13930BC", Offset = "0x13930BC", VA = "0x13930BC")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x13932DC", Offset = "0x13932DC", VA = "0x13932DC")]
	public SgtLightningSpawner()
	{
	}
}
[Token(Token = "0x200006F")]
public enum SgtNebulaSource
{
	[Token(Token = "0x400041A")]
	None,
	[Token(Token = "0x400041B")]
	Red,
	[Token(Token = "0x400041C")]
	Green,
	[Token(Token = "0x400041D")]
	Blue,
	[Token(Token = "0x400041E")]
	Alpha,
	[Token(Token = "0x400041F")]
	AverageRgb,
	[Token(Token = "0x4000420")]
	MinRgb,
	[Token(Token = "0x4000421")]
	MaxRgb
}
[Token(Token = "0x2000070")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA001E8", Offset = "0xA001E8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA001E8", Offset = "0xA001E8")]
public class SgtNebulaStarfield : SgtPointStarfield
{
	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AD90", Offset = "0xA0AD90")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA0AD90", Offset = "0xA0AD90")]
	public int Seed;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ADDC", Offset = "0xA0ADDC")]
	public Texture SourceTex;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AE14", Offset = "0xA0AE14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0AE14", Offset = "0xA0AE14")]
	public float Threshold;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AE68", Offset = "0xA0AE68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0AE68", Offset = "0xA0AE68")]
	public int Samples;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AEBC", Offset = "0xA0AEBC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0AEBC", Offset = "0xA0AEBC")]
	public float Jitter;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AF10", Offset = "0xA0AF10")]
	public SgtNebulaSource HeightSource;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AF48", Offset = "0xA0AF48")]
	public SgtNebulaSource ScaleSource;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AF80", Offset = "0xA0AF80")]
	public Vector3 Size;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AFB8", Offset = "0xA0AFB8")]
	public float HorizontalBrightness;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AFF0", Offset = "0xA0AFF0")]
	public float HorizontalPower;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B028", Offset = "0xA0B028")]
	public int StarCount;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B060", Offset = "0xA0B060")]
	public float StarRadiusMin;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B098", Offset = "0xA0B098")]
	public float StarRadiusMax;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B0D0", Offset = "0xA0B0D0")]
	public float StarRadiusBias;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B108", Offset = "0xA0B108")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B108", Offset = "0xA0B108")]
	public float StarPulseMax;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Texture2D sourceTex2D;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3 halfSize;

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1393494", Offset = "0x1393494", VA = "0x1393494")]
	public static SgtNebulaStarfield CreateNebulaStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x13935AC", Offset = "0x13935AC", VA = "0x13935AC")]
	public static SgtNebulaStarfield CreateNebulaStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x13936F0", Offset = "0x13936F0", VA = "0x13936F0", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1393850", Offset = "0x1393850", VA = "0x1393850", Slot = "15")]
	protected override void NextQuad(ref SgtPointStar quad, int starIndex)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x1393CCC", Offset = "0x1393CCC", VA = "0x1393CCC", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1393D28", Offset = "0x1393D28", VA = "0x1393D28", Slot = "16")]
	protected override void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1393B68", Offset = "0x1393B68", VA = "0x1393B68")]
	private float GetWeight(SgtNebulaSource source, Color pixel, float defaultWeight)
	{
		return default(float);
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x13940E0", Offset = "0x13940E0", VA = "0x13940E0")]
	public SgtNebulaStarfield()
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00234", Offset = "0xA00234")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00234", Offset = "0xA00234")]
public class SgtObjectPool : MonoBehaviour
{
	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtObjectPool> AllObjectPools;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string TypeName;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<UnityEngine.Object> Elements;

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1394174", Offset = "0x1394174", VA = "0x1394174", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x13941F8", Offset = "0x13941F8", VA = "0x13941F8", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x139427C", Offset = "0x139427C", VA = "0x139427C", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x139433C", Offset = "0x139433C", VA = "0x139433C")]
	public SgtObjectPool()
	{
	}
}
[Token(Token = "0x2000072")]
public static class SgtObjectPool<T> where T : UnityEngine.Object
{
	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04050", Offset = "0xA04050")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string typeName;

		[Token(Token = "0x6001910")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6001911")]
		internal bool <UpdateComponent>b__0(SgtObjectPool p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SgtObjectPool pool;

	[Token(Token = "0x6000439")]
	static SgtObjectPool()
	{
	}

	[Token(Token = "0x600043A")]
	public static T Add(T entry)
	{
		return null;
	}

	[Token(Token = "0x600043B")]
	public static T Add(T element, Action<T> onAdd)
	{
		return null;
	}

	[Token(Token = "0x600043C")]
	public static T Pop()
	{
		return null;
	}

	[Token(Token = "0x600043D")]
	private static void UpdateComponent(bool allowCreation)
	{
	}
}
[Token(Token = "0x2000073")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00280", Offset = "0xA00280")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA00280", Offset = "0xA00280")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00280", Offset = "0xA00280")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00280", Offset = "0xA00280")]
public class SgtObserver : MonoBehaviour
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtObserver> AllObservers;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<SgtObserver> OnObserverPreCull;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<SgtObserver> OnObserverPreRender;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<SgtObserver> OnObserverPostRender;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B15C", Offset = "0xA0B15C")]
	public float RollAngle;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion RollQuaternion;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Matrix4x4 RollMatrix;

	[NonSerialized]
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 DeltaPosition;

	[NonSerialized]
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 Velocity;

	[NonSerialized]
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Quaternion OldRotation;

	[NonSerialized]
	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 OldPosition;

	[NonSerialized]
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Camera Camera;

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x138886C", Offset = "0x138886C", VA = "0x138886C")]
	public static SgtObserver Find(Camera camera)
	{
		return null;
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1394420", Offset = "0x1394420", VA = "0x1394420", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1394538", Offset = "0x1394538", VA = "0x1394538", Slot = "5")]
	protected virtual void OnPreCull()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x13945F0", Offset = "0x13945F0", VA = "0x13945F0", Slot = "6")]
	protected virtual void OnPreRender()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x13946A8", Offset = "0x13946A8", VA = "0x13946A8", Slot = "7")]
	protected virtual void OnPostRender()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1394760", Offset = "0x1394760", VA = "0x1394760", Slot = "8")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x13949BC", Offset = "0x13949BC", VA = "0x13949BC", Slot = "9")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x1394A40", Offset = "0x1394A40", VA = "0x1394A40")]
	public SgtObserver()
	{
	}
}
[Serializable]
[Token(Token = "0x2000074")]
public class SgtPointStar
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SgtPointStar Temp;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B194", Offset = "0xA0B194")]
	public int Variant;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B1CC", Offset = "0xA0B1CC")]
	public Color Color;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B204", Offset = "0xA0B204")]
	public float Radius;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B23C", Offset = "0xA0B23C")]
	public float Angle;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B274", Offset = "0xA0B274")]
	public Vector3 Position;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B2AC", Offset = "0xA0B2AC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B2AC", Offset = "0xA0B2AC")]
	public float PulseSpeed;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B300", Offset = "0xA0B300")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B300", Offset = "0xA0B300")]
	public float PulseRange;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B354", Offset = "0xA0B354")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B354", Offset = "0xA0B354")]
	public float PulseOffset;

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1383694", Offset = "0x1383694", VA = "0x1383694")]
	public void CopyFrom(SgtPointStar other)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x1394B8C", Offset = "0x1394B8C", VA = "0x1394B8C")]
	public SgtPointStar()
	{
	}
}
[Token(Token = "0x2000075")]
public abstract class SgtPointStarfield : SgtQuads
{
	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B3A8", Offset = "0xA0B3A8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0B3A8", Offset = "0xA0B3A8")]
	public bool FollowCameras;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B408", Offset = "0xA0B408")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B408", Offset = "0xA0B408")]
	public float Softness;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B460", Offset = "0xA0B460")]
	public bool Wrap;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B498", Offset = "0xA0B498")]
	public Vector3 WrapSize;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B4D0", Offset = "0xA0B4D0")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0B4D0", Offset = "0xA0B4D0")]
	public bool Stretch;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B530", Offset = "0xA0B530")]
	public Vector3 StretchVector;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B568", Offset = "0xA0B568")]
	public float StretchScale;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B5A0", Offset = "0xA0B5A0")]
	public bool FadeNear;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B5D8", Offset = "0xA0B5D8")]
	public Texture FadeNearTex;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B610", Offset = "0xA0B610")]
	public float FadeNearRadius;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B648", Offset = "0xA0B648")]
	public float FadeNearThickness;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B680", Offset = "0xA0B680")]
	public bool FadeFar;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B6B8", Offset = "0xA0B6B8")]
	public Texture FadeFarTex;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B6F0", Offset = "0xA0B6F0")]
	public float FadeFarRadius;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B728", Offset = "0xA0B728")]
	public float FadeFarThickness;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B760", Offset = "0xA0B760")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0B760", Offset = "0xA0B760")]
	public bool Pulse;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B7C0", Offset = "0xA0B7C0")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0B7C0", Offset = "0xA0B7C0")]
	public float PulseOffset;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B820", Offset = "0xA0B820")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0B820", Offset = "0xA0B820")]
	public float PulseSpeed;

	[Token(Token = "0x17000047")]
	protected override string ShaderName
	{
		[Token(Token = "0x600044A")]
		[Address(RVA = "0x1394C28", Offset = "0x1394C28", VA = "0x1394C28", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1394C70", Offset = "0x1394C70", VA = "0x1394C70")]
	public void UpdateFadeFarTex()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1394D14", Offset = "0x1394D14", VA = "0x1394D14")]
	public void UpdateFadeNearTex()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1394DB8", Offset = "0x1394DB8", VA = "0x1394DB8")]
	public SgtCustomStarfield MakeEditableCopy(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x13950F0", Offset = "0x13950F0", VA = "0x13950F0")]
	public SgtCustomStarfield MakeEditableCopy(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1395210", Offset = "0x1395210", VA = "0x1395210", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x1395340", Offset = "0x1395340", VA = "0x1395340", Slot = "14")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x1395420", Offset = "0x1395420", VA = "0x1395420", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1395550", Offset = "0x1395550", VA = "0x1395550", Slot = "11")]
	protected override void BuildMaterial()
	{
	}

	[Token(Token = "0x6000453")]
	protected abstract void NextQuad(ref SgtPointStar quad, int starIndex);

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x13959CC", Offset = "0x13959CC", VA = "0x13959CC", Slot = "13")]
	protected override void BuildMesh(Mesh mesh, int starIndex, int starCount)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1393F64", Offset = "0x1393F64", VA = "0x1393F64", Slot = "16")]
	protected virtual void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1396338", Offset = "0x1396338", VA = "0x1396338")]
	protected void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x137D8D8", Offset = "0x137D8D8", VA = "0x137D8D8")]
	protected SgtPointStarfield()
	{
	}
}
[Token(Token = "0x2000076")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00328", Offset = "0xA00328")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00328", Offset = "0xA00328")]
public class SgtProminence : MonoBehaviour
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtProminence> AllProminences;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B880", Offset = "0xA0B880")]
	public Texture MainTex;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B8B8", Offset = "0xA0B8B8")]
	public Color Color;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B8F0", Offset = "0xA0B8F0")]
	public float Brightness;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B928", Offset = "0xA0B928")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B960", Offset = "0xA0B960")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B998", Offset = "0xA0B998")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA0B998", Offset = "0xA0B998")]
	public int Seed;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B9E4", Offset = "0xA0B9E4")]
	public float InnerRadius;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BA1C", Offset = "0xA0BA1C")]
	public float OuterRadius;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BA54", Offset = "0xA0BA54")]
	public int PlaneCount;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BA8C", Offset = "0xA0BA8C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0BA8C", Offset = "0xA0BA8C")]
	public int PlaneDetail;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BAEC", Offset = "0xA0BAEC")]
	public bool FadeEdge;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BB24", Offset = "0xA0BB24")]
	public float FadePower;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BB5C", Offset = "0xA0BB5C")]
	public bool ClipNear;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BB94", Offset = "0xA0BB94")]
	public float ClipPower;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BBCC", Offset = "0xA0BBCC")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0BBCC", Offset = "0xA0BBCC")]
	public float CameraOffset;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0BC2C", Offset = "0xA0BC2C")]
	public List<SgtProminencePlane> Planes;

	[NonSerialized]
	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material Material;

	[NonSerialized]
	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Mesh Mesh;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0BC64", Offset = "0xA0BC64")]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	protected bool updateMeshCalled;

	[NonSerialized]
	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	private bool updatePlanesCalled;

	[Token(Token = "0x17000048")]
	public float Width
	{
		[Token(Token = "0x6000458")]
		[Address(RVA = "0x13967D4", Offset = "0x13967D4", VA = "0x13967D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x13967E0", Offset = "0x13967E0", VA = "0x13967E0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BF48", Offset = "0xA1BF48")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1396B9C", Offset = "0x1396B9C", VA = "0x1396B9C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BF80", Offset = "0xA1BF80")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1397210", Offset = "0x1397210", VA = "0x1397210")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BFB8", Offset = "0xA1BFB8")]
	public void UpdatePlanes()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1397504", Offset = "0x1397504", VA = "0x1397504")]
	public static SgtProminence CreateProminence(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1397640", Offset = "0x1397640", VA = "0x1397640")]
	public static SgtProminence CreateProminence(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1397784", Offset = "0x1397784", VA = "0x1397784", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1397A00", Offset = "0x1397A00", VA = "0x1397A00", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1397A18", Offset = "0x1397A18", VA = "0x1397A18", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1397C20", Offset = "0x1397C20", VA = "0x1397C20", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1397D7C", Offset = "0x1397D7C", VA = "0x1397D7C")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1397FAC", Offset = "0x1397FAC", VA = "0x1397FAC")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x13973AC", Offset = "0x13973AC", VA = "0x13973AC")]
	private SgtProminencePlane GetOrAddPlane(int index)
	{
		return null;
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x13979AC", Offset = "0x13979AC", VA = "0x13979AC")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1398094", Offset = "0x1398094", VA = "0x1398094")]
	public SgtProminence()
	{
	}
}
[Token(Token = "0x2000077")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00374", Offset = "0xA00374")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00374", Offset = "0xA00374")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA00374", Offset = "0xA00374")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00374", Offset = "0xA00374")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00374", Offset = "0xA00374")]
public class SgtProminencePlane : MonoBehaviour
{
	[Token(Token = "0x20003F8")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x11E7990", Offset = "0x11E7990", VA = "0x11E7990")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BC9C", Offset = "0xA0BC9C")]
	public SgtProminence Prominence;

	[NonSerialized]
	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[NonSerialized]
	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x11E72C8", Offset = "0x11E72C8", VA = "0x11E72C8")]
	public void SetMesh(Mesh newMesh)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x11E73C4", Offset = "0x11E73C4", VA = "0x11E73C4")]
	public void SetMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x11E74C0", Offset = "0x11E74C0", VA = "0x11E74C0")]
	public void SetRotation(Quaternion rotation)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x11E756C", Offset = "0x11E756C", VA = "0x11E756C")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x11E75FC", Offset = "0x11E75FC", VA = "0x11E75FC")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x11E7698", Offset = "0x11E7698", VA = "0x11E7698")]
	public void Revert()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x11E7724", Offset = "0x11E7724", VA = "0x11E7724")]
	public static SgtProminencePlane Create(SgtProminence prominence)
	{
		return null;
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x11E77C0", Offset = "0x11E77C0", VA = "0x11E77C0")]
	public static void Pool(SgtProminencePlane plane)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x11E785C", Offset = "0x11E785C", VA = "0x11E785C")]
	public static void MarkForDestruction(SgtProminencePlane plane)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x11E7900", Offset = "0x11E7900", VA = "0x11E7900", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x11E7988", Offset = "0x11E7988", VA = "0x11E7988")]
	public SgtProminencePlane()
	{
	}
}
[Token(Token = "0x2000078")]
public abstract class SgtQuads : MonoBehaviour
{
	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BCD4", Offset = "0xA0BCD4")]
	public Color Color;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BD0C", Offset = "0xA0BD0C")]
	public float Brightness;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BD44", Offset = "0xA0BD44")]
	public Texture MainTex;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BD7C", Offset = "0xA0BD7C")]
	public SgtQuadsLayoutType Layout;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BDB4", Offset = "0xA0BDB4")]
	public int LayoutColumns;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BDEC", Offset = "0xA0BDEC")]
	public int LayoutRows;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BE24", Offset = "0xA0BE24")]
	public List<Rect> Rects;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BE5C", Offset = "0xA0BE5C")]
	public SgtQuadsBlendType BlendMode;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BE94", Offset = "0xA0BE94")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BECC", Offset = "0xA0BECC")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0BF04", Offset = "0xA0BF04")]
	public List<SgtQuadsModel> Models;

	[NonSerialized]
	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material Material;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool updateMeshesAndModelsCalled;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static List<Vector4> tempCoords;

	[Token(Token = "0x17000049")]
	protected abstract string ShaderName
	{
		[Token(Token = "0x6000473")]
		get;
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x11E7998", Offset = "0x11E7998", VA = "0x11E7998")]
	public void UpdateMainTex()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x11E7A3C", Offset = "0x11E7A3C", VA = "0x11E7A3C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1BFF0", Offset = "0xA1BFF0")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x11E7CA8", Offset = "0x11E7CA8", VA = "0x11E7CA8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C028", Offset = "0xA1C028")]
	public void UpdateMeshesAndModels()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x11E8534", Offset = "0x11E8534", VA = "0x11E8534", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x11E8554", Offset = "0x11E8554", VA = "0x11E8554", Slot = "6")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x11E869C", Offset = "0x11E869C", VA = "0x11E869C", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x11E8784", Offset = "0x11E8784", VA = "0x11E8784", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600047B")]
	protected abstract int BeginQuads();

	[Token(Token = "0x600047C")]
	protected abstract void EndQuads();

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x11E8904", Offset = "0x11E8904", VA = "0x11E8904", Slot = "11")]
	protected virtual void BuildMaterial()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x11E8C94", Offset = "0x11E8C94", VA = "0x11E8C94", Slot = "12")]
	protected virtual void StartOnce()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x11E8A9C", Offset = "0x11E8A9C", VA = "0x11E8A9C")]
	protected void BuildAdditive()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x11E8B98", Offset = "0x11E8B98", VA = "0x11E8B98")]
	protected void BuildAlphaTest()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x11E7E88", Offset = "0x11E7E88", VA = "0x11E7E88")]
	protected void BuildRects()
	{
	}

	[Token(Token = "0x6000482")]
	protected abstract void BuildMesh(Mesh mesh, int starIndex, int starCount);

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x11E8C98", Offset = "0x11E8C98", VA = "0x11E8C98")]
	protected static void ExpandBounds(ref bool minMaxSet, ref Vector3 min, ref Vector3 max, Vector3 position, float radius)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x11E8028", Offset = "0x11E8028", VA = "0x11E8028")]
	private void ConvertRectsToCoords()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x11E823C", Offset = "0x11E823C", VA = "0x11E823C")]
	private SgtQuadsModel GetOrNewModel(int index)
	{
		return null;
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x11E83B0", Offset = "0x11E83B0", VA = "0x11E83B0")]
	private Mesh GetOrNewMesh(SgtQuadsModel model)
	{
		return null;
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x11E8658", Offset = "0x11E8658", VA = "0x11E8658")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x11E905C", Offset = "0x11E905C", VA = "0x11E905C")]
	protected SgtQuads()
	{
	}
}
[Token(Token = "0x2000079")]
public enum SgtQuadsBlendType
{
	[Token(Token = "0x400048C")]
	Default,
	[Token(Token = "0x400048D")]
	Additive,
	[Token(Token = "0x400048E")]
	AlphaTest
}
[Token(Token = "0x200007A")]
public enum SgtQuadsLayoutType
{
	[Token(Token = "0x4000490")]
	Grid,
	[Token(Token = "0x4000491")]
	Custom
}
[Token(Token = "0x200007B")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00444", Offset = "0xA00444")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00444", Offset = "0xA00444")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA00444", Offset = "0xA00444")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00444", Offset = "0xA00444")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00444", Offset = "0xA00444")]
public class SgtQuadsModel : MonoBehaviour
{
	[Token(Token = "0x20003F9")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x11E94B4", Offset = "0x11E94B4", VA = "0x11E94B4")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BF24", Offset = "0xA0BF24")]
	public SgtQuads Quads;

	[NonSerialized]
	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[NonSerialized]
	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x1700004A")]
	public Mesh Mesh
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0x11E911C", Offset = "0x11E911C", VA = "0x11E911C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x11E9124", Offset = "0x11E9124", VA = "0x11E9124")]
	public void PoolMeshNow()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x11E8F60", Offset = "0x11E8F60", VA = "0x11E8F60")]
	public void SetMesh(Mesh newMesh)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x11E7BAC", Offset = "0x11E7BAC", VA = "0x11E7BAC")]
	public void SetMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x11E8EC4", Offset = "0x11E8EC4", VA = "0x11E8EC4")]
	public static SgtQuadsModel Create(SgtQuads quads)
	{
		return null;
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x11E8490", Offset = "0x11E8490", VA = "0x11E8490")]
	public static void Pool(SgtQuadsModel model)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x11E8858", Offset = "0x11E8858", VA = "0x11E8858")]
	public static void MarkForDestruction(SgtQuadsModel model)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x11E9268", Offset = "0x11E9268", VA = "0x11E9268")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x11E92F8", Offset = "0x11E92F8", VA = "0x11E92F8")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x11E9394", Offset = "0x11E9394", VA = "0x11E9394")]
	public void Revert()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x11E9420", Offset = "0x11E9420", VA = "0x11E9420", Slot = "4")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x11E9424", Offset = "0x11E9424", VA = "0x11E9424", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x11E94AC", Offset = "0x11E94AC", VA = "0x11E94AC")]
	public SgtQuadsModel()
	{
	}
}
[Token(Token = "0x200007C")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00514", Offset = "0xA00514")]
public class SgtRaycastDepth : SgtDepth
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BF5C", Offset = "0xA0BF5C")]
	public float MaxThickness;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x11E94BC", Offset = "0x11E94BC", VA = "0x11E94BC")]
	public static SgtRaycastDepth CreateDepthRaycast(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x11E95D4", Offset = "0x11E95D4", VA = "0x11E95D4")]
	public static SgtRaycastDepth CreateDepthRaycast(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x11E971C", Offset = "0x11E971C", VA = "0x11E971C", Slot = "4")]
	protected override float DoCalculate(Vector3 eye, Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x11E9994", Offset = "0x11E9994", VA = "0x11E9994")]
	public SgtRaycastDepth()
	{
	}
}
[Token(Token = "0x200007D")]
public struct SgtRectL
{
	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public long minX;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public long minY;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long maxX;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long maxY;

	[Token(Token = "0x1700004B")]
	public long SizeX
	{
		[Token(Token = "0x600049B")]
		[Address(RVA = "0xAEBC70", Offset = "0xAEBC70", VA = "0xAEBC70")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700004C")]
	public long SizeY
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0xAEBC80", Offset = "0xAEBC80", VA = "0xAEBC80")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xAEBC90", Offset = "0xAEBC90", VA = "0xAEBC90")]
	public void ClampTo(SgtRectL other)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xAEBCBC", Offset = "0xAEBCBC", VA = "0xAEBCBC")]
	public SgtRectL GetExpanded(long amount)
	{
		return default(SgtRectL);
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xAEBCD4", Offset = "0xAEBCD4", VA = "0xAEBCD4")]
	public SgtRectL(long newMinX, long newMinY, long newMaxX, long newMaxY)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xAEBCE0", Offset = "0xAEBCE0", VA = "0xAEBCE0")]
	public bool Contains(long x, long y)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xAEBD1C", Offset = "0xAEBD1C", VA = "0xAEBD1C")]
	public void Clear()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xAEBD28", Offset = "0xAEBD28", VA = "0xAEBD28")]
	public void SwapX()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xAEBD44", Offset = "0xAEBD44", VA = "0xAEBD44")]
	public void SwapY()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xAEBD60", Offset = "0xAEBD60", VA = "0xAEBD60", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xAEBD68", Offset = "0xAEBD68", VA = "0xAEBD68", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x11E9BF8", Offset = "0x11E9BF8", VA = "0x11E9BF8")]
	public static bool operator ==(SgtRectL a, SgtRectL b)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x11E9C44", Offset = "0x11E9C44", VA = "0x11E9C44")]
	public static bool operator !=(SgtRectL a, SgtRectL b)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xAEBD70", Offset = "0xAEBD70", VA = "0xAEBD70", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200007E")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00524", Offset = "0xA00524")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00524", Offset = "0xA00524")]
public class SgtRing : MonoBehaviour
{
	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtRing> AllRings;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BF94", Offset = "0xA0BF94")]
	public Color Color;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BFCC", Offset = "0xA0BFCC")]
	public float Brightness;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C004", Offset = "0xA0C004")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C03C", Offset = "0xA0C03C")]
	public int RenderQueueOffset;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C074", Offset = "0xA0C074")]
	public Texture MainTex;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C0AC", Offset = "0xA0C0AC")]
	public Mesh Mesh;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C0E4", Offset = "0xA0C0E4")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0C0E4", Offset = "0xA0C0E4")]
	public int Segments;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C144", Offset = "0xA0C144")]
	public bool Detail;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C17C", Offset = "0xA0C17C")]
	public Texture DetailTex;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C1B4", Offset = "0xA0C1B4")]
	public float DetailScaleX;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C1EC", Offset = "0xA0C1EC")]
	public int DetailScaleY;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C224", Offset = "0xA0C224")]
	public Vector2 DetailOffset;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C25C", Offset = "0xA0C25C")]
	public Vector2 DetailSpeed;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C294", Offset = "0xA0C294")]
	public float DetailTwist;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C2CC", Offset = "0xA0C2CC")]
	public float DetailTwistBias;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C304", Offset = "0xA0C304")]
	public bool Fade;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C33C", Offset = "0xA0C33C")]
	public Texture FadeTex;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C374", Offset = "0xA0C374")]
	public float FadeDistance;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C3AC", Offset = "0xA0C3AC")]
	public bool Scattering;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C3E4", Offset = "0xA0C3E4")]
	public float ScatteringMie;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C41C", Offset = "0xA0C41C")]
	public float ScatteringStrength;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C454", Offset = "0xA0C454")]
	public bool Lit;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C48C", Offset = "0xA0C48C")]
	public Texture LightingTex;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C4C4", Offset = "0xA0C4C4")]
	public List<Light> Lights;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C4FC", Offset = "0xA0C4FC")]
	public List<SgtShadow> Shadows;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0C534", Offset = "0xA0C534")]
	public List<SgtRingModel> Models;

	[NonSerialized]
	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material Material;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool updateModelsCalled;

	[Token(Token = "0x1700004D")]
	protected virtual string ShaderName
	{
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x11E9F2C", Offset = "0x11E9F2C", VA = "0x11E9F2C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x11E9F74", Offset = "0x11E9F74", VA = "0x11E9F74", Slot = "5")]
	public virtual void UpdateMainTex()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x11EA018", Offset = "0x11EA018", VA = "0x11EA018", Slot = "6")]
	public virtual void UpdateFadeTex()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x11EA0BC", Offset = "0x11EA0BC", VA = "0x11EA0BC", Slot = "7")]
	public virtual void UpdateLightingTex()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x11EA160", Offset = "0x11EA160", VA = "0x11EA160", Slot = "8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C060", Offset = "0xA1C060")]
	public virtual void UpdateMaterial()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x11EA7CC", Offset = "0x11EA7CC", VA = "0x11EA7CC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C098", Offset = "0xA1C098")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x11EA9BC", Offset = "0x11EA9BC", VA = "0x11EA9BC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C0D0", Offset = "0xA1C0D0")]
	public void UpdateModels()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x11EAE4C", Offset = "0x11EAE4C", VA = "0x11EAE4C")]
	public static SgtRing CreateRing(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x11EAF88", Offset = "0x11EAF88", VA = "0x11EAF88")]
	public static SgtRing CreateRing(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x11EB0D0", Offset = "0x11EB0D0", VA = "0x11EB0D0", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x11EB2E4", Offset = "0x11EB2E4", VA = "0x11EB2E4", Slot = "10")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x11EB2FC", Offset = "0x11EB2FC", VA = "0x11EB2FC", Slot = "11")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x11EB558", Offset = "0x11EB558", VA = "0x11EB558", Slot = "12")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x11EB700", Offset = "0x11EB700", VA = "0x11EB700", Slot = "13")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x11EA750", Offset = "0x11EA750", VA = "0x11EA750")]
	private void UpdateMaterialNonSerialized()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x11EB878", Offset = "0x11EB878", VA = "0x11EB878")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x11EABC4", Offset = "0x11EABC4", VA = "0x11EABC4")]
	private SgtRingModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x11EB298", Offset = "0x11EB298", VA = "0x11EB298")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x11EB99C", Offset = "0x11EB99C", VA = "0x11EB99C")]
	public SgtRing()
	{
	}
}
[Token(Token = "0x200007F")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00570", Offset = "0xA00570")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00570", Offset = "0xA00570")]
public class SgtRingFade : MonoBehaviour
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C57C", Offset = "0xA0C57C")]
	public SgtRing Ring;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C5B4", Offset = "0xA0C5B4")]
	public int Width;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C5EC", Offset = "0xA0C5EC")]
	public TextureFormat Format;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SgtEase.Type Ease;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0C624", Offset = "0xA0C624")]
	private bool startCalled;

	[Token(Token = "0x1700004E")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x11EBA7C", Offset = "0x11EBA7C", VA = "0x11EBA7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x11EBA84", Offset = "0x11EBA84", VA = "0x11EBA84")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C108", Offset = "0xA1C108")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x11EBDD0", Offset = "0x11EBDD0", VA = "0x11EBDD0")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x11EBCB0", Offset = "0x11EBCB0", VA = "0x11EBCB0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C140", Offset = "0xA1C140")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x11EBEBC", Offset = "0x11EBEBC", VA = "0x11EBEBC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x11EBF50", Offset = "0x11EBF50", VA = "0x11EBF50", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x11EC000", Offset = "0x11EC000", VA = "0x11EC000", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x11EBECC", Offset = "0x11EBECC", VA = "0x11EBECC")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x11EC074", Offset = "0x11EC074", VA = "0x11EC074")]
	public SgtRingFade()
	{
	}
}
[Token(Token = "0x2000080")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA005BC", Offset = "0xA005BC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA005BC", Offset = "0xA005BC")]
public class SgtRingLighting : MonoBehaviour
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C65C", Offset = "0xA0C65C")]
	public SgtRing Ring;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C694", Offset = "0xA0C694")]
	public int Width;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C6CC", Offset = "0xA0C6CC")]
	public TextureFormat Format;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C704", Offset = "0xA0C704")]
	public float FrontPower;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C73C", Offset = "0xA0C73C")]
	public float BackPower;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C774", Offset = "0xA0C774")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C774", Offset = "0xA0C774")]
	public float BackStrength;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C7C8", Offset = "0xA0C7C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C7C8", Offset = "0xA0C7C8")]
	public float BaseStrength;

	[NonSerialized]
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0C81C", Offset = "0xA0C81C")]
	private bool startCalled;

	[Token(Token = "0x1700004F")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x11EC094", Offset = "0x11EC094", VA = "0x11EC094")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x11EC09C", Offset = "0x11EC09C", VA = "0x11EC09C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C178", Offset = "0xA1C178")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x11EC3E8", Offset = "0x11EC3E8", VA = "0x11EC3E8")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x11EC2C8", Offset = "0x11EC2C8", VA = "0x11EC2C8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C1B0", Offset = "0xA1C1B0")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x11EC504", Offset = "0x11EC504", VA = "0x11EC504", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x11EC598", Offset = "0x11EC598", VA = "0x11EC598", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x11EC648", Offset = "0x11EC648", VA = "0x11EC648", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x11EC514", Offset = "0x11EC514", VA = "0x11EC514")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x11EC6BC", Offset = "0x11EC6BC", VA = "0x11EC6BC")]
	public SgtRingLighting()
	{
	}
}
[Token(Token = "0x2000081")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00608", Offset = "0xA00608")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00608", Offset = "0xA00608")]
public class SgtRingLights : MonoBehaviour
{
	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C854", Offset = "0xA0C854")]
	public SgtRing Ring;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C88C", Offset = "0xA0C88C")]
	public bool RequireSameLayer;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C8C4", Offset = "0xA0C8C4")]
	public bool RequireSameTag;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C8FC", Offset = "0xA0C8FC")]
	public string RequireNameContains;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x11EC6DC", Offset = "0x11EC6DC", VA = "0x11EC6DC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C1E8", Offset = "0xA1C1E8")]
	public void UpdateLights()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x11EC7E4", Offset = "0x11EC7E4", VA = "0x11EC7E4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x11EC7F4", Offset = "0x11EC7F4", VA = "0x11EC7F4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x11EC8A4", Offset = "0x11EC8A4", VA = "0x11EC8A4")]
	public SgtRingLights()
	{
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00654", Offset = "0xA00654")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00654", Offset = "0xA00654")]
public class SgtRingMainTexFilter : MonoBehaviour
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C944", Offset = "0xA0C944")]
	public SgtRing Ring;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C97C", Offset = "0xA0C97C")]
	public Texture2D Source;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C9B4", Offset = "0xA0C9B4")]
	public TextureFormat Format;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C9EC", Offset = "0xA0C9EC")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0CA24", Offset = "0xA0CA24")]
	private bool startCalled;

	[Token(Token = "0x17000050")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x11EC8AC", Offset = "0x11EC8AC", VA = "0x11EC8AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x11EC8B4", Offset = "0x11EC8B4", VA = "0x11EC8B4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C220", Offset = "0xA1C220")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x11ECBBC", Offset = "0x11ECBBC", VA = "0x11ECBBC")]
	private void WriteTexture(int x)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x11ECB14", Offset = "0x11ECB14", VA = "0x11ECB14")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C258", Offset = "0xA1C258")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x11ECCC0", Offset = "0x11ECCC0", VA = "0x11ECCC0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x11ECD54", Offset = "0x11ECD54", VA = "0x11ECD54", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x11ECE04", Offset = "0x11ECE04", VA = "0x11ECE04", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x11ECCD0", Offset = "0x11ECCD0", VA = "0x11ECCD0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x11ECE78", Offset = "0x11ECE78", VA = "0x11ECE78")]
	public SgtRingMainTexFilter()
	{
	}
}
[Token(Token = "0x2000083")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA006A0", Offset = "0xA006A0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA006A0", Offset = "0xA006A0")]
public class SgtRingMesh : MonoBehaviour
{
	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CA5C", Offset = "0xA0CA5C")]
	public SgtRing Ring;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CA94", Offset = "0xA0CA94")]
	public int Segments;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CACC", Offset = "0xA0CACC")]
	public int SegmentDetail;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CB04", Offset = "0xA0CB04")]
	public float RadiusMin;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CB3C", Offset = "0xA0CB3C")]
	public float RadiusMax;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CB74", Offset = "0xA0CB74")]
	public int RadiusDetail;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CBAC", Offset = "0xA0CBAC")]
	public float BoundsShift;

	[NonSerialized]
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh generatedMesh;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0CBE4", Offset = "0xA0CBE4")]
	private bool startCalled;

	[Token(Token = "0x17000051")]
	public Mesh GeneratedMesh
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x11ECE8C", Offset = "0x11ECE8C", VA = "0x11ECE8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x11ECE94", Offset = "0x11ECE94", VA = "0x11ECE94")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C290", Offset = "0xA1C290")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x11ED5B8", Offset = "0x11ED5B8", VA = "0x11ED5B8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C2C8", Offset = "0xA1C2C8")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x11ED6D0", Offset = "0x11ED6D0", VA = "0x11ED6D0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x11ED764", Offset = "0x11ED764", VA = "0x11ED764", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x11ED814", Offset = "0x11ED814", VA = "0x11ED814", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x11ED6E0", Offset = "0x11ED6E0", VA = "0x11ED6E0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x11ED8E4", Offset = "0x11ED8E4", VA = "0x11ED8E4")]
	public SgtRingMesh()
	{
	}
}
[Token(Token = "0x2000084")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA006EC", Offset = "0xA006EC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA006EC", Offset = "0xA006EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA006EC", Offset = "0xA006EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA006EC", Offset = "0xA006EC")]
public class SgtRingModel : MonoBehaviour
{
	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CC1C", Offset = "0xA0CC1C")]
	public SgtRing Ring;

	[NonSerialized]
	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x11EA8A4", Offset = "0x11EA8A4", VA = "0x11EA8A4")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x11EA638", Offset = "0x11EA638", VA = "0x11EA638")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x11EAD04", Offset = "0x11EAD04", VA = "0x11EAD04")]
	public void SetRotation(Quaternion rotation)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x11EB900", Offset = "0x11EB900", VA = "0x11EB900")]
	public static SgtRingModel Create(SgtRing ring)
	{
		return null;
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x11EADB0", Offset = "0x11EADB0", VA = "0x11EADB0")]
	public static void Pool(SgtRingModel segment)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x11EB7D4", Offset = "0x11EB7D4", VA = "0x11EB7D4")]
	public static void MarkForDestruction(SgtRingModel segment)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x11ED908", Offset = "0x11ED908", VA = "0x11ED908", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x11ED990", Offset = "0x11ED990", VA = "0x11ED990")]
	public SgtRingModel()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA007AC", Offset = "0xA007AC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA007AC", Offset = "0xA007AC")]
public class SgtRingShadow : SgtShadow
{
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CC54", Offset = "0xA0CC54")]
	public Texture Texture;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CC8C", Offset = "0xA0CC8C")]
	public SgtRingMesh RingMesh;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CCC4", Offset = "0xA0CCC4")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0CCC4", Offset = "0xA0CCC4")]
	public float RadiusMin;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CD24", Offset = "0xA0CD24")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0CD24", Offset = "0xA0CD24")]
	public float RadiusMax;

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x11ED998", Offset = "0x11ED998", VA = "0x11ED998", Slot = "4")]
	public override Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x11ED9A0", Offset = "0x11ED9A0", VA = "0x11ED9A0", Slot = "7")]
	public override bool CalculateShadow(ref Matrix4x4 matrix, ref float ratio)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x11EE088", Offset = "0x11EE088", VA = "0x11EE088")]
	public SgtRingShadow()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA007F8", Offset = "0xA007F8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA007F8", Offset = "0xA007F8")]
public class SgtRingShadows : MonoBehaviour
{
	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CD84", Offset = "0xA0CD84")]
	public SgtRing Ring;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CDBC", Offset = "0xA0CDBC")]
	public bool RequireSameLayer;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CDF4", Offset = "0xA0CDF4")]
	public bool RequireSameTag;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CE2C", Offset = "0xA0CE2C")]
	public string RequireNameContains;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x11EE104", Offset = "0x11EE104", VA = "0x11EE104")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C300", Offset = "0xA1C300")]
	public void UpdateShadows()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x11EE20C", Offset = "0x11EE20C", VA = "0x11EE20C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x11EE21C", Offset = "0x11EE21C", VA = "0x11EE21C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x11EE2CC", Offset = "0x11EE2CC", VA = "0x11EE2CC")]
	public SgtRingShadows()
	{
	}
}
[Token(Token = "0x2000087")]
public class SgtSeedAttribute : PropertyAttribute
{
	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x11EE3F4", Offset = "0x11EE3F4", VA = "0x11EE3F4")]
	public SgtSeedAttribute()
	{
	}
}
[Token(Token = "0x2000088")]
public abstract class SgtShadow : MonoBehaviour
{
	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtShadow> AllShadows;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CE74", Offset = "0xA0CE74")]
	public Light Light;

	[Token(Token = "0x60004F4")]
	public abstract Texture GetTexture();

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x11EE3FC", Offset = "0x11EE3FC", VA = "0x11EE3FC", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x11EE480", Offset = "0x11EE480", VA = "0x11EE480", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x11EDFEC", Offset = "0x11EDFEC", VA = "0x11EDFEC", Slot = "7")]
	public virtual bool CalculateShadow(ref Matrix4x4 matrix, ref float ratio)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x11EE0FC", Offset = "0x11EE0FC", VA = "0x11EE0FC")]
	protected SgtShadow()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00844", Offset = "0xA00844")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00844", Offset = "0xA00844")]
public class SgtShadowLayer : MonoBehaviour
{
	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CEAC", Offset = "0xA0CEAC")]
	public List<SgtShadow> Shadows;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CEE4", Offset = "0xA0CEE4")]
	public List<MeshRenderer> Renderers;

	[NonSerialized]
	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material Material;

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x11EE578", Offset = "0x11EE578", VA = "0x11EE578")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C338", Offset = "0xA1C338")]
	public void ApplyMaterial()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x11EE648", Offset = "0x11EE648", VA = "0x11EE648")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C370", Offset = "0xA1C370")]
	public void RemoveMaterial()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x11EE718", Offset = "0x11EE718", VA = "0x11EE718")]
	public void AddRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x11EE86C", Offset = "0x11EE86C", VA = "0x11EE86C")]
	public void RemoveRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x11EE978", Offset = "0x11EE978", VA = "0x11EE978", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x11EEAE8", Offset = "0x11EEAE8", VA = "0x11EEAE8", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x11EEBB4", Offset = "0x11EEBB4", VA = "0x11EEBB4", Slot = "6")]
	protected virtual void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x11EEC74", Offset = "0x11EEC74", VA = "0x11EEC74")]
	public SgtShadowLayer()
	{
	}
}
[Token(Token = "0x200008A")]
public abstract class SgtShape : MonoBehaviour
{
	[Token(Token = "0x6000502")]
	public abstract float GetDensity(Vector3 worldPoint);

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x11EEC7C", Offset = "0x11EEC7C", VA = "0x11EEC7C")]
	protected SgtShape()
	{
	}
}
[Token(Token = "0x200008B")]
public class SgtShapeGroup : MonoBehaviour
{
	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CF1C", Offset = "0xA0CF1C")]
	public List<SgtShape> Shapes;

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x11EEC84", Offset = "0x11EEC84", VA = "0x11EEC84")]
	public float GetDensity(Vector3 worldPosition)
	{
		return default(float);
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x11EEDA0", Offset = "0x11EEDA0", VA = "0x11EEDA0")]
	public SgtShapeGroup()
	{
	}
}
[Token(Token = "0x200008C")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00890", Offset = "0xA00890")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00890", Offset = "0xA00890")]
public class SgtSimpleBelt : SgtBelt
{
	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CF54", Offset = "0xA0CF54")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA0CF54", Offset = "0xA0CF54")]
	public int Seed;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CFA0", Offset = "0xA0CFA0")]
	public float Thickness;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float ThicknessBias;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CFD8", Offset = "0xA0CFD8")]
	public float InnerRadius;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D010", Offset = "0xA0D010")]
	public float InnerSpeed;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D048", Offset = "0xA0D048")]
	public float OuterRadius;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D080", Offset = "0xA0D080")]
	public float OuterSpeed;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D0B8", Offset = "0xA0D0B8")]
	public int AsteroidCount;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D0F0", Offset = "0xA0D0F0")]
	public float AsteroidSpin;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D128", Offset = "0xA0D128")]
	public float AsteroidRadiusMin;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D160", Offset = "0xA0D160")]
	public float AsteroidRadiusMax;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D198", Offset = "0xA0D198")]
	public float AsteroidRadiusBias;

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x11EEDA8", Offset = "0x11EEDA8", VA = "0x11EEDA8")]
	public static SgtSimpleBelt CreateSimpleBelt(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x11EEEC0", Offset = "0x11EEEC0", VA = "0x11EEEC0")]
	public static SgtSimpleBelt CreateSimpleBelt(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x11EF008", Offset = "0x11EF008", VA = "0x11EF008", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x11EF07C", Offset = "0x11EF07C", VA = "0x11EF07C", Slot = "16")]
	protected override void NextQuad(ref SgtBeltAsteroid asteroid, int asteroidIndex)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x11EF298", Offset = "0x11EF298", VA = "0x11EF298", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x11EF2F8", Offset = "0x11EF2F8", VA = "0x11EF2F8")]
	public SgtSimpleBelt()
	{
	}
}
[Serializable]
[Token(Token = "0x200008D")]
public class SgtSimplex
{
	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private byte[] perm;

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x11EF474", Offset = "0x11EF474", VA = "0x11EF474")]
	public SgtSimplex()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x11EF4D4", Offset = "0x11EF4D4", VA = "0x11EF4D4")]
	public SgtSimplex(int seed)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x11EF54C", Offset = "0x11EF54C", VA = "0x11EF54C")]
	public void SetSeed(int seed)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x11EF614", Offset = "0x11EF614", VA = "0x11EF614")]
	public float Generate(float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x11EFB80", Offset = "0x11EFB80", VA = "0x11EFB80")]
	private static int FastFloor(float x)
	{
		return default(int);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x11EFB94", Offset = "0x11EFB94", VA = "0x11EFB94")]
	private static int Mod(int x, int m)
	{
		return default(int);
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x11EFBF4", Offset = "0x11EFBF4", VA = "0x11EFBF4")]
	private static float grad(int hash, float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x11EFC18", Offset = "0x11EFC18", VA = "0x11EFC18")]
	private static float grad(int hash, float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x11EFBA8", Offset = "0x11EFBA8", VA = "0x11EFBA8")]
	private static float grad(int hash, float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x11EFC4C", Offset = "0x11EFC4C", VA = "0x11EFC4C")]
	private static float grad(int hash, float x, float y, float z, float t)
	{
		return default(float);
	}
}
[Token(Token = "0x200008E")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA008DC", Offset = "0xA008DC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA008DC", Offset = "0xA008DC")]
public class SgtSingularity : MonoBehaviour
{
	[Token(Token = "0x20003FA")]
	public enum EdgeFadeType
	{
		[Token(Token = "0x4001A1C")]
		None,
		[Token(Token = "0x4001A1D")]
		Center,
		[Token(Token = "0x4001A1E")]
		Fragment
	}

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtSingularity> AllSingularities;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D1E0", Offset = "0xA0D1E0")]
	public List<Mesh> Meshes;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D218", Offset = "0xA0D218")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D250", Offset = "0xA0D250")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D288", Offset = "0xA0D288")]
	public float PinchPower;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D2C0", Offset = "0xA0D2C0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0D2C0", Offset = "0xA0D2C0")]
	public float PinchOffset;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D314", Offset = "0xA0D314")]
	public EdgeFadeType EdgeFade;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D34C", Offset = "0xA0D34C")]
	public float EdgeFadePower;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D384", Offset = "0xA0D384")]
	public Color HoleColor;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D3BC", Offset = "0xA0D3BC")]
	public float HolePower;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D3F4", Offset = "0xA0D3F4")]
	public bool Tint;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D42C", Offset = "0xA0D42C")]
	public Color TintColor;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D464", Offset = "0xA0D464")]
	public float TintPower;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D49C", Offset = "0xA0D49C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0D49C", Offset = "0xA0D49C")]
	public List<SgtSingularityModel> Models;

	[NonSerialized]
	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material Material;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0D4FC", Offset = "0xA0D4FC")]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool updateModelsCalled;

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x11EFC98", Offset = "0x11EFC98", VA = "0x11EFC98")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C3A8", Offset = "0xA1C3A8")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x11F021C", Offset = "0x11F021C", VA = "0x11F021C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C3E0", Offset = "0xA1C3E0")]
	public void UpdateModels()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x11F0658", Offset = "0x11F0658", VA = "0x11F0658")]
	public static SgtSingularity CreateSingularity(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x11F0794", Offset = "0x11F0794", VA = "0x11F0794")]
	public static SgtSingularity CreateSingularity(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x11F08DC", Offset = "0x11F08DC", VA = "0x11F08DC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x11F0A68", Offset = "0x11F0A68", VA = "0x11F0A68", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x11F0A80", Offset = "0x11F0A80", VA = "0x11F0A80", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x11F0BAC", Offset = "0x11F0BAC", VA = "0x11F0BAC", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x11F0364", Offset = "0x11F0364", VA = "0x11F0364")]
	private SgtSingularityModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x11F0A24", Offset = "0x11F0A24", VA = "0x11F0A24")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x11F0DC0", Offset = "0x11F0DC0", VA = "0x11F0DC0")]
	public SgtSingularity()
	{
	}
}
[Token(Token = "0x200008F")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00928", Offset = "0xA00928")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00928", Offset = "0xA00928")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00928", Offset = "0xA00928")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00928", Offset = "0xA00928")]
public class SgtSingularityModel : MonoBehaviour
{
	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D534", Offset = "0xA0D534")]
	public SgtSingularity Singularity;

	[NonSerialized]
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x11F04A4", Offset = "0x11F04A4", VA = "0x11F04A4")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x11F0104", Offset = "0x11F0104", VA = "0x11F0104")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x11F0D24", Offset = "0x11F0D24", VA = "0x11F0D24")]
	public static SgtSingularityModel Create(SgtSingularity singularity)
	{
		return null;
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x11F05BC", Offset = "0x11F05BC", VA = "0x11F05BC")]
	public static void Pool(SgtSingularityModel model)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x11F0C80", Offset = "0x11F0C80", VA = "0x11F0C80")]
	public static void MarkForDestruction(SgtSingularityModel model)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x11F0EA4", Offset = "0x11F0EA4", VA = "0x11F0EA4", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x11F0F2C", Offset = "0x11F0F2C", VA = "0x11F0F2C")]
	public SgtSingularityModel()
	{
	}
}
[Token(Token = "0x2000090")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA009E8", Offset = "0xA009E8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA009E8", Offset = "0xA009E8")]
public class SgtSkysphere : MonoBehaviour
{
	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtSkysphere> AllSkyspheres;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D56C", Offset = "0xA0D56C")]
	public List<Mesh> Meshes;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D5A4", Offset = "0xA0D5A4")]
	public Color Color;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D5DC", Offset = "0xA0D5DC")]
	public float Brightness;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D614", Offset = "0xA0D614")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D64C", Offset = "0xA0D64C")]
	public int RenderQueueOffset;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D684", Offset = "0xA0D684")]
	public Texture MainTex;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D6BC", Offset = "0xA0D6BC")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0D6BC", Offset = "0xA0D6BC")]
	public bool FollowCameras;

	[NonSerialized]
	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material Material;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SgtSkysphereModel> Models;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0D71C", Offset = "0xA0D71C")]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool updateModelsCalled;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x11F0F34", Offset = "0x11F0F34", VA = "0x11F0F34")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C418", Offset = "0xA1C418")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x11F10B0", Offset = "0x11F10B0", VA = "0x11F10B0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C450", Offset = "0xA1C450")]
	public void UpdateModels()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x11F1604", Offset = "0x11F1604", VA = "0x11F1604")]
	public static SgtSkysphere CreateSkysphere(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x11F1740", Offset = "0x11F1740", VA = "0x11F1740")]
	public static SgtSkysphere CreateSkysphere(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x11F1888", Offset = "0x11F1888", VA = "0x11F1888", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x11F1AF4", Offset = "0x11F1AF4", VA = "0x11F1AF4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x11F1B0C", Offset = "0x11F1B0C", VA = "0x11F1B0C", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x11F1D14", Offset = "0x11F1D14", VA = "0x11F1D14", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x11F1E8C", Offset = "0x11F1E8C", VA = "0x11F1E8C")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x11F20D8", Offset = "0x11F20D8", VA = "0x11F20D8")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x11F11F8", Offset = "0x11F11F8", VA = "0x11F11F8")]
	private SgtSkysphereModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x11F1AB0", Offset = "0x11F1AB0", VA = "0x11F1AB0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x11F22F4", Offset = "0x11F22F4", VA = "0x11F22F4")]
	public SgtSkysphere()
	{
	}
}
[Token(Token = "0x2000091")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00A34", Offset = "0xA00A34")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00A34", Offset = "0xA00A34")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00A34", Offset = "0xA00A34")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00A34", Offset = "0xA00A34")]
public class SgtSkysphereModel : MonoBehaviour
{
	[Token(Token = "0x20003FB")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x11F2438", Offset = "0x11F2438", VA = "0x11F2438")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D754", Offset = "0xA0D754")]
	public SgtSkysphere Skysphere;

	[NonSerialized]
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x11F1338", Offset = "0x11F1338", VA = "0x11F1338")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x11F1450", Offset = "0x11F1450", VA = "0x11F1450")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x11F2048", Offset = "0x11F2048", VA = "0x11F2048")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x11F21BC", Offset = "0x11F21BC", VA = "0x11F21BC")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x11F1FBC", Offset = "0x11F1FBC", VA = "0x11F1FBC")]
	public void Revert()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x11F2258", Offset = "0x11F2258", VA = "0x11F2258")]
	public static SgtSkysphereModel Create(SgtSkysphere skysphere)
	{
		return null;
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x11F1568", Offset = "0x11F1568", VA = "0x11F1568")]
	public static void Pool(SgtSkysphereModel model)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x11F1DE8", Offset = "0x11F1DE8", VA = "0x11F1DE8")]
	public static void MarkForDestruction(SgtSkysphereModel model)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x11F23A8", Offset = "0x11F23A8", VA = "0x11F23A8", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x11F2430", Offset = "0x11F2430", VA = "0x11F2430")]
	public SgtSkysphereModel()
	{
	}
}
[Token(Token = "0x2000092")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00AF4", Offset = "0xA00AF4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00AF4", Offset = "0xA00AF4")]
public class SgtSnapToTerrain : MonoBehaviour
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D78C", Offset = "0xA0D78C")]
	public SgtTerrain Terrain;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D7C4", Offset = "0xA0D7C4")]
	public bool SnapPosition;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D7FC", Offset = "0xA0D7FC")]
	public float SnapOffset;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D834", Offset = "0xA0D834")]
	public float SnapMoveDampening;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D86C", Offset = "0xA0D86C")]
	public bool SnapRotation;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D8A4", Offset = "0xA0D8A4")]
	public float SnapRightDistance;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D8DC", Offset = "0xA0D8DC")]
	public float SnapForwardDistance;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D914", Offset = "0xA0D914")]
	public float SnapTurnDampening;

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x11F2440", Offset = "0x11F2440", VA = "0x11F2440")]
	public static void SnapTransformPosition(SgtTerrain terrain, Transform transform, float offset = 0f, float dampening = 0f)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x11F24F4", Offset = "0x11F24F4", VA = "0x11F24F4")]
	public static void SnapTransformRotation(SgtTerrain terrain, Transform transform, float rightDistance = 1f, float forwardDistance = 1f, float dampening = 0f)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x11F2ABC", Offset = "0x11F2ABC", VA = "0x11F2ABC")]
	public void UpdateSnap()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x11F2B30", Offset = "0x11F2B30", VA = "0x11F2B30", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x11F2B34", Offset = "0x11F2B34", VA = "0x11F2B34")]
	public SgtSnapToTerrain()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00B40", Offset = "0xA00B40")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00B40", Offset = "0xA00B40")]
public class SgtSpacetime : MonoBehaviour
{
	[Token(Token = "0x20003FC")]
	public enum DisplacementType
	{
		[Token(Token = "0x4001A21")]
		Pinch,
		[Token(Token = "0x4001A22")]
		Offset
	}

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtSpacetime> AllSpacetimes;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D94C", Offset = "0xA0D94C")]
	public Color Color;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D984", Offset = "0xA0D984")]
	public float Brightness;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D9BC", Offset = "0xA0D9BC")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D9F4", Offset = "0xA0D9F4")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DA2C", Offset = "0xA0DA2C")]
	public Texture2D MainTex;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DA64", Offset = "0xA0DA64")]
	public int Tile;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DA9C", Offset = "0xA0DA9C")]
	public Color AmbientColor;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DAD4", Offset = "0xA0DAD4")]
	public float AmbientBrightness;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DB0C", Offset = "0xA0DB0C")]
	public Color DisplacementColor;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DB44", Offset = "0xA0DB44")]
	public float DisplacementBrightness;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DB7C", Offset = "0xA0DB7C")]
	public Color HighlightColor;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DBB4", Offset = "0xA0DBB4")]
	public float HighlightBrightness;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DBEC", Offset = "0xA0DBEC")]
	public float HighlightPower;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DC24", Offset = "0xA0DC24")]
	public float HighlightScale;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DC5C", Offset = "0xA0DC5C")]
	public DisplacementType Displacement;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DC94", Offset = "0xA0DC94")]
	public bool Accumulate;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DCCC", Offset = "0xA0DCCC")]
	public float Power;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DD04", Offset = "0xA0DD04")]
	public float FadeScale;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DD3C", Offset = "0xA0DD3C")]
	public Vector3 Offset;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DD74", Offset = "0xA0DD74")]
	public bool UseAllWells;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DDAC", Offset = "0xA0DDAC")]
	public bool RequireSameLayer;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DDE4", Offset = "0xA0DDE4")]
	public bool RequireSameTag;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DE1C", Offset = "0xA0DE1C")]
	public string RequireNameContains;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DE54", Offset = "0xA0DE54")]
	public List<SgtSpacetimeWell> Wells;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DE8C", Offset = "0xA0DE8C")]
	public List<MeshRenderer> Renderers;

	[NonSerialized]
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material Material;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0DEC4", Offset = "0xA0DEC4")]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool updateWellsCalled;

	[NonSerialized]
	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector4[] gauPos;

	[NonSerialized]
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector4[] gauDat;

	[NonSerialized]
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector4[] ripPos;

	[NonSerialized]
	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector4[] ripDat;

	[NonSerialized]
	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector4[] twiPos;

	[NonSerialized]
	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector4[] twiDat;

	[NonSerialized]
	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Matrix4x4[] twiMat;

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x11F2B58", Offset = "0x11F2B58", VA = "0x11F2B58")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C488", Offset = "0xA1C488")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x11F30DC", Offset = "0x11F30DC", VA = "0x11F30DC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C4C0", Offset = "0xA1C4C0")]
	public void UpdateWells()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x11F2FB4", Offset = "0x11F2FB4", VA = "0x11F2FB4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C4F8", Offset = "0xA1C4F8")]
	public void ApplyMaterial()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x11F38FC", Offset = "0x11F38FC", VA = "0x11F38FC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C530", Offset = "0xA1C530")]
	public void RemoveMaterial()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x11F3A24", Offset = "0x11F3A24", VA = "0x11F3A24")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C568", Offset = "0xA1C568")]
	public SgtSpacetimeWell AddWell()
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x11F3BA8", Offset = "0x11F3BA8", VA = "0x11F3BA8")]
	public void AddWell(SgtSpacetimeWell well)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x11F3C70", Offset = "0x11F3C70", VA = "0x11F3C70")]
	public void AddRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x11F3DC4", Offset = "0x11F3DC4", VA = "0x11F3DC4")]
	public void RemoveRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x11F3ED0", Offset = "0x11F3ED0", VA = "0x11F3ED0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x11F3FB0", Offset = "0x11F3FB0", VA = "0x11F3FB0", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x11F4038", Offset = "0x11F4038", VA = "0x11F4038", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x11F403C", Offset = "0x11F403C", VA = "0x11F403C", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x11F33F4", Offset = "0x11F33F4", VA = "0x11F33F4")]
	private void WriteWells(ref int gaussianCount, ref int rippleCount, ref int twistCount)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x11F3F6C", Offset = "0x11F3F6C", VA = "0x11F3F6C")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x11F40C8", Offset = "0x11F40C8", VA = "0x11F40C8")]
	public SgtSpacetime()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00B8C", Offset = "0xA00B8C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00B8C", Offset = "0xA00B8C")]
public class SgtSpacetimeWell : MonoBehaviour
{
	[Token(Token = "0x20003FD")]
	public enum DistributionType
	{
		[Token(Token = "0x4001A24")]
		Gaussian,
		[Token(Token = "0x4001A25")]
		Ripple,
		[Token(Token = "0x4001A26")]
		Twist
	}

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtSpacetimeWell> AllWells;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DEFC", Offset = "0xA0DEFC")]
	public DistributionType Distribution;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DF34", Offset = "0xA0DF34")]
	public float Radius;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DF6C", Offset = "0xA0DF6C")]
	public float Frequency;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DFA4", Offset = "0xA0DFA4")]
	public float Strength;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0DFDC", Offset = "0xA0DFDC")]
	public float Offset;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E014", Offset = "0xA0E014")]
	public float OffsetSpeed;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E04C", Offset = "0xA0E04C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0E04C", Offset = "0xA0E04C")]
	public float HoleSize;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E0A4", Offset = "0xA0E0A4")]
	public float HolePower;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x11F3A88", Offset = "0x11F3A88", VA = "0x11F3A88")]
	public static SgtSpacetimeWell Create(SgtSpacetime spacetime)
	{
		return null;
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x11F42C8", Offset = "0x11F42C8", VA = "0x11F42C8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x11F434C", Offset = "0x11F434C", VA = "0x11F434C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x11F43D0", Offset = "0x11F43D0", VA = "0x11F43D0", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x11F440C", Offset = "0x11F440C", VA = "0x11F440C")]
	public SgtSpacetimeWell()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00BD8", Offset = "0xA00BD8")]
public class SgtSphere : SgtShape
{
	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E0DC", Offset = "0xA0E0DC")]
	public float Radius;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E114", Offset = "0xA0E114")]
	public SgtEase.Type Ease;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E14C", Offset = "0xA0E14C")]
	public float Power;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x11F44A0", Offset = "0x11F44A0", VA = "0x11F44A0", Slot = "4")]
	public override float GetDensity(Vector3 worldPoint)
	{
		return default(float);
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x11F45C8", Offset = "0x11F45C8", VA = "0x11F45C8")]
	public static SgtSphere CreateSphere(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x11F46E0", Offset = "0x11F46E0", VA = "0x11F46E0")]
	public static SgtSphere CreateSphere(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x11F4828", Offset = "0x11F4828", VA = "0x11F4828")]
	public SgtSphere()
	{
	}
}
[Token(Token = "0x2000096")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00C10", Offset = "0xA00C10")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00C10", Offset = "0xA00C10")]
public class SgtSphereShadow : SgtShadow
{
	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E184", Offset = "0xA0E184")]
	public int Width;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E1BC", Offset = "0xA0E1BC")]
	public TextureFormat Format;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E1F4", Offset = "0xA0E1F4")]
	public float PowerR;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E22C", Offset = "0xA0E22C")]
	public float PowerG;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E264", Offset = "0xA0E264")]
	public float PowerB;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E29C", Offset = "0xA0E29C")]
	public float Opacity;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E2D4", Offset = "0xA0E2D4")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0E2D4", Offset = "0xA0E2D4")]
	public float RadiusMin;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E334", Offset = "0xA0E334")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0E334", Offset = "0xA0E334")]
	public float RadiusMax;

	[NonSerialized]
	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0E394", Offset = "0xA0E394")]
	private bool startCalled;

	[Token(Token = "0x17000052")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x11F4844", Offset = "0x11F4844", VA = "0x11F4844")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x11F484C", Offset = "0x11F484C", VA = "0x11F484C", Slot = "4")]
	public override Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x11F48CC", Offset = "0x11F48CC", VA = "0x11F48CC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C5A0", Offset = "0xA1C5A0")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x11F4AF0", Offset = "0x11F4AF0", VA = "0x11F4AF0")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x11F4BEC", Offset = "0x11F4BEC", VA = "0x11F4BEC", Slot = "7")]
	public override bool CalculateShadow(ref Matrix4x4 matrix, ref float ratio)
	{
		return default(bool);
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x11F511C", Offset = "0x11F511C", VA = "0x11F511C")]
	private float GetRadius(float a, float b, float theta)
	{
		return default(float);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x11F51EC", Offset = "0x11F51EC", VA = "0x11F51EC", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x11F52AC", Offset = "0x11F52AC", VA = "0x11F52AC", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x11F52C4", Offset = "0x11F52C4", VA = "0x11F52C4", Slot = "9")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x11F5224", Offset = "0x11F5224", VA = "0x11F5224")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x11F5338", Offset = "0x11F5338", VA = "0x11F5338")]
	public SgtSphereShadow()
	{
	}
}
[Token(Token = "0x2000097")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00C5C", Offset = "0xA00C5C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00C5C", Offset = "0xA00C5C")]
public class SgtSpiralStarfield : SgtPointStarfield
{
	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E3CC", Offset = "0xA0E3CC")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA0E3CC", Offset = "0xA0E3CC")]
	public int Seed;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E418", Offset = "0xA0E418")]
	public float Radius;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E450", Offset = "0xA0E450")]
	public int ArmCount;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E488", Offset = "0xA0E488")]
	public float Twist;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E4C0", Offset = "0xA0E4C0")]
	public AnimationCurve Thickness;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E4F8", Offset = "0xA0E4F8")]
	public int StarCount;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E530", Offset = "0xA0E530")]
	public float StarRadiusMin;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E568", Offset = "0xA0E568")]
	public float StarRadiusMax;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E5A0", Offset = "0xA0E5A0")]
	public float StarRadiusBias;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E5D8", Offset = "0xA0E5D8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0E5D8", Offset = "0xA0E5D8")]
	public float StarPulseMax;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Keyframe[] defaultThicknessKeyframes;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float armStep;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float twistStep;

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x11F53C4", Offset = "0x11F53C4", VA = "0x11F53C4")]
	public static SgtSpiralStarfield CreateSpiralStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x11F5500", Offset = "0x11F5500", VA = "0x11F5500")]
	public static SgtSpiralStarfield CreateSpiralStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x11F5648", Offset = "0x11F5648", VA = "0x11F5648", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x11F572C", Offset = "0x11F572C", VA = "0x11F572C", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x11F5834", Offset = "0x11F5834", VA = "0x11F5834", Slot = "15")]
	protected override void NextQuad(ref SgtPointStar star, int starIndex)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x11F5B7C", Offset = "0x11F5B7C", VA = "0x11F5B7C", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x11F5BDC", Offset = "0x11F5BDC", VA = "0x11F5BDC")]
	public SgtSpiralStarfield()
	{
	}
}
[Token(Token = "0x2000098")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00CA8", Offset = "0xA00CA8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00CA8", Offset = "0xA00CA8")]
public class SgtStarfieldFadeFar : MonoBehaviour
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E62C", Offset = "0xA0E62C")]
	public SgtPointStarfield Starfield;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E664", Offset = "0xA0E664")]
	public int Width;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E69C", Offset = "0xA0E69C")]
	public TextureFormat Format;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E6D4", Offset = "0xA0E6D4")]
	public SgtEase.Type Ease;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E70C", Offset = "0xA0E70C")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0E744", Offset = "0xA0E744")]
	private bool startCalled;

	[Token(Token = "0x17000053")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x11F5D2C", Offset = "0x11F5D2C", VA = "0x11F5D2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x11F5D34", Offset = "0x11F5D34", VA = "0x11F5D34")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C5D8", Offset = "0xA1C5D8")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x11F6004", Offset = "0x11F6004", VA = "0x11F6004")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x11F5F60", Offset = "0x11F5F60", VA = "0x11F5F60")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C610", Offset = "0xA1C610")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x11F60F0", Offset = "0x11F60F0", VA = "0x11F60F0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x11F6184", Offset = "0x11F6184", VA = "0x11F6184", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x11F6234", Offset = "0x11F6234", VA = "0x11F6234", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x11F6100", Offset = "0x11F6100", VA = "0x11F6100")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x11F62A8", Offset = "0x11F62A8", VA = "0x11F62A8")]
	public SgtStarfieldFadeFar()
	{
	}
}
[Token(Token = "0x2000099")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00CF4", Offset = "0xA00CF4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00CF4", Offset = "0xA00CF4")]
public class SgtStarfieldFadeNear : MonoBehaviour
{
	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E77C", Offset = "0xA0E77C")]
	public SgtPointStarfield Starfield;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E7B4", Offset = "0xA0E7B4")]
	public int Width;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E7EC", Offset = "0xA0E7EC")]
	public TextureFormat Format;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E824", Offset = "0xA0E824")]
	public SgtEase.Type Ease;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E85C", Offset = "0xA0E85C")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0E894", Offset = "0xA0E894")]
	private bool startCalled;

	[Token(Token = "0x17000054")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x600057C")]
		[Address(RVA = "0x11F62C8", Offset = "0x11F62C8", VA = "0x11F62C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x11F62D0", Offset = "0x11F62D0", VA = "0x11F62D0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C648", Offset = "0xA1C648")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x11F65A0", Offset = "0x11F65A0", VA = "0x11F65A0")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x11F64FC", Offset = "0x11F64FC", VA = "0x11F64FC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C680", Offset = "0xA1C680")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x11F668C", Offset = "0x11F668C", VA = "0x11F668C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x11F6720", Offset = "0x11F6720", VA = "0x11F6720", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x11F67D0", Offset = "0x11F67D0", VA = "0x11F67D0", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x11F669C", Offset = "0x11F669C", VA = "0x11F669C")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x11F6844", Offset = "0x11F6844", VA = "0x11F6844")]
	public SgtStarfieldFadeNear()
	{
	}
}
[Serializable]
[Token(Token = "0x200009A")]
public class SgtStaticStar
{
	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SgtStaticStar Temp;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E8CC", Offset = "0xA0E8CC")]
	public int Variant;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E904", Offset = "0xA0E904")]
	public Color Color;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E93C", Offset = "0xA0E93C")]
	public float Radius;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E974", Offset = "0xA0E974")]
	public Vector3 Position;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x11F6864", Offset = "0x11F6864", VA = "0x11F6864")]
	public void CopyFrom(SgtStaticStar other)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x11F68A0", Offset = "0x11F68A0", VA = "0x11F68A0")]
	public SgtStaticStar()
	{
	}
}
[Token(Token = "0x200009B")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00D40", Offset = "0xA00D40")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00D40", Offset = "0xA00D40")]
public class SgtStaticStarfield : SgtQuads
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E9AC", Offset = "0xA0E9AC")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA0E9AC", Offset = "0xA0E9AC")]
	public int Seed;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0E9F8", Offset = "0xA0E9F8")]
	public float Radius;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EA30", Offset = "0xA0EA30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0EA30", Offset = "0xA0EA30")]
	public float Symmetry;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EA84", Offset = "0xA0EA84")]
	public int StarCount;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EABC", Offset = "0xA0EABC")]
	public float StarRadiusMin;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EAF4", Offset = "0xA0EAF4")]
	public float StarRadiusMax;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EB2C", Offset = "0xA0EB2C")]
	public float StarRadiusBias;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EB64", Offset = "0xA0EB64")]
	public Gradient StarColors;

	[Token(Token = "0x17000055")]
	protected override string ShaderName
	{
		[Token(Token = "0x6000588")]
		[Address(RVA = "0x11F6934", Offset = "0x11F6934", VA = "0x11F6934", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x11F697C", Offset = "0x11F697C", VA = "0x11F697C")]
	public static SgtStaticStarfield CreateStaticStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x11F6A94", Offset = "0x11F6A94", VA = "0x11F6A94")]
	public static SgtStaticStarfield CreateStaticStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x11F6BDC", Offset = "0x11F6BDC", VA = "0x11F6BDC", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x11F6D0C", Offset = "0x11F6D0C", VA = "0x11F6D0C", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x11F6E3C", Offset = "0x11F6E3C", VA = "0x11F6E3C", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x11F6EB0", Offset = "0x11F6EB0", VA = "0x11F6EB0", Slot = "14")]
	protected virtual void NextQuad(ref SgtStaticStar quad, int starIndex)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x11F7044", Offset = "0x11F7044", VA = "0x11F7044", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x11F70A4", Offset = "0x11F70A4", VA = "0x11F70A4", Slot = "13")]
	protected override void BuildMesh(Mesh mesh, int starIndex, int starCount)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x11F78E8", Offset = "0x11F78E8", VA = "0x11F78E8", Slot = "15")]
	protected virtual void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x11F7A08", Offset = "0x11F7A08", VA = "0x11F7A08")]
	protected void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x11F7AEC", Offset = "0x11F7AEC", VA = "0x11F7AEC")]
	public SgtStaticStarfield()
	{
	}
}
[Token(Token = "0x200009C")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00D8C", Offset = "0xA00D8C")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA00D8C", Offset = "0xA00D8C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00D8C", Offset = "0xA00D8C")]
public class SgtTerrain : MonoBehaviour
{
	[Token(Token = "0x20003FE")]
	public enum NormalsType
	{
		[Token(Token = "0x4001A28")]
		Normalized,
		[Token(Token = "0x4001A29")]
		Hierarchical
	}

	[Token(Token = "0x20003FF")]
	public delegate void CalculateHeightDelegate(SgtVector3D localPosition, ref double height);

	[Token(Token = "0x2000400")]
	public delegate void CalculateColorDelegate(SgtVector3D localPosition, double height, ref Color color);

	[Token(Token = "0x2000401")]
	public delegate void CalculateMaterialDelegate(SgtTerrainFace face, ref Material material);

	[Token(Token = "0x2000402")]
	public delegate void CalculateFaceDelegate(SgtTerrainFace face);

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtTerrain> AllTerrains;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EB9C", Offset = "0xA0EB9C")]
	public Material Material;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EBD4", Offset = "0xA0EBD4")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EC0C", Offset = "0xA0EC0C")]
	public List<Transform> Targets;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EC44", Offset = "0xA0EC44")]
	public double Radius;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EC7C", Offset = "0xA0EC7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0EC7C", Offset = "0xA0EC7C")]
	public int Subdivisions;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ECD0", Offset = "0xA0ECD0")]
	public NormalsType Normals;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ED08", Offset = "0xA0ED08")]
	public bool Tangents;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ED40", Offset = "0xA0ED40")]
	public bool CenterBounds;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ED78", Offset = "0xA0ED78")]
	public int MaxColliderDepth;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EDB0", Offset = "0xA0EDB0")]
	public List<double> Distances;

	[NonSerialized]
	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool DelayRebuild;

	[NonSerialized]
	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool DelayUpdateRenderers;

	[NonSerialized]
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool DelayUpdateColliders;

	[NonSerialized]
	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SgtVector3D> LocalPoints;

	[NonSerialized]
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<double> LocalDistances;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SgtTerrainFace NegativeX;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SgtTerrainFace NegativeY;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SgtTerrainFace NegativeZ;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SgtTerrainFace PositiveX;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SgtTerrainFace PositiveY;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SgtTerrainFace PositiveZ;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CalculateHeightDelegate OnCalculateHeight;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CalculateFaceDelegate OnSpawnFace;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CalculateFaceDelegate OnDespawnFace;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CalculateMaterialDelegate OnCalculateMaterial;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CalculateColorDelegate OnCalculateColor;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CalculateFaceDelegate OnPostProcessVertices;

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x11F7B6C", Offset = "0x11F7B6C", VA = "0x11F7B6C")]
	private void CalculateLocalValues()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x11F7D60", Offset = "0x11F7D60", VA = "0x11F7D60")]
	public double GetLocalHeight(SgtVector3D localPoint)
	{
		return default(double);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x11F8084", Offset = "0x11F8084", VA = "0x11F8084")]
	public float GetWorldHeight(Vector3 worldPoint)
	{
		return default(float);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x11F822C", Offset = "0x11F822C", VA = "0x11F822C")]
	public SgtVector3D GetLocalPoint(SgtVector3D localCube)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x11F816C", Offset = "0x11F816C", VA = "0x11F816C")]
	public Vector3 GetWorldPoint(Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x11F82A8", Offset = "0x11F82A8", VA = "0x11F82A8")]
	public SgtVector3D GetLocalNormal(SgtVector3D point, SgtVector3D right, SgtVector3D up)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x11F282C", Offset = "0x11F282C", VA = "0x11F282C")]
	public Vector3 GetWorldNormal(Vector3 point, Vector3 right, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x11F29EC", Offset = "0x11F29EC", VA = "0x11F29EC")]
	public Vector3 GetWorldNormal(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x11F83F0", Offset = "0x11F83F0", VA = "0x11F83F0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C6B8", Offset = "0xA1C6B8")]
	public void Rebuild()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x11F9034", Offset = "0x11F9034", VA = "0x11F9034")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C6F0", Offset = "0xA1C6F0")]
	public void UpdateStates()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x11F935C", Offset = "0x11F935C", VA = "0x11F935C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C728", Offset = "0xA1C728")]
	public void UpdateRenderers()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x11F9584", Offset = "0x11F9584", VA = "0x11F9584")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C760", Offset = "0xA1C760")]
	public void UpdateColliders()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x11F97AC", Offset = "0x11F97AC", VA = "0x11F97AC")]
	public void RunFaces(CalculateFaceDelegate method)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x11F9828", Offset = "0x11F9828", VA = "0x11F9828")]
	public void RunFaces(SgtTerrainFace face, CalculateFaceDelegate method)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x11F845C", Offset = "0x11F845C", VA = "0x11F845C")]
	public void ValidateFaces()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x11F9E9C", Offset = "0x11F9E9C", VA = "0x11F9E9C")]
	public static SgtTerrain CreateTerrain(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x11F9FD8", Offset = "0x11F9FD8", VA = "0x11F9FD8")]
	public static SgtTerrain CreateTerrain(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x11FA120", Offset = "0x11FA120", VA = "0x11FA120", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x11FA39C", Offset = "0x11FA39C", VA = "0x11FA39C", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x11FA3EC", Offset = "0x11FA3EC", VA = "0x11FA3EC", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x11FA670", Offset = "0x11FA670", VA = "0x11FA670", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x11F9CAC", Offset = "0x11F9CAC", VA = "0x11F9CAC")]
	private SgtTerrainFace CreateFace(CubemapFace side, SgtVector3D cornerBL, SgtVector3D cornerBR, SgtVector3D cornerTL, SgtVector3D cornerTR)
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x11FA808", Offset = "0x11FA808", VA = "0x11FA808")]
	public SgtTerrain()
	{
	}
}
[Token(Token = "0x200009D")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00DE8", Offset = "0xA00DE8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00DE8", Offset = "0xA00DE8")]
public class SgtTerrainCubeMaterials : SgtTerrainModifier
{
	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material NegativeX;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material NegativeY;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material NegativeZ;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material PositiveX;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material PositiveY;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material PositiveZ;

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x11FB284", Offset = "0x11FB284", VA = "0x11FB284", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x11FB33C", Offset = "0x11FB33C", VA = "0x11FB33C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x11FB3F4", Offset = "0x11FB3F4", VA = "0x11FB3F4")]
	private void CalculateMaterial(SgtTerrainFace face, ref Material material)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x11FB45C", Offset = "0x11FB45C", VA = "0x11FB45C")]
	public SgtTerrainCubeMaterials()
	{
	}
}
[Token(Token = "0x200009E")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00E34", Offset = "0xA00E34")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00E34", Offset = "0xA00E34")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00E34", Offset = "0xA00E34")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00E34", Offset = "0xA00E34")]
public class SgtTerrainFace : MonoBehaviour
{
	[Token(Token = "0x2000403")]
	public enum StateType
	{
		[Token(Token = "0x4001A2B")]
		Invalid,
		[Token(Token = "0x4001A2C")]
		Building,
		[Token(Token = "0x4001A2D")]
		Visible
	}

	[NonSerialized]
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StateType State;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SgtTerrain Terrain;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SgtTerrainFace Parent;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CubemapFace Side;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int Depth;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SgtBoundsD Bounds;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool Split;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SgtTerrainFace ChildBL;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SgtTerrainFace ChildBR;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SgtTerrainFace ChildTL;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SgtTerrainFace ChildTR;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SgtVector3D CornerBL;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SgtVector3D CornerBR;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SgtVector3D CornerTL;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SgtVector3D CornerTR;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SgtVector2D CoordBL;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SgtVector2D CoordBR;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SgtVector2D CoordTL;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public SgtVector2D CoordTR;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public SgtTerrainNeighbour NeighbourL;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public SgtTerrainNeighbour NeighbourR;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public SgtTerrainNeighbour NeighbourB;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public SgtTerrainNeighbour NeighbourT;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public SgtVector3D[] positions;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Vector3[] vertices;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Vector3[] normals1;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Vector3[] normals2;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Vector4[] tangents1;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Vector4[] tangents2;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Vector2[] coords1;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Vector2[] coords2;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Color[] colors;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private MeshFilter cachedMeshFilter;

	[NonSerialized]
	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private MeshRenderer cachedMeshRenderer;

	[NonSerialized]
	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private MeshCollider cachedMeshCollider;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material[] materials1;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Material[] materials2;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<int> buildingIndices;

	[Token(Token = "0x17000056")]
	private bool CanSplit
	{
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x11FD258", Offset = "0x11FD258", VA = "0x11FD258")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	private bool CanUnsplit
	{
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x11FD984", Offset = "0x11FD984", VA = "0x11FD984")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x11FB464", Offset = "0x11FB464", VA = "0x11FB464")]
	public SgtTerrainFace GetChild(int index)
	{
		return null;
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x11FB49C", Offset = "0x11FB49C", VA = "0x11FB49C")]
	public void SetNeighbour(int index, SgtTerrainFace face)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x11F9528", Offset = "0x11F9528", VA = "0x11F9528")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C798", Offset = "0xA1C798")]
	public void UpdateRenderers()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x11FB4D4", Offset = "0x11FB4D4", VA = "0x11FB4D4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C7D0", Offset = "0xA1C7D0")]
	public void UpdateRenderer()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x11F9750", Offset = "0x11F9750", VA = "0x11F9750")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C808", Offset = "0xA1C808")]
	public void UpdateColliders()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x11FB71C", Offset = "0x11FB71C", VA = "0x11FB71C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C840", Offset = "0xA1C840")]
	public void UpdateCollider()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x11FB934", Offset = "0x11FB934", VA = "0x11FB934")]
	public bool WriteVertex(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x11FB978", Offset = "0x11FB978", VA = "0x11FB978")]
	private void ValidateVertices()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x11FBAAC", Offset = "0x11FBAAC", VA = "0x11FBAAC")]
	public void BuildData()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x11FC648", Offset = "0x11FC648", VA = "0x11FC648")]
	private SgtVector3D GetPosition(SgtVector3D origin, SgtVector3D sideDelta, SgtVector3D edgeDelta)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x11FC748", Offset = "0x11FC748", VA = "0x11FC748")]
	private void CopyVertiesToChildren()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x11FC86C", Offset = "0x11FC86C", VA = "0x11FC86C")]
	private void CopyVertiesToChildren(SgtTerrainFace child, int verts, int minX, int maxX, int minY, int maxY, int offX, int offY)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x11FC9C0", Offset = "0x11FC9C0", VA = "0x11FC9C0")]
	public void BuildVertices()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x11FCCFC", Offset = "0x11FCCFC", VA = "0x11FCCFC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C878", Offset = "0xA1C878")]
	public void BuildIndices()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x11FA7A0", Offset = "0x11FA7A0", VA = "0x11FA7A0")]
	public static SgtTerrainFace Create(string name, int layer, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x11FCFD0", Offset = "0x11FCFD0", VA = "0x11FCFD0")]
	public static SgtTerrainFace Pool(SgtTerrainFace face)
	{
		return null;
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x11FA700", Offset = "0x11FA700", VA = "0x11FA700")]
	public static SgtTerrainFace MarkForDestruction(SgtTerrainFace face)
	{
		return null;
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x11F920C", Offset = "0x11F920C", VA = "0x11F920C")]
	public void UpdateStates()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x11FDC38", Offset = "0x11FDC38", VA = "0x11FDC38", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x11FDCE0", Offset = "0x11FDCE0", VA = "0x11FDCE0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C8B0", Offset = "0xA1C8B0")]
	public void Test()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x11FD118", Offset = "0x11FD118", VA = "0x11FD118")]
	private double GetDistance()
	{
		return default(double);
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x11F8FB8", Offset = "0x11F8FB8", VA = "0x11F8FB8")]
	public void UpdateInvalid()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x11FDF1C", Offset = "0x11FDF1C", VA = "0x11FDF1C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x11FD2C8", Offset = "0x11FD2C8", VA = "0x11FD2C8")]
	private void SplitNow()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x11FE0D0", Offset = "0x11FE0D0", VA = "0x11FE0D0")]
	private void LinkNeighbours(SgtTerrainFace childA, SgtTerrainFace childB, ref SgtTerrainNeighbour childNeighbourA, ref SgtTerrainNeighbour childNeighbourB, ref SgtTerrainNeighbour neighbour)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x11FE294", Offset = "0x11FE294", VA = "0x11FE294")]
	private void UpdateNeighbourData(SgtTerrainFace face, ref SgtTerrainNeighbour neighbour)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x11FD0CC", Offset = "0x11FD0CC", VA = "0x11FD0CC")]
	private void UpdateInvalidChildren()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x11FDAA4", Offset = "0x11FDAA4", VA = "0x11FDAA4")]
	private void UnsplitNow()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x11FE37C", Offset = "0x11FE37C", VA = "0x11FE37C")]
	private void UnlinkNeighbours(ref SgtTerrainNeighbour childNeighbour)
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x11FDF84", Offset = "0x11FDF84", VA = "0x11FDF84")]
	private SgtTerrainFace Create(string childName, SgtVector3D cornerBL, SgtVector3D cornerBR, SgtVector3D cornerTL, SgtVector3D cornerTR, SgtVector2D coordBL, SgtVector2D coordBR, SgtVector2D coordTL, SgtVector2D coordTR)
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x11FCB9C", Offset = "0x11FCB9C", VA = "0x11FCB9C")]
	private Mesh GetMesh()
	{
		return null;
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x11FE4B4", Offset = "0x11FE4B4", VA = "0x11FE4B4")]
	public SgtTerrainFace()
	{
	}
}
[Token(Token = "0x200009F")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00EF4", Offset = "0xA00EF4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00EF4", Offset = "0xA00EF4")]
public class SgtTerrainHeightmap : SgtTerrainModifier
{
	[Token(Token = "0x2000404")]
	public enum EncodingType
	{
		[Token(Token = "0x4001A2F")]
		Alpha,
		[Token(Token = "0x4001A30")]
		RedGreen
	}

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EDE8", Offset = "0xA0EDE8")]
	public Texture2D Heightmap;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EE20", Offset = "0xA0EE20")]
	public EncodingType Encoding;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EE58", Offset = "0xA0EE58")]
	public double DisplacementMin;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EE90", Offset = "0xA0EE90")]
	public double DisplacementMax;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x11FE568", Offset = "0x11FE568", VA = "0x11FE568", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x11FE620", Offset = "0x11FE620", VA = "0x11FE620", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x11FE6D8", Offset = "0x11FE6D8", VA = "0x11FE6D8")]
	private void CalculateHeight(SgtVector3D localPosition, ref double height)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x11FE830", Offset = "0x11FE830", VA = "0x11FE830")]
	private Color SampleBilinear(Vector2 uv)
	{
		return default(Color);
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x11FE84C", Offset = "0x11FE84C", VA = "0x11FE84C")]
	public SgtTerrainHeightmap()
	{
	}
}
[Token(Token = "0x20000A0")]
public class SgtTerrainLevel
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int MaxDelta;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[][] IndicesL;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[][] IndicesR;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[][] IndicesB;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[][] IndicesT;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] Indices;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int[][][] Offsets;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SgtTerrainLevel[] Levels;

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x11FE864", Offset = "0x11FE864", VA = "0x11FE864")]
	static SgtTerrainLevel()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x11FCFB4", Offset = "0x11FCFB4", VA = "0x11FCFB4")]
	public int GetIndex(int delta)
	{
		return default(int);
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x11FFCE0", Offset = "0x11FFCE0", VA = "0x11FFCE0")]
	public SgtTerrainLevel()
	{
	}
}
[Token(Token = "0x20000A1")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00F40", Offset = "0xA00F40")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA00F40", Offset = "0xA00F40")]
public class SgtTerrainMaterial : SgtTerrainModifier
{
	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EEC8", Offset = "0xA0EEC8")]
	public Material Material;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EF00", Offset = "0xA0EF00")]
	public bool AllSides;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EF38", Offset = "0xA0EF38")]
	public CubemapFace RequiredSide;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EF70", Offset = "0xA0EF70")]
	public int LevelMin;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EFA8", Offset = "0xA0EFA8")]
	public int LevelMax;

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xCD9C18", Offset = "0xCD9C18", VA = "0xCD9C18", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xCD9D84", Offset = "0xCD9D84", VA = "0xCD9D84", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xCD9E44", Offset = "0xCD9E44", VA = "0xCD9E44")]
	private void CalculateMaterial(SgtTerrainFace face, ref Material material)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xCD9E94", Offset = "0xCD9E94", VA = "0xCD9E94")]
	public SgtTerrainMaterial()
	{
	}
}
[Token(Token = "0x20000A2")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA00F8C", Offset = "0xA00F8C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA00F8C", Offset = "0xA00F8C")]
public abstract class SgtTerrainModifier : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected SgtTerrain terrain;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xCD9CD8", Offset = "0xCD9CD8", VA = "0xCD9CD8")]
	public void Rebuild()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xCD9EB4", Offset = "0xCD9EB4", VA = "0xCD9EB4")]
	public void UpdateRenderers()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xCD9F60", Offset = "0xCD9F60", VA = "0xCD9F60")]
	public void UpdateColliders()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xCD9EAC", Offset = "0xCD9EAC", VA = "0xCD9EAC")]
	protected SgtTerrainModifier()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A3")]
public struct SgtTerrainNeighbour
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int A;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int B;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int C;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int D;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int I;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int O;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Z;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SgtTerrainFace Face;

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xAD8320", Offset = "0xAD8320", VA = "0xAD8320")]
	public void Set(SgtTerrainFace newFace, int newI, int newA, int newB, int newO, int newC, int newD, int newZ)
	{
	}
}
[Token(Token = "0x20000A4")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01000", Offset = "0xA01000")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01000", Offset = "0xA01000")]
public class SgtTerrainObject : MonoBehaviour
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnSpawn;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnDespawn;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0EFE0", Offset = "0xA0EFE0")]
	public bool Pool;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F018", Offset = "0xA0F018")]
	public float ScaleMin;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F050", Offset = "0xA0F050")]
	public float ScaleMax;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F088", Offset = "0xA0F088")]
	public float AlignToNormal;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F0C0", Offset = "0xA0F0C0")]
	public SgtTerrainObject Prefab;

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xCDA028", Offset = "0xCDA028", VA = "0xCDA028")]
	public void Spawn(SgtTerrain terrain, SgtTerrainFace face, SgtVector3D localPoint)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xCDA528", Offset = "0xCDA528", VA = "0xCDA528")]
	public void Despawn()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xCDA5E0", Offset = "0xCDA5E0", VA = "0xCDA5E0")]
	public SgtTerrainObject()
	{
	}
}
[Token(Token = "0x20000A5")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA0104C", Offset = "0xA0104C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0104C", Offset = "0xA0104C")]
public class SgtTerrainPlane : MonoBehaviour
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F0F8", Offset = "0xA0F0F8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0F0F8", Offset = "0xA0F0F8")]
	public int Detail;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F14C", Offset = "0xA0F14C")]
	public float Size;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Mesh mesh;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshCollider meshCollider;

	[NonSerialized]
	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] positions;

	[NonSerialized]
	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] indices;

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xCDA5F4", Offset = "0xCDA5F4", VA = "0xCDA5F4", Slot = "4")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xCDAFF8", Offset = "0xCDAFF8", VA = "0xCDAFF8", Slot = "5")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xCDA888", Offset = "0xCDA888", VA = "0xCDA888")]
	private void Build(SgtTerrain terrain, Vector3 bestPoint)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xCDAEA4", Offset = "0xCDAEA4", VA = "0xCDAEA4")]
	private void Pool()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xCDAFFC", Offset = "0xCDAFFC", VA = "0xCDAFFC")]
	public SgtTerrainPlane()
	{
	}
}
[Token(Token = "0x20000A6")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01098", Offset = "0xA01098")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01098", Offset = "0xA01098")]
public class SgtTerrainRidgedSimplex : SgtTerrainModifier
{
	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F1A4", Offset = "0xA0F1A4")]
	public double Frequency;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F1DC", Offset = "0xA0F1DC")]
	public double Amplitude;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F214", Offset = "0xA0F214")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0F214", Offset = "0xA0F214")]
	public int Octaves;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F268", Offset = "0xA0F268")]
	public bool Invert;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F2A0", Offset = "0xA0F2A0")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA0F2A0", Offset = "0xA0F2A0")]
	public int Seed;

	[NonSerialized]
	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SgtSimplex[] generators;

	[NonSerialized]
	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private double scale;

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xCDB010", Offset = "0xCDB010", VA = "0xCDB010")]
	public void UpdateNoise()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xCDB198", Offset = "0xCDB198", VA = "0xCDB198", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xCDB25C", Offset = "0xCDB25C", VA = "0xCDB25C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xCDB31C", Offset = "0xCDB31C", VA = "0xCDB31C")]
	private void CalculateHeight(SgtVector3D localPosition, ref double height)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xCDB544", Offset = "0xCDB544", VA = "0xCDB544")]
	public SgtTerrainRidgedSimplex()
	{
	}
}
[Token(Token = "0x20000A7")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA010E4", Offset = "0xA010E4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA010E4", Offset = "0xA010E4")]
public class SgtTerrainSimplex : SgtTerrainModifier
{
	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F2EC", Offset = "0xA0F2EC")]
	public double Frequency;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F324", Offset = "0xA0F324")]
	public double Amplitude;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F35C", Offset = "0xA0F35C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0F35C", Offset = "0xA0F35C")]
	public int Octaves;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F3B0", Offset = "0xA0F3B0")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA0F3B0", Offset = "0xA0F3B0")]
	public int Seed;

	[NonSerialized]
	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SgtSimplex[] generators;

	[NonSerialized]
	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private double scale;

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xCDB568", Offset = "0xCDB568", VA = "0xCDB568")]
	public void UpdateNoise()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xCDB6F0", Offset = "0xCDB6F0", VA = "0xCDB6F0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xCDB7B4", Offset = "0xCDB7B4", VA = "0xCDB7B4", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xCDB874", Offset = "0xCDB874", VA = "0xCDB874")]
	private void CalculateHeight(SgtVector3D localPosition, ref double height)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xCDB9B4", Offset = "0xCDB9B4", VA = "0xCDB9B4")]
	public SgtTerrainSimplex()
	{
	}
}
[Token(Token = "0x20000A8")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01130", Offset = "0xA01130")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01130", Offset = "0xA01130")]
public class SgtTerrainSpawner : SgtTerrainModifier
{
	[Serializable]
	[Token(Token = "0x2000405")]
	public class Surface
	{
		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SgtTerrainFace Face;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SgtRectL Rect;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<SgtTerrainObject> Clones;

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xCDBD48", Offset = "0xCDBD48", VA = "0xCDBD48")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xCDC0C4", Offset = "0xCDC0C4", VA = "0xCDC0C4")]
		public Surface()
		{
		}
	}

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F3FC", Offset = "0xA0F3FC")]
	public int Depth;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F434", Offset = "0xA0F434")]
	[AttributeAttribute(Name = "SgtSeedAttribute", RVA = "0xA0F434", Offset = "0xA0F434")]
	public int Seed;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F480", Offset = "0xA0F480")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0F480", Offset = "0xA0F480")]
	public float SpawnProbability;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F4D4", Offset = "0xA0F4D4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0F4D4", Offset = "0xA0F4D4")]
	public int SpawnCountMax;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F52C", Offset = "0xA0F52C")]
	public float HeightMin;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F564", Offset = "0xA0F564")]
	public float HeightMax;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F59C", Offset = "0xA0F59C")]
	public List<SgtTerrainObject> Prefabs;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<Surface> surfaces;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<SgtTerrainObject> terrainObjects;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SgtTerrainObject targetPrefab;

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xCDB9D8", Offset = "0xCDB9D8", VA = "0xCDB9D8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xCDBB74", Offset = "0xCDBB74", VA = "0xCDBB74", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xCDBC8C", Offset = "0xCDBC8C", VA = "0xCDBC8C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA1C8E8", Offset = "0xA1C8E8")]
	public void Clear()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xCDBE38", Offset = "0xCDBE38", VA = "0xCDBE38")]
	private void SpawnFace(SgtTerrainFace face)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xCDC2F4", Offset = "0xCDC2F4", VA = "0xCDC2F4")]
	private void DespawnFace(SgtTerrainFace face)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xCDBFE4", Offset = "0xCDBFE4", VA = "0xCDBFE4")]
	private Surface FindSurface(SgtTerrainFace face)
	{
		return null;
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xCDC0CC", Offset = "0xCDC0CC", VA = "0xCDC0CC")]
	private void AddObject(Surface surface, SgtTerrainFace face)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xCDC608", Offset = "0xCDC608", VA = "0xCDC608")]
	private static SgtTerrainObject Despawn(SgtTerrainObject prefab)
	{
		return null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xCDC420", Offset = "0xCDC420", VA = "0xCDC420")]
	private static SgtTerrainObject Spawn(SgtTerrainObject prefab)
	{
		return null;
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xCDC67C", Offset = "0xCDC67C", VA = "0xCDC67C")]
	private static bool ObjectMatch(SgtTerrainObject instance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xCDC744", Offset = "0xCDC744", VA = "0xCDC744")]
	public SgtTerrainSpawner()
	{
	}
}
[Token(Token = "0x20000A9")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA0117C", Offset = "0xA0117C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0117C", Offset = "0xA0117C")]
public class SgtThruster : MonoBehaviour
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F5F4", Offset = "0xA0F5F4")]
	public float Throttle;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F62C", Offset = "0xA0F62C")]
	public Rigidbody Rigidbody;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F664", Offset = "0xA0F664")]
	public SgtForceType ForceType;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F69C", Offset = "0xA0F69C")]
	public ForceMode ForceMode;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F6D4", Offset = "0xA0F6D4")]
	public float ForceMagnitude;

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xCDC758", Offset = "0xCDC758", VA = "0xCDC758")]
	public static SgtThruster CreateThruster(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xCDC870", Offset = "0xCDC870", VA = "0xCDC870")]
	public static SgtThruster CreateThruster(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xCDC9B8", Offset = "0xCDC9B8", VA = "0xCDC9B8", Slot = "4")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xCDCB80", Offset = "0xCDCB80", VA = "0xCDCB80")]
	public SgtThruster()
	{
	}
}
[Token(Token = "0x20000AA")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA011C8", Offset = "0xA011C8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA011C8", Offset = "0xA011C8")]
public class SgtThrusterRoll : MonoBehaviour
{
	[Token(Token = "0x2000406")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion LocalRotation;

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xCDD250", Offset = "0xCDD250", VA = "0xCDD250")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F70C", Offset = "0xA0F70C")]
	public Vector3 Rotation;

	[NonSerialized]
	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xCDCB9C", Offset = "0xCDCB9C", VA = "0xCDCB9C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xCDCCC0", Offset = "0xCDCCC0", VA = "0xCDCCC0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xCDCDE4", Offset = "0xCDCDE4", VA = "0xCDCDE4")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xCDD14C", Offset = "0xCDD14C", VA = "0xCDD14C")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xCDD0BC", Offset = "0xCDD0BC", VA = "0xCDD0BC")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xCDD150", Offset = "0xCDD150", VA = "0xCDD150")]
	private void Restore(Camera camera)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xCDD030", Offset = "0xCDD030", VA = "0xCDD030")]
	public void Revert()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xCDD1EC", Offset = "0xCDD1EC", VA = "0xCDD1EC")]
	public SgtThrusterRoll()
	{
	}
}
[Token(Token = "0x20000AB")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01214", Offset = "0xA01214")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01214", Offset = "0xA01214")]
public class SgtThrusterScale : MonoBehaviour
{
	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F744", Offset = "0xA0F744")]
	public SgtThruster Thruster;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F77C", Offset = "0xA0F77C")]
	public float Dampening;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F7B4", Offset = "0xA0F7B4")]
	public Vector3 BaseScale;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F7EC", Offset = "0xA0F7EC")]
	public Vector3 ThrottleScale;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F824", Offset = "0xA0F824")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0F824", Offset = "0xA0F824")]
	public float Flicker;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F878", Offset = "0xA0F878")]
	public float FlickerOffset;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0F8B0", Offset = "0xA0F8B0")]
	public float FlickerSpeed;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float throttle;

	[NonSerialized]
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] points;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xCDD258", Offset = "0xCDD258", VA = "0xCDD258", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xCDD2E8", Offset = "0xCDD2E8", VA = "0xCDD2E8", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xCDD62C", Offset = "0xCDD62C", VA = "0xCDD62C")]
	public SgtThrusterScale()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AC")]
public struct SgtVector2D
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public double x;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public double y;

	[Token(Token = "0x17000058")]
	public double sqrMagnitude
	{
		[Token(Token = "0x6000612")]
		[Address(RVA = "0xAD8354", Offset = "0xAD8354", VA = "0xAD8354")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000059")]
	public double magnitude
	{
		[Token(Token = "0x6000613")]
		[Address(RVA = "0xAD8368", Offset = "0xAD8368", VA = "0xAD8368")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700005A")]
	public SgtVector2D normalized
	{
		[Token(Token = "0x6000614")]
		[Address(RVA = "0xAD8370", Offset = "0xAD8370", VA = "0xAD8370")]
		get
		{
			return default(SgtVector2D);
		}
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xAD833C", Offset = "0xAD833C", VA = "0xAD833C")]
	public SgtVector2D(double newX, double newY)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xAD8344", Offset = "0xAD8344", VA = "0xAD8344")]
	public SgtVector2D(Vector2 v)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xCDD83C", Offset = "0xCDD83C", VA = "0xCDD83C")]
	public static SgtVector2D operator -(SgtVector2D a, SgtVector2D b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xCDD848", Offset = "0xCDD848", VA = "0xCDD848")]
	public static SgtVector2D operator +(SgtVector2D a, SgtVector2D b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xCDD854", Offset = "0xCDD854", VA = "0xCDD854")]
	public static SgtVector2D operator /(SgtVector2D a, long b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xCDD830", Offset = "0xCDD830", VA = "0xCDD830")]
	public static SgtVector2D operator /(SgtVector2D a, double b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xCDD864", Offset = "0xCDD864", VA = "0xCDD864")]
	public static SgtVector2D operator *(SgtVector2D a, long b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xCDD874", Offset = "0xCDD874", VA = "0xCDD874")]
	public static SgtVector2D operator *(SgtVector2D a, double b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xCDD880", Offset = "0xCDD880", VA = "0xCDD880")]
	public static SgtVector2D operator *(long a, SgtVector2D b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xCDD890", Offset = "0xCDD890", VA = "0xCDD890")]
	public static explicit operator Vector2(SgtVector2D a)
	{
		return default(Vector2);
	}
}
[Serializable]
[Token(Token = "0x20000AD")]
public struct SgtVector3D
{
	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public double x;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public double y;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public double z;

	[Token(Token = "0x1700005B")]
	public double sqrMagnitude
	{
		[Token(Token = "0x600061F")]
		[Address(RVA = "0xAD839C", Offset = "0xAD839C", VA = "0xAD839C")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700005C")]
	public double magnitude
	{
		[Token(Token = "0x6000620")]
		[Address(RVA = "0xAD83BC", Offset = "0xAD83BC", VA = "0xAD83BC")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700005D")]
	public SgtVector3D normalized
	{
		[Token(Token = "0x6000621")]
		[Address(RVA = "0xAD83C4", Offset = "0xAD83C4", VA = "0xAD83C4")]
		get
		{
			return default(SgtVector3D);
		}
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xAD8378", Offset = "0xAD8378", VA = "0xAD8378")]
	public SgtVector3D(double newX, double newY, double newZ)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xAD8384", Offset = "0xAD8384", VA = "0xAD8384")]
	public SgtVector3D(Vector3 v)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xCDD8F0", Offset = "0xCDD8F0", VA = "0xCDD8F0")]
	public static double Dot(SgtVector3D a, SgtVector3D b)
	{
		return default(double);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xCDD908", Offset = "0xCDD908", VA = "0xCDD908")]
	public static SgtVector3D Cross(SgtVector3D a, SgtVector3D b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xCDD930", Offset = "0xCDD930", VA = "0xCDD930")]
	public static bool Overlap(SgtVector3D a, SgtVector3D b, SgtVector3D c, SgtVector3D d, double eps = 0.001)
	{
		return default(bool);
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xCDDA94", Offset = "0xCDDA94", VA = "0xCDDA94")]
	public static bool Overlap(SgtVector3D a, SgtVector3D b, SgtVector3D p, float eps = 0.001f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xCDDB5C", Offset = "0xCDDB5C", VA = "0xCDDB5C")]
	public static double SquareDistance(SgtVector3D a, SgtVector3D b)
	{
		return default(double);
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xCDDB80", Offset = "0xCDDB80", VA = "0xCDDB80")]
	public static SgtVector3D operator -(SgtVector3D a)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xCDC400", Offset = "0xCDC400", VA = "0xCDC400")]
	public static SgtVector3D operator -(SgtVector3D a, SgtVector3D b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xCDC410", Offset = "0xCDC410", VA = "0xCDC410")]
	public static SgtVector3D operator +(SgtVector3D a, SgtVector3D b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xCDDB90", Offset = "0xCDDB90", VA = "0xCDDB90")]
	public static SgtVector3D operator /(SgtVector3D a, long b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xCDB524", Offset = "0xCDB524", VA = "0xCDB524")]
	public static SgtVector3D operator /(SgtVector3D a, double b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xCDDBA4", Offset = "0xCDDBA4", VA = "0xCDDBA4")]
	public static SgtVector3D operator *(SgtVector3D a, long b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xCDB534", Offset = "0xCDB534", VA = "0xCDB534")]
	public static SgtVector3D operator *(SgtVector3D a, double b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xCDDBB8", Offset = "0xCDDBB8", VA = "0xCDDBB8")]
	public static SgtVector3D operator *(long a, SgtVector3D b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xCDA4D0", Offset = "0xCDA4D0", VA = "0xCDA4D0")]
	public static explicit operator Vector3(SgtVector3D a)
	{
		return default(Vector3);
	}
}
[Serializable]
[Token(Token = "0x20000AE")]
public struct SgtVector3L
{
	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public long x;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public long y;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long z;

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xAD83CC", Offset = "0xAD83CC", VA = "0xAD83CC")]
	public SgtVector3L(long newX, long newY, long newZ)
	{
	}
}
[Token(Token = "0x20000AF")]
public class SU_Asteroid : MonoBehaviour
{
	[Token(Token = "0x2000407")]
	public enum PolyCount
	{
		[Token(Token = "0x4001A36")]
		HIGH,
		[Token(Token = "0x4001A37")]
		MEDIUM,
		[Token(Token = "0x4001A38")]
		LOW
	}

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PolyCount polyCount;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PolyCount polyCountCollider;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform meshLowPoly;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform meshMediumPoly;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform meshHighPoly;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float rotationSpeed;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 rotationalAxis;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float driftSpeed;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 driftAxis;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _cacheTransform;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xD2648C", Offset = "0xD2648C", VA = "0xD2648C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xD264C8", Offset = "0xD264C8", VA = "0xD264C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xD264C0", Offset = "0xD264C0", VA = "0xD264C0")]
	public void SetPolyCount(PolyCount _newPolyCount)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xD26638", Offset = "0xD26638", VA = "0xD26638")]
	public void SetPolyCount(PolyCount _newPolyCount, bool _collider)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xD26840", Offset = "0xD26840", VA = "0xD26840")]
	public SU_Asteroid()
	{
	}
}
[Token(Token = "0x20000B0")]
public class SU_AsteroidField : MonoBehaviour
{
	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SU_Asteroid.PolyCount polyCount;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SU_Asteroid.PolyCount polyCountCollider;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] prefabAsteroids;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] materialVeryCommon;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] materialCommon;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] materialRare;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material[] materialVeryRare;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float range;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int maxAsteroids;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool respawnDestroyedAsteroids;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool respawnIfOutOfRange;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float distanceSpawn;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minAsteroidScale;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxAsteroidScale;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float scaleMultiplier;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isRigidbody;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float minAsteroidRotationSpeed;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxAsteroidRotationSpeed;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float rotationSpeedMultiplier;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float minAsteroidDriftSpeed;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float maxAsteroidDriftSpeed;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float driftSpeedMultiplier;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float mass;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float minAsteroidAngularVelocity;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float maxAsteroidAngularVelocity;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float angularVelocityMultiplier;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float minAsteroidVelocity;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float maxAsteroidVelocity;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float velocityMultiplier;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool fadeAsteroids;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float distanceFade;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float _distanceToSpawn;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _distanceToFade;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform _cacheTransform;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Transform> _asteroids;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Material> _asteroidsMaterials;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<bool> _asteroidsFading;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Hashtable _materialsTransparent;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private SortedList<int, string> _materialList;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xD268D0", Offset = "0xD268D0", VA = "0xD268D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xD275D4", Offset = "0xD275D4", VA = "0xD275D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xD27694", Offset = "0xD27694", VA = "0xD27694")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xD276E4", Offset = "0xD276E4", VA = "0xD276E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xD26CC0", Offset = "0xD26CC0", VA = "0xD26CC0")]
	private void SpawnAsteroids(bool atSpawnDistance)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xD26AD4", Offset = "0xD26AD4", VA = "0xD26AD4")]
	private void CreateTransparentMaterial(Material[] _sourceMaterials, Hashtable _ht)
	{
	}

	[Token(Token = "0x600063C")]
	private static T WeightedRandom<T>(SortedList<int, T> _list)
	{
		return (T)null;
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xD27CBC", Offset = "0xD27CBC", VA = "0xD27CBC")]
	public SU_AsteroidField()
	{
	}
}
[Token(Token = "0x20000B1")]
public class SU_Planet : MonoBehaviour
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 planetRotation;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _cacheTransform;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xD27E24", Offset = "0xD27E24", VA = "0xD27E24")]
	private void Start()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xD27E4C", Offset = "0xD27E4C", VA = "0xD27E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xD27F48", Offset = "0xD27F48", VA = "0xD27F48")]
	public SU_Planet()
	{
	}
}
[Token(Token = "0x20000B2")]
public class SpriteFlip : MonoBehaviour
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0F8F8", Offset = "0xA0F8F8")]
	public bool flippedX;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer m_Sprite;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_Initialized;

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xCEA8A8", Offset = "0xCEA8A8", VA = "0xCEA8A8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xCEA980", Offset = "0xCEA980", VA = "0xCEA980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xCEA984", Offset = "0xCEA984", VA = "0xCEA984")]
	private void Update()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xCEA9E0", Offset = "0xCEA9E0", VA = "0xCEA9E0")]
	public void flip(bool flipX)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xCEAB3C", Offset = "0xCEAB3C", VA = "0xCEAB3C")]
	public SpriteFlip()
	{
	}
}
[Token(Token = "0x20000B3")]
public class CameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Transform _XForm_Camera;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Transform _XForm_Parent;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3 _LocalRotation;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float _CameraDistance;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MouseSensitivity;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ScrollSensitvity;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float OrbitDampening;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ScrollDampening;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool CameraDisabled;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xFFD7DC", Offset = "0xFFD7DC", VA = "0xFFD7DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xFFD824", Offset = "0xFFD824", VA = "0xFFD824")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xFFDB50", Offset = "0xFFDB50", VA = "0xFFDB50")]
	public CameraOrbit()
	{
	}
}
[Token(Token = "0x20000B4")]
public class Bluemorpho : MonoBehaviour
{
	[Token(Token = "0x2000408")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04060", Offset = "0xA04060")]
	private sealed class <idle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bluemorpho <>4__this;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x119D430", Offset = "0x119D430", VA = "0x119D430", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x119D498", Offset = "0x119D498", VA = "0x119D498", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x119D130", Offset = "0x119D130", VA = "0x119D130")]
		[DebuggerHidden]
		public <idle>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x119D2E8", Offset = "0x119D2E8", VA = "0x119D2E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x119D2EC", Offset = "0x119D2EC", VA = "0x119D2EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x119D438", Offset = "0x119D438", VA = "0x119D438", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04070", Offset = "0xA04070")]
	private sealed class <fly>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bluemorpho <>4__this;

		[Token(Token = "0x170001CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x119D278", Offset = "0x119D278", VA = "0x119D278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x119D2E0", Offset = "0x119D2E0", VA = "0x119D2E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x119D15C", Offset = "0x119D15C", VA = "0x119D15C")]
		[DebuggerHidden]
		public <fly>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x119D190", Offset = "0x119D190", VA = "0x119D190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x119D194", Offset = "0x119D194", VA = "0x119D194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x119D280", Offset = "0x119D280", VA = "0x119D280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator bluemorpho;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator coroutine;

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x119CC2C", Offset = "0x119CC2C", VA = "0x119CC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x119CC84", Offset = "0x119CC84", VA = "0x119CC84")]
	private void Update()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x119D050", Offset = "0x119D050", VA = "0x119D050")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1C920", Offset = "0xA1C920")]
	private IEnumerator idle()
	{
		return null;
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x119D0C0", Offset = "0x119D0C0", VA = "0x119D0C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1C984", Offset = "0xA1C984")]
	private IEnumerator fly()
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x119D188", Offset = "0x119D188", VA = "0x119D188")]
	public Bluemorpho()
	{
	}
}
[Token(Token = "0x20000B5")]
public class CameraLookAt : MonoBehaviour
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x119F0F4", Offset = "0x119F0F4", VA = "0x119F0F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x119F0F8", Offset = "0x119F0F8", VA = "0x119F0F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x119F12C", Offset = "0x119F12C", VA = "0x119F12C")]
	public CameraLookAt()
	{
	}
}
[Token(Token = "0x20000B6")]
public class CUI_CameraRotationOnButtonHeld : MonoBehaviour
{
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Sensitivity;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldMousePos;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool move;

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x119E3A8", Offset = "0x119E3A8", VA = "0x119E3A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x119E3D4", Offset = "0x119E3D4", VA = "0x119E3D4")]
	public CUI_CameraRotationOnButtonHeld()
	{
	}
}
[Token(Token = "0x20000B7")]
public class CUI_MoveAlong : MonoBehaviour
{
	[Token(Token = "0x6000653")]
	[Address(RVA = "0x119E3EC", Offset = "0x119E3EC", VA = "0x119E3EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x119E3F0", Offset = "0x119E3F0", VA = "0x119E3F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x119E644", Offset = "0x119E644", VA = "0x119E644")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x20000B8")]
public class CUI_MoveHeartbeat : MonoBehaviour
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x119E64C", Offset = "0x119E64C", VA = "0x119E64C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x119E704", Offset = "0x119E704", VA = "0x119E704")]
	private void Update()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x119E850", Offset = "0x119E850", VA = "0x119E850")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x20000B9")]
public class CUI_ShowParentCoordinates : MonoBehaviour
{
	[Token(Token = "0x6000659")]
	[Address(RVA = "0x119E860", Offset = "0x119E860", VA = "0x119E860")]
	private void Start()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x119E92C", Offset = "0x119E92C", VA = "0x119E92C")]
	private void Update()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x119E930", Offset = "0x119E930", VA = "0x119E930")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x20000BA")]
public class CUI_rotation_anim : MonoBehaviour
{
	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x119E938", Offset = "0x119E938", VA = "0x119E938")]
	private void Start()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x119E93C", Offset = "0x119E93C", VA = "0x119E93C")]
	private void Update()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x119EB24", Offset = "0x119EB24", VA = "0x119EB24")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x20000BB")]
public class CUI_touchpad : MonoBehaviour
{
	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x119EB2C", Offset = "0x119EB2C", VA = "0x119EB2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x119EBA0", Offset = "0x119EBA0", VA = "0x119EBA0")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x119EC7C", Offset = "0x119EC7C", VA = "0x119EC7C")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x20000BC")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01260", Offset = "0xA01260")]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x200040A")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4001A40")]
		MOUSE = 0,
		[Token(Token = "0x4001A41")]
		GAZE = 1,
		[Token(Token = "0x4001A42")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4001A43")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x4001A44")]
		STEAMVR = 4,
		[Token(Token = "0x4001A45")]
		OCULUSVR = 5,
		[Token(Token = "0x4001A46")]
		GOOGLEVR = 7
	}

	[Token(Token = "0x200040B")]
	public enum Hand
	{
		[Token(Token = "0x4001A48")]
		Both,
		[Token(Token = "0x4001A49")]
		Right,
		[Token(Token = "0x4001A4A")]
		Left
	}

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject currentDragging;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float gazeTimerProgress;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Ray customControllerRay;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float dragThreshold;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool pressedDown;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool pressedLastFrame;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Transform TouchControllerTransform;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private OVRInput.Button InteractionButton;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private OVRCameraRig oculusCameraRig;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private OVRInput.Controller activeCont;

	[Token(Token = "0x1700005E")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x600066B")]
		[Address(RVA = "0x10032C8", Offset = "0x10032C8", VA = "0x10032C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600066C")]
		[Address(RVA = "0x1013C44", Offset = "0x1013C44", VA = "0x1013C44")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1007E68", Offset = "0x1007E68", VA = "0x1007E68")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x600066E")]
		[Address(RVA = "0x1001ACC", Offset = "0x1001ACC", VA = "0x1001ACC")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA24704", Offset = "0xA24704")]
	public static bool CustromControllerButtonDown
	{
		[Token(Token = "0x600066F")]
		[Address(RVA = "0x1013CB0", Offset = "0x1013CB0", VA = "0x1013CB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000670")]
		[Address(RVA = "0x1013D1C", Offset = "0x1013D1C", VA = "0x1013D1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x1013D90", Offset = "0x1013D90", VA = "0x1013D90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x1001FFC", Offset = "0x1001FFC", VA = "0x1001FFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x6000673")]
		[Address(RVA = "0x1013DFC", Offset = "0x1013DFC", VA = "0x1013DFC")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000674")]
		[Address(RVA = "0x10033C4", Offset = "0x10033C4", VA = "0x10033C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x6000675")]
		[Address(RVA = "0x1013E08", Offset = "0x1013E08", VA = "0x1013E08")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000064")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x6000676")]
		[Address(RVA = "0x1013E9C", Offset = "0x1013E9C", VA = "0x1013E9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000677")]
		[Address(RVA = "0x1013EA4", Offset = "0x1013EA4", VA = "0x1013EA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x6000678")]
		[Address(RVA = "0x10012AC", Offset = "0x10012AC", VA = "0x10012AC")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x100EC68", Offset = "0x100EC68", VA = "0x100EC68")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x600067A")]
		[Address(RVA = "0x1013EAC", Offset = "0x1013EAC", VA = "0x1013EAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public Hand UsedHand
	{
		[Token(Token = "0x600067B")]
		[Address(RVA = "0x1013EB4", Offset = "0x1013EB4", VA = "0x1013EB4")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x600067C")]
		[Address(RVA = "0x1013EBC", Offset = "0x1013EBC", VA = "0x1013EBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x600067D")]
		[Address(RVA = "0x1013EC4", Offset = "0x1013EC4", VA = "0x1013EC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600067E")]
		[Address(RVA = "0x1013ECC", Offset = "0x1013ECC", VA = "0x1013ECC")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public float GazeClickTimer
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0x1013ED8", Offset = "0x1013ED8", VA = "0x1013ED8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x100F120", Offset = "0x100F120", VA = "0x100F120")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x1013EE0", Offset = "0x1013EE0", VA = "0x1013EE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x100F284", Offset = "0x100F284", VA = "0x100F284")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x1013EE8", Offset = "0x1013EE8", VA = "0x1013EE8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006C")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x1013EF0", Offset = "0x1013EF0", VA = "0x1013EF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x1013EF8", Offset = "0x1013EF8", VA = "0x1013EF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public OVRCameraRig OculusCameraRig
	{
		[Token(Token = "0x6000686")]
		[Address(RVA = "0x1013F00", Offset = "0x1013F00", VA = "0x1013F00")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x1013F08", Offset = "0x1013F08", VA = "0x1013F08")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public OVRInput.Button OculusTouchInteractionButton
	{
		[Token(Token = "0x6000688")]
		[Address(RVA = "0x1013F10", Offset = "0x1013F10", VA = "0x1013F10")]
		get
		{
			return default(OVRInput.Button);
		}
		[Token(Token = "0x6000689")]
		[Address(RVA = "0x1013F18", Offset = "0x1013F18", VA = "0x1013F18")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public Transform OculusTouchUsedControllerTransform
	{
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x10048B8", Offset = "0x10048B8", VA = "0x10048B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x1012870", Offset = "0x1012870", VA = "0x1012870", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x1012994", Offset = "0x1012994", VA = "0x1012994", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x1012C50", Offset = "0x1012C50", VA = "0x1012C50", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x1012F04", Offset = "0x1012F04", VA = "0x1012F04", Slot = "31")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x1012F6C", Offset = "0x1012F6C", VA = "0x1012F6C", Slot = "32")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x1013188", Offset = "0x1013188", VA = "0x1013188", Slot = "33")]
	protected virtual void ProcessDownRelease(PointerEventData eventData, bool down, bool released)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x1013878", Offset = "0x1013878", VA = "0x1013878", Slot = "34")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x101387C", Offset = "0x101387C", VA = "0x101387C", Slot = "35")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x600066A")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1013F20", Offset = "0x1013F20", VA = "0x1013F20")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x20000BD")]
public enum Difficulty
{
	[Token(Token = "0x4000695")]
	Fast,
	[Token(Token = "0x4000696")]
	Faster,
	[Token(Token = "0x4000697")]
	Fastest
}
[Token(Token = "0x20000BE")]
public class SettingsManager : MonoBehaviour
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Cube1;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Cube2;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider volumeSliderSound;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider volumeSliderMusic;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider volumeSliderVoice;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle enableTips;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle enableBloom;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle fastDifficulty;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Toggle fasterDifficulty;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Toggle fastestDifficulty;

	[Token(Token = "0x40006A2")]
	private const string MUSIC_VOLUME_PREF = "music-volume";

	[Token(Token = "0x40006A3")]
	private const string SFX_VOLUME_PREF = "sound-volume";

	[Token(Token = "0x40006A4")]
	private const string VO_VOLUME_PREF = "voice-volume";

	[Token(Token = "0x40006A5")]
	private const string DIFFICULTY_PREF = "difficulty";

	[Token(Token = "0x40006A6")]
	private const string TIPS_PREF = "tips";

	[Token(Token = "0x40006A7")]
	private const string BLOOM_PREF = "bloom";

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Difficulty currentDifficulty;

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xD2E310", Offset = "0xD2E310", VA = "0xD2E310")]
	private void Start()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xD2E540", Offset = "0xD2E540", VA = "0xD2E540")]
	public void OnChangeSoundVolume(float value)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xD2E5A8", Offset = "0xD2E5A8", VA = "0xD2E5A8")]
	public void OnChangeMusicVolume(float value)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xD2E604", Offset = "0xD2E604", VA = "0xD2E604")]
	public void OnChangeVoiceVolume(float value)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xD2E660", Offset = "0xD2E660", VA = "0xD2E660")]
	public void OnToggleTips(bool state)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xD2E76C", Offset = "0xD2E76C", VA = "0xD2E76C")]
	public void OnToggleBloom(bool state)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xD2E820", Offset = "0xD2E820", VA = "0xD2E820")]
	public void OnToggleFastDifficulty(bool state)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xD2E894", Offset = "0xD2E894", VA = "0xD2E894")]
	public void OnToggleFasterDifficulty(bool state)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xD2E8A4", Offset = "0xD2E8A4", VA = "0xD2E8A4")]
	public void OnToggleFastestDifficulty(bool state)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xD2E830", Offset = "0xD2E830", VA = "0xD2E830")]
	private void SetDifficulty(Difficulty difficulty)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xD2E59C", Offset = "0xD2E59C", VA = "0xD2E59C")]
	private void SetPref(string key, float value)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xD2E8C4", Offset = "0xD2E8C4", VA = "0xD2E8C4")]
	private void SetPref(string key, string value)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xD2E8B4", Offset = "0xD2E8B4", VA = "0xD2E8B4")]
	private void SetPref(string key, int value)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xD2E6E8", Offset = "0xD2E6E8", VA = "0xD2E6E8")]
	private void SetPref(string key, bool value)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xD2E4B4", Offset = "0xD2E4B4", VA = "0xD2E4B4")]
	private bool GetBoolPref(string key, bool defaultValue = true)
	{
		return default(bool);
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xD2E8D4", Offset = "0xD2E8D4", VA = "0xD2E8D4")]
	public SettingsManager()
	{
	}
}
[Token(Token = "0x20000BF")]
public class Dragonfly : MonoBehaviour
{
	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator dragonfly;

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xEE553C", Offset = "0xEE553C", VA = "0xEE553C")]
	private void Start()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xEE5540", Offset = "0xEE5540", VA = "0xEE5540")]
	private void Update()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xEE57FC", Offset = "0xEE57FC", VA = "0xEE57FC")]
	public Dragonfly()
	{
	}
}
[Token(Token = "0x20000C0")]
public class GearVRTestScript : MonoBehaviour
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Cube1;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Cube2;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Cube3;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh textL;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh textR;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xEA8EE8", Offset = "0xEA8EE8", VA = "0xEA8EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xEA8EEC", Offset = "0xEA8EEC", VA = "0xEA8EEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xEA9040", Offset = "0xEA9040", VA = "0xEA9040")]
	public GearVRTestScript()
	{
	}
}
[Token(Token = "0x20000C1")]
public class AutoRotate : MonoBehaviour
{
	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool RotateOnX;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool RotateOnY;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool RotateOnZ;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1194C44", Offset = "0x1194C44", VA = "0x1194C44")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x1194D4C", Offset = "0x1194D4C", VA = "0x1194D4C")]
	public AutoRotate()
	{
	}
}
[Token(Token = "0x20000C2")]
public class RobinCameraScript : MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject robinCamera;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float cameraAngleX;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float cameraAngleY;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float cameraDistance;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xF0571C", Offset = "0xF0571C", VA = "0xF0571C")]
	public void Start()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xF05814", Offset = "0xF05814", VA = "0xF05814")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xF05B34", Offset = "0xF05B34", VA = "0xF05B34")]
	public void SetTarget(GameObject aTarget)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xF05944", Offset = "0xF05944", VA = "0xF05944")]
	public void CameraRotationX()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xF05A3C", Offset = "0xF05A3C", VA = "0xF05A3C")]
	public void CameraRotationY()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xF05B3C", Offset = "0xF05B3C", VA = "0xF05B3C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xF05C60", Offset = "0xF05C60", VA = "0xF05C60")]
	public RobinCameraScript()
	{
	}
}
[Token(Token = "0x20000C3")]
public class RobinCharacter : MonoBehaviour
{
	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator robinAnimator;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float animSpeed;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody robinRigid;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isFlying;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float forwardSpeed;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float turnAcceleration;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float upDownAcceleration;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float forwardAccelerationMultiplier;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float turnAccelerationMultiplier;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float upDownAccelerationMultiplier;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float forwardAcceleration;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isGrounded;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float groundCheckDistance;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float groundCheckOffset;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool soaring;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float soaringTime;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xF05C78", Offset = "0xF05C78", VA = "0xF05C78")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xF05CFC", Offset = "0xF05CFC", VA = "0xF05CFC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xF061C4", Offset = "0xF061C4", VA = "0xF061C4")]
	public void AnimSpeedSet(float speed)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xF061E8", Offset = "0xF061E8", VA = "0xF061E8")]
	public void Landing()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xF06274", Offset = "0xF06274", VA = "0xF06274")]
	public void Soar()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xF06318", Offset = "0xF06318", VA = "0xF06318")]
	public void HopForward()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xF06374", Offset = "0xF06374", VA = "0xF06374")]
	public void HopBack()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xF063D0", Offset = "0xF063D0", VA = "0xF063D0")]
	public void HopRight()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xF0642C", Offset = "0xF0642C", VA = "0xF0642C")]
	public void HopLeft()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xF06488", Offset = "0xF06488", VA = "0xF06488")]
	public void Attack()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xF064E4", Offset = "0xF064E4", VA = "0xF064E4")]
	public void Hit()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xF06540", Offset = "0xF06540", VA = "0xF06540")]
	public void Bathing()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xF0659C", Offset = "0xF0659C", VA = "0xF0659C")]
	public void Chirp()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xF065F8", Offset = "0xF065F8", VA = "0xF065F8")]
	public void Grooming()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xF06654", Offset = "0xF06654", VA = "0xF06654")]
	public void EatStart()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xF066B4", Offset = "0xF066B4", VA = "0xF066B4")]
	public void EatEnd()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xF06714", Offset = "0xF06714", VA = "0xF06714")]
	public void Death()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xF06774", Offset = "0xF06774", VA = "0xF06774")]
	public void Rebirth()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xF0600C", Offset = "0xF0600C", VA = "0xF0600C")]
	private void CheckGroundStatus()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xF05D58", Offset = "0xF05D58", VA = "0xF05D58")]
	public void Move()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xF067D4", Offset = "0xF067D4", VA = "0xF067D4")]
	public RobinCharacter()
	{
	}
}
[Token(Token = "0x20000C4")]
public class RobinUserController : MonoBehaviour
{
	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RobinCharacter robinCharacter;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xF06808", Offset = "0xF06808", VA = "0xF06808")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xF06860", Offset = "0xF06860", VA = "0xF06860")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xF06B0C", Offset = "0xF06B0C", VA = "0xF06B0C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xF06BA8", Offset = "0xF06BA8", VA = "0xF06BA8")]
	public RobinUserController()
	{
	}
}
[Token(Token = "0x20000C5")]
public class Lovebird : MonoBehaviour
{
	[Token(Token = "0x200040C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04080", Offset = "0xA04080")]
	private sealed class <fly>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lovebird <>4__this;

		[Token(Token = "0x170001D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xCAD3BC", Offset = "0xCAD3BC", VA = "0xCAD3BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0xCAD424", Offset = "0xCAD424", VA = "0xCAD424", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xCAD0C8", Offset = "0xCAD0C8", VA = "0xCAD0C8")]
		[DebuggerHidden]
		public <fly>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xCAD2D4", Offset = "0xCAD2D4", VA = "0xCAD2D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xCAD2D8", Offset = "0xCAD2D8", VA = "0xCAD2D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xCAD3C4", Offset = "0xCAD3C4", VA = "0xCAD3C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200040D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04090", Offset = "0xA04090")]
	private sealed class <eat>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lovebird <>4__this;

		[Token(Token = "0x170001D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0xCAD264", Offset = "0xCAD264", VA = "0xCAD264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0xCAD2CC", Offset = "0xCAD2CC", VA = "0xCAD2CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xCAD0F4", Offset = "0xCAD0F4", VA = "0xCAD0F4")]
		[DebuggerHidden]
		public <eat>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xCAD180", Offset = "0xCAD180", VA = "0xCAD180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xCAD184", Offset = "0xCAD184", VA = "0xCAD184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xCAD26C", Offset = "0xCAD26C", VA = "0xCAD26C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA040A0", Offset = "0xA040A0")]
	private sealed class <idle>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lovebird <>4__this;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xCAD668", Offset = "0xCAD668", VA = "0xCAD668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0xCAD6D0", Offset = "0xCAD6D0", VA = "0xCAD6D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xCAD120", Offset = "0xCAD120", VA = "0xCAD120")]
		[DebuggerHidden]
		public <idle>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xCAD584", Offset = "0xCAD584", VA = "0xCAD584", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xCAD588", Offset = "0xCAD588", VA = "0xCAD588", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xCAD670", Offset = "0xCAD670", VA = "0xCAD670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA040B0", Offset = "0xA040B0")]
	private sealed class <idle2>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lovebird <>4__this;

		[Token(Token = "0x170001D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001949")]
			[Address(RVA = "0xCAD514", Offset = "0xCAD514", VA = "0xCAD514", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0xCAD57C", Offset = "0xCAD57C", VA = "0xCAD57C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xCAD14C", Offset = "0xCAD14C", VA = "0xCAD14C")]
		[DebuggerHidden]
		public <idle2>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xCAD42C", Offset = "0xCAD42C", VA = "0xCAD42C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xCAD430", Offset = "0xCAD430", VA = "0xCAD430", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xCAD51C", Offset = "0xCAD51C", VA = "0xCAD51C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator lovebird;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator coroutine;

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xCACAD0", Offset = "0xCACAD0", VA = "0xCACAD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xCACAD4", Offset = "0xCACAD4", VA = "0xCACAD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xCACF08", Offset = "0xCACF08", VA = "0xCACF08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1C9E8", Offset = "0xA1C9E8")]
	private IEnumerator fly()
	{
		return null;
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xCACFE8", Offset = "0xCACFE8", VA = "0xCACFE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CA4C", Offset = "0xA1CA4C")]
	private IEnumerator eat()
	{
		return null;
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xCACF78", Offset = "0xCACF78", VA = "0xCACF78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CAB0", Offset = "0xA1CAB0")]
	private IEnumerator idle()
	{
		return null;
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xCAD058", Offset = "0xCAD058", VA = "0xCAD058")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CB14", Offset = "0xA1CB14")]
	private IEnumerator idle2()
	{
		return null;
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xCAD178", Offset = "0xCAD178", VA = "0xCAD178")]
	public Lovebird()
	{
	}
}
[Token(Token = "0x20000C6")]
public class MantisLODEditorProfessional : MonoBehaviour
{
	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xCAFD44", Offset = "0xCAFD44", VA = "0xCAFD44")]
	public MantisLODEditorProfessional()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01270", Offset = "0xA01270")]
public class MobileLut : MonoBehaviour
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0F9D8", Offset = "0xA0F9D8")]
	public int lutDimension;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0F9F0", Offset = "0xA0F9F0")]
	public float lutAmount;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D source;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int lutTexture2dString;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int lutTexture3dString;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int lutAmountString;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int previousLutDimension;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D previous;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D converted2D;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture3D converted3D;

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xCB5354", Offset = "0xCB5354", VA = "0xCB5354")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xCB5360", Offset = "0xCB5360", VA = "0xCB5360")]
	public void Update()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xCB5430", Offset = "0xCB5430", VA = "0xCB5430")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xCB54DC", Offset = "0xCB54DC", VA = "0xCB54DC")]
	private void Convert2D(Texture2D temp2DTex)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xCB57E4", Offset = "0xCB57E4", VA = "0xCB57E4")]
	private void Convert3D(Texture2D temp3DTex)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xCB541C", Offset = "0xCB541C", VA = "0xCB541C")]
	private void Convert(Texture2D source)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xCB59B8", Offset = "0xCB59B8", VA = "0xCB59B8")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xCB5BE8", Offset = "0xCB5BE8", VA = "0xCB5BE8")]
	public MobileLut()
	{
	}
}
[Token(Token = "0x20000C8")]
public class Monarch : MonoBehaviour
{
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA040C0", Offset = "0xA040C0")]
	private sealed class <idle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Monarch <>4__this;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600194F")]
			[Address(RVA = "0xCB640C", Offset = "0xCB640C", VA = "0xCB640C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001951")]
			[Address(RVA = "0xCB6474", Offset = "0xCB6474", VA = "0xCB6474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xCB614C", Offset = "0xCB614C", VA = "0xCB614C")]
		[DebuggerHidden]
		public <idle>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xCB6304", Offset = "0xCB6304", VA = "0xCB6304", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xCB6308", Offset = "0xCB6308", VA = "0xCB6308", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xCB6414", Offset = "0xCB6414", VA = "0xCB6414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA040D0", Offset = "0xA040D0")]
	private sealed class <fly>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Monarch <>4__this;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001955")]
			[Address(RVA = "0xCB6294", Offset = "0xCB6294", VA = "0xCB6294", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001957")]
			[Address(RVA = "0xCB62FC", Offset = "0xCB62FC", VA = "0xCB62FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xCB6178", Offset = "0xCB6178", VA = "0xCB6178")]
		[DebuggerHidden]
		public <fly>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xCB61AC", Offset = "0xCB61AC", VA = "0xCB61AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xCB61B0", Offset = "0xCB61B0", VA = "0xCB61B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xCB629C", Offset = "0xCB629C", VA = "0xCB629C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator monarch;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator coroutine;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xCB5CA0", Offset = "0xCB5CA0", VA = "0xCB5CA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xCB5CF8", Offset = "0xCB5CF8", VA = "0xCB5CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xCB606C", Offset = "0xCB606C", VA = "0xCB606C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CB78", Offset = "0xA1CB78")]
	private IEnumerator idle()
	{
		return null;
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xCB60DC", Offset = "0xCB60DC", VA = "0xCB60DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CBDC", Offset = "0xA1CBDC")]
	private IEnumerator fly()
	{
		return null;
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xCB61A4", Offset = "0xCB61A4", VA = "0xCB61A4")]
	public Monarch()
	{
	}
}
[Token(Token = "0x20000C9")]
internal class AnimateTiledTexture : MonoBehaviour
{
	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _uvTieX;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int _uvTieY;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _fps;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 _size;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer _myRenderer;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _lastIndex;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x1193C24", Offset = "0x1193C24", VA = "0x1193C24")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x1193CFC", Offset = "0x1193CFC", VA = "0x1193CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1193E0C", Offset = "0x1193E0C", VA = "0x1193E0C")]
	public AnimateTiledTexture()
	{
	}
}
[Token(Token = "0x20000CA")]
public class EntitlementManager : MonoBehaviour
{
	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string appId;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xEE9220", Offset = "0xEE9220", VA = "0xEE9220")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xEE92E4", Offset = "0xEE92E4", VA = "0xEE92E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xEE92E8", Offset = "0xEE92E8", VA = "0xEE92E8")]
	private void EntitlementChecked(Message msg)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xEE931C", Offset = "0xEE931C", VA = "0xEE931C")]
	public EntitlementManager()
	{
	}
}
[Token(Token = "0x20000CB")]
public class FacingAsset : MonoBehaviour
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool alwaysFace;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool limitX;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool onlyOnce;

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x13AEAD4", Offset = "0x13AEAD4", VA = "0x13AEAD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x13AED30", Offset = "0x13AED30", VA = "0x13AED30")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x13AEB28", Offset = "0x13AEB28", VA = "0x13AEB28")]
	private void FacePlayer(bool xOnly)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x13AED44", Offset = "0x13AED44", VA = "0x13AED44")]
	public FacingAsset()
	{
	}
}
[Token(Token = "0x20000CC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01280", Offset = "0xA01280")]
public class KillTimerPlusEffect : MonoBehaviour
{
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DestroyEffect;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float killDelay;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float killTimer;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xEB8AE4", Offset = "0xEB8AE4", VA = "0xEB8AE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xEB8AF0", Offset = "0xEB8AF0", VA = "0xEB8AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xEB8C4C", Offset = "0xEB8C4C", VA = "0xEB8C4C")]
	public KillTimerPlusEffect()
	{
	}
}
[Token(Token = "0x20000CD")]
public class NTVRGO_SelectSeed : MonoBehaviour
{
	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int noClick;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objList;

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xCB8E2C", Offset = "0xCB8E2C", VA = "0xCB8E2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xCB8F98", Offset = "0xCB8F98", VA = "0xCB8F98")]
	public void btnClick()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xCB903C", Offset = "0xCB903C", VA = "0xCB903C")]
	public NTVRGO_SelectSeed()
	{
	}
}
[Token(Token = "0x20000CE")]
public class NTVRGO_SelectSeedIcon : MonoBehaviour
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int noClick;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objList;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xCB9054", Offset = "0xCB9054", VA = "0xCB9054")]
	private void Update()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xCB91C0", Offset = "0xCB91C0", VA = "0xCB91C0")]
	public void btnClick()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xCB9264", Offset = "0xCB9264", VA = "0xCB9264")]
	public NTVRGO_SelectSeedIcon()
	{
	}
}
[Token(Token = "0x20000CF")]
public class NTVR_AudioSeedFire : MonoBehaviour
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource randomShoot;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioSources;

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xCB9374", Offset = "0xCB9374", VA = "0xCB9374")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xCB93F4", Offset = "0xCB93F4", VA = "0xCB93F4")]
	public NTVR_AudioSeedFire()
	{
	}
}
[Token(Token = "0x20000D0")]
public class NTVR_Caustics_Anim : MonoBehaviour
{
	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fps;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] frames;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frameIndex;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Projector projector;

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xCB94E0", Offset = "0xCB94E0", VA = "0xCB94E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xCB955C", Offset = "0xCB955C", VA = "0xCB955C")]
	private void NextFrame()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xCB9614", Offset = "0xCB9614", VA = "0xCB9614")]
	public NTVR_Caustics_Anim()
	{
	}
}
[Token(Token = "0x20000D1")]
public class NTVR_CullLayer : MonoBehaviour
{
	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int cullLayer;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int cullDistance;

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xCB9624", Offset = "0xCB9624", VA = "0xCB9624")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xCB96D8", Offset = "0xCB96D8", VA = "0xCB96D8")]
	public NTVR_CullLayer()
	{
	}
}
[Token(Token = "0x20000D2")]
public class NTVR_DisableIcon : MonoBehaviour
{
	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA040E0", Offset = "0xA040E0")]
	private sealed class <iconOff>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_DisableIcon <>4__this;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0xCB9878", Offset = "0xCB9878", VA = "0xCB9878", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0xCB98E0", Offset = "0xCB98E0", VA = "0xCB98E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xCB9788", Offset = "0xCB9788", VA = "0xCB9788")]
		[DebuggerHidden]
		public <iconOff>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xCB97BC", Offset = "0xCB97BC", VA = "0xCB97BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xCB97C0", Offset = "0xCB97C0", VA = "0xCB97C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xCB9880", Offset = "0xCB9880", VA = "0xCB9880", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xCB96EC", Offset = "0xCB96EC", VA = "0xCB96EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xCB9718", Offset = "0xCB9718", VA = "0xCB9718")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CC40", Offset = "0xA1CC40")]
	private IEnumerator iconOff()
	{
		return null;
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xCB97B4", Offset = "0xCB97B4", VA = "0xCB97B4")]
	public NTVR_DisableIcon()
	{
	}
}
[Token(Token = "0x20000D3")]
public class NTVR_DropSeed : MonoBehaviour
{
	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnGrowObject;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xCB98E8", Offset = "0xCB98E8", VA = "0xCB98E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xCB9ABC", Offset = "0xCB9ABC", VA = "0xCB9ABC")]
	public NTVR_DropSeed()
	{
	}
}
[Token(Token = "0x20000D4")]
public class NTVR_DropSeedFruit : MonoBehaviour
{
	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnGrowObject;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xCB9AC4", Offset = "0xCB9AC4", VA = "0xCB9AC4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xCB9CC0", Offset = "0xCB9CC0", VA = "0xCB9CC0")]
	public NTVR_DropSeedFruit()
	{
	}
}
[Token(Token = "0x20000D5")]
public class NTVR_Event_Crow : MonoBehaviour
{
	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] animalSounds;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource soundSource;

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xCB9CC8", Offset = "0xCB9CC8", VA = "0xCB9CC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xCB9CCC", Offset = "0xCB9CCC", VA = "0xCB9CCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xCB9CD0", Offset = "0xCB9CD0", VA = "0xCB9CD0")]
	private void animalSoundEvent()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xCB9D40", Offset = "0xCB9D40", VA = "0xCB9D40")]
	public NTVR_Event_Crow()
	{
	}
}
[Token(Token = "0x20000D6")]
public class NTVR_FadeObject : MonoBehaviour
{
	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0FA08", Offset = "0xA0FA08")]
	public float fadeSpeed;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color fadeColor;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_Material;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color m_Color;

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xCB9D48", Offset = "0xCB9D48", VA = "0xCB9D48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xCB9DDC", Offset = "0xCB9DDC", VA = "0xCB9DDC")]
	public NTVR_FadeObject()
	{
	}
}
[Token(Token = "0x20000D7")]
public class NTVR_FoveatedRendering : MonoBehaviour
{
	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRManager.TiledMultiResLevel renderV;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xCB9E3C", Offset = "0xCB9E3C", VA = "0xCB9E3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xCB9E40", Offset = "0xCB9E40", VA = "0xCB9E40")]
	public NTVR_FoveatedRendering()
	{
	}
}
[Token(Token = "0x20000D8")]
public class NTVR_GO_FireSeed : MonoBehaviour
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject prefabBall;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject spawn;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform spawnTransform;

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xCB9E48", Offset = "0xCB9E48", VA = "0xCB9E48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xCB9E7C", Offset = "0xCB9E7C", VA = "0xCB9E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xCB9FE8", Offset = "0xCB9FE8", VA = "0xCB9FE8")]
	public void btnFireSeed()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xCBA174", Offset = "0xCBA174", VA = "0xCBA174")]
	public NTVR_GO_FireSeed()
	{
	}
}
[Token(Token = "0x20000D9")]
public class NTVR_VisSeed : MonoBehaviour
{
	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA040F0", Offset = "0xA040F0")]
	private sealed class <WaitForSpawn>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_VisSeed <>4__this;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0xCC3260", Offset = "0xCC3260", VA = "0xCC3260", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001963")]
			[Address(RVA = "0xCC32C8", Offset = "0xCC32C8", VA = "0xCC32C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xCC2FF8", Offset = "0xCC2FF8", VA = "0xCC2FF8")]
		[DebuggerHidden]
		public <WaitForSpawn>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xCC302C", Offset = "0xCC302C", VA = "0xCC302C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xCC3030", Offset = "0xCC3030", VA = "0xCC3030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xCC3268", Offset = "0xCC3268", VA = "0xCC3268", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnGrowObject;

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xCC2EE8", Offset = "0xCC2EE8", VA = "0xCC2EE8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xCC2F88", Offset = "0xCC2F88", VA = "0xCC2F88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CCA4", Offset = "0xA1CCA4")]
	private IEnumerator WaitForSpawn()
	{
		return null;
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xCC3024", Offset = "0xCC3024", VA = "0xCC3024")]
	public NTVR_VisSeed()
	{
	}
}
[Token(Token = "0x20000DA")]
public class NTVR_GrowObject : MonoBehaviour
{
	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource randomShoot;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioSources;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GrowEffect;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SpecialEffect;

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xCBA18C", Offset = "0xCBA18C", VA = "0xCBA18C")]
	private void Start()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xCBA39C", Offset = "0xCBA39C", VA = "0xCBA39C")]
	public NTVR_GrowObject()
	{
	}
}
[Token(Token = "0x20000DB")]
public class NTVR_GrowObject_Large : MonoBehaviour
{
	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource randomShoot;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioSources;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GrowEffect;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SpecialEffect;

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xCBA3A4", Offset = "0xCBA3A4", VA = "0xCBA3A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xCBA6A0", Offset = "0xCBA6A0", VA = "0xCBA6A0")]
	public NTVR_GrowObject_Large()
	{
	}
}
[Token(Token = "0x20000DC")]
public class NTVR_GrowObject_Medium : MonoBehaviour
{
	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource randomShoot;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioSources;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GrowEffect;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SpecialEffect;

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xCBA6A8", Offset = "0xCBA6A8", VA = "0xCBA6A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xCBA9A4", Offset = "0xCBA9A4", VA = "0xCBA9A4")]
	public NTVR_GrowObject_Medium()
	{
	}
}
[Token(Token = "0x20000DD")]
public class NTVR_GrowObject_Small : MonoBehaviour
{
	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GrowEffect;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SpecialEffect;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xCBA9AC", Offset = "0xCBA9AC", VA = "0xCBA9AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xCBAC4C", Offset = "0xCBAC4C", VA = "0xCBAC4C")]
	public NTVR_GrowObject_Small()
	{
	}
}
[Token(Token = "0x20000DE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA012B8", Offset = "0xA012B8")]
public class NTVR_KillTimer : MonoBehaviour
{
	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float killDelay;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float killTimer;

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xCBAC54", Offset = "0xCBAC54", VA = "0xCBAC54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xCBAC60", Offset = "0xCBAC60", VA = "0xCBAC60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xCBAD10", Offset = "0xCBAD10", VA = "0xCBAD10")]
	public NTVR_KillTimer()
	{
	}
}
[Token(Token = "0x20000DF")]
public class NTVR_LeafWave : MonoBehaviour
{
	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector4 waving;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float wavingPower;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat;

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xCBAD20", Offset = "0xCBAD20", VA = "0xCBAD20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xCBADAC", Offset = "0xCBADAC", VA = "0xCBADAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xCBAEB4", Offset = "0xCBAEB4", VA = "0xCBAEB4")]
	public NTVR_LeafWave()
	{
	}
}
[Token(Token = "0x20000E0")]
public class NTVR_LimitLarge : MonoBehaviour
{
	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FA24", Offset = "0xA0FA24")]
	public List<GameObject> objectList;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxObjects;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NTVR_LimitLarge instance;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xCBAEBC", Offset = "0xCBAEBC", VA = "0xCBAEBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xCBA5B0", Offset = "0xCBA5B0", VA = "0xCBA5B0")]
	public void AddObject(GameObject holder)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xCBAF38", Offset = "0xCBAF38", VA = "0xCBAF38")]
	public NTVR_LimitLarge()
	{
	}
}
[Token(Token = "0x20000E1")]
public class NTVR_LimitMedium : MonoBehaviour
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FA5C", Offset = "0xA0FA5C")]
	public List<GameObject> objectList;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxObjects;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NTVR_LimitMedium instance;

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xCBAF40", Offset = "0xCBAF40", VA = "0xCBAF40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xCBA8B4", Offset = "0xCBA8B4", VA = "0xCBA8B4")]
	public void AddObject(GameObject holder)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xCBAFBC", Offset = "0xCBAFBC", VA = "0xCBAFBC")]
	public NTVR_LimitMedium()
	{
	}
}
[Token(Token = "0x20000E2")]
public class NTVR_LimitSmall : MonoBehaviour
{
	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FA94", Offset = "0xA0FA94")]
	public List<GameObject> objectList;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxObjects;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NTVR_LimitSmall instance;

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xCBAFC4", Offset = "0xCBAFC4", VA = "0xCBAFC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xCBAB5C", Offset = "0xCBAB5C", VA = "0xCBAB5C")]
	public void AddObject(GameObject holder)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xCBB040", Offset = "0xCBB040", VA = "0xCBB040")]
	public NTVR_LimitSmall()
	{
	}
}
[Token(Token = "0x20000E3")]
public class NTVR_LimitSpecial : MonoBehaviour
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FACC", Offset = "0xA0FACC")]
	public List<GameObject> objectList;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxObjects;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NTVR_LimitSpecial instance;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xCBB048", Offset = "0xCBB048", VA = "0xCBB048")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xCBB0C4", Offset = "0xCBB0C4", VA = "0xCBB0C4")]
	public void AddObject(GameObject holder)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xCBB1B4", Offset = "0xCBB1B4", VA = "0xCBB1B4")]
	public NTVR_LimitSpecial()
	{
	}
}
[Token(Token = "0x20000E4")]
public class NTVR_LocomotionSwitch : MonoBehaviour
{
	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OVRInput.Button toggleButton;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MovementFree;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject MovementTeleport;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xCBB1BC", Offset = "0xCBB1BC", VA = "0xCBB1BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xCBB244", Offset = "0xCBB244", VA = "0xCBB244")]
	public void locomotionSwitch()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xCBB420", Offset = "0xCBB420", VA = "0xCBB420")]
	public NTVR_LocomotionSwitch()
	{
	}
}
[Token(Token = "0x20000E5")]
public class NTVR_Mute : MonoBehaviour
{
	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audio;

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xCBB438", Offset = "0xCBB438", VA = "0xCBB438")]
	private void Start()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xCBB490", Offset = "0xCBB490", VA = "0xCBB490")]
	private void Update()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xCBB500", Offset = "0xCBB500", VA = "0xCBB500")]
	public NTVR_Mute()
	{
	}
}
[Token(Token = "0x20000E6")]
public class NTVR_ObjectCountLarge : MonoBehaviour
{
	[Token(Token = "0x600072C")]
	[Address(RVA = "0xCBB508", Offset = "0xCBB508", VA = "0xCBB508")]
	private void Start()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xCBB578", Offset = "0xCBB578", VA = "0xCBB578")]
	public NTVR_ObjectCountLarge()
	{
	}
}
[Token(Token = "0x20000E7")]
public class NTVR_ObjectCountMedium : MonoBehaviour
{
	[Token(Token = "0x600072E")]
	[Address(RVA = "0xCBB580", Offset = "0xCBB580", VA = "0xCBB580")]
	private void Start()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xCBB5F0", Offset = "0xCBB5F0", VA = "0xCBB5F0")]
	public NTVR_ObjectCountMedium()
	{
	}
}
[Token(Token = "0x20000E8")]
public class NTVR_ObjectCountSmall : MonoBehaviour
{
	[Token(Token = "0x6000730")]
	[Address(RVA = "0xCBB5F8", Offset = "0xCBB5F8", VA = "0xCBB5F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xCBB668", Offset = "0xCBB668", VA = "0xCBB668")]
	public NTVR_ObjectCountSmall()
	{
	}
}
[Token(Token = "0x20000E9")]
public class NTVR_ObjectCountSpecial : MonoBehaviour
{
	[Token(Token = "0x6000732")]
	[Address(RVA = "0xCBB670", Offset = "0xCBB670", VA = "0xCBB670")]
	private void Start()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xCBB6E0", Offset = "0xCBB6E0", VA = "0xCBB6E0")]
	public NTVR_ObjectCountSpecial()
	{
	}
}
[Token(Token = "0x20000EA")]
public class NTVR_ObjectDestroy : MonoBehaviour
{
	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject destroyPrefab;

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xCBB6E8", Offset = "0xCBB6E8", VA = "0xCBB6E8")]
	private void OnCollisionEnter(Collision c)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xCBB7B0", Offset = "0xCBB7B0", VA = "0xCBB7B0")]
	public NTVR_ObjectDestroy()
	{
	}
}
[Token(Token = "0x20000EB")]
public class NTVR_PlanetDestroy : MonoBehaviour
{
	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectOnDestroyZone;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EffectOnDestroyZoneBurst;

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xCBB7B8", Offset = "0xCBB7B8", VA = "0xCBB7B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xCBB99C", Offset = "0xCBB99C", VA = "0xCBB99C")]
	public NTVR_PlanetDestroy()
	{
	}
}
[Token(Token = "0x20000EC")]
public class NTVR_RandomAudio : MonoBehaviour
{
	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] RandomAudio;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioClip RandomAudioClip;

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xCBB9A4", Offset = "0xCBB9A4", VA = "0xCBB9A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xCBBA6C", Offset = "0xCBBA6C", VA = "0xCBBA6C")]
	public NTVR_RandomAudio()
	{
	}
}
[Token(Token = "0x20000ED")]
public class NTVR_SeedCountFlower : MonoBehaviour
{
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04100", Offset = "0xA04100")]
	private sealed class <GrenadeStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountFlower <>4__this;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0xCBC56C", Offset = "0xCBC56C", VA = "0xCBC56C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001969")]
			[Address(RVA = "0xCBC5D4", Offset = "0xCBC5D4", VA = "0xCBC5D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xCBBB10", Offset = "0xCBBB10", VA = "0xCBBB10")]
		[DebuggerHidden]
		public <GrenadeStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xCBBB44", Offset = "0xCBBB44", VA = "0xCBBB44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xCBBB48", Offset = "0xCBBB48", VA = "0xCBBB48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xCBC574", Offset = "0xCBC574", VA = "0xCBC574", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ExplodeEffect;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SeedsSpawn;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xCBBA74", Offset = "0xCBBA74", VA = "0xCBBA74")]
	private void Start()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xCBBAA0", Offset = "0xCBBAA0", VA = "0xCBBAA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CD08", Offset = "0xA1CD08")]
	private IEnumerator GrenadeStart()
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xCBBB3C", Offset = "0xCBBB3C", VA = "0xCBBB3C")]
	public NTVR_SeedCountFlower()
	{
	}
}
[Token(Token = "0x20000EE")]
public class NTVR_SeedCountFruit : MonoBehaviour
{
	[Token(Token = "0x2000415")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04110", Offset = "0xA04110")]
	private sealed class <GrenadeStart>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountFruit <>4__this;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600196D")]
			[Address(RVA = "0xCBCFE4", Offset = "0xCBCFE4", VA = "0xCBCFE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0xCBD04C", Offset = "0xCBD04C", VA = "0xCBD04C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xCBC678", Offset = "0xCBC678", VA = "0xCBC678")]
		[DebuggerHidden]
		public <GrenadeStart>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xCBC6AC", Offset = "0xCBC6AC", VA = "0xCBC6AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xCBC6B0", Offset = "0xCBC6B0", VA = "0xCBC6B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xCBCFEC", Offset = "0xCBCFEC", VA = "0xCBCFEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ExplodeEffect;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SeedsSpawnA;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SeedsSpawnB;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SeedsSpawnC;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject SeedsSpawnD;

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xCBC5DC", Offset = "0xCBC5DC", VA = "0xCBC5DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xCBC608", Offset = "0xCBC608", VA = "0xCBC608")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CD6C", Offset = "0xA1CD6C")]
	private IEnumerator GrenadeStart()
	{
		return null;
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xCBC6A4", Offset = "0xCBC6A4", VA = "0xCBC6A4")]
	public NTVR_SeedCountFruit()
	{
	}
}
[Token(Token = "0x20000EF")]
public class NTVR_SeedCountShort : MonoBehaviour
{
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04120", Offset = "0xA04120")]
	private sealed class <SpawnStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountShort <>4__this;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001973")]
			[Address(RVA = "0xCBE354", Offset = "0xCBE354", VA = "0xCBE354", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001975")]
			[Address(RVA = "0xCBE3BC", Offset = "0xCBE3BC", VA = "0xCBE3BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xCBE0F0", Offset = "0xCBE0F0", VA = "0xCBE0F0")]
		[DebuggerHidden]
		public <SpawnStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xCBE124", Offset = "0xCBE124", VA = "0xCBE124", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xCBE128", Offset = "0xCBE128", VA = "0xCBE128", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xCBE35C", Offset = "0xCBE35C", VA = "0xCBE35C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnObject;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ExplodeEffect;

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xCBE054", Offset = "0xCBE054", VA = "0xCBE054")]
	private void Start()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xCBE080", Offset = "0xCBE080", VA = "0xCBE080")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CDD0", Offset = "0xA1CDD0")]
	private IEnumerator SpawnStart()
	{
		return null;
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xCBE11C", Offset = "0xCBE11C", VA = "0xCBE11C")]
	public NTVR_SeedCountShort()
	{
	}
}
[Token(Token = "0x20000F0")]
public class NTVR_SeedCountSimple : MonoBehaviour
{
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04130", Offset = "0xA04130")]
	private sealed class <SpawnStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountSimple <>4__this;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001979")]
			[Address(RVA = "0xCBE718", Offset = "0xCBE718", VA = "0xCBE718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600197B")]
			[Address(RVA = "0xCBE780", Offset = "0xCBE780", VA = "0xCBE780", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xCBE460", Offset = "0xCBE460", VA = "0xCBE460")]
		[DebuggerHidden]
		public <SpawnStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xCBE494", Offset = "0xCBE494", VA = "0xCBE494", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xCBE498", Offset = "0xCBE498", VA = "0xCBE498", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xCBE720", Offset = "0xCBE720", VA = "0xCBE720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnObject;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ExplodeEffect;

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xCBE3C4", Offset = "0xCBE3C4", VA = "0xCBE3C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xCBE3F0", Offset = "0xCBE3F0", VA = "0xCBE3F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CE34", Offset = "0xA1CE34")]
	private IEnumerator SpawnStart()
	{
		return null;
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xCBE48C", Offset = "0xCBE48C", VA = "0xCBE48C")]
	public NTVR_SeedCountSimple()
	{
	}
}
[Token(Token = "0x20000F1")]
public class NTVR_SeedCountStar : MonoBehaviour
{
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04140", Offset = "0xA04140")]
	private sealed class <SpawnStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountStar <>4__this;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600197F")]
			[Address(RVA = "0xCBEB14", Offset = "0xCBEB14", VA = "0xCBEB14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001981")]
			[Address(RVA = "0xCBEB7C", Offset = "0xCBEB7C", VA = "0xCBEB7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xCBE824", Offset = "0xCBE824", VA = "0xCBE824")]
		[DebuggerHidden]
		public <SpawnStart>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xCBE858", Offset = "0xCBE858", VA = "0xCBE858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xCBE85C", Offset = "0xCBE85C", VA = "0xCBE85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xCBEB1C", Offset = "0xCBEB1C", VA = "0xCBEB1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnObject;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] SpawnEffect;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ExplodeEffect;

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xCBE788", Offset = "0xCBE788", VA = "0xCBE788")]
	private void Start()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xCBE7B4", Offset = "0xCBE7B4", VA = "0xCBE7B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CE98", Offset = "0xA1CE98")]
	private IEnumerator SpawnStart()
	{
		return null;
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xCBE850", Offset = "0xCBE850", VA = "0xCBE850")]
	public NTVR_SeedCountStar()
	{
	}
}
[Token(Token = "0x20000F2")]
public class NTVR_SeedCountTimeOfDay : MonoBehaviour
{
	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04150", Offset = "0xA04150")]
	private sealed class <seedCountDown>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountTimeOfDay <>4__this;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001985")]
			[Address(RVA = "0xCBF550", Offset = "0xCBF550", VA = "0xCBF550", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001987")]
			[Address(RVA = "0xCBF5B8", Offset = "0xCBF5B8", VA = "0xCBF5B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xCBEC64", Offset = "0xCBEC64", VA = "0xCBEC64")]
		[DebuggerHidden]
		public <seedCountDown>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xCBEC98", Offset = "0xCBEC98", VA = "0xCBEC98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xCBEC9C", Offset = "0xCBEC9C", VA = "0xCBEC9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xCBF558", Offset = "0xCBF558", VA = "0xCBF558", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject explodeEffect;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject scriptHolder;

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xCBEB84", Offset = "0xCBEB84", VA = "0xCBEB84")]
	private void Start()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xCBEBF4", Offset = "0xCBEBF4", VA = "0xCBEBF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CEFC", Offset = "0xA1CEFC")]
	private IEnumerator seedCountDown()
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xCBEC90", Offset = "0xCBEC90", VA = "0xCBEC90")]
	public NTVR_SeedCountTimeOfDay()
	{
	}
}
[Token(Token = "0x20000F3")]
public class NTVR_SeedCountWeather : MonoBehaviour
{
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04160", Offset = "0xA04160")]
	private sealed class <seedCountDown>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountWeather <>4__this;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0xCBF8FC", Offset = "0xCBF8FC", VA = "0xCBF8FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600198D")]
			[Address(RVA = "0xCBF964", Offset = "0xCBF964", VA = "0xCBF964", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xCBF6A0", Offset = "0xCBF6A0", VA = "0xCBF6A0")]
		[DebuggerHidden]
		public <seedCountDown>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xCBF6D4", Offset = "0xCBF6D4", VA = "0xCBF6D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xCBF6D8", Offset = "0xCBF6D8", VA = "0xCBF6D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xCBF904", Offset = "0xCBF904", VA = "0xCBF904", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject explodeEffect;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject scriptHolder;

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xCBF5C0", Offset = "0xCBF5C0", VA = "0xCBF5C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xCBF630", Offset = "0xCBF630", VA = "0xCBF630")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CF60", Offset = "0xA1CF60")]
	private IEnumerator seedCountDown()
	{
		return null;
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xCBF6CC", Offset = "0xCBF6CC", VA = "0xCBF6CC")]
	public NTVR_SeedCountWeather()
	{
	}
}
[Token(Token = "0x20000F4")]
public class NTVR_SeedObjectScaleAnim : MonoBehaviour
{
	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationClip[] animationer;

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xCBF96C", Offset = "0xCBF96C", VA = "0xCBF96C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xCBFA2C", Offset = "0xCBFA2C", VA = "0xCBFA2C")]
	public NTVR_SeedObjectScaleAnim()
	{
	}
}
[Token(Token = "0x20000F5")]
public class NTVR_SeedSpawn : MonoBehaviour
{
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04170", Offset = "0xA04170")]
	private sealed class <WaitForSpawn>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedSpawn <>4__this;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0xCC009C", Offset = "0xCC009C", VA = "0xCC009C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0xCC0104", Offset = "0xCC0104", VA = "0xCC0104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xCBFBE8", Offset = "0xCBFBE8", VA = "0xCBFBE8")]
		[DebuggerHidden]
		public <WaitForSpawn>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xCBFE68", Offset = "0xCBFE68", VA = "0xCBFE68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xCBFE6C", Offset = "0xCBFE6C", VA = "0xCBFE6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xCC00A4", Offset = "0xCC00A4", VA = "0xCC00A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04180", Offset = "0xA04180")]
	private sealed class <DestroyZone>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedSpawn <>4__this;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0xCBFDF8", Offset = "0xCBFDF8", VA = "0xCBFDF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0xCBFE60", Offset = "0xCBFE60", VA = "0xCBFE60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xCBFC14", Offset = "0xCBFC14", VA = "0xCBFC14")]
		[DebuggerHidden]
		public <DestroyZone>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xCBFC48", Offset = "0xCBFC48", VA = "0xCBFC48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xCBFC4C", Offset = "0xCBFC4C", VA = "0xCBFC4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xCBFE00", Offset = "0xCBFE00", VA = "0xCBFE00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnObject;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EffectOnDestroyZone;

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xCBFA34", Offset = "0xCBFA34", VA = "0xCBFA34")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xCBFB08", Offset = "0xCBFB08", VA = "0xCBFB08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1CFC4", Offset = "0xA1CFC4")]
	private IEnumerator WaitForSpawn()
	{
		return null;
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xCBFB78", Offset = "0xCBFB78", VA = "0xCBFB78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E028", Offset = "0xA1E028")]
	private IEnumerator DestroyZone()
	{
		return null;
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xCBFC40", Offset = "0xCBFC40", VA = "0xCBFC40")]
	public NTVR_SeedSpawn()
	{
	}
}
[Token(Token = "0x20000F6")]
public class NTVR_Supersample_HighQuality : MonoBehaviour
{
	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float superSample;

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xCC010C", Offset = "0xCC010C", VA = "0xCC010C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xCC0110", Offset = "0xCC0110", VA = "0xCC0110")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xCC0114", Offset = "0xCC0114", VA = "0xCC0114")]
	public NTVR_Supersample_HighQuality()
	{
	}
}
[Token(Token = "0x20000F7")]
public class NTVR_TeleportCheckerMessage : MonoBehaviour
{
	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MovementTeleport;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform teleportHelp;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pointer;

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xCC0124", Offset = "0xCC0124", VA = "0xCC0124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xCC01FC", Offset = "0xCC01FC", VA = "0xCC01FC")]
	public void TeleportMessage()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xCC0258", Offset = "0xCC0258", VA = "0xCC0258")]
	public void TeleportMessageOff()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xCC02B4", Offset = "0xCC02B4", VA = "0xCC02B4")]
	public NTVR_TeleportCheckerMessage()
	{
	}
}
[Token(Token = "0x20000F8")]
public class NTVR_Toggle_TimeOfDay : MonoBehaviour
{
	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject toggleDay;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject toggleNight;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject water;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objectLUT;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material matGrass;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material matGrassBackground;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material matFlowers;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material matGroundCover;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material matSpritesA;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material matSpritesB;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material matSpritesC;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material matTreeWallA;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material matTreeWallB;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material matTreeWallC;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material matBackgroundA;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material matBackgroundB;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material matLeavesA;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material matLeavesB;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material matParticlesA;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material matParticlesB;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material matMiscA;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material matMiscB;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material matMiscC;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Color colDay;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color colNight;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color colAlt1;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Color colAlt2;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Texture TextureLUTday;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Texture TextureLUTnight;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Texture waterReflectionDay;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Texture waterReflectionNight;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Light sunLight;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Flare sunflare01;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Flare sunflare02;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Material Skybox01;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Color fogColor01;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Color ambientcolor01;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float fogdensity01;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Vector3 sunDirection01;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float sunIntensity01;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public Color sunColor01;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Material Skybox02;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Color fogColor02;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Color ambientcolor02;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float fogdensity02;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public Vector3 sunDirection02;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float sunIntensity02;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public Color sunColor02;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool pressed;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xCBEE44", Offset = "0xCBEE44", VA = "0xCBEE44")]
	public void timeOfDayChange()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xCC02BC", Offset = "0xCC02BC", VA = "0xCC02BC")]
	public NTVR_Toggle_TimeOfDay()
	{
	}
}
[Token(Token = "0x20000F9")]
public class NTVR_Toggle_Weather : MonoBehaviour
{
	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject toggleObject;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject toggleStaticObject;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool pressed;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xCBF880", Offset = "0xCBF880", VA = "0xCBF880")]
	public void weatherChange()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xCC0360", Offset = "0xCC0360", VA = "0xCC0360")]
	public NTVR_Toggle_Weather()
	{
	}
}
[Token(Token = "0x20000FA")]
public class NTVR_UI_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04190", Offset = "0xA04190")]
	private sealed class <LoadFade1>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0xCC10C0", Offset = "0xCC10C0", VA = "0xCC10C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0xCC1128", Offset = "0xCC1128", VA = "0xCC1128", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xCC0B00", Offset = "0xCC0B00", VA = "0xCC0B00")]
		[DebuggerHidden]
		public <LoadFade1>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xCC0FC4", Offset = "0xCC0FC4", VA = "0xCC0FC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xCC0FC8", Offset = "0xCC0FC8", VA = "0xCC0FC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xCC10C8", Offset = "0xCC10C8", VA = "0xCC10C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA041A0", Offset = "0xA041A0")]
	private sealed class <LoadFade2>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0xCC122C", Offset = "0xCC122C", VA = "0xCC122C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0xCC1294", Offset = "0xCC1294", VA = "0xCC1294", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xCC0B2C", Offset = "0xCC0B2C", VA = "0xCC0B2C")]
		[DebuggerHidden]
		public <LoadFade2>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xCC1130", Offset = "0xCC1130", VA = "0xCC1130", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xCC1134", Offset = "0xCC1134", VA = "0xCC1134", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xCC1234", Offset = "0xCC1234", VA = "0xCC1234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA041B0", Offset = "0xA041B0")]
	private sealed class <LoadFade3>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x170001F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xCC1398", Offset = "0xCC1398", VA = "0xCC1398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0xCC1400", Offset = "0xCC1400", VA = "0xCC1400", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xCC0B58", Offset = "0xCC0B58", VA = "0xCC0B58")]
		[DebuggerHidden]
		public <LoadFade3>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xCC129C", Offset = "0xCC129C", VA = "0xCC129C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xCC12A0", Offset = "0xCC12A0", VA = "0xCC12A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xCC13A0", Offset = "0xCC13A0", VA = "0xCC13A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA041C0", Offset = "0xA041C0")]
	private sealed class <LoadFade4>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x170001F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xCC1504", Offset = "0xCC1504", VA = "0xCC1504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0xCC156C", Offset = "0xCC156C", VA = "0xCC156C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xCC0B84", Offset = "0xCC0B84", VA = "0xCC0B84")]
		[DebuggerHidden]
		public <LoadFade4>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xCC1408", Offset = "0xCC1408", VA = "0xCC1408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xCC140C", Offset = "0xCC140C", VA = "0xCC140C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xCC150C", Offset = "0xCC150C", VA = "0xCC150C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA041D0", Offset = "0xA041D0")]
	private sealed class <LoadFade5>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x170001FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xCC1670", Offset = "0xCC1670", VA = "0xCC1670", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0xCC16D8", Offset = "0xCC16D8", VA = "0xCC16D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xCC0BB0", Offset = "0xCC0BB0", VA = "0xCC0BB0")]
		[DebuggerHidden]
		public <LoadFade5>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xCC1574", Offset = "0xCC1574", VA = "0xCC1574", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xCC1578", Offset = "0xCC1578", VA = "0xCC1578", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xCC1678", Offset = "0xCC1678", VA = "0xCC1678", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000422")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA041E0", Offset = "0xA041E0")]
	private sealed class <LoadFade6>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x170001FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xCC17DC", Offset = "0xCC17DC", VA = "0xCC17DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0xCC1844", Offset = "0xCC1844", VA = "0xCC1844", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xCC0BDC", Offset = "0xCC0BDC", VA = "0xCC0BDC")]
		[DebuggerHidden]
		public <LoadFade6>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xCC16E0", Offset = "0xCC16E0", VA = "0xCC16E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xCC16E4", Offset = "0xCC16E4", VA = "0xCC16E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xCC17E4", Offset = "0xCC17E4", VA = "0xCC17E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000423")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA041F0", Offset = "0xA041F0")]
	private sealed class <LoadFade7>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x170001FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xCC1948", Offset = "0xCC1948", VA = "0xCC1948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0xCC19B0", Offset = "0xCC19B0", VA = "0xCC19B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xCC0C08", Offset = "0xCC0C08", VA = "0xCC0C08")]
		[DebuggerHidden]
		public <LoadFade7>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xCC184C", Offset = "0xCC184C", VA = "0xCC184C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xCC1850", Offset = "0xCC1850", VA = "0xCC1850", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xCC1950", Offset = "0xCC1950", VA = "0xCC1950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000424")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04200", Offset = "0xA04200")]
	private sealed class <LoadFade8>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x17000200")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xCC1AB4", Offset = "0xCC1AB4", VA = "0xCC1AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0xCC1B1C", Offset = "0xCC1B1C", VA = "0xCC1B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xCC0C34", Offset = "0xCC0C34", VA = "0xCC0C34")]
		[DebuggerHidden]
		public <LoadFade8>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xCC19B8", Offset = "0xCC19B8", VA = "0xCC19B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xCC19BC", Offset = "0xCC19BC", VA = "0xCC19BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xCC1ABC", Offset = "0xCC1ABC", VA = "0xCC1ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04210", Offset = "0xA04210")]
	private sealed class <LoadFade9>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x17000202")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0xCC1C20", Offset = "0xCC1C20", VA = "0xCC1C20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0xCC1C88", Offset = "0xCC1C88", VA = "0xCC1C88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xCC0C60", Offset = "0xCC0C60", VA = "0xCC0C60")]
		[DebuggerHidden]
		public <LoadFade9>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xCC1B24", Offset = "0xCC1B24", VA = "0xCC1B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xCC1B28", Offset = "0xCC1B28", VA = "0xCC1B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xCC1C28", Offset = "0xCC1C28", VA = "0xCC1C28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04220", Offset = "0xA04220")]
	private sealed class <LoadFade10>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0xCC0DE8", Offset = "0xCC0DE8", VA = "0xCC0DE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0xCC0E50", Offset = "0xCC0E50", VA = "0xCC0E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xCC0C8C", Offset = "0xCC0C8C", VA = "0xCC0C8C")]
		[DebuggerHidden]
		public <LoadFade10>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xCC0CEC", Offset = "0xCC0CEC", VA = "0xCC0CEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xCC0CF0", Offset = "0xCC0CF0", VA = "0xCC0CF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xCC0DF0", Offset = "0xCC0DF0", VA = "0xCC0DF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04230", Offset = "0xA04230")]
	private sealed class <LoadFade11>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x17000206")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0xCC0F54", Offset = "0xCC0F54", VA = "0xCC0F54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019DB")]
			[Address(RVA = "0xCC0FBC", Offset = "0xCC0FBC", VA = "0xCC0FBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xCC0CB8", Offset = "0xCC0CB8", VA = "0xCC0CB8")]
		[DebuggerHidden]
		public <LoadFade11>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xCC0E58", Offset = "0xCC0E58", VA = "0xCC0E58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xCC0E5C", Offset = "0xCC0E5C", VA = "0xCC0E5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xCC0F5C", Offset = "0xCC0F5C", VA = "0xCC0F5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SceneName1;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string SceneName2;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string SceneName3;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string SceneName4;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string SceneName5;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string SceneName6;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string SceneName7;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string SceneName8;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string SceneName9;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string SceneName10;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string SceneName11;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject fadeObject;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool loading;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xCC0368", Offset = "0xCC0368", VA = "0xCC0368")]
	private void Start()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xCC0370", Offset = "0xCC0370", VA = "0xCC0370")]
	public void LoadLevel1()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xCC0420", Offset = "0xCC0420", VA = "0xCC0420")]
	public void LoadLevel2()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xCC04D0", Offset = "0xCC04D0", VA = "0xCC04D0")]
	public void LoadLevel3()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xCC0580", Offset = "0xCC0580", VA = "0xCC0580")]
	public void LoadLevel4()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xCC0630", Offset = "0xCC0630", VA = "0xCC0630")]
	public void LoadLevel5()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xCC06E0", Offset = "0xCC06E0", VA = "0xCC06E0")]
	public void LoadLevel6()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xCC0790", Offset = "0xCC0790", VA = "0xCC0790")]
	public void LoadLevel7()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xCC0840", Offset = "0xCC0840", VA = "0xCC0840")]
	public void LoadLevel8()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xCC08F0", Offset = "0xCC08F0", VA = "0xCC08F0")]
	public void LoadLevel9()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xCC09A0", Offset = "0xCC09A0", VA = "0xCC09A0")]
	public void LoadLevel10()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xCC0A50", Offset = "0xCC0A50", VA = "0xCC0A50")]
	public void LoadLevel11()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xCC03B0", Offset = "0xCC03B0", VA = "0xCC03B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E08C", Offset = "0xA1E08C")]
	private IEnumerator LoadFade1()
	{
		return null;
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xCC0460", Offset = "0xCC0460", VA = "0xCC0460")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E0F0", Offset = "0xA1E0F0")]
	private IEnumerator LoadFade2()
	{
		return null;
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xCC0510", Offset = "0xCC0510", VA = "0xCC0510")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E154", Offset = "0xA1E154")]
	private IEnumerator LoadFade3()
	{
		return null;
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xCC05C0", Offset = "0xCC05C0", VA = "0xCC05C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E1B8", Offset = "0xA1E1B8")]
	private IEnumerator LoadFade4()
	{
		return null;
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xCC0670", Offset = "0xCC0670", VA = "0xCC0670")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E21C", Offset = "0xA1E21C")]
	private IEnumerator LoadFade5()
	{
		return null;
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xCC0720", Offset = "0xCC0720", VA = "0xCC0720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E280", Offset = "0xA1E280")]
	private IEnumerator LoadFade6()
	{
		return null;
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xCC07D0", Offset = "0xCC07D0", VA = "0xCC07D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E2E4", Offset = "0xA1E2E4")]
	private IEnumerator LoadFade7()
	{
		return null;
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xCC0880", Offset = "0xCC0880", VA = "0xCC0880")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E348", Offset = "0xA1E348")]
	private IEnumerator LoadFade8()
	{
		return null;
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xCC0930", Offset = "0xCC0930", VA = "0xCC0930")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E3AC", Offset = "0xA1E3AC")]
	private IEnumerator LoadFade9()
	{
		return null;
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xCC09E0", Offset = "0xCC09E0", VA = "0xCC09E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E410", Offset = "0xA1E410")]
	private IEnumerator LoadFade10()
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xCC0A90", Offset = "0xCC0A90", VA = "0xCC0A90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E474", Offset = "0xA1E474")]
	private IEnumerator LoadFade11()
	{
		return null;
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xCC0CE4", Offset = "0xCC0CE4", VA = "0xCC0CE4")]
	public NTVR_UI_LoadLevel()
	{
	}
}
[Token(Token = "0x20000FB")]
public class NTVR_UI_MainMenuHelp : MonoBehaviour
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform menuHelp;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button pauseButton;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OVRInput.Button pauseButton2;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRInput.Button pauseButton3;

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xCC1C90", Offset = "0xCC1C90", VA = "0xCC1C90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xCC1D94", Offset = "0xCC1D94", VA = "0xCC1D94")]
	public void PauseMenu()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xCC1E00", Offset = "0xCC1E00", VA = "0xCC1E00")]
	public NTVR_UI_MainMenuHelp()
	{
	}
}
[Token(Token = "0x20000FC")]
public class NTVR_UI_Pause : MonoBehaviour
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform progressBar;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform canvas;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pauseMenu;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform settingsMenu;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform controlsMenu;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject pointer;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject playerMovement;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Player;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public OVRInput.Button pauseButton;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public OVRInput.Button pauseButton2;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OVRInput.Button pauseButton3;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FB04", Offset = "0xA0FB04")]
	public Transform playerCamera;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 offset;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float distance;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xCC1E08", Offset = "0xCC1E08", VA = "0xCC1E08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xCC1E84", Offset = "0xCC1E84", VA = "0xCC1E84")]
	private void Update()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xCC1F88", Offset = "0xCC1F88", VA = "0xCC1F88")]
	public void Pause()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xCC2108", Offset = "0xCC2108", VA = "0xCC2108")]
	private void RepositionUI()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xCC2380", Offset = "0xCC2380", VA = "0xCC2380")]
	public void Settings(bool Open)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xCC2418", Offset = "0xCC2418", VA = "0xCC2418")]
	public void Controls(bool Open)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xCC24B0", Offset = "0xCC24B0", VA = "0xCC24B0")]
	public NTVR_UI_Pause()
	{
	}
}
[Token(Token = "0x20000FD")]
public class NTVR_UI_Save : MonoBehaviour
{
	[Token(Token = "0x2000428")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04240", Offset = "0xA04240")]
	private sealed class <LoadMenu1>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_Save <>4__this;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0xCC2718", Offset = "0xCC2718", VA = "0xCC2718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0xCC2780", Offset = "0xCC2780", VA = "0xCC2780", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xCC2560", Offset = "0xCC2560", VA = "0xCC2560")]
		[DebuggerHidden]
		public <LoadMenu1>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xCC2594", Offset = "0xCC2594", VA = "0xCC2594", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xCC2598", Offset = "0xCC2598", VA = "0xCC2598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xCC2720", Offset = "0xCC2720", VA = "0xCC2720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SceneName;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fadeObject;

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xCC24C4", Offset = "0xCC24C4", VA = "0xCC24C4")]
	public void LoadMenu()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xCC24F0", Offset = "0xCC24F0", VA = "0xCC24F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E4D8", Offset = "0xA1E4D8")]
	private IEnumerator LoadMenu1()
	{
		return null;
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xCC258C", Offset = "0xCC258C", VA = "0xCC258C")]
	public NTVR_UI_Save()
	{
	}
}
[Token(Token = "0x20000FE")]
public class NTVR_UI_Settings : MonoBehaviour
{
	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject audioVisHolder;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lotusHolder;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider volumeSliderMusic;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle toggleVis;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle toggleLotus;

	[Token(Token = "0x40007AA")]
	private const string MUSIC_VOLUME_PREF = "music-volume";

	[Token(Token = "0x40007AB")]
	private const string LOCOMOTION_PREF = "locomotion";

	[Token(Token = "0x40007AC")]
	private const string VIS_PREF = "vis";

	[Token(Token = "0x40007AD")]
	private const string LOTUS_PREF = "lotus";

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xCC2788", Offset = "0xCC2788", VA = "0xCC2788")]
	private void Start()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xCC2880", Offset = "0xCC2880", VA = "0xCC2880")]
	public void OnChangeMusicVolume(float value)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xCC28E8", Offset = "0xCC28E8", VA = "0xCC28E8")]
	public void OnToggleVis(bool state)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xCC29F4", Offset = "0xCC29F4", VA = "0xCC29F4")]
	public void OnToggleLotus(bool state)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xCC28DC", Offset = "0xCC28DC", VA = "0xCC28DC")]
	private void SetPref(string key, float value)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xCC2A7C", Offset = "0xCC2A7C", VA = "0xCC2A7C")]
	private void SetPref(string key, string value)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xCC2A8C", Offset = "0xCC2A8C", VA = "0xCC2A8C")]
	private void SetPref(string key, int value)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xCC2970", Offset = "0xCC2970", VA = "0xCC2970")]
	private void SetPref(string key, bool value)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xCC2A9C", Offset = "0xCC2A9C", VA = "0xCC2A9C")]
	public static void SetBool(string key, bool state)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xCC2860", Offset = "0xCC2860", VA = "0xCC2860")]
	public static bool GetBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xCC2AA8", Offset = "0xCC2AA8", VA = "0xCC2AA8")]
	public NTVR_UI_Settings()
	{
	}
}
[Token(Token = "0x20000FF")]
public class NTVR_UI_SoundFX : MonoBehaviour
{
	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource SoundsSourceUI;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip hover;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip click;

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xCC2AB0", Offset = "0xCC2AB0", VA = "0xCC2AB0")]
	public void OnHover()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xCC2AD4", Offset = "0xCC2AD4", VA = "0xCC2AD4")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xCC2AF8", Offset = "0xCC2AF8", VA = "0xCC2AF8")]
	public NTVR_UI_SoundFX()
	{
	}
}
[Token(Token = "0x2000100")]
public class NTVR_VisDropSeed : MonoBehaviour
{
	[Token(Token = "0x2000429")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04250", Offset = "0xA04250")]
	private sealed class <WaitForSpawn>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_VisDropSeed <>4__this;

		[Token(Token = "0x1700020A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xCC2E78", Offset = "0xCC2E78", VA = "0xCC2E78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0xCC2EE0", Offset = "0xCC2EE0", VA = "0xCC2EE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xCC2C10", Offset = "0xCC2C10", VA = "0xCC2C10")]
		[DebuggerHidden]
		public <WaitForSpawn>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xCC2C44", Offset = "0xCC2C44", VA = "0xCC2C44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xCC2C48", Offset = "0xCC2C48", VA = "0xCC2C48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xCC2E80", Offset = "0xCC2E80", VA = "0xCC2E80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnGrowObject;

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xCC2B00", Offset = "0xCC2B00", VA = "0xCC2B00")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xCC2BA0", Offset = "0xCC2BA0", VA = "0xCC2BA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E53C", Offset = "0xA1E53C")]
	private IEnumerator WaitForSpawn()
	{
		return null;
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xCC2C3C", Offset = "0xCC2C3C", VA = "0xCC2C3C")]
	public NTVR_VisDropSeed()
	{
	}
}
[Token(Token = "0x2000101")]
public class NTVR_Waves : MonoBehaviour
{
	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float perlinScale;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waveSpeed;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waveHeight;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh mesh;

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xCC32D0", Offset = "0xCC32D0", VA = "0xCC32D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xCC32D4", Offset = "0xCC32D4", VA = "0xCC32D4")]
	private void AnimateMesh()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xCC349C", Offset = "0xCC349C", VA = "0xCC349C")]
	public NTVR_Waves()
	{
	}
}
[Token(Token = "0x2000102")]
public class SimpleTweener : MonoBehaviour
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 scaleTo;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tweenTime;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Ease easeType;

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xCE3020", Offset = "0xCE3020", VA = "0xCE3020")]
	private void Start()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xCE3024", Offset = "0xCE3024", VA = "0xCE3024")]
	private void Update()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xCE30AC", Offset = "0xCE30AC", VA = "0xCE30AC")]
	public SimpleTweener()
	{
	}
}
[Token(Token = "0x2000103")]
public class SpawningManager : MonoBehaviour
{
	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FB3C", Offset = "0xA0FB3C")]
	public List<GameObject> objectList;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxObjects;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpawningManager instance;

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xCE94FC", Offset = "0xCE94FC", VA = "0xCE94FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xCE9578", Offset = "0xCE9578", VA = "0xCE9578")]
	public void AddObject(GameObject holder)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xCE9668", Offset = "0xCE9668", VA = "0xCE9668")]
	public SpawningManager()
	{
	}
}
[Token(Token = "0x2000104")]
public class Test_DeletePlayerPrefs : MonoBehaviour
{
	[Token(Token = "0x600079F")]
	[Address(RVA = "0xDF73B0", Offset = "0xDF73B0", VA = "0xDF73B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xDF73B8", Offset = "0xDF73B8", VA = "0xDF73B8")]
	public Test_DeletePlayerPrefs()
	{
	}
}
[Token(Token = "0x2000105")]
public class Test_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OVRInput.Button loadButton;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string leveltoload;

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xDF73C0", Offset = "0xDF73C0", VA = "0xDF73C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xDF7470", Offset = "0xDF7470", VA = "0xDF7470")]
	public Test_LoadLevel()
	{
	}
}
[Token(Token = "0x2000106")]
public class Test_Load_2 : MonoBehaviour
{
	[Token(Token = "0x200042A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04260", Offset = "0xA04260")]
	private sealed class <LoadLevel>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Test_Load_2 <>4__this;

		[Token(Token = "0x1700020C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0xDF762C", Offset = "0xDF762C", VA = "0xDF762C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0xDF7694", Offset = "0xDF7694", VA = "0xDF7694", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xDF7524", Offset = "0xDF7524", VA = "0xDF7524")]
		[DebuggerHidden]
		public <LoadLevel>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xDF7558", Offset = "0xDF7558", VA = "0xDF7558", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xDF755C", Offset = "0xDF755C", VA = "0xDF755C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xDF7634", Offset = "0xDF7634", VA = "0xDF7634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string leveltoload;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xDF7488", Offset = "0xDF7488", VA = "0xDF7488")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xDF74B4", Offset = "0xDF74B4", VA = "0xDF74B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E5A0", Offset = "0xA1E5A0")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xDF7550", Offset = "0xDF7550", VA = "0xDF7550")]
	public Test_Load_2()
	{
	}
}
[Token(Token = "0x2000107")]
public class Test_PlayerController : MonoBehaviour
{
	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bulletPrefab;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bulletSpawn;

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xDF769C", Offset = "0xDF769C", VA = "0xDF769C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xDF77B4", Offset = "0xDF77B4", VA = "0xDF77B4")]
	private void Fire()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xDF792C", Offset = "0xDF792C", VA = "0xDF792C")]
	public Test_PlayerController()
	{
	}
}
[Token(Token = "0x2000108")]
public class Test_ScaleTween : MonoBehaviour
{
	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 scaleTo;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tweenTime;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Ease easeType;

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xDF7934", Offset = "0xDF7934", VA = "0xDF7934")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xDF79A0", Offset = "0xDF79A0", VA = "0xDF79A0")]
	public Test_ScaleTween()
	{
	}
}
[Token(Token = "0x2000109")]
public class Test_SpawnLimit : MonoBehaviour
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FB74", Offset = "0xA0FB74")]
	public GameObject prefabToSpawn;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particlePoof;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FBAC", Offset = "0xA0FBAC")]
	public int spawnLimit;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FBE4", Offset = "0xA0FBE4")]
	public List<GameObject> spawnedObjectList;

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xDF79B0", Offset = "0xDF79B0", VA = "0xDF79B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xDF7A18", Offset = "0xDF7A18", VA = "0xDF7A18")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xDF7A54", Offset = "0xDF7A54", VA = "0xDF7A54")]
	private void CreateObject()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xDF7C0C", Offset = "0xDF7C0C", VA = "0xDF7C0C")]
	private void CreatePoof(Transform where)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xDF7D10", Offset = "0xDF7D10", VA = "0xDF7D10")]
	public Test_SpawnLimit()
	{
	}
}
[Token(Token = "0x200010A")]
public class Test_SpawnOnCol : MonoBehaviour
{
	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xDF7D20", Offset = "0xDF7D20", VA = "0xDF7D20")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xDF7D24", Offset = "0xDF7D24", VA = "0xDF7D24")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xDF7D28", Offset = "0xDF7D28", VA = "0xDF7D28")]
	public Test_SpawnOnCol()
	{
	}
}
[Token(Token = "0x200010B")]
public class Test_Toggle_Cubemap : MonoBehaviour
{
	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject water;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture waterReflection;

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xDF7D30", Offset = "0xDF7D30", VA = "0xDF7D30")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xDF7DCC", Offset = "0xDF7DCC", VA = "0xDF7DCC")]
	public Test_Toggle_Cubemap()
	{
	}
}
[Token(Token = "0x200010C")]
public class Test_Toggle_Lut : MonoBehaviour
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectLut;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture TextureLUTnight;

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xDF7DD4", Offset = "0xDF7DD4", VA = "0xDF7DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xDF7E68", Offset = "0xDF7E68", VA = "0xDF7E68")]
	public Test_Toggle_Lut()
	{
	}
}
[Token(Token = "0x200010D")]
public class Test_Toggle_MatColor : MonoBehaviour
{
	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject nightMat;

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xDF7E70", Offset = "0xDF7E70", VA = "0xDF7E70")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xDF7F2C", Offset = "0xDF7F2C", VA = "0xDF7F2C")]
	public Test_Toggle_MatColor()
	{
	}
}
[Token(Token = "0x200010E")]
public class NTVR_AnimalSoundRandom : MonoBehaviour
{
	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource randomSound;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioSources;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int mint;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxt;

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xCB927C", Offset = "0xCB927C", VA = "0xCB927C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xCB9280", Offset = "0xCB9280", VA = "0xCB9280")]
	private void CallAudio()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xCB92E4", Offset = "0xCB92E4", VA = "0xCB92E4")]
	private void RandomSoundness()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xCB936C", Offset = "0xCB936C", VA = "0xCB936C")]
	public NTVR_AnimalSoundRandom()
	{
	}
}
[Token(Token = "0x200010F")]
public class Waterfall_Scroll_Quest : MonoBehaviour
{
	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeed;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x210EE90", Offset = "0x210EE90", VA = "0x210EE90")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x210EEE8", Offset = "0x210EEE8", VA = "0x210EEE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x210EF90", Offset = "0x210EF90", VA = "0x210EF90")]
	public Waterfall_Scroll_Quest()
	{
	}
}
[Serializable]
[Token(Token = "0x2000110")]
public class Observer_CustomEvent
{
	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string timestamp;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string type;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string id;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string session;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string user;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Observer_KeyValuePair> parameters;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Observer_CustomEvent> tempQueue;

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xCCAEB0", Offset = "0xCCAEB0", VA = "0xCCAEB0")]
	public Observer_CustomEvent(string type)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xCCB3A8", Offset = "0xCCB3A8", VA = "0xCCB3A8")]
	public Observer_CustomEvent AddParameter(string key, string value)
	{
		return null;
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xCC5048", Offset = "0xCC5048", VA = "0xCC5048")]
	public Observer_CustomEvent AddParameter(string key, float value)
	{
		return null;
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xCCB478", Offset = "0xCCB478", VA = "0xCCB478")]
	public Observer_CustomEvent AddParameter(string key, double value)
	{
		return null;
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xCCB588", Offset = "0xCCB588", VA = "0xCCB588")]
	public Observer_CustomEvent AddParameter(string key, int value)
	{
		return null;
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xCCB66C", Offset = "0xCCB66C", VA = "0xCCB66C")]
	public Observer_CustomEvent AddParameter(string key, bool value)
	{
		return null;
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xCCB754", Offset = "0xCCB754", VA = "0xCCB754")]
	public Observer_CustomEvent AddParameter(string key, Vector3 value)
	{
		return null;
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xCCB850", Offset = "0xCCB850", VA = "0xCCB850")]
	public Observer_CustomEvent AddParameter(string key, string[] value)
	{
		return null;
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xCC5158", Offset = "0xCC5158", VA = "0xCC5158")]
	public void EndParameters()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xCCBE9C", Offset = "0xCCBE9C", VA = "0xCCBE9C")]
	public void NoParameters()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xCCBBB4", Offset = "0xCCBBB4", VA = "0xCCBBB4")]
	private static void FlushTempQueue()
	{
	}
}
[Token(Token = "0x2000111")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA012F0", Offset = "0xA012F0")]
public class Observer_EventHandler : MonoBehaviour
{
	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FC1C", Offset = "0xA0FC1C")]
	private static Observer_EventHandler <Instance>k__BackingField;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<string> eventQueue;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool debugMode;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private static bool prettyDebug;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private static bool sendEventsOnDebugMode;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string applicationID;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FC2C", Offset = "0xA0FC2C")]
	public bool Observer_Initialized;

	[Token(Token = "0x17000070")]
	public static Observer_EventHandler Instance
	{
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xCCC798", Offset = "0xCCC798", VA = "0xCCC798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E604", Offset = "0xA1E604")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xCCC7E8", Offset = "0xCCC7E8", VA = "0xCCC7E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E614", Offset = "0xA1E614")]
		private set
		{
		}
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xCCC83C", Offset = "0xCCC83C", VA = "0xCCC83C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xCCC9C8", Offset = "0xCCC9C8", VA = "0xCCC9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xCCCC70", Offset = "0xCCCC70", VA = "0xCCCC70")]
	private void SendStoredData(string _applicationID)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xCCB934", Offset = "0xCCB934", VA = "0xCCB934")]
	public void AddEvent(Observer_CustomEvent e)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xCCCDE4", Offset = "0xCCCDE4", VA = "0xCCCDE4")]
	private static string PrettyDebug(Observer_CustomEvent e)
	{
		return null;
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xCCC610", Offset = "0xCCC610", VA = "0xCCC610")]
	public void SendEvents()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xCCD780", Offset = "0xCCD780", VA = "0xCCD780")]
	public Observer_EventHandler()
	{
	}
}
[Token(Token = "0x2000112")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA01300", Offset = "0xA01300")]
public class Observer_Analytics : MonoBehaviour
{
	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FC3C", Offset = "0xA0FC3C")]
	private static Observer_Analytics <Instance>k__BackingField;

	[Token(Token = "0x17000071")]
	public static Observer_Analytics Instance
	{
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xCCB0C0", Offset = "0xCCB0C0", VA = "0xCCB0C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E624", Offset = "0xA1E624")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xCCB110", Offset = "0xCCB110", VA = "0xCCB110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E634", Offset = "0xA1E634")]
		private set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public static bool AnalyticsEnabled
	{
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xCCB164", Offset = "0xCCB164", VA = "0xCCB164")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xCCB1CC", Offset = "0xCCB1CC", VA = "0xCCB1CC")]
		set
		{
		}
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xCCB23C", Offset = "0xCCB23C", VA = "0xCCB23C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xCCB390", Offset = "0xCCB390", VA = "0xCCB390")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xCCB398", Offset = "0xCCB398", VA = "0xCCB398")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xCCB3A0", Offset = "0xCCB3A0", VA = "0xCCB3A0")]
	public Observer_Analytics()
	{
	}
}
[Token(Token = "0x2000113")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA01310", Offset = "0xA01310")]
public class Observer_ErrorReporter : MonoBehaviour
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool logTrackingEnabled;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<string> _logs;

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xCCC108", Offset = "0xCCC108", VA = "0xCCC108")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xCCC264", Offset = "0xCCC264", VA = "0xCCC264")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xCCC2F0", Offset = "0xCCC2F0", VA = "0xCCC2F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xCCC37C", Offset = "0xCCC37C", VA = "0xCCC37C")]
	private void LogHandler(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xCCC790", Offset = "0xCCC790", VA = "0xCCC790")]
	public Observer_ErrorReporter()
	{
	}
}
[Token(Token = "0x2000114")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA01320", Offset = "0xA01320")]
public class Observer_GeneralFOV : MonoBehaviour
{
	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool generalFOVTrackingEnabled;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float generalFOVMaxDistance;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float generalFOVInterval;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float _timeCounterFOV;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool debugMode;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Camera cam;

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xCCD788", Offset = "0xCCD788", VA = "0xCCD788")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xCCD970", Offset = "0xCCD970", VA = "0xCCD970")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xCCDCF4", Offset = "0xCCDCF4", VA = "0xCCDCF4")]
	public Observer_GeneralFOV()
	{
	}
}
[Token(Token = "0x2000115")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA01330", Offset = "0xA01330")]
public class Observer_Performance : MonoBehaviour
{
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool performanceTrackingEnabled;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float _frameCounter;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float _timeCounter;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float _lastFramerate;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float minFramerateThreshold;

	[Token(Token = "0x40007F6")]
	private const float Interval = 5f;

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xCCDCFC", Offset = "0xCCDCFC", VA = "0xCCDCFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xCCDE3C", Offset = "0xCCDE3C", VA = "0xCCDE3C")]
	private static void GetPerformanceObjects(float _framerate)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xCCDF10", Offset = "0xCCDF10", VA = "0xCCDF10")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xCCDFEC", Offset = "0xCCDFEC", VA = "0xCCDFEC")]
	public Observer_Performance()
	{
	}
}
[Token(Token = "0x2000116")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA01340", Offset = "0xA01340")]
public class Observer_PlayerTracking : MonoBehaviour
{
	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Camera cam;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool positionalTrackingEnabled;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float positionalTrackingInterval;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool lostTrackingGlobal;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float _timeCounterPosition;

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xCCDFF4", Offset = "0xCCDFF4", VA = "0xCCDFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xCCE1B4", Offset = "0xCCE1B4", VA = "0xCCE1B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xCCE5F0", Offset = "0xCCE5F0", VA = "0xCCE5F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xCCE5F4", Offset = "0xCCE5F4", VA = "0xCCE5F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xCCE5F8", Offset = "0xCCE5F8", VA = "0xCCE5F8")]
	public Observer_PlayerTracking()
	{
	}
}
[Token(Token = "0x2000117")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA01350", Offset = "0xA01350")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA01350", Offset = "0xA01350")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA01350", Offset = "0xA01350")]
public class Observer_Session : MonoBehaviour
{
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings _settings;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FC4C", Offset = "0xA0FC4C")]
	private static Observer_Session <Instance>k__BackingField;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float maxSessionDurationInSeconds;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FC5C", Offset = "0xA0FC5C")]
	public string sessionID;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FC6C", Offset = "0xA0FC6C")]
	public bool isQuitting;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool isPaused;

	[Token(Token = "0x17000073")]
	public static Observer_Session Instance
	{
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xCCE600", Offset = "0xCCE600", VA = "0xCCE600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E644", Offset = "0xA1E644")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xCCE650", Offset = "0xCCE650", VA = "0xCCE650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E654", Offset = "0xA1E654")]
		private set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public Observer_ProjectSettings Settings
	{
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xCCE6A4", Offset = "0xCCE6A4", VA = "0xCCE6A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xCCE6F4", Offset = "0xCCE6F4", VA = "0xCCE6F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xCCE880", Offset = "0xCCE880", VA = "0xCCE880")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xCCEA14", Offset = "0xCCEA14", VA = "0xCCEA14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xCCEAEC", Offset = "0xCCEAEC", VA = "0xCCEAEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xCCEBC4", Offset = "0xCCEBC4", VA = "0xCCEBC4")]
	private static void SceneLoaded(Scene arg0, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xCCEC6C", Offset = "0xCCEC6C", VA = "0xCCEC6C")]
	private static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xCCED14", Offset = "0xCCED14", VA = "0xCCED14")]
	public void CreateNewSession()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xCCEF04", Offset = "0xCCEF04", VA = "0xCCEF04")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xCCF01C", Offset = "0xCCF01C", VA = "0xCCF01C")]
	private void EndSession()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xCCE9FC", Offset = "0xCCE9FC", VA = "0xCCE9FC")]
	private static float ConvertHoursToSeconds(int hours)
	{
		return default(float);
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xCCF0F8", Offset = "0xCCF0F8", VA = "0xCCF0F8")]
	private static void ForceShutoffAnalytics()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xCCF1BC", Offset = "0xCCF1BC", VA = "0xCCF1BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xCCF228", Offset = "0xCCF228", VA = "0xCCF228")]
	public Observer_Session()
	{
	}
}
[Token(Token = "0x2000118")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA013EC", Offset = "0xA013EC")]
public class Observer_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FC7C", Offset = "0xA0FC7C")]
	public string nickname;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FC8C", Offset = "0xA0FC8C")]
	public float minimumFOVThreshold;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FC9C", Offset = "0xA0FC9C")]
	public float leftThreshold;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FCAC", Offset = "0xA0FCAC")]
	public float rightThreshold;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FCBC", Offset = "0xA0FCBC")]
	public float downThreshold;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FCCC", Offset = "0xA0FCCC")]
	public float upThreshold;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FCDC", Offset = "0xA0FCDC")]
	public bool checkLineOfSight;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FCEC", Offset = "0xA0FCEC")]
	public bool checkDistance;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FCFC", Offset = "0xA0FCFC")]
	public float maxDistance;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FD0C", Offset = "0xA0FD0C")]
	public bool FOVDebug;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool inFOV;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool debugMode;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string fovStartTime;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider objCollider;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer objRenderer;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Camera cam;

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xCCF230", Offset = "0xCCF230", VA = "0xCCF230")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xCCF460", Offset = "0xCCF460", VA = "0xCCF460")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xCCFA58", Offset = "0xCCFA58", VA = "0xCCFA58")]
	public Observer_TrackedObject()
	{
	}
}
[Token(Token = "0x2000119")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA013FC", Offset = "0xA013FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA013FC", Offset = "0xA013FC")]
[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0xA013FC", Offset = "0xA013FC")]
public class Observer_User : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200042B")]
	public class Observer_UserInfo
	{
		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string city;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string country_code;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string country_name;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string continent_code;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float latitude;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float longitude;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string zip;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string region_name;

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xCD0B8C", Offset = "0xCD0B8C", VA = "0xCD0B8C")]
		public Observer_UserInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04270", Offset = "0xA04270")]
	private sealed class <>c
	{
		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__10_0;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<bool> <>9__11_0;

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xCD0324", Offset = "0xCD0324", VA = "0xCD0324")]
		public <>c()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xCD032C", Offset = "0xCD032C", VA = "0xCD032C")]
		internal bool <UserExists>b__10_0()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xCD0404", Offset = "0xCD0404", VA = "0xCD0404")]
		internal bool <CreateUser>b__11_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04280", Offset = "0xA04280")]
	private sealed class <UserExists>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Observer_User <>4__this;

		[Token(Token = "0x1700020E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0xCD1020", Offset = "0xCD1020", VA = "0xCD1020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0xCD1088", Offset = "0xCD1088", VA = "0xCD1088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xCD0004", Offset = "0xCD0004", VA = "0xCD0004")]
		[DebuggerHidden]
		public <UserExists>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xCD0C64", Offset = "0xCD0C64", VA = "0xCD0C64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xCD0C68", Offset = "0xCD0C68", VA = "0xCD0C68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xCD1028", Offset = "0xCD1028", VA = "0xCD1028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04290", Offset = "0xA04290")]
	private sealed class <CreateUser>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Observer_User <>4__this;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <headset>5__2;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <getUserInfo>5__3;

		[Token(Token = "0x17000210")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0xCD0BF4", Offset = "0xCD0BF4", VA = "0xCD0BF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0xCD0C5C", Offset = "0xCD0C5C", VA = "0xCD0C5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xCD0030", Offset = "0xCD0030", VA = "0xCD0030")]
		[DebuggerHidden]
		public <CreateUser>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xCD04DC", Offset = "0xCD04DC", VA = "0xCD04DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xCD05B8", Offset = "0xCD05B8", VA = "0xCD05B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xCD04F8", Offset = "0xCD04F8", VA = "0xCD04F8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xCD0BFC", Offset = "0xCD0BFC", VA = "0xCD0BFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FD1C", Offset = "0xA0FD1C")]
	private static Observer_User <Instance>k__BackingField;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Observer_UserInfo userInfo;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA0FD2C", Offset = "0xA0FD2C")]
	public string userID;

	[Token(Token = "0x17000075")]
	public static Observer_User Instance
	{
		[Token(Token = "0x6000800")]
		[Address(RVA = "0xCCFA80", Offset = "0xCCFA80", VA = "0xCCFA80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E664", Offset = "0xA1E664")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000801")]
		[Address(RVA = "0xCCFAD0", Offset = "0xCCFAD0", VA = "0xCCFAD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E674", Offset = "0xA1E674")]
		private set
		{
		}
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xCCFB24", Offset = "0xCCFB24", VA = "0xCCFB24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xCCFCB0", Offset = "0xCCFCB0", VA = "0xCCFCB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xCCFF94", Offset = "0xCCFF94", VA = "0xCCFF94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E684", Offset = "0xA1E684")]
	private IEnumerator UserExists()
	{
		return null;
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xCCFF24", Offset = "0xCCFF24", VA = "0xCCFF24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E6E8", Offset = "0xA1E6E8")]
	private IEnumerator CreateUser()
	{
		return null;
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xCD005C", Offset = "0xCD005C", VA = "0xCD005C")]
	private static void SendUserCreateEvent(string headset)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xCD02B8", Offset = "0xCD02B8", VA = "0xCD02B8")]
	public Observer_User()
	{
	}
}
[Token(Token = "0x200011A")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xE57360", Offset = "0xE57360", VA = "0xE57360")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xE574CC", Offset = "0xE574CC", VA = "0xE574CC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xE57870", Offset = "0xE57870", VA = "0xE57870")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xE57A18", Offset = "0xE57A18", VA = "0xE57A18", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xE57A44", Offset = "0xE57A44", VA = "0xE57A44")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200011B")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xEF2C3C", Offset = "0xEF2C3C", VA = "0xEF2C3C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xEF2CC8", Offset = "0xEF2CC8", VA = "0xEF2CC8")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xEF2E34", Offset = "0xEF2E34", VA = "0xEF2E34")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200011C")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000076")]
	public bool IsVisible
	{
		[Token(Token = "0x6000810")]
		[Address(RVA = "0xEA8B80", Offset = "0xEA8B80", VA = "0xEA8B80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000811")]
		[Address(RVA = "0xEA8B88", Offset = "0xEA8B88", VA = "0xEA8B88")]
		set
		{
		}
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xEA8CB0", Offset = "0xEA8CB0", VA = "0xEA8CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xEA8ECC", Offset = "0xEA8ECC", VA = "0xEA8ECC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xEA8ED4", Offset = "0xEA8ED4", VA = "0xEA8ED4")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200011D")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200042F")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xF054EC", Offset = "0xF054EC", VA = "0xF054EC")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000430")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1AED8", Offset = "0xA1AED8")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1AEF0", Offset = "0xA1AEF0")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1AF08", Offset = "0xA1AF08")]
		public float LatencyWeight;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1AF20", Offset = "0xA1AF20")]
		public int MaxSamples;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xF054F4", Offset = "0xF054F4", VA = "0xF054F4")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xF0568C", Offset = "0xF0568C", VA = "0xF0568C")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xF04B88", Offset = "0xF04B88", VA = "0xF04B88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xF04CAC", Offset = "0xF04CAC", VA = "0xF04CAC")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xF05014", Offset = "0xF05014", VA = "0xF05014")]
	private void Update()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xF04F78", Offset = "0xF04F78", VA = "0xF04F78")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xF05270", Offset = "0xF05270", VA = "0xF05270")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xF05600", Offset = "0xF05600", VA = "0xF05600")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200011E")]
public class P2PManager
{
	[Token(Token = "0x2000431")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4001AC5")]
		Update = 1
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xE58980", Offset = "0xE58980", VA = "0xE58980")]
	public P2PManager()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xE58A40", Offset = "0xE58A40", VA = "0xE58A40")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xE58B24", Offset = "0xE58B24", VA = "0xE58B24")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xE58BA8", Offset = "0xE58BA8", VA = "0xE58BA8")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xE58D04", Offset = "0xE58D04", VA = "0xE58D04")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xE58FB4", Offset = "0xE58FB4", VA = "0xE58FB4")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xE593A8", Offset = "0xE593A8", VA = "0xE593A8")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xE5964C", Offset = "0xE5964C", VA = "0xE5964C")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xE59178", Offset = "0xE59178", VA = "0xE59178")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xE5957C", Offset = "0xE5957C", VA = "0xE5957C")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xE59260", Offset = "0xE59260", VA = "0xE59260")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xE59864", Offset = "0xE59864", VA = "0xE59864")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xE591C0", Offset = "0xE591C0", VA = "0xE591C0")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xE595C0", Offset = "0xE595C0", VA = "0xE595C0")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xE59308", Offset = "0xE59308", VA = "0xE59308")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xE598F0", Offset = "0xE598F0", VA = "0xE598F0")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200011F")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xEF26A0", Offset = "0xEF26A0", VA = "0xEF26A0", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xEF26DC", Offset = "0xEF26DC", VA = "0xEF26DC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xEF2714", Offset = "0xEF2714", VA = "0xEF2714", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xEF273C", Offset = "0xEF273C", VA = "0xEF273C")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xEF28DC", Offset = "0xEF28DC", VA = "0xEF28DC")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xEF295C", Offset = "0xEF295C", VA = "0xEF295C")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xEF29B0", Offset = "0xEF29B0", VA = "0xEF29B0")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000120")]
public class RemotePlayer
{
	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xF05714", Offset = "0xF05714", VA = "0xF05714")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000121")]
public class RoomManager
{
	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xD69BE0", Offset = "0xD69BE0", VA = "0xD69BE0")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xD69CAC", Offset = "0xD69CAC", VA = "0xD69CAC")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xD69E0C", Offset = "0xD69E0C", VA = "0xD69E0C")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xD69F1C", Offset = "0xD69F1C", VA = "0xD69F1C")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xD69FD0", Offset = "0xD69FD0", VA = "0xD69FD0")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xD6A104", Offset = "0xD6A104", VA = "0xD6A104")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xD69E3C", Offset = "0xD69E3C", VA = "0xD69E3C")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xD6A190", Offset = "0xD6A190", VA = "0xD6A190")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xD6A82C", Offset = "0xD6A82C", VA = "0xD6A82C")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xD6AAFC", Offset = "0xD6AAFC", VA = "0xD6AAFC")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xD6A430", Offset = "0xD6A430", VA = "0xD6A430")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000122")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000432")]
	public enum State
	{
		[Token(Token = "0x4001AC7")]
		INITIALIZING,
		[Token(Token = "0x4001AC8")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4001AC9")]
		CREATING_A_ROOM,
		[Token(Token = "0x4001ACA")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4001ACB")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001ACC")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001ACD")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001ACE")]
		SHUTDOWN
	}

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000077")]
	public static State CurrentState
	{
		[Token(Token = "0x600084A")]
		[Address(RVA = "0xCE7DD0", Offset = "0xCE7DD0", VA = "0xCE7DD0")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000078")]
	public static ulong MyID
	{
		[Token(Token = "0x600084B")]
		[Address(RVA = "0xCE7E44", Offset = "0xCE7E44", VA = "0xCE7E44")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000079")]
	public static string MyOculusID
	{
		[Token(Token = "0x600084C")]
		[Address(RVA = "0xCE7F1C", Offset = "0xCE7F1C", VA = "0xCE7F1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xCE6068", Offset = "0xCE6068", VA = "0xCE6068", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xCE63F4", Offset = "0xCE63F4", VA = "0xCE63F4", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xCE6AD0", Offset = "0xCE6AD0", VA = "0xCE6AD0")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xCE6D98", Offset = "0xCE6D98", VA = "0xCE6D98", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xCE6D9C", Offset = "0xCE6D9C", VA = "0xCE6D9C")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xCE6E90", Offset = "0xCE6E90", VA = "0xCE6E90")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xCE7584", Offset = "0xCE7584", VA = "0xCE7584")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xCE7A44", Offset = "0xCE7A44", VA = "0xCE7A44")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xCE7C10", Offset = "0xCE7C10", VA = "0xCE7C10")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xCE7D60", Offset = "0xCE7D60", VA = "0xCE7D60")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xCE66F4", Offset = "0xCE66F4", VA = "0xCE66F4")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xCE6C2C", Offset = "0xCE6C2C", VA = "0xCE6C2C")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xCE67A8", Offset = "0xCE67A8", VA = "0xCE67A8")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xCE8030", Offset = "0xCE8030", VA = "0xCE8030")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xCE81B0", Offset = "0xCE81B0", VA = "0xCE81B0")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xCE8298", Offset = "0xCE8298", VA = "0xCE8298")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xCE83BC", Offset = "0xCE83BC", VA = "0xCE83BC")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xCE848C", Offset = "0xCE848C", VA = "0xCE848C")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xCE6CDC", Offset = "0xCE6CDC", VA = "0xCE6CDC")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xCE88B8", Offset = "0xCE88B8", VA = "0xCE88B8")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xCE8944", Offset = "0xCE8944", VA = "0xCE8944")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xCE86DC", Offset = "0xCE86DC", VA = "0xCE86DC")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xCE8B18", Offset = "0xCE8B18", VA = "0xCE8B18")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xCE5FE0", Offset = "0xCE5FE0", VA = "0xCE5FE0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xA1E74C", Offset = "0xA1E74C")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xCE8C54", Offset = "0xCE8C54", VA = "0xCE8C54")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xCE8D1C", Offset = "0xCE8D1C", VA = "0xCE8D1C")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000123")]
public class VoipManager
{
	[Token(Token = "0x600085C")]
	[Address(RVA = "0x210E85C", Offset = "0x210E85C", VA = "0x210E85C")]
	public VoipManager()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x210E91C", Offset = "0x210E91C", VA = "0x210E91C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x210EA00", Offset = "0x210EA00", VA = "0x210EA00")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x210EA84", Offset = "0x210EA84", VA = "0x210EA84")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x210EBE0", Offset = "0x210EBE0", VA = "0x210EBE0")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000124")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xEA880C", Offset = "0xEA880C", VA = "0xEA880C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xEA887C", Offset = "0xEA887C", VA = "0xEA887C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xEA89F8", Offset = "0xEA89F8", VA = "0xEA89F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xEA8A5C", Offset = "0xEA8A5C", VA = "0xEA8A5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xEA88B8", Offset = "0xEA88B8", VA = "0xEA88B8")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xEA8B18", Offset = "0xEA8B18", VA = "0xEA8B18")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xEA8B78", Offset = "0xEA8B78", VA = "0xEA8B78")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000125")]
public class AvatarLayer
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x119C510", Offset = "0x119C510", VA = "0x119C510")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000126")]
public class PacketRecordSettings
{
	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xE5997C", Offset = "0xE5997C", VA = "0xE5997C")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000127")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000433")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xE4AB1C", Offset = "0xE4AB1C", VA = "0xE4AB1C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000434")]
	public enum HandType
	{
		[Token(Token = "0x4001AD1")]
		Right,
		[Token(Token = "0x4001AD2")]
		Left,
		[Token(Token = "0x4001AD3")]
		Max
	}

	[Token(Token = "0x2000435")]
	public enum HandJoint
	{
		[Token(Token = "0x4001AD5")]
		HandBase,
		[Token(Token = "0x4001AD6")]
		IndexBase,
		[Token(Token = "0x4001AD7")]
		IndexTip,
		[Token(Token = "0x4001AD8")]
		ThumbBase,
		[Token(Token = "0x4001AD9")]
		ThumbTip,
		[Token(Token = "0x4001ADA")]
		Max
	}

	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA042A0", Offset = "0xA042A0")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000212")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0xE4AAAC", Offset = "0xE4AAAC", VA = "0xE4AAAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xE4AB14", Offset = "0xE4AB14", VA = "0xE4AB14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xE4A8F0", Offset = "0xE4A8F0", VA = "0xE4A8F0")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xE4A91C", Offset = "0xE4A91C", VA = "0xE4A91C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xE4A920", Offset = "0xE4A920", VA = "0xE4A920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xE4AAB4", Offset = "0xE4AAB4", VA = "0xE4AAB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FD4C", Offset = "0xA0FD4C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FD84", Offset = "0xA0FD84")]
	public bool EnableBody;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FDBC", Offset = "0xA0FDBC")]
	public bool RecordPackets;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FDF4", Offset = "0xA0FDF4")]
	public bool StartWithControllers;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FE2C", Offset = "0xA0FE2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FE2C", Offset = "0xA0FE2C")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FE9C", Offset = "0xA0FE9C")]
	private bool CombineMeshes;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FED4", Offset = "0xA0FED4")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FF0C", Offset = "0xA0FF0C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0FF44", Offset = "0xA0FF44")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0FF7C", Offset = "0xA0FF7C")]
	public bool EnableLaughter;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400089C")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400089E")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400089F")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40008A0")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40008A1")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40008A2")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xC33DD4", Offset = "0xC33DD4", VA = "0xC33DD4")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xC3413C", Offset = "0xC3413C", VA = "0xC3413C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xC341C8", Offset = "0xC341C8", VA = "0xC341C8")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xC34234", Offset = "0xC34234", VA = "0xC34234")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xC3435C", Offset = "0xC3435C", VA = "0xC3435C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xC34440", Offset = "0xC34440", VA = "0xC34440")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xC34520", Offset = "0xC34520", VA = "0xC34520")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xC34708", Offset = "0xC34708", VA = "0xC34708")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xC347D0", Offset = "0xC347D0", VA = "0xC347D0")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xC34854", Offset = "0xC34854", VA = "0xC34854")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xC3493C", Offset = "0xC3493C", VA = "0xC3493C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xC349C8", Offset = "0xC349C8", VA = "0xC349C8")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xC34AE4", Offset = "0xC34AE4", VA = "0xC34AE4")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xC34B44", Offset = "0xC34B44", VA = "0xC34B44")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000878")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xC34FC8", Offset = "0xC34FC8", VA = "0xC34FC8")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xC35328", Offset = "0xC35328", VA = "0xC35328")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xC3548C", Offset = "0xC3548C", VA = "0xC3548C")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xC35754", Offset = "0xC35754", VA = "0xC35754")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xC35840", Offset = "0xC35840", VA = "0xC35840")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xC35BF4", Offset = "0xC35BF4", VA = "0xC35BF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xC35EF4", Offset = "0xC35EF4", VA = "0xC35EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xC3690C", Offset = "0xC3690C", VA = "0xC3690C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xC36960", Offset = "0xC36960", VA = "0xC36960")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xC35ABC", Offset = "0xC35ABC", VA = "0xC35ABC")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xC35B58", Offset = "0xC35B58", VA = "0xC35B58")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xC36990", Offset = "0xC36990", VA = "0xC36990")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xC36268", Offset = "0xC36268", VA = "0xC36268")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xC36BDC", Offset = "0xC36BDC", VA = "0xC36BDC")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xC369F8", Offset = "0xC369F8", VA = "0xC369F8")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xC36E78", Offset = "0xC36E78", VA = "0xC36E78")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xC3727C", Offset = "0xC3727C", VA = "0xC3727C")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xC374AC", Offset = "0xC374AC", VA = "0xC374AC")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xC375EC", Offset = "0xC375EC", VA = "0xC375EC")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xC377A4", Offset = "0xC377A4", VA = "0xC377A4")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xC36408", Offset = "0xC36408", VA = "0xC36408")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xC3787C", Offset = "0xC3787C", VA = "0xC3787C")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xC36278", Offset = "0xC36278", VA = "0xC36278")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xC37970", Offset = "0xC37970", VA = "0xC37970")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xC37F1C", Offset = "0xC37F1C", VA = "0xC37F1C")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xC383DC", Offset = "0xC383DC", VA = "0xC383DC")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xC38454", Offset = "0xC38454", VA = "0xC38454")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xC384D0", Offset = "0xC384D0", VA = "0xC384D0")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xC367A0", Offset = "0xC367A0", VA = "0xC367A0")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xC37A2C", Offset = "0xC37A2C", VA = "0xC37A2C")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xC38968", Offset = "0xC38968", VA = "0xC38968")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E7B0", Offset = "0xA1E7B0")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xC389D8", Offset = "0xC389D8", VA = "0xC389D8")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xC3880C", Offset = "0xC3880C", VA = "0xC3880C")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xC38AA0", Offset = "0xC38AA0", VA = "0xC38AA0")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xC38B8C", Offset = "0xC38B8C", VA = "0xC38B8C")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xC385A0", Offset = "0xC385A0", VA = "0xC385A0")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xC38C78", Offset = "0xC38C78", VA = "0xC38C78")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000128")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xE4AB98", Offset = "0xE4AB98", VA = "0xE4AB98")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000129")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xE4AC48", Offset = "0xE4AC48", VA = "0xE4AC48")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xE4BF28", Offset = "0xE4BF28", VA = "0xE4BF28")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xE4BACC", Offset = "0xE4BACC", VA = "0xE4BACC")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xE4B870", Offset = "0xE4B870", VA = "0xE4B870")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xE4B940", Offset = "0xE4B940", VA = "0xE4B940")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xE4C18C", Offset = "0xE4C18C", VA = "0xE4C18C")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200012A")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40008BF")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xE4C70C", Offset = "0xE4C70C", VA = "0xE4C70C")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200012B")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xE4C974", Offset = "0xE4C974", VA = "0xE4C974")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xE4CD74", Offset = "0xE4CD74", VA = "0xE4CD74")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200012C")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xE4CE70", Offset = "0xE4CE70", VA = "0xE4CE70")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xE4CFCC", Offset = "0xE4CFCC", VA = "0xE4CFCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xE4D0E8", Offset = "0xE4D0E8", VA = "0xE4D0E8")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200012D")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xE4D14C", Offset = "0xE4D14C", VA = "0xE4D14C")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xE4CA90", Offset = "0xE4CA90", VA = "0xE4CA90")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xE4D730", Offset = "0xE4D730", VA = "0xE4D730")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xE4D790", Offset = "0xE4D790", VA = "0xE4D790")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xE4DF74", Offset = "0xE4DF74", VA = "0xE4DF74")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xE4CDD8", Offset = "0xE4CDD8", VA = "0xE4CDD8")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200012E")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000437")]
	public enum PacketMode
	{
		[Token(Token = "0x4001ADF")]
		SDK,
		[Token(Token = "0x4001AE0")]
		Unity
	}

	[Token(Token = "0x2000438")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xE4F59C", Offset = "0xE4F59C", VA = "0xE4F59C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000439")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xE4F6F8", Offset = "0xE4F6F8", VA = "0xE4F6F8")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xE4F270", Offset = "0xE4F270", VA = "0xE4F270")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60008B3")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xE4F280", Offset = "0xE4F280", VA = "0xE4F280")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xE4F30C", Offset = "0xE4F30C", VA = "0xE4F30C")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xE4F584", Offset = "0xE4F584", VA = "0xE4F584")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xE4F58C", Offset = "0xE4F58C", VA = "0xE4F58C")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200012F")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xE4FAB0", Offset = "0xE4FAB0", VA = "0xE4FAB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xE4FC0C", Offset = "0xE4FC0C", VA = "0xE4FC0C")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000130")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xE4FC78", Offset = "0xE4FC78", VA = "0xE4FC78")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xE4FDE4", Offset = "0xE4FDE4", VA = "0xE4FDE4")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xE50188", Offset = "0xE50188", VA = "0xE50188")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xE503A4", Offset = "0xE503A4", VA = "0xE503A4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xE503D0", Offset = "0xE503D0", VA = "0xE503D0")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000131")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200043A")]
	public enum TextureType
	{
		[Token(Token = "0x4001AF1")]
		DiffuseTextures,
		[Token(Token = "0x4001AF2")]
		NormalMaps,
		[Token(Token = "0x4001AF3")]
		RoughnessMaps,
		[Token(Token = "0x4001AF4")]
		Count
	}

	[Token(Token = "0x200043B")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200043C")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200043D")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200043E")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xE525F0", Offset = "0xE525F0", VA = "0xE525F0")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200043F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA042B0", Offset = "0xA042B0")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000214")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0xE52F00", Offset = "0xE52F00", VA = "0xE52F00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xE52F68", Offset = "0xE52F68", VA = "0xE52F68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xE52458", Offset = "0xE52458", VA = "0xE52458")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xE52888", Offset = "0xE52888", VA = "0xE52888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xE5288C", Offset = "0xE5288C", VA = "0xE5288C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xE52F08", Offset = "0xE52F08", VA = "0xE52F08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40008F3")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40008F4")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40008F5")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40008F6")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xE50480", Offset = "0xE50480", VA = "0xE50480")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xE505E0", Offset = "0xE505E0", VA = "0xE505E0")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xE50608", Offset = "0xE50608", VA = "0xE50608")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xE50D20", Offset = "0xE50D20", VA = "0xE50D20")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xE50FA0", Offset = "0xE50FA0", VA = "0xE50FA0")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xE5069C", Offset = "0xE5069C", VA = "0xE5069C")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xE51090", Offset = "0xE51090", VA = "0xE51090")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xE50A9C", Offset = "0xE50A9C", VA = "0xE50A9C")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xE512F8", Offset = "0xE512F8", VA = "0xE512F8")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xE51570", Offset = "0xE51570", VA = "0xE51570")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xE5166C", Offset = "0xE5166C", VA = "0xE5166C")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xE516A4", Offset = "0xE516A4", VA = "0xE516A4")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xE50CA4", Offset = "0xE50CA4", VA = "0xE50CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E814", Offset = "0xA1E814")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xE52484", Offset = "0xE52484", VA = "0xE52484")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000132")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700007A")]
	public float Duration
	{
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xE52F70", Offset = "0xE52F70", VA = "0xE52F70")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700007B")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xE52FDC", Offset = "0xE52FDC", VA = "0xE52FDC")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xE53060", Offset = "0xE53060", VA = "0xE53060")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xE53124", Offset = "0xE53124", VA = "0xE53124")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xE53264", Offset = "0xE53264", VA = "0xE53264")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xE53340", Offset = "0xE53340", VA = "0xE53340")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xE53410", Offset = "0xE53410", VA = "0xE53410")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xE53618", Offset = "0xE53618", VA = "0xE53618")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xE53870", Offset = "0xE53870", VA = "0xE53870")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000133")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x119C918", Offset = "0x119C918", VA = "0x119C918")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x119CA2C", Offset = "0x119CA2C", VA = "0x119CA2C")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x119CBD8", Offset = "0x119CBD8", VA = "0x119CBD8")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x119CA9C", Offset = "0x119CA9C", VA = "0x119CA9C")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x119CB30", Offset = "0x119CB30", VA = "0x119CB30")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000134")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x119C518", Offset = "0x119C518", VA = "0x119C518")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x119C8BC", Offset = "0x119C8BC", VA = "0x119C8BC")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x119C6B8", Offset = "0x119C6B8", VA = "0x119C6B8")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x119C730", Offset = "0x119C730", VA = "0x119C730")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x119C7CC", Offset = "0x119C7CC", VA = "0x119C7CC")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000135")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40008FE")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40008FF")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xE53A64", Offset = "0xE53A64", VA = "0xE53A64")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xE53AF0", Offset = "0xE53AF0", VA = "0xE53AF0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xE53B0C", Offset = "0xE53B0C", VA = "0xE53B0C")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xE53CB8", Offset = "0xE53CB8", VA = "0xE53CB8")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xE53E60", Offset = "0xE53E60", VA = "0xE53E60")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000136")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xE53EE0", Offset = "0xE53EE0", VA = "0xE53EE0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xE53FC4", Offset = "0xE53FC4", VA = "0xE53FC4")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xE541B8", Offset = "0xE541B8", VA = "0xE541B8")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xE5454C", Offset = "0xE5454C", VA = "0xE5454C")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xE54644", Offset = "0xE54644", VA = "0xE54644")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000137")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000908")]
	Body = 1,
	[Token(Token = "0x4000909")]
	Hands = 2,
	[Token(Token = "0x400090A")]
	Base = 4,
	[Token(Token = "0x400090B")]
	BodyTilt = 0x10,
	[Token(Token = "0x400090C")]
	Expressive = 0x20,
	[Token(Token = "0x400090D")]
	All = -1
}
[Token(Token = "0x2000138")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400090F")]
	AvatarSpecification,
	[Token(Token = "0x4000910")]
	AssetLoaded,
	[Token(Token = "0x4000911")]
	Count
}
[Token(Token = "0x2000139")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200013A")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200013B")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000917")]
	Mesh,
	[Token(Token = "0x4000918")]
	Texture,
	[Token(Token = "0x4000919")]
	Pose,
	[Token(Token = "0x400091A")]
	Material,
	[Token(Token = "0x400091B")]
	CombinedMesh,
	[Token(Token = "0x400091C")]
	PBSMaterial,
	[Token(Token = "0x400091D")]
	FailedLoad,
	[Token(Token = "0x400091E")]
	Count
}
[Token(Token = "0x200013C")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200013D")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200013E")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200013F")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000140")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000141")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000953")]
	RGB24,
	[Token(Token = "0x4000954")]
	DXT1,
	[Token(Token = "0x4000955")]
	DXT5,
	[Token(Token = "0x4000956")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000957")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000958")]
	Count
}
[Token(Token = "0x2000142")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000143")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000960")]
	SkinnedMeshRender,
	[Token(Token = "0x4000961")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000962")]
	ProjectorRender,
	[Token(Token = "0x4000963")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000964")]
	Count
}
[Token(Token = "0x2000144")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000966")]
	Unknown,
	[Token(Token = "0x4000967")]
	Default,
	[Token(Token = "0x4000968")]
	Verbose,
	[Token(Token = "0x4000969")]
	Debug,
	[Token(Token = "0x400096A")]
	Info,
	[Token(Token = "0x400096B")]
	Warn,
	[Token(Token = "0x400096C")]
	Error,
	[Token(Token = "0x400096D")]
	Fatal,
	[Token(Token = "0x400096E")]
	Silent
}
[Token(Token = "0x2000145")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000146")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000973")]
	One = 1,
	[Token(Token = "0x4000974")]
	Two = 2,
	[Token(Token = "0x4000975")]
	Three = 4,
	[Token(Token = "0x4000976")]
	Joystick = 8
}
[Token(Token = "0x2000147")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000978")]
	One = 1,
	[Token(Token = "0x4000979")]
	Two = 2,
	[Token(Token = "0x400097A")]
	Joystick = 4,
	[Token(Token = "0x400097B")]
	ThumbRest = 8,
	[Token(Token = "0x400097C")]
	Index = 0x10,
	[Token(Token = "0x400097D")]
	Pointing = 0x40,
	[Token(Token = "0x400097E")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000148")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000149")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[StructLayout(LayoutKind.Sequential, Size = 1)]
[Token(Token = "0x200014A")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200014B")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200014C")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[StructLayout(LayoutKind.Sequential, Size = 1)]
[Token(Token = "0x200014D")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200014E")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200014F")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000150")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x400099E")]
	Add,
	[Token(Token = "0x400099F")]
	Multiply,
	[Token(Token = "0x40009A0")]
	Count
}
[Token(Token = "0x2000151")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40009A2")]
	Color,
	[Token(Token = "0x40009A3")]
	Texture,
	[Token(Token = "0x40009A4")]
	TextureSingleChannel,
	[Token(Token = "0x40009A5")]
	Parallax,
	[Token(Token = "0x40009A6")]
	Count
}
[Token(Token = "0x2000152")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40009A8")]
	None,
	[Token(Token = "0x40009A9")]
	Positional,
	[Token(Token = "0x40009AA")]
	ViewReflection,
	[Token(Token = "0x40009AB")]
	Fresnel,
	[Token(Token = "0x40009AC")]
	Pulse,
	[Token(Token = "0x40009AD")]
	Count
}
[Token(Token = "0x2000153")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40009AF")]
	Touch,
	[Token(Token = "0x40009B0")]
	Malibu,
	[Token(Token = "0x40009B1")]
	Go,
	[Token(Token = "0x40009B2")]
	Quest,
	[Token(Token = "0x40009B3")]
	Count
}
[Token(Token = "0x2000154")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40009B5")]
	Lowest = 1,
	[Token(Token = "0x40009B6")]
	Medium = 3,
	[Token(Token = "0x40009B7")]
	Highest = 5
}
[Token(Token = "0x2000155")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40009B9")]
	Unknown = -1,
	[Token(Token = "0x40009BA")]
	One,
	[Token(Token = "0x40009BB")]
	Two
}
[Token(Token = "0x2000156")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x2112154", Offset = "0x2112154", VA = "0x2112154")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xB18984", Offset = "0xB18984", VA = "0xB18984", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xB1898C", Offset = "0xB1898C", VA = "0xB1898C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000157")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x2112488", Offset = "0x2112488", VA = "0x2112488")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xB18BC4", Offset = "0xB18BC4", VA = "0xB18BC4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xB18BCC", Offset = "0xB18BCC", VA = "0xB18BCC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000158")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x21117FC", Offset = "0x21117FC", VA = "0x21117FC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xB186CC", Offset = "0xB186CC", VA = "0xB186CC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xB186D4", Offset = "0xB186D4", VA = "0xB186D4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000159")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x21129B4", Offset = "0x21129B4", VA = "0x21129B4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xB1944C", Offset = "0xB1944C", VA = "0xB1944C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xB19454", Offset = "0xB19454", VA = "0xB19454", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200015A")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xE4ABA0", Offset = "0xE4ABA0", VA = "0xE4ABA0")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200015B")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200015C")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40009F0")]
	FirstPerson = 1,
	[Token(Token = "0x40009F1")]
	ThirdPerson = 2,
	[Token(Token = "0x40009F2")]
	SelfOccluding = 4
}
[Token(Token = "0x200015D")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200015E")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200015F")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000160")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000161")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000A08")]
	Default,
	[Token(Token = "0x4000A09")]
	GripSphere,
	[Token(Token = "0x4000A0A")]
	GripCube,
	[Token(Token = "0x4000A0B")]
	Count
}
[Token(Token = "0x2000162")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000A0D")]
	Body,
	[Token(Token = "0x4000A0E")]
	Clothing,
	[Token(Token = "0x4000A0F")]
	Eyewear,
	[Token(Token = "0x4000A10")]
	Hair,
	[Token(Token = "0x4000A11")]
	Beard,
	[Token(Token = "0x4000A12")]
	Count
}
[Token(Token = "0x2000163")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[StructLayout(LayoutKind.Sequential, Size = 1)]
[Token(Token = "0x2000164")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000165")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[StructLayout(LayoutKind.Sequential, Size = 1)]
[Token(Token = "0x2000166")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000167")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000A1C")]
	AvatarHead,
	[Token(Token = "0x4000A1D")]
	AvatarHand,
	[Token(Token = "0x4000A1E")]
	Object,
	[Token(Token = "0x4000A1F")]
	ObjectStatic,
	[Token(Token = "0x4000A20")]
	Count
}
[Token(Token = "0x2000168")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[StructLayout(LayoutKind.Sequential, Size = 1)]
[Token(Token = "0x2000169")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200016A")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[StructLayout(LayoutKind.Sequential, Size = 1)]
[Token(Token = "0x200016B")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200016C")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000A2C")]
	Point,
	[Token(Token = "0x4000A2D")]
	Direction,
	[Token(Token = "0x4000A2E")]
	Spot,
	[Token(Token = "0x4000A2F")]
	Count
}
[Token(Token = "0x200016D")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[StructLayout(LayoutKind.Sequential, Size = 1)]
[Token(Token = "0x200016E")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200016F")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[StructLayout(LayoutKind.Sequential, Size = 1)]
[Token(Token = "0x2000170")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000171")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000A45")]
	None = 0u,
	[Token(Token = "0x4000A46")]
	GazeTarget = 1u,
	[Token(Token = "0x4000A47")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000172")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000173")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000174")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000175")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000176")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000177")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000440")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xADFDF8", Offset = "0xADFDF8", VA = "0xADFDF8")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000A5C")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700007C")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0xE4E008", Offset = "0xE4E008", VA = "0xE4E008")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xE54654", Offset = "0xE54654", VA = "0xE54654")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xE548A0", Offset = "0xE548A0", VA = "0xE548A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xE54914", Offset = "0xE54914", VA = "0xE54914")]
	private void Update()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xE55158", Offset = "0xE55158", VA = "0xE55158")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xE551B0", Offset = "0xE551B0", VA = "0xE551B0")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xE55208", Offset = "0xE55208", VA = "0xE55208")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xE55270", Offset = "0xE55270", VA = "0xE55270")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xE552D8", Offset = "0xE552D8", VA = "0xE552D8")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xE54F90", Offset = "0xE54F90", VA = "0xE54F90")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xE553B8", Offset = "0xE553B8", VA = "0xE553B8")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xE554D4", Offset = "0xE554D4", VA = "0xE554D4")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xE4E198", Offset = "0xE4E198", VA = "0xE4E198")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xE555B4", Offset = "0xE555B4", VA = "0xE555B4")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xE54854", Offset = "0xE54854", VA = "0xE54854")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xE50D80", Offset = "0xE50D80", VA = "0xE50D80")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xE5568C", Offset = "0xE5568C", VA = "0xE5568C")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000178")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700007D")]
	public static string AppID
	{
		[Token(Token = "0x600091D")]
		[Address(RVA = "0xE5564C", Offset = "0xE5564C", VA = "0xE5564C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600091E")]
		[Address(RVA = "0xE557E4", Offset = "0xE557E4", VA = "0xE557E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public static string MobileAppID
	{
		[Token(Token = "0x600091F")]
		[Address(RVA = "0xE5566C", Offset = "0xE5566C", VA = "0xE5566C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000920")]
		[Address(RVA = "0xE55810", Offset = "0xE55810", VA = "0xE55810")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000921")]
		[Address(RVA = "0xE556D0", Offset = "0xE556D0", VA = "0xE556D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000922")]
		[Address(RVA = "0xE5583C", Offset = "0xE5583C", VA = "0xE5583C")]
		set
		{
		}
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xE55890", Offset = "0xE55890", VA = "0xE55890")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000179")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xE56F6C", Offset = "0xE56F6C", VA = "0xE56F6C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xE4D154", Offset = "0xE4D154", VA = "0xE4D154")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xE570B0", Offset = "0xE570B0", VA = "0xE570B0")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xE57210", Offset = "0xE57210", VA = "0xE57210")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200017A")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xE57220", Offset = "0xE57220", VA = "0xE57220")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xE4D37C", Offset = "0xE4D37C", VA = "0xE4D37C")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xE57350", Offset = "0xE57350", VA = "0xE57350")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200017B")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000A6B")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000A6C")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000A6D")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xE558E8", Offset = "0xE558E8", VA = "0xE558E8")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xE4D514", Offset = "0xE4D514", VA = "0xE4D514")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xE56728", Offset = "0xE56728", VA = "0xE56728")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xE55EBC", Offset = "0xE55EBC", VA = "0xE55EBC")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xE55C8C", Offset = "0xE55C8C", VA = "0xE55C8C")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xE55DA0", Offset = "0xE55DA0", VA = "0xE55DA0")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xE56F5C", Offset = "0xE56F5C", VA = "0xE56F5C")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200017C")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000441")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000442")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xADFE60", Offset = "0xADFE60", VA = "0xADFE60")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000443")]
	public struct TextureSet
	{
		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xADFEE8", Offset = "0xADFEE8", VA = "0xADFEE8")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA042C0", Offset = "0xA042C0")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000216")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0xE58748", Offset = "0xE58748", VA = "0xE58748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xE587B0", Offset = "0xE587B0", VA = "0xE587B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xE5810C", Offset = "0xE5810C", VA = "0xE5810C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xE58274", Offset = "0xE58274", VA = "0xE58274", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xE58278", Offset = "0xE58278", VA = "0xE58278", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xE58750", Offset = "0xE58750", VA = "0xE58750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000A71")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000A72")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000A75")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000A76")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000A77")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000A78")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000A79")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000A7A")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000A7B")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xE57B04", Offset = "0xE57B04", VA = "0xE57B04")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xE57E60", Offset = "0xE57E60", VA = "0xE57E60")]
	public void Update()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xE52EB0", Offset = "0xE52EB0", VA = "0xE52EB0")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xE51174", Offset = "0xE51174", VA = "0xE51174")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xE57FC8", Offset = "0xE57FC8", VA = "0xE57FC8")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xE50E04", Offset = "0xE50E04", VA = "0xE50E04")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xE50FE8", Offset = "0xE50FE8", VA = "0xE50FE8")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xE58078", Offset = "0xE58078", VA = "0xE58078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1E918", Offset = "0xA1E918")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xE5536C", Offset = "0xE5536C", VA = "0xE5536C")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xE58138", Offset = "0xE58138", VA = "0xE58138")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x200017D")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xE587B8", Offset = "0xE587B8", VA = "0xE587B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xE58914", Offset = "0xE58914", VA = "0xE58914")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200017E")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000445")]
	public delegate void OnClick();

	[Token(Token = "0x2000446")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000447")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000448")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA042D0", Offset = "0xA042D0")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xEE2EBC", Offset = "0xEE2EBC", VA = "0xEE2EBC")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xEE3938", Offset = "0xEE3938", VA = "0xEE3938")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA042E0", Offset = "0xA042E0")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xEE3130", Offset = "0xEE3130", VA = "0xEE3130")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xEE3B5C", Offset = "0xEE3B5C", VA = "0xEE3B5C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200044B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA042F0", Offset = "0xA042F0")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xEE3348", Offset = "0xEE3348", VA = "0xEE3348")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xEE3DD4", Offset = "0xEE3DD4", VA = "0xEE3DD4")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04300", Offset = "0xA04300")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xEE34DC", Offset = "0xEE34DC", VA = "0xEE34DC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xEE4188", Offset = "0xEE4188", VA = "0xEE4188")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200044D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04310", Offset = "0xA04310")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xEE3734", Offset = "0xEE3734", VA = "0xEE3734")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xEE41A8", Offset = "0xEE41A8", VA = "0xEE41A8")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000A7E")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000A7F")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000A80")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000A8E")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000A8F")]
	private const float marginH = 16f;

	[Token(Token = "0x4000A90")]
	private const float marginV = 16f;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xEE1E68", Offset = "0xEE1E68", VA = "0xEE1E68")]
	public void Awake()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xEE226C", Offset = "0xEE226C", VA = "0xEE226C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xEE2838", Offset = "0xEE2838", VA = "0xEE2838")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xEE25E4", Offset = "0xEE25E4", VA = "0xEE25E4")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xEE29E0", Offset = "0xEE29E0", VA = "0xEE29E0")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xEE2C94", Offset = "0xEE2C94", VA = "0xEE2C94")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xEE2EC4", Offset = "0xEE2EC4", VA = "0xEE2EC4")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xEE2FA8", Offset = "0xEE2FA8", VA = "0xEE2FA8")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xEE3138", Offset = "0xEE3138", VA = "0xEE3138")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xEE31D4", Offset = "0xEE31D4", VA = "0xEE31D4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xEE3350", Offset = "0xEE3350", VA = "0xEE3350")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xEE34E4", Offset = "0xEE34E4", VA = "0xEE34E4")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xEE373C", Offset = "0xEE373C", VA = "0xEE373C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xEE3818", Offset = "0xEE3818", VA = "0xEE3818")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xEE38C8", Offset = "0xEE38C8", VA = "0xEE38C8")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200017F")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xEB1F50", Offset = "0xEB1F50", VA = "0xEB1F50")]
	private void Start()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xEB1FD8", Offset = "0xEB1FD8", VA = "0xEB1FD8")]
	private void Update()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xEB20A0", Offset = "0xEB20A0", VA = "0xEB20A0")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xEB20DC", Offset = "0xEB20DC", VA = "0xEB20DC")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000180")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200044E")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001B2F")]
		On,
		[Token(Token = "0x4001B30")]
		Off,
		[Token(Token = "0x4001B31")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000080")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000952")]
		[Address(RVA = "0xCA7FD0", Offset = "0xCA7FD0", VA = "0xCA7FD0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000951")]
		[Address(RVA = "0xCA7F8C", Offset = "0xCA7F8C", VA = "0xCA7F8C")]
		set
		{
		}
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xCA7FD8", Offset = "0xCA7FD8", VA = "0xCA7FD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xCA8030", Offset = "0xCA8030", VA = "0xCA8030")]
	private void Start()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xCA8148", Offset = "0xCA8148", VA = "0xCA8148", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xCA8164", Offset = "0xCA8164", VA = "0xCA8164", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xCA81B8", Offset = "0xCA81B8", VA = "0xCA81B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xCA8414", Offset = "0xCA8414", VA = "0xCA8414")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xCA8528", Offset = "0xCA8528", VA = "0xCA8528")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xCA85BC", Offset = "0xCA85BC", VA = "0xCA85BC")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xCA868C", Offset = "0xCA868C", VA = "0xCA868C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xCA8744", Offset = "0xCA8744", VA = "0xCA8744")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xCA8810", Offset = "0xCA8810", VA = "0xCA8810")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000181")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000AA4")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000AA5")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000AA6")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10084", Offset = "0xA10084")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA100BC", Offset = "0xA100BC")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA100F4", Offset = "0xA100F4")]
	public float HeightOffset;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1012C", Offset = "0xA1012C")]
	public float MinimumHeight;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10164", Offset = "0xA10164")]
	public float MaximumHeight;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xFFDC5C", Offset = "0xFFDC5C", VA = "0xFFDC5C")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xFFDC64", Offset = "0xFFDC64", VA = "0xFFDC64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xFFDCD4", Offset = "0xFFDCD4", VA = "0xFFDCD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xFFDD60", Offset = "0xFFDD60", VA = "0xFFDD60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xFFDDEC", Offset = "0xFFDDEC", VA = "0xFFDDEC")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xFFE1F4", Offset = "0xFFE1F4", VA = "0xFFE1F4")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xFFE49C", Offset = "0xFFE49C", VA = "0xFFE49C")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000182")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xCA96E8", Offset = "0xCA96E8", VA = "0xCA96E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xCA9794", Offset = "0xCA9794", VA = "0xCA9794")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000183")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200044F")]
	public enum States
	{
		[Token(Token = "0x4001B33")]
		Ready,
		[Token(Token = "0x4001B34")]
		Aim,
		[Token(Token = "0x4001B35")]
		CancelAim,
		[Token(Token = "0x4001B36")]
		PreTeleport,
		[Token(Token = "0x4001B37")]
		CancelTeleport,
		[Token(Token = "0x4001B38")]
		Teleporting,
		[Token(Token = "0x4001B39")]
		PostTeleport
	}

	[Token(Token = "0x2000450")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001B3B")]
		None,
		[Token(Token = "0x4001B3C")]
		Aim,
		[Token(Token = "0x4001B3D")]
		PreTeleport,
		[Token(Token = "0x4001B3E")]
		Teleport
	}

	[Token(Token = "0x2000451")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001B40")]
		Point,
		[Token(Token = "0x4001B41")]
		Sphere,
		[Token(Token = "0x4001B42")]
		Capsule
	}

	[Token(Token = "0x2000452")]
	public class AimData
	{
		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1AF38", Offset = "0xA1AF38")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000218")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xCAC958", Offset = "0xCAC958", VA = "0xCAC958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23254", Offset = "0xA23254")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A38")]
			[Address(RVA = "0xCAC960", Offset = "0xCAC960", VA = "0xCAC960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23264", Offset = "0xA23264")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xCAC8E4", Offset = "0xCAC8E4", VA = "0xCAC8E4")]
		public AimData()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xCAC968", Offset = "0xCAC968", VA = "0xCAC968")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000453")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04320", Offset = "0xA04320")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000219")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xCAC730", Offset = "0xCAC730", VA = "0xCAC730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xCAC798", Offset = "0xCAC798", VA = "0xCAC798", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xCAAC34", Offset = "0xCAAC34", VA = "0xCAAC34")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xCAC648", Offset = "0xCAC648", VA = "0xCAC648", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xCAC64C", Offset = "0xCAC64C", VA = "0xCAC64C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xCAC738", Offset = "0xCAC738", VA = "0xCAC738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04330", Offset = "0xA04330")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700021B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xCAC110", Offset = "0xCAC110", VA = "0xCAC110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xCAC178", Offset = "0xCAC178", VA = "0xCAC178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xCAB11C", Offset = "0xCAB11C", VA = "0xCAB11C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xCABFD8", Offset = "0xCABFD8", VA = "0xCABFD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xCABFDC", Offset = "0xCABFDC", VA = "0xCABFDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xCAC118", Offset = "0xCAC118", VA = "0xCAC118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000455")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04340", Offset = "0xA04340")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xCAC224", Offset = "0xCAC224", VA = "0xCAC224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0xCAC28C", Offset = "0xCAC28C", VA = "0xCAC28C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xCAB300", Offset = "0xCAB300", VA = "0xCAB300")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xCAC180", Offset = "0xCAC180", VA = "0xCAC180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xCAC184", Offset = "0xCAC184", VA = "0xCAC184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xCAC22C", Offset = "0xCAC22C", VA = "0xCAC22C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000456")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04350", Offset = "0xA04350")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0xCAC5D8", Offset = "0xCAC5D8", VA = "0xCAC5D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xCAC640", Offset = "0xCAC640", VA = "0xCAC640", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xCAB4E4", Offset = "0xCAB4E4", VA = "0xCAB4E4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xCAC500", Offset = "0xCAC500", VA = "0xCAC500", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xCAC504", Offset = "0xCAC504", VA = "0xCAC504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xCAC5E0", Offset = "0xCAC5E0", VA = "0xCAC5E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000457")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04360", Offset = "0xA04360")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xCAC338", Offset = "0xCAC338", VA = "0xCAC338", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xCAC3A0", Offset = "0xCAC3A0", VA = "0xCAC3A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xCAB6C8", Offset = "0xCAB6C8", VA = "0xCAB6C8")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xCAC294", Offset = "0xCAC294", VA = "0xCAC294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xCAC298", Offset = "0xCAC298", VA = "0xCAC298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xCAC340", Offset = "0xCAC340", VA = "0xCAC340", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000458")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04370", Offset = "0xA04370")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0xCAC874", Offset = "0xCAC874", VA = "0xCAC874", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xCAC8DC", Offset = "0xCAC8DC", VA = "0xCAC8DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xCAB8AC", Offset = "0xCAB8AC", VA = "0xCAB8AC")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xCAC7A0", Offset = "0xCAC7A0", VA = "0xCAC7A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xCAC7A4", Offset = "0xCAC7A4", VA = "0xCAC7A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xCAC87C", Offset = "0xCAC87C", VA = "0xCAC87C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000459")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04380", Offset = "0xA04380")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000225")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xCAC490", Offset = "0xCAC490", VA = "0xCAC490", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xCAC4F8", Offset = "0xCAC4F8", VA = "0xCAC4F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xCABA90", Offset = "0xCABA90", VA = "0xCABA90")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xCAC3A8", Offset = "0xCAC3A8", VA = "0xCAC3A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xCAC3AC", Offset = "0xCAC3AC", VA = "0xCAC3AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xCAC498", Offset = "0xCAC498", VA = "0xCAC498", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1019C", Offset = "0xA1019C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA101D4", Offset = "0xA101D4")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1020C", Offset = "0xA1020C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10244", Offset = "0xA10244")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1027C", Offset = "0xA1027C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA102B4", Offset = "0xA102B4")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA102EC", Offset = "0xA102EC")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10324", Offset = "0xA10324")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1035C", Offset = "0xA1035C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1036C", Offset = "0xA1036C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA103A4", Offset = "0xA103A4")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA103EC", Offset = "0xA103EC")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA103FC", Offset = "0xA103FC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10434", Offset = "0xA10434")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1046C", Offset = "0xA1046C")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA104A4", Offset = "0xA104A4")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000081")]
	public States CurrentState
	{
		[Token(Token = "0x6000969")]
		[Address(RVA = "0xCAA178", Offset = "0xCAA178", VA = "0xCAA178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E97C", Offset = "0xA1E97C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600096A")]
		[Address(RVA = "0xCAA180", Offset = "0xCAA180", VA = "0xCAA180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E98C", Offset = "0xA1E98C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600096E")]
		[Address(RVA = "0xCAA3B0", Offset = "0xCAA3B0", VA = "0xCAA3B0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000083")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600096F")]
		[Address(RVA = "0xCAA3D8", Offset = "0xCAA3D8", VA = "0xCAA3D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E9BC", Offset = "0xA1E9BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000970")]
		[Address(RVA = "0xCAA3E0", Offset = "0xCAA3E0", VA = "0xCAA3E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E9CC", Offset = "0xA1E9CC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600096B")]
		[Address(RVA = "0xCAA188", Offset = "0xCAA188", VA = "0xCAA188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E99C", Offset = "0xA1E99C")]
		add
		{
		}
		[Token(Token = "0x600096C")]
		[Address(RVA = "0xCAA22C", Offset = "0xCAA22C", VA = "0xCAA22C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1E9AC", Offset = "0xA1E9AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600097A")]
		[Address(RVA = "0xCAAAEC", Offset = "0xCAAAEC", VA = "0xCAAAEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EA14", Offset = "0xA1EA14")]
		add
		{
		}
		[Token(Token = "0x600097B")]
		[Address(RVA = "0xCAAB90", Offset = "0xCAAB90", VA = "0xCAAB90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EA24", Offset = "0xA1EA24")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600097D")]
		[Address(RVA = "0xCAAC60", Offset = "0xCAAC60", VA = "0xCAAC60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EA98", Offset = "0xA1EA98")]
		add
		{
		}
		[Token(Token = "0x600097E")]
		[Address(RVA = "0xCAAD04", Offset = "0xCAAD04", VA = "0xCAAD04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EAA8", Offset = "0xA1EAA8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600097F")]
		[Address(RVA = "0xCAADA8", Offset = "0xCAADA8", VA = "0xCAADA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EAB8", Offset = "0xA1EAB8")]
		add
		{
		}
		[Token(Token = "0x6000980")]
		[Address(RVA = "0xCAAE4C", Offset = "0xCAAE4C", VA = "0xCAAE4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EAC8", Offset = "0xA1EAC8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000982")]
		[Address(RVA = "0xCAAF64", Offset = "0xCAAF64", VA = "0xCAAF64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EAD8", Offset = "0xA1EAD8")]
		add
		{
		}
		[Token(Token = "0x6000983")]
		[Address(RVA = "0xCAB008", Offset = "0xCAB008", VA = "0xCAB008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EAE8", Offset = "0xA1EAE8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000985")]
		[Address(RVA = "0xCAB148", Offset = "0xCAB148", VA = "0xCAB148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EB5C", Offset = "0xA1EB5C")]
		add
		{
		}
		[Token(Token = "0x6000986")]
		[Address(RVA = "0xCAB1EC", Offset = "0xCAB1EC", VA = "0xCAB1EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EB6C", Offset = "0xA1EB6C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000988")]
		[Address(RVA = "0xCAB32C", Offset = "0xCAB32C", VA = "0xCAB32C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EBE0", Offset = "0xA1EBE0")]
		add
		{
		}
		[Token(Token = "0x6000989")]
		[Address(RVA = "0xCAB3D0", Offset = "0xCAB3D0", VA = "0xCAB3D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EBF0", Offset = "0xA1EBF0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600098B")]
		[Address(RVA = "0xCAB510", Offset = "0xCAB510", VA = "0xCAB510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EC64", Offset = "0xA1EC64")]
		add
		{
		}
		[Token(Token = "0x600098C")]
		[Address(RVA = "0xCAB5B4", Offset = "0xCAB5B4", VA = "0xCAB5B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EC74", Offset = "0xA1EC74")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600098E")]
		[Address(RVA = "0xCAB6F4", Offset = "0xCAB6F4", VA = "0xCAB6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1ECE8", Offset = "0xA1ECE8")]
		add
		{
		}
		[Token(Token = "0x600098F")]
		[Address(RVA = "0xCAB798", Offset = "0xCAB798", VA = "0xCAB798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1ECF8", Offset = "0xA1ECF8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000991")]
		[Address(RVA = "0xCAB8D8", Offset = "0xCAB8D8", VA = "0xCAB8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1ED6C", Offset = "0xA1ED6C")]
		add
		{
		}
		[Token(Token = "0x6000992")]
		[Address(RVA = "0xCAB97C", Offset = "0xCAB97C", VA = "0xCAB97C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1ED7C", Offset = "0xA1ED7C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000994")]
		[Address(RVA = "0xCABABC", Offset = "0xCABABC", VA = "0xCABABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EDF0", Offset = "0xA1EDF0")]
		add
		{
		}
		[Token(Token = "0x6000995")]
		[Address(RVA = "0xCABB60", Offset = "0xCABB60", VA = "0xCABB60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EE00", Offset = "0xA1EE00")]
		remove
		{
		}
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xCA9E48", Offset = "0xCA9E48", VA = "0xCA9E48")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xCA9E6C", Offset = "0xCA9E6C", VA = "0xCA9E6C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xCAA2D0", Offset = "0xCAA2D0", VA = "0xCAA2D0")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xCAA3E8", Offset = "0xCAA3E8", VA = "0xCAA3E8")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xCAA740", Offset = "0xCAA740", VA = "0xCAA740")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA1E9DC", Offset = "0xA1E9DC")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xCAA7F8", Offset = "0xCAA7F8", VA = "0xCAA7F8")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xCAA8C0", Offset = "0xCAA8C0", VA = "0xCAA8C0")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xCAA8DC", Offset = "0xCAA8DC", VA = "0xCAA8DC")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xCAA9A4", Offset = "0xCAA9A4", VA = "0xCAA9A4")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xCAA9E8", Offset = "0xCAA9E8", VA = "0xCAA9E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xCAAA44", Offset = "0xCAAA44", VA = "0xCAAA44", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xCAAAE4", Offset = "0xCAAAE4", VA = "0xCAAAE4", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xCAAA74", Offset = "0xCAAA74", VA = "0xCAAA74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1EA34", Offset = "0xA1EA34")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xCAAEF0", Offset = "0xCAAEF0", VA = "0xCAAEF0")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xCAB0AC", Offset = "0xCAB0AC", VA = "0xCAB0AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1EAF8", Offset = "0xA1EAF8")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xCAB290", Offset = "0xCAB290", VA = "0xCAB290")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1EB7C", Offset = "0xA1EB7C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xCAB474", Offset = "0xCAB474", VA = "0xCAB474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1EC00", Offset = "0xA1EC00")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xCAB658", Offset = "0xCAB658", VA = "0xCAB658")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1EC84", Offset = "0xA1EC84")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xCAB83C", Offset = "0xCAB83C", VA = "0xCAB83C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1ED08", Offset = "0xA1ED08")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xCABA20", Offset = "0xCABA20", VA = "0xCABA20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1ED8C", Offset = "0xA1ED8C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xCABC04", Offset = "0xCABC04", VA = "0xCABC04")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xCABD48", Offset = "0xCABD48", VA = "0xCABD48")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xCABD7C", Offset = "0xCABD7C", VA = "0xCABD7C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xCABE9C", Offset = "0xCABE9C", VA = "0xCABE9C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xCABFC8", Offset = "0xCABFC8", VA = "0xCABFC8")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000184")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0xCE0B04", Offset = "0xCE0B04", VA = "0xCE0B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EE10", Offset = "0xA1EE10")]
		add
		{
		}
		[Token(Token = "0x600099C")]
		[Address(RVA = "0xCE0BA8", Offset = "0xCE0BA8", VA = "0xCE0BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EE20", Offset = "0xA1EE20")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600099D")]
		[Address(RVA = "0xCE0C4C", Offset = "0xCE0C4C", VA = "0xCE0C4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EE30", Offset = "0xA1EE30")]
		add
		{
		}
		[Token(Token = "0x600099E")]
		[Address(RVA = "0xCE0CF0", Offset = "0xCE0CF0", VA = "0xCE0CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EE40", Offset = "0xA1EE40")]
		remove
		{
		}
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xCE0D94", Offset = "0xCE0D94", VA = "0xCE0D94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xCE0E3C", Offset = "0xCE0E3C", VA = "0xCE0E3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xCE0E40", Offset = "0xCE0E40", VA = "0xCE0E40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xCE0EB4", Offset = "0xCE0EB4", VA = "0xCE0EB4")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xCE1024", Offset = "0xCE1024", VA = "0xCE1024")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xCE1308", Offset = "0xCE1308", VA = "0xCE1308")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xCE1554", Offset = "0xCE1554", VA = "0xCE1554")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000185")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xDF2328", Offset = "0xDF2328", VA = "0xDF2328", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xDF23BC", Offset = "0xDF23BC", VA = "0xDF23BC", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60009A8")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xDF248C", Offset = "0xDF248C", VA = "0xDF248C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000186")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1059C", Offset = "0xA1059C")]
	public float Range;

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xDF249C", Offset = "0xDF249C", VA = "0xDF249C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xDF25F8", Offset = "0xDF25F8", VA = "0xDF25F8")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000187")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA105D4", Offset = "0xA105D4")]
	public float Range;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1060C", Offset = "0xA1060C")]
	public float MinimumElevation;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10644", Offset = "0xA10644")]
	public float Gravity;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1067C", Offset = "0xA1067C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1067C", Offset = "0xA1067C")]
	public float AimVelocity;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA106D8", Offset = "0xA106D8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA106D8", Offset = "0xA106D8")]
	public float AimStep;

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xDF2608", Offset = "0xDF2608", VA = "0xDF2608", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xDF2854", Offset = "0xDF2854", VA = "0xDF2854")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000188")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10730", Offset = "0xA10730")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xDF2868", Offset = "0xDF2868", VA = "0xDF2868")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xDF294C", Offset = "0xDF294C", VA = "0xDF294C")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xDF297C", Offset = "0xDF297C", VA = "0xDF297C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xDF29AC", Offset = "0xDF29AC", VA = "0xDF29AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xDF2A4C", Offset = "0xDF2A4C", VA = "0xDF2A4C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xDF2AB8", Offset = "0xDF2AB8", VA = "0xDF2AB8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xDF2B20", Offset = "0xDF2B20", VA = "0xDF2B20")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000189")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10768", Offset = "0xA10768")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10778", Offset = "0xA10778")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA107B0", Offset = "0xA107B0")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA107E8", Offset = "0xA107E8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000084")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xDF2C3C", Offset = "0xDF2C3C", VA = "0xDF2C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EE50", Offset = "0xA1EE50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xDF2C44", Offset = "0xDF2C44", VA = "0xDF2C44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EE60", Offset = "0xA1EE60")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xDF2DF4", Offset = "0xDF2DF4", VA = "0xDF2DF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EE70", Offset = "0xA1EE70")]
		add
		{
		}
		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xDF2E98", Offset = "0xDF2E98", VA = "0xDF2E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EE80", Offset = "0xA1EE80")]
		remove
		{
		}
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xDF2C50", Offset = "0xDF2C50", VA = "0xDF2C50")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xDF2CD8", Offset = "0xDF2CD8", VA = "0xDF2CD8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xDF2DB0", Offset = "0xDF2DB0", VA = "0xDF2DB0")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xDF2DF0", Offset = "0xDF2DF0", VA = "0xDF2DF0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xDF2F3C", Offset = "0xDF2F3C", VA = "0xDF2F3C")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xDF2FA4", Offset = "0xDF2FA4", VA = "0xDF2FA4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xDF2FC4", Offset = "0xDF2FC4", VA = "0xDF2FC4", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200018A")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200045A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04390", Offset = "0xA04390")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000227")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0xDF3688", Offset = "0xDF3688", VA = "0xDF3688", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xDF36F0", Offset = "0xDF36F0", VA = "0xDF36F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xDF33D4", Offset = "0xDF33D4", VA = "0xDF33D4")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xDF35F8", Offset = "0xDF35F8", VA = "0xDF35F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xDF35FC", Offset = "0xDF35FC", VA = "0xDF35FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xDF3690", Offset = "0xDF3690", VA = "0xDF3690", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA043A0", Offset = "0xA043A0")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0xDF3588", Offset = "0xDF3588", VA = "0xDF3588", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A6F")]
			[Address(RVA = "0xDF35F0", Offset = "0xDF35F0", VA = "0xDF35F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xDF3470", Offset = "0xDF3470", VA = "0xDF3470")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xDF34F4", Offset = "0xDF34F4", VA = "0xDF34F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xDF34F8", Offset = "0xDF34F8", VA = "0xDF34F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xDF3590", Offset = "0xDF3590", VA = "0xDF3590", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xDF31A4", Offset = "0xDF31A4", VA = "0xDF31A4")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xDF3250", Offset = "0xDF3250", VA = "0xDF3250", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xDF32A8", Offset = "0xDF32A8", VA = "0xDF32A8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xDF3364", Offset = "0xDF3364", VA = "0xDF3364")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1EE90", Offset = "0xA1EE90")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xDF3400", Offset = "0xDF3400", VA = "0xDF3400")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1EEF4", Offset = "0xA1EEF4")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009C5")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60009C6")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xDF349C", Offset = "0xDF349C", VA = "0xDF349C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EF58", Offset = "0xA1EF58")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xDF34C8", Offset = "0xDF34C8", VA = "0xDF34C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EF68", Offset = "0xA1EF68")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200018B")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10830", Offset = "0xA10830")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10840", Offset = "0xA10840")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10878", Offset = "0xA10878")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA108B0", Offset = "0xA108B0")]
	public bool FastTeleport;

	[Token(Token = "0x17000085")]
	public Transform Pointer
	{
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xDF36F8", Offset = "0xDF36F8", VA = "0xDF36F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EF78", Offset = "0xA1EF78")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xDF3700", Offset = "0xDF3700", VA = "0xDF3700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EF88", Offset = "0xA1EF88")]
		private set
		{
		}
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xDF3708", Offset = "0xDF3708", VA = "0xDF3708", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xDF3864", Offset = "0xDF3864", VA = "0xDF3864", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xDF391C", Offset = "0xDF391C", VA = "0xDF391C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200018C")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200045C")]
	public enum InputModes
	{
		[Token(Token = "0x4001B64")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001B65")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001B66")]
		ThumbstickTeleport,
		[Token(Token = "0x4001B67")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200045D")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001B69")]
		A,
		[Token(Token = "0x4001B6A")]
		B,
		[Token(Token = "0x4001B6B")]
		LeftTrigger,
		[Token(Token = "0x4001B6C")]
		LeftThumbstick,
		[Token(Token = "0x4001B6D")]
		RightTrigger,
		[Token(Token = "0x4001B6E")]
		RightThumbstick,
		[Token(Token = "0x4001B6F")]
		X,
		[Token(Token = "0x4001B70")]
		Y
	}

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA108E8", Offset = "0xA108E8")]
	public InputModes InputMode;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10920", Offset = "0xA10920")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10958", Offset = "0xA10958")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10990", Offset = "0xA10990")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xDF3920", Offset = "0xDF3920", VA = "0xDF3920")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xDF3924", Offset = "0xDF3924", VA = "0xDF3924", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xDF3D6C", Offset = "0xDF3D6C", VA = "0xDF3D6C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xDF3E2C", Offset = "0xDF3E2C", VA = "0xDF3E2C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200018D")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200045E")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001B72")]
		HeadRelative,
		[Token(Token = "0x4001B73")]
		ForwardFacing
	}

	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA043B0", Offset = "0xA043B0")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700022B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0xDF42BC", Offset = "0xDF42BC", VA = "0xDF42BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0xDF4324", Offset = "0xDF4324", VA = "0xDF4324", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xDF4098", Offset = "0xDF4098", VA = "0xDF4098")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xDF4214", Offset = "0xDF4214", VA = "0xDF4214", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xDF4218", Offset = "0xDF4218", VA = "0xDF4218", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xDF42C4", Offset = "0xDF42C4", VA = "0xDF42C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xDF3ED8", Offset = "0xDF3ED8", VA = "0xDF3ED8")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xDF3F8C", Offset = "0xDF3F8C", VA = "0xDF3F8C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xDF3F94", Offset = "0xDF3F94", VA = "0xDF3F94", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xDF3FE0", Offset = "0xDF3FE0", VA = "0xDF3FE0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xDF4028", Offset = "0xDF4028", VA = "0xDF4028")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1EF98", Offset = "0xA1EF98")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009D7")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60009D8")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xDF40C4", Offset = "0xDF40C4", VA = "0xDF40C4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xDF41E8", Offset = "0xDF41E8", VA = "0xDF41E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1EFFC", Offset = "0xA1EFFC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200018E")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xDF432C", Offset = "0xDF432C", VA = "0xDF432C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xDF4330", Offset = "0xDF4330", VA = "0xDF4330", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xDF43AC", Offset = "0xDF43AC", VA = "0xDF43AC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200018F")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA109C8", Offset = "0xA109C8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10A00", Offset = "0xA10A00")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10A38", Offset = "0xA10A38")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10A70", Offset = "0xA10A70")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xDF43B0", Offset = "0xDF43B0", VA = "0xDF43B0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xDF4420", Offset = "0xDF4420", VA = "0xDF4420", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xDF4898", Offset = "0xDF4898", VA = "0xDF4898")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000190")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10AA8", Offset = "0xA10AA8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10AE0", Offset = "0xA10AE0")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10B18", Offset = "0xA10B18")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xDF489C", Offset = "0xDF489C", VA = "0xDF489C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xDF48E0", Offset = "0xDF48E0", VA = "0xDF48E0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xDF4D50", Offset = "0xDF4D50", VA = "0xDF4D50")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000191")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xDF4D60", Offset = "0xDF4D60", VA = "0xDF4D60")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xDF4D64", Offset = "0xDF4D64", VA = "0xDF4D64")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xDF4D6C", Offset = "0xDF4D6C", VA = "0xDF4D6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xDF4E54", Offset = "0xDF4E54", VA = "0xDF4E54")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xDF4E7C", Offset = "0xDF4E7C", VA = "0xDF4E7C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000192")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10B50", Offset = "0xA10B50")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000086")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xDF4E94", Offset = "0xDF4E94", VA = "0xDF4E94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F00C", Offset = "0xA1F00C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xDF4E9C", Offset = "0xDF4E9C", VA = "0xDF4E9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F01C", Offset = "0xA1F01C")]
		private set
		{
		}
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xDF2358", Offset = "0xDF2358", VA = "0xDF2358", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xDF2460", Offset = "0xDF2460", VA = "0xDF2460", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xDF4EA4", Offset = "0xDF4EA4", VA = "0xDF4EA4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA1F02C", Offset = "0xA1F02C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xDF2AAC", Offset = "0xDF2AAC", VA = "0xDF2AAC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xDF2B18", Offset = "0xDF2B18", VA = "0xDF2B18", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xDF2494", Offset = "0xDF2494", VA = "0xDF2494")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000193")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000460")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA043C0", Offset = "0xA043C0")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700022D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0xDF54FC", Offset = "0xDF54FC", VA = "0xDF54FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0xDF5564", Offset = "0xDF5564", VA = "0xDF5564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xDF50F8", Offset = "0xDF50F8", VA = "0xDF50F8")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xDF5290", Offset = "0xDF5290", VA = "0xDF5290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xDF5294", Offset = "0xDF5294", VA = "0xDF5294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xDF5504", Offset = "0xDF5504", VA = "0xDF5504", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10B60", Offset = "0xA10B60")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000B1B")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xDF4F70", Offset = "0xDF4F70", VA = "0xDF4F70")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xDF5034", Offset = "0xDF5034", VA = "0xDF5034", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xDF5060", Offset = "0xDF5060", VA = "0xDF5060", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xDF5088", Offset = "0xDF5088", VA = "0xDF5088")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F064", Offset = "0xA1F064")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xDF5124", Offset = "0xDF5124", VA = "0xDF5124", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60009F6")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xDF5140", Offset = "0xDF5140", VA = "0xDF5140", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xDF5264", Offset = "0xDF5264", VA = "0xDF5264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F0C8", Offset = "0xA1F0C8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000194")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xDF556C", Offset = "0xDF556C", VA = "0xDF556C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xDF55CC", Offset = "0xDF55CC", VA = "0xDF55CC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xDF5750", Offset = "0xDF5750", VA = "0xDF5750", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xDF5840", Offset = "0xDF5840", VA = "0xDF5840")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA1F0D8", Offset = "0xA1F0D8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xDF5844", Offset = "0xDF5844", VA = "0xDF5844")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000195")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10B98", Offset = "0xA10B98")]
	public float LOSOffset;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10BD0", Offset = "0xA10BD0")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xDF5850", Offset = "0xDF5850", VA = "0xDF5850", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xDF5A80", Offset = "0xDF5A80", VA = "0xDF5A80")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000196")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xDF5A8C", Offset = "0xDF5A8C", VA = "0xDF5A8C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xDF5C10", Offset = "0xDF5C10", VA = "0xDF5C10")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000197")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xDF67B0", Offset = "0xDF67B0", VA = "0xDF67B0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xDF6848", Offset = "0xDF6848", VA = "0xDF6848", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000A04")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xDF68DC", Offset = "0xDF68DC", VA = "0xDF68DC")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000198")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000461")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA043D0", Offset = "0xA043D0")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700022F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0xDF6C44", Offset = "0xDF6C44", VA = "0xDF6C44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0xDF6CAC", Offset = "0xDF6CAC", VA = "0xDF6CAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xDF6980", Offset = "0xDF6980", VA = "0xDF6980")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xDF6B44", Offset = "0xDF6B44", VA = "0xDF6B44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xDF6B48", Offset = "0xDF6B48", VA = "0xDF6B48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xDF6C4C", Offset = "0xDF6C4C", VA = "0xDF6C4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10C08", Offset = "0xA10C08")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10C08", Offset = "0xA10C08")]
	public float TransitionDuration;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10C60", Offset = "0xA10C60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10C60", Offset = "0xA10C60")]
	public float TeleportDelay;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10CB4", Offset = "0xA10CB4")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xDF68E4", Offset = "0xDF68E4", VA = "0xDF68E4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xDF6910", Offset = "0xDF6910", VA = "0xDF6910")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F110", Offset = "0xA1F110")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xDF69AC", Offset = "0xDF69AC", VA = "0xDF69AC")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000199")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xDF6CB4", Offset = "0xDF6CB4", VA = "0xDF6CB4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xDF6CD0", Offset = "0xDF6CD0", VA = "0xDF6CD0")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200019A")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA043E0", Offset = "0xA043E0")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000231")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0xDF6F1C", Offset = "0xDF6F1C", VA = "0xDF6F1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0xDF6F84", Offset = "0xDF6F84", VA = "0xDF6F84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xDF6D74", Offset = "0xDF6D74", VA = "0xDF6D74")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xDF6DE8", Offset = "0xDF6DE8", VA = "0xDF6DE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xDF6DEC", Offset = "0xDF6DEC", VA = "0xDF6DEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xDF6F24", Offset = "0xDF6F24", VA = "0xDF6F24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10CEC", Offset = "0xA10CEC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10CEC", Offset = "0xA10CEC")]
	public float TransitionDuration;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA10D44", Offset = "0xA10D44")]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xDF6CD8", Offset = "0xDF6CD8", VA = "0xDF6CD8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xDF6D04", Offset = "0xDF6D04", VA = "0xDF6D04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F174", Offset = "0xA1F174")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xDF6DA0", Offset = "0xDF6DA0", VA = "0xDF6DA0")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200019B")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000463")]
	public enum PlabackState
	{
		[Token(Token = "0x4001B86")]
		Idle = 1,
		[Token(Token = "0x4001B87")]
		Preparing,
		[Token(Token = "0x4001B88")]
		Buffering,
		[Token(Token = "0x4001B89")]
		Ready,
		[Token(Token = "0x4001B8A")]
		Ended
	}

	[Token(Token = "0x2000464")]
	public enum StereoMode
	{
		[Token(Token = "0x4001B8C")]
		Unknown = -1,
		[Token(Token = "0x4001B8D")]
		Mono,
		[Token(Token = "0x4001B8E")]
		TopBottom,
		[Token(Token = "0x4001B8F")]
		LeftRight,
		[Token(Token = "0x4001B90")]
		Mesh
	}

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000087")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xCC34B8", Offset = "0xCC34B8", VA = "0xCC34B8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000088")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xCC3774", Offset = "0xCC3774", VA = "0xCC3774")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000089")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xCC39B8", Offset = "0xCC39B8", VA = "0xCC39B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008A")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xCC3A20", Offset = "0xCC3A20", VA = "0xCC3A20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008B")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xCC3B10", Offset = "0xCC3B10", VA = "0xCC3B10")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700008C")]
	public static long Duration
	{
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xCC3C04", Offset = "0xCC3C04", VA = "0xCC3C04")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700008D")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xCC3CF8", Offset = "0xCC3CF8", VA = "0xCC3CF8")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700008E")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xCC3DEC", Offset = "0xCC3DEC", VA = "0xCC3DEC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008F")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xCC3EE0", Offset = "0xCC3EE0", VA = "0xCC3EE0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000090")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xCC3FD4", Offset = "0xCC3FD4", VA = "0xCC3FD4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xCC40C8", Offset = "0xCC40C8", VA = "0xCC40C8")]
		set
		{
		}
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xCC4208", Offset = "0xCC4208", VA = "0xCC4208")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xCC43FC", Offset = "0xCC43FC", VA = "0xCC43FC")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xCC44F0", Offset = "0xCC44F0", VA = "0xCC44F0")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xCC45E4", Offset = "0xCC45E4", VA = "0xCC45E4")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xCC46D8", Offset = "0xCC46D8", VA = "0xCC46D8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xCC4820", Offset = "0xCC4820", VA = "0xCC4820")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xCC4964", Offset = "0xCC4964", VA = "0xCC4964")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x200019C")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x119E244", Offset = "0x119E244", VA = "0x119E244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F1D8", Offset = "0xA1F1D8")]
		add
		{
		}
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x119E2E8", Offset = "0x119E2E8", VA = "0x119E2E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F1E8", Offset = "0xA1F1E8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x119E38C", Offset = "0x119E38C", VA = "0x119E38C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x119E3A0", Offset = "0x119E3A0", VA = "0x119E3A0")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200019D")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000465")]
	public enum ButtonType
	{
		[Token(Token = "0x4001B92")]
		Play,
		[Token(Token = "0x4001B93")]
		Pause,
		[Token(Token = "0x4001B94")]
		FastForward,
		[Token(Token = "0x4001B95")]
		Rewind,
		[Token(Token = "0x4001B96")]
		SkipForward,
		[Token(Token = "0x4001B97")]
		SkipBack,
		[Token(Token = "0x4001B98")]
		Stop
	}

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000091")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xCAFD4C", Offset = "0xCAFD4C", VA = "0xCAFD4C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xCAFD54", Offset = "0xCAFD54", VA = "0xCAFD54")]
		set
		{
		}
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xCAFD78", Offset = "0xCAFD78", VA = "0xCAFD78", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xCB1244", Offset = "0xCB1244", VA = "0xCB1244")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200019E")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000466")]
	public enum VideoShape
	{
		[Token(Token = "0x4001B9A")]
		_360,
		[Token(Token = "0x4001B9B")]
		_180,
		[Token(Token = "0x4001B9C")]
		Quad
	}

	[Token(Token = "0x2000467")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001B9E")]
		Mono,
		[Token(Token = "0x4001B9F")]
		TopBottom,
		[Token(Token = "0x4001BA0")]
		LeftRight,
		[Token(Token = "0x4001BA1")]
		BottomTop
	}

	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA043F0", Offset = "0xA043F0")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000233")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0xCB7FD4", Offset = "0xCB7FD4", VA = "0xCB7FD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0xCB803C", Offset = "0xCB803C", VA = "0xCB803C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xCB7128", Offset = "0xCB7128", VA = "0xCB7128")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xCB7E50", Offset = "0xCB7E50", VA = "0xCB7E50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xCB7E54", Offset = "0xCB7E54", VA = "0xCB7E54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xCB7FDC", Offset = "0xCB7FDC", VA = "0xCB7FDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04400", Offset = "0xA04400")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xCB7390", Offset = "0xCB7390", VA = "0xCB7390")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xCB7D74", Offset = "0xCB7D74", VA = "0xCB7D74")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10D74", Offset = "0xA10D74")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10D84", Offset = "0xA10D84")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10D94", Offset = "0xA10D94")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000092")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xCB6AC4", Offset = "0xCB6AC4", VA = "0xCB6AC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F1F8", Offset = "0xA1F1F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xCB6ACC", Offset = "0xCB6ACC", VA = "0xCB6ACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F208", Offset = "0xA1F208")]
		private set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public long Duration
	{
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xCB6AD8", Offset = "0xCB6AD8", VA = "0xCB6AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F218", Offset = "0xA1F218")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xCB6AE0", Offset = "0xCB6AE0", VA = "0xCB6AE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F228", Offset = "0xA1F228")]
		private set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xCB6AE8", Offset = "0xCB6AE8", VA = "0xCB6AE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F238", Offset = "0xA1F238")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xCB6AF0", Offset = "0xCB6AF0", VA = "0xCB6AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F248", Offset = "0xA1F248")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xCB6AF8", Offset = "0xCB6AF8", VA = "0xCB6AF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xCB6D14", Offset = "0xCB6D14", VA = "0xCB6D14")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xCB6D7C", Offset = "0xCB6D7C", VA = "0xCB6D7C")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xCB70B8", Offset = "0xCB70B8", VA = "0xCB70B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F258", Offset = "0xA1F258")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xCB7154", Offset = "0xCB7154", VA = "0xCB7154")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xCB7398", Offset = "0xCB7398", VA = "0xCB7398")]
	public void Play()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xCB7430", Offset = "0xCB7430", VA = "0xCB7430")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xCB74C4", Offset = "0xCB74C4", VA = "0xCB74C4")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xCB75C0", Offset = "0xCB75C0", VA = "0xCB75C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xCB7B10", Offset = "0xCB7B10", VA = "0xCB7B10")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xCB7BEC", Offset = "0xCB7BEC", VA = "0xCB7BEC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xCB7C80", Offset = "0xCB7C80", VA = "0xCB7C80")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xCB7D64", Offset = "0xCB7D64", VA = "0xCB7D64")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200019F")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200046A")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001BA9")]
		Playing,
		[Token(Token = "0x4001BAA")]
		Paused,
		[Token(Token = "0x4001BAB")]
		Rewinding,
		[Token(Token = "0x4001BAC")]
		FastForwarding
	}

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xCB8044", Offset = "0xCB8044", VA = "0xCB8044")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xCB8340", Offset = "0xCB8340", VA = "0xCB8340")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xCB851C", Offset = "0xCB851C", VA = "0xCB851C")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xCB8650", Offset = "0xCB8650", VA = "0xCB8650")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xCB8758", Offset = "0xCB8758", VA = "0xCB8758")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xCB8624", Offset = "0xCB8624", VA = "0xCB8624")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xCB8820", Offset = "0xCB8820", VA = "0xCB8820")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xCB8234", Offset = "0xCB8234", VA = "0xCB8234")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xCB8BB4", Offset = "0xCB8BB4", VA = "0xCB8BB4")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20001A0")]
public static class VectorUtil
{
	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xE807D0", Offset = "0xE807D0", VA = "0xE807D0")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20001A1")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000B66")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000B67")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x1193FE0", Offset = "0x1193FE0", VA = "0x1193FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x11942E8", Offset = "0x11942E8", VA = "0x11942E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x1194508", Offset = "0x1194508", VA = "0x1194508")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x1194644", Offset = "0x1194644", VA = "0x1194644")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x1194784", Offset = "0x1194784", VA = "0x1194784")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x11948E8", Offset = "0x11948E8", VA = "0x11948E8")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20001A2")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000B70")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xED86CC", Offset = "0xED86CC", VA = "0xED86CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xED8720", Offset = "0xED8720", VA = "0xED8720")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xED8724", Offset = "0xED8724", VA = "0xED8724")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xED8728", Offset = "0xED8728", VA = "0xED8728")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xED891C", Offset = "0xED891C", VA = "0xED891C")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xED8AFC", Offset = "0xED8AFC", VA = "0xED8AFC")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20001A3")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xEE4578", Offset = "0xEE4578", VA = "0xEE4578")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xEE4948", Offset = "0xEE4948", VA = "0xEE4948")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xEE4A00", Offset = "0xEE4A00", VA = "0xEE4A00")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xEE4C00", Offset = "0xEE4C00", VA = "0xEE4C00")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xEE4CE8", Offset = "0xEE4CE8", VA = "0xEE4CE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xEE4DC4", Offset = "0xEE4DC4", VA = "0xEE4DC4")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xEE4E30", Offset = "0xEE4E30", VA = "0xEE4E30")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xEE4E38", Offset = "0xEE4E38", VA = "0xEE4E38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F2CC", Offset = "0xA1F2CC")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xEE4E94", Offset = "0xEE4E94", VA = "0xEE4E94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F2DC", Offset = "0xA1F2DC")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xEE4EF0", Offset = "0xEE4EF0", VA = "0xEE4EF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F2EC", Offset = "0xA1F2EC")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xEE4F4C", Offset = "0xEE4F4C", VA = "0xEE4F4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F2FC", Offset = "0xA1F2FC")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20001A4")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1193844", Offset = "0x1193844", VA = "0x1193844")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20001A5")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xD27F50", Offset = "0xD27F50", VA = "0xD27F50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xD27FEC", Offset = "0xD27FEC", VA = "0xD27FEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xD280D0", Offset = "0xD280D0", VA = "0xD280D0")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xD28134", Offset = "0xD28134", VA = "0xD28134")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20001A6")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xCEACEC", Offset = "0xCEACEC", VA = "0xCEACEC")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20001A7")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04410", Offset = "0xA04410")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000235")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0xEB2530", Offset = "0xEB2530", VA = "0xEB2530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0xEB2598", Offset = "0xEB2598", VA = "0xEB2598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xEB23E0", Offset = "0xEB23E0", VA = "0xEB23E0")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xEB2414", Offset = "0xEB2414", VA = "0xEB2414", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xEB2418", Offset = "0xEB2418", VA = "0xEB2418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xEB2538", Offset = "0xEB2538", VA = "0xEB2538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xEB20E4", Offset = "0xEB20E4", VA = "0xEB20E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xEB21E4", Offset = "0xEB21E4", VA = "0xEB21E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xEB2174", Offset = "0xEB2174", VA = "0xEB2174")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F30C", Offset = "0xA1F30C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xEB240C", Offset = "0xEB240C", VA = "0xEB240C")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20001A8")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01518", Offset = "0xA01518")]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10DC4", Offset = "0xA10DC4")]
	public int SubdivisionsU;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10DE0", Offset = "0xA10DE0")]
	public int SubdivisionsV;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xFFEA4C", Offset = "0xFFEA4C", VA = "0xFFEA4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xFFF504", Offset = "0xFFF504", VA = "0xFFF504")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20001A9")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000095")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xCA979C", Offset = "0xCA979C", VA = "0xCA979C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xCA97F4", Offset = "0xCA97F4", VA = "0xCA97F4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xCA9B38", Offset = "0xCA9B38", VA = "0xCA9B38")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xCA9C1C", Offset = "0xCA9C1C", VA = "0xCA9C1C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA1F370", Offset = "0xA1F370")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000A6D")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000A6E")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000A6F")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000A70")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000A71")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000A72")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000A73")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000A74")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xCA9C84", Offset = "0xCA9C84", VA = "0xCA9C84")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xCA9CC0", Offset = "0xCA9CC0", VA = "0xCA9CC0")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xCA9D34", Offset = "0xCA9D34", VA = "0xCA9D34")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xCA9E90", Offset = "0xCA9E90", VA = "0xCA9E90")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xCA9F64", Offset = "0xCA9F64", VA = "0xCA9F64")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xCA9A44", Offset = "0xCA9A44", VA = "0xCA9A44")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xCAA024", Offset = "0xCAA024", VA = "0xCAA024")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xCAA08C", Offset = "0xCAA08C", VA = "0xCAA08C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xCAA170", Offset = "0xCAA170", VA = "0xCAA170")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20001AA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA01528", Offset = "0xA01528")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200046C")]
	public enum DrawMode
	{
		[Token(Token = "0x4001BB1")]
		Opaque,
		[Token(Token = "0x4001BB2")]
		OpaqueWithClip,
		[Token(Token = "0x4001BB3")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001BB4")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA10DFC", Offset = "0xA10DFC")]
	private Shader _transparentShader;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA10E34", Offset = "0xA10E34")]
	private Shader _opaqueShader;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000096")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xCC7018", Offset = "0xCC7018", VA = "0xCC7018")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xCC70AC", Offset = "0xCC70AC", VA = "0xCC70AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xCC59A8", Offset = "0xCC59A8", VA = "0xCC59A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xCC6618", Offset = "0xCC6618", VA = "0xCC6618")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xCC669C", Offset = "0xCC669C", VA = "0xCC669C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xCC6790", Offset = "0xCC6790", VA = "0xCC6790")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xCC6884", Offset = "0xCC6884", VA = "0xCC6884", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xCC6A88", Offset = "0xCC6A88", VA = "0xCC6A88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xCC717C", Offset = "0xCC717C", VA = "0xCC717C")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20001AB")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x11948F8", Offset = "0x11948F8", VA = "0x11948F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x1194A74", Offset = "0x1194A74", VA = "0x1194A74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x1194C2C", Offset = "0x1194C2C", VA = "0x1194C2C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x1194C34", Offset = "0x1194C34", VA = "0x1194C34")]
	public void Release()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x1194C1C", Offset = "0x1194C1C", VA = "0x1194C1C")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x1194C3C", Offset = "0x1194C3C", VA = "0x1194C3C")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20001AC")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04420", Offset = "0xA04420")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000237")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x119DFC0", Offset = "0x119DFC0", VA = "0x119DFC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x119E028", Offset = "0x119E028", VA = "0x119E028", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x119DE24", Offset = "0x119DE24", VA = "0x119DE24")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x119DE84", Offset = "0x119DE84", VA = "0x119DE84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x119DE88", Offset = "0x119DE88", VA = "0x119DE88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x119DFC8", Offset = "0x119DFC8", VA = "0x119DFC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200046E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04430", Offset = "0xA04430")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000239")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x119E1D4", Offset = "0x119E1D4", VA = "0x119E1D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0x119E23C", Offset = "0x119E23C", VA = "0x119E23C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x119DE50", Offset = "0x119DE50", VA = "0x119DE50")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x119E030", Offset = "0x119E030", VA = "0x119E030", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x119E034", Offset = "0x119E034", VA = "0x119E034", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x119E1DC", Offset = "0x119E1DC", VA = "0x119E1DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x119D8B8", Offset = "0x119D8B8", VA = "0x119D8B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x119DAFC", Offset = "0x119DAFC", VA = "0x119DAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x119DB58", Offset = "0x119DB58", VA = "0x119DB58")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x119DCC0", Offset = "0x119DCC0", VA = "0x119DCC0")]
	public void Release()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x119DD84", Offset = "0x119DD84", VA = "0x119DD84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F3A8", Offset = "0xA1F3A8")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x119DC04", Offset = "0x119DC04", VA = "0x119DC04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F40C", Offset = "0xA1F40C")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x119DE7C", Offset = "0x119DE7C", VA = "0x119DE7C")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20001AD")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xEE91B4", Offset = "0xEE91B4", VA = "0xEE91B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xEE9218", Offset = "0xEE9218", VA = "0xEE9218")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20001AE")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x13AF9FC", Offset = "0x13AF9FC", VA = "0x13AF9FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x13AFBDC", Offset = "0x13AFBDC", VA = "0x13AFBDC")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x13AFC70", Offset = "0x13AFC70", VA = "0x13AFC70")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x13AFCD8", Offset = "0x13AFCD8", VA = "0x13AFCD8")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20001AF")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x200046F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04440", Offset = "0xA04440")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700023B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0xEA4E04", Offset = "0xEA4E04", VA = "0xEA4E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0xEA4E6C", Offset = "0xEA4E6C", VA = "0xEA4E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xEA4BB8", Offset = "0xEA4BB8", VA = "0xEA4BB8")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xEA4BE4", Offset = "0xEA4BE4", VA = "0xEA4BE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xEA4BE8", Offset = "0xEA4BE8", VA = "0xEA4BE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xEA4E0C", Offset = "0xEA4E0C", VA = "0xEA4E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x13AFCE0", Offset = "0x13AFCE0", VA = "0x13AFCE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x13AFF10", Offset = "0x13AFF10", VA = "0x13AFF10")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x13B0240", Offset = "0x13B0240", VA = "0x13B0240")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x13B0558", Offset = "0x13B0558", VA = "0x13B0558")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x13B08C8", Offset = "0x13B08C8", VA = "0x13B08C8")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x13B09C0", Offset = "0x13B09C0", VA = "0x13B09C0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x13B0B7C", Offset = "0x13B0B7C", VA = "0x13B0B7C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x13B0AD0", Offset = "0x13B0AD0", VA = "0x13B0AD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F470", Offset = "0xA1F470")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x13B0C5C", Offset = "0x13B0C5C", VA = "0x13B0C5C")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20001B0")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000470")]
	public enum ManipulationType
	{
		[Token(Token = "0x4001BCD")]
		Default,
		[Token(Token = "0x4001BCE")]
		ForcedHand,
		[Token(Token = "0x4001BCF")]
		DollyHand,
		[Token(Token = "0x4001BD0")]
		DollyAttached,
		[Token(Token = "0x4001BD1")]
		HorizontalScaled,
		[Token(Token = "0x4001BD2")]
		VerticalScaled,
		[Token(Token = "0x4001BD3")]
		Menu
	}

	[Token(Token = "0x2000471")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000472")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000473")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA10E6C", Offset = "0xA10E6C")]
	public string ObjectName;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA10E7C", Offset = "0xA10E7C")]
	public string ObjectInstructions;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA10E8C", Offset = "0xA10E8C")]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xEACEFC", Offset = "0xEACEFC", VA = "0xEACEFC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xEAD1C4", Offset = "0xEAD1C4", VA = "0xEAD1C4")]
	public void Release()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xEAD3E0", Offset = "0xEAD3E0", VA = "0xEAD3E0")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xEAD688", Offset = "0xEAD688", VA = "0xEAD688")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20001B1")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10E9C", Offset = "0xA10E9C")]
	public int radialDivisions;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10ED4", Offset = "0xA10ED4")]
	public float borderSize;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10F0C", Offset = "0xA10F0C")]
	public float fingerTaper;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10F44", Offset = "0xA10F44")]
	public float fingerTipLength;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA10F7C", Offset = "0xA10F7C")]
	public float webOffset;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xEAD89C", Offset = "0xEAD89C", VA = "0xEAD89C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xEADA54", Offset = "0xEADA54", VA = "0xEADA54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xEADC7C", Offset = "0xEADC7C", VA = "0xEADC7C")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xEAE2E4", Offset = "0xEAE2E4", VA = "0xEAE2E4")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xEAEA80", Offset = "0xEAEA80", VA = "0xEAEA80")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xEB1124", Offset = "0xEB1124", VA = "0xEB1124")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xEB11E0", Offset = "0xEB11E0", VA = "0xEB11E0")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20001B2")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xEB1204", Offset = "0xEB1204", VA = "0xEB1204")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xEB1518", Offset = "0xEB1518", VA = "0xEB1518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xEB12AC", Offset = "0xEB12AC", VA = "0xEB12AC")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xEB19B0", Offset = "0xEB19B0", VA = "0xEB19B0")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xEB1F40", Offset = "0xEB1F40", VA = "0xEB1F40")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20001B3")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000474")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04450", Offset = "0xA04450")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700023D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xCCAE40", Offset = "0xCCAE40", VA = "0xCCAE40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xCCAEA8", Offset = "0xCCAEA8", VA = "0xCCAEA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xCCA758", Offset = "0xCCA758", VA = "0xCCA758")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xCCAAD8", Offset = "0xCCAAD8", VA = "0xCCAAD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xCCAADC", Offset = "0xCCAADC", VA = "0xCCAADC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xCCAE48", Offset = "0xCCAE48", VA = "0xCCAE48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xCC8360", Offset = "0xCC8360", VA = "0xCC8360")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xCC8594", Offset = "0xCC8594", VA = "0xCC8594")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xCC9448", Offset = "0xCC9448", VA = "0xCC9448")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xCCA41C", Offset = "0xCCA41C", VA = "0xCCA41C")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xCC8524", Offset = "0xCC8524", VA = "0xCC8524")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F4D4", Offset = "0xA1F4D4")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xCC8838", Offset = "0xCC8838", VA = "0xCC8838")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xCC9768", Offset = "0xCC9768", VA = "0xCC9768")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xCCA784", Offset = "0xCCA784", VA = "0xCCA784")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xCCA85C", Offset = "0xCCA85C", VA = "0xCCA85C")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xCCA8BC", Offset = "0xCCA8BC", VA = "0xCCA8BC")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xCCA628", Offset = "0xCCA628", VA = "0xCCA628")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xCCA9D8", Offset = "0xCCA9D8", VA = "0xCCA9D8")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20001B4")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xC33BAC", Offset = "0xC33BAC", VA = "0xC33BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xC33D00", Offset = "0xC33D00", VA = "0xC33D00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xC33DCC", Offset = "0xC33DCC", VA = "0xC33DCC")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x20001B5")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000475")]
	public enum BrushState
	{
		[Token(Token = "0x4001BDA")]
		Idle,
		[Token(Token = "0x4001BDB")]
		Inking
	}

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xE59990", Offset = "0xE59990", VA = "0xE59990")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xE59998", Offset = "0xE59998", VA = "0xE59998")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xE59D08", Offset = "0xE59D08", VA = "0xE59D08")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xE59ED8", Offset = "0xE59ED8", VA = "0xE59ED8")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xE5A098", Offset = "0xE5A098", VA = "0xE5A098")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xE59C10", Offset = "0xE59C10", VA = "0xE59C10")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xE5A178", Offset = "0xE5A178", VA = "0xE5A178")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x20001B6")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xE5A1FC", Offset = "0xE5A1FC", VA = "0xE5A1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xE5A350", Offset = "0xE5A350", VA = "0xE5A350")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xE5A560", Offset = "0xE5A560", VA = "0xE5A560")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x20001B7")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xE5A568", Offset = "0xE5A568", VA = "0xE5A568")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xE5A718", Offset = "0xE5A718", VA = "0xE5A718")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xE5A8EC", Offset = "0xE5A8EC", VA = "0xE5A8EC")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x20001B8")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000476")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04460", Offset = "0xA04460")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x1700023F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xE5B498", Offset = "0xE5B498", VA = "0xE5B498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000240")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xE5B500", Offset = "0xE5B500", VA = "0xE5B500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xE5B0EC", Offset = "0xE5B0EC", VA = "0xE5B0EC")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xE5B2A8", Offset = "0xE5B2A8", VA = "0xE5B2A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xE5B2AC", Offset = "0xE5B2AC", VA = "0xE5B2AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xE5B4A0", Offset = "0xE5B4A0", VA = "0xE5B4A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000477")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04470", Offset = "0xA04470")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000241")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xE5B738", Offset = "0xE5B738", VA = "0xE5B738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xE5B7A0", Offset = "0xE5B7A0", VA = "0xE5B7A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xE5B118", Offset = "0xE5B118", VA = "0xE5B118")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xE5B508", Offset = "0xE5B508", VA = "0xE5B508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xE5B50C", Offset = "0xE5B50C", VA = "0xE5B50C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xE5B740", Offset = "0xE5B740", VA = "0xE5B740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xE5A8F4", Offset = "0xE5A8F4", VA = "0xE5A8F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xE5ABA8", Offset = "0xE5ABA8", VA = "0xE5ABA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xE5AE18", Offset = "0xE5AE18", VA = "0xE5AE18")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xE5AF88", Offset = "0xE5AF88", VA = "0xE5AF88")]
	public void Release()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xE5AF08", Offset = "0xE5AF08", VA = "0xE5AF08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F538", Offset = "0xA1F538")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xE5B06C", Offset = "0xE5B06C", VA = "0xE5B06C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F59C", Offset = "0xA1F59C")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xE5B144", Offset = "0xE5B144", VA = "0xE5B144")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xE5B164", Offset = "0xE5B164", VA = "0xE5B164")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xE5B184", Offset = "0xE5B184", VA = "0xE5B184")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xE5B1A4", Offset = "0xE5B1A4", VA = "0xE5B1A4")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xE5AB2C", Offset = "0xE5AB2C", VA = "0xE5AB2C")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xE5B208", Offset = "0xE5B208", VA = "0xE5B208")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xE5B214", Offset = "0xE5B214", VA = "0xE5B214")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xE5ABC0", Offset = "0xE5ABC0", VA = "0xE5ABC0")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xE5B220", Offset = "0xE5B220", VA = "0xE5B220")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x20001B9")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xE5B7A8", Offset = "0xE5B7A8", VA = "0xE5B7A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xE5B860", Offset = "0xE5B860", VA = "0xE5B860")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x20001BA")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xD2621C", Offset = "0xD2621C", VA = "0xD2621C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xD263E0", Offset = "0xD263E0", VA = "0xD263E0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xD26438", Offset = "0xD26438", VA = "0xD26438")]
	public void Release()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xD26484", Offset = "0xD26484", VA = "0xD26484")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x20001BB")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xD2813C", Offset = "0xD2813C", VA = "0xD2813C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xD281B8", Offset = "0xD281B8", VA = "0xD281B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xD28554", Offset = "0xD28554", VA = "0xD28554")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x20001BC")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xD2DA98", Offset = "0xD2DA98", VA = "0xD2DA98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xD2DFAC", Offset = "0xD2DFAC", VA = "0xD2DFAC")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x20001BD")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000478")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04480", Offset = "0xA04480")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xCEAEB4", Offset = "0xCEAEB4", VA = "0xCEAEB4")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xCEAFC4", Offset = "0xCEAFC4", VA = "0xCEAFC4")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xCEACF4", Offset = "0xCEACF4", VA = "0xCEACF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xCEAEBC", Offset = "0xCEAEBC", VA = "0xCEAEBC")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xCEAFBC", Offset = "0xCEAFBC", VA = "0xCEAFBC")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20001BE")]
public class PreformanceSettings : MonoBehaviour
{
	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA10FB4", Offset = "0xA10FB4")]
	public float renderScaleMax;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRManager.TiledMultiResLevel myRenderscale;

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xEF36B8", Offset = "0xEF36B8", VA = "0xEF36B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xEF3780", Offset = "0xEF3780", VA = "0xEF3780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xEF3784", Offset = "0xEF3784", VA = "0xEF3784")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xEF3788", Offset = "0xEF3788", VA = "0xEF3788")]
	public PreformanceSettings()
	{
	}
}
[Token(Token = "0x20001BF")]
public class qb_Group : MonoBehaviour
{
	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string groupName;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool visible;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool frozen;

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x2112E24", Offset = "0x2112E24", VA = "0x2112E24")]
	public void AddObject(GameObject newObject)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x2112E74", Offset = "0x2112E74", VA = "0x2112E74")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x2112E7C", Offset = "0x2112E7C", VA = "0x2112E7C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x2112E88", Offset = "0x2112E88", VA = "0x2112E88")]
	public void Freeze()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x2112E94", Offset = "0x2112E94", VA = "0x2112E94")]
	public void UnFreeze()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x2112E9C", Offset = "0x2112E9C", VA = "0x2112E9C")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x2112F18", Offset = "0x2112F18", VA = "0x2112F18")]
	public qb_Group()
	{
	}
}
[Token(Token = "0x20001C0")]
public class qb_Object : MonoBehaviour
{
	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x2112F20", Offset = "0x2112F20", VA = "0x2112F20")]
	public qb_Object()
	{
	}
}
[Token(Token = "0x20001C1")]
public enum Pipeline
{
	[Token(Token = "0x4000C12")]
	HDRP,
	[Token(Token = "0x4000C13")]
	LWRP,
	[Token(Token = "0x4000C14")]
	Standard
}
[Token(Token = "0x20001C2")]
public class Demo_Animator_DeerCalf : MonoBehaviour
{
	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int i;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int size;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool rot;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startpose;

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xEE4FA8", Offset = "0xEE4FA8", VA = "0xEE4FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xEE5024", Offset = "0xEE5024", VA = "0xEE5024")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xEE50C8", Offset = "0xEE50C8", VA = "0xEE50C8")]
	public void NextAnimation()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xEE5120", Offset = "0xEE5120", VA = "0xEE5120")]
	public void BackAnimation()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xEE5174", Offset = "0xEE5174", VA = "0xEE5174")]
	public Demo_Animator_DeerCalf()
	{
	}
}
[Token(Token = "0x20001C3")]
public class Demo_Animator_DeerDoe : MonoBehaviour
{
	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int i;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int size;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool rot;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startpose;

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xEE5184", Offset = "0xEE5184", VA = "0xEE5184")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xEE5200", Offset = "0xEE5200", VA = "0xEE5200")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xEE52A4", Offset = "0xEE52A4", VA = "0xEE52A4")]
	public void NextAnimation()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xEE52FC", Offset = "0xEE52FC", VA = "0xEE52FC")]
	public void BackAnimation()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xEE5350", Offset = "0xEE5350", VA = "0xEE5350")]
	public Demo_Animator_DeerDoe()
	{
	}
}
[Token(Token = "0x20001C4")]
public class Demo_Animator_DeerStag : MonoBehaviour
{
	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int i;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int size;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool rot;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startpose;

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xEE5360", Offset = "0xEE5360", VA = "0xEE5360")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xEE53DC", Offset = "0xEE53DC", VA = "0xEE53DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xEE5480", Offset = "0xEE5480", VA = "0xEE5480")]
	public void NextAnimation()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xEE54D8", Offset = "0xEE54D8", VA = "0xEE54D8")]
	public void BackAnimation()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xEE552C", Offset = "0xEE552C", VA = "0xEE552C")]
	public Demo_Animator_DeerStag()
	{
	}
}
[Token(Token = "0x20001C5")]
public class ScrollUV_River : MonoBehaviour
{
	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float horizontalScrollSpeed;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float verticalScrollSpeed;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _myRenderer;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool scroll;

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xD2BDAC", Offset = "0xD2BDAC", VA = "0xD2BDAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xD2BE54", Offset = "0xD2BE54", VA = "0xD2BE54")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xD2BEF8", Offset = "0xD2BEF8", VA = "0xD2BEF8")]
	public void DoActivateTrigger()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xD2BF08", Offset = "0xD2BF08", VA = "0xD2BF08")]
	public ScrollUV_River()
	{
	}
}
[Token(Token = "0x20001C6")]
public class Reindeer : MonoBehaviour
{
	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator reindeer;

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xF046A0", Offset = "0xF046A0", VA = "0xF046A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xF046A4", Offset = "0xF046A4", VA = "0xF046A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xF04B80", Offset = "0xF04B80", VA = "0xF04B80")]
	public Reindeer()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C7")]
public class SECTR_AudioAmbience
{
	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA10FCC", Offset = "0xA10FCC")]
	public SECTR_AudioCue BackgroundLoop;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1100C", Offset = "0xA1100C")]
	public List<SECTR_AudioCue> OneShots;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11044", Offset = "0xA11044")]
	public Vector2 OneShotInterval;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11090", Offset = "0xA11090")]
	public float Volume;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA110C8", Offset = "0xA110C8")]
	public bool UseOneShotCuesProbability;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA11100", Offset = "0xA11100")]
	public float TotalProbability;

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xD6B644", Offset = "0xD6B644", VA = "0xD6B644")]
	public SECTR_AudioAmbience()
	{
	}
}
[Token(Token = "0x20001C8")]
public class SECTR_AudioBus : ScriptableObject
{
	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA11110", Offset = "0xA11110")]
	private SECTR_AudioBus parent;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SECTR_AudioBus> children;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float userVolume;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float userPitch;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float effectiveVolume;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float effectivePitch;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool muted;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11148", Offset = "0xA11148")]
	public float Volume;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11188", Offset = "0xA11188")]
	public float Pitch;

	[Token(Token = "0x17000097")]
	public float UserVolume
	{
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xD6B6FC", Offset = "0xD6B6FC", VA = "0xD6B6FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xD6B6F4", Offset = "0xD6B6F4", VA = "0xD6B6F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public float UserPitch
	{
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xD6B70C", Offset = "0xD6B70C", VA = "0xD6B70C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xD6B704", Offset = "0xD6B704", VA = "0xD6B704")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public bool Muted
	{
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xD6B714", Offset = "0xD6B714", VA = "0xD6B714")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xD6B71C", Offset = "0xD6B71C", VA = "0xD6B71C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public float EffectiveVolume
	{
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xD6B728", Offset = "0xD6B728", VA = "0xD6B728")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xD6B730", Offset = "0xD6B730", VA = "0xD6B730")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public float EffectivePitch
	{
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xD6B7CC", Offset = "0xD6B7CC", VA = "0xD6B7CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xD6B7D4", Offset = "0xD6B7D4", VA = "0xD6B7D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public SECTR_AudioBus Parent
	{
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xD6BAD8", Offset = "0xD6BAD8", VA = "0xD6BAD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xD6B86C", Offset = "0xD6B86C", VA = "0xD6B86C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public List<SECTR_AudioBus> Children
	{
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xD6BAE0", Offset = "0xD6BAE0", VA = "0xD6BAE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xD6BAE8", Offset = "0xD6BAE8", VA = "0xD6BAE8")]
	public bool IsAncestorOf(SECTR_AudioBus bus)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xD6BBB0", Offset = "0xD6BBB0", VA = "0xD6BBB0")]
	public bool IsDecendentOf(SECTR_AudioBus bus)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xD6BC74", Offset = "0xD6BC74", VA = "0xD6BC74")]
	public void ResetUserVolume()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xD6BD58", Offset = "0xD6BD58", VA = "0xD6BD58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xD6BDE8", Offset = "0xD6BDE8", VA = "0xD6BDE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xD6BA0C", Offset = "0xD6BA0C", VA = "0xD6BA0C")]
	private void _AddChild(SECTR_AudioBus child)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xD6B9A4", Offset = "0xD6B9A4", VA = "0xD6B9A4")]
	private void _RemoveChild(SECTR_AudioBus child)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xD6BE78", Offset = "0xD6BE78", VA = "0xD6BE78")]
	public SECTR_AudioBus()
	{
	}
}
[Token(Token = "0x20001C9")]
public class SECTR_AudioCue : ScriptableObject
{
	[Token(Token = "0x2000479")]
	public enum PlaybackModes
	{
		[Token(Token = "0x4001BF1")]
		Random,
		[Token(Token = "0x4001BF2")]
		Shuffle,
		[Token(Token = "0x4001BF3")]
		Loop,
		[Token(Token = "0x4001BF4")]
		PingPong
	}

	[Token(Token = "0x200047A")]
	public enum FalloffTypes
	{
		[Token(Token = "0x4001BF6")]
		Linear,
		[Token(Token = "0x4001BF7")]
		Logrithmic
	}

	[Token(Token = "0x200047B")]
	public enum Spatializations
	{
		[Token(Token = "0x4001BF9")]
		Simple2D,
		[Token(Token = "0x4001BFA")]
		Infinite3D,
		[Token(Token = "0x4001BFB")]
		Local3D,
		[Token(Token = "0x4001BFC")]
		Occludable3D
	}

	[Serializable]
	[Token(Token = "0x200047C")]
	public class ClipData
	{
		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private AudioClip clip;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool playedInShuffle;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float volume;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SECTR_ULong bakeTimestamp;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve HDRCurve;

		[Token(Token = "0x17000243")]
		public AudioClip Clip
		{
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0xD6C80C", Offset = "0xD6C80C", VA = "0xD6C80C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		public float Volume
		{
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0xD6C814", Offset = "0xD6C814", VA = "0xD6C814")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0xD6C81C", Offset = "0xD6C81C", VA = "0xD6C81C")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public bool PlayedInShuffle
		{
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0xD6C824", Offset = "0xD6C824", VA = "0xD6C824")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0xD6C82C", Offset = "0xD6C82C", VA = "0xD6C82C")]
			set
			{
			}
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xD6C7C8", Offset = "0xD6C7C8", VA = "0xD6C7C8")]
		public ClipData(AudioClip clip)
		{
		}
	}

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA111C8", Offset = "0xA111C8")]
	private SECTR_AudioCue template;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA11200", Offset = "0xA11200")]
	private SECTR_AudioBus bus;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int clipPlaybackIndex;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool needsShuffling;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool pingPongIncrement;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11238", Offset = "0xA11238")]
	public List<ClipData> AudioClips;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11270", Offset = "0xA11270")]
	public PlaybackModes PlaybackMode;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA112A8", Offset = "0xA112A8")]
	public bool HDR;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA112E0", Offset = "0xA112E0")]
	public Vector2 Loudness;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11318", Offset = "0xA11318")]
	public Vector2 Volume;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11350", Offset = "0xA11350")]
	public Vector2 Pitch;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11388", Offset = "0xA11388")]
	public bool Loops;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA113C0", Offset = "0xA113C0")]
	public int Priority;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11404", Offset = "0xA11404")]
	public bool BypassEffects;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1143C", Offset = "0xA1143C")]
	public int MaxInstances;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1147C", Offset = "0xA1147C")]
	public float FadeInTime;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA114BC", Offset = "0xA114BC")]
	public float FadeOutTime;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA114FC", Offset = "0xA114FC")]
	public Spatializations Spatialization;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11534", Offset = "0xA11534")]
	public float Spread;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11578", Offset = "0xA11578")]
	public float Pan2D;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA115B8", Offset = "0xA115B8")]
	public FalloffTypes Falloff;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA115F0", Offset = "0xA115F0")]
	public float MaxDistance;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11630", Offset = "0xA11630")]
	public float MinDistance;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11670", Offset = "0xA11670")]
	public float DopplerLevel;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA116B0", Offset = "0xA116B0")]
	public int ProximityLimit;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA116F0", Offset = "0xA116F0")]
	public float ProximityRange;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11744", Offset = "0xA11744")]
	public float OcclusionScale;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11784", Offset = "0xA11784")]
	public float PlayProbability;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA117C4", Offset = "0xA117C4")]
	public Vector2 Delay;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA117FC", Offset = "0xA117FC")]
	public GameObject Prefab;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1183C", Offset = "0xA1183C")]
	public List<SECTR_CueParam> ControlParams;

	[Token(Token = "0x1700009E")]
	public SECTR_AudioCue Template
	{
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xD6BFAC", Offset = "0xD6BFAC", VA = "0xD6BFAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xD6BEF8", Offset = "0xD6BEF8", VA = "0xD6BEF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public SECTR_AudioBus Bus
	{
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xD6C03C", Offset = "0xD6C03C", VA = "0xD6C03C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xD6BFB4", Offset = "0xD6BFB4", VA = "0xD6BFB4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public SECTR_AudioCue SourceCue
	{
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xD6C044", Offset = "0xD6C044", VA = "0xD6C044")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A1")]
	public bool Is3D
	{
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xD6C0C4", Offset = "0xD6C0C4", VA = "0xD6C0C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A2")]
	public bool IsLocal
	{
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xD6C0D4", Offset = "0xD6C0D4", VA = "0xD6C0D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A3")]
	public int ClipIndex
	{
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xD6C0E4", Offset = "0xD6C0E4", VA = "0xD6C0E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xD6C0EC", Offset = "0xD6C0EC", VA = "0xD6C0EC")]
	public ClipData GetNextClip()
	{
		return null;
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xD6C3C0", Offset = "0xD6C3C0", VA = "0xD6C3C0")]
	public float MinClipLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xD6C514", Offset = "0xD6C514", VA = "0xD6C514")]
	public float MaxClipLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xD6C648", Offset = "0xD6C648", VA = "0xD6C648")]
	public void ResetClipIndex()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xD6C65C", Offset = "0xD6C65C", VA = "0xD6C65C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xD6C670", Offset = "0xD6C670", VA = "0xD6C670")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xD6C268", Offset = "0xD6C268", VA = "0xD6C268")]
	private void _ShuffleClips()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xD6C674", Offset = "0xD6C674", VA = "0xD6C674")]
	public SECTR_AudioCue()
	{
	}
}
[Token(Token = "0x20001CA")]
public interface SECTR_IAudioInstance
{
	[Token(Token = "0x170000A4")]
	int Generation
	{
		[Token(Token = "0x6000B35")]
		get;
	}

	[Token(Token = "0x170000A5")]
	bool Active
	{
		[Token(Token = "0x6000B36")]
		get;
	}

	[Token(Token = "0x170000A6")]
	Vector3 Position
	{
		[Token(Token = "0x6000B37")]
		get;
		[Token(Token = "0x6000B38")]
		set;
	}

	[Token(Token = "0x170000A7")]
	Vector3 LocalPosition
	{
		[Token(Token = "0x6000B39")]
		get;
		[Token(Token = "0x6000B3A")]
		set;
	}

	[Token(Token = "0x170000A8")]
	float Volume
	{
		[Token(Token = "0x6000B3B")]
		get;
		[Token(Token = "0x6000B3C")]
		set;
	}

	[Token(Token = "0x170000A9")]
	float Pitch
	{
		[Token(Token = "0x6000B3D")]
		get;
		[Token(Token = "0x6000B3E")]
		set;
	}

	[Token(Token = "0x170000AA")]
	bool Mute
	{
		[Token(Token = "0x6000B3F")]
		get;
		[Token(Token = "0x6000B40")]
		set;
	}

	[Token(Token = "0x170000AB")]
	bool Pause
	{
		[Token(Token = "0x6000B41")]
		get;
		[Token(Token = "0x6000B42")]
		set;
	}

	[Token(Token = "0x170000AC")]
	int TimeSamples
	{
		[Token(Token = "0x6000B43")]
		get;
		[Token(Token = "0x6000B44")]
		set;
	}

	[Token(Token = "0x170000AD")]
	float TimeSeconds
	{
		[Token(Token = "0x6000B45")]
		get;
		[Token(Token = "0x6000B46")]
		set;
	}

	[Token(Token = "0x6000B47")]
	void Stop(bool stopImmediately);

	[Token(Token = "0x6000B48")]
	void ForceInfinite();

	[Token(Token = "0x6000B49")]
	void ForceOcclusion(bool occluded);

	[Token(Token = "0x6000B4A")]
	void SetParameter(string param, float value);

	[Token(Token = "0x6000B4B")]
	AudioSource GetInternalAudioSource();
}
[Token(Token = "0x20001CB")]
public struct SECTR_AudioCueInstance : SECTR_IAudioInstance
{
	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SECTR_IAudioInstance internalInstance;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private int generation;

	[Token(Token = "0x170000AE")]
	public int Generation
	{
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xADA47C", Offset = "0xADA47C", VA = "0xADA47C", Slot = "4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000AF")]
	public bool Active
	{
		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xADA484", Offset = "0xADA484", VA = "0xADA484", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B0")]
	public Vector3 Position
	{
		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xADA48C", Offset = "0xADA48C", VA = "0xADA48C", Slot = "6")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xADA494", Offset = "0xADA494", VA = "0xADA494", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public Vector3 LocalPosition
	{
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xADA49C", Offset = "0xADA49C", VA = "0xADA49C", Slot = "8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xADA4A4", Offset = "0xADA4A4", VA = "0xADA4A4", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public float Volume
	{
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xADA4AC", Offset = "0xADA4AC", VA = "0xADA4AC", Slot = "10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xADA4B4", Offset = "0xADA4B4", VA = "0xADA4B4", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public float Pitch
	{
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xADA4BC", Offset = "0xADA4BC", VA = "0xADA4BC", Slot = "12")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xADA4C4", Offset = "0xADA4C4", VA = "0xADA4C4", Slot = "13")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public bool Mute
	{
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xADA4CC", Offset = "0xADA4CC", VA = "0xADA4CC", Slot = "14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xADA4D4", Offset = "0xADA4D4", VA = "0xADA4D4", Slot = "15")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public bool Pause
	{
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xADA4E0", Offset = "0xADA4E0", VA = "0xADA4E0", Slot = "16")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xADA4E8", Offset = "0xADA4E8", VA = "0xADA4E8", Slot = "17")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public float TimeSeconds
	{
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xADA4F4", Offset = "0xADA4F4", VA = "0xADA4F4", Slot = "20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xADA4FC", Offset = "0xADA4FC", VA = "0xADA4FC", Slot = "21")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public int TimeSamples
	{
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xADA504", Offset = "0xADA504", VA = "0xADA504", Slot = "18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xADA50C", Offset = "0xADA50C", VA = "0xADA50C", Slot = "19")]
		set
		{
		}
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xADA470", Offset = "0xADA470", VA = "0xADA470")]
	public SECTR_AudioCueInstance(SECTR_IAudioInstance internalInstance, int generation)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xADA514", Offset = "0xADA514", VA = "0xADA514", Slot = "22")]
	public void Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xADA520", Offset = "0xADA520", VA = "0xADA520", Slot = "23")]
	public void ForceInfinite()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xADA528", Offset = "0xADA528", VA = "0xADA528", Slot = "24")]
	public void ForceOcclusion(bool occluded)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xADA534", Offset = "0xADA534", VA = "0xADA534", Slot = "25")]
	public void SetParameter(string param, float value)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xADA53C", Offset = "0xADA53C", VA = "0xADA53C", Slot = "26")]
	public AudioSource GetInternalAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xADA544", Offset = "0xADA544", VA = "0xADA544")]
	public SECTR_IAudioInstance GetInternalInstance()
	{
		return null;
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xD6DBE0", Offset = "0xD6DBE0", VA = "0xD6DBE0")]
	public static implicit operator bool(SECTR_AudioCueInstance x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001CC")]
public abstract class SECTR_AudioEnvironment : MonoBehaviour
{
	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool ambienceActive;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11874", Offset = "0xA11874")]
	public SECTR_AudioAmbience Ambience;

	[Token(Token = "0x170000B8")]
	public bool Active
	{
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xD6E564", Offset = "0xD6E564", VA = "0xD6E564")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xD6E56C", Offset = "0xD6E56C", VA = "0xD6E56C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xD6E5E8", Offset = "0xD6E5E8", VA = "0xD6E5E8")]
	protected void Activate()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xD6E570", Offset = "0xD6E570", VA = "0xD6E570")]
	protected void Deactivate()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xD6E818", Offset = "0xD6E818", VA = "0xD6E818")]
	protected SECTR_AudioEnvironment()
	{
	}
}
[Token(Token = "0x20001CD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0158C", Offset = "0xA0158C")]
public class SECTR_AudioEnvironmentTrigger : SECTR_AudioEnvironment
{
	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject activator;

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xD6E87C", Offset = "0xD6E87C", VA = "0xD6E87C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xD6E900", Offset = "0xD6E900", VA = "0xD6E900")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xD6E9A4", Offset = "0xD6E9A4", VA = "0xD6E9A4")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xD6EA48", Offset = "0xD6EA48", VA = "0xD6EA48")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xD6EAF4", Offset = "0xD6EAF4", VA = "0xD6EAF4")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xD6EBA0", Offset = "0xD6EBA0", VA = "0xD6EBA0")]
	public SECTR_AudioEnvironmentTrigger()
	{
	}
}
[Token(Token = "0x20001CE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA015C4", Offset = "0xA015C4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA015C4", Offset = "0xA015C4")]
public class SECTR_AudioEnvironmentZone : SECTR_AudioEnvironment
{
	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioReverbZone cachedZone;

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xD6EBA4", Offset = "0xD6EBA4", VA = "0xD6EBA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xD6EBFC", Offset = "0xD6EBFC", VA = "0xD6EBFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xD6EC04", Offset = "0xD6EC04", VA = "0xD6EC04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xD6EEB8", Offset = "0xD6EEB8", VA = "0xD6EEB8")]
	public SECTR_AudioEnvironmentZone()
	{
	}
}
[Token(Token = "0x20001CF")]
public abstract class SECTR_AudioSource : MonoBehaviour
{
	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA118AC", Offset = "0xA118AC")]
	protected float volume;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA118E4", Offset = "0xA118E4")]
	protected float pitch;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool playedFromStart;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1191C", Offset = "0xA1191C")]
	public SECTR_AudioCue Cue;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1195C", Offset = "0xA1195C")]
	public bool Loop;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11994", Offset = "0xA11994")]
	public bool PlayOnStart;

	[Token(Token = "0x170000B9")]
	public float Volume
	{
		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xD6EEBC", Offset = "0xD6EEBC", VA = "0xD6EEBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xD6EEC4", Offset = "0xD6EEC4", VA = "0xD6EEC4")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public float Pitch
	{
		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xD6EF68", Offset = "0xD6EF68", VA = "0xD6EF68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xD6EF70", Offset = "0xD6EF70", VA = "0xD6EF70")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public abstract bool IsPlaying
	{
		[Token(Token = "0x6000B79")]
		get;
	}

	[Token(Token = "0x6000B7A")]
	public abstract void Play();

	[Token(Token = "0x6000B7B")]
	public abstract void Stop(bool stopImmediately);

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xD6F01C", Offset = "0xD6F01C", VA = "0xD6F01C")]
	public void PlayEvent()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xD6F028", Offset = "0xD6F028", VA = "0xD6F028")]
	public void StopEvent(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xD6F038", Offset = "0xD6F038", VA = "0xD6F038")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xD6F070", Offset = "0xD6F070", VA = "0xD6F070")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xD6F090", Offset = "0xD6F090", VA = "0xD6F090", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000B81")]
	protected abstract void OnVolumePitchChanged();

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xD6F0A0", Offset = "0xD6F0A0", VA = "0xD6F0A0")]
	protected SECTR_AudioSource()
	{
	}
}
[Token(Token = "0x20001D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA0164C", Offset = "0xA0164C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA0164C", Offset = "0xA0164C")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA0164C", Offset = "0xA0164C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0164C", Offset = "0xA0164C")]
public class SECTR_AudioSystem : MonoBehaviour
{
	[Token(Token = "0x200047D")]
	private class Instance : SECTR_IAudioInstance
	{
		[Token(Token = "0x20005A6")]
		[Flags]
		private enum Flags
		{
			[Token(Token = "0x4002015")]
			Loops = 1,
			[Token(Token = "0x4002016")]
			FadingIn = 2,
			[Token(Token = "0x4002017")]
			FadingOut = 4,
			[Token(Token = "0x4002018")]
			Muted = 8,
			[Token(Token = "0x4002019")]
			Local = 0x10,
			[Token(Token = "0x400201A")]
			ThreeD = 0x20,
			[Token(Token = "0x400201B")]
			Paused = 0x40,
			[Token(Token = "0x400201C")]
			HDR = 0x80,
			[Token(Token = "0x400201D")]
			Occludable = 0x100,
			[Token(Token = "0x400201E")]
			Occluded = 0x200,
			[Token(Token = "0x400201F")]
			ForcedInfinite = 0x400,
			[Token(Token = "0x4002020")]
			Delayed = 0x800
		}

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int generation;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource source;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioLowPassFilter lowpass;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SECTR_AudioCue audioCue;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform parent;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 localPosition;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Flags flags;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float nextTestTime;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float fadeStarTime;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float basePitch;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float baseVolumeLoudness;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float userVolume;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float userPitch;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float occlusionAlpha;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AnimationCurve hdrCurve;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<SECTR_CueParam, float> paramTable;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<float> volumeParamValues;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<float> pitchParamValues;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<SECTR_CueParam.AttributeData, float> attributeParamValues;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<SECTR_CueParam.AttributeData, float> attributeParamBaseValues;

		[Token(Token = "0x17000246")]
		public int Generation
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0xD74400", Offset = "0xD74400", VA = "0xD74400", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000247")]
		public bool Active
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xD73F04", Offset = "0xD73F04", VA = "0xD73F04", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		public Vector3 Position
		{
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0xD7417C", Offset = "0xD7417C", VA = "0xD7417C", Slot = "6")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0xD74450", Offset = "0xD74450", VA = "0xD74450", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public Vector3 LocalPosition
		{
			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0xD74624", Offset = "0xD74624", VA = "0xD74624", Slot = "8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0xD74630", Offset = "0xD74630", VA = "0xD74630", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public float Volume
		{
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0xD74708", Offset = "0xD74708", VA = "0xD74708", Slot = "10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0xD74710", Offset = "0xD74710", VA = "0xD74710", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public float Pitch
		{
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0xD747B8", Offset = "0xD747B8", VA = "0xD747B8", Slot = "12")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0xD747C0", Offset = "0xD747C0", VA = "0xD747C0", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public bool Mute
		{
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0xD74870", Offset = "0xD74870", VA = "0xD74870", Slot = "14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0xD74888", Offset = "0xD74888", VA = "0xD74888", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public bool Pause
		{
			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0xD74968", Offset = "0xD74968", VA = "0xD74968", Slot = "16")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0xD70AF4", Offset = "0xD70AF4", VA = "0xD70AF4", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public float TimeSeconds
		{
			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0xD74990", Offset = "0xD74990", VA = "0xD74990", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0xD74A28", Offset = "0xD74A28", VA = "0xD74A28", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public int TimeSamples
		{
			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0xD74ACC", Offset = "0xD74ACC", VA = "0xD74ACC", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0xD74B64", Offset = "0xD74B64", VA = "0xD74B64", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public bool Loops
		{
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0xD74408", Offset = "0xD74408", VA = "0xD74408")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000251")]
		public bool Local
		{
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xD74444", Offset = "0xD74444", VA = "0xD74444")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000252")]
		public bool ThreeD
		{
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xD74438", Offset = "0xD74438", VA = "0xD74438")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000253")]
		public bool FadingIn
		{
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xD74FDC", Offset = "0xD74FDC", VA = "0xD74FDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000254")]
		public bool FadingOut
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0xD73FC8", Offset = "0xD73FC8", VA = "0xD73FC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000255")]
		public bool Muted
		{
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xD7487C", Offset = "0xD7487C", VA = "0xD7487C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000256")]
		public bool Paused
		{
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xD74420", Offset = "0xD74420", VA = "0xD74420")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000257")]
		public bool HDR
		{
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xD74FE8", Offset = "0xD74FE8", VA = "0xD74FE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000258")]
		public bool Occludable
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0xD74FF4", Offset = "0xD74FF4", VA = "0xD74FF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000259")]
		public bool Occluded
		{
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xD75000", Offset = "0xD75000", VA = "0xD75000")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025A")]
		public bool ForcedInfinite
		{
			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0xD7500C", Offset = "0xD7500C", VA = "0xD7500C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025B")]
		public bool Delayed
		{
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xD74414", Offset = "0xD74414", VA = "0xD74414")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025C")]
		public SECTR_AudioBus Bus
		{
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xD70A64", Offset = "0xD70A64", VA = "0xD70A64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public SECTR_AudioCue Cue
		{
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xD75018", Offset = "0xD75018", VA = "0xD75018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xD74C08", Offset = "0xD74C08", VA = "0xD74C08", Slot = "23")]
		public void ForceInfinite()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xD74D10", Offset = "0xD74D10", VA = "0xD74D10", Slot = "24")]
		public void ForceOcclusion(bool occluded)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xD74DC8", Offset = "0xD74DC8", VA = "0xD74DC8", Slot = "25")]
		public void SetParameter(string param, float value)
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xD74FD4", Offset = "0xD74FD4", VA = "0xD74FD4", Slot = "26")]
		public AudioSource GetInternalAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xD6F95C", Offset = "0xD6F95C", VA = "0xD6F95C")]
		public void Init(SECTR_AudioCue audioCue, Transform parent, Vector3 localPosition, bool loops)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xD700C0", Offset = "0xD700C0", VA = "0xD700C0")]
		public void Clone(Instance instance, Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xD73FD4", Offset = "0xD73FD4", VA = "0xD73FD4")]
		public void Uninit()
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xD6FB98", Offset = "0xD6FB98", VA = "0xD6FB98")]
		public void Play()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xD71E80", Offset = "0xD71E80", VA = "0xD71E80", Slot = "22")]
		public void Stop(bool stopImmediately)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xD72B18", Offset = "0xD72B18", VA = "0xD72B18")]
		public void Update(float deltaTime, bool volumeOnly)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xD7494C", Offset = "0xD7494C", VA = "0xD7494C")]
		private void _SetFlag(Flags flag, bool on)
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xD74980", Offset = "0xD74980", VA = "0xD74980")]
		private bool _GetFlag(Flags flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xD751F4", Offset = "0xD751F4", VA = "0xD751F4")]
		private bool _AcquireSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xD75EA0", Offset = "0xD75EA0", VA = "0xD75EA0")]
		private void _ReleaseSource()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xD75020", Offset = "0xD75020", VA = "0xD75020")]
		private void _AddProximityInstance(SECTR_AudioCue srcCue)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xD75160", Offset = "0xD75160", VA = "0xD75160")]
		private void _ScheduleNextTest()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xD761A0", Offset = "0xD761A0", VA = "0xD761A0")]
		private void _Stop(bool stopImmediately)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xD718DC", Offset = "0xD718DC", VA = "0xD718DC")]
		public Instance()
		{
		}
	}

	[Token(Token = "0x200047E")]
	[Flags]
	public enum OcclusionModes
	{
		[Token(Token = "0x4001C17")]
		Graph = 1,
		[Token(Token = "0x4001C18")]
		Raycast = 2,
		[Token(Token = "0x4001C19")]
		Distance = 4
	}

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SECTR_AudioSystem system;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Stack<Instance> instancePool;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stack<AudioSource> simpleSourcePool;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Stack<AudioSource> lowpassSourcePool;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<GameObject, Stack<AudioSource>> prefabSourcePool;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Transform sourcePoolParent;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static List<Instance> activeInstances;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Dictionary<SECTR_AudioCue, int> maxInstancesTable;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Dictionary<SECTR_AudioCue, List<Instance>> proximityTable;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static float currentTime;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static List<SECTR_AudioAmbience> ambienceStack;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static SECTR_AudioAmbience currentAmbience;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static SECTR_AudioCueInstance ambienceLoop;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static SECTR_AudioCueInstance ambienceOneShot;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static float nextAmbienceOneShotTime;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static SECTR_AudioCue currentMusic;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static SECTR_AudioCueInstance musicLoop;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static float windowHDRMax;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private static float windowHDRMin;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static float currentLoudness;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static List<SECTR_Graph.Node> occlusionPath;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static SECTR_Member cachedMember;

	[Token(Token = "0x4000C79")]
	private const float EPSILON = 0.001f;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA119CC", Offset = "0xA119CC")]
	public int MaxInstances;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11A04", Offset = "0xA11A04")]
	public int LowpassInstances;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11A3C", Offset = "0xA11A3C")]
	public SECTR_AudioBus MasterBus;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11A7C", Offset = "0xA11A7C")]
	public SECTR_AudioAmbience DefaultAmbience;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11AB4", Offset = "0xA11AB4")]
	public float HDRBaseLoudness;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11AF8", Offset = "0xA11AF8")]
	public float HDRWindowSize;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11B3C", Offset = "0xA11B3C")]
	public float HDRDecay;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11B80", Offset = "0xA11B80")]
	public bool BlendNearbySounds;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11BB8", Offset = "0xA11BB8")]
	public Vector2 NearBlendRange;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11C04", Offset = "0xA11C04")]
	public OcclusionModes OcclusionFlags;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11C84", Offset = "0xA11C84")]
	public float OcclusionDistance;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11CD0", Offset = "0xA11CD0")]
	public LayerMask RaycastLayers;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11D1C", Offset = "0xA11D1C")]
	public float OcclusionVolume;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11D70", Offset = "0xA11D70")]
	public float OcclusionCutoff;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11DC8", Offset = "0xA11DC8")]
	public float OcclusionResonanceQ;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11E1C", Offset = "0xA11E1C")]
	public Vector2 RetestInterval;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11E54", Offset = "0xA11E54")]
	public float CullingBuffer;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11E8C", Offset = "0xA11E8C")]
	public bool ShowAudioHUD;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11EC8", Offset = "0xA11EC8")]
	public Material HUDLineMaterial;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11F04", Offset = "0xA11F04")]
	public bool Debugging;

	[Token(Token = "0x170000BC")]
	public static bool Initialized
	{
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xD6EDAC", Offset = "0xD6EDAC", VA = "0xD6EDAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BD")]
	public static SECTR_Member Member
	{
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xD6F0B8", Offset = "0xD6F0B8", VA = "0xD6F0B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BE")]
	public static SECTR_AudioSystem System
	{
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xD6F120", Offset = "0xD6F120", VA = "0xD6F120")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BF")]
	public static Transform Listener
	{
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xD6EE44", Offset = "0xD6EE44", VA = "0xD6EE44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xD6AF64", Offset = "0xD6AF64", VA = "0xD6AF64")]
	public static SECTR_AudioCueInstance Play(SECTR_AudioCue audioCue, Vector3 position, bool loop)
	{
		return default(SECTR_AudioCueInstance);
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xD6F188", Offset = "0xD6F188", VA = "0xD6F188")]
	public static SECTR_AudioCueInstance Play(SECTR_AudioCue audioCue, Transform parent, Vector3 localPosition, bool loop)
	{
		return default(SECTR_AudioCueInstance);
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xD6FF2C", Offset = "0xD6FF2C", VA = "0xD6FF2C")]
	public static SECTR_AudioCueInstance Clone(SECTR_AudioCueInstance instance, Vector3 newPosition)
	{
		return default(SECTR_AudioCueInstance);
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xD6B068", Offset = "0xD6B068", VA = "0xD6B068")]
	public static void PlayMusic(SECTR_AudioCue musicCue)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xD7029C", Offset = "0xD7029C", VA = "0xD7029C")]
	public static void StopMusic(bool stopImmediate)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xD6E674", Offset = "0xD6E674", VA = "0xD6E674")]
	public static void PushAmbience(SECTR_AudioAmbience ambience)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xD6E764", Offset = "0xD6E764", VA = "0xD6E764")]
	public static void RemoveAmbience(SECTR_AudioAmbience ambience)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xD7033C", Offset = "0xD7033C", VA = "0xD7033C")]
	public static void SetBusVolume(string busName, float volume)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xD705B8", Offset = "0xD705B8", VA = "0xD705B8")]
	public static void SetBusVolume(SECTR_AudioBus bus, float volume)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xD706A8", Offset = "0xD706A8", VA = "0xD706A8")]
	public static void MuteBus(string busName, bool mute)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xD707B8", Offset = "0xD707B8", VA = "0xD707B8")]
	public static void MuteBus(SECTR_AudioBus bus, bool mute)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xD708AC", Offset = "0xD708AC", VA = "0xD708AC")]
	public static void PauseBus(SECTR_AudioBus bus, bool paused)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xD70BC8", Offset = "0xD70BC8", VA = "0xD70BC8")]
	public static bool IsOccluded(Vector3 worldSpacePosition, OcclusionModes occlusionFlags)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xD70FC8", Offset = "0xD70FC8", VA = "0xD70FC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xD71BC8", Offset = "0xD71BC8", VA = "0xD71BC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xD71E98", Offset = "0xD71E98", VA = "0xD71E98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xD6F564", Offset = "0xD6F564", VA = "0xD6F564")]
	private static bool _CheckInstances(SECTR_AudioCue audioCue, bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xD6F640", Offset = "0xD6F640", VA = "0xD6F640")]
	private static bool _CheckProximity(SECTR_AudioCue audioCue, Transform parent, Vector3 position, Instance testInstance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xD71A14", Offset = "0xD71A14", VA = "0xD71A14")]
	private static float _UpdateTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xD71A98", Offset = "0xD71A98", VA = "0xD71A98")]
	private static void _UpdateBusPitchVolume(SECTR_AudioBus bus, float effectiveVolume, float effectivePitch)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xD721E4", Offset = "0xD721E4", VA = "0xD721E4")]
	private static void _UpdateAmbience()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xD7044C", Offset = "0xD7044C", VA = "0xD7044C")]
	private static SECTR_AudioBus _FindBus(SECTR_AudioBus bus, string busName)
	{
		return null;
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xD742F4", Offset = "0xD742F4", VA = "0xD742F4")]
	public SECTR_AudioSystem()
	{
	}
}
[Token(Token = "0x20001D1")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0170C", Offset = "0xA0170C")]
public class SECTR_CharacterAudio : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200047F")]
	public class SurfaceSound
	{
		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1AF88", Offset = "0xA1AF88")]
		public PhysicMaterial SurfaceMaterial;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1AFC0", Offset = "0xA1AFC0")]
		public SECTR_AudioCue FootstepCue;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1AFF8", Offset = "0xA1AFF8")]
		public SECTR_AudioCue JumpCue;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1B030", Offset = "0xA1B030")]
		public SECTR_AudioCue LandCue;

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xD7695C", Offset = "0xD7695C", VA = "0xD7695C")]
		public SurfaceSound()
		{
		}
	}

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<PhysicMaterial, SurfaceSound> surfaceTable;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11F40", Offset = "0xA11F40")]
	public SurfaceSound DefaultSounds;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11F78", Offset = "0xA11F78")]
	public List<SurfaceSound> SurfaceSounds;

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xD76470", Offset = "0xD76470", VA = "0xD76470")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xD765AC", Offset = "0xD765AC", VA = "0xD765AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xD765B4", Offset = "0xD765B4", VA = "0xD765B4")]
	private void OnFootstep(PhysicMaterial currentMaterial)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xD76734", Offset = "0xD76734", VA = "0xD76734")]
	private void OnJump(PhysicMaterial currentMaterial)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xD76800", Offset = "0xD76800", VA = "0xD76800")]
	private void OnLand(PhysicMaterial currentMaterial)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xD76680", Offset = "0xD76680", VA = "0xD76680")]
	private SurfaceSound _GetCurrentSurface(PhysicMaterial currentMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xD768CC", Offset = "0xD768CC", VA = "0xD768CC")]
	public SECTR_CharacterAudio()
	{
	}
}
[Token(Token = "0x20001D2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA01744", Offset = "0xA01744")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01744", Offset = "0xA01744")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01744", Offset = "0xA01744")]
public class SECTR_ComputeRMS : MonoBehaviour
{
	[Token(Token = "0x2000480")]
	private struct BakeInfo
	{
		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SECTR_AudioCue cue;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SECTR_AudioCue.ClipData clipData;

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xADA588", Offset = "0xADA588", VA = "0xADA588")]
		public BakeInfo(SECTR_AudioCue cue, SECTR_AudioCue.ClipData clipData)
		{
		}
	}

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<BakeInfo> hdrBakeList;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SECTR_ComputeRMS> activeBakeList;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int hdrBakeIndex;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SECTR_AudioCue cue;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SECTR_AudioCue.ClipData clipData;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<float> samples;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int numChannels;

	[Token(Token = "0x170000C0")]
	public float Progress
	{
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xD7BB18", Offset = "0xD7BB18", VA = "0xD7BB18")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xD7BD48", Offset = "0xD7BD48", VA = "0xD7BD48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xD7BD4C", Offset = "0xD7BD4C", VA = "0xD7BD4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xD7BD50", Offset = "0xD7BD50", VA = "0xD7BD50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xD7C5D8", Offset = "0xD7C5D8", VA = "0xD7C5D8")]
	private void OnAudioFilterRead(float[] samples, int numChannels)
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xD7C464", Offset = "0xD7C464", VA = "0xD7C464")]
	public void _StartCompute(SECTR_AudioCue cue, SECTR_AudioCue.ClipData clipData)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xD7C648", Offset = "0xD7C648", VA = "0xD7C648")]
	public SECTR_ComputeRMS()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D3")]
public class SECTR_CueParam
{
	[Token(Token = "0x2000481")]
	public enum TargetType
	{
		[Token(Token = "0x4001C21")]
		Volume,
		[Token(Token = "0x4001C22")]
		Pitch,
		[Token(Token = "0x4001C23")]
		Attribute
	}

	[Serializable]
	[Token(Token = "0x2000482")]
	public class AttributeData
	{
		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Type componentType;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string componentTypeString;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string attributeName;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fieldAttribute;

		[Token(Token = "0x1700025E")]
		public Type ComponentType
		{
			[Token(Token = "0x6001B03")]
			[Address(RVA = "0xD763A0", Offset = "0xD763A0", VA = "0xD763A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B02")]
			[Address(RVA = "0xD7C840", Offset = "0xD7C840", VA = "0xD7C840")]
			set
			{
			}
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xD7C8E0", Offset = "0xD7C8E0", VA = "0xD7C8E0")]
		public AttributeData()
		{
		}
	}

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TargetType affects;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultValue;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AttributeData attributeData;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool toggle;

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xD7C6E8", Offset = "0xD7C6E8", VA = "0xD7C6E8")]
	public SECTR_CueParam()
	{
	}
}
[Token(Token = "0x20001D4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA017DC", Offset = "0xA017DC")]
public class SECTR_DoorAudio : MonoBehaviour
{
	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SECTR_AudioCueInstance instance;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11FB0", Offset = "0xA11FB0")]
	public SECTR_AudioCue OpenLoopCue;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA11FF0", Offset = "0xA11FF0")]
	public SECTR_AudioCue ClosedLoopCue;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12030", Offset = "0xA12030")]
	public SECTR_AudioCue OpeningCue;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12070", Offset = "0xA12070")]
	public SECTR_AudioCue ClosingCue;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA120B0", Offset = "0xA120B0")]
	public SECTR_AudioCue WaitingCue;

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x10385E8", Offset = "0x10385E8", VA = "0x10385E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x1038608", Offset = "0x1038608", VA = "0x1038608")]
	private void OnOpen()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x1038700", Offset = "0x1038700", VA = "0x1038700")]
	private void OnOpening()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x10387F8", Offset = "0x10387F8", VA = "0x10387F8")]
	private void OnClose()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x10388F0", Offset = "0x10388F0", VA = "0x10388F0")]
	private void OnClosing()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x10389E8", Offset = "0x10389E8", VA = "0x10389E8")]
	private void OnWaiting()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x10385F8", Offset = "0x10385F8", VA = "0x10385F8")]
	private void _Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x1038AE0", Offset = "0x1038AE0", VA = "0x1038AE0")]
	public SECTR_DoorAudio()
	{
	}
}
[Token(Token = "0x20001D5")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01814", Offset = "0xA01814")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01814", Offset = "0xA01814")]
public class SECTR_ImpactAudio : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000483")]
	public class ImpactSound
	{
		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicMaterial SurfaceMaterial;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SECTR_AudioCue ImpactCue;

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x1040684", Offset = "0x1040684", VA = "0x1040684")]
		public ImpactSound()
		{
		}
	}

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float nextImpactTime;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<PhysicMaterial, ImpactSound> surfaceTable;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA120F0", Offset = "0xA120F0")]
	public ImpactSound DefaultSound;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12128", Offset = "0xA12128")]
	public List<ImpactSound> SurfaceImpacts;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12160", Offset = "0xA12160")]
	public float MinImpactSpeed;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12198", Offset = "0xA12198")]
	public float MinImpactInterval;

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x104024C", Offset = "0x104024C", VA = "0x104024C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x1040388", Offset = "0x1040388", VA = "0x1040388")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x1040390", Offset = "0x1040390", VA = "0x1040390")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x1040608", Offset = "0x1040608", VA = "0x1040608")]
	public SECTR_ImpactAudio()
	{
	}
}
[Token(Token = "0x20001D6")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01860", Offset = "0xA01860")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01860", Offset = "0xA01860")]
public class SECTR_MusicTrigger : MonoBehaviour
{
	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject activator;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA121D0", Offset = "0xA121D0")]
	public SECTR_AudioCue Cue;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12210", Offset = "0xA12210")]
	public bool Loop;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12248", Offset = "0xA12248")]
	public bool StopOnExit;

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x10466B8", Offset = "0x10466B8", VA = "0x10466B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x10467EC", Offset = "0x10467EC", VA = "0x10467EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x1046868", Offset = "0x1046868", VA = "0x1046868")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x104694C", Offset = "0x104694C", VA = "0x104694C")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x1046A30", Offset = "0x1046A30", VA = "0x1046A30")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x1046AC8", Offset = "0x1046AC8", VA = "0x1046AC8")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x104673C", Offset = "0x104673C", VA = "0x104673C")]
	private void _Play()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x1046800", Offset = "0x1046800", VA = "0x1046800")]
	private void _Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x1046B7C", Offset = "0x1046B7C", VA = "0x1046B7C")]
	public SECTR_MusicTrigger()
	{
	}
}
[Token(Token = "0x20001D7")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA018AC", Offset = "0xA018AC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA018AC", Offset = "0xA018AC")]
public class SECTR_PointSource : SECTR_AudioSource
{
	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected SECTR_AudioCueInstance instance;

	[Token(Token = "0x170000C1")]
	public override bool IsPlaying
	{
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x1047C50", Offset = "0x1047C50", VA = "0x1047C50", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1047C60", Offset = "0x1047C60", VA = "0x1047C60", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x1047E54", Offset = "0x1047E54", VA = "0x1047E54", Slot = "6")]
	public override void Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x1047E64", Offset = "0x1047E64", VA = "0x1047E64", Slot = "8")]
	protected override void OnVolumePitchChanged()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x1047EC0", Offset = "0x1047EC0", VA = "0x1047EC0")]
	public SECTR_PointSource()
	{
	}
}
[Token(Token = "0x20001D8")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA018F8", Offset = "0xA018F8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA018F8", Offset = "0xA018F8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA018F8", Offset = "0xA018F8")]
public class SECTR_PropagationSource : SECTR_AudioSource
{
	[Token(Token = "0x2000484")]
	private class PathSound
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SECTR_AudioCueInstance instance;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Portal firstPortal;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SECTR_Portal secondPortal;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float firstDistance;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float secondDistance;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distance;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 position;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 lastListenerPosition;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float weight;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool occluded;

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x10496D8", Offset = "0x10496D8", VA = "0x10496D8")]
		public PathSound()
		{
		}
	}

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SECTR_Graph.Node> path;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<PathSound> activeSounds;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float directDistanceToListener;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool playing;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool played;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12280", Offset = "0xA12280")]
	public float InterpDistance;

	[Token(Token = "0x170000C2")]
	public override bool IsPlaying
	{
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x1048774", Offset = "0x1048774", VA = "0x1048774", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x10487DC", Offset = "0x10487DC", VA = "0x10487DC", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x10487E8", Offset = "0x10487E8", VA = "0x10487E8", Slot = "6")]
	public override void Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x10488B4", Offset = "0x10488B4", VA = "0x10488B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x104890C", Offset = "0x104890C", VA = "0x104890C", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x1048934", Offset = "0x1048934", VA = "0x1048934")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x10499A4", Offset = "0x10499A4", VA = "0x10499A4", Slot = "8")]
	protected override void OnVolumePitchChanged()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x10496E8", Offset = "0x10496E8", VA = "0x10496E8")]
	private void _ComputeSoundSpatialization(Vector3 listenerPosition, float distanceToListener, PathSound pathSound)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x10499A8", Offset = "0x10499A8", VA = "0x10499A8")]
	public SECTR_PropagationSource()
	{
	}
}
[Token(Token = "0x20001D9")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01990", Offset = "0xA01990")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01990", Offset = "0xA01990")]
public class SECTR_RegionSource : SECTR_PointSource
{
	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA122C0", Offset = "0xA122C0")]
	public bool Raycast;

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x104A248", Offset = "0x104A248", VA = "0x104A248")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x104A564", Offset = "0x104A564", VA = "0x104A564")]
	public SECTR_RegionSource()
	{
	}
}
[Token(Token = "0x20001DA")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA019DC", Offset = "0xA019DC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA019DC", Offset = "0xA019DC")]
public class SECTR_SplineSource : SECTR_PointSource
{
	[Token(Token = "0x2000485")]
	private class SplineNode
	{
		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Point;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rot;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float T;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 EaseIO;

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x104BFB4", Offset = "0x104BFB4", VA = "0x104BFB4")]
		public SplineNode(Vector3 p, Quaternion q, float t, Vector2 io)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x104C038", Offset = "0x104C038", VA = "0x104C038")]
		public SplineNode(SplineNode o)
		{
		}
	}

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<SplineNode> nodes;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA122F8", Offset = "0xA122F8")]
	public List<Transform> SplinePoints;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12330", Offset = "0xA12330")]
	public bool Closed;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12368", Offset = "0xA12368")]
	public bool AllowShortcuts;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA123A0", Offset = "0xA123A0")]
	public float MaxInterpSpeed;

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x104B0E0", Offset = "0x104B0E0", VA = "0x104B0E0", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x104B4C0", Offset = "0x104B4C0", VA = "0x104B4C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x104BCD0", Offset = "0x104BCD0", VA = "0x104BCD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x104BCD4", Offset = "0x104BCD4", VA = "0x104BCD4", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x104BCDC", Offset = "0x104BCDC", VA = "0x104BCDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x104B4C4", Offset = "0x104B4C4", VA = "0x104B4C4")]
	private void _SetupSpline()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x104B194", Offset = "0x104B194", VA = "0x104B194")]
	private Vector3 _GetClosestPointOnSpline(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x104C090", Offset = "0x104C090", VA = "0x104C090")]
	private Vector3 _GetHermiteAtT(float timeParam)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x104C5C4", Offset = "0x104C5C4", VA = "0x104C5C4")]
	private float _Ease(float t, float k1, float k2)
	{
		return default(float);
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x104C71C", Offset = "0x104C71C", VA = "0x104C71C")]
	public SECTR_SplineSource()
	{
	}
}
[Token(Token = "0x20001DB")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01A28", Offset = "0xA01A28")]
public class SECTR_StartMusic : MonoBehaviour
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA123E0", Offset = "0xA123E0")]
	public SECTR_AudioCue Cue;

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xD24360", Offset = "0xD24360", VA = "0xD24360")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xD243F8", Offset = "0xD243F8", VA = "0xD243F8")]
	public SECTR_StartMusic()
	{
	}
}
[Token(Token = "0x20001DC")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01A60", Offset = "0xA01A60")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01A60", Offset = "0xA01A60")]
public class SECTR_TriggerSource : SECTR_PointSource
{
	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject activator;

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xD24D94", Offset = "0xD24D94", VA = "0xD24D94")]
	public SECTR_TriggerSource()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xD24DBC", Offset = "0xD24DBC", VA = "0xD24DBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xD24E5C", Offset = "0xD24E5C", VA = "0xD24E5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xD24F08", Offset = "0xD24F08", VA = "0xD24F08")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xD24FB4", Offset = "0xD24FB4", VA = "0xD24FB4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xD2506C", Offset = "0xD2506C", VA = "0xD2506C")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}
}
[Token(Token = "0x20001DD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA01AAC", Offset = "0xA01AAC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01AAC", Offset = "0xA01AAC")]
public class SECTR_Door : MonoBehaviour
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int controlParam;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int canOpenParam;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int closedState;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int waitingState;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int openingState;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int openState;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int closingState;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastState;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator cachedAnimator;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int openCount;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12418", Offset = "0xA12418")]
	public SECTR_Portal Portal;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12450", Offset = "0xA12450")]
	public string ControlParam;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12488", Offset = "0xA12488")]
	public string CanOpenParam;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA124C0", Offset = "0xA124C0")]
	public string OpenState;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA124F8", Offset = "0xA124F8")]
	public string ClosedState;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12530", Offset = "0xA12530")]
	public string OpeningState;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12568", Offset = "0xA12568")]
	public string ClosingState;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA125A0", Offset = "0xA125A0")]
	public string WaitingState;

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x1037FFC", Offset = "0x1037FFC", VA = "0x1037FFC")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x103800C", Offset = "0x103800C", VA = "0x103800C")]
	public void CloseDoor()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x103801C", Offset = "0x103801C", VA = "0x103801C")]
	public bool IsFullyOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x1038094", Offset = "0x1038094", VA = "0x1038094")]
	public bool IsClosed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x103810C", Offset = "0x103810C", VA = "0x103810C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x10381F0", Offset = "0x10381F0", VA = "0x10381F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x10382F4", Offset = "0x10382F4", VA = "0x10382F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x1038508", Offset = "0x1038508", VA = "0x1038508", Slot = "5")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x1038518", Offset = "0x1038518", VA = "0x1038518", Slot = "6")]
	protected virtual void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x1038528", Offset = "0x1038528", VA = "0x1038528", Slot = "7")]
	protected virtual bool CanOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x1038530", Offset = "0x1038530", VA = "0x1038530")]
	public SECTR_Door()
	{
	}
}
[Token(Token = "0x20001DE")]
public static class SECTR_Geometry
{
	[Token(Token = "0x4000CD0")]
	public const float kVERTEX_EPSILON = 0.001f;

	[Token(Token = "0x4000CD1")]
	public const float kBOUNDS_CHEAT = 0.01f;

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x1039F6C", Offset = "0x1039F6C", VA = "0x1039F6C")]
	public static Bounds ComputeBounds(Light light)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x103A488", Offset = "0x103A488", VA = "0x103A488")]
	public static Bounds ComputeBounds(Terrain terrain)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x103A630", Offset = "0x103A630", VA = "0x103A630")]
	public static bool FrustumIntersectsBounds(Bounds bounds, List<Plane> frustum, int inMask, out int outMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x103A828", Offset = "0x103A828", VA = "0x103A828")]
	public static bool FrustumContainsBounds(Bounds bounds, List<Plane> frustum)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x103AA00", Offset = "0x103AA00", VA = "0x103AA00")]
	public static bool BoundsContainsBounds(Bounds container, Bounds contained)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x103AA60", Offset = "0x103AA60", VA = "0x103AA60")]
	public static bool BoundsIntersectsSphere(Bounds bounds, Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x103AB88", Offset = "0x103AB88", VA = "0x103AB88")]
	public static Bounds ProjectBounds(Bounds bounds, Vector3 projection)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x103ACC8", Offset = "0x103ACC8", VA = "0x103ACC8")]
	public static bool IsPointInFrontOfPlane(Vector3 position, Vector3 center, Vector3 normal)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x103ADD4", Offset = "0x103ADD4", VA = "0x103ADD4")]
	public static bool IsPolygonConvex(Vector3[] verts)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x103B034", Offset = "0x103B034", VA = "0x103B034")]
	public static int CompareVectorsCW(Vector3 a, Vector3 b, Vector3 centroid, Vector3 normal)
	{
		return default(int);
	}
}
[Token(Token = "0x20001DF")]
public static class SECTR_Graph
{
	[Token(Token = "0x2000486")]
	public class Node : IComparable<Node>
	{
		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SECTR_Portal Portal;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SECTR_Sector Sector;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CostPlusEstimate;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Cost;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Depth;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ForwardTraversal;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Node Parent;

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x103D938", Offset = "0x103D938", VA = "0x103D938", Slot = "4")]
		public int CompareTo(Node other)
		{
			return default(int);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x103CCE0", Offset = "0x103CCE0", VA = "0x103CCE0")]
		public static void ReconstructPath(List<Node> path, Node currentNode)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x103BBDC", Offset = "0x103BBDC", VA = "0x103BBDC")]
		public Node()
		{
		}
	}

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Sector> initialSectors;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<SECTR_Sector> goalSectors;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static SECTR_PriorityQueue<Node> openSet;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<SECTR_Portal, Node> closedSet;

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x103B734", Offset = "0x103B734", VA = "0x103B734")]
	public static void DepthWalk(ref List<Node> nodes, SECTR_Sector root, SECTR_Portal.PortalFlags stopFlags, int maxDepth)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x103BD24", Offset = "0x103BD24", VA = "0x103BD24")]
	public static void BreadthWalk(ref List<Node> nodes, SECTR_Sector root, SECTR_Portal.PortalFlags stopFlags, int maxDepth)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x103C1D0", Offset = "0x103C1D0", VA = "0x103C1D0")]
	public static void FindShortestPath(ref List<Node> path, Vector3 start, Vector3 goal, SECTR_Portal.PortalFlags stopFlags)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x103CD68", Offset = "0x103CD68", VA = "0x103CD68")]
	public static string GetGraphAsDot(string graphName)
	{
		return null;
	}
}
[Token(Token = "0x20001E0")]
public abstract class SECTR_Hull : MonoBehaviour
{
	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh previousMesh;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] vertsCW;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 meshCentroid;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected Vector3 meshNormal;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA125D8", Offset = "0xA125D8")]
	public Mesh HullMesh;

	[Token(Token = "0x170000C3")]
	public Vector3[] VertsCW
	{
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x103F18C", Offset = "0x103F18C", VA = "0x103F18C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C4")]
	public Vector3 Normal
	{
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x103F814", Offset = "0x103F814", VA = "0x103F814")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000C5")]
	public Vector3 ReverseNormal
	{
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x103F8F0", Offset = "0x103F8F0", VA = "0x103F8F0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000C6")]
	public Vector3 Center
	{
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x103FA0C", Offset = "0x103FA0C", VA = "0x103FA0C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000C7")]
	public Plane HullPlane
	{
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x103FA84", Offset = "0x103FA84", VA = "0x103FA84")]
		get
		{
			return default(Plane);
		}
	}

	[Token(Token = "0x170000C8")]
	public Plane ReverseHullPlane
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x103FB08", Offset = "0x103FB08", VA = "0x103FB08")]
		get
		{
			return default(Plane);
		}
	}

	[Token(Token = "0x170000C9")]
	public Bounds BoundingBox
	{
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x103FB8C", Offset = "0x103FB8C", VA = "0x103FB8C")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x103FD78", Offset = "0x103FD78", VA = "0x103FD78")]
	public bool IsPointInHull(Vector3 p, float distanceTolerance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x103F1B0", Offset = "0x103F1B0", VA = "0x103F1B0")]
	protected void ComputeVerts()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x1040184", Offset = "0x1040184", VA = "0x1040184")]
	protected SECTR_Hull()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x104020C", Offset = "0x104020C", VA = "0x104020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F600", Offset = "0xA1F600")]
	private int <ComputeVerts>b__20_0(Vector3 a, Vector3 b)
	{
		return default(int);
	}
}
[Token(Token = "0x20001E1")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01B34", Offset = "0xA01B34")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01B34", Offset = "0xA01B34")]
public class SECTR_Member : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000487")]
	public class Child
	{
		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int gameObjectHash;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Member member;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer renderer;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int renderHash;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light light;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int lightHash;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Terrain terrain;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int terrainHash;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Bounds rendererBounds;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Bounds lightBounds;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Bounds terrainBounds;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool shadowLight;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool rendererCastsShadows;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		public bool terrainCastsShadows;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public LayerMask layer;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 shadowLightPosition;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float shadowLightRange;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public LightType shadowLightType;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int shadowCullingMask;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool processed;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool renderCulled;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		public bool lightCulled;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
		public bool terrainCulled;

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x1044CDC", Offset = "0x1044CDC", VA = "0x1044CDC")]
		public void Init(GameObject gameObject, Renderer renderer, Light light, Terrain terrain, SECTR_Member member, bool dirShadowCaster, Vector3 shadowVec)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x104631C", Offset = "0x104631C", VA = "0x104631C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x10463C0", Offset = "0x10463C0", VA = "0x10463C0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x1045A40", Offset = "0x1045A40", VA = "0x1045A40")]
		public static bool operator ==(Child x, Child y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x1045A14", Offset = "0x1045A14", VA = "0x1045A14")]
		public static bool operator !=(Child x, Child y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x1045A6C", Offset = "0x1045A6C", VA = "0x1045A6C")]
		public Child()
		{
		}
	}

	[Token(Token = "0x2000488")]
	public enum BoundsUpdateModes
	{
		[Token(Token = "0x4001C58")]
		Start,
		[Token(Token = "0x4001C59")]
		Movement,
		[Token(Token = "0x4001C5A")]
		Always,
		[Token(Token = "0x4001C5B")]
		Static,
		[Token(Token = "0x4001C5C")]
		SelfOnly
	}

	[Token(Token = "0x2000489")]
	public enum ChildCullModes
	{
		[Token(Token = "0x4001C5E")]
		Default,
		[Token(Token = "0x4001C5F")]
		Group,
		[Token(Token = "0x4001C60")]
		Individual
	}

	[Token(Token = "0x200048A")]
	public delegate void MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined);

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12610", Offset = "0xA12610")]
	private List<Child> children;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12648", Offset = "0xA12648")]
	private List<Child> renderers;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12680", Offset = "0xA12680")]
	private List<Child> lights;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA126B8", Offset = "0xA126B8")]
	private List<Child> terrains;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA126F0", Offset = "0xA126F0")]
	private List<Child> shadowLights;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12728", Offset = "0xA12728")]
	private List<Child> shadowCasters;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12760", Offset = "0xA12760")]
	private Bounds totalBounds;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12798", Offset = "0xA12798")]
	private Bounds renderBounds;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA127D0", Offset = "0xA127D0")]
	private Bounds lightBounds;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12808", Offset = "0xA12808")]
	private bool hasRenderBounds;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12840", Offset = "0xA12840")]
	private bool hasLightBounds;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12878", Offset = "0xA12878")]
	private bool shadowCaster;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA128B0", Offset = "0xA128B0")]
	private bool shadowLight;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA128E8", Offset = "0xA128E8")]
	private bool frozen;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12920", Offset = "0xA12920")]
	private bool neverJoin;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12958", Offset = "0xA12958")]
	protected List<Light> bakedOnlyLights;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool isSector;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected SECTR_Member childProxy;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected bool hasChildProxy;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool started;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool usedStartSector;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<SECTR_Sector> sectors;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<SECTR_Sector> newSectors;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<SECTR_Sector> leftSectors;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Dictionary<Transform, Child> childTable;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<Light, Light> bakedOnlyTable;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Stack<Child> childPool;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Member> allMembers;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<Transform, SECTR_Member> allMemberTable;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12990", Offset = "0xA12990")]
	public bool PortalDetermined;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA129C8", Offset = "0xA129C8")]
	public SECTR_Sector ForceStartSector;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12A14", Offset = "0xA12A14")]
	public BoundsUpdateModes BoundsUpdateMode;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12A4C", Offset = "0xA12A4C")]
	public float ExtraBounds;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12A84", Offset = "0xA12A84")]
	public bool OverrideBounds;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12ABC", Offset = "0xA12ABC")]
	public Bounds BoundsOverride;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12B08", Offset = "0xA12B08")]
	public Light DirShadowCaster;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12B40", Offset = "0xA12B40")]
	public float DirShadowDistance;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12B8C", Offset = "0xA12B8C")]
	public ChildCullModes ChildCulling;

	[NonSerialized]
	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12BC4", Offset = "0xA12BC4")]
	public int LastVisibleFrameNumber;

	[Token(Token = "0x170000CA")]
	public static List<SECTR_Member> All
	{
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1043090", Offset = "0x1043090", VA = "0x1043090")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CB")]
	public bool CullEachChild
	{
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x10430F8", Offset = "0x10430F8", VA = "0x10430F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CC")]
	public List<SECTR_Sector> Sectors
	{
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1043128", Offset = "0x1043128", VA = "0x1043128")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CD")]
	public List<Child> Children
	{
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1043130", Offset = "0x1043130", VA = "0x1043130")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CE")]
	public List<Child> Renderers
	{
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1043154", Offset = "0x1043154", VA = "0x1043154")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CF")]
	public bool ShadowCaster
	{
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1043178", Offset = "0x1043178", VA = "0x1043178")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D0")]
	public List<Child> ShadowCasters
	{
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x104319C", Offset = "0x104319C", VA = "0x104319C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D1")]
	public List<Child> Lights
	{
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x10431C0", Offset = "0x10431C0", VA = "0x10431C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D2")]
	public bool ShadowLight
	{
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x10431E4", Offset = "0x10431E4", VA = "0x10431E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D3")]
	public List<Child> ShadowLights
	{
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1043208", Offset = "0x1043208", VA = "0x1043208")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D4")]
	public List<Child> Terrains
	{
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x104322C", Offset = "0x104322C", VA = "0x104322C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D5")]
	public Bounds TotalBounds
	{
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1043250", Offset = "0x1043250", VA = "0x1043250")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x170000D6")]
	public Bounds RenderBounds
	{
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1043264", Offset = "0x1043264", VA = "0x1043264")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x170000D7")]
	public bool HasRenderBounds
	{
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x10432A8", Offset = "0x10432A8", VA = "0x10432A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D8")]
	public Bounds LightBounds
	{
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x10432CC", Offset = "0x10432CC", VA = "0x10432CC")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x170000D9")]
	public bool HasLightBounds
	{
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x1043310", Offset = "0x1043310", VA = "0x1043310")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DA")]
	public bool Frozen
	{
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x10433A4", Offset = "0x10433A4", VA = "0x10433A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1043390", Offset = "0x1043390", VA = "0x1043390")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public SECTR_Member ChildProxy
	{
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x10433AC", Offset = "0x10433AC", VA = "0x10433AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public bool NeverJoin
	{
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x1043434", Offset = "0x1043434", VA = "0x1043434")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public bool IsSector
	{
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x1043440", Offset = "0x1043440", VA = "0x1043440")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000010")]
	public event MembershipChanged Changed
	{
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x103E480", Offset = "0x103E480", VA = "0x103E480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F610", Offset = "0xA1F610")]
		add
		{
		}
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x103E5C0", Offset = "0x103E5C0", VA = "0x103E5C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F620", Offset = "0xA1F620")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x1043334", Offset = "0x1043334", VA = "0x1043334")]
	public bool IsVisibleThisFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x1043360", Offset = "0x1043360", VA = "0x1043360")]
	public bool WasVisibleLastFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x1041734", Offset = "0x1041734", VA = "0x1041734")]
	public void ForceUpdate(bool updateChildren)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x104420C", Offset = "0x104420C", VA = "0x104420C")]
	public void SectorDisabled(SECTR_Sector sector)
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x10446EC", Offset = "0x10446EC", VA = "0x10446EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x1044750", Offset = "0x1044750", VA = "0x1044750", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x1044910", Offset = "0x1044910", VA = "0x1044910", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x1044C28", Offset = "0x1044C28", VA = "0x1044C28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x1043448", Offset = "0x1043448", VA = "0x1043448")]
	private void _UpdateChildren()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x104538C", Offset = "0x104538C", VA = "0x104538C")]
	private void _AddChildren(Transform childTransform, bool dirShadowCaster, Vector3 shadowVec)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x1043CB0", Offset = "0x1043CB0", VA = "0x1043CB0")]
	private void _UpdateSectorMembership()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x1045A74", Offset = "0x1045A74", VA = "0x1045A74")]
	private SECTR_Portal _CrossedPortal(SECTR_Sector sector)
	{
		return null;
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x1045F98", Offset = "0x1045F98", VA = "0x1045F98")]
	public SECTR_Member()
	{
	}
}
[Token(Token = "0x20001E2")]
public static class SECTR_Modules
{
	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool AUDIO;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool VIS;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool STREAM;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool DEV;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string VERSION;

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x1046404", Offset = "0x1046404", VA = "0x1046404")]
	static SECTR_Modules()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x10465F0", Offset = "0x10465F0", VA = "0x10465F0")]
	public static bool HasPro()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x10465F8", Offset = "0x10465F8", VA = "0x10465F8")]
	public static bool HasComplete()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001E3")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01B80", Offset = "0xA01B80")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01B80", Offset = "0xA01B80")]
public class SECTR_Portal : SECTR_Hull
{
	[Token(Token = "0x200048B")]
	[Flags]
	public enum PortalFlags
	{
		[Token(Token = "0x4001C62")]
		Closed = 1,
		[Token(Token = "0x4001C63")]
		Locked = 2,
		[Token(Token = "0x4001C64")]
		PassThrough = 4
	}

	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA044B0", Offset = "0xA044B0")]
	private sealed class <GetSectors>d__17 : IEnumerable<SECTR_Sector>, IEnumerable, IEnumerator<SECTR_Sector>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SECTR_Sector <>2__current;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SECTR_Portal <>4__this;

		[Token(Token = "0x1700025F")]
		private SECTR_Sector System.Collections.Generic.IEnumerator<SECTR_Sector>.Current
		{
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x1048654", Offset = "0x1048654", VA = "0x1048654", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0x10486BC", Offset = "0x10486BC", VA = "0x10486BC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x10482DC", Offset = "0x10482DC", VA = "0x10482DC")]
		[DebuggerHidden]
		public <GetSectors>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x10485C8", Offset = "0x10485C8", VA = "0x10485C8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x10485CC", Offset = "0x10485CC", VA = "0x10485CC", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x104865C", Offset = "0x104865C", VA = "0x104865C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x10486C4", Offset = "0x10486C4", VA = "0x10486C4", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<SECTR_Sector> System.Collections.Generic.IEnumerable<SECTR_Sector>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x1048770", Offset = "0x1048770", VA = "0x1048770", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12BE4", Offset = "0xA12BE4")]
	private SECTR_Sector frontSector;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA12C1C", Offset = "0xA12C1C")]
	private SECTR_Sector backSector;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool visited;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Portal> allPortals;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12C54", Offset = "0xA12C54")]
	public PortalFlags Flags;

	[Token(Token = "0x170000DE")]
	public static List<SECTR_Portal> All
	{
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x1047EC8", Offset = "0x1047EC8", VA = "0x1047EC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	public SECTR_Sector FrontSector
	{
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x103BBE4", Offset = "0x103BBE4", VA = "0x103BBE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x1047F30", Offset = "0x1047F30", VA = "0x1047F30")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public SECTR_Sector BackSector
	{
		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x103BC84", Offset = "0x103BC84", VA = "0x103BC84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x104813C", Offset = "0x104813C", VA = "0x104813C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public bool Visited
	{
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x1048248", Offset = "0x1048248", VA = "0x1048248")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1048250", Offset = "0x1048250", VA = "0x1048250")]
		set
		{
		}
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x104825C", Offset = "0x104825C", VA = "0x104825C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F630", Offset = "0xA1F630")]
	public IEnumerable<SECTR_Sector> GetSectors()
	{
		return null;
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x10382D8", Offset = "0x10382D8", VA = "0x10382D8")]
	public void SetFlag(PortalFlags flag, bool on)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x1048314", Offset = "0x1048314", VA = "0x1048314")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x1048430", Offset = "0x1048430", VA = "0x1048430")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x104854C", Offset = "0x104854C", VA = "0x104854C")]
	public SECTR_Portal()
	{
	}
}
[Token(Token = "0x20001E4")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA01BCC", Offset = "0xA01BCC")]
public class SECTR_PriorityQueue<T> where T : IComparable<T>
{
	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<T> data;

	[Token(Token = "0x170000E2")]
	public int Count
	{
		[Token(Token = "0x6000C41")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C42")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public T Item
	{
		[Token(Token = "0x6000C43")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000C44")]
		set
		{
		}
	}

	[Token(Token = "0x6000C3F")]
	public SECTR_PriorityQueue()
	{
	}

	[Token(Token = "0x6000C40")]
	public SECTR_PriorityQueue(int capacity)
	{
	}

	[Token(Token = "0x6000C45")]
	public void Enqueue(T item)
	{
	}

	[Token(Token = "0x6000C46")]
	public T Dequeue()
	{
		return (T)null;
	}

	[Token(Token = "0x6000C47")]
	public T Peek()
	{
		return (T)null;
	}

	[Token(Token = "0x6000C48")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000C49")]
	public bool IsConsistent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4A")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000C4B")]
	private void _SwapElements(int i, int j)
	{
	}

	[Token(Token = "0x6000C4C")]
	private void _Update(int i)
	{
	}
}
[Token(Token = "0x20001E5")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01C04", Offset = "0xA01C04")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01C04", Offset = "0xA01C04")]
public class SECTR_Sector : SECTR_Member
{
	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<SECTR_Portal> portals;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<SECTR_Member> members;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool visited;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Sector> allSectors;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12CD4", Offset = "0xA12CD4")]
	public SECTR_Sector TopTerrain;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12D0C", Offset = "0xA12D0C")]
	public SECTR_Sector BottomTerrain;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12D44", Offset = "0xA12D44")]
	public SECTR_Sector LeftTerrain;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12D7C", Offset = "0xA12D7C")]
	public SECTR_Sector RightTerrain;

	[Token(Token = "0x170000E4")]
	public new static List<SECTR_Sector> All
	{
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x104A634", Offset = "0x104A634", VA = "0x104A634")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E5")]
	public bool Visited
	{
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x104A69C", Offset = "0x104A69C", VA = "0x104A69C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x104A6A4", Offset = "0x104A6A4", VA = "0x104A6A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public List<SECTR_Portal> Portals
	{
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x104A6B0", Offset = "0x104A6B0", VA = "0x104A6B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E7")]
	public List<SECTR_Member> Members
	{
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x104A6B8", Offset = "0x104A6B8", VA = "0x104A6B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E8")]
	public bool IsConnectedTerrain
	{
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x104A6C0", Offset = "0x104A6C0", VA = "0x104A6C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x104A56C", Offset = "0x104A56C", VA = "0x104A56C")]
	private SECTR_Sector()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x103CB60", Offset = "0x103CB60", VA = "0x103CB60")]
	public static void GetContaining(ref List<SECTR_Sector> sectors, Vector3 position)
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x1045E20", Offset = "0x1045E20", VA = "0x1045E20")]
	public static void GetContaining(ref List<SECTR_Sector> sectors, Bounds bounds)
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x104A7CC", Offset = "0x104A7CC", VA = "0x104A7CC")]
	public void ConnectTerrainNeighbors()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x104A9C0", Offset = "0x104A9C0", VA = "0x104A9C0")]
	public void DisonnectTerrainNeighbors()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x10480A4", Offset = "0x10480A4", VA = "0x10480A4")]
	public void Register(SECTR_Portal portal)
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x104803C", Offset = "0x104803C", VA = "0x104803C")]
	public void Deregister(SECTR_Portal portal)
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x1045DB8", Offset = "0x1045DB8", VA = "0x1045DB8")]
	public void Register(SECTR_Member member)
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x1044BC0", Offset = "0x1044BC0", VA = "0x1044BC0")]
	public void Deregister(SECTR_Member member)
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x104ADC4", Offset = "0x104ADC4", VA = "0x104ADC4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x104AF18", Offset = "0x104AF18", VA = "0x104AF18", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x104A8F8", Offset = "0x104A8F8", VA = "0x104A8F8")]
	protected static Terrain GetTerrain(SECTR_Sector sector)
	{
		return null;
	}
}
[Token(Token = "0x20001E6")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA01C50", Offset = "0xA01C50")]
public class SECTR_ToolTip : Attribute
{
	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string tipText;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string dependentProperty;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float min;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float max;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Type enumType;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hasRange;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool devOnly;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool sceneObjectOverride;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool allowSceneObjects;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool treatAsLayer;

	[Token(Token = "0x170000E9")]
	public string TipText
	{
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xD248CC", Offset = "0xD248CC", VA = "0xD248CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EA")]
	public string DependentProperty
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xD248D4", Offset = "0xD248D4", VA = "0xD248D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EB")]
	public float Min
	{
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xD248DC", Offset = "0xD248DC", VA = "0xD248DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EC")]
	public float Max
	{
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xD248E4", Offset = "0xD248E4", VA = "0xD248E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000ED")]
	public Type EnumType
	{
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xD248EC", Offset = "0xD248EC", VA = "0xD248EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EE")]
	public bool HasRange
	{
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xD248F4", Offset = "0xD248F4", VA = "0xD248F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EF")]
	public bool DevOnly
	{
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xD248FC", Offset = "0xD248FC", VA = "0xD248FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F0")]
	public bool SceneObjectOverride
	{
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xD24904", Offset = "0xD24904", VA = "0xD24904")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F1")]
	public bool AllowSceneObjects
	{
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xD2490C", Offset = "0xD2490C", VA = "0xD2490C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F2")]
	public bool TreatAsLayer
	{
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xD24914", Offset = "0xD24914", VA = "0xD24914")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xD246B4", Offset = "0xD246B4", VA = "0xD246B4")]
	public SECTR_ToolTip(string tipText)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xD246E0", Offset = "0xD246E0", VA = "0xD246E0")]
	public SECTR_ToolTip(string tipText, float min, float max)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xD24728", Offset = "0xD24728", VA = "0xD24728")]
	public SECTR_ToolTip(string tipText, string dependentProperty)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xD24760", Offset = "0xD24760", VA = "0xD24760")]
	public SECTR_ToolTip(string tipText, string dependentProperty, float min, float max)
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xD247B4", Offset = "0xD247B4", VA = "0xD247B4")]
	public SECTR_ToolTip(string tipText, bool devOnly)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xD247F4", Offset = "0xD247F4", VA = "0xD247F4")]
	public SECTR_ToolTip(string tipText, bool devOnly, bool treatAsLayer)
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xD24840", Offset = "0xD24840", VA = "0xD24840")]
	public SECTR_ToolTip(string tipText, string dependentProperty, Type enumType)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xD24880", Offset = "0xD24880", VA = "0xD24880")]
	public SECTR_ToolTip(string tipText, string dependentProperty, bool allowSceneObjects)
	{
	}
}
[Serializable]
[Token(Token = "0x20001E7")]
public class SECTR_ULong
{
	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private int first;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private int second;

	[Token(Token = "0x170000F3")]
	public ulong value
	{
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xD25124", Offset = "0xD25124", VA = "0xD25124")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xD25134", Offset = "0xD25134", VA = "0xD25134")]
		set
		{
		}
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xD25140", Offset = "0xD25140", VA = "0xD25140")]
	public SECTR_ULong(ulong newValue)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xD25170", Offset = "0xD25170", VA = "0xD25170")]
	public SECTR_ULong()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xD25198", Offset = "0xD25198", VA = "0xD25198", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xD25268", Offset = "0xD25268", VA = "0xD25268")]
	public static bool operator >(SECTR_ULong a, ulong b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xD25290", Offset = "0xD25290", VA = "0xD25290")]
	public static bool operator >(ulong a, SECTR_ULong b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xD252B8", Offset = "0xD252B8", VA = "0xD252B8")]
	public static bool operator <(SECTR_ULong a, ulong b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xD252E0", Offset = "0xD252E0", VA = "0xD252E0")]
	public static bool operator <(ulong a, SECTR_ULong b)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA01C64", Offset = "0xA01C64")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01C64", Offset = "0xA01C64")]
public class SECTR_Chunk : MonoBehaviour
{
	[Token(Token = "0x200048D")]
	public enum LoadState
	{
		[Token(Token = "0x4001C6A")]
		Unloaded,
		[Token(Token = "0x4001C6B")]
		Loading,
		[Token(Token = "0x4001C6C")]
		Loaded,
		[Token(Token = "0x4001C6D")]
		Unloading,
		[Token(Token = "0x4001C6E")]
		Active
	}

	[Token(Token = "0x200048E")]
	public delegate void LoadCallback(SECTR_Chunk source, LoadState loadState);

	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA044C0", Offset = "0xA044C0")]
	private sealed class <_DeferredUnload>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Chunk <>4__this;

		[Token(Token = "0x17000261")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B25")]
			[Address(RVA = "0xD7B3E4", Offset = "0xD7B3E4", VA = "0xD7B3E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B27")]
			[Address(RVA = "0xD7B44C", Offset = "0xD7B44C", VA = "0xD7B44C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xD7B1CC", Offset = "0xD7B1CC", VA = "0xD7B1CC")]
		[DebuggerHidden]
		public <_DeferredUnload>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xD7B324", Offset = "0xD7B324", VA = "0xD7B324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xD7B328", Offset = "0xD7B328", VA = "0xD7B328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xD7B3EC", Offset = "0xD7B3EC", VA = "0xD7B3EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000490")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA044D0", Offset = "0xA044D0")]
	private sealed class <_UnloadScene>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Chunk <>4__this;

		[Token(Token = "0x17000263")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0xD7B524", Offset = "0xD7B524", VA = "0xD7B524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0xD7B58C", Offset = "0xD7B58C", VA = "0xD7B58C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xD7B268", Offset = "0xD7B268", VA = "0xD7B268")]
		[DebuggerHidden]
		public <_UnloadScene>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xD7B454", Offset = "0xD7B454", VA = "0xD7B454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xD7B458", Offset = "0xD7B458", VA = "0xD7B458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xD7B52C", Offset = "0xD7B52C", VA = "0xD7B52C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AsyncOperation asyncLoadOp;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LoadState loadState;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int refCount;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject chunkRoot;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject chunkSector;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool recenterChunk;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SECTR_Sector cachedSector;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject proxy;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool quitting;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SECTR_Chunk chunkActivating;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LinkedList<SECTR_Chunk> activationQueue;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool requestedDeferredUnload;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12DD4", Offset = "0xA12DD4")]
	public string ScenePath;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12E0C", Offset = "0xA12E0C")]
	public string NodeName;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12E44", Offset = "0xA12E44")]
	public bool ExportForReuse;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12E7C", Offset = "0xA12E7C")]
	public Mesh ProxyMesh;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12EB4", Offset = "0xA12EB4")]
	public Material[] ProxyMaterials;

	[Token(Token = "0x170000F4")]
	public SECTR_Sector Sector
	{
		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xD794A8", Offset = "0xD794A8", VA = "0xD794A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000011")]
	public event LoadCallback Changed
	{
		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xD79C7C", Offset = "0xD79C7C", VA = "0xD79C7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F694", Offset = "0xA1F694")]
		add
		{
		}
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xD79D20", Offset = "0xD79D20", VA = "0xD79D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F6A4", Offset = "0xA1F6A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event LoadCallback ReferenceChange
	{
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xD79DC4", Offset = "0xD79DC4", VA = "0xD79DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F6B4", Offset = "0xA1F6B4")]
		add
		{
		}
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xD79E68", Offset = "0xD79E68", VA = "0xD79E68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F6C4", Offset = "0xA1F6C4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xD794B0", Offset = "0xD794B0", VA = "0xD794B0")]
	public void AddReference()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xD79A84", Offset = "0xD79A84", VA = "0xD79A84")]
	public void RemoveReference()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xD79BF0", Offset = "0xD79BF0", VA = "0xD79BF0")]
	public bool IsLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xD79C00", Offset = "0xD79C00", VA = "0xD79C00")]
	public bool IsUnloaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xD79C10", Offset = "0xD79C10", VA = "0xD79C10")]
	public float LoadProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xD79F0C", Offset = "0xD79F0C", VA = "0xD79F0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xD79F14", Offset = "0xD79F14", VA = "0xD79F14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xD7A1A0", Offset = "0xD7A1A0", VA = "0xD7A1A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xD7A7D8", Offset = "0xD7A7D8", VA = "0xD7A7D8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xD7A7E4", Offset = "0xD7A7E4", VA = "0xD7A7E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xD79504", Offset = "0xD79504", VA = "0xD79504")]
	private void _Load()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xD79AD4", Offset = "0xD79AD4", VA = "0xD79AD4")]
	private void _Unload()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xD7A484", Offset = "0xD7A484", VA = "0xD7A484")]
	private void _DestroyChunk(bool createProxy, bool fromDisable)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xD7A28C", Offset = "0xD7A28C", VA = "0xD7A28C")]
	private void _FindChunkRoot()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xD7AB30", Offset = "0xD7AB30", VA = "0xD7AB30")]
	private void _SetupChunk()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xD79F8C", Offset = "0xD79F8C", VA = "0xD79F8C")]
	private void _CreateProxy()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xD7A978", Offset = "0xD7A978", VA = "0xD7A978")]
	private void _TrySceneActivation()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xD7AFD0", Offset = "0xD7AFD0", VA = "0xD7AFD0")]
	private void _UnloadResources()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xD7B15C", Offset = "0xD7B15C", VA = "0xD7B15C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F6D4", Offset = "0xA1F6D4")]
	private IEnumerator _DeferredUnload()
	{
		return null;
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xD7B1F8", Offset = "0xD7B1F8", VA = "0xD7B1F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F738", Offset = "0xA1F738")]
	private IEnumerator _UnloadScene(string scenePath)
	{
		return null;
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xD7B294", Offset = "0xD7B294", VA = "0xD7B294")]
	public SECTR_Chunk()
	{
	}
}
[Token(Token = "0x20001E9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01CEC", Offset = "0xA01CEC")]
public class SECTR_ChunkRef : MonoBehaviour
{
	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_ChunkRef> allChunkRefs;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform RealSector;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Recentered;

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xD7B040", Offset = "0xD7B040", VA = "0xD7B040")]
	public static SECTR_ChunkRef FindChunkRef(string chunkName)
	{
		return null;
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xD7B64C", Offset = "0xD7B64C", VA = "0xD7B64C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xD7B6D0", Offset = "0xD7B6D0", VA = "0xD7B6D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xD7B754", Offset = "0xD7B754", VA = "0xD7B754")]
	public SECTR_ChunkRef()
	{
	}
}
[Token(Token = "0x20001EA")]
public class SECTR_GroupLoader : SECTR_Loader
{
	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12F0C", Offset = "0xA12F0C")]
	public List<SECTR_Sector> Sectors;

	[Token(Token = "0x170000F5")]
	public override bool Loaded
	{
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x103D968", Offset = "0x103D968", VA = "0x103D968", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x103DAA8", Offset = "0x103DAA8", VA = "0x103DAA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x103DC10", Offset = "0x103DC10", VA = "0x103DC10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x103DD78", Offset = "0x103DD78", VA = "0x103DD78")]
	private void ChunkChanged(SECTR_Chunk source, SECTR_Chunk.LoadState loadState)
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x103DF74", Offset = "0x103DF74", VA = "0x103DF74")]
	public SECTR_GroupLoader()
	{
	}
}
[Token(Token = "0x20001EB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA01D24", Offset = "0xA01D24")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01D24", Offset = "0xA01D24")]
public class SECTR_Hibernator : MonoBehaviour
{
	[Token(Token = "0x2000491")]
	public delegate void HibernateCallback();

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hibernating;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<SECTR_Chunk, SECTR_Chunk> chunks;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numLoadedSectors;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12F44", Offset = "0xA12F44")]
	public bool HibernateChildren;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12F7C", Offset = "0xA12F7C")]
	public bool HibernateBehaviors;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12FB4", Offset = "0xA12FB4")]
	public bool HibernateColliders;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA12FEC", Offset = "0xA12FEC")]
	public bool HibernateRigidBodies;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13024", Offset = "0xA13024")]
	public bool HibernateRenderers;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1305C", Offset = "0xA1305C")]
	public GameObject HibernateTarget;

	[Token(Token = "0x14000013")]
	public event HibernateCallback Awoke
	{
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x103DFEC", Offset = "0x103DFEC", VA = "0x103DFEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F79C", Offset = "0xA1F79C")]
		add
		{
		}
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x103E090", Offset = "0x103E090", VA = "0x103E090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F7AC", Offset = "0xA1F7AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event HibernateCallback Hibernated
	{
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x103E134", Offset = "0x103E134", VA = "0x103E134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F7BC", Offset = "0xA1F7BC")]
		add
		{
		}
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x103E1D8", Offset = "0x103E1D8", VA = "0x103E1D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F7CC", Offset = "0xA1F7CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event HibernateCallback HibernateUpdate
	{
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x103E27C", Offset = "0x103E27C", VA = "0x103E27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F7DC", Offset = "0xA1F7DC")]
		add
		{
		}
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x103E320", Offset = "0x103E320", VA = "0x103E320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F7EC", Offset = "0xA1F7EC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x103E3C4", Offset = "0x103E3C4", VA = "0x103E3C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x103E528", Offset = "0x103E528", VA = "0x103E528")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x103E668", Offset = "0x103E668", VA = "0x103E668")]
	private void _ChunkChanged(SECTR_Chunk source, SECTR_Chunk.LoadState loadState)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x103E70C", Offset = "0x103E70C", VA = "0x103E70C")]
	private void _MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined)
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x103E690", Offset = "0x103E690", VA = "0x103E690")]
	private void _HibernationChanged()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x103EA6C", Offset = "0x103EA6C", VA = "0x103EA6C")]
	private void _WakeUp()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x103EA30", Offset = "0x103EA30", VA = "0x103EA30")]
	private void _Hibernate()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x103ECB0", Offset = "0x103ECB0", VA = "0x103ECB0")]
	private void _UpdateComponents()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x103F0C0", Offset = "0x103F0C0", VA = "0x103F0C0")]
	public SECTR_Hibernator()
	{
	}
}
[Token(Token = "0x20001EC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01DAC", Offset = "0xA01DAC")]
public class SECTR_LightmapRef : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000492")]
	public class RefData
	{
		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D FarLightmap;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D NearLightmap;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x1041FDC", Offset = "0x1041FDC", VA = "0x1041FDC")]
		public RefData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000493")]
	public class RenderData
	{
		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int rendererLightmapIndex;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 rendererLightmapScaleOffset;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Terrain terrain;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int terrainLightmapIndex;

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x1041FEC", Offset = "0x1041FEC", VA = "0x1041FEC")]
		public RenderData()
		{
		}
	}

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA130C4", Offset = "0xA130C4")]
	private List<RefData> lightmapRefs;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA130FC", Offset = "0xA130FC")]
	private List<RenderData> lightmapRenderRefs;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] globalLightmapRefCount;

	[Token(Token = "0x170000F6")]
	public List<RefData> LightmapRefs
	{
		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1041C14", Offset = "0x1041C14", VA = "0x1041C14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F7")]
	public List<RenderData> LightmapRenderers
	{
		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1041C1C", Offset = "0x1041C1C", VA = "0x1041C1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x1041C24", Offset = "0x1041C24", VA = "0x1041C24")]
	public static void InitRefCounts()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x1041DCC", Offset = "0x1041DCC", VA = "0x1041DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x1041F40", Offset = "0x1041F40", VA = "0x1041F40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x1041F44", Offset = "0x1041F44", VA = "0x1041F44")]
	public SECTR_LightmapRef()
	{
	}
}
[Token(Token = "0x20001ED")]
public abstract class SECTR_Loader : MonoBehaviour
{
	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool locked;

	[Token(Token = "0x170000F8")]
	public abstract bool Loaded
	{
		[Token(Token = "0x6000CB5")]
		get;
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x1042070", Offset = "0x1042070", VA = "0x1042070")]
	protected void LockSelf(bool lockSelf)
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x103DFE4", Offset = "0x103DFE4", VA = "0x103DFE4")]
	protected SECTR_Loader()
	{
	}
}
[Token(Token = "0x20001EE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01DE4", Offset = "0xA01DE4")]
public class SECTR_LoadingDoor : SECTR_Door
{
	[Token(Token = "0x2000494")]
	private enum FadeMode
	{
		[Token(Token = "0x4001C7E")]
		None,
		[Token(Token = "0x4001C7F")]
		FadeIn,
		[Token(Token = "0x4001C80")]
		FadeOut,
		[Token(Token = "0x4001C81")]
		Hold
	}

	[Token(Token = "0x2000495")]
	private class LoadRequest
	{
		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SECTR_Chunk chunkToLoad;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SECTR_Chunk chunkToUnload;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Chunk loadedChunk;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool enteredFront;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool enteredBack;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FadeMode fadeMode;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeAmount;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float holdStart;

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x10426EC", Offset = "0x10426EC", VA = "0x10426EC")]
		public LoadRequest()
		{
		}
	}

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Texture2D fadeTexture;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<Collider, LoadRequest> loadRequests;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13134", Offset = "0xA13134")]
	public LayerMask LoadLayers;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1316C", Offset = "0xA1316C")]
	public bool FadeBeforeLoad;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA131A4", Offset = "0xA131A4")]
	public float FadeTime;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA131F0", Offset = "0xA131F0")]
	public float HoldTime;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1323C", Offset = "0xA1323C")]
	public Color FadeColor;

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x10421C4", Offset = "0x10421C4", VA = "0x10421C4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x1042278", Offset = "0x1042278", VA = "0x1042278", Slot = "5")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x10426F4", Offset = "0x10426F4", VA = "0x10426F4", Slot = "6")]
	protected override void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x10429D8", Offset = "0x10429D8", VA = "0x10429D8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x1042D44", Offset = "0x1042D44", VA = "0x1042D44", Slot = "7")]
	protected override bool CanOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x1042EDC", Offset = "0x1042EDC", VA = "0x1042EDC")]
	private void OnClose()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x1042DF8", Offset = "0x1042DF8", VA = "0x1042DF8")]
	private bool _IsSectorLoaded(SECTR_Sector sector)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x1042584", Offset = "0x1042584", VA = "0x1042584")]
	private SECTR_Chunk _GetOppositeChunk(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x1042FF4", Offset = "0x1042FF4", VA = "0x1042FF4")]
	public SECTR_LoadingDoor()
	{
	}
}
[Token(Token = "0x20001EF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA01E1C", Offset = "0xA01E1C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01E1C", Offset = "0xA01E1C")]
public class SECTR_NeighborLoader : SECTR_Loader
{
	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SECTR_Sector> currentSectors;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SECTR_Graph.Node> neighbors;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13288", Offset = "0xA13288")]
	public int MaxDepth;

	[Token(Token = "0x170000F9")]
	public override bool Loaded
	{
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1046B8C", Offset = "0x1046B8C", VA = "0x1046B8C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x1046CA0", Offset = "0x1046CA0", VA = "0x1046CA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x1046D34", Offset = "0x1046D34", VA = "0x1046D34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x10471E0", Offset = "0x10471E0", VA = "0x10471E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x10471E8", Offset = "0x10471E8", VA = "0x10471E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x1046E14", Offset = "0x1046E14", VA = "0x1046E14")]
	private void _MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x1047230", Offset = "0x1047230", VA = "0x1047230")]
	public SECTR_NeighborLoader()
	{
	}
}
[Token(Token = "0x20001F0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01EA4", Offset = "0xA01EA4")]
public class SECTR_RegionLoader : SECTR_Loader
{
	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SECTR_Sector> sectors;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SECTR_Sector> loadSectors;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SECTR_Sector> unloadSectors;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool updated;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA132C0", Offset = "0xA132C0")]
	public Vector3 LoadSize;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA132F8", Offset = "0xA132F8")]
	public float UnloadBuffer;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13338", Offset = "0xA13338")]
	public LayerMask LayersToLoad;

	[Token(Token = "0x170000FA")]
	public override bool Loaded
	{
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1049A50", Offset = "0x1049A50", VA = "0x1049A50", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x1049B94", Offset = "0x1049B94", VA = "0x1049B94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x1049B9C", Offset = "0x1049B9C", VA = "0x1049B9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x1049CD4", Offset = "0x1049CD4", VA = "0x1049CD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x104A140", Offset = "0x104A140", VA = "0x104A140")]
	public SECTR_RegionLoader()
	{
	}
}
[Token(Token = "0x20001F1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA01EDC", Offset = "0xA01EDC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01EDC", Offset = "0xA01EDC")]
public class SECTR_StartLoader : SECTR_Loader
{
	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D fadeTexture;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fadeAmount;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13370", Offset = "0xA13370")]
	public bool FadeIn;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA133A8", Offset = "0xA133A8")]
	public float FadeTime;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA133F4", Offset = "0xA133F4")]
	public Color FadeColor;

	[NonSerialized]
	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool Paused;

	[Token(Token = "0x170000FB")]
	public override bool Loaded
	{
		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x104C7C8", Offset = "0x104C7C8", VA = "0x104C7C8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x104C918", Offset = "0x104C918", VA = "0x104C918")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x104C9DC", Offset = "0x104C9DC", VA = "0x104C9DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x104C9E8", Offset = "0x104C9E8", VA = "0x104C9E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x104CB0C", Offset = "0x104CB0C", VA = "0x104CB0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x104CBB0", Offset = "0x104CBB0", VA = "0x104CBB0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x104CD50", Offset = "0x104CD50", VA = "0x104CD50")]
	public SECTR_StartLoader()
	{
	}
}
[Token(Token = "0x20001F2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01F64", Offset = "0xA01F64")]
public class SECTR_TriggerLoader : SECTR_Loader
{
	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int loadedCount;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool chunksReferenced;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13440", Offset = "0xA13440")]
	public List<SECTR_Sector> Sectors;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13478", Offset = "0xA13478")]
	public bool UnloadOnExit;

	[Token(Token = "0x170000FC")]
	public override bool Loaded
	{
		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xD2491C", Offset = "0xD2491C", VA = "0xD2491C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xD24A30", Offset = "0xD24A30", VA = "0xD24A30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xD24B88", Offset = "0xD24B88", VA = "0xD24B88")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xD24CF8", Offset = "0xD24CF8", VA = "0xD24CF8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xD24BC0", Offset = "0xD24BC0", VA = "0xD24BC0")]
	private void _RefChunks()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xD24A54", Offset = "0xD24A54", VA = "0xD24A54")]
	private void _UnrefChunks()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xD24D1C", Offset = "0xD24D1C", VA = "0xD24D1C")]
	public SECTR_TriggerLoader()
	{
	}
}
[Token(Token = "0x20001F3")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA01F9C", Offset = "0xA01F9C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA01F9C", Offset = "0xA01F9C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA01F9C", Offset = "0xA01F9C")]
public class SECTR_Culler : MonoBehaviour
{
	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA134B0", Offset = "0xA134B0")]
	public bool CullEachChild;

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xD7C8E8", Offset = "0xD7C8E8", VA = "0xD7C8E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xD7C95C", Offset = "0xD7C95C", VA = "0xD7C95C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xD7C960", Offset = "0xD7C960", VA = "0xD7C960")]
	public SECTR_Culler()
	{
	}
}
[Token(Token = "0x20001F4")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA02034", Offset = "0xA02034")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02034", Offset = "0xA02034")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02034", Offset = "0xA02034")]
public class SECTR_CullingCamera : MonoBehaviour
{
	[Token(Token = "0x2000496")]
	private struct VisibilityNode
	{
		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SECTR_Sector sector;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SECTR_Portal portal;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Plane> frustumPlanes;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool forwardTraversal;

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xAE6530", Offset = "0xAE6530", VA = "0xAE6530")]
		public VisibilityNode(SECTR_CullingCamera cullingCamera, SECTR_Sector sector, SECTR_Portal portal, Plane[] frustumPlanes, bool forwardTraversal)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xAE653C", Offset = "0xAE653C", VA = "0xAE653C")]
		public VisibilityNode(SECTR_CullingCamera cullingCamera, SECTR_Sector sector, SECTR_Portal portal, List<Plane> frustumPlanes, bool forwardTraversal)
		{
		}
	}

	[Token(Token = "0x2000497")]
	private struct ClipVertex
	{
		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4 vertex;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float side;

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xAE6474", Offset = "0xAE6474", VA = "0xAE6474")]
		public ClipVertex(Vector4 vertex, float side)
		{
		}
	}

	[Token(Token = "0x2000498")]
	private struct ThreadCullData
	{
		[Token(Token = "0x20005A7")]
		public enum CullingModes
		{
			[Token(Token = "0x4002022")]
			None,
			[Token(Token = "0x4002023")]
			Graph,
			[Token(Token = "0x4002024")]
			Shadow
		}

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SECTR_Sector sector;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 cameraPos;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Plane> cullingPlanes;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<List<Plane>> occluderFrustums;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int baseMask;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float shadowDistance;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cullingSimpleCulling;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<SECTR_Member.Child> sectorShadowLights;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CullingModes cullingMode;

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xAE64C0", Offset = "0xAE64C0", VA = "0xAE64C0")]
		public ThreadCullData(SECTR_Sector sector, SECTR_CullingCamera cullingCamera, Vector3 cameraPos, List<Plane> cullingPlanes, List<List<Plane>> occluderFrustums, int baseMask, float shadowDistance, bool cullingSimpleCulling)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xAE64CC", Offset = "0xAE64CC", VA = "0xAE64CC")]
		public ThreadCullData(SECTR_Sector sector, Vector3 cameraPos, List<SECTR_Member.Child> sectorShadowLights)
		{
		}
	}

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera myCamera;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SECTR_Member cullingMember;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, SECTR_Member.Child> hiddenRenderers;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, SECTR_Member.Child> hiddenLights;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, SECTR_Member.Child> hiddenTerrains;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int renderersCulled;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int lightsCulled;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int terrainsCulled;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool didCull;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool runOnce;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SECTR_Sector> initialSectors;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Stack<VisibilityNode> nodeStack;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ClipVertex> portalVertices;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Plane> newFrustum;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Plane> cullingPlanes;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<List<Plane>> occluderFrustums;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<SECTR_Occluder, SECTR_Occluder> activeOccluders;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<ClipVertex> occluderVerts;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<SECTR_Member.Child, int> shadowLights;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<SECTR_Sector> shadowSectors;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<SECTR_Sector, List<SECTR_Member.Child>> shadowSectorTable;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<int, SECTR_Member.Child> visibleRenderers;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, SECTR_Member.Child> visibleLights;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<int, SECTR_Member.Child> visibleTerrains;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Stack<List<Plane>> frustumPool;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Stack<List<SECTR_Member.Child>> shadowLightPool;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Stack<Dictionary<int, SECTR_Member.Child>> threadVisibleListPool;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Stack<Dictionary<SECTR_Member.Child, int>> threadShadowLightPool;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Stack<List<Plane>> threadFrustumPool;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Stack<List<List<Plane>>> threadOccluderPool;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<Thread> workerThreads;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Queue<ThreadCullData> cullingWorkQueue;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int remainingThreadWork;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_CullingCamera> allCullingCameras;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA134E8", Offset = "0xA134E8")]
	public bool MultiCameraCulling;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13520", Offset = "0xA13520")]
	public bool SimpleCulling;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13558", Offset = "0xA13558")]
	public float GizmoDistance;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1359C", Offset = "0xA1359C")]
	public Material GizmoMaterial;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA135D4", Offset = "0xA135D4")]
	public bool CullInEditor;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1360C", Offset = "0xA1360C")]
	public bool CullShadows;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13648", Offset = "0xA13648")]
	public Camera cullingProxy;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13684", Offset = "0xA13684")]
	public int NumWorkerThreads;

	[Token(Token = "0x170000FD")]
	public static List<SECTR_CullingCamera> All
	{
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xD7C968", Offset = "0xD7C968", VA = "0xD7C968")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FE")]
	public int RenderersCulled
	{
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xD7C9D0", Offset = "0xD7C9D0", VA = "0xD7C9D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000FF")]
	public int LightsCulled
	{
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xD7C9D8", Offset = "0xD7C9D8", VA = "0xD7C9D8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000100")]
	public int TerrainsCulled
	{
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xD7C9E0", Offset = "0xD7C9E0", VA = "0xD7C9E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xD7C9E8", Offset = "0xD7C9E8", VA = "0xD7C9E8")]
	public void ResetStats()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xD7C9F8", Offset = "0xD7C9F8", VA = "0xD7C9F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xD7CBCC", Offset = "0xD7CBCC", VA = "0xD7CBCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xD7CF64", Offset = "0xD7CF64", VA = "0xD7CF64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xD7CF68", Offset = "0xD7CF68", VA = "0xD7CF68")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xD81C00", Offset = "0xD81C00", VA = "0xD81C00")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xD81C10", Offset = "0xD81C10", VA = "0xD81C10")]
	private void _CullingWorker()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xD80834", Offset = "0xD80834", VA = "0xD80834")]
	private void _FrustumCullSectorThread(ThreadCullData cullData)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xD8169C", Offset = "0xD8169C", VA = "0xD8169C")]
	private void _ShadowCullSectorThread(ThreadCullData cullData)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xD80670", Offset = "0xD80670", VA = "0xD80670")]
	private static void _FrustumCullSector(SECTR_Sector sector, Vector3 cameraPos, List<Plane> cullingPlanes, List<List<Plane>> occluderFrustums, int baseMask, float shadowDistance, bool forceGroupCull, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleLights, ref Dictionary<int, SECTR_Member.Child> visibleTerrains, ref Dictionary<SECTR_Member.Child, int> shadowLights)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xD81DC4", Offset = "0xD81DC4", VA = "0xD81DC4")]
	private static void _FrustumCull(SECTR_Member member, Vector3 cameraPos, List<Plane> frustumPlanes, List<List<Plane>> occluders, int baseMask, float shadowDistance, bool forceGroupCull, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleLights, ref Dictionary<int, SECTR_Member.Child> visibleTerrains, ref Dictionary<SECTR_Member.Child, int> shadowLights)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xD81558", Offset = "0xD81558", VA = "0xD81558")]
	private static void _ShadowCullSector(SECTR_Sector sector, List<SECTR_Member.Child> sectorShadowLights, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleTerrains)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xD82518", Offset = "0xD82518", VA = "0xD82518")]
	private static void _ShadowCull(SECTR_Member member, List<SECTR_Member.Child> shadowLights, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleTerrains)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xD823F4", Offset = "0xD823F4", VA = "0xD823F4")]
	private static bool _IsVisible(Bounds childBounds, List<Plane> frustumPlanes, int parentMask, List<List<Plane>> occluders)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xD7FBA8", Offset = "0xD7FBA8", VA = "0xD7FBA8")]
	private void _HideAllMembers()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xD7FFAC", Offset = "0xD7FFAC", VA = "0xD7FFAC")]
	private void _ApplyCulling(bool visible)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xD7CCC4", Offset = "0xD7CCC4", VA = "0xD7CCC4")]
	private void _UndoCulling()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xD80344", Offset = "0xD80344", VA = "0xD80344")]
	private void _BuildFrustumFromHull(Camera cullingCamera, bool forwardTraversal, List<ClipVertex> portalVertices, ref List<Plane> newFrustum)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xD82A84", Offset = "0xD82A84", VA = "0xD82A84")]
	public SECTR_CullingCamera()
	{
	}
}
[Token(Token = "0x20001F5")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA020CC", Offset = "0xA020CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA020CC", Offset = "0xA020CC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA020CC", Offset = "0xA020CC")]
public class SECTR_LOD : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000499")]
	public class LODEntry
	{
		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer lightmapSource;

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x10418E0", Offset = "0x10418E0", VA = "0x10418E0")]
		public LODEntry()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200049A")]
	public class LODSet
	{
		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<LODEntry> lodEntries;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float threshold;

		[Token(Token = "0x17000265")]
		public List<LODEntry> LODEntries
		{
			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0x10418E8", Offset = "0x10418E8", VA = "0x10418E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		public float Threshold
		{
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0x10418F0", Offset = "0x10418F0", VA = "0x10418F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0x10418F8", Offset = "0x10418F8", VA = "0x10418F8")]
			set
			{
			}
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x1041900", Offset = "0x1041900", VA = "0x1041900")]
		public LODEntry Add(GameObject gameObject, Renderer lightmapSource)
		{
			return null;
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x1041AA0", Offset = "0x1041AA0", VA = "0x1041AA0")]
		public void Remove(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x10419B0", Offset = "0x10419B0", VA = "0x10419B0")]
		public LODEntry GetEntry(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x1041BA0", Offset = "0x1041BA0", VA = "0x1041BA0")]
		public LODSet()
		{
		}
	}

	[Token(Token = "0x200049B")]
	[Flags]
	public enum SiblinglFlags
	{
		[Token(Token = "0x4001C9E")]
		Behaviors = 1,
		[Token(Token = "0x4001C9F")]
		Renderers = 2,
		[Token(Token = "0x4001CA0")]
		Lights = 4,
		[Token(Token = "0x4001CA1")]
		Colliders = 8,
		[Token(Token = "0x4001CA2")]
		RigidBodies = 0x10
	}

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA136C4", Offset = "0xA136C4")]
	private Vector3 boundsOffset;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA136FC", Offset = "0xA136FC")]
	private float boundsRadius;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA13734", Offset = "0xA13734")]
	private bool boundsUpdated;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int activeLOD;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool siblingsDisabled;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> toHide;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<LODEntry> toShow;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_LOD> allLODs;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<LODSet> LODs;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1376C", Offset = "0xA1376C")]
	public SiblinglFlags CullSiblings;

	[Token(Token = "0x17000101")]
	public static List<SECTR_LOD> All
	{
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x104068C", Offset = "0x104068C", VA = "0x104068C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x10406F4", Offset = "0x10406F4", VA = "0x10406F4")]
	public void SelectLOD(Camera renderCamera)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x10413A0", Offset = "0x10413A0", VA = "0x10413A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x10415A4", Offset = "0x10415A4", VA = "0x10415A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x1041630", Offset = "0x1041630", VA = "0x1041630")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x1040C7C", Offset = "0x1040C7C", VA = "0x1040C7C")]
	private void _ActivateLOD(int lodIndex)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x1040954", Offset = "0x1040954", VA = "0x1040954")]
	private void _CalculateBounds()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x10417A0", Offset = "0x10417A0", VA = "0x10417A0")]
	public SECTR_LOD()
	{
	}
}
[Token(Token = "0x20001F6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02164", Offset = "0xA02164")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02164", Offset = "0xA02164")]
public class SECTR_Occluder : SECTR_Hull
{
	[Token(Token = "0x200049C")]
	public enum OrientationAxis
	{
		[Token(Token = "0x4001CA4")]
		None,
		[Token(Token = "0x4001CA5")]
		XYZ,
		[Token(Token = "0x4001CA6")]
		XZ,
		[Token(Token = "0x4001CA7")]
		XY,
		[Token(Token = "0x4001CA8")]
		YZ
	}

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SECTR_Sector> currentSectors;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Occluder> allOccluders;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<SECTR_Sector, List<SECTR_Occluder>> occluderTable;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA137EC", Offset = "0xA137EC")]
	public OrientationAxis AutoOrient;

	[Token(Token = "0x17000102")]
	public static List<SECTR_Occluder> All
	{
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x10472D8", Offset = "0x10472D8", VA = "0x10472D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000103")]
	public SECTR_Member Member
	{
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x10473DC", Offset = "0x10473DC", VA = "0x10473DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000104")]
	public Vector3 MeshNormal
	{
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x10473E4", Offset = "0x10473E4", VA = "0x10473E4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x1047340", Offset = "0x1047340", VA = "0x1047340")]
	public static List<SECTR_Occluder> GetOccludersInSector(SECTR_Sector sector)
	{
		return null;
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x104740C", Offset = "0x104740C", VA = "0x104740C")]
	public Matrix4x4 GetCullingMatrix(Vector3 cameraPos)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x1047648", Offset = "0x1047648", VA = "0x1047648")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x1047720", Offset = "0x1047720", VA = "0x1047720")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x10477E8", Offset = "0x10477E8", VA = "0x10477E8")]
	private void _MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x1047B34", Offset = "0x1047B34", VA = "0x1047B34")]
	public SECTR_Occluder()
	{
	}
}
[Token(Token = "0x20001F7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA021EC", Offset = "0xA021EC")]
public class SECTR_AudioDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SECTR_AudioCueInstance chatterInstance;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13824", Offset = "0xA13824")]
	public SECTR_AudioCue SoftCue;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13864", Offset = "0xA13864")]
	public SECTR_AudioCue ChatterCue;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA138A4", Offset = "0xA138A4")]
	public SECTR_AudioCue GunshotCue;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA138E4", Offset = "0xA138E4")]
	public SECTR_AudioCue ExplosionCue;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13924", Offset = "0xA13924")]
	public GameObject AudioPrefab;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA1395C", Offset = "0xA1395C")]
	public float PrefabThrowSpeed;

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xD6DC08", Offset = "0xD6DC08", VA = "0xD6DC08", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xD6DF18", Offset = "0xD6DF18", VA = "0xD6DF18")]
	protected void ShowHUD(bool active)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xD6DFD8", Offset = "0xD6DFD8", VA = "0xD6DFD8")]
	protected void PlaySoft(bool active)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xD6E088", Offset = "0xD6E088", VA = "0xD6E088")]
	protected void PlayChatter(bool active)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xD6E1A8", Offset = "0xD6E1A8", VA = "0xD6E1A8")]
	protected void PlayGunshot(bool active)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xD6E258", Offset = "0xD6E258", VA = "0xD6E258")]
	protected void PlayExplosion(bool active)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xD6E308", Offset = "0xD6E308", VA = "0xD6E308")]
	protected void ThrowPrefab(bool active)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xD6E554", Offset = "0xD6E554", VA = "0xD6E554")]
	public SECTR_AudioDemoUI()
	{
	}
}
[Token(Token = "0x20001F8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02224", Offset = "0xA02224")]
public class SECTR_CompleteDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string originalDemoMessage;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "MultilineAttribute", RVA = "0xA13994", Offset = "0xA13994")]
	public string Unity4PerfMessage;

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xD7B7D0", Offset = "0xD7B7D0", VA = "0xD7B7D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xD7B958", Offset = "0xD7B958", VA = "0xD7B958", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xD7BA08", Offset = "0xD7BA08", VA = "0xD7BA08", Slot = "6")]
	protected override void OnGUI()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xD7BB10", Offset = "0xD7BB10", VA = "0xD7BB10")]
	public SECTR_CompleteDemoUI()
	{
	}
}
[Token(Token = "0x20001F9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA0225C", Offset = "0xA0225C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0225C", Offset = "0xA0225C")]
public class SECTR_CharacterMotor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200049D")]
	public class CharacterMotorMovement
	{
		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxForwardSpeed;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxSidewaysSpeed;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxBackwardsSpeed;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve slopeSpeedMultiplier;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxGroundAcceleration;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxAirAcceleration;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float gravity;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxFallSpeed;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float footstepDistance;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float pushPower;

		[NonSerialized]
		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CollisionFlags collisionFlags;

		[NonSerialized]
		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 velocity;

		[NonSerialized]
		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 frameVelocity;

		[NonSerialized]
		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 hitPoint;

		[NonSerialized]
		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 lastHitPoint;

		[NonSerialized]
		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PhysicMaterial hitMaterial;

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xD78F30", Offset = "0xD78F30", VA = "0xD78F30")]
		public CharacterMotorMovement()
		{
		}
	}

	[Token(Token = "0x200049E")]
	public enum MovementTransferOnJump
	{
		[Token(Token = "0x4001CBA")]
		None,
		[Token(Token = "0x4001CBB")]
		InitTransfer,
		[Token(Token = "0x4001CBC")]
		PermaTransfer,
		[Token(Token = "0x4001CBD")]
		PermaLocked
	}

	[Serializable]
	[Token(Token = "0x200049F")]
	public class CharacterMotorJumping
	{
		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float baseHeight;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float extraHeight;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float perpAmount;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float steepPerpAmount;

		[NonSerialized]
		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool jumping;

		[NonSerialized]
		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool holdingJumpButton;

		[NonSerialized]
		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lastStartTime;

		[NonSerialized]
		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lastButtonDownTime;

		[NonSerialized]
		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 jumpDir;

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xD79168", Offset = "0xD79168", VA = "0xD79168")]
		public CharacterMotorJumping()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004A0")]
	public class CharacterMotorMovingPlatform
	{
		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MovementTransferOnJump movementTransfer;

		[NonSerialized]
		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform hitPlatform;

		[NonSerialized]
		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform activePlatform;

		[NonSerialized]
		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 activeLocalPoint;

		[NonSerialized]
		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 activeGlobalPoint;

		[NonSerialized]
		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion activeLocalRotation;

		[NonSerialized]
		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Quaternion activeGlobalRotation;

		[NonSerialized]
		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Matrix4x4 lastMatrix;

		[NonSerialized]
		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 platformVelocity;

		[NonSerialized]
		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool newPlatform;

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xD79204", Offset = "0xD79204", VA = "0xD79204")]
		public CharacterMotorMovingPlatform()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004A1")]
	public class CharacterMotorSliding
	{
		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float slidingSpeed;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sidewaysControl;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedControl;

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xD7921C", Offset = "0xD7921C", VA = "0xD7921C")]
		public CharacterMotorSliding()
		{
		}
	}

	[Token(Token = "0x20004A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA044F0", Offset = "0xA044F0")]
	private sealed class <SubtractNewPlatformVelocity>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_CharacterMotor <>4__this;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <platform>5__2;

		[Token(Token = "0x17000267")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B49")]
			[Address(RVA = "0xD79438", Offset = "0xD79438", VA = "0xD79438", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0xD794A0", Offset = "0xD794A0", VA = "0xD794A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xD78C40", Offset = "0xD78C40", VA = "0xD78C40")]
		[DebuggerHidden]
		public <SubtractNewPlatformVelocity>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xD79244", Offset = "0xD79244", VA = "0xD79244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xD79248", Offset = "0xD79248", VA = "0xD79248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xD79440", Offset = "0xD79440", VA = "0xD79440", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canControl;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 lastGroundNormal;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform cachedTransform;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CharacterController cachedController;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastFootstepPosition;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhysicMaterial defaultHitMaterial;

	[NonSerialized]
	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 inputMoveDirection;

	[NonSerialized]
	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool inputJump;

	[NonSerialized]
	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool grounded;

	[NonSerialized]
	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 groundNormal;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA139A4", Offset = "0xA139A4")]
	public CharacterMotorMovement movement;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA139DC", Offset = "0xA139DC")]
	public CharacterMotorJumping jumping;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13A14", Offset = "0xA13A14")]
	public CharacterMotorMovingPlatform movingPlatform;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CharacterMotorSliding sliding;

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xD76964", Offset = "0xD76964", VA = "0xD76964")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xD76A08", Offset = "0xD76A08", VA = "0xD76A08")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xD7796C", Offset = "0xD7796C", VA = "0xD7796C")]
	private Vector3 ApplyInputVelocityChange(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xD77DE0", Offset = "0xD77DE0", VA = "0xD77DE0")]
	private Vector3 ApplyGravityAndJumping(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xD78814", Offset = "0xD78814", VA = "0xD78814")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xD783DC", Offset = "0xD783DC", VA = "0xD783DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F7FC", Offset = "0xA1F7FC")]
	private IEnumerator SubtractNewPlatformVelocity()
	{
		return null;
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xD78318", Offset = "0xD78318", VA = "0xD78318")]
	private bool MoveWithPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xD784E8", Offset = "0xD784E8", VA = "0xD784E8")]
	private Vector3 GetDesiredHorizontalVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xD7862C", Offset = "0xD7862C", VA = "0xD7862C")]
	private Vector3 AdjustGroundVelocityToNormal(Vector3 hVelocity, Vector3 groundNormal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xD783C0", Offset = "0xD783C0", VA = "0xD783C0")]
	private bool IsGroundedTest()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xD78744", Offset = "0xD78744", VA = "0xD78744")]
	private float GetMaxAcceleration(bool grounded)
	{
		return default(float);
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xD78770", Offset = "0xD78770", VA = "0xD78770")]
	private float CalculateJumpVerticalSpeed(float targetJumpHeight)
	{
		return default(float);
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xD7844C", Offset = "0xD7844C", VA = "0xD7844C")]
	private bool TooSteep()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xD78C6C", Offset = "0xD78C6C", VA = "0xD78C6C")]
	private float MaxSpeedInDirection(Vector3 desiredMovementDirection)
	{
		return default(float);
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xD78DD4", Offset = "0xD78DD4", VA = "0xD78DD4")]
	public SECTR_CharacterMotor()
	{
	}
}
[Token(Token = "0x20001FA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA022E4", Offset = "0xA022E4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA022E4", Offset = "0xA022E4")]
public class SECTR_DemoUI : MonoBehaviour
{
	[Token(Token = "0x20004A3")]
	protected enum WatermarkLocation
	{
		[Token(Token = "0x4001CDC")]
		UpperLeft,
		[Token(Token = "0x4001CDD")]
		UpperCenter,
		[Token(Token = "0x4001CDE")]
		UpperRight
	}

	[Token(Token = "0x20004A4")]
	protected delegate void DemoButtonPressedDelegate(bool active);

	[Token(Token = "0x20004A5")]
	private class DemoButton
	{
		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode key;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string activeHint;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string inactiveHint;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool active;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool pressed;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DemoButtonPressedDelegate demoButtonPressed;

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x1037E0C", Offset = "0x1037E0C", VA = "0x1037E0C")]
		public DemoButton(KeyCode key, string activeHint, string inactiveHint, DemoButtonPressedDelegate demoButtonPressed)
		{
		}
	}

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool passedIntro;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected SECTR_FPSController cachedController;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected GUIStyle demoButtonStyle;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected WatermarkLocation watermarkLocation;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<DemoButton> demoButtons;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13A4C", Offset = "0xA13A4C")]
	public Texture2D Watermark;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13A84", Offset = "0xA13A84")]
	public SECTR_GhostController PipController;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13ABC", Offset = "0xA13ABC")]
	[AttributeAttribute(Name = "MultilineAttribute", RVA = "0xA13ABC", Offset = "0xA13ABC")]
	public string DemoMessage;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13B08", Offset = "0xA13B08")]
	public bool CaptureMode;

	[Token(Token = "0x17000105")]
	public bool PipActive
	{
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x1036ED4", Offset = "0x1036ED4", VA = "0x1036ED4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x1036F68", Offset = "0x1036F68", VA = "0x1036F68", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x10371D0", Offset = "0x10371D0", VA = "0x10371D0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x1037274", Offset = "0x1037274", VA = "0x1037274", Slot = "6")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x1037110", Offset = "0x1037110", VA = "0x1037110")]
	protected void AddButton(KeyCode key, string activeHint, string inactiveHint, DemoButtonPressedDelegate buttonPressedDelegate)
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x1037E74", Offset = "0x1037E74", VA = "0x1037E74")]
	private void PressedPip(bool active)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x1037EE4", Offset = "0x1037EE4", VA = "0x1037EE4")]
	public SECTR_DemoUI()
	{
	}
}
[Token(Token = "0x20001FB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA0236C", Offset = "0xA0236C")]
public abstract class SECTR_FPController : MonoBehaviour
{
	[Token(Token = "0x20004A6")]
	protected class TrackedTouch
	{
		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 startPos;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 currentPos;

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x1039868", Offset = "0x1039868", VA = "0x1039868")]
		public TrackedTouch()
		{
		}
	}

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _mouseAbsolute;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 _smoothMouse;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 _clampInDegrees;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _targetDirection;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool focused;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Dictionary<int, TrackedTouch> _touches;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13B40", Offset = "0xA13B40")]
	public bool LockCursor;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13B78", Offset = "0xA13B78")]
	public Vector2 Sensitivity;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13BB0", Offset = "0xA13BB0")]
	public Vector2 Smoothing;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13BE8", Offset = "0xA13BE8")]
	public float TouchScreenLookScale;

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x1038AE8", Offset = "0x1038AE8", VA = "0x1038AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x1038BB8", Offset = "0x1038BB8", VA = "0x1038BB8")]
	private void OnApplicationFocus(bool focused)
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x1038BC4", Offset = "0x1038BC4", VA = "0x1038BC4", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x10395D0", Offset = "0x10395D0", VA = "0x10395D0")]
	protected Vector2 GetScreenJoystick(bool left)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x1039100", Offset = "0x1039100", VA = "0x1039100")]
	private void _UpdateTouches()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x1039870", Offset = "0x1039870", VA = "0x1039870")]
	protected SECTR_FPController()
	{
	}
}
[Token(Token = "0x20001FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA023D0", Offset = "0xA023D0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA023D0", Offset = "0xA023D0")]
public class SECTR_FPSController : SECTR_FPController
{
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SECTR_CharacterMotor cachedMotor;

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x1039970", Offset = "0x1039970", VA = "0x1039970")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x10399C8", Offset = "0x10399C8", VA = "0x10399C8", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x1039D4C", Offset = "0x1039D4C", VA = "0x1039D4C")]
	private Vector3 ProjectOntoPlane(Vector3 v, Vector3 normal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x1039E14", Offset = "0x1039E14", VA = "0x1039E14")]
	private Vector3 ConstantSlerp(Vector3 from, Vector3 to, float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x1039F20", Offset = "0x1039F20", VA = "0x1039F20")]
	public SECTR_FPSController()
	{
	}
}
[Token(Token = "0x20001FD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02458", Offset = "0xA02458")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA02458", Offset = "0xA02458")]
public class SECTR_FogDisable : MonoBehaviour
{
	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool previousFogState;

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x1039F24", Offset = "0x1039F24", VA = "0x1039F24")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x1039F58", Offset = "0x1039F58", VA = "0x1039F58")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x1039F64", Offset = "0x1039F64", VA = "0x1039F64")]
	public SECTR_FogDisable()
	{
	}
}
[Token(Token = "0x20001FE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA024CC", Offset = "0xA024CC")]
public class SECTR_GhostController : SECTR_FPController
{
	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13C20", Offset = "0xA13C20")]
	public float FlySpeed;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13C58", Offset = "0xA13C58")]
	public float AccelerationRatio;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13C90", Offset = "0xA13C90")]
	public float SlowDownRatio;

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x103B1F0", Offset = "0x103B1F0", VA = "0x103B1F0", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x103B71C", Offset = "0x103B71C", VA = "0x103B71C")]
	public SECTR_GhostController()
	{
	}
}
[Token(Token = "0x20001FF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02504", Offset = "0xA02504")]
public class SECTR_Wanderer : MonoBehaviour
{
	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<SECTR_Graph.Node> path;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> waypoints;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentWaypointIndex;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0xA13CC8", Offset = "0xA13CC8")]
	public float MovementSpeed;

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xD25A58", Offset = "0xD25A58", VA = "0xD25A58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xD26174", Offset = "0xD26174", VA = "0xD26174")]
	public SECTR_Wanderer()
	{
	}
}
[Token(Token = "0x2000200")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA0253C", Offset = "0xA0253C")]
public class SECTR_StreamDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "MultilineAttribute", RVA = "0xA13D00", Offset = "0xA13D00")]
	public string NoExportMessage;

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xD24400", Offset = "0xD24400", VA = "0xD24400", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xD244A8", Offset = "0xD244A8", VA = "0xD244A8", Slot = "6")]
	protected override void OnGUI()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xD246AC", Offset = "0xD246AC", VA = "0xD246AC")]
	public SECTR_StreamDemoUI()
	{
	}
}
[Token(Token = "0x2000201")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02574", Offset = "0xA02574")]
public class SECTR_VisDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string originalDemoMessage;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "MultilineAttribute", RVA = "0xA13D10", Offset = "0xA13D10")]
	public string Unity4PerfMessage;

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xD25308", Offset = "0xD25308", VA = "0xD25308")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xD25490", Offset = "0xD25490", VA = "0xD25490", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xD25540", Offset = "0xD25540", VA = "0xD25540", Slot = "6")]
	protected override void OnGUI()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xD25984", Offset = "0xD25984", VA = "0xD25984")]
	protected void ToggleCulling(bool active)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xD25A50", Offset = "0xD25A50", VA = "0xD25A50")]
	public SECTR_VisDemoUI()
	{
	}
}
[Token(Token = "0x2000202")]
public class CrabCameraScript : MonoBehaviour
{
	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float turnSpeed;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject camera;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cameraAngleX;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float cameraAngleY;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cameraDistance;

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xFFF9F8", Offset = "0xFFF9F8", VA = "0xFFF9F8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xFFFAF0", Offset = "0xFFFAF0", VA = "0xFFFAF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xFFFC5C", Offset = "0xFFFC5C", VA = "0xFFFC5C")]
	public void CameraRotationX()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xFFFD54", Offset = "0xFFFD54", VA = "0xFFFD54")]
	public void CameraRotationY()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xFFFE4C", Offset = "0xFFFE4C", VA = "0xFFFE4C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xFFFF6C", Offset = "0xFFFF6C", VA = "0xFFFF6C")]
	public CrabCameraScript()
	{
	}
}
[Token(Token = "0x2000203")]
public class CrabCharacter : MonoBehaviour
{
	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator crabAnimator;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float upDown;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turn;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forward;

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xFFFF90", Offset = "0xFFFF90", VA = "0xFFFF90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xFFFFE8", Offset = "0xFFFFE8", VA = "0xFFFFE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x100008C", Offset = "0x100008C", VA = "0x100008C")]
	public void Attack()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x10000E8", Offset = "0x10000E8", VA = "0x10000E8")]
	public void Hit()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x1000144", Offset = "0x1000144", VA = "0x1000144")]
	public void Defense(bool tf)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x10001B0", Offset = "0x10001B0", VA = "0x10001B0")]
	public void AimDefense(bool tf)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x100021C", Offset = "0x100021C", VA = "0x100021C")]
	public void Jump()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x1000278", Offset = "0x1000278", VA = "0x1000278")]
	public void Open()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xFFFFEC", Offset = "0xFFFFEC", VA = "0xFFFFEC")]
	public void Move()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x10002D4", Offset = "0x10002D4", VA = "0x10002D4")]
	public CrabCharacter()
	{
	}
}
[Token(Token = "0x2000204")]
public class CrabUserController : MonoBehaviour
{
	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CrabCharacter crabCharacter;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float crouchSpeed;

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x10002DC", Offset = "0x10002DC", VA = "0x10002DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x1000334", Offset = "0x1000334", VA = "0x1000334")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x100059C", Offset = "0x100059C", VA = "0x100059C")]
	public CrabUserController()
	{
	}
}
[Token(Token = "0x2000205")]
public class JsonNetSample : MonoBehaviour
{
	[Token(Token = "0x20004A7")]
	public class Product
	{
		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime ExpiryDate;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public decimal Price;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] Sizes;

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xEB885C", Offset = "0xEB885C", VA = "0xEB885C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xEB89AC", Offset = "0xEB89AC", VA = "0xEB89AC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xEB872C", Offset = "0xEB872C", VA = "0xEB872C")]
		public Product()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004A8")]
	public class CharacterListItem
	{
		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B098", Offset = "0xA1B098")]
		private int <Id>k__BackingField;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B0A8", Offset = "0xA1B0A8")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B0B8", Offset = "0xA1B0B8")]
		private int <Level>k__BackingField;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B0C8", Offset = "0xA1B0C8")]
		private string <Class>k__BackingField;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B0D8", Offset = "0xA1B0D8")]
		private string <Sex>k__BackingField;

		[Token(Token = "0x17000269")]
		public int Id
		{
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0xEB8798", Offset = "0xEB8798", VA = "0xEB8798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23A64", Offset = "0xA23A64")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B56")]
			[Address(RVA = "0xEB87A0", Offset = "0xEB87A0", VA = "0xEB87A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23A74", Offset = "0xA23A74")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public string Name
		{
			[Token(Token = "0x6001B57")]
			[Address(RVA = "0xEB87A8", Offset = "0xEB87A8", VA = "0xEB87A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23A84", Offset = "0xA23A84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0xEB87B0", Offset = "0xEB87B0", VA = "0xEB87B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23A94", Offset = "0xA23A94")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public int Level
		{
			[Token(Token = "0x6001B59")]
			[Address(RVA = "0xEB87B8", Offset = "0xEB87B8", VA = "0xEB87B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23AA4", Offset = "0xA23AA4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0xEB87C0", Offset = "0xEB87C0", VA = "0xEB87C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23AB4", Offset = "0xA23AB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public string Class
		{
			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0xEB87C8", Offset = "0xEB87C8", VA = "0xEB87C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23AC4", Offset = "0xA23AC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0xEB87D0", Offset = "0xEB87D0", VA = "0xEB87D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23AD4", Offset = "0xA23AD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public string Sex
		{
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0xEB87D8", Offset = "0xEB87D8", VA = "0xEB87D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23AE4", Offset = "0xA23AE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0xEB87E0", Offset = "0xEB87E0", VA = "0xEB87E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23AF4", Offset = "0xA23AF4")]
			set
			{
			}
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xEB87E8", Offset = "0xEB87E8", VA = "0xEB87E8")]
		public CharacterListItem()
		{
		}
	}

	[Token(Token = "0x20004A9")]
	public class Movie
	{
		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B0E8", Offset = "0xA1B0E8")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B0F8", Offset = "0xA1B0F8")]
		private string <Description>k__BackingField;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B108", Offset = "0xA1B108")]
		private string <Classification>k__BackingField;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B118", Offset = "0xA1B118")]
		private string <Studio>k__BackingField;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B128", Offset = "0xA1B128")]
		private DateTime? <ReleaseDate>k__BackingField;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1B138", Offset = "0xA1B138")]
		private List<string> <ReleaseCountries>k__BackingField;

		[Token(Token = "0x1700026E")]
		public string Name
		{
			[Token(Token = "0x6001B60")]
			[Address(RVA = "0xEB87F0", Offset = "0xEB87F0", VA = "0xEB87F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23B04", Offset = "0xA23B04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B61")]
			[Address(RVA = "0xEB87F8", Offset = "0xEB87F8", VA = "0xEB87F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23B14", Offset = "0xA23B14")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public string Description
		{
			[Token(Token = "0x6001B62")]
			[Address(RVA = "0xEB8800", Offset = "0xEB8800", VA = "0xEB8800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23B24", Offset = "0xA23B24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B63")]
			[Address(RVA = "0xEB8808", Offset = "0xEB8808", VA = "0xEB8808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23B34", Offset = "0xA23B34")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public string Classification
		{
			[Token(Token = "0x6001B64")]
			[Address(RVA = "0xEB8810", Offset = "0xEB8810", VA = "0xEB8810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23B44", Offset = "0xA23B44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B65")]
			[Address(RVA = "0xEB8818", Offset = "0xEB8818", VA = "0xEB8818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23B54", Offset = "0xA23B54")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public string Studio
		{
			[Token(Token = "0x6001B66")]
			[Address(RVA = "0xEB8820", Offset = "0xEB8820", VA = "0xEB8820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23B64", Offset = "0xA23B64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B67")]
			[Address(RVA = "0xEB8828", Offset = "0xEB8828", VA = "0xEB8828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23B74", Offset = "0xA23B74")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public DateTime? ReleaseDate
		{
			[Token(Token = "0x6001B68")]
			[Address(RVA = "0xEB8830", Offset = "0xEB8830", VA = "0xEB8830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23B84", Offset = "0xA23B84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B69")]
			[Address(RVA = "0xEB883C", Offset = "0xEB883C", VA = "0xEB883C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23B94", Offset = "0xA23B94")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public List<string> ReleaseCountries
		{
			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0xEB8844", Offset = "0xEB8844", VA = "0xEB8844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23BA4", Offset = "0xA23BA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0xEB884C", Offset = "0xEB884C", VA = "0xEB884C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA23BB4", Offset = "0xA23BB4")]
			set
			{
			}
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xEB8854", Offset = "0xEB8854", VA = "0xEB8854")]
		public Movie()
		{
		}
	}

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Output;

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xEB7EDC", Offset = "0xEB7EDC", VA = "0xEB7EDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xEB8694", Offset = "0xEB8694", VA = "0xEB8694")]
	private void WriteLine(string msg)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xEB7F7C", Offset = "0xEB7F7C", VA = "0xEB7F7C")]
	private void TestJson()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xEB8060", Offset = "0xEB8060", VA = "0xEB8060")]
	private void SerailizeJson()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xEB81B8", Offset = "0xEB81B8", VA = "0xEB81B8")]
	private void DeserializeJson()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xEB8258", Offset = "0xEB8258", VA = "0xEB8258")]
	private void LinqToJson()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xEB83AC", Offset = "0xEB83AC", VA = "0xEB83AC")]
	private void JsonPath()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xEB8790", Offset = "0xEB8790", VA = "0xEB8790")]
	public JsonNetSample()
	{
	}
}
[Token(Token = "0x2000206")]
public class SliderData : MonoBehaviour
{
	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13D20", Offset = "0xA13D20")]
	public float outputValue;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13D58", Offset = "0xA13D58")]
	public Vector3 sliderAxis;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ConfigurableJoint myJoint;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float theLimit;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject startPoint;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float rawValue;

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xCE51FC", Offset = "0xCE51FC", VA = "0xCE51FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xCE53E4", Offset = "0xCE53E4", VA = "0xCE53E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xCE542C", Offset = "0xCE542C", VA = "0xCE542C")]
	private void CalcuateSlider()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xCE5528", Offset = "0xCE5528", VA = "0xCE5528")]
	public SliderData()
	{
	}
}
[Token(Token = "0x2000207")]
public class SliderResult : MonoBehaviour
{
	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color From;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color To;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer Result;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SliderData Slider;

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xCE5588", Offset = "0xCE5588", VA = "0xCE5588")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xCE55F8", Offset = "0xCE55F8", VA = "0xCE55F8")]
	public SliderResult()
	{
	}
}
[Token(Token = "0x2000208")]
public class VRGrabChestScript : MonoBehaviour
{
	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13D90", Offset = "0xA13D90")]
	public VRGrabObject handle;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13DC8", Offset = "0xA13DC8")]
	public List<VRGrabObject> objectsInChest;

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xE74F08", Offset = "0xE74F08", VA = "0xE74F08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xE74FA4", Offset = "0xE74FA4", VA = "0xE74FA4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xE75184", Offset = "0xE75184", VA = "0xE75184")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xE752CC", Offset = "0xE752CC", VA = "0xE752CC")]
	private void Open()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xE750EC", Offset = "0xE750EC", VA = "0xE750EC")]
	private void Shut()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xE75360", Offset = "0xE75360", VA = "0xE75360")]
	public VRGrabChestScript()
	{
	}
}
[Token(Token = "0x2000209")]
public class VRGrabObject : MonoBehaviour
{
	[Token(Token = "0x20004AA")]
	public delegate void Grabbed();

	[Token(Token = "0x20004AB")]
	public delegate void Dropped();

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA13E00", Offset = "0xA13E00")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13E00", Offset = "0xA13E00")]
	public bool teleportToHand;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13E60", Offset = "0xA13E60")]
	public bool alwaysKinematic;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13E98", Offset = "0xA13E98")]
	public bool isSticky;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13ED0", Offset = "0xA13ED0")]
	public bool isLocked;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA13F08", Offset = "0xA13F08")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13F08", Offset = "0xA13F08")]
	public bool isTool;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13F68", Offset = "0xA13F68")]
	public Vector3 rotationOverride;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13FA0", Offset = "0xA13FA0")]
	public bool flipInLeftHand;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA13FD8", Offset = "0xA13FD8")]
	public Vector3 positionOverride;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14010", Offset = "0xA14010")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14010", Offset = "0xA14010")]
	public bool isHandle;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14070", Offset = "0xA14070")]
	public float breakDistance;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA140A8", Offset = "0xA140A8")]
	public Rigidbody attachedTo;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA140E0", Offset = "0xA140E0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA140E0", Offset = "0xA140E0")]
	public bool canBeThrown;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14140", Offset = "0xA14140")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14140", Offset = "0xA14140")]
	public float throwForceMultiplier;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int sampleCount;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14194", Offset = "0xA14194")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14194", Offset = "0xA14194")]
	public float scaleMultiplier;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent uGrabEvent;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent uDropEvent;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SECTR_AudioCue grabSound;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SECTR_AudioCue dropSound;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform yourParent;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform whoHasMe;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<Vector3> positions;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14214", Offset = "0xA14214")]
	public bool isSelected;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool isGrabbed;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public VRSimpleGrabSystem grabScript;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Rigidbody yourBody;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool noRange;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 yourScale;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 lastpos;

	[Token(Token = "0x14000016")]
	public event Grabbed GrabE
	{
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xE753F0", Offset = "0xE753F0", VA = "0xE753F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F860", Offset = "0xA1F860")]
		add
		{
		}
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xE75494", Offset = "0xE75494", VA = "0xE75494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F870", Offset = "0xA1F870")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event Dropped DropE
	{
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xE75538", Offset = "0xE75538", VA = "0xE75538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F880", Offset = "0xA1F880")]
		add
		{
		}
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xE755DC", Offset = "0xE755DC", VA = "0xE755DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1F890", Offset = "0xA1F890")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xE75680", Offset = "0xE75680", VA = "0xE75680")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xE75718", Offset = "0xE75718", VA = "0xE75718")]
	private void GrabbingAltFunction()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xE75828", Offset = "0xE75828", VA = "0xE75828")]
	private void DroppingAltFunction()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xE758EC", Offset = "0xE758EC", VA = "0xE758EC")]
	public void AdjustScale(bool restore)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xE75924", Offset = "0xE75924", VA = "0xE75924")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xE75B48", Offset = "0xE75B48", VA = "0xE75B48")]
	private void SoftAttachMove()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xE75978", Offset = "0xE75978", VA = "0xE75978")]
	private void TrackVelocity()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xE75E78", Offset = "0xE75E78", VA = "0xE75E78")]
	public void PickUp(Transform chg)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xE761E8", Offset = "0xE761E8", VA = "0xE761E8")]
	public void Throw()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xE761EC", Offset = "0xE761EC", VA = "0xE761EC")]
	public void AddForce()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xE75D74", Offset = "0xE75D74", VA = "0xE75D74")]
	public void InstantDrop()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xE7676C", Offset = "0xE7676C", VA = "0xE7676C")]
	public void Drop()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xE76348", Offset = "0xE76348", VA = "0xE76348")]
	public Vector3 GetWorldVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xE768B0", Offset = "0xE768B0", VA = "0xE768B0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xE76914", Offset = "0xE76914", VA = "0xE76914")]
	public VRGrabObject()
	{
	}
}
[Token(Token = "0x200020A")]
public class VRGrabThrowDispenser : MonoBehaviour
{
	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRGrabObject dispensingObject;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VRGrabObject currentObject;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool respawnOnDeath;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float particleDelay;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float respawnDelay;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject respawnEffect;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SECTR_AudioCue respawnSound;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject myRespawnEffect;

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xE76A38", Offset = "0xE76A38", VA = "0xE76A38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xE76A3C", Offset = "0xE76A3C", VA = "0xE76A3C")]
	private void JustSpawn()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xE76C6C", Offset = "0xE76C6C", VA = "0xE76C6C")]
	private void CreateAndParentObject()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xE76F00", Offset = "0xE76F00", VA = "0xE76F00")]
	private void ParticleEffectDelayed()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xE7708C", Offset = "0xE7708C", VA = "0xE7708C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xE77154", Offset = "0xE77154", VA = "0xE77154")]
	private void ObjectGrabed()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xE7721C", Offset = "0xE7721C", VA = "0xE7721C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xE772AC", Offset = "0xE772AC", VA = "0xE772AC")]
	public VRGrabThrowDispenser()
	{
	}
}
[Token(Token = "0x200020B")]
public class VRGrabThrowPocket : MonoBehaviour
{
	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1424C", Offset = "0xA1424C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1424C", Offset = "0xA1424C")]
	public string searchTag;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA142AC", Offset = "0xA142AC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA142AC", Offset = "0xA142AC")]
	public VRGrabObject correctObject;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1430C", Offset = "0xA1430C")]
	public UnityEvent myEvent;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14344", Offset = "0xA14344")]
	public bool lockObject;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1437C", Offset = "0xA1437C")]
	public bool centerObject;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA143B4", Offset = "0xA143B4")]
	public bool scaleObject;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA143EC", Offset = "0xA143EC")]
	public VRGrabObject slottedObject;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hasObject;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 originalScale;

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xE772B4", Offset = "0xE772B4", VA = "0xE772B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xE773C4", Offset = "0xE773C4", VA = "0xE773C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xE77474", Offset = "0xE77474", VA = "0xE77474")]
	private void LoseObject()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xE77518", Offset = "0xE77518", VA = "0xE77518")]
	private void GainObject()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xE77674", Offset = "0xE77674", VA = "0xE77674")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xE77730", Offset = "0xE77730", VA = "0xE77730")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xE777F8", Offset = "0xE777F8", VA = "0xE777F8")]
	public VRGrabThrowPocket()
	{
	}
}
[Token(Token = "0x200020C")]
public class VRSimpleGrabSystem : MonoBehaviour
{
	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14424", Offset = "0xA14424")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14424", Offset = "0xA14424")]
	public bool hideInGrab;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14484", Offset = "0xA14484")]
	public Renderer[] objectsToHide;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA144BC", Offset = "0xA144BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA144BC", Offset = "0xA144BC")]
	public bool isLeft;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool useRanged;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1451C", Offset = "0xA1451C")]
	public bool alwaysTeleportToHand;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14554", Offset = "0xA14554")]
	public bool rangedOnHandles;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1458C", Offset = "0xA1458C")]
	public float grabDistance;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA145C4", Offset = "0xA145C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA145C4", Offset = "0xA145C4")]
	public GameObject grabTrackingVisual;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14624", Offset = "0xA14624")]
	public GameObject pickVisual;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CharacterController charController;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject rangedGrabPoint;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isStuck;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1465C", Offset = "0xA1465C")]
	public OVRInput.Controller myController;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public OVRInput.Button GrabButton;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14694", Offset = "0xA14694")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA14694", Offset = "0xA14694")]
	public bool inGrab;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA146F4", Offset = "0xA146F4")]
	public VRGrabObject pickedObject;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform grabTransform;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1472C", Offset = "0xA1472C")]
	public VRGrabObject grabObject;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool inGrabRange;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Ray ray;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 lastPos;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 vel;

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xE7F164", Offset = "0xE7F164", VA = "0xE7F164")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xE7F354", Offset = "0xE7F354", VA = "0xE7F354")]
	private void UsingOVRTouch()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xE7F7F8", Offset = "0xE7F7F8", VA = "0xE7F7F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xE7FC44", Offset = "0xE7FC44", VA = "0xE7FC44")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xE7FE5C", Offset = "0xE7FE5C", VA = "0xE7FE5C")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xE7651C", Offset = "0xE7651C", VA = "0xE7651C")]
	public void DropImmediate()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xE7F438", Offset = "0xE7F438", VA = "0xE7F438")]
	public void Drop()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xE7FF9C", Offset = "0xE7FF9C", VA = "0xE7FF9C")]
	public void DelayNulls()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xE7F500", Offset = "0xE7F500", VA = "0xE7F500")]
	public void Grab()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xE7F914", Offset = "0xE7F914", VA = "0xE7F914")]
	private void RangeGrab()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xE7FFCC", Offset = "0xE7FFCC", VA = "0xE7FFCC")]
	public void PickVisualShow(Vector3 where)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xE7F224", Offset = "0xE7F224", VA = "0xE7F224")]
	public void PickVisualHide()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xE7F2C0", Offset = "0xE7F2C0", VA = "0xE7F2C0")]
	public void TrackingVisualHide()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xE800B4", Offset = "0xE800B4", VA = "0xE800B4")]
	public void TrackingVisualShow()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xE80148", Offset = "0xE80148", VA = "0xE80148")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xE7FF18", Offset = "0xE7FF18", VA = "0xE7FF18")]
	public void ToggleHideInGrab(bool visual, bool forceHide = false)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xE80178", Offset = "0xE80178", VA = "0xE80178")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xE7FDC8", Offset = "0xE7FDC8", VA = "0xE7FDC8")]
	private void ObjectIsSelected(bool toOn)
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xE80290", Offset = "0xE80290", VA = "0xE80290")]
	public VRSimpleGrabSystem()
	{
	}
}
[Token(Token = "0x200020D")]
public class VRMovementOculus : MonoBehaviour
{
	[Token(Token = "0x20004AC")]
	public enum eControllerType
	{
		[Token(Token = "0x4001CF7")]
		Left,
		[Token(Token = "0x4001CF8")]
		Right,
		[Token(Token = "0x4001CF9")]
		Both
	}

	[Token(Token = "0x20004AD")]
	public enum eHMD
	{
		[Token(Token = "0x4001CFB")]
		Rift,
		[Token(Token = "0x4001CFC")]
		Go
	}

	[Token(Token = "0x20004AE")]
	public enum eMovementMode
	{
		[Token(Token = "0x4001CFE")]
		Flight,
		[Token(Token = "0x4001CFF")]
		Grounded,
		[Token(Token = "0x4001D00")]
		None,
		[Token(Token = "0x4001D01")]
		NoneWithGravity,
		[Token(Token = "0x4001D02")]
		Remote,
		[Token(Token = "0x4001D03")]
		Controller,
		[Token(Token = "0x4001D04")]
		Keyboard
	}

	[Token(Token = "0x20004AF")]
	public struct InputData
	{
		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool pressed;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform selectedController;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isLeft;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isRight;
	}

	[Token(Token = "0x20004B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04500", Offset = "0xA04500")]
	private sealed class <Start>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRMovementOculus <>4__this;

		[Token(Token = "0x17000274")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B78")]
			[Address(RVA = "0xE7A55C", Offset = "0xE7A55C", VA = "0xE7A55C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0xE7A5C4", Offset = "0xE7A5C4", VA = "0xE7A5C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xE78C74", Offset = "0xE78C74", VA = "0xE78C74")]
		[DebuggerHidden]
		public <Start>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xE7A37C", Offset = "0xE7A37C", VA = "0xE7A37C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xE7A380", Offset = "0xE7A380", VA = "0xE7A380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xE7A564", Offset = "0xE7A564", VA = "0xE7A564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14764", Offset = "0xA14764")]
	public eHMD oculusType;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA1479C", Offset = "0xA1479C")]
	public OVRInput.Controller defaultLeft;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA147AC", Offset = "0xA147AC")]
	public OVRInput.Controller defaultRight;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA147BC", Offset = "0xA147BC")]
	public eControllerType ControlsOn;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRInput.Button ForwardButton;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public OVRInput.Button BackwardButton;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA147F4", Offset = "0xA147F4")]
	public bool canMove;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public eMovementMode MovementMode;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool gravityInDebug;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1482C", Offset = "0xA1482C")]
	public bool headIsForward;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float moveSpeed;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float PlayerGravity;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14864", Offset = "0xA14864")]
	public float basicAcceleration;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1487C", Offset = "0xA1487C")]
	public float fadeTime;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool accelSpeed;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float decay;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float acc;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA148B4", Offset = "0xA148B4")]
	public CharacterController yourRig;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool AutoAssignTheRest;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform headRig;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform leftController;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform rightController;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VRFadeScript myFade;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float curSpeed;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool gravityOverRide;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA148EC", Offset = "0xA148EC")]
	public bool mainMovementOverRide;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform selectedController;

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xE78C04", Offset = "0xE78C04", VA = "0xE78C04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F8A0", Offset = "0xA1F8A0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xE78CA0", Offset = "0xE78CA0", VA = "0xE78CA0")]
	public void ReCenter()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xE78D78", Offset = "0xE78D78", VA = "0xE78D78")]
	public float GetHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xE78DF4", Offset = "0xE78DF4", VA = "0xE78DF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xE792A4", Offset = "0xE792A4", VA = "0xE792A4")]
	public void ApplyGravity()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xE7971C", Offset = "0xE7971C", VA = "0xE7971C")]
	public float GetGravity()
	{
		return default(float);
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xE79404", Offset = "0xE79404", VA = "0xE79404")]
	private void MoveInputSystem()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xE79878", Offset = "0xE79878", VA = "0xE79878")]
	public void AdvancedMove(Transform thisController, float speed)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xE78E7C", Offset = "0xE78E7C", VA = "0xE78E7C")]
	public void DebugMovement()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xE79758", Offset = "0xE79758", VA = "0xE79758")]
	private float GetAxisFromButton(OVRInput.Button theButton, OVRInput.Controller theController, bool isPositive = true)
	{
		return default(float);
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xE79A6C", Offset = "0xE79A6C", VA = "0xE79A6C")]
	public void RotateByDegrees(float degrees)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xE79B90", Offset = "0xE79B90", VA = "0xE79B90")]
	public InputData InputReturnGet(OVRInput.Button myButton)
	{
		return default(InputData);
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xE79E20", Offset = "0xE79E20", VA = "0xE79E20")]
	public InputData InputReturnDown(OVRInput.Button myButton)
	{
		return default(InputData);
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xE7A0B0", Offset = "0xE7A0B0", VA = "0xE7A0B0")]
	public InputData InputReturnUp(OVRInput.Button myButton)
	{
		return default(InputData);
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xE7A340", Offset = "0xE7A340", VA = "0xE7A340")]
	public VRMovementOculus()
	{
	}
}
[Token(Token = "0x200020E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA025AC", Offset = "0xA025AC")]
public class LineArcSystem : MonoBehaviour
{
	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer myLine;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] thePoints;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 curveOffset;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA148FC", Offset = "0xA148FC")]
	public float smoothness;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14918", Offset = "0xA14918")]
	public float AppogeePoint;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14930", Offset = "0xA14930")]
	public float Alpha;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer cachedRenderer;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14948", Offset = "0xA14948")]
	public bool TestMode;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LineStart;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform LineEnd;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color TestColor;

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xCA8F28", Offset = "0xCA8F28", VA = "0xCA8F28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xCA8FA8", Offset = "0xCA8FA8", VA = "0xCA8FA8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xCA904C", Offset = "0xCA904C", VA = "0xCA904C")]
	public void CreateLine(Vector3 start, Vector3 end, Color yourColor)
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xCA95DC", Offset = "0xCA95DC", VA = "0xCA95DC")]
	public void SetColor(Color chg)
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xCA96C0", Offset = "0xCA96C0", VA = "0xCA96C0")]
	public void HideLine()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xCA9200", Offset = "0xCA9200", VA = "0xCA9200")]
	public Vector3 LerpByDistance(Vector3 start, Vector3 end, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xCA92F8", Offset = "0xCA92F8", VA = "0xCA92F8")]
	public static Vector3[] MakeSmoothCurve(Vector3[] arrayToCurve, float smoothness)
	{
		return null;
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xCA96E0", Offset = "0xCA96E0", VA = "0xCA96E0")]
	public LineArcSystem()
	{
	}
}
[Token(Token = "0x200020F")]
public class TeleportThrower : MonoBehaviour
{
	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA14980", Offset = "0xA14980")]
	public bool isSelected;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14990", Offset = "0xA14990")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14990", Offset = "0xA14990")]
	public float addedThrowForce;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool stayKinematic;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool TeleportOnContact;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool sticksToObjects;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LookTag;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int MAX_COUNT;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody yourBody;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA149E4", Offset = "0xA149E4")]
	public VROculusThrowTeleporter myTeleporter;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> positions;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasHelper;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 curpos;

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xDF5C14", Offset = "0xDF5C14", VA = "0xDF5C14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xDF5D5C", Offset = "0xDF5D5C", VA = "0xDF5D5C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xDF5D6C", Offset = "0xDF5D6C", VA = "0xDF5D6C")]
	private void TrackVelocity()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xDF5E18", Offset = "0xDF5E18", VA = "0xDF5E18")]
	public void UnlockObject()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xDF5CC0", Offset = "0xDF5CC0", VA = "0xDF5CC0")]
	public void PickUp()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xDF5EB4", Offset = "0xDF5EB4", VA = "0xDF5EB4")]
	public void Throw()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xDF5EB8", Offset = "0xDF5EB8", VA = "0xDF5EB8")]
	public void AddForce()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xDF61E8", Offset = "0xDF61E8", VA = "0xDF61E8")]
	public void Drop(bool isImpulse = false)
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xDF62EC", Offset = "0xDF62EC", VA = "0xDF62EC")]
	public void DeleteThrower()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xDF6014", Offset = "0xDF6014", VA = "0xDF6014")]
	public Vector3 GetWorldVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xDF6390", Offset = "0xDF6390", VA = "0xDF6390")]
	private void OnTriggerEnter(Collider Col)
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xDF6604", Offset = "0xDF6604", VA = "0xDF6604")]
	private void OnCollisionEnter(Collision Col)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xDF64AC", Offset = "0xDF64AC", VA = "0xDF64AC")]
	private void DoBehavior(Transform theParent)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xDF6720", Offset = "0xDF6720", VA = "0xDF6720")]
	public TeleportThrower()
	{
	}
}
[Token(Token = "0x2000210")]
public class VRFadeScript : MonoBehaviour
{
	[Token(Token = "0x20004B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04510", Offset = "0xA04510")]
	private sealed class <FadeIn>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRFadeScript <>4__this;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__3;

		[Token(Token = "0x17000276")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0xE74ABC", Offset = "0xE74ABC", VA = "0xE74ABC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B80")]
			[Address(RVA = "0xE74B24", Offset = "0xE74B24", VA = "0xE74B24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xE74604", Offset = "0xE74604", VA = "0xE74604")]
		[DebuggerHidden]
		public <FadeIn>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xE74974", Offset = "0xE74974", VA = "0xE74974", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xE74978", Offset = "0xE74978", VA = "0xE74978", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xE74AC4", Offset = "0xE74AC4", VA = "0xE74AC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04520", Offset = "0xA04520")]
	private sealed class <FadeIn>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRFadeScript <>4__this;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <color>5__3;

		[Token(Token = "0x17000278")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0xE74C70", Offset = "0xE74C70", VA = "0xE74C70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xE74CD8", Offset = "0xE74CD8", VA = "0xE74CD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xE746B0", Offset = "0xE746B0", VA = "0xE746B0")]
		[DebuggerHidden]
		public <FadeIn>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xE74B2C", Offset = "0xE74B2C", VA = "0xE74B2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xE74B30", Offset = "0xE74B30", VA = "0xE74B30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xE74C78", Offset = "0xE74C78", VA = "0xE74C78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04530", Offset = "0xA04530")]
	private sealed class <FadeOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRFadeScript <>4__this;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <color>5__3;

		[Token(Token = "0x1700027A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0xE74E98", Offset = "0xE74E98", VA = "0xE74E98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0xE74F00", Offset = "0xE74F00", VA = "0xE74F00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xE7475C", Offset = "0xE7475C", VA = "0xE7475C")]
		[DebuggerHidden]
		public <FadeOut>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xE74CE0", Offset = "0xE74CE0", VA = "0xE74CE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xE74CE4", Offset = "0xE74CE4", VA = "0xE74CE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xE74EA0", Offset = "0xE74EA0", VA = "0xE74EA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeTime;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color fadeColor;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material fadeMaterial;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isFading;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YieldInstruction fadeInstruction;

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xE7442C", Offset = "0xE7442C", VA = "0xE7442C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xE744B4", Offset = "0xE744B4", VA = "0xE744B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xE74550", Offset = "0xE74550", VA = "0xE74550")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xE744E0", Offset = "0xE744E0", VA = "0xE744E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F904", Offset = "0xA1F904")]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xE74630", Offset = "0xE74630", VA = "0xE74630")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F968", Offset = "0xA1F968")]
	private IEnumerator FadeIn(float time)
	{
		return null;
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xE746DC", Offset = "0xE746DC", VA = "0xE746DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1F9CC", Offset = "0xA1F9CC")]
	private IEnumerator FadeOut(float time)
	{
		return null;
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xE74788", Offset = "0xE74788", VA = "0xE74788")]
	public void StartFadeIn(float time)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xE747B4", Offset = "0xE747B4", VA = "0xE747B4")]
	public void StartFadeOut(float time)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xE747E0", Offset = "0xE747E0", VA = "0xE747E0")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xE748CC", Offset = "0xE748CC", VA = "0xE748CC")]
	public VRFadeScript()
	{
	}
}
[Token(Token = "0x2000211")]
public class VROculusBlink : MonoBehaviour
{
	[Token(Token = "0x20004B4")]
	public enum eBlinkMode
	{
		[Token(Token = "0x4001D1E")]
		Instant,
		[Token(Token = "0x4001D1F")]
		HoldRelease
	}

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA149F4", Offset = "0xA149F4")]
	public OVRInput.Button BlinkButton;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canBlink;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14A2C", Offset = "0xA14A2C")]
	public bool fadeBlink;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eBlinkMode BlinkMode;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blinkDistance;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float blinkMoveTime;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14A64", Offset = "0xA14A64")]
	public Transform blinkPoint;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineArcSystem myLine;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color blinkLineColor;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LayerMask myMask;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color blinkLineBad;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool inBlink;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform storedTransformBlink;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool noBlinking;

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xE7A5CC", Offset = "0xE7A5CC", VA = "0xE7A5CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xE7A6A4", Offset = "0xE7A6A4", VA = "0xE7A6A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xE7A6B4", Offset = "0xE7A6B4", VA = "0xE7A6B4")]
	public void BlinkInput()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xE7A6FC", Offset = "0xE7A6FC", VA = "0xE7A6FC")]
	public void FowardBlinkNormal()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xE7AD5C", Offset = "0xE7AD5C", VA = "0xE7AD5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xE7ADB0", Offset = "0xE7ADB0", VA = "0xE7ADB0")]
	private void BumpMe()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xE7A8E8", Offset = "0xE7A8E8", VA = "0xE7A8E8")]
	public void FowardBlinkHold()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xE7AE44", Offset = "0xE7AE44", VA = "0xE7AE44")]
	public VROculusBlink()
	{
	}
}
[Token(Token = "0x2000212")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02610", Offset = "0xA02610")]
public class VROculusDragMovement : MonoBehaviour
{
	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14A9C", Offset = "0xA14A9C")]
	public Transform DragVisual;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14AD4", Offset = "0xA14AD4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14AD4", Offset = "0xA14AD4")]
	public float multipler;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool invertControls;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 lastPos;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isOn;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform storedTransform;

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xE7AE8C", Offset = "0xE7AE8C", VA = "0xE7AE8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xE7AF50", Offset = "0xE7AF50", VA = "0xE7AF50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xE7AF90", Offset = "0xE7AF90", VA = "0xE7AF90")]
	public void DraggingMove()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xE7B2E4", Offset = "0xE7B2E4", VA = "0xE7B2E4")]
	public VROculusDragMovement()
	{
	}
}
[Token(Token = "0x2000213")]
public class VROculusRotate : MonoBehaviour
{
	[Token(Token = "0x20004B5")]
	public enum eRotationMode
	{
		[Token(Token = "0x4001D21")]
		ButtonPointAndShoot,
		[Token(Token = "0x4001D22")]
		QuickStick,
		[Token(Token = "0x4001D23")]
		DoubleTapQuickStick,
		[Token(Token = "0x4001D24")]
		SlowStick,
		[Token(Token = "0x4001D25")]
		ButtonRotateLR,
		[Token(Token = "0x4001D26")]
		TouchPadClick,
		[Token(Token = "0x4001D27")]
		TouchPadSwipe,
		[Token(Token = "0x4001D28")]
		None
	}

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canRotate;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14B30", Offset = "0xA14B30")]
	public VRMovementOculus.eControllerType RotateOnHand;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool copyHandFromMain;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool invertHand;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14B68", Offset = "0xA14B68")]
	public eRotationMode RotationMode;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14BA0", Offset = "0xA14BA0")]
	public OVRInput.Button RotateButton;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14BD8", Offset = "0xA14BD8")]
	public bool fadeRotate;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14C10", Offset = "0xA14C10")]
	public float rotateDegrees;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotateTime;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float slowRotateSpeed;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float doubleTapTime;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool doubleTapLeft;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool doubleTapRight;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float dTapTimeLeft;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float dTapTimeRight;

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xE7B2F4", Offset = "0xE7B2F4", VA = "0xE7B2F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xE7B34C", Offset = "0xE7B34C", VA = "0xE7B34C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xE7B834", Offset = "0xE7B834", VA = "0xE7B834")]
	private void TouchPadMove()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xE7B740", Offset = "0xE7B740", VA = "0xE7B740")]
	private void ButtonRotateLR()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xE7B59C", Offset = "0xE7B59C", VA = "0xE7B59C")]
	private void SlowStickRotate()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xE7B4B4", Offset = "0xE7B4B4", VA = "0xE7B4B4")]
	private void QuickStickRotate()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xE7B9C0", Offset = "0xE7B9C0", VA = "0xE7B9C0")]
	private void QuickStickResolve(OVRInput.Controller selectedController)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xE7B52C", Offset = "0xE7B52C", VA = "0xE7B52C")]
	private void DoubleTapQuickStick()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xE7BA94", Offset = "0xE7BA94", VA = "0xE7BA94")]
	private void DoubleTapResolve(OVRInput.Controller selectedController)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xE7B434", Offset = "0xE7B434", VA = "0xE7B434")]
	private void PointShootPressed()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xE7BBDC", Offset = "0xE7BBDC", VA = "0xE7BBDC")]
	private void PointAndShootRotation(Transform selectedController)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xE7B9BC", Offset = "0xE7B9BC", VA = "0xE7B9BC")]
	public void RotateByDegrees(float degrees)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xE7BE64", Offset = "0xE7BE64", VA = "0xE7BE64")]
	private void RotateByDegrees2(float degrees)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xE7C12C", Offset = "0xE7C12C", VA = "0xE7C12C")]
	public VROculusRotate()
	{
	}
}
[Token(Token = "0x2000214")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02674", Offset = "0xA02674")]
public class VROculusRubberBand : MonoBehaviour
{
	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14C2C", Offset = "0xA14C2C")]
	public Transform DragPointL;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform DragPointR;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14C64", Offset = "0xA14C64")]
	public LineArcSystem RubberBandLineL;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineArcSystem RubberBandLineR;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14C9C", Offset = "0xA14C9C")]
	public float maxRadius;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool showLines;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool rbLeftOn;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool rbRightOn;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool invertDirection;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xE7C158", Offset = "0xE7C158", VA = "0xE7C158")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xE7C2DC", Offset = "0xE7C2DC", VA = "0xE7C2DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xE7CA40", Offset = "0xE7CA40", VA = "0xE7CA40")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xE7C348", Offset = "0xE7C348", VA = "0xE7C348")]
	public void RubberBandMoveL()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xE7C6C4", Offset = "0xE7C6C4", VA = "0xE7C6C4")]
	public void RubberBandMoveR()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xE7CC1C", Offset = "0xE7CC1C", VA = "0xE7CC1C")]
	public float ConvertRange(float originalStart, float originalEnd, float newStart, float newEnd, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xE7CC34", Offset = "0xE7CC34", VA = "0xE7CC34")]
	public VROculusRubberBand()
	{
	}
}
[Token(Token = "0x2000215")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA026D8", Offset = "0xA026D8")]
public class VROculusStrafe : MonoBehaviour
{
	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useController;

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xE7CC50", Offset = "0xE7CC50", VA = "0xE7CC50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xE7CD10", Offset = "0xE7CD10", VA = "0xE7CD10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xE7CD88", Offset = "0xE7CD88", VA = "0xE7CD88")]
	private void FPSMove(OVRInput.Controller pickedController)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xE7CF54", Offset = "0xE7CF54", VA = "0xE7CF54")]
	public VROculusStrafe()
	{
	}
}
[Token(Token = "0x2000216")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA0273C", Offset = "0xA0273C")]
public class VROculusTeleport : MonoBehaviour
{
	[Token(Token = "0x20004B6")]
	public enum TeleportType
	{
		[Token(Token = "0x4001D2A")]
		NavMesh,
		[Token(Token = "0x4001D2B")]
		TaggedPoint,
		[Token(Token = "0x4001D2C")]
		AnyCollider,
		[Token(Token = "0x4001D2D")]
		Tag
	}

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14CD4", Offset = "0xA14CD4")]
	public OVRInput.Button TeleportButton;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canTeleport;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14D0C", Offset = "0xA14D0C")]
	public TeleportType TeleportMode;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useArcTeleporter;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14D44", Offset = "0xA14D44")]
	public LayerMask myLayers;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool fadeTeleport;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TeleMinDstance;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float TeleMaxDistance;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string theTag;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float teleportTime;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14D7C", Offset = "0xA14D7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14D7C", Offset = "0xA14D7C")]
	public float forwardForce;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float gravityRatio;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14DD4", Offset = "0xA14DD4")]
	public float lineResolution;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14DF0", Offset = "0xA14DF0")]
	public LineArcSystem teleportLine;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color canTeleportColor;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color canNotTeleportColor;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14E28", Offset = "0xA14E28")]
	public Transform teleportPoint;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float teleportGive;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool inBlink;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform storedTransformBlink;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool inTeleport;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform storedTransformTeleport;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xE7CF5C", Offset = "0xE7CF5C", VA = "0xE7CF5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xE7D0A0", Offset = "0xE7D0A0", VA = "0xE7D0A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xE7D0B0", Offset = "0xE7D0B0", VA = "0xE7D0B0")]
	private void TeleportInput()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xE7D74C", Offset = "0xE7D74C", VA = "0xE7D74C")]
	private void Teleport()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xE7D910", Offset = "0xE7D910", VA = "0xE7D910")]
	private void BumpMe()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xE7D230", Offset = "0xE7D230", VA = "0xE7D230")]
	private void GetTeleportPoint()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xE7DE2C", Offset = "0xE7DE2C", VA = "0xE7DE2C")]
	private bool NavMeshTeleport(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xE7DECC", Offset = "0xE7DECC", VA = "0xE7DECC")]
	private bool TagTeleport(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xE7DF0C", Offset = "0xE7DF0C", VA = "0xE7DF0C")]
	private bool ColliderTeleport(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xE7D9A4", Offset = "0xE7D9A4", VA = "0xE7D9A4")]
	public void CastArc(Transform start)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xE7DF14", Offset = "0xE7DF14", VA = "0xE7DF14")]
	private bool RandomPoint(Vector3 center, float range, out Vector3 result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xE7E090", Offset = "0xE7E090", VA = "0xE7E090")]
	public VROculusTeleport()
	{
	}
}
[Token(Token = "0x2000217")]
public class VROculusThrowTeleporter : MonoBehaviour
{
	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14E60", Offset = "0xA14E60")]
	public OVRInput.Button TeleportButton;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Button CancelButton;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14E98", Offset = "0xA14E98")]
	public bool fadeTeleport;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float teleportTime;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TeleportThrower leftPorter;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TeleportThrower rightPorter;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14ED0", Offset = "0xA14ED0")]
	public TeleportThrower TeleportThrower;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xE7E11C", Offset = "0xE7E11C", VA = "0xE7E11C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xE7E1F4", Offset = "0xE7E1F4", VA = "0xE7E1F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xE7E264", Offset = "0xE7E264", VA = "0xE7E264")]
	private void LeftThrower()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xE7E57C", Offset = "0xE7E57C", VA = "0xE7E57C")]
	private void RightThrower()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xE7E894", Offset = "0xE7E894", VA = "0xE7E894")]
	public void TeleportMe(Transform teleportPoint)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xE7EAA4", Offset = "0xE7EAA4", VA = "0xE7EAA4")]
	private void BumpMe()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xE7EB38", Offset = "0xE7EB38", VA = "0xE7EB38")]
	public VROculusThrowTeleporter()
	{
	}
}
[Token(Token = "0x2000218")]
public class VROculusThrusters : MonoBehaviour
{
	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14F08", Offset = "0xA14F08")]
	public OVRInput.Button brakeButton;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14F40", Offset = "0xA14F40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14F40", Offset = "0xA14F40")]
	public float speedAdd;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14F98", Offset = "0xA14F98")]
	public float maxSpeedMulti;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14FB0", Offset = "0xA14FB0")]
	public float drag;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA14FC8", Offset = "0xA14FC8")]
	public float brakePower;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isOn;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool breaksHit;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool inverted;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool reduceVelocityOnContact;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform storedTransform;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 moveDirection;

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xE7EB54", Offset = "0xE7EB54", VA = "0xE7EB54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xE7EC40", Offset = "0xE7EC40", VA = "0xE7EC40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xE7EF30", Offset = "0xE7EF30", VA = "0xE7EF30")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xE7EC64", Offset = "0xE7EC64", VA = "0xE7EC64")]
	public void ThrusterMove()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xE7F044", Offset = "0xE7F044", VA = "0xE7F044")]
	private void Brakes(float chg)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xE7F134", Offset = "0xE7F134", VA = "0xE7F134")]
	public VROculusThrusters()
	{
	}
}
[Token(Token = "0x2000219")]
public class CameraFollow : MonoBehaviour
{
	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 offset;

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x119EF10", Offset = "0x119EF10", VA = "0x119EF10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x119F000", Offset = "0x119F000", VA = "0x119F000")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x119F0EC", Offset = "0x119F0EC", VA = "0x119F0EC")]
	public CameraFollow()
	{
	}
}
[Token(Token = "0x200021A")]
public class CameraRotate : MonoBehaviour
{
	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int speed;

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xFFDB6C", Offset = "0xFFDB6C", VA = "0xFFDB6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xFFDB70", Offset = "0xFFDB70", VA = "0xFFDB70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xFFDC4C", Offset = "0xFFDC4C", VA = "0xFFDC4C")]
	public CameraRotate()
	{
	}
}
[Token(Token = "0x200021B")]
public class Pierisrapae : MonoBehaviour
{
	[Token(Token = "0x20004B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04540", Offset = "0xA04540")]
	private sealed class <idle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pierisrapae <>4__this;

		[Token(Token = "0x1700027C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xEF21CC", Offset = "0xEF21CC", VA = "0xEF21CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xEF2234", Offset = "0xEF2234", VA = "0xEF2234", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xEF1E40", Offset = "0xEF1E40", VA = "0xEF1E40")]
		[DebuggerHidden]
		public <idle>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xEF2068", Offset = "0xEF2068", VA = "0xEF2068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xEF206C", Offset = "0xEF206C", VA = "0xEF206C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xEF21D4", Offset = "0xEF21D4", VA = "0xEF21D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04550", Offset = "0xA04550")]
	private sealed class <fly>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pierisrapae <>4__this;

		[Token(Token = "0x1700027E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0xEF1FF8", Offset = "0xEF1FF8", VA = "0xEF1FF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0xEF2060", Offset = "0xEF2060", VA = "0xEF2060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xEF1EDC", Offset = "0xEF1EDC", VA = "0xEF1EDC")]
		[DebuggerHidden]
		public <fly>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xEF1F10", Offset = "0xEF1F10", VA = "0xEF1F10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xEF1F14", Offset = "0xEF1F14", VA = "0xEF1F14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xEF2000", Offset = "0xEF2000", VA = "0xEF2000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator pieris;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator coroutine;

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xEF1A7C", Offset = "0xEF1A7C", VA = "0xEF1A7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xEF1AD4", Offset = "0xEF1AD4", VA = "0xEF1AD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xEF1DD0", Offset = "0xEF1DD0", VA = "0xEF1DD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FA30", Offset = "0xA1FA30")]
	private IEnumerator idle()
	{
		return null;
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xEF1E6C", Offset = "0xEF1E6C", VA = "0xEF1E6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FA94", Offset = "0xA1FA94")]
	private IEnumerator fly()
	{
		return null;
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xEF1F08", Offset = "0xEF1F08", VA = "0xEF1F08")]
	public Pierisrapae()
	{
	}
}
[Token(Token = "0x200021C")]
public class BranchGrabInfo : MonoBehaviour
{
	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRGrabObject grabObject;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue myCue;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] turnOff;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LandingSpot[] myLandingSpots;

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x119D4A0", Offset = "0x119D4A0", VA = "0x119D4A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x119D5C4", Offset = "0x119D5C4", VA = "0x119D5C4")]
	private void GrabOneShot()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x119D73C", Offset = "0x119D73C", VA = "0x119D73C")]
	private void BranchGrab()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x119D844", Offset = "0x119D844", VA = "0x119D844")]
	private void BranchDrop()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x119D6CC", Offset = "0x119D6CC", VA = "0x119D6CC")]
	private void TurnOff()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x119D8B0", Offset = "0x119D8B0", VA = "0x119D8B0")]
	public BranchGrabInfo()
	{
	}
}
[Token(Token = "0x200021D")]
public class ClusterSpawner : MonoBehaviour
{
	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] spawnableObject;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool spherelike;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float radius;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2Int amount;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool randomRotation;

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xFFF50C", Offset = "0xFFF50C", VA = "0xFFF50C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xFFF510", Offset = "0xFFF510", VA = "0xFFF510")]
	private void SpawnSystem()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xFFF998", Offset = "0xFFF998", VA = "0xFFF998")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xFFF9E8", Offset = "0xFFF9E8", VA = "0xFFF9E8")]
	public ClusterSpawner()
	{
	}
}
[Token(Token = "0x200021E")]
public class NTVR_CameraFacing : MonoBehaviour
{
	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xCB93FC", Offset = "0xCB93FC", VA = "0xCB93FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xCB94D8", Offset = "0xCB94D8", VA = "0xCB94D8")]
	public NTVR_CameraFacing()
	{
	}
}
[Token(Token = "0x200021F")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xDF6F8C", Offset = "0xDF6F8C", VA = "0xDF6F8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xDF7010", Offset = "0xDF7010", VA = "0xDF7010")]
	private Mesh ThickerMeshUsingNormals(Mesh m, float fPerturb)
	{
		return null;
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xDF7210", Offset = "0xDF7210", VA = "0xDF7210")]
	public Test()
	{
	}
}
[Token(Token = "0x2000220")]
public class MusicPlayerTrackForcer : MonoBehaviour
{
	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MusicPlayer myplayer;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int startPlace;

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xCB8D04", Offset = "0xCB8D04", VA = "0xCB8D04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xCB8D9C", Offset = "0xCB8D9C", VA = "0xCB8D9C")]
	public MusicPlayerTrackForcer()
	{
	}
}
[Token(Token = "0x2000221")]
public class NatureTreksPlayerManager : MonoBehaviour
{
	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA14FE0", Offset = "0xA14FE0")]
	public Toggle myToggle;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRMovementOculus TeleportController;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRMovementOculus StrafeModule;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeStart;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeStart2;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA15018", Offset = "0xA15018")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA15018", Offset = "0xA15018")]
	public float renderScaleMax;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public OVRManager.TiledMultiResLevel myRenderscale;

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xCC4B84", Offset = "0xCC4B84", VA = "0xCC4B84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xCC4BFC", Offset = "0xCC4BFC", VA = "0xCC4BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xCC4D3C", Offset = "0xCC4D3C", VA = "0xCC4D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xCC4F18", Offset = "0xCC4F18", VA = "0xCC4F18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xCC4E40", Offset = "0xCC4E40", VA = "0xCC4E40")]
	public void ShootEvent()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xCC4C20", Offset = "0xCC4C20", VA = "0xCC4C20")]
	public void LoadHand()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xCC53C4", Offset = "0xCC53C4", VA = "0xCC53C4")]
	public void ToggleMovement()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xCC54D0", Offset = "0xCC54D0", VA = "0xCC54D0")]
	public NatureTreksPlayerManager()
	{
	}
}
[Token(Token = "0x2000222")]
public class PlayerKillZones : MonoBehaviour
{
	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xEF2A20", Offset = "0xEF2A20", VA = "0xEF2A20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xEF2B04", Offset = "0xEF2B04", VA = "0xEF2B04")]
	public PlayerKillZones()
	{
	}
}
[Token(Token = "0x2000223")]
public class PlayerRespawnManager : MonoBehaviour
{
	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 respawnArea;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xEF2B0C", Offset = "0xEF2B0C", VA = "0xEF2B0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xEF2ACC", Offset = "0xEF2ACC", VA = "0xEF2ACC")]
	public void RespawnNow()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xEF2B48", Offset = "0xEF2B48", VA = "0xEF2B48")]
	public PlayerRespawnManager()
	{
	}
}
[Token(Token = "0x2000224")]
public class SECTRAudioExample : MonoBehaviour
{
	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SECTR_AudioCue testCue;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue musicCue;

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xD6AEB4", Offset = "0xD6AEB4", VA = "0xD6AEB4")]
	private void PlayClip()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xD6B004", Offset = "0xD6B004", VA = "0xD6B004")]
	public void ChangeMusic(SECTR_AudioCue yourCue)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xD6B254", Offset = "0xD6B254", VA = "0xD6B254")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xD6B328", Offset = "0xD6B328", VA = "0xD6B328")]
	public SECTRAudioExample()
	{
	}
}
[Token(Token = "0x2000225")]
public class SECTRAudioPlayer : MonoBehaviour
{
	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SECTR_AudioCue mainCue;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue awakeCue;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SECTR_AudioCue deathCue;

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xD6B330", Offset = "0xD6B330", VA = "0xD6B330")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xD6B3E0", Offset = "0xD6B3E0", VA = "0xD6B3E0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xD6B4D8", Offset = "0xD6B4D8", VA = "0xD6B4D8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xD6B5D0", Offset = "0xD6B5D0", VA = "0xD6B5D0")]
	public SECTRAudioPlayer()
	{
	}
}
[Token(Token = "0x2000226")]
public class SECTRMusicPlayer : MonoBehaviour
{
	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SECTR_AudioCue musicCue;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxClip;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string currentPlayingString;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float time;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float nextTime;

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xD6B5D8", Offset = "0xD6B5D8", VA = "0xD6B5D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xD6B634", Offset = "0xD6B634", VA = "0xD6B634")]
	private void NextClip()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xD6B638", Offset = "0xD6B638", VA = "0xD6B638")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xD6B63C", Offset = "0xD6B63C", VA = "0xD6B63C")]
	public SECTRMusicPlayer()
	{
	}
}
[Token(Token = "0x2000227")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA027A0", Offset = "0xA027A0")]
public class SeedScript : MonoBehaviour
{
	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1506C", Offset = "0xA1506C")]
	public GameObject[] thingsToSpawn;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue audioEffect;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string searchTag;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRGrabObject myGrabObject;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool locked;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA150A4", Offset = "0xA150A4")]
	public GameObject particlePoof;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float poofDeathTime;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA150DC", Offset = "0xA150DC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA150DC", Offset = "0xA150DC")]
	public bool isHighAsset;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1513C", Offset = "0xA1513C")]
	public bool noAsset;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA15174", Offset = "0xA15174")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15174", Offset = "0xA15174")]
	public bool isTimedSpawn;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float timeSpawn;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA151D4", Offset = "0xA151D4")]
	public bool toggleTimeOfDay;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool toggleWeather;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool startMoveUp;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float addYVector;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int explodeTime;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float addToVectorstart;

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xD2CED4", Offset = "0xD2CED4", VA = "0xD2CED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xD2CF8C", Offset = "0xD2CF8C", VA = "0xD2CF8C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xD2CFF8", Offset = "0xD2CFF8", VA = "0xD2CFF8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xD2D0C8", Offset = "0xD2D0C8", VA = "0xD2D0C8")]
	public void Tossed()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xD2D248", Offset = "0xD2D248", VA = "0xD2D248")]
	private void Dropped()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xD2D334", Offset = "0xD2D334", VA = "0xD2D334")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xD2D488", Offset = "0xD2D488", VA = "0xD2D488")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xD2D4E0", Offset = "0xD2D4E0", VA = "0xD2D4E0")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xD2D90C", Offset = "0xD2D90C", VA = "0xD2D90C")]
	private void DoEffect()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xD2DA88", Offset = "0xD2DA88", VA = "0xD2DA88")]
	public SeedScript()
	{
	}
}
[Token(Token = "0x2000228")]
public class SimpleSeed : MonoBehaviour
{
	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1520C", Offset = "0xA1520C")]
	public GameObject[] thingsToSpawn;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue audioEffect;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string searchTag;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15244", Offset = "0xA15244")]
	public bool autoCleanup;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 offset;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1527C", Offset = "0xA1527C")]
	public GameObject particlePoof;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float poofDeathTime;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int particlePoofDestroy;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA152B4", Offset = "0xA152B4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA152B4", Offset = "0xA152B4")]
	public bool isHighAsset;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15314", Offset = "0xA15314")]
	public bool noAsset;

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xCE2840", Offset = "0xCE2840", VA = "0xCE2840")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xCE28D4", Offset = "0xCE28D4", VA = "0xCE28D4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xCE2924", Offset = "0xCE2924", VA = "0xCE2924")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xCE2E90", Offset = "0xCE2E90", VA = "0xCE2E90")]
	private void DoEffect()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xCE3010", Offset = "0xCE3010", VA = "0xCE3010")]
	public SimpleSeed()
	{
	}
}
[Token(Token = "0x2000229")]
public class SpawnedObject : MonoBehaviour
{
	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canDie;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float deathTime;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isFood;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isOnlyFood;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject deathEffect;

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xCE90B4", Offset = "0xCE90B4", VA = "0xCE90B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xCE9140", Offset = "0xCE9140", VA = "0xCE9140")]
	private void KillOtherfoods()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xCE9258", Offset = "0xCE9258", VA = "0xCE9258")]
	private void FoodAlert()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xCE932C", Offset = "0xCE932C", VA = "0xCE932C")]
	private void InvokeDeath()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xCE9458", Offset = "0xCE9458", VA = "0xCE9458")]
	public SpawnedObject()
	{
	}
}
[Token(Token = "0x200022A")]
public class SpawnedObjectSystem : MonoBehaviour
{
	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> highAssetList;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> lowAssetList;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int highMaxObjects;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int lowMaxObjects;

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xCE9460", Offset = "0xCE9460", VA = "0xCE9460")]
	public void Start()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xCE2DA4", Offset = "0xCE2DA4", VA = "0xCE2DA4")]
	public void AddLowAsset(GameObject thing)
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xCE2CB8", Offset = "0xCE2CB8", VA = "0xCE2CB8")]
	public void AddHighAsset(GameObject thing)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xCE94E8", Offset = "0xCE94E8", VA = "0xCE94E8")]
	public SpawnedObjectSystem()
	{
	}
}
[Token(Token = "0x200022B")]
public class ToggleAsset : MonoBehaviour
{
	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent toggleOnEvent;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent toggleOffEvent;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer changeRenderer;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject activateEffect;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material onImage;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material offImage;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isOn;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRSimpleGrabSystem myGrabber;

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xDF8CB4", Offset = "0xDF8CB4", VA = "0xDF8CB4")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xDF8D64", Offset = "0xDF8D64", VA = "0xDF8D64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xDF8FD4", Offset = "0xDF8FD4", VA = "0xDF8FD4")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xDF8E38", Offset = "0xDF8E38", VA = "0xDF8E38")]
	private void ToggleSystem()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xDF90CC", Offset = "0xDF90CC", VA = "0xDF90CC")]
	public ToggleAsset()
	{
	}
}
[Token(Token = "0x200022C")]
public class VRMenuSystem : MonoBehaviour
{
	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button menuButton;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1534C", Offset = "0xA1534C")]
	public Transform targetLocationL;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetLocationR;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform targetLocation;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject vrUIGroup;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA15384", Offset = "0xA15384")]
	public bool UIOn;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 Offset;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float distance;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA153BC", Offset = "0xA153BC")]
	public bool singlePoint;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public OVRInput.Controller whichController;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform singleLocation;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA153F4", Offset = "0xA153F4")]
	public bool xOverRide;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float xOverRideNum;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public KeyCode DebugKey;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool openOnLeft;

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xE78684", Offset = "0xE78684", VA = "0xE78684")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xE786A8", Offset = "0xE786A8", VA = "0xE786A8")]
	private void AutoGrab()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xE78768", Offset = "0xE78768", VA = "0xE78768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xE78978", Offset = "0xE78978", VA = "0xE78978")]
	public void ToggleVRUI()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xE78730", Offset = "0xE78730", VA = "0xE78730")]
	public void CloseVRUI()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xE78BB8", Offset = "0xE78BB8", VA = "0xE78BB8")]
	public void OpenVRUI()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xE78988", Offset = "0xE78988", VA = "0xE78988")]
	private void RepositionUI()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xE78BFC", Offset = "0xE78BFC", VA = "0xE78BFC")]
	public VRMenuSystem()
	{
	}
}
[Token(Token = "0x200022D")]
public class EscapeAndRecenter : MonoBehaviour
{
	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xEE9324", Offset = "0xEE9324", VA = "0xEE9324")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xEE9328", Offset = "0xEE9328", VA = "0xEE9328")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xEE9408", Offset = "0xEE9408", VA = "0xEE9408")]
	public void MakeRecenter()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xEE9468", Offset = "0xEE9468", VA = "0xEE9468")]
	public EscapeAndRecenter()
	{
	}
}
[Token(Token = "0x200022E")]
public class Facing : MonoBehaviour
{
	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject faceTo;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool facePlayer;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isFacing;

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x13AE9C0", Offset = "0x13AE9C0", VA = "0x13AE9C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x13AEA58", Offset = "0x13AEA58", VA = "0x13AEA58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x13AEA68", Offset = "0x13AEA68", VA = "0x13AEA68")]
	private void FaceObject()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x13AEACC", Offset = "0x13AEACC", VA = "0x13AEACC")]
	public Facing()
	{
	}
}
[Token(Token = "0x200022F")]
public class GetPivots : MonoBehaviour
{
	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform GrabObject;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform AnchorPoint;

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xEA9058", Offset = "0xEA9058", VA = "0xEA9058")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xEA9064", Offset = "0xEA9064", VA = "0xEA9064")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xEA9380", Offset = "0xEA9380", VA = "0xEA9380")]
	public GetPivots()
	{
	}
}
[Token(Token = "0x2000230")]
public class MovementSFX : MonoBehaviour
{
	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 holder;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amount;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeScale;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotateSpeed;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ShouldRotate;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool RandomRotation;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool randomTimeScale;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 rotationDirection;

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xCB68EC", Offset = "0xCB68EC", VA = "0xCB68EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xCB6950", Offset = "0xCB6950", VA = "0xCB6950")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xCB6AB0", Offset = "0xCB6AB0", VA = "0xCB6AB0")]
	public MovementSFX()
	{
	}
}
[Token(Token = "0x2000231")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02804", Offset = "0xA02804")]
public class SimpleLineConnector : MonoBehaviour
{
	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer myLine;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform LineTo;

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xCE1574", Offset = "0xCE1574", VA = "0xCE1574")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xCE1630", Offset = "0xCE1630", VA = "0xCE1630")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xCE16A0", Offset = "0xCE16A0", VA = "0xCE16A0")]
	public SimpleLineConnector()
	{
	}
}
[Token(Token = "0x2000232")]
public class ToggleObjects : MonoBehaviour
{
	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode myKey;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] ThingsToToggle;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isOn;

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xDF90D4", Offset = "0xDF90D4", VA = "0xDF90D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xDF90E0", Offset = "0xDF90E0", VA = "0xDF90E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xDF911C", Offset = "0xDF911C", VA = "0xDF911C")]
	private void ToggleThings()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xDF9198", Offset = "0xDF9198", VA = "0xDF9198")]
	public ToggleObjects()
	{
	}
}
[Token(Token = "0x2000233")]
public class HapticHelper : MonoBehaviour
{
	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HapticHelper instance;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRHaptics.OVRHapticsChannel m_hapticsChannelL;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRHaptics.OVRHapticsChannel m_hapticsChannelR;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1542C", Offset = "0xA1542C")]
	public AudioClip GoodAudio;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip BadAudio;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] ExtraAudioClips;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVRHapticsClip GoodClip;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OVRHapticsClip BadClip;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRHapticsClip proceduralClip;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRHapticsClip ExtraClip;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA15464", Offset = "0xA15464")]
	public bool AlwaysPreempt;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1549C", Offset = "0xA1549C")]
	public bool TestMode;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public OVRInput.Controller myController;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OVRInput.Button ClipButton;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public OVRInput.Button ProceduralButton;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip ClipToTest;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA154D4", Offset = "0xA154D4")]
	public bool continuous;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1550C", Offset = "0xA1550C")]
	public int pIntensity;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA15528", Offset = "0xA15528")]
	public int pLength;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool useSin;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float SinSpeed;

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xEB25A0", Offset = "0xEB25A0", VA = "0xEB25A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xEB26B4", Offset = "0xEB26B4", VA = "0xEB26B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xEB2810", Offset = "0xEB2810", VA = "0xEB2810")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xEB2C10", Offset = "0xEB2C10", VA = "0xEB2C10")]
	public void PlayGoodClip(bool isLeft, bool preempt = false)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xEB2D40", Offset = "0xEB2D40", VA = "0xEB2D40")]
	public void PlayBadClip(bool isLeft, bool preempt = false)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xEB2DF4", Offset = "0xEB2DF4", VA = "0xEB2DF4")]
	public void PlayExtraClips(bool isLeft, int index, bool preempt = false)
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xEB298C", Offset = "0xEB298C", VA = "0xEB298C")]
	public void PlayHapticAudioClip(bool isLeft, AudioClip aClip, bool preempt = false)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xEB2AF4", Offset = "0xEB2AF4", VA = "0xEB2AF4")]
	public void ProceduralTone(bool Left, int intensity, int length = 25)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xEB2A30", Offset = "0xEB2A30", VA = "0xEB2A30")]
	public void GenerateSinPulse(bool Left, int intensity, float speed, int length = 25)
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xEB2CF4", Offset = "0xEB2CF4", VA = "0xEB2CF4")]
	public void ClipPlayer(bool isLeft, OVRHapticsClip clip)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xEB2CC4", Offset = "0xEB2CC4", VA = "0xEB2CC4")]
	public void ClipPlayerNow(bool isLeft, OVRHapticsClip clip)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xEB2EC4", Offset = "0xEB2EC4", VA = "0xEB2EC4")]
	public HapticHelper()
	{
	}
}
[Token(Token = "0x2000234")]
public class PlayHapticEvent : MonoBehaviour
{
	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playGood;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool playBad;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool playIndex;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool playProcedrual;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool playClip;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip aClip;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA15544", Offset = "0xA15544")]
	public bool continuous;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1557C", Offset = "0xA1557C")]
	public int pIntensity;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA15598", Offset = "0xA15598")]
	public int pLength;

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xEF223C", Offset = "0xEF223C", VA = "0xEF223C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xEF2578", Offset = "0xEF2578", VA = "0xEF2578")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xEF2690", Offset = "0xEF2690", VA = "0xEF2690")]
	public PlayHapticEvent()
	{
	}
}
[Token(Token = "0x2000235")]
public class SetCorrectCameraHeight : MonoBehaviour
{
	[Token(Token = "0x20004B9")]
	private enum TrackingSpace
	{
		[Token(Token = "0x4001D35")]
		Stationary,
		[Token(Token = "0x4001D36")]
		RoomScale
	}

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA155B4", Offset = "0xA155B4")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA155B4", Offset = "0xA155B4")]
	private TrackingSpace m_TrackingSpace;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15624", Offset = "0xA15624")]
	private float m_StationaryCameraYOffset;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA15670", Offset = "0xA15670")]
	private GameObject m_CameraFloorOffsetObject;

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xD2E08C", Offset = "0xD2E08C", VA = "0xD2E08C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xD2E144", Offset = "0xD2E144", VA = "0xD2E144")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xD2E148", Offset = "0xD2E148", VA = "0xD2E148")]
	private void SetCameraHeight()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xD2E2FC", Offset = "0xD2E2FC", VA = "0xD2E2FC")]
	public SetCorrectCameraHeight()
	{
	}
}
[Token(Token = "0x2000236")]
public enum HandPoseId
{
	[Token(Token = "0x4000F60")]
	Default,
	[Token(Token = "0x4000F61")]
	Generic,
	[Token(Token = "0x4000F62")]
	PingPongBall,
	[Token(Token = "0x4000F63")]
	Controller
}
[Token(Token = "0x2000237")]
public class VRGrabHandPose : MonoBehaviour
{
	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_allowPointing;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_allowThumbsUp;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private HandPoseId m_poseId;

	[Token(Token = "0x17000106")]
	public bool AllowPointing
	{
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xE753D0", Offset = "0xE753D0", VA = "0xE753D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000107")]
	public bool AllowThumbsUp
	{
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xE753D8", Offset = "0xE753D8", VA = "0xE753D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000108")]
	public HandPoseId PoseId
	{
		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xE753E0", Offset = "0xE753E0", VA = "0xE753E0")]
		get
		{
			return default(HandPoseId);
		}
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xE753E8", Offset = "0xE753E8", VA = "0xE753E8")]
	public VRGrabHandPose()
	{
	}
}
[Token(Token = "0x2000238")]
public class VRHandAnimator : MonoBehaviour
{
	[Token(Token = "0x4000F67")]
	public const string ANIM_LAYER_NAME_POINT = "Point Layer";

	[Token(Token = "0x4000F68")]
	public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

	[Token(Token = "0x4000F69")]
	public const string ANIM_PARAM_NAME_FLEX = "Flex";

	[Token(Token = "0x4000F6A")]
	public const string ANIM_PARAM_NAME_POSE = "Pose";

	[Token(Token = "0x4000F6B")]
	public const float THRESH_COLLISION_FLEX = 0.9f;

	[Token(Token = "0x4000F6C")]
	public const float INPUT_RATE_CHANGE = 20f;

	[Token(Token = "0x4000F6D")]
	public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

	[Token(Token = "0x4000F6E")]
	public const float THUMB_DEBOUNCE_TIME = 0.15f;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator m_animator;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VRGrabHandPose m_defaultGrabPose;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRSimpleGrabSystem m_grabber;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Renderer> m_showAfterInputFocusAcquired;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_animLayerIndexThumb;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_animLayerIndexPoint;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_animParamIndexFlex;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_animParamIndexPose;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_isPointing;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_isGivingThumbsUp;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_pointBlend;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_thumbsUpBlend;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xE77800", Offset = "0xE77800", VA = "0xE77800")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xE7796C", Offset = "0xE7796C", VA = "0xE7796C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xE77A50", Offset = "0xE77A50", VA = "0xE77A50")]
	private void UpdateCapTouchStates()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xE77D88", Offset = "0xE77D88", VA = "0xE77D88")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xE77D8C", Offset = "0xE77D8C", VA = "0xE77D8C")]
	private void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xE77ECC", Offset = "0xE77ECC", VA = "0xE77ECC")]
	private void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xE77AEC", Offset = "0xE77AEC", VA = "0xE77AEC")]
	private float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xE77B8C", Offset = "0xE77B8C", VA = "0xE77B8C")]
	private void UpdateAnimStates()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xE77FE8", Offset = "0xE77FE8", VA = "0xE77FE8")]
	public VRHandAnimator()
	{
	}
}
[Token(Token = "0x2000239")]
public class SetColorRandom : MonoBehaviour
{
	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xD2DFB4", Offset = "0xD2DFB4", VA = "0xD2DFB4")]
	public void SetColor()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xD2E080", Offset = "0xD2E080", VA = "0xD2E080")]
	public void Click()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xD2E084", Offset = "0xD2E084", VA = "0xD2E084")]
	public SetColorRandom()
	{
	}
}
[Token(Token = "0x200023A")]
public class VRInputComponent : MonoBehaviour
{
	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1571C", Offset = "0xA1571C")]
	public UnityEvent useEvent;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isButton;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool useCustomMessage;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string message;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usesTriggers;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool useGrabNThrow;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string searchTag;

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xE77FF8", Offset = "0xE77FF8", VA = "0xE77FF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xE7808C", Offset = "0xE7808C", VA = "0xE7808C")]
	public void Use()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xE78130", Offset = "0xE78130", VA = "0xE78130")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xE78224", Offset = "0xE78224", VA = "0xE78224")]
	public VRInputComponent()
	{
	}
}
[Token(Token = "0x200023B")]
public class VRInputRay : MonoBehaviour
{
	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button button;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controller;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool canDoInput;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rayDistance;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pointer;

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xE7822C", Offset = "0xE7822C", VA = "0xE7822C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xE7823C", Offset = "0xE7823C", VA = "0xE7823C")]
	private void InputControl()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xE783DC", Offset = "0xE783DC", VA = "0xE783DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xE783EC", Offset = "0xE783EC", VA = "0xE783EC")]
	private void ShowRay()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xE785B8", Offset = "0xE785B8", VA = "0xE785B8")]
	private void MovePointer(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xE78568", Offset = "0xE78568", VA = "0xE78568")]
	private void HidePointer()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xE78674", Offset = "0xE78674", VA = "0xE78674")]
	public VRInputRay()
	{
	}
}
[Serializable]
[Token(Token = "0x200023C")]
public class LightControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float intensity;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bounceIntensity;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float range;

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xCA8820", Offset = "0xCA8820", VA = "0xCA8820")]
	public LightControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200023D")]
public class LightControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightControlBehaviour template;

	[Token(Token = "0x17000109")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xCA8864", Offset = "0xCA8864", VA = "0xCA8864", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xCA886C", Offset = "0xCA886C", VA = "0xCA886C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xCA890C", Offset = "0xCA890C", VA = "0xCA890C")]
	public LightControlClip()
	{
	}
}
[Token(Token = "0x200023E")]
public class LightControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_DefaultIntensity;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_DefaultBounceIntensity;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_DefaultRange;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_TrackBinding;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xCA8970", Offset = "0xCA8970", VA = "0xCA8970", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xCA8D3C", Offset = "0xCA8D3C", VA = "0xCA8D3C", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xCA8E18", Offset = "0xCA8E18", VA = "0xCA8E18")]
	public LightControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x200023F")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA02868", Offset = "0xA02868")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA02868", Offset = "0xA02868")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xA02868", Offset = "0xA02868")]
public class LightControlTrack : TrackAsset
{
	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xCA8E20", Offset = "0xCA8E20", VA = "0xCA8E20", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xCA8EB8", Offset = "0xCA8EB8", VA = "0xCA8EB8", Slot = "28")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xCA8EC0", Offset = "0xCA8EC0", VA = "0xCA8EC0")]
	public LightControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000240")]
public class NavMeshAgentControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform destination;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destinationSet;

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xCC54E4", Offset = "0xCC54E4", VA = "0xCC54E4", Slot = "15")]
	public override void OnPlayableCreate(Playable playable)
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xCC54EC", Offset = "0xCC54EC", VA = "0xCC54EC")]
	public NavMeshAgentControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000241")]
public class NavMeshAgentControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Transform> destination;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15754", Offset = "0xA15754")]
	public NavMeshAgentControlBehaviour template;

	[Token(Token = "0x1700010A")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xCC54F4", Offset = "0xCC54F4", VA = "0xCC54F4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xCC54FC", Offset = "0xCC54FC", VA = "0xCC54FC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xCC5608", Offset = "0xCC5608", VA = "0xCC5608")]
	public NavMeshAgentControlClip()
	{
	}
}
[Token(Token = "0x2000242")]
public class NavMeshAgentControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xCC5670", Offset = "0xCC5670", VA = "0xCC5670", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xCC58A0", Offset = "0xCC58A0", VA = "0xCC58A0")]
	public NavMeshAgentControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000243")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA0291C", Offset = "0xA0291C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA0291C", Offset = "0xA0291C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xA0291C", Offset = "0xA0291C")]
public class NavMeshAgentControlTrack : TrackAsset
{
	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xCC58A8", Offset = "0xCC58A8", VA = "0xCC58A8", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xCC5940", Offset = "0xCC5940", VA = "0xCC5940")]
	public NavMeshAgentControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000244")]
public class ScreenFaderBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xD2B7A0", Offset = "0xD2B7A0", VA = "0xD2B7A0")]
	public ScreenFaderBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000245")]
public class ScreenFaderClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScreenFaderBehaviour template;

	[Token(Token = "0x1700010B")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xD2B7D4", Offset = "0xD2B7D4", VA = "0xD2B7D4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xD2B7DC", Offset = "0xD2B7DC", VA = "0xD2B7DC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xD2B87C", Offset = "0xD2B87C", VA = "0xD2B87C")]
	public ScreenFaderClip()
	{
	}
}
[Token(Token = "0x2000246")]
public class ScreenFaderMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image m_TrackBinding;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xD2B8E0", Offset = "0xD2B8E0", VA = "0xD2B8E0", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xD2BBF4", Offset = "0xD2BBF4", VA = "0xD2BBF4", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xD2BC9C", Offset = "0xD2BC9C", VA = "0xD2BC9C")]
	public ScreenFaderMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000247")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA029D0", Offset = "0xA029D0")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA029D0", Offset = "0xA029D0")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xA029D0", Offset = "0xA029D0")]
public class ScreenFaderTrack : TrackAsset
{
	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xD2BCA4", Offset = "0xD2BCA4", VA = "0xD2BCA4", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xD2BD3C", Offset = "0xD2BD3C", VA = "0xD2BD3C", Slot = "28")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xD2BD44", Offset = "0xD2BD44", VA = "0xD2BD44")]
	public ScreenFaderTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000248")]
public class TextSwitcherBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fontSize;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xDF7F34", Offset = "0xDF7F34", VA = "0xDF7F34")]
	public TextSwitcherBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000249")]
public class TextSwitcherClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextSwitcherBehaviour template;

	[Token(Token = "0x1700010C")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xDF7F70", Offset = "0xDF7F70", VA = "0xDF7F70", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xDF7F78", Offset = "0xDF7F78", VA = "0xDF7F78", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xDF8018", Offset = "0xDF8018", VA = "0xDF8018")]
	public TextSwitcherClip()
	{
	}
}
[Token(Token = "0x200024A")]
public class TextSwitcherMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_DefaultFontSize;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_DefaultText;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_TrackBinding;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xDF807C", Offset = "0xDF807C", VA = "0xDF807C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xDF84B0", Offset = "0xDF84B0", VA = "0xDF84B0", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xDF8588", Offset = "0xDF8588", VA = "0xDF8588")]
	public TextSwitcherMixerBehaviour()
	{
	}
}
[Token(Token = "0x200024B")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA02A80", Offset = "0xA02A80")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA02A80", Offset = "0xA02A80")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xA02A80", Offset = "0xA02A80")]
public class TextSwitcherTrack : TrackAsset
{
	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xDF8590", Offset = "0xDF8590", VA = "0xDF8590", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xDF8628", Offset = "0xDF8628", VA = "0xDF8628", Slot = "28")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xDF8630", Offset = "0xDF8630", VA = "0xDF8630")]
	public TextSwitcherTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200024C")]
public class TimeDilationBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xDF8698", Offset = "0xDF8698", VA = "0xDF8698")]
	public TimeDilationBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200024D")]
public class TimeDilationClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeDilationBehaviour template;

	[Token(Token = "0x1700010D")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xDF86A8", Offset = "0xDF86A8", VA = "0xDF86A8", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xDF86B0", Offset = "0xDF86B0", VA = "0xDF86B0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xDF8750", Offset = "0xDF8750", VA = "0xDF8750")]
	public TimeDilationClip()
	{
	}
}
[Token(Token = "0x200024E")]
public class TimeDilationMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_OldTimeScale;

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xDF87C0", Offset = "0xDF87C0", VA = "0xDF87C0", Slot = "15")]
	public override void OnPlayableCreate(Playable playable)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xDF87E8", Offset = "0xDF87E8", VA = "0xDF87E8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xDF8984", Offset = "0xDF8984", VA = "0xDF8984", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xDF8990", Offset = "0xDF8990", VA = "0xDF8990")]
	public TimeDilationMixerBehaviour()
	{
	}
}
[Token(Token = "0x200024F")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA02B34", Offset = "0xA02B34")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA02B34", Offset = "0xA02B34")]
public class TimeDilationTrack : TrackAsset
{
	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xDF89A0", Offset = "0xDF89A0", VA = "0xDF89A0", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xDF8A38", Offset = "0xDF8A38", VA = "0xDF8A38")]
	public TimeDilationTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000250")]
public class TransformTweenBehaviour : PlayableBehaviour
{
	[Token(Token = "0x20004BA")]
	public enum TweenType
	{
		[Token(Token = "0x4001D38")]
		Linear,
		[Token(Token = "0x4001D39")]
		Deceleration,
		[Token(Token = "0x4001D3A")]
		Harmonic,
		[Token(Token = "0x4001D3B")]
		Custom
	}

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform startLocation;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform endLocation;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool tweenPosition;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool tweenRotation;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TweenType tweenType;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve customCurve;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 startingPosition;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion startingRotation;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve m_LinearCurve;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve m_DecelerationCurve;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve m_HarmonicCurve;

	[Token(Token = "0x4000FB4")]
	private const float k_RightAngleInRads = (float)Math.PI / 2f;

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xDF91A0", Offset = "0xDF91A0", VA = "0xDF91A0", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xDF9248", Offset = "0xDF9248", VA = "0xDF9248")]
	public float EvaluateCurrentCurve(float time)
	{
		return default(float);
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xDF9340", Offset = "0xDF9340", VA = "0xDF9340")]
	private bool IsCustomCurveNormalised()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xDF9568", Offset = "0xDF9568", VA = "0xDF9568")]
	public TransformTweenBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000251")]
public class TransformTweenClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TransformTweenBehaviour template;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<Transform> startLocation;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExposedReference<Transform> endLocation;

	[Token(Token = "0x1700010E")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xDF974C", Offset = "0xDF974C", VA = "0xDF974C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xDF9754", Offset = "0xDF9754", VA = "0xDF9754", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xDF9884", Offset = "0xDF9884", VA = "0xDF9884")]
	public TransformTweenClip()
	{
	}
}
[Token(Token = "0x2000252")]
public class TransformTweenMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xDF98E8", Offset = "0xDF98E8", VA = "0xDF98E8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xDFA010", Offset = "0xDFA010", VA = "0xDFA010", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xDF9FFC", Offset = "0xDF9FFC", VA = "0xDF9FFC")]
	private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xDF9FE8", Offset = "0xDF9FE8", VA = "0xDF9FE8")]
	private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xDFA018", Offset = "0xDFA018", VA = "0xDFA018")]
	private static float QuaternionMagnitude(Quaternion rotation)
	{
		return default(float);
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xDF9EF8", Offset = "0xDF9EF8", VA = "0xDF9EF8")]
	private static Quaternion NormalizeQuaternion(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xDFA104", Offset = "0xDFA104", VA = "0xDFA104")]
	public TransformTweenMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000253")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA02BC0", Offset = "0xA02BC0")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA02BC0", Offset = "0xA02BC0")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xA02BC0", Offset = "0xA02BC0")]
public class TransformTweenTrack : TrackAsset
{
	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xDFA10C", Offset = "0xDFA10C", VA = "0xDFA10C", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xDFA1A4", Offset = "0xDFA1A4", VA = "0xDFA1A4", Slot = "28")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xDFA1AC", Offset = "0xDFA1AC", VA = "0xDFA1AC")]
	public TransformTweenTrack()
	{
	}
}
[Token(Token = "0x2000254")]
public enum UIType
{
	[Token(Token = "0x4000FBA")]
	None,
	[Token(Token = "0x4000FBB")]
	Welcome,
	[Token(Token = "0x4000FBC")]
	Invocation,
	[Token(Token = "0x4000FBD")]
	Finish
}
[Token(Token = "0x2000255")]
public class TestTimeLineEvent : MonoBehaviour
{
	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent myEvent;

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xDF72D0", Offset = "0xDF72D0", VA = "0xDF72D0")]
	public void Changecolor()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xDF734C", Offset = "0xDF734C", VA = "0xDF734C")]
	public void DoWiggle(float howLong)
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xDF738C", Offset = "0xDF738C", VA = "0xDF738C")]
	public void DoLinkedEvent()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xDF73A8", Offset = "0xDF73A8", VA = "0xDF73A8")]
	public TestTimeLineEvent()
	{
	}
}
[Token(Token = "0x2000256")]
public class TimeLord : MonoBehaviour
{
	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector myDirector;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double duration;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double currentTime;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent endingEvent;

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xDF8AA0", Offset = "0xDF8AA0", VA = "0xDF8AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xDF8B64", Offset = "0xDF8B64", VA = "0xDF8B64")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xDF8BEC", Offset = "0xDF8BEC", VA = "0xDF8BEC")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xDF8C08", Offset = "0xDF8C08", VA = "0xDF8C08")]
	public void Play()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xDF8C24", Offset = "0xDF8C24", VA = "0xDF8C24")]
	public void ChangeTimePause(int theTime)
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xDF8C68", Offset = "0xDF8C68", VA = "0xDF8C68")]
	public void ChangeTimePlay(int theTime)
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xDF8CAC", Offset = "0xDF8CAC", VA = "0xDF8CAC")]
	public TimeLord()
	{
	}
}
[Token(Token = "0x2000257")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02C74", Offset = "0xA02C74")]
public class AmplifyColorBase : MonoBehaviour
{
	[Token(Token = "0x4000FC3")]
	public const int LutSize = 32;

	[Token(Token = "0x4000FC4")]
	public const int LutWidth = 1024;

	[Token(Token = "0x4000FC5")]
	public const int LutHeight = 32;

	[Token(Token = "0x4000FC6")]
	private const int DepthCurveLutRange = 1024;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tonemapping Tonemapper;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Exposure;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LinearWhitePoint;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA15764", Offset = "0xA15764")]
	public bool ApplyDithering;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quality QualityLevel;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float BlendAmount;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture LutTexture;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture LutBlendTexture;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture MaskTexture;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseDepthMask;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve DepthMaskCurve;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseVolumes;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float ExitVolumeBlendTime;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform TriggerVolumeProxy;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask VolumeCollisionMask;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera ownerCamera;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Shader shaderBase;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Shader shaderBlend;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Shader shaderBlendCache;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Shader shaderMask;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Shader shaderMaskBlend;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Shader shaderDepthMask;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Shader shaderDepthMaskBlend;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Shader shaderProcessOnly;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RenderTexture blendCacheLut;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Texture2D defaultLut;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Texture2D depthCurveLut;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color32[] depthCurveColors;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ColorSpace colorSpace;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Quality qualityLevel;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Material materialBase;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Material materialBlend;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Material materialBlendCache;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Material materialMask;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Material materialMaskBlend;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Material materialDepthMask;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Material materialDepthMaskBlend;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Material materialProcessOnly;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool blending;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float blendingTime;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float blendingTimeCountdown;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Action onFinishBlend;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AnimationCurve prevDepthMaskCurve;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool volumesBlending;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float volumesBlendingTime;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float volumesBlendingTimeCountdown;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Texture volumesLutBlendTexture;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float volumesBlendAmount;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Texture worldLUT;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private AmplifyColorVolumeBase currentVolumeLut;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private RenderTexture midBlendLUT;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool blendingFromMidBlend;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private VolumeEffect worldVolumeEffects;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private VolumeEffect currentVolumeEffects;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private VolumeEffect blendVolumeEffects;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float worldExposure;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float currentExposure;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float blendExposure;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float effectVolumesBlendAdjust;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private List<AmplifyColorVolumeBase> enteredVolumes;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private AmplifyColorTriggerProxyBase actualTriggerProxy;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA1579C", Offset = "0xA1579C")]
	public VolumeEffectFlags EffectFlags;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA157AC", Offset = "0xA157AC")]
	private string sharedInstanceID;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool silentError;

	[Token(Token = "0x1700010F")]
	public Texture2D DefaultLut
	{
		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x118ECA4", Offset = "0x118ECA4", VA = "0x118ECA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000110")]
	public bool IsBlending
	{
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x118EF74", Offset = "0x118EF74", VA = "0x118EF74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000111")]
	private float effectVolumesBlendAdjusted
	{
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x118EF7C", Offset = "0x118EF7C", VA = "0x118EF7C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000112")]
	public string SharedInstanceID
	{
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x118F01C", Offset = "0x118F01C", VA = "0x118F01C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000113")]
	public bool WillItBlend
	{
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x118F024", Offset = "0x118F024", VA = "0x118F024")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x118F0E8", Offset = "0x118F0E8", VA = "0x118F0E8")]
	public void NewSharedInstanceID()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x118F170", Offset = "0x118F170", VA = "0x118F170")]
	private void ReportMissingShaders()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x118F1F0", Offset = "0x118F1F0", VA = "0x118F1F0")]
	private void ReportNotSupported()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x118F270", Offset = "0x118F270", VA = "0x118F270")]
	private bool CheckShader(Shader s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x118F328", Offset = "0x118F328", VA = "0x118F328")]
	private bool CheckShaders()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x118F3A8", Offset = "0x118F3A8", VA = "0x118F3A8")]
	private bool CheckSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x118F3E4", Offset = "0x118F3E4", VA = "0x118F3E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x118F81C", Offset = "0x118F81C", VA = "0x118F81C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x118FA48", Offset = "0x118FA48", VA = "0x118FA48")]
	private void VolumesBlendTo(Texture blendTargetLUT, float blendTimeInSec)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x118FA64", Offset = "0x118FA64", VA = "0x118FA64")]
	public void BlendTo(Texture blendTargetLUT, float blendTimeInSec, Action onFinishBlend)
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x118FA84", Offset = "0x118FA84", VA = "0x118FA84")]
	private void CheckCamera()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x118FB60", Offset = "0x118FB60", VA = "0x118FB60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x118FBBC", Offset = "0x118FBBC", VA = "0x118FBBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x11905DC", Offset = "0x11905DC", VA = "0x11905DC")]
	public void EnterVolume(AmplifyColorVolumeBase volume)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x1190678", Offset = "0x1190678", VA = "0x1190678")]
	public void ExitVolume(AmplifyColorVolumeBase volume)
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x118FF84", Offset = "0x118FF84", VA = "0x118FF84")]
	private void UpdateVolumes()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x1190710", Offset = "0x1190710", VA = "0x1190710")]
	private void SetupShader()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x118F8EC", Offset = "0x118F8EC", VA = "0x118F8EC")]
	private void ReleaseMaterials()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x118ED30", Offset = "0x118ED30", VA = "0x118ED30")]
	private Texture2D CreateDefaultLut()
	{
		return null;
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x1190820", Offset = "0x1190820", VA = "0x1190820")]
	private Texture2D CreateDepthCurveLut()
	{
		return null;
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x1190958", Offset = "0x1190958", VA = "0x1190958")]
	private void UpdateDepthCurveLut()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x1190AC4", Offset = "0x1190AC4", VA = "0x1190AC4")]
	private void CheckUpdateDepthCurveLut()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x1190C88", Offset = "0x1190C88", VA = "0x1190C88")]
	private void CreateHelperTextures()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x1190E50", Offset = "0x1190E50", VA = "0x1190E50")]
	private bool CheckMaterialAndShader(Material material, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x118F5BC", Offset = "0x118F5BC", VA = "0x118F5BC")]
	private bool CreateMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x1190FD0", Offset = "0x1190FD0", VA = "0x1190FD0")]
	private void SetMaterialKeyword(string keyword, bool state)
	{
	}

	[Token(Token = "0x6000F17")]
	private void SafeRelease<T>(ref T obj) where T : UnityEngine.Object
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x118F9B0", Offset = "0x118F9B0", VA = "0x118F9B0")]
	private void ReleaseTextures()
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x119118C", Offset = "0x119118C", VA = "0x119118C")]
	public static bool ValidateLutDimensions(Texture lut)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x11912E8", Offset = "0x11912E8", VA = "0x11912E8")]
	private void UpdatePostEffectParams()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x1191378", Offset = "0x1191378", VA = "0x1191378")]
	private int ComputeShaderPass()
	{
		return default(int);
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x1191400", Offset = "0x1191400", VA = "0x1191400")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x1191D90", Offset = "0x1191D90", VA = "0x1191D90")]
	public AmplifyColorBase()
	{
	}
}
[Token(Token = "0x2000258")]
[AttributeAttribute(Name = "ImageEffectAllowedInSceneView", RVA = "0xA02CAC", Offset = "0xA02CAC")]
[AttributeAttribute(Name = "ImageEffectTransformsToLDR", RVA = "0xA02CAC", Offset = "0xA02CAC")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA02CAC", Offset = "0xA02CAC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02CAC", Offset = "0xA02CAC")]
public sealed class AmplifyColorEffect : AmplifyColorBase
{
	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x1191F80", Offset = "0x1191F80", VA = "0x1191F80")]
	public AmplifyColorEffect()
	{
	}
}
[Token(Token = "0x2000259")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA02D18", Offset = "0xA02D18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02D18", Offset = "0xA02D18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02D18", Offset = "0xA02D18")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02D18", Offset = "0xA02D18")]
public class AmplifyColorRenderMask : AmplifyColorRenderMaskBase
{
	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x1191F84", Offset = "0x1191F84", VA = "0x1191F84")]
	public AmplifyColorRenderMask()
	{
	}
}
[Token(Token = "0x200025A")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA02DD8", Offset = "0xA02DD8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02DD8", Offset = "0xA02DD8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02DD8", Offset = "0xA02DD8")]
public class AmplifyColorRenderMaskBase : MonoBehaviour
{
	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA157E4", Offset = "0xA157E4")]
	public Color ClearColor;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA1581C", Offset = "0xA1581C")]
	public RenderLayer[] RenderLayers;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA15854", Offset = "0xA15854")]
	public bool DebugMask;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera referenceCamera;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera maskCamera;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AmplifyColorBase colorEffect;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int width;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int height;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture maskTexture;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Shader colorMaskShader;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool singlePassStereo;

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x1191FF8", Offset = "0x1191FF8", VA = "0x1191FF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x11921F0", Offset = "0x11921F0", VA = "0x11921F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x1192214", Offset = "0x1192214", VA = "0x1192214")]
	private void DestroyCamera()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x11922D8", Offset = "0x11922D8", VA = "0x11922D8")]
	private void DestroyRenderTextures()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x1192390", Offset = "0x1192390", VA = "0x1192390")]
	private void UpdateRenderTextures(bool singlePassStereo)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x119261C", Offset = "0x119261C", VA = "0x119261C")]
	private void UpdateCameraProperties()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x1192710", Offset = "0x1192710", VA = "0x1192710")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x1191F88", Offset = "0x1191F88", VA = "0x1191F88")]
	public AmplifyColorRenderMaskBase()
	{
	}
}
[Token(Token = "0x200025B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02E70", Offset = "0xA02E70")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02E70", Offset = "0xA02E70")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02E70", Offset = "0xA02E70")]
public class AmplifyColorTriggerProxy : AmplifyColorTriggerProxyBase
{
	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rigidBody;

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x1192CA4", Offset = "0x1192CA4", VA = "0x1192CA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x1192D60", Offset = "0x1192D60", VA = "0x1192D60")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x1192DE0", Offset = "0x1192DE0", VA = "0x1192DE0")]
	public AmplifyColorTriggerProxy()
	{
	}
}
[Token(Token = "0x200025C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02F20", Offset = "0xA02F20")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA02F20", Offset = "0xA02F20")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02F20", Offset = "0xA02F20")]
public class AmplifyColorTriggerProxy2D : AmplifyColorTriggerProxyBase
{
	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CircleCollider2D circleCollider;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody2D rigidBody;

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x1192DF0", Offset = "0x1192DF0", VA = "0x1192DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x1192EAC", Offset = "0x1192EAC", VA = "0x1192EAC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x1192F2C", Offset = "0x1192F2C", VA = "0x1192F2C")]
	public AmplifyColorTriggerProxy2D()
	{
	}
}
[Token(Token = "0x200025D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA02FD0", Offset = "0xA02FD0")]
public class AmplifyColorTriggerProxyBase : MonoBehaviour
{
	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Reference;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AmplifyColorBase OwnerEffect;

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x1192DE8", Offset = "0x1192DE8", VA = "0x1192DE8")]
	public AmplifyColorTriggerProxyBase()
	{
	}
}
[Token(Token = "0x200025E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03008", Offset = "0xA03008")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03008", Offset = "0xA03008")]
public class AmplifyColorVolume : AmplifyColorVolumeBase
{
	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x1192F34", Offset = "0x1192F34", VA = "0x1192F34")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x1193040", Offset = "0x1193040", VA = "0x1193040")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x119314C", Offset = "0x119314C", VA = "0x119314C")]
	public AmplifyColorVolume()
	{
	}
}
[Token(Token = "0x200025F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03090", Offset = "0xA03090")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03090", Offset = "0xA03090")]
public class AmplifyColorVolume2D : AmplifyColorVolumeBase
{
	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x11931C4", Offset = "0x11931C4", VA = "0x11931C4")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x11932D0", Offset = "0x11932D0", VA = "0x11932D0")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x11933DC", Offset = "0x11933DC", VA = "0x11933DC")]
	public AmplifyColorVolume2D()
	{
	}
}
[Token(Token = "0x2000260")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03118", Offset = "0xA03118")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03118", Offset = "0xA03118")]
public class AmplifyColorVolumeBase : MonoBehaviour
{
	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D LutTexture;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Exposure;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float EnterBlendTime;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Priority;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ShowInSceneView;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA1588C", Offset = "0xA1588C")]
	public VolumeEffectContainer EffectContainer;

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x11933E0", Offset = "0x11933E0", VA = "0x11933E0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x119361C", Offset = "0x119361C", VA = "0x119361C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x1193150", Offset = "0x1193150", VA = "0x1193150")]
	public AmplifyColorVolumeBase()
	{
	}
}
[Token(Token = "0x2000261")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03164", Offset = "0xA03164")]
public class ES2Init : MonoBehaviour
{
	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xEE5804", Offset = "0xEE5804", VA = "0xEE5804")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xEE6A88", Offset = "0xEE6A88", VA = "0xEE6A88")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xEE5808", Offset = "0xEE5808", VA = "0xEE5808")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xEE6E60", Offset = "0xEE6E60", VA = "0xEE6E60")]
	public ES2Init()
	{
	}
}
[Token(Token = "0x2000262")]
public class ES2UniqueID : MonoBehaviour
{
	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA1589C", Offset = "0xA1589C")]
	public int id;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefabName;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ES2UniqueID> uniqueIDList;

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xEE6E68", Offset = "0xEE6E68", VA = "0xEE6E68")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xEE6FC4", Offset = "0xEE6FC4", VA = "0xEE6FC4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xEE6EF4", Offset = "0xEE6EF4", VA = "0xEE6EF4")]
	private static int GenerateUniqueID()
	{
		return default(int);
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xEE7048", Offset = "0xEE7048", VA = "0xEE7048")]
	public static ES2UniqueID FindUniqueID(Transform t)
	{
		return null;
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xEE71CC", Offset = "0xEE71CC", VA = "0xEE71CC")]
	public static Transform FindTransform(int id)
	{
		return null;
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xEE7308", Offset = "0xEE7308", VA = "0xEE7308")]
	public ES2UniqueID()
	{
	}
}
[Token(Token = "0x2000263")]
public class UniqueGameLogic : MonoBehaviour
{
	[Token(Token = "0x20004BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04560", Offset = "0xA04560")]
	private sealed class <DestroyOrCreateRoutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delaySeconds;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float runEverySeconds;

		[Token(Token = "0x17000280")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0xE70860", Offset = "0xE70860", VA = "0xE70860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xE708C8", Offset = "0xE708C8", VA = "0xE708C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xE6FEC8", Offset = "0xE6FEC8", VA = "0xE6FEC8")]
		[DebuggerHidden]
		public <DestroyOrCreateRoutine>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xE6FF54", Offset = "0xE6FF54", VA = "0xE6FF54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xE6FF58", Offset = "0xE6FF58", VA = "0xE6FF58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xE70868", Offset = "0xE70868", VA = "0xE70868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04570", Offset = "0xA04570")]
	private sealed class <MakeChildRoutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delaySeconds;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float runEverySeconds;

		[Token(Token = "0x17000282")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0xE70BA8", Offset = "0xE70BA8", VA = "0xE70BA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0xE70C10", Offset = "0xE70C10", VA = "0xE70C10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xE6FEF4", Offset = "0xE6FEF4", VA = "0xE6FEF4")]
		[DebuggerHidden]
		public <MakeChildRoutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xE708D0", Offset = "0xE708D0", VA = "0xE708D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xE708D4", Offset = "0xE708D4", VA = "0xE708D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xE70BB0", Offset = "0xE70BB0", VA = "0xE70BB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04580", Offset = "0xA04580")]
	private sealed class <ScaleRoutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delaySeconds;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float runEverySeconds;

		[Token(Token = "0x17000284")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0xE70DF4", Offset = "0xE70DF4", VA = "0xE70DF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0xE70E5C", Offset = "0xE70E5C", VA = "0xE70E5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xE6FF20", Offset = "0xE6FF20", VA = "0xE6FF20")]
		[DebuggerHidden]
		public <ScaleRoutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xE70C18", Offset = "0xE70C18", VA = "0xE70C18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xE70C1C", Offset = "0xE70C1C", VA = "0xE70C1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xE70DFC", Offset = "0xE70DFC", VA = "0xE70DFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xE6FCD8", Offset = "0xE6FCD8", VA = "0xE6FCD8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xE6FD54", Offset = "0xE6FD54", VA = "0xE6FD54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FAF8", Offset = "0xA1FAF8")]
	public IEnumerator DestroyOrCreateRoutine(float delaySeconds, float runEverySeconds)
	{
		return null;
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xE6FE4C", Offset = "0xE6FE4C", VA = "0xE6FE4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FB5C", Offset = "0xA1FB5C")]
	public IEnumerator MakeChildRoutine(float delaySeconds, float runEverySeconds)
	{
		return null;
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xE6FDD0", Offset = "0xE6FDD0", VA = "0xE6FDD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FBC0", Offset = "0xA1FBC0")]
	public IEnumerator ScaleRoutine(float delaySeconds, float runEverySeconds)
	{
		return null;
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xE6FF4C", Offset = "0xE6FF4C", VA = "0xE6FF4C")]
	public UniqueGameLogic()
	{
	}
}
[Token(Token = "0x2000264")]
public class UniqueObjectManager : MonoBehaviour
{
	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] sceneObjects;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] prefabs;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<GameObject> createdObjects;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UniqueObjectManager mgr;

	[Token(Token = "0x17000114")]
	public static GameObject[] SceneObjects
	{
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xE70D80", Offset = "0xE70D80", VA = "0xE70D80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000115")]
	public static GameObject[] Prefabs
	{
		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xE70580", Offset = "0xE70580", VA = "0xE70580")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000116")]
	public static List<GameObject> CreatedObjects
	{
		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xE71128", Offset = "0xE71128", VA = "0xE71128")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xE705F4", Offset = "0xE705F4", VA = "0xE705F4")]
	public static GameObject InstantiatePrefab(string prefabName, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xE70F94", Offset = "0xE70F94", VA = "0xE70F94")]
	public static GameObject InstantiatePrefab(string prefabName)
	{
		return null;
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xE7029C", Offset = "0xE7029C", VA = "0xE7029C")]
	public static void DestroyObject(GameObject obj)
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xE70E64", Offset = "0xE70E64", VA = "0xE70E64")]
	public static GameObject FindPrefabWithName(string prefabName)
	{
		return null;
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xE710A0", Offset = "0xE710A0", VA = "0xE710A0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xE71190", Offset = "0xE71190", VA = "0xE71190")]
	public UniqueObjectManager()
	{
	}
}
[Token(Token = "0x2000265")]
public class UniqueSaveManager : MonoBehaviour
{
	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneObjectFile;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string createdObjectFile;

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xE7120C", Offset = "0xE7120C", VA = "0xE7120C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xE71518", Offset = "0xE71518", VA = "0xE71518")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xE71210", Offset = "0xE71210", VA = "0xE71210")]
	private void Save()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xE71A1C", Offset = "0xE71A1C", VA = "0xE71A1C")]
	private void SaveObject(GameObject obj, int i, string file)
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xE716A8", Offset = "0xE716A8", VA = "0xE716A8")]
	private void LoadObject(int i, string file)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xE71DB8", Offset = "0xE71DB8", VA = "0xE71DB8")]
	public UniqueSaveManager()
	{
	}
}
[Token(Token = "0x2000266")]
public class PrefabManager : MonoBehaviour
{
	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string filename;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int buttonPositionX;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> createdPrefabs;

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xEF2E3C", Offset = "0xEF2E3C", VA = "0xEF2E3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xEF2EC0", Offset = "0xEF2EC0", VA = "0xEF2EC0")]
	private void LoadAllPrefabs()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xEF2F84", Offset = "0xEF2F84", VA = "0xEF2F84")]
	private void LoadPrefab(int tag)
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xEF30C0", Offset = "0xEF30C0", VA = "0xEF30C0")]
	private void CreateRandomPrefab()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xEF3204", Offset = "0xEF3204", VA = "0xEF3204")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xEF33EC", Offset = "0xEF33EC", VA = "0xEF33EC")]
	private void OnApplicationPause(bool isPaused)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xEF3304", Offset = "0xEF3304", VA = "0xEF3304")]
	private void SavePrefab(GameObject prefabToSave, int tag)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xEF33F8", Offset = "0xEF33F8", VA = "0xEF33F8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xEF3638", Offset = "0xEF3638", VA = "0xEF3638")]
	public PrefabManager()
	{
	}
}
[Token(Token = "0x2000267")]
public class MyExampleScript : MonoBehaviour
{
	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] intArray;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string myString;

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xCB8DA4", Offset = "0xCB8DA4", VA = "0xCB8DA4")]
	public MyExampleScript()
	{
	}
}
[Token(Token = "0x2000268")]
public class UploadDownloadTexture : MonoBehaviour
{
	[Token(Token = "0x20004BE")]
	public enum Mode
	{
		[Token(Token = "0x4001D49")]
		Upload,
		[Token(Token = "0x4001D4A")]
		Download
	}

	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04590", Offset = "0xA04590")]
	private sealed class <Upload>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UploadDownloadTexture <>4__this;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D texture;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ES2Web <web>5__2;

		[Token(Token = "0x17000286")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0xE743BC", Offset = "0xE743BC", VA = "0xE743BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0xE74424", Offset = "0xE74424", VA = "0xE74424", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xE73AD4", Offset = "0xE73AD4", VA = "0xE73AD4")]
		[DebuggerHidden]
		public <Upload>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xE7422C", Offset = "0xE7422C", VA = "0xE7422C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xE74230", Offset = "0xE74230", VA = "0xE74230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xE743C4", Offset = "0xE743C4", VA = "0xE743C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA045A0", Offset = "0xA045A0")]
	private sealed class <Download>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UploadDownloadTexture <>4__this;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ES2Web <web>5__2;

		[Token(Token = "0x17000288")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BB4")]
			[Address(RVA = "0xE741BC", Offset = "0xE741BC", VA = "0xE741BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0xE74224", Offset = "0xE74224", VA = "0xE74224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xE73B00", Offset = "0xE73B00", VA = "0xE73B00")]
		[DebuggerHidden]
		public <Download>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xE73FB4", Offset = "0xE73FB4", VA = "0xE73FB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xE73FB8", Offset = "0xE73FB8", VA = "0xE73FB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xE741C4", Offset = "0xE741C4", VA = "0xE741C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA045B0", Offset = "0xA045B0")]
	private sealed class <Delete>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UploadDownloadTexture <>4__this;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ES2Web <web>5__2;

		[Token(Token = "0x1700028A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0xE73F44", Offset = "0xE73F44", VA = "0xE73F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0xE73FAC", Offset = "0xE73FAC", VA = "0xE73FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xE73B9C", Offset = "0xE73B9C", VA = "0xE73B9C")]
		[DebuggerHidden]
		public <Delete>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xE73DF8", Offset = "0xE73DF8", VA = "0xE73DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xE73DFC", Offset = "0xE73DFC", VA = "0xE73DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xE73F4C", Offset = "0xE73F4C", VA = "0xE73F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mode mode;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string url;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string filename;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string textureTag;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string webUsername;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string webPassword;

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xE737C0", Offset = "0xE737C0", VA = "0xE737C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xE739E8", Offset = "0xE739E8", VA = "0xE739E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FC24", Offset = "0xA1FC24")]
	private IEnumerator Upload(Texture2D texture)
	{
		return null;
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xE73A64", Offset = "0xE73A64", VA = "0xE73A64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FC88", Offset = "0xA1FC88")]
	private IEnumerator Download()
	{
		return null;
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xE73B2C", Offset = "0xE73B2C", VA = "0xE73B2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FCEC", Offset = "0xA1FCEC")]
	private IEnumerator Delete()
	{
		return null;
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xE73BC8", Offset = "0xE73BC8", VA = "0xE73BC8")]
	private ES2Settings CreateSettings()
	{
		return null;
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xE738AC", Offset = "0xE738AC", VA = "0xE738AC")]
	private Texture2D GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xE73C58", Offset = "0xE73C58", VA = "0xE73C58")]
	private void SetTexture(Texture2D texture)
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xE73D60", Offset = "0xE73D60", VA = "0xE73D60")]
	public UploadDownloadTexture()
	{
	}
}
[Token(Token = "0x2000269")]
public class ES2UserType_UnityEngineCanvasRenderer : ES2Type
{
	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xEE73D4", Offset = "0xEE73D4", VA = "0xEE73D4", Slot = "4")]
	public override void Write(object obj, ES2Writer writer)
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xEE7468", Offset = "0xEE7468", VA = "0xEE7468", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xEE74E4", Offset = "0xEE74E4", VA = "0xEE74E4", Slot = "6")]
	public override void Read(ES2Reader reader, object c)
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xEE6B3C", Offset = "0xEE6B3C", VA = "0xEE6B3C")]
	public ES2UserType_UnityEngineCanvasRenderer()
	{
	}
}
[Token(Token = "0x200026A")]
public class ES2UserType_UnityEngineLineRenderer : ES2Type
{
	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xEE7580", Offset = "0xEE7580", VA = "0xEE7580", Slot = "4")]
	public override void Write(object obj, ES2Writer writer)
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xEE7AA0", Offset = "0xEE7AA0", VA = "0xEE7AA0", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xEE7B1C", Offset = "0xEE7B1C", VA = "0xEE7B1C", Slot = "6")]
	public override void Read(ES2Reader reader, object c)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xEE6BC0", Offset = "0xEE6BC0", VA = "0xEE6BC0")]
	public ES2UserType_UnityEngineLineRenderer()
	{
	}
}
[Token(Token = "0x200026B")]
public class ES2UserType_UnityEngineRectTransform : ES2Type
{
	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xEE8020", Offset = "0xEE8020", VA = "0xEE8020", Slot = "4")]
	public override void Write(object obj, ES2Writer writer)
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xEE80B4", Offset = "0xEE80B4", VA = "0xEE80B4", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xEE8130", Offset = "0xEE8130", VA = "0xEE8130", Slot = "6")]
	public override void Read(ES2Reader reader, object c)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xEE6C44", Offset = "0xEE6C44", VA = "0xEE6C44")]
	public ES2UserType_UnityEngineRectTransform()
	{
	}
}
[Token(Token = "0x200026C")]
public class ES2UserType_UnityEngineUIText : ES2Type
{
	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xEE81CC", Offset = "0xEE81CC", VA = "0xEE81CC", Slot = "4")]
	public override void Write(object obj, ES2Writer writer)
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xEE8310", Offset = "0xEE8310", VA = "0xEE8310", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xEE838C", Offset = "0xEE838C", VA = "0xEE838C", Slot = "6")]
	public override void Read(ES2Reader reader, object c)
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xEE6CC8", Offset = "0xEE6CC8", VA = "0xEE6CC8")]
	public ES2UserType_UnityEngineUIText()
	{
	}
}
[Token(Token = "0x200026D")]
[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xA03174", Offset = "0xA03174")]
public sealed class ES2_AudioClip : ES2Type
{
	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xEE6D4C", Offset = "0xEE6D4C", VA = "0xEE6D4C")]
	public ES2_AudioClip()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xEE84D4", Offset = "0xEE84D4", VA = "0xEE84D4", Slot = "4")]
	public override void Write(object data, ES2Writer writer)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xEE8678", Offset = "0xEE8678", VA = "0xEE8678", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}
}
[Token(Token = "0x200026E")]
public sealed class ES2_GameObject : ES2Type
{
	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xEE6DDC", Offset = "0xEE6DDC", VA = "0xEE6DDC")]
	public ES2_GameObject()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xEE8840", Offset = "0xEE8840", VA = "0xEE8840", Slot = "4")]
	public override void Write(object data, ES2Writer writer)
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xEE8B24", Offset = "0xEE8B24", VA = "0xEE8B24", Slot = "6")]
	public override void Read(ES2Reader reader, object c)
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xEE8CAC", Offset = "0xEE8CAC", VA = "0xEE8CAC", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}
}
[Token(Token = "0x200026F")]
public sealed class ES2_RawTexture2D : ES2Type
{
	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xEE8D30", Offset = "0xEE8D30", VA = "0xEE8D30")]
	public ES2_RawTexture2D()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xEE8DC0", Offset = "0xEE8DC0", VA = "0xEE8DC0", Slot = "4")]
	public override void Write(object data, ES2Writer writer)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xEE8F48", Offset = "0xEE8F48", VA = "0xEE8F48", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xEE8FD4", Offset = "0xEE8FD4", VA = "0xEE8FD4", Slot = "6")]
	public override void Read(ES2Reader reader, object obj)
	{
	}
}
[Token(Token = "0x2000270")]
public class HerdSimController : MonoBehaviour
{
	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _roamingArea;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem _runPS;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem _deadPS;

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xEB2EDC", Offset = "0xEB2EDC", VA = "0xEB2EDC")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xEB2FC8", Offset = "0xEB2FC8", VA = "0xEB2FC8")]
	public HerdSimController()
	{
	}
}
[Token(Token = "0x2000271")]
public class HerdSimCore : MonoBehaviour
{
	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HerdSimController _controller;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _scanner;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _collider;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _model;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer _renderer;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _hitPoints;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int _type;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _minSize;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _avoidAngle;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _avoidDistance;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _avoidSpeed;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _stopDistance;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _rotateCounterR;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _rotateCounterL;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool _pushHalfTheTime;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _pushToggle;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _pushDistance;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _pushForce;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _scan;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 _roamingArea;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _walkSpeed;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _runSpeed;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _damping;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int _idleProbablity;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _runChance;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 _waypoint;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float _speed;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _targetSpeed;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int _mode;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 _startPosition;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _reachedWaypoint;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int _lerpCounter;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool _scared;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform _scaredOf;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool _eating;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform _food;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float detectFoodDistance;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AnimationClip foodAnimation;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public FLookAnimator mySpine;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float _groundCheckInterval;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string _groundTag;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 _ground;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Quaternion _groundRot;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool _grounded;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float _maxGroundAngle;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float _maxFall;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float _fakeGravity;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public LayerMask _herdLayerMask;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public HerdSimCore _leader;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Vector3 _leaderArea;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public int _leaderSize;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float _leaderAreaMultiplier;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int _maxHerdSize;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int _minHerdSize;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float _herdDistance;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int _herdSize;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool _dead;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Material _deadMaterial;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool _scaryCorpse;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public string _animIdle;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float _animIdleSpeed;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public string _animSleep;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float _animSleepSpeed;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public string _animWalk;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float _animWalkSpeed;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public string _animRun;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float _animRunSpeed;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public string _animDead;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float _animDeadSpeed;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float _idleToSleepSeconds;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float _sleepCounter;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private bool _idle;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private int _updateCounter;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public int _updateDivisor;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private int _updateSeed;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float _newDelta;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public bool _enabled;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public LayerMask _groundLayerMask;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public LayerMask _pushyLayerMask;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public string _herdSimLayerName;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private int _groundIndex;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private int _herdSimIndex;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Transform _thisTR;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public bool _lean;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public AnimationClip _leanLeftAnimation;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public AnimationClip _leanRightAnimation;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private AnimationState _leanLeft;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private AnimationState _leanRight;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float _leanRightTime;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private float _leanLeftTime;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private bool _avoiding;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
	private bool _avoidingLeft;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23A")]
	private bool _avoidingRight;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23B")]
	public bool foodLock;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float eatCrossFadeBlending;

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xEB2FD0", Offset = "0xEB2FD0", VA = "0xEB2FD0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xEB3954", Offset = "0xEB3954", VA = "0xEB3954")]
	private bool EatingRoutine()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xEB378C", Offset = "0xEB378C", VA = "0xEB378C")]
	private void LeanInit()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xEB3B0C", Offset = "0xEB3B0C", VA = "0xEB3B0C")]
	private void Lean()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xEB3E8C", Offset = "0xEB3E8C", VA = "0xEB3E8C")]
	public void Disable(bool disableModel, bool disableCollider)
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xEB3F98", Offset = "0xEB3F98", VA = "0xEB3F98")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xEB40C8", Offset = "0xEB40C8", VA = "0xEB40C8")]
	public void Damage(float d)
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xEB42EC", Offset = "0xEB42EC", VA = "0xEB42EC")]
	public void Effects()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xEB40E4", Offset = "0xEB40E4", VA = "0xEB40E4")]
	public void Death()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xEB4504", Offset = "0xEB4504", VA = "0xEB4504")]
	public void Corpse()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xEB4888", Offset = "0xEB4888", VA = "0xEB4888")]
	public void FindLeader()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xEB4D2C", Offset = "0xEB4D2C", VA = "0xEB4D2C")]
	public void Wander()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xEB3350", Offset = "0xEB3350", VA = "0xEB3350")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xEB3CFC", Offset = "0xEB3CFC", VA = "0xEB3CFC")]
	private float AngleAmount()
	{
		return default(float);
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xEB5228", Offset = "0xEB5228", VA = "0xEB5228")]
	public void AnimationHandler()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xEB46BC", Offset = "0xEB46BC", VA = "0xEB46BC")]
	public void Scare(Transform t)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xEB5584", Offset = "0xEB5584", VA = "0xEB5584")]
	public void EndScare()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xEB55B0", Offset = "0xEB55B0", VA = "0xEB55B0")]
	public void Food(Transform t)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xEB563C", Offset = "0xEB563C", VA = "0xEB563C")]
	public void Pushy()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xEB549C", Offset = "0xEB549C", VA = "0xEB549C")]
	public void UnFlock()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xEB59C8", Offset = "0xEB59C8", VA = "0xEB59C8")]
	public void WalkTimeOut()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xEB59F4", Offset = "0xEB59F4", VA = "0xEB59F4")]
	public void SpineSystem()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xEB5AFC", Offset = "0xEB5AFC", VA = "0xEB5AFC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xEB3480", Offset = "0xEB3480", VA = "0xEB3480")]
	public void GroundCheck()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xEB6F90", Offset = "0xEB6F90", VA = "0xEB6F90")]
	private void NotAvoiding()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xEB64D0", Offset = "0xEB64D0", VA = "0xEB64D0")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xEB6F9C", Offset = "0xEB6F9C", VA = "0xEB6F9C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xEB7414", Offset = "0xEB7414", VA = "0xEB7414")]
	public HerdSimCore()
	{
	}
}
[Token(Token = "0x2000272")]
public class HerdSimDisabler : MonoBehaviour
{
	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _checkDisableEverSeconds;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _checkEnableEverSeconds;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableModel;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool _disableCollider;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool _disableOnStart;

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xEB75CC", Offset = "0xEB75CC", VA = "0xEB75CC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xEB76B4", Offset = "0xEB76B4", VA = "0xEB76B4")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xEB7738", Offset = "0xEB7738", VA = "0xEB7738")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xEB78D4", Offset = "0xEB78D4", VA = "0xEB78D4")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xEB7A68", Offset = "0xEB7A68", VA = "0xEB7A68")]
	public HerdSimDisabler()
	{
	}
}
[Token(Token = "0x2000273")]
public class HerdSimScary : MonoBehaviour
{
	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HerdSimCore _chase;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] _scareType;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _canChase;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _scaryInterval;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask _herdLayerMask;

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xEB7A84", Offset = "0xEB7A84", VA = "0xEB7A84")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xEB7A88", Offset = "0xEB7A88", VA = "0xEB7A88")]
	public void Init()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xEB7B90", Offset = "0xEB7B90", VA = "0xEB7B90")]
	public void CheckChase()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xEB7BA8", Offset = "0xEB7BA8", VA = "0xEB7BA8")]
	public void BeScary()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xEB7EA0", Offset = "0xEB7EA0", VA = "0xEB7EA0")]
	public HerdSimScary()
	{
	}
}
[Token(Token = "0x2000274")]
public class FABRIK_IK : MonoBehaviour
{
	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Handle;

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xEE9470", Offset = "0xEE9470", VA = "0xEE9470")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xEE9474", Offset = "0xEE9474", VA = "0xEE9474")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xEE9478", Offset = "0xEE9478", VA = "0xEE9478")]
	public FABRIK_IK()
	{
	}
}
[Token(Token = "0x2000275")]
public class RunTimeCombineAndRelease : MonoBehaviour
{
	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleMeshCombine simpleMeshCombine;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float combineTime;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float releaseTime;

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xD6ABC0", Offset = "0xD6ABC0", VA = "0xD6ABC0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xD6AC18", Offset = "0xD6AC18", VA = "0xD6AC18")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xD6AD00", Offset = "0xD6AD00", VA = "0xD6AD00")]
	public void Combine()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xD6AD84", Offset = "0xD6AD84", VA = "0xD6AD84")]
	public void Release()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xD6AEA0", Offset = "0xD6AEA0", VA = "0xD6AEA0")]
	public RunTimeCombineAndRelease()
	{
	}
}
[Token(Token = "0x2000276")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03188", Offset = "0xA03188")]
public class SimpleMeshCombine : MonoBehaviour
{
	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] combinedGameOjects;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject combined;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string meshName;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _canGenerateLightmapUV;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int vCount;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool generateLightmapUV;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject copyTarget;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool destroyOldColliders;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool keepStructure;

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xCE16A8", Offset = "0xCE16A8", VA = "0xCE16A8")]
	public void EnableRenderers(bool e)
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xCE17F4", Offset = "0xCE17F4", VA = "0xCE17F4")]
	public MeshFilter[] FindEnabledMeshes()
	{
		return null;
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xCE1A5C", Offset = "0xCE1A5C", VA = "0xCE1A5C")]
	public void CombineMeshes()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xCE2698", Offset = "0xCE2698", VA = "0xCE2698")]
	public int Contains(ArrayList l, Material n)
	{
		return default(int);
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xCE27D8", Offset = "0xCE27D8", VA = "0xCE27D8")]
	public SimpleMeshCombine()
	{
	}
}
[Token(Token = "0x2000277")]
public class SimpleMeshCombineMaster : MonoBehaviour
{
	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool generateLightmapUV;

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xCE2838", Offset = "0xCE2838", VA = "0xCE2838")]
	public SimpleMeshCombineMaster()
	{
	}
}
[Token(Token = "0x2000278")]
public class MultiSpiral : MonoBehaviour
{
	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetStart;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetEnd;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationOffset;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool autoCalculateCircle;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int startEffects;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] spiralWithRotationArray;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] spiralArray;

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xCB8BC4", Offset = "0xCB8BC4", VA = "0xCB8BC4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xCB8CF4", Offset = "0xCB8CF4", VA = "0xCB8CF4")]
	public MultiSpiral()
	{
	}
}
[Token(Token = "0x2000279")]
public class SpiralGenerator : MonoBehaviour
{
	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color colorStart;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color colorEnd;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform targetStart;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform targetEnd;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float noise;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float noiseScale;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float noiseSpeed;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float LenghtOfLineRenderer;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool smooth;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lenghtResolutionMultiplier;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material lineMaterial;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float offsetMaterialSpeed;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float offsetYMaterialSpeed;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float stretchMaterial;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float stretchYMaterial;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float widthStart;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float widthEnd;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float rotateSpeed;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float rotationOffset;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float sineDepth;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float sineDepthFrequency;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float sineHeight;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float sineHeightFrequency;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float sineLenght;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float sineLenghtFrequency;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float sineGrowMultiplier;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve growCurve;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float sineLenghtSpeed;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float sineHeightSpeed;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float sineDepthSpeed;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool runOnceThenDisable;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform start;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform end;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float vertexCount;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool _bend;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float _bendMultiplier;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AnimationCurve bendCurve;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool runSpiral;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Material lineRendererMat;

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xCE9670", Offset = "0xCE9670", VA = "0xCE9670")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xCE9674", Offset = "0xCE9674", VA = "0xCE9674")]
	public void CreateSpiral()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xCE9984", Offset = "0xCE9984", VA = "0xCE9984")]
	public void Update()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xCE9F84", Offset = "0xCE9F84", VA = "0xCE9F84")]
	public void PositionSpiral()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xCE99BC", Offset = "0xCE99BC", VA = "0xCE99BC")]
	public void GenerateSpiral(float time)
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xCEA204", Offset = "0xCEA204", VA = "0xCEA204")]
	public SpiralGenerator()
	{
	}
}
[Token(Token = "0x200027A")]
public class uMouseOrbit : MonoBehaviour
{
	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int zoomRate;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float x;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float y;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool rot;

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x211322C", Offset = "0x211322C", VA = "0x211322C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x2113264", Offset = "0x2113264", VA = "0x2113264")]
	public void Update()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x211356C", Offset = "0x211356C", VA = "0x211356C")]
	public uMouseOrbit()
	{
	}
}
[Token(Token = "0x200027B")]
public class uSpectrumData : MonoBehaviour
{
	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float growSpeed;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useFrequency;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float growFrequency;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float growFrequencySpeed;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int channel;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int numSamples;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int freq;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioListener _audio;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpiralGenerator _spiral;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float multiBuffer;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float heightBuffer;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float depthBuffer;

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x211358C", Offset = "0x211358C", VA = "0x211358C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x2113630", Offset = "0x2113630", VA = "0x2113630")]
	public void Update()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x2113788", Offset = "0x2113788", VA = "0x2113788")]
	public uSpectrumData()
	{
	}
}
[Token(Token = "0x200027C")]
public class LODPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004C2")]
	public class ShowcaseObject
	{
		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AutomaticLOD m_automaticLOD;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_position;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_angles;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_description;

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xEBACC0", Offset = "0xEBACC0", VA = "0xEBACC0")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x20004C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA045C0", Offset = "0xA045C0")]
	private sealed class <ComputeLODWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODPreview <>4__this;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AutomaticLOD <automaticLOD>5__3;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x1700028C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0xEBAC50", Offset = "0xEBAC50", VA = "0xEBAC50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0xEBACB8", Offset = "0xEBACB8", VA = "0xEBACB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xEBA540", Offset = "0xEBA540", VA = "0xEBA540")]
		[DebuggerHidden]
		public <ComputeLODWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xEBA5EC", Offset = "0xEBA5EC", VA = "0xEBA5EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xEBA660", Offset = "0xEBA660", VA = "0xEBA660", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xEBA608", Offset = "0xEBA608", VA = "0xEBA608")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xEBAC58", Offset = "0xEBAC58", VA = "0xEBAC58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MouseSensitvity;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AutomaticLOD m_selectedAutomaticLOD;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nSelectedIndex;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_bWireframe;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fRotationSpeed;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fLastMouseX;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh m_newMesh;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_nLastProgress;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_strLastTitle;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_strLastMessage;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fVertexAmount;

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xEB8C5C", Offset = "0xEB8C5C", VA = "0xEB8C5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xEB8F9C", Offset = "0xEB8F9C", VA = "0xEB8F9C")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xEB906C", Offset = "0xEB906C", VA = "0xEB906C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xEB9500", Offset = "0xEB9500", VA = "0xEB9500")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xEB8DAC", Offset = "0xEB8DAC", VA = "0xEB8DAC")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xEBA39C", Offset = "0xEBA39C", VA = "0xEBA39C")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xEB92CC", Offset = "0xEB92CC", VA = "0xEB92CC")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xEBA31C", Offset = "0xEBA31C", VA = "0xEBA31C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FD50", Offset = "0xA1FD50")]
	private IEnumerator ComputeLODWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xEBA56C", Offset = "0xEBA56C", VA = "0xEBA56C")]
	public LODPreview()
	{
	}
}
[Token(Token = "0x200027D")]
public class LODSampleLODScene : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004C4")]
	public class SceneCamera
	{
		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera m_camera;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_near;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_far;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA1B148", Offset = "0xA1B148")]
		public Vector3 m_v3InitialCameraPosition;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA1B158", Offset = "0xA1B158")]
		public Vector3 m_v3ViewDir;

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xEBC4B4", Offset = "0xEBC4B4", VA = "0xEBC4B4")]
		public SceneCamera()
		{
		}
	}

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneCamera[] SceneCameras;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SceneCamera m_selectedCamera;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_bWireframe;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AutomaticLOD> m_sceneLODObjects;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_nMaxLODLevels;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fCurrentDistanceSlider;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_nCamMode;

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xEBAD38", Offset = "0xEBAD38", VA = "0xEBAD38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xEBB258", Offset = "0xEBB258", VA = "0xEBB258")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xEBB730", Offset = "0xEBB730", VA = "0xEBB730")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xEBB134", Offset = "0xEBB134", VA = "0xEBB134")]
	private void SetActiveCamera(int index)
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xEBB37C", Offset = "0xEBB37C", VA = "0xEBB37C")]
	private void UpdateCamera(float fPos)
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xEBAF64", Offset = "0xEBAF64", VA = "0xEBAF64")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xEBB4FC", Offset = "0xEBB4FC", VA = "0xEBB4FC")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xEBC4AC", Offset = "0xEBC4AC", VA = "0xEBC4AC")]
	public LODSampleLODScene()
	{
	}
}
[Token(Token = "0x200027E")]
public class LODSceneSelection : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004C5")]
	public class SceneOption
	{
		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_sceneName;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_sceneDisplayName;

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xEBC948", Offset = "0xEBC948", VA = "0xEBC948")]
		public SceneOption()
		{
		}
	}

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int BoxWidth;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int BoxHeight;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MarginH;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int MarginV;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SceneOption[] SceneOptions;

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xEBC4BC", Offset = "0xEBC4BC", VA = "0xEBC4BC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xEBC934", Offset = "0xEBC934", VA = "0xEBC934")]
	public LODSceneSelection()
	{
	}
}
[Token(Token = "0x200027F")]
public class AutomaticLOD : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004C6")]
	public enum EvalMode
	{
		[Token(Token = "0x4001D6E")]
		CameraDistance,
		[Token(Token = "0x4001D6F")]
		ScreenCoverage
	}

	[Serializable]
	[Token(Token = "0x20004C7")]
	public enum LevelsToGenerate
	{
		[Token(Token = "0x4001D71")]
		_1 = 1,
		[Token(Token = "0x4001D72")]
		_2,
		[Token(Token = "0x4001D73")]
		_3,
		[Token(Token = "0x4001D74")]
		_4,
		[Token(Token = "0x4001D75")]
		_5,
		[Token(Token = "0x4001D76")]
		_6
	}

	[Serializable]
	[Token(Token = "0x20004C8")]
	public enum SwitchMode
	{
		[Token(Token = "0x4001D78")]
		SwitchMesh,
		[Token(Token = "0x4001D79")]
		SwitchGameObject
	}

	[Serializable]
	[Token(Token = "0x20004C9")]
	public class LODLevelData
	{
		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_fScreenCoverage;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_fMaxCameraDistance;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_fMeshVerticesAmount;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_nColorEditorBarIndex;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh m_mesh;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_bUsesOriginalMesh;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_gameObject;

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x11973D0", Offset = "0x11973D0", VA = "0x11973D0")]
		public LODLevelData GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x11983CC", Offset = "0x11983CC", VA = "0x11983CC")]
		public LODLevelData()
		{
		}
	}

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA158AC", Offset = "0xA158AC")]
	public Mesh m_originalMesh;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA158BC", Offset = "0xA158BC")]
	public EvalMode m_evalMode;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA158CC", Offset = "0xA158CC")]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA158DC", Offset = "0xA158DC")]
	public string m_strAssetPath;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA158EC", Offset = "0xA158EC")]
	public float m_fMaxCameraDistance;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA158FC", Offset = "0xA158FC")]
	public int m_nColorEditorBarNewIndex;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA1590C", Offset = "0xA1590C")]
	public List<LODLevelData> m_listLODLevels;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA1591C", Offset = "0xA1591C")]
	public AutomaticLOD m_LODObjectRoot;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA1592C", Offset = "0xA1592C")]
	public List<AutomaticLOD> m_listDependentChildren;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private LevelsToGenerate m_levelsToGenerate;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SwitchMode m_switchMode;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA1598C", Offset = "0xA1598C")]
	private bool m_bLODDataDirty;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA159C4", Offset = "0xA159C4")]
	private AutomaticLOD m_LODObjectRootPersist;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_bUseAutomaticCameraLODSwitch;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int m_nCurrentLOD;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<Camera, int> m_cachedFrameLODLevel;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 m_localCenter;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3[] _corners;

	[Token(Token = "0x4001128")]
	private const int k_MaxLODChecksPerFrame = 4;

	[Token(Token = "0x4001129")]
	private const int k_MaxFrameCheckLoop = 100;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_currentCheckIndex;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int s_currentFrameCheckIndex;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int s_checkLoopLength;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int s_lastFrameComputedModulus;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int s_currentFrameInLoop;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_frameToCheck;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool b_performCheck;

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x1194D6C", Offset = "0x1194D6C", VA = "0x1194D6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x11954E8", Offset = "0x11954E8", VA = "0x11954E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x1195664", Offset = "0x1195664", VA = "0x1195664")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x1195B10", Offset = "0x1195B10", VA = "0x1195B10")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x1195C04", Offset = "0x1195C04", VA = "0x1195C04")]
	public static bool IsRootOrBelongsToLODTree(AutomaticLOD automaticLOD, AutomaticLOD root)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x1195D64", Offset = "0x1195D64", VA = "0x1195D64")]
	public int GetNumberOfLevelsToGenerate()
	{
		return default(int);
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x1195D6C", Offset = "0x1195D6C", VA = "0x1195D6C")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x1195D74", Offset = "0x1195D74", VA = "0x1195D74")]
	public bool IsRootAutomaticLOD()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x1195DE4", Offset = "0x1195DE4", VA = "0x1195DE4")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x1195E40", Offset = "0x1195E40", VA = "0x1195E40")]
	public bool HasLODDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x1195E48", Offset = "0x1195E48", VA = "0x1195E48")]
	public bool SetLODDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x1195E58", Offset = "0x1195E58", VA = "0x1195E58")]
	public int GetLODLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x1195EAC", Offset = "0x1195EAC", VA = "0x1195EAC")]
	public float ComputeScreenCoverage(Camera camera)
	{
		return default(float);
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x1195070", Offset = "0x1195070", VA = "0x1195070")]
	public Vector3 ComputeWorldCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x1196704", Offset = "0x1196704", VA = "0x1196704")]
	public float ComputeViewSpaceBounds(Vector3 v3CameraPos, Vector3 v3CameraDir, Vector3 v3CameraUp, out Vector3 v3Min, out Vector3 v3Max, out Vector3 v3Center)
	{
		return default(float);
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x1196CBC", Offset = "0x1196CBC", VA = "0x1196CBC")]
	public void SetAutomaticCameraLODSwitch(bool bEnabled)
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x1196D48", Offset = "0x1196D48", VA = "0x1196D48")]
	private static void SetAutomaticCameraLODSwitchRecursive(AutomaticLOD root, GameObject gameObject, bool bEnabled)
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x1196ECC", Offset = "0x1196ECC", VA = "0x1196ECC")]
	public void SetLODLevels(List<LODLevelData> listLODLevelData, EvalMode evalMode, float fMaxCameraDistance, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x1197018", Offset = "0x1197018", VA = "0x1197018")]
	private static void SetLODLevelsRecursive(AutomaticLOD root, GameObject gameObject)
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x1197824", Offset = "0x1197824", VA = "0x1197824")]
	public void AddLODLevel(int nLevel, bool bBefore, bool bCreateMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x11978D0", Offset = "0x11978D0", VA = "0x11978D0")]
	public static void AddLODLevelRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bBefore, bool bCreateMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x11983D4", Offset = "0x11983D4", VA = "0x11983D4")]
	public void RemoveLODLevel(int nLevel, bool bDeleteMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x1198478", Offset = "0x1198478", VA = "0x1198478")]
	public static void RemoveLODLevelRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bDeleteMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x1198988", Offset = "0x1198988", VA = "0x1198988")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x1198990", Offset = "0x1198990", VA = "0x1198990")]
	public void ComputeLODData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x11989D8", Offset = "0x11989D8", VA = "0x11989D8")]
	private void ComputeLODDataRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x1199334", Offset = "0x1199334", VA = "0x1199334")]
	public bool HasLODData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x11957F8", Offset = "0x11957F8", VA = "0x11957F8")]
	public int GetLODLevelUsingCamera(Camera currentCamera)
	{
		return default(int);
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x11993C8", Offset = "0x11993C8", VA = "0x11993C8")]
	public int GetCurrentLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x1195A7C", Offset = "0x1195A7C", VA = "0x1195A7C")]
	public void SwitchToLOD(int nLevel, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x11993D0", Offset = "0x11993D0", VA = "0x11993D0")]
	private static void SwitchToLODRecursive(AutomaticLOD root, GameObject gameObject, int nLODLevel, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x11999C4", Offset = "0x11999C4", VA = "0x11999C4")]
	public void ComputeAllLODMeshes(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x119A29C", Offset = "0x119A29C", VA = "0x119A29C")]
	public void ComputeLODMesh(int nLevel, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x1199B14", Offset = "0x1199B14", VA = "0x1199B14")]
	private static void ComputeLODMeshRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x119A340", Offset = "0x119A340", VA = "0x119A340")]
	public void RestoreOriginalMesh(bool bDeleteLODData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x119A3D4", Offset = "0x119A3D4", VA = "0x119A3D4")]
	private static void RestoreOriginalMeshRecursive(AutomaticLOD root, GameObject gameObject, bool bDeleteLODData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x119A78C", Offset = "0x119A78C", VA = "0x119A78C")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x119A818", Offset = "0x119A818", VA = "0x119A818")]
	private static bool HasOriginalMeshActiveRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x119AADC", Offset = "0x119AADC", VA = "0x119AADC")]
	public bool HasVertexData(int nLevel, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x119AB70", Offset = "0x119AB70", VA = "0x119AB70")]
	private static bool HasVertexDataRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x119AE28", Offset = "0x119AE28", VA = "0x119AE28")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x119AEC4", Offset = "0x119AEC4", VA = "0x119AEC4")]
	private static void GetOriginalVertexCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x119B098", Offset = "0x119B098", VA = "0x119B098")]
	public int GetCurrentVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x119B134", Offset = "0x119B134", VA = "0x119B134")]
	private static void GetCurrentVertexCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x119B414", Offset = "0x119B414", VA = "0x119B414")]
	public int GetLODVertexCount(int nLevel, bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x119B4C0", Offset = "0x119B4C0", VA = "0x119B4C0")]
	private static void GetLODVertexCountRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x119B77C", Offset = "0x119B77C", VA = "0x119B77C")]
	public void RemoveFromLODTree()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x11992A8", Offset = "0x11992A8", VA = "0x11992A8")]
	public void FreeLODData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x119B828", Offset = "0x119B828", VA = "0x119B828")]
	private static void FreeLODDataRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x1197468", Offset = "0x1197468", VA = "0x1197468")]
	private static Mesh CreateNewEmptyMesh(AutomaticLOD automaticLOD)
	{
		return null;
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x119BC84", Offset = "0x119BC84", VA = "0x119BC84")]
	private static GameObject CreateBasicObjectCopy(GameObject gameObject, Mesh mesh, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x1197554", Offset = "0x1197554", VA = "0x1197554")]
	private static void CheckForLODGameObjectSetup(AutomaticLOD root, AutomaticLOD automaticLOD, LODLevelData levelData, int level)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x119C114", Offset = "0x119C114", VA = "0x119C114")]
	private static Component CopyComponent(Component original, GameObject destination)
	{
		return null;
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x1196378", Offset = "0x1196378", VA = "0x1196378")]
	private void BuildCornerData(ref Vector3[] av3Corners, Bounds bounds)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x119542C", Offset = "0x119542C", VA = "0x119542C")]
	private bool IsDependent()
	{
		return default(bool);
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x119C3EC", Offset = "0x119C3EC", VA = "0x119C3EC")]
	public AutomaticLOD()
	{
	}
}
[Token(Token = "0x2000280")]
public class SimplifyMeshPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004CA")]
	public class ShowcaseObject
	{
		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshSimplify m_meshSimplify;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_position;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_angles;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_description;

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xCE5184", Offset = "0xCE5184", VA = "0xCE5184")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x20004CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA045D0", Offset = "0xA045D0")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimplifyMeshPreview <>4__this;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshSimplify <meshSimplify>5__3;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x1700028E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0xCE5114", Offset = "0xCE5114", VA = "0xCE5114", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0xCE517C", Offset = "0xCE517C", VA = "0xCE517C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xCE4998", Offset = "0xCE4998", VA = "0xCE4998")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xCE4A4C", Offset = "0xCE4A4C", VA = "0xCE4A4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xCE4AC0", Offset = "0xCE4AC0", VA = "0xCE4AC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xCE4A68", Offset = "0xCE4A68", VA = "0xCE4A68")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xCE511C", Offset = "0xCE511C", VA = "0xCE511C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MouseSensitvity;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nSelectedIndex;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_bWireframe;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fRotationSpeed;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fLastMouseX;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh m_newMesh;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_nLastProgress;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_strLastTitle;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_strLastMessage;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fVertexAmount;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_bGUIEnabled;

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xCE30BC", Offset = "0xCE30BC", VA = "0xCE30BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xCE33EC", Offset = "0xCE33EC", VA = "0xCE33EC")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xCE34BC", Offset = "0xCE34BC", VA = "0xCE34BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xCE396C", Offset = "0xCE396C", VA = "0xCE396C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xCE320C", Offset = "0xCE320C", VA = "0xCE320C")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xCE47F4", Offset = "0xCE47F4", VA = "0xCE47F4")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xCE3738", Offset = "0xCE3738", VA = "0xCE3738")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xCE4774", Offset = "0xCE4774", VA = "0xCE4774")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FDB4", Offset = "0xA1FDB4")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xCE49C4", Offset = "0xCE49C4", VA = "0xCE49C4")]
	public SimplifyMeshPreview()
	{
	}
}
[Token(Token = "0x2000281")]
public class MeshSimplify : MonoBehaviour
{
	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA159FC", Offset = "0xA159FC")]
	public Mesh m_originalMesh;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15A0C", Offset = "0xA15A0C")]
	public Mesh m_simplifiedMesh;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15A1C", Offset = "0xA15A1C")]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15A2C", Offset = "0xA15A2C")]
	public float m_fVertexAmount;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15A3C", Offset = "0xA15A3C")]
	public string m_strAssetPath;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15A4C", Offset = "0xA15A4C")]
	public MeshSimplify m_meshSimplifyRoot;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15A5C", Offset = "0xA15A5C")]
	public List<MeshSimplify> m_listDependentChildren;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15A6C", Offset = "0xA15A6C")]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15A7C", Offset = "0xA15A7C")]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15AB4", Offset = "0xA15AB4")]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15AEC", Offset = "0xA15AEC")]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15B24", Offset = "0xA15B24")]
	private bool m_bUseEdgeLength;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15B5C", Offset = "0xA15B5C")]
	private bool m_bUseCurvature;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15B94", Offset = "0xA15B94")]
	private bool m_bProtectTexture;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15BCC", Offset = "0xA15BCC")]
	private bool m_bLockBorder;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15C04", Offset = "0xA15C04")]
	private bool m_bDataDirty;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15C3C", Offset = "0xA15C3C")]
	private bool m_bExcludedFromTree;

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xCB12AC", Offset = "0xCB12AC", VA = "0xCB12AC")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xCB13A0", Offset = "0xCB13A0", VA = "0xCB13A0")]
	public static bool IsRootOrBelongsToTree(MeshSimplify meshSimplify, MeshSimplify root)
	{
		return default(bool);
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xCB1508", Offset = "0xCB1508", VA = "0xCB1508")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xCB1510", Offset = "0xCB1510", VA = "0xCB1510")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xCB156C", Offset = "0xCB156C", VA = "0xCB156C")]
	public bool HasDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xCB1574", Offset = "0xCB1574", VA = "0xCB1574")]
	public bool SetDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xCB1584", Offset = "0xCB1584", VA = "0xCB1584")]
	public bool HasNonMeshSimplifyGameObjectsInTree()
	{
		return default(bool);
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xCB15B4", Offset = "0xCB15B4", VA = "0xCB15B4")]
	private bool HasNonMeshSimplifyGameObjectsInTreeRecursive(MeshSimplify root, GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xCB16E8", Offset = "0xCB16E8", VA = "0xCB16E8")]
	private void ConfigureSimplifier()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xCB1894", Offset = "0xCB1894", VA = "0xCB1894")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xCB189C", Offset = "0xCB189C", VA = "0xCB189C")]
	public void ComputeData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xCB18E0", Offset = "0xCB18E0", VA = "0xCB18E0")]
	private static void ComputeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xCB21C4", Offset = "0xCB21C4", VA = "0xCB21C4")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xCB2298", Offset = "0xCB2298", VA = "0xCB2298")]
	public bool HasSimplifiedMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xCB2334", Offset = "0xCB2334", VA = "0xCB2334")]
	public void ComputeMesh(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xCB2378", Offset = "0xCB2378", VA = "0xCB2378")]
	private static void ComputeMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xCB28E8", Offset = "0xCB28E8", VA = "0xCB28E8")]
	public void AssignSimplifiedMesh(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xCB291C", Offset = "0xCB291C", VA = "0xCB291C")]
	private static void AssignSimplifiedMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xCB2B44", Offset = "0xCB2B44", VA = "0xCB2B44")]
	public void RestoreOriginalMesh(bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xCB2B88", Offset = "0xCB2B88", VA = "0xCB2B88")]
	private static void RestoreOriginalMeshRecursive(MeshSimplify root, GameObject gameObject, bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xCB2DF8", Offset = "0xCB2DF8", VA = "0xCB2DF8")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xCB2E2C", Offset = "0xCB2E2C", VA = "0xCB2E2C")]
	private static bool HasOriginalMeshActiveRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xCB30A8", Offset = "0xCB30A8", VA = "0xCB30A8")]
	public bool HasVertexData(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xCB30DC", Offset = "0xCB30DC", VA = "0xCB30DC")]
	private static bool HasVertexDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xCB3274", Offset = "0xCB3274", VA = "0xCB3274")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xCB32C0", Offset = "0xCB32C0", VA = "0xCB32C0")]
	private static void GetOriginalVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xCB344C", Offset = "0xCB344C", VA = "0xCB344C")]
	public int GetSimplifiedVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xCB3498", Offset = "0xCB3498", VA = "0xCB3498")]
	private static void GetSimplifiedVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xCB3624", Offset = "0xCB3624", VA = "0xCB3624")]
	public void RemoveFromTree()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xCB2190", Offset = "0xCB2190", VA = "0xCB2190")]
	public void FreeData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xCB36EC", Offset = "0xCB36EC", VA = "0xCB36EC")]
	private static void FreeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xCB27FC", Offset = "0xCB27FC", VA = "0xCB27FC")]
	private static Mesh CreateNewEmptyMesh(MeshSimplify meshSimplify)
	{
		return null;
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xCB3948", Offset = "0xCB3948", VA = "0xCB3948")]
	public MeshSimplify()
	{
	}
}
[Token(Token = "0x2000282")]
public class FrameRateLimiter : MonoBehaviour
{
	[Token(Token = "0x6001040")]
	[Address(RVA = "0xEA8598", Offset = "0xEA8598", VA = "0xEA8598")]
	private void Start()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xEA85D8", Offset = "0xEA85D8", VA = "0xEA85D8")]
	public FrameRateLimiter()
	{
	}
}
[Token(Token = "0x2000283")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA031C0", Offset = "0xA031C0")]
public class KillTimer : MonoBehaviour
{
	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float killDelay;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float killTimer;

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xEB8A18", Offset = "0xEB8A18", VA = "0xEB8A18")]
	private void Start()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xEB8A24", Offset = "0xEB8A24", VA = "0xEB8A24")]
	private void Update()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xEB8AD4", Offset = "0xEB8AD4", VA = "0xEB8AD4")]
	public KillTimer()
	{
	}
}
[Token(Token = "0x2000284")]
internal class TestBallSpawnScalar : MonoBehaviour, IVisPrefabSpawnedTarget
{
	[Token(Token = "0x6001045")]
	[Address(RVA = "0xDF7218", Offset = "0xDF7218", VA = "0xDF7218", Slot = "4")]
	public void OnSpawned(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xDF72C8", Offset = "0xDF72C8", VA = "0xDF72C8")]
	public TestBallSpawnScalar()
	{
	}
}
[Token(Token = "0x2000285")]
public abstract class VisBaseController : MonoBehaviour, IVisManagerTarget
{
	[Token(Token = "0x20004CC")]
	public static class Defaults
	{
		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int controllerNameCounter;

		[Token(Token = "0x4001D90")]
		public const string controllerName = "Default";

		[Token(Token = "0x4001D91")]
		public const bool limitIncreaseRate = false;

		[Token(Token = "0x4001D92")]
		public const float increaseRate = 1f;

		[Token(Token = "0x4001D93")]
		public const bool limitDecreaseRate = true;

		[Token(Token = "0x4001D94")]
		public const float decreaseRate = 1f;
	}

	[Token(Token = "0x4001155")]
	public const float mc_fTargetAdjustedDifferenceTime = 1f / 60f;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15C84", Offset = "0xA15C84")]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string controllerName;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool limitIncreaseRate;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float increaseRate;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool limitDecreaseRate;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float decreaseRate;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float m_fPreviousValue;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float m_fValue;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float m_fValueDifference;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float m_fAdjustedValueDifference;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_fMinValue;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_fMaxValue;

	[Token(Token = "0x17000117")]
	public VisManager Manager
	{
		[Token(Token = "0x6001047")]
		[Address(RVA = "0xE81508", Offset = "0xE81508", VA = "0xE81508", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001048")]
		[Address(RVA = "0xE81510", Offset = "0xE81510", VA = "0xE81510", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public string LastManagerName
	{
		[Token(Token = "0x6001049")]
		[Address(RVA = "0xE81908", Offset = "0xE81908", VA = "0xE81908", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000119")]
	public float MinValue
	{
		[Token(Token = "0x600104A")]
		[Address(RVA = "0xE81910", Offset = "0xE81910", VA = "0xE81910")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700011A")]
	public float MaxValue
	{
		[Token(Token = "0x600104B")]
		[Address(RVA = "0xE81918", Offset = "0xE81918", VA = "0xE81918")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xE81920", Offset = "0xE81920", VA = "0xE81920", Slot = "7")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xE819E8", Offset = "0xE819E8", VA = "0xE819E8", Slot = "8")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xE82238", Offset = "0xE82238", VA = "0xE82238", Slot = "9")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xE82658", Offset = "0xE82658", VA = "0xE82658", Slot = "10")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xE81F38", Offset = "0xE81F38", VA = "0xE81F38")]
	public bool ValidateManager(bool displayWarning)
	{
		return default(bool);
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xE821A4", Offset = "0xE821A4", VA = "0xE821A4")]
	public void EnsureRegistered()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xE826EC", Offset = "0xE826EC", VA = "0xE826EC")]
	public void Update()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xE82890", Offset = "0xE82890", VA = "0xE82890", Slot = "11")]
	public virtual float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xE82898", Offset = "0xE82898", VA = "0xE82898")]
	public float GetCurrentValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xE828A0", Offset = "0xE828A0", VA = "0xE828A0")]
	public float GetPreviousValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xE828A8", Offset = "0xE828A8", VA = "0xE828A8")]
	public float GetValueDifference()
	{
		return default(float);
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xE828B0", Offset = "0xE828B0", VA = "0xE828B0")]
	public float GetAdjustedValueDifference()
	{
		return default(float);
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xE828B8", Offset = "0xE828B8", VA = "0xE828B8", Slot = "12")]
	public virtual Rect DisplayDebugGUI(int x, int y, int barWidth, int barHeight, int separation, Texture debugTexture)
	{
		return default(Rect);
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xE82D2C", Offset = "0xE82D2C", VA = "0xE82D2C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xE82D8C", Offset = "0xE82D8C", VA = "0xE82D8C")]
	public static bool RestoreVisBaseControllerTarget(IVisBaseControllerTarget target)
	{
		return default(bool);
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xE83238", Offset = "0xE83238", VA = "0xE83238")]
	protected VisBaseController()
	{
	}
}
[Token(Token = "0x2000286")]
public interface IVisBaseControllerTarget
{
	[Token(Token = "0x1700011B")]
	VisBaseController Controller
	{
		[Token(Token = "0x600105C")]
		get;
		[Token(Token = "0x600105D")]
		set;
	}

	[Token(Token = "0x1700011C")]
	string LastControllerName
	{
		[Token(Token = "0x600105E")]
		get;
	}
}
[Token(Token = "0x2000287")]
public abstract class VisBaseModifier : MonoBehaviour, IVisManagerTarget, IVisBaseControllerTarget
{
	[Token(Token = "0x20004CD")]
	public static class Defaults
	{
	}

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15CCC", Offset = "0xA15CCC")]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VisBaseController controller;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15D14", Offset = "0xA15D14")]
	[SerializeField]
	private string m_szLastControllerName;

	[Token(Token = "0x1700011D")]
	public VisManager Manager
	{
		[Token(Token = "0x600105F")]
		[Address(RVA = "0xE832AC", Offset = "0xE832AC", VA = "0xE832AC", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001060")]
		[Address(RVA = "0xE832B4", Offset = "0xE832B4", VA = "0xE832B4", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	public string LastManagerName
	{
		[Token(Token = "0x6001061")]
		[Address(RVA = "0xE83358", Offset = "0xE83358", VA = "0xE83358", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public VisBaseController Controller
	{
		[Token(Token = "0x6001062")]
		[Address(RVA = "0xE83360", Offset = "0xE83360", VA = "0xE83360", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001063")]
		[Address(RVA = "0xE83368", Offset = "0xE83368", VA = "0xE83368", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public string LastControllerName
	{
		[Token(Token = "0x6001064")]
		[Address(RVA = "0xE83408", Offset = "0xE83408", VA = "0xE83408", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xE83410", Offset = "0xE83410", VA = "0xE83410", Slot = "10")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xE83414", Offset = "0xE83414", VA = "0xE83414", Slot = "11")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xE83438", Offset = "0xE83438", VA = "0xE83438", Slot = "12")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xE8343C", Offset = "0xE8343C", VA = "0xE8343C")]
	public void Update()
	{
	}

	[Token(Token = "0x6001069")]
	public abstract void OnValueUpdated(float current, float previous, float difference, float adjustedDifference);

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xE834F8", Offset = "0xE834F8", VA = "0xE834F8")]
	protected VisBaseModifier()
	{
	}
}
[Token(Token = "0x2000288")]
public abstract class VisBasePropertyModifier : VisBaseModifier
{
	[Token(Token = "0x20004CE")]
	public new static class Defaults
	{
		[Token(Token = "0x4001D95")]
		public const ControllerSourceValue controllerSourceValue = ControllerSourceValue.Current;

		[Token(Token = "0x4001D96")]
		public const float minControllerValue = 0f;

		[Token(Token = "0x4001D97")]
		public const float maxControllerValue = 1f;

		[Token(Token = "0x4001D98")]
		public const float minPropertyValue = -1f;

		[Token(Token = "0x4001D99")]
		public const float maxPropertyValue = 1f;

		[Token(Token = "0x4001D9A")]
		public const bool invertValue = false;

		[Token(Token = "0x4001D9B")]
		public const bool randomValue = true;
	}

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ControllerSourceValue controllerSourceValue;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minControllerValue;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxControllerValue;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minPropertyValue;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxPropertyValue;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool invertValue;

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xE80D30", Offset = "0xE80D30", VA = "0xE80D30", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xE80D48", Offset = "0xE80D48", VA = "0xE80D48", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xE83500", Offset = "0xE83500", VA = "0xE83500", Slot = "13")]
	public override void OnValueUpdated(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x600106E")]
	public abstract void SetProperty(float propertyValue);

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xE81010", Offset = "0xE81010", VA = "0xE81010")]
	protected VisBasePropertyModifier()
	{
	}
}
[Token(Token = "0x2000289")]
public abstract class VisBasePropertyTrigger : VisBaseTrigger
{
	[Token(Token = "0x20004CF")]
	public new static class Defaults
	{
		[Token(Token = "0x4001D9C")]
		public const ControllerSourceValue controllerSourceValue = ControllerSourceValue.Current;

		[Token(Token = "0x4001D9D")]
		public const float minControllerValue = 0f;

		[Token(Token = "0x4001D9E")]
		public const float maxControllerValue = 1f;

		[Token(Token = "0x4001D9F")]
		public const float minPropertyValue = -1f;

		[Token(Token = "0x4001DA0")]
		public const float maxPropertyValue = 1f;

		[Token(Token = "0x4001DA1")]
		public const bool invertValue = false;

		[Token(Token = "0x4001DA2")]
		public const bool randomValue = true;

		[Token(Token = "0x4001DA3")]
		public const bool limitIncreaseRate = false;

		[Token(Token = "0x4001DA4")]
		public const float increaseRate = 1f;

		[Token(Token = "0x4001DA5")]
		public const bool limitDecreaseRate = false;

		[Token(Token = "0x4001DA6")]
		public const float decreaseRate = 1f;

		[Token(Token = "0x4001DA7")]
		public const bool returnToRest = false;

		[Token(Token = "0x4001DA8")]
		public const float restValue = 0f;
	}

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ControllerSourceValue controllerSourceValue;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minControllerValue;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxControllerValue;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minPropertyValue;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxPropertyValue;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool invertValue;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool randomValue;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool limitIncreaseRate;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float increaseRate;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool limitDecreaseRate;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float decreaseRate;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool returnToRest;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float restValue;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected float m_fTargetPropertyValue;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected float m_fCurrentPropertyValue;

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xE810BC", Offset = "0xE810BC", VA = "0xE810BC", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xE810FC", Offset = "0xE810FC", VA = "0xE810FC", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xE83558", Offset = "0xE83558", VA = "0xE83558", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xE837E4", Offset = "0xE837E4", VA = "0xE837E4", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001074")]
	public abstract void SetProperty(float propertyValue);

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xE814BC", Offset = "0xE814BC", VA = "0xE814BC")]
	protected VisBasePropertyTrigger()
	{
	}
}
[Token(Token = "0x200028A")]
public abstract class VisBaseTrigger : MonoBehaviour, IVisManagerTarget, IVisBaseControllerTarget
{
	[Token(Token = "0x20004D0")]
	public static class Defaults
	{
		[Token(Token = "0x4001DA9")]
		public const TriggerType triggerType = TriggerType.GreaterThanChangeThreshold;

		[Token(Token = "0x4001DAA")]
		public const float triggerThreshold = 0.1f;

		[Token(Token = "0x4001DAB")]
		public const float triggerReactivateDelay = 0.25f;

		[Token(Token = "0x4001DAC")]
		public const float triggerRandomReactivateDelay = 0f;
	}

	[Token(Token = "0x20004D1")]
	public enum TriggerType
	{
		[Token(Token = "0x4001DAE")]
		None,
		[Token(Token = "0x4001DAF")]
		LessThanValueThreshold,
		[Token(Token = "0x4001DB0")]
		GreaterThanValueThreshold,
		[Token(Token = "0x4001DB1")]
		LessThanChangeThreshold,
		[Token(Token = "0x4001DB2")]
		GreaterThanChangeThreshold
	}

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15D5C", Offset = "0xA15D5C")]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VisBaseController controller;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15DA4", Offset = "0xA15DA4")]
	[SerializeField]
	private string m_szLastControllerName;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TriggerType triggerType;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float triggerThreshold;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float triggerReactivateDelay;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float triggerRandomReactivateDelay;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float m_fTriggerDelayTimer;

	[Token(Token = "0x17000121")]
	public VisManager Manager
	{
		[Token(Token = "0x6001076")]
		[Address(RVA = "0xE838BC", Offset = "0xE838BC", VA = "0xE838BC", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001077")]
		[Address(RVA = "0xE838C4", Offset = "0xE838C4", VA = "0xE838C4", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public string LastManagerName
	{
		[Token(Token = "0x6001078")]
		[Address(RVA = "0xE83968", Offset = "0xE83968", VA = "0xE83968", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000123")]
	public VisBaseController Controller
	{
		[Token(Token = "0x6001079")]
		[Address(RVA = "0xE83970", Offset = "0xE83970", VA = "0xE83970", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x600107A")]
		[Address(RVA = "0xE83978", Offset = "0xE83978", VA = "0xE83978", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public string LastControllerName
	{
		[Token(Token = "0x600107B")]
		[Address(RVA = "0xE83A18", Offset = "0xE83A18", VA = "0xE83A18", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xE8087C", Offset = "0xE8087C", VA = "0xE8087C", Slot = "10")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xE80898", Offset = "0xE80898", VA = "0xE80898", Slot = "11")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xE83A20", Offset = "0xE83A20", VA = "0xE83A20", Slot = "12")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xE83668", Offset = "0xE83668", VA = "0xE83668", Slot = "13")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6001080")]
	public abstract void OnTriggered(float current, float previous, float difference, float adjustedDifference);

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xE80C30", Offset = "0xE80C30", VA = "0xE80C30")]
	protected VisBaseTrigger()
	{
	}
}
[Token(Token = "0x200028B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA031F8", Offset = "0xA031F8")]
public class VisFrequencyController : VisBaseController, IVisDataGroupTarget
{
	[Token(Token = "0x20004D2")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DB3")]
		public const VisDataValueType subValueType = VisDataValueType.Sum;

		[Token(Token = "0x4001DB4")]
		public const VisDataValueType finalValueType = VisDataValueType.Average;
	}

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private VisDataGroup dataGroup;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15DEC", Offset = "0xA15DEC")]
	[SerializeField]
	private string m_szLastDataGroupName;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VisDataValueType subValueType;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public VisDataValueType finalValueType;

	[Token(Token = "0x17000125")]
	public VisDataGroup DataGroup
	{
		[Token(Token = "0x6001082")]
		[Address(RVA = "0xE86BBC", Offset = "0xE86BBC", VA = "0xE86BBC", Slot = "13")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001083")]
		[Address(RVA = "0xE86BC4", Offset = "0xE86BC4", VA = "0xE86BC4", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public string LastDataGroupName
	{
		[Token(Token = "0x6001084")]
		[Address(RVA = "0xE86C64", Offset = "0xE86C64", VA = "0xE86C64", Slot = "15")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xE86C6C", Offset = "0xE86C6C", VA = "0xE86C6C", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xE86C98", Offset = "0xE86C98", VA = "0xE86C98", Slot = "9")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xE86DC4", Offset = "0xE86DC4", VA = "0xE86DC4", Slot = "11")]
	public override float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xE86E5C", Offset = "0xE86E5C", VA = "0xE86E5C", Slot = "12")]
	public override Rect DisplayDebugGUI(int x, int y, int barWidth, int barHeight, int separation, Texture debugTexture)
	{
		return default(Rect);
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xE87518", Offset = "0xE87518", VA = "0xE87518")]
	public VisFrequencyController()
	{
	}
}
[Token(Token = "0x200028C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03230", Offset = "0xA03230")]
public class VisRandomController : VisBaseController
{
	[Token(Token = "0x20004D3")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DB5")]
		public const float delayTime = 1f;
	}

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float delayTime;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_fCurrentRandomValue;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_fNewValueTimer;

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x210C978", Offset = "0x210C978", VA = "0x210C978", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x210C980", Offset = "0x210C980", VA = "0x210C980", Slot = "9")]
	public override void Start()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x210C988", Offset = "0x210C988", VA = "0x210C988", Slot = "11")]
	public override float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x210C9EC", Offset = "0x210C9EC", VA = "0x210C9EC")]
	public VisRandomController()
	{
	}
}
[Token(Token = "0x200028D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03268", Offset = "0xA03268")]
public class VisSineWaveController : VisBaseController
{
	[Token(Token = "0x20004D4")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DB6")]
		public const float speedScalar = 1f;
	}

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float speedScalar;

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x210C9FC", Offset = "0x210C9FC", VA = "0x210C9FC", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x210CA28", Offset = "0x210CA28", VA = "0x210CA28", Slot = "9")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x210CA30", Offset = "0x210CA30", VA = "0x210CA30", Slot = "11")]
	public override float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x210CAC0", Offset = "0x210CAC0", VA = "0x210CAC0")]
	public VisSineWaveController()
	{
	}
}
[Token(Token = "0x200028E")]
public class VisDataContainer
{
	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float average;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float previousAverage;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float averageDifference;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float median;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float previousMedian;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float medianDifference;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sum;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float previousSum;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sumDifference;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minimum;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float previousMinimum;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minimumDifference;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maximum;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float previousMaximum;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maximumDifference;

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xE83A24", Offset = "0xE83A24", VA = "0xE83A24")]
	public float GetValue(VisDataValueType valueType)
	{
		return default(float);
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xE83A70", Offset = "0xE83A70", VA = "0xE83A70")]
	public float GetPreviousValue(VisDataValueType valueType)
	{
		return default(float);
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xE83ABC", Offset = "0xE83ABC", VA = "0xE83ABC")]
	public float GetValueDifference(VisDataValueType valueType)
	{
		return default(float);
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xE83B08", Offset = "0xE83B08", VA = "0xE83B08")]
	public void UpdatePreviousValues()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xE83B34", Offset = "0xE83B34", VA = "0xE83B34")]
	public void ResetCurrentValues()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xE83B5C", Offset = "0xE83B5C", VA = "0xE83B5C")]
	public void ApplyBoostAndCutoff(float boost, float cutoff)
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xE83D30", Offset = "0xE83D30", VA = "0xE83D30")]
	public void UpdateValueDifferences()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xE83D70", Offset = "0xE83D70", VA = "0xE83D70")]
	public VisDataContainer()
	{
	}
}
[Token(Token = "0x200028F")]
public enum VisDataValueType
{
	[Token(Token = "0x400119D")]
	Average,
	[Token(Token = "0x400119E")]
	Median,
	[Token(Token = "0x400119F")]
	Sum,
	[Token(Token = "0x40011A0")]
	Minimum,
	[Token(Token = "0x40011A1")]
	Maximum
}
[Token(Token = "0x2000290")]
public enum VisDataSource
{
	[Token(Token = "0x40011A3")]
	Raw,
	[Token(Token = "0x40011A4")]
	Spectrum
}
[Token(Token = "0x2000291")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA032A0", Offset = "0xA032A0")]
public sealed class VisDataGroup : MonoBehaviour, IVisManagerTarget
{
	[Token(Token = "0x20004D5")]
	public static class Defaults
	{
		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int dataGroupNameCounter;

		[Token(Token = "0x4001DB8")]
		public const string dataGroupName = "Default";

		[Token(Token = "0x4001DB9")]
		public const VisDataSource dataSource = VisDataSource.Spectrum;

		[Token(Token = "0x4001DBA")]
		public const int numberSubDataGroups = 5;

		[Token(Token = "0x4001DBB")]
		public const int frequencyRangeStartIndex = 0;

		[Token(Token = "0x4001DBC")]
		public const int frequencyRangeEndIndex = 256;

		[Token(Token = "0x4001DBD")]
		public const float boost = 1f;

		[Token(Token = "0x4001DBE")]
		public const float cutoff = 1f;
	}

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15E34", Offset = "0xA15E34")]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string dataGroupName;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VisDataSource dataSource;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int numberSubDataGroups;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int frequencyRangeStartIndex;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int frequencyRangeEndIndex;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float boost;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float cutoff;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color debugColor;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VisDataContainer[] m_aoDataContainers;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<VisSubDataGroup> m_oSubDataGroups;

	[Token(Token = "0x17000127")]
	public VisManager Manager
	{
		[Token(Token = "0x600109A")]
		[Address(RVA = "0xE83D78", Offset = "0xE83D78", VA = "0xE83D78", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600109B")]
		[Address(RVA = "0xE83D80", Offset = "0xE83D80", VA = "0xE83D80", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public string LastManagerName
	{
		[Token(Token = "0x600109C")]
		[Address(RVA = "0xE845AC", Offset = "0xE845AC", VA = "0xE845AC", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xE845B4", Offset = "0xE845B4", VA = "0xE845B4")]
	public void Reset()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xE84678", Offset = "0xE84678", VA = "0xE84678")]
	public void Awake()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xE84BC0", Offset = "0xE84BC0", VA = "0xE84BC0")]
	public void Start()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xE852A8", Offset = "0xE852A8", VA = "0xE852A8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xE848C0", Offset = "0xE848C0", VA = "0xE848C0")]
	public bool ValidateManager(bool displayWarning)
	{
		return default(bool);
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xE84B2C", Offset = "0xE84B2C", VA = "0xE84B2C")]
	public void EnsureRegistered()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xE8533C", Offset = "0xE8533C", VA = "0xE8533C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xE85754", Offset = "0xE85754", VA = "0xE85754")]
	public float GetValue(VisDataValueType finalValueType, VisDataValueType subValueType)
	{
		return default(float);
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xE857DC", Offset = "0xE857DC", VA = "0xE857DC")]
	public float GetPreviousValue(VisDataValueType finalValueType, VisDataValueType subValueType)
	{
		return default(float);
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xE85864", Offset = "0xE85864", VA = "0xE85864")]
	public float GetValueDifference(VisDataValueType finalValueType, VisDataValueType subValueType)
	{
		return default(float);
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xE858EC", Offset = "0xE858EC", VA = "0xE858EC")]
	public Rect DisplayDebugGUI(int x, int y, int barWidth, int barHeight, int separation, Texture debugTexture)
	{
		return default(Rect);
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xE86368", Offset = "0xE86368", VA = "0xE86368", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xE863C8", Offset = "0xE863C8", VA = "0xE863C8")]
	public static bool RestoreVisDataGroupTarget(IVisDataGroupTarget target)
	{
		return default(bool);
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xE86874", Offset = "0xE86874", VA = "0xE86874")]
	public VisDataGroup()
	{
	}
}
[Token(Token = "0x2000292")]
public interface IVisDataGroupTarget
{
	[Token(Token = "0x17000129")]
	VisDataGroup DataGroup
	{
		[Token(Token = "0x60010AB")]
		get;
		[Token(Token = "0x60010AC")]
		set;
	}

	[Token(Token = "0x1700012A")]
	string LastDataGroupName
	{
		[Token(Token = "0x60010AD")]
		get;
	}
}
[Token(Token = "0x2000293")]
public sealed class VisSubDataGroup : VisDataContainer
{
	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int frequencyRangeStartIndex;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int frequencyRangeEndIndex;

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x210CFFC", Offset = "0x210CFFC", VA = "0x210CFFC")]
	public VisSubDataGroup(int startIndex, int endIndex)
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x210D03C", Offset = "0x210D03C", VA = "0x210D03C")]
	public void Update(float[] spectrum)
	{
	}
}
[Token(Token = "0x2000294")]
public interface IVisModifierTarget
{
	[Token(Token = "0x60010B0")]
	void OnValueUpdated(float current, float previous, float difference, float adjustedDifference);
}
[Token(Token = "0x2000295")]
public interface IVisPrefabSpawnedTarget
{
	[Token(Token = "0x60010B1")]
	void OnSpawned(float current, float previous, float difference, float adjustedDifference);
}
[Token(Token = "0x2000296")]
public interface IVisTriggerTarget
{
	[Token(Token = "0x60010B2")]
	void OnTriggered(float current, float previous, float difference, float adjustedDifference);
}
[Token(Token = "0x2000297")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA032D8", Offset = "0xA032D8")]
public sealed class VisManager : MonoBehaviour
{
	[Token(Token = "0x20004D6")]
	public static class Defaults
	{
		[Token(Token = "0x4001DBF")]
		public const Channel channel = Channel.Left;

		[Token(Token = "0x4001DC0")]
		public const WindowSize windowSize = WindowSize._1024;

		[Token(Token = "0x4001DC1")]
		public const FFTWindow windowType = FFTWindow.Hamming;

		[Token(Token = "0x4001DC2")]
		public const bool useAudioListener = false;

		[Token(Token = "0x4001DC3")]
		public const bool displaySpectrumDebug = false;

		[Token(Token = "0x4001DC4")]
		public const bool displayDataGroupDebug = false;

		[Token(Token = "0x4001DC5")]
		public const bool displayControllerDebug = false;

		[Token(Token = "0x4001DC6")]
		public const int debugSpectrumBarWidth = 1;

		[Token(Token = "0x4001DC7")]
		public const int debugSpectrumBarHeight = 80;

		[Token(Token = "0x4001DC8")]
		public const int debugRawAudioBarHeight = 40;

		[Token(Token = "0x4001DC9")]
		public const int debugDataGroupBarWidth = 4;

		[Token(Token = "0x4001DCA")]
		public const int debugDataGroupBarHeight = 40;

		[Token(Token = "0x4001DCB")]
		public const int debugControllerBarWidth = 150;

		[Token(Token = "0x4001DCC")]
		public const int debugControllerBarHeight = 6;

		[Token(Token = "0x4001DCD")]
		public const int debugSeparation = 5;
	}

	[Token(Token = "0x20004D7")]
	public enum WindowSize
	{
		[Token(Token = "0x4001DCF")]
		_64 = 0x40,
		[Token(Token = "0x4001DD0")]
		_128 = 0x80,
		[Token(Token = "0x4001DD1")]
		_256 = 0x100,
		[Token(Token = "0x4001DD2")]
		_512 = 0x200,
		[Token(Token = "0x4001DD3")]
		_1024 = 0x400,
		[Token(Token = "0x4001DD4")]
		_2048 = 0x800,
		[Token(Token = "0x4001DD5")]
		_4096 = 0x1000,
		[Token(Token = "0x4001DD6")]
		_8192 = 0x2000
	}

	[Token(Token = "0x20004D8")]
	public enum Channel
	{
		[Token(Token = "0x4001DD8")]
		Left,
		[Token(Token = "0x4001DD9")]
		Right,
		[Token(Token = "0x4001DDA")]
		Average,
		[Token(Token = "0x4001DDB")]
		Min,
		[Token(Token = "0x4001DDC")]
		Max
	}

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Channel channel;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WindowSize windowSize;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FFTWindow windowType;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool displaySpectrumDebug;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool displayDataGroupDebug;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool displayControllerDebug;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int debugSpectrumBarWidth;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int debugSpectrumBarHeight;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int debugRawAudioBarHeight;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int debugDataGroupBarWidth;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int debugDataGroupBarHeight;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int debugControllerBarWidth;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int debugControllerBarHeight;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int debugSeparation;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture debugTexture;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] m_afSpectrumData;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] m_afRawAudioData;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] m_afAuxiliaryData;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<VisDataGroup> m_oDataGroups;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<VisBaseController> m_oControllers;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_fMaxDebugValue;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int m_nFrequencyRange;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_fFrequencyResolution;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool m_bUseAudioListener;

	[Token(Token = "0x1700012B")]
	public ReadOnlyCollection<VisDataGroup> DataGroups
	{
		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xE867EC", Offset = "0xE867EC", VA = "0xE867EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012C")]
	public ReadOnlyCollection<VisBaseController> Controllers
	{
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xE831B0", Offset = "0xE831B0", VA = "0xE831B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012D")]
	public float FrequencyResolution
	{
		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xE87834", Offset = "0xE87834", VA = "0xE87834")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xE8783C", Offset = "0xE8783C", VA = "0xE8783C")]
	public void Reset()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xE8787C", Offset = "0xE8787C", VA = "0xE8787C")]
	public void Start()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xE87CE8", Offset = "0xE87CE8", VA = "0xE87CE8")]
	public void SetAudioSource(AudioSource _audioSource)
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xE87BD8", Offset = "0xE87BD8", VA = "0xE87BD8")]
	public void CalculateFrequencyResolution()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xE87CF0", Offset = "0xE87CF0", VA = "0xE87CF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xE83F6C", Offset = "0xE83F6C", VA = "0xE83F6C")]
	public void AddDataGroup(VisDataGroup dataGroup)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xE816FC", Offset = "0xE816FC", VA = "0xE816FC")]
	public void AddController(VisBaseController controller)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xE83EA0", Offset = "0xE83EA0", VA = "0xE83EA0")]
	public void RemoveDataGroup(VisDataGroup dataGroup)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xE81630", Offset = "0xE81630", VA = "0xE81630")]
	public void RemoveController(VisBaseController controller)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xE888A4", Offset = "0xE888A4", VA = "0xE888A4")]
	public void ClearDataGroups()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xE888FC", Offset = "0xE888FC", VA = "0xE888FC")]
	public void ClearControllers()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xE88954", Offset = "0xE88954", VA = "0xE88954")]
	public float[] GetSpectrumData()
	{
		return null;
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xE8895C", Offset = "0xE8895C", VA = "0xE8895C")]
	public float[] GetRawAudioData()
	{
		return null;
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xE88494", Offset = "0xE88494", VA = "0xE88494")]
	public VisDataGroup GetDataGroupByName(string dataGroupName)
	{
		return null;
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xE8869C", Offset = "0xE8869C", VA = "0xE8869C")]
	public VisBaseController GetControllerByName(string controllerName)
	{
		return null;
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xE8877C", Offset = "0xE8877C", VA = "0xE8877C")]
	public string EnsureUniqueControllerName(string name)
	{
		return null;
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xE88574", Offset = "0xE88574", VA = "0xE88574")]
	public string EnsureUniqueDataGroupName(string name)
	{
		return null;
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xE88964", Offset = "0xE88964", VA = "0xE88964")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xE893D4", Offset = "0xE893D4", VA = "0xE893D4")]
	private Color GetDebugColor(int freqIndex, VisDataSource dataSource)
	{
		return default(Color);
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xE89590", Offset = "0xE89590", VA = "0xE89590", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xE81C38", Offset = "0xE81C38", VA = "0xE81C38")]
	public static bool RestoreVisManagerTarget(IVisManagerTarget target)
	{
		return default(bool);
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xE89600", Offset = "0xE89600", VA = "0xE89600")]
	public VisManager()
	{
	}
}
[Token(Token = "0x2000298")]
public interface IVisManagerTarget
{
	[Token(Token = "0x1700012E")]
	VisManager Manager
	{
		[Token(Token = "0x60010CC")]
		get;
		[Token(Token = "0x60010CD")]
		set;
	}

	[Token(Token = "0x1700012F")]
	string LastManagerName
	{
		[Token(Token = "0x60010CE")]
		get;
	}
}
[Token(Token = "0x2000299")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03310", Offset = "0xA03310")]
public class VisAnimationStatePropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20004D9")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DDD")]
		public const AnimationStateProperty targetProperty = AnimationStateProperty.NormalizedTime;

		[Token(Token = "0x4001DDE")]
		public const string targetAnimation = "Idle";
	}

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationStateProperty targetProperty;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string targetAnimation;

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xE80CC8", Offset = "0xE80CC8", VA = "0xE80CC8", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xE80D44", Offset = "0xE80D44", VA = "0xE80D44", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xE80EB8", Offset = "0xE80EB8", VA = "0xE80EB8", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xE80F9C", Offset = "0xE80F9C", VA = "0xE80F9C")]
	public VisAnimationStatePropertyModifier()
	{
	}
}
[Token(Token = "0x200029A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03348", Offset = "0xA03348")]
public class VisEmitterPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20004DA")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DDF")]
		public const EmitterProperty targetProperty = EmitterProperty.EmitterVelocityScale;
	}

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EmitterProperty targetProperty;

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xE86A3C", Offset = "0xE86A3C", VA = "0xE86A3C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xE86A58", Offset = "0xE86A58", VA = "0xE86A58", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xE86A5C", Offset = "0xE86A5C", VA = "0xE86A5C", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xE86AD0", Offset = "0xE86AD0", VA = "0xE86AD0")]
	public VisEmitterPropertyModifier()
	{
	}
}
[Token(Token = "0x200029B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03380", Offset = "0xA03380")]
public class VisGameObjectPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20004DB")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DE0")]
		public const GameObjectProperty targetProperty = GameObjectProperty.UniformScale;
	}

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObjectProperty targetProperty;

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xE87524", Offset = "0xE87524", VA = "0xE87524", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xE87540", Offset = "0xE87540", VA = "0xE87540", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xE87544", Offset = "0xE87544", VA = "0xE87544", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xE87580", Offset = "0xE87580", VA = "0xE87580")]
	public VisGameObjectPropertyModifier()
	{
	}
}
[Token(Token = "0x200029C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA033B8", Offset = "0xA033B8")]
public class VisLightPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20004DC")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DE1")]
		public const LightProperty targetProperty = LightProperty.Intensity;
	}

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LightProperty targetProperty;

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xE8767C", Offset = "0xE8767C", VA = "0xE8767C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xE87698", Offset = "0xE87698", VA = "0xE87698", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xE8769C", Offset = "0xE8769C", VA = "0xE8769C", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xE87708", Offset = "0xE87708", VA = "0xE87708")]
	public VisLightPropertyModifier()
	{
	}
}
[Token(Token = "0x200029D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA033F0", Offset = "0xA033F0")]
public class VisMaterialLerpModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20004DD")]
	public new static class Defaults
	{
	}

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material lerpFromMaterial;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material lerpToMaterial;

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x210A0B4", Offset = "0x210A0B4", VA = "0x210A0B4", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x210A0BC", Offset = "0x210A0BC", VA = "0x210A0BC", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x210A0C4", Offset = "0x210A0C4", VA = "0x210A0C4", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x210A284", Offset = "0x210A284", VA = "0x210A284")]
	public VisMaterialLerpModifier()
	{
	}
}
[Token(Token = "0x200029E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03428", Offset = "0xA03428")]
public class VisMaterialPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20004DE")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DE2")]
		public const string targetProperty = "";

		[Token(Token = "0x4001DE3")]
		public const bool applyToMaterialIndex = false;

		[Token(Token = "0x4001DE4")]
		public const int materialIndex = 0;
	}

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string targetProperty;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool applyToMaterialIndex;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int materialIndex;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool specialTargetProperty;

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x210A464", Offset = "0x210A464", VA = "0x210A464", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x210A4C8", Offset = "0x210A4C8", VA = "0x210A4C8", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x210A630", Offset = "0x210A630", VA = "0x210A630", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x210AC38", Offset = "0x210AC38", VA = "0x210AC38")]
	public VisMaterialPropertyModifier()
	{
	}
}
[Token(Token = "0x200029F")]
public delegate void ValueUpdatedDelegate(float current, float previous, float difference, float adjustedDifference);
[Token(Token = "0x20002A0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03460", Offset = "0xA03460")]
public class VisTargetModifier : VisBaseModifier
{
	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> targetGameObjects;

	[Token(Token = "0x14000018")]
	public event ValueUpdatedDelegate ValueUpdated
	{
		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x210D1F0", Offset = "0x210D1F0", VA = "0x210D1F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1FE18", Offset = "0xA1FE18")]
		add
		{
		}
		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x210D294", Offset = "0x210D294", VA = "0x210D294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1FE28", Offset = "0xA1FE28")]
		remove
		{
		}
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x210D338", Offset = "0x210D338", VA = "0x210D338", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x210D5B8", Offset = "0x210D5B8", VA = "0x210D5B8", Slot = "12")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x210D360", Offset = "0x210D360", VA = "0x210D360")]
	public void CreateAllDelegates()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x210D5E0", Offset = "0x210D5E0", VA = "0x210D5E0")]
	public void DestroyAllDelegates()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x210D838", Offset = "0x210D838", VA = "0x210D838")]
	public void AddGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x210DAC0", Offset = "0x210DAC0", VA = "0x210DAC0")]
	public void RemoveGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x210DCE8", Offset = "0x210DCE8", VA = "0x210DCE8", Slot = "13")]
	public override void OnValueUpdated(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x210DD1C", Offset = "0x210DD1C", VA = "0x210DD1C")]
	public VisTargetModifier()
	{
	}
}
[Token(Token = "0x20002A1")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03498", Offset = "0xA03498")]
public class VisAddForceTrigger : VisBaseTrigger
{
	[Token(Token = "0x20004DF")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DE5")]
		public const ControllerSourceValue controllerValue = ControllerSourceValue.Current;

		[Token(Token = "0x4001DE6")]
		public const float minControllerValue = 0f;

		[Token(Token = "0x4001DE7")]
		public const float maxControllerValue = 1f;

		[Token(Token = "0x4001DE8")]
		public const float minForceValue = 10f;

		[Token(Token = "0x4001DE9")]
		public const float maxForceValue = 200f;

		[Token(Token = "0x4001DEA")]
		public const bool invertValue = false;

		[Token(Token = "0x4001DEB")]
		public const bool randomValue = false;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 forceDirection;

		[Token(Token = "0x4001DED")]
		public const ForceMode forceMode = ForceMode.Impulse;
	}

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ControllerSourceValue controllerValue;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minControllerValue;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxControllerValue;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minForceValue;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxForceValue;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool invertValue;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool randomValue;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 forceDirection;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ForceMode forceMode;

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xE80864", Offset = "0xE80864", VA = "0xE80864", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xE80894", Offset = "0xE80894", VA = "0xE80894", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xE80958", Offset = "0xE80958", VA = "0xE80958", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xE80B84", Offset = "0xE80B84", VA = "0xE80B84")]
	public VisAddForceTrigger()
	{
	}
}
[Token(Token = "0x20002A2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA034D0", Offset = "0xA034D0")]
public class VisAnimationStatePropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20004E0")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DEE")]
		public const AnimationStateProperty targetProperty = AnimationStateProperty.NormalizedTime;

		[Token(Token = "0x4001DEF")]
		public const string targetAnimation = "Idle";
	}

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationStateProperty targetProperty;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string targetAnimation;

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xE8102C", Offset = "0xE8102C", VA = "0xE8102C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xE810F8", Offset = "0xE810F8", VA = "0xE810F8", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xE81320", Offset = "0xE81320", VA = "0xE81320", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xE8141C", Offset = "0xE8141C", VA = "0xE8141C")]
	public VisAnimationStatePropertyTrigger()
	{
	}
}
[Token(Token = "0x20002A3")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03508", Offset = "0xA03508")]
public class VisEmitParticlesTrigger : VisBaseTrigger
{
	[Token(Token = "0x20004E1")]
	public new static class Defaults
	{
	}

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int emitCount;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int emitCountVariance;

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xE8693C", Offset = "0xE8693C", VA = "0xE8693C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xE86954", Offset = "0xE86954", VA = "0xE86954", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xE86958", Offset = "0xE86958", VA = "0xE86958", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xE86A18", Offset = "0xE86A18", VA = "0xE86A18")]
	public VisEmitParticlesTrigger()
	{
	}
}
[Token(Token = "0x20002A4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03540", Offset = "0xA03540")]
public class VisEmitterPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20004E2")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DF0")]
		public const EmitterProperty targetProperty = EmitterProperty.EmitterVelocityScale;
	}

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EmitterProperty targetProperty;

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xE86AF4", Offset = "0xE86AF4", VA = "0xE86AF4", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xE86B68", Offset = "0xE86B68", VA = "0xE86B68")]
	public VisEmitterPropertyTrigger()
	{
	}
}
[Token(Token = "0x20002A5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03578", Offset = "0xA03578")]
public class VisGameObjectPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20004E3")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DF1")]
		public const GameObjectProperty targetProperty = GameObjectProperty.UniformScale;
	}

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObjectProperty targetProperty;

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xE875A4", Offset = "0xE875A4", VA = "0xE875A4", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0xE875E8", Offset = "0xE875E8", VA = "0xE875E8", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xE875EC", Offset = "0xE875EC", VA = "0xE875EC", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xE87628", Offset = "0xE87628", VA = "0xE87628")]
	public VisGameObjectPropertyTrigger()
	{
	}
}
[Token(Token = "0x20002A6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA035B0", Offset = "0xA035B0")]
public class VisLightPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20004E4")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DF2")]
		public const LightProperty targetProperty = LightProperty.Intensity;
	}

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LightProperty targetProperty;

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xE8772C", Offset = "0xE8772C", VA = "0xE8772C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xE87770", Offset = "0xE87770", VA = "0xE87770", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xE87774", Offset = "0xE87774", VA = "0xE87774", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xE877E0", Offset = "0xE877E0", VA = "0xE877E0")]
	public VisLightPropertyTrigger()
	{
	}
}
[Token(Token = "0x20002A7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA035E8", Offset = "0xA035E8")]
public class VisMaterialLerpTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20004E5")]
	public new static class Defaults
	{
	}

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material lerpFromMaterial;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material lerpToMaterial;

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x210A28C", Offset = "0x210A28C", VA = "0x210A28C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x210A294", Offset = "0x210A294", VA = "0x210A294", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x210A29C", Offset = "0x210A29C", VA = "0x210A29C", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x210A45C", Offset = "0x210A45C", VA = "0x210A45C")]
	public VisMaterialLerpTrigger()
	{
	}
}
[Token(Token = "0x20002A8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03620", Offset = "0xA03620")]
public class VisMaterialPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20004E6")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DF3")]
		public const string targetProperty = "";

		[Token(Token = "0x4001DF4")]
		public const bool applyToMaterialIndex = false;

		[Token(Token = "0x4001DF5")]
		public const int materialIndex = 0;
	}

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string targetProperty;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool applyToMaterialIndex;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int materialIndex;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool specialTargetProperty;

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x210AC90", Offset = "0x210AC90", VA = "0x210AC90", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x210ACF4", Offset = "0x210ACF4", VA = "0x210ACF4", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x210AE5C", Offset = "0x210AE5C", VA = "0x210AE5C", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x210B464", Offset = "0x210B464", VA = "0x210B464")]
	public VisMaterialPropertyTrigger()
	{
	}
}
[Token(Token = "0x20002A9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03658", Offset = "0xA03658")]
public class VisMessageTrigger : VisTargetTrigger
{
	[Token(Token = "0x20004E7")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DF6")]
		public const string messageName = "TriggerMessage";

		[Token(Token = "0x4001DF7")]
		public const ControllerSourceValue messageParameter = ControllerSourceValue.Current;
	}

	[Token(Token = "0x20004E8")]
	public enum ControllerSourceValue
	{
		[Token(Token = "0x4001DF9")]
		None,
		[Token(Token = "0x4001DFA")]
		Current,
		[Token(Token = "0x4001DFB")]
		Previous,
		[Token(Token = "0x4001DFC")]
		Difference
	}

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string messageName;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ControllerSourceValue messageParameter;

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x210B4BC", Offset = "0x210B4BC", VA = "0x210B4BC", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x210B520", Offset = "0x210B520", VA = "0x210B520", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x210B570", Offset = "0x210B570", VA = "0x210B570", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x210B580", Offset = "0x210B580", VA = "0x210B580", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x210B750", Offset = "0x210B750", VA = "0x210B750")]
	public VisMessageTrigger()
	{
	}
}
[Token(Token = "0x20002AA")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03690", Offset = "0xA03690")]
public class VisSpawnPrefabTrigger : VisBaseTrigger
{
	[Token(Token = "0x20004E9")]
	public new static class Defaults
	{
		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 randomOffset;
	}

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject prefab;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 randomOffset;

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x210CAD0", Offset = "0x210CAD0", VA = "0x210CAD0", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x210CB50", Offset = "0x210CB50", VA = "0x210CB50", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x210CB58", Offset = "0x210CB58", VA = "0x210CB58", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x210CF00", Offset = "0x210CF00", VA = "0x210CF00")]
	public VisSpawnPrefabTrigger()
	{
	}
}
[Token(Token = "0x20002AB")]
public delegate void TriggeredDelegate(float current, float previous, float difference, float adjustedDifference);
[Token(Token = "0x20002AC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA036C8", Offset = "0xA036C8")]
public class VisTargetTrigger : VisBaseTrigger
{
	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> targetGameObjects;

	[Token(Token = "0x14000019")]
	public event TriggeredDelegate Triggered
	{
		[Token(Token = "0x6001120")]
		[Address(RVA = "0x210DD8C", Offset = "0x210DD8C", VA = "0x210DD8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1FE38", Offset = "0xA1FE38")]
		add
		{
		}
		[Token(Token = "0x6001121")]
		[Address(RVA = "0x210DE30", Offset = "0x210DE30", VA = "0x210DE30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1FE48", Offset = "0xA1FE48")]
		remove
		{
		}
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x210B548", Offset = "0x210B548", VA = "0x210B548", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x210E12C", Offset = "0x210E12C", VA = "0x210E12C", Slot = "12")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x210B578", Offset = "0x210B578", VA = "0x210B578", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x210DED4", Offset = "0x210DED4", VA = "0x210DED4")]
	public void CreateAllDelegates()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x210E154", Offset = "0x210E154", VA = "0x210E154")]
	public void DestroyAllDelegates()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x210E3AC", Offset = "0x210E3AC", VA = "0x210E3AC")]
	public void AddGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x210E634", Offset = "0x210E634", VA = "0x210E634")]
	public void RemoveGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x210B71C", Offset = "0x210B71C", VA = "0x210B71C", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x210B7AC", Offset = "0x210B7AC", VA = "0x210B7AC")]
	public VisTargetTrigger()
	{
	}
}
[Token(Token = "0x20002AD")]
public enum ControllerSourceValue
{
	[Token(Token = "0x40011F6")]
	Current,
	[Token(Token = "0x40011F7")]
	Previous,
	[Token(Token = "0x40011F8")]
	Difference
}
[Token(Token = "0x20002AE")]
public static class VisHelper
{
	[Token(Token = "0x600112B")]
	[Address(RVA = "0xE84F4C", Offset = "0xE84F4C", VA = "0xE84F4C")]
	public static int Validate(int currentValue, int minValue, int maxValue, int defaultValue, UnityEngine.Object obj, string fieldName, bool error)
	{
		return default(int);
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xE822F4", Offset = "0xE822F4", VA = "0xE822F4")]
	public static float Validate(float currentValue, float minValue, float maxValue, float defaultValue, UnityEngine.Object obj, string fieldName, bool error)
	{
		return default(float);
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xE80AB0", Offset = "0xE80AB0", VA = "0xE80AB0")]
	public static float ConvertBetweenRanges(float sourceValue, float sourceMin, float sourceMax, float destMin, float destMax, bool invertDestValue)
	{
		return default(float);
	}
}
[Token(Token = "0x20002AF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03700", Offset = "0xA03700")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03700", Offset = "0xA03700")]
public class VisMicrophone : MonoBehaviour
{
	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string microphoneDevice;

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x210B81C", Offset = "0x210B81C", VA = "0x210B81C")]
	private void Start()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x210B888", Offset = "0x210B888", VA = "0x210B888")]
	public VisMicrophone()
	{
	}
}
[Token(Token = "0x20002B0")]
public enum GameObjectProperty
{
	[Token(Token = "0x40011FB")]
	XPosition,
	[Token(Token = "0x40011FC")]
	YPosition,
	[Token(Token = "0x40011FD")]
	ZPosition,
	[Token(Token = "0x40011FE")]
	XRotation,
	[Token(Token = "0x40011FF")]
	YRotation,
	[Token(Token = "0x4001200")]
	ZRotation,
	[Token(Token = "0x4001201")]
	XVelocity,
	[Token(Token = "0x4001202")]
	YVelocity,
	[Token(Token = "0x4001203")]
	ZVelocity,
	[Token(Token = "0x4001204")]
	XAngularVelocity,
	[Token(Token = "0x4001205")]
	YAngularVelocity,
	[Token(Token = "0x4001206")]
	ZAngularVelocity,
	[Token(Token = "0x4001207")]
	UniformScale,
	[Token(Token = "0x4001208")]
	XScale,
	[Token(Token = "0x4001209")]
	YScale,
	[Token(Token = "0x400120A")]
	ZScale
}
[Token(Token = "0x20002B1")]
public enum EmitterProperty
{
	[Token(Token = "0x400120C")]
	AngularVelocity,
	[Token(Token = "0x400120D")]
	RandomAngularVelocity,
	[Token(Token = "0x400120E")]
	EmitterVelocityScale,
	[Token(Token = "0x400120F")]
	MinSize,
	[Token(Token = "0x4001210")]
	MaxSize,
	[Token(Token = "0x4001211")]
	MinEnergy,
	[Token(Token = "0x4001212")]
	MaxEnergy,
	[Token(Token = "0x4001213")]
	MinEmission,
	[Token(Token = "0x4001214")]
	MaxEmission
}
[Token(Token = "0x20002B2")]
public enum LightProperty
{
	[Token(Token = "0x4001216")]
	ColorRed,
	[Token(Token = "0x4001217")]
	ColorGreen,
	[Token(Token = "0x4001218")]
	ColorBlue,
	[Token(Token = "0x4001219")]
	ColorRGB,
	[Token(Token = "0x400121A")]
	ColorAlpha,
	[Token(Token = "0x400121B")]
	Intensity,
	[Token(Token = "0x400121C")]
	Range,
	[Token(Token = "0x400121D")]
	SpotAngle,
	[Token(Token = "0x400121E")]
	ShadowBias,
	[Token(Token = "0x400121F")]
	ShadowSoftness_DEPRECATED,
	[Token(Token = "0x4001220")]
	ShadowSoftnessFade_DEPRECATED,
	[Token(Token = "0x4001221")]
	ShadowStrength
}
[Token(Token = "0x20002B3")]
public enum AnimationStateProperty
{
	[Token(Token = "0x4001223")]
	Speed,
	[Token(Token = "0x4001224")]
	NormalizedTime,
	[Token(Token = "0x4001225")]
	Weight
}
[Token(Token = "0x20002B4")]
public static class VisPropertyHelper
{
	[Token(Token = "0x6001130")]
	[Address(RVA = "0x210B8E0", Offset = "0x210B8E0", VA = "0x210B8E0")]
	public static void SetGameObjectProperty(GameObject gameObject, GameObjectProperty targetProperty, float propertyValue)
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x210C5D0", Offset = "0x210C5D0", VA = "0x210C5D0")]
	public static void SetLightProperty(Light light, LightProperty targetProperty, float propertyValue)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x210C8C4", Offset = "0x210C8C4", VA = "0x210C8C4")]
	public static void SetAnimationStateProperty(AnimationState animationState, AnimationStateProperty targetProperty, float propertyValue)
	{
	}
}
namespace UltimateGameTools.MeshSimplifier
{
	[Serializable]
	[Token(Token = "0x20002B5")]
	public class MeshUniqueVertices
	{
		[Serializable]
		[Token(Token = "0x20004EA")]
		public class ListIndices
		{
			[Token(Token = "0x4001DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> m_listIndices;

			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0xDFF5C8", Offset = "0xDFF5C8", VA = "0xDFF5C8")]
			public ListIndices()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EB")]
		public class SerializableBoneWeight
		{
			[Token(Token = "0x4001DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _boneIndex0;

			[Token(Token = "0x4001E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _boneIndex1;

			[Token(Token = "0x4001E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int _boneIndex2;

			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int _boneIndex3;

			[Token(Token = "0x4001E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float _boneWeight0;

			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float _boneWeight1;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float _boneWeight2;

			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float _boneWeight3;

			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0xDFF7D0", Offset = "0xDFF7D0", VA = "0xDFF7D0")]
			public SerializableBoneWeight(BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xDFF898", Offset = "0xDFF898", VA = "0xDFF898")]
			public BoneWeight ToBoneWeight()
			{
				return default(BoneWeight);
			}
		}

		[Token(Token = "0x20004EC")]
		public class UniqueVertex
		{
			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nFixedX;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_nFixedY;

			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_nFixedZ;

			[Token(Token = "0x4001E0A")]
			private const float fDecimalMultiplier = 100000f;

			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xDFF950", Offset = "0xDFF950", VA = "0xDFF950", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0xDFFA10", Offset = "0xDFFA10", VA = "0xDFFA10", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0xDFF63C", Offset = "0xDFF63C", VA = "0xDFF63C")]
			public UniqueVertex(Vector3 v3Vertex)
			{
			}

			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xDFFA70", Offset = "0xDFFA70", VA = "0xDFFA70")]
			public Vector3 ToVertex()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0xDFFB20", Offset = "0xDFFB20", VA = "0xDFFB20")]
			public static bool operator ==(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0xDFFB3C", Offset = "0xDFFB3C", VA = "0xDFFB3C")]
			public static bool operator !=(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0xDFFA24", Offset = "0xDFFA24", VA = "0xDFFA24")]
			private void FromVertex(Vector3 vertex)
			{
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xDFFB68", Offset = "0xDFFB68", VA = "0xDFFB68")]
			private int CoordToFixed(float fCoord)
			{
				return default(int);
			}

			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xDFFAFC", Offset = "0xDFFAFC", VA = "0xDFFAFC")]
			private float FixedToCoord(int nFixed)
			{
				return default(float);
			}
		}

		[Token(Token = "0x20004ED")]
		private class RepeatedVertex
		{
			[Token(Token = "0x4001E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _nFaceIndex;

			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _nOriginalVertexIndex;

			[Token(Token = "0x17000290")]
			public int FaceIndex
			{
				[Token(Token = "0x6001BE1")]
				[Address(RVA = "0xDFF880", Offset = "0xDFF880", VA = "0xDFF880")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000291")]
			public int OriginalVertexIndex
			{
				[Token(Token = "0x6001BE2")]
				[Address(RVA = "0xDFF888", Offset = "0xDFF888", VA = "0xDFF888")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xDFF68C", Offset = "0xDFF68C", VA = "0xDFF68C")]
			public RepeatedVertex(int nFaceIndex, int nOriginalVertexIndex)
			{
			}
		}

		[Token(Token = "0x20004EE")]
		private class RepeatedVertexList
		{
			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nUniqueIndex;

			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<RepeatedVertex> m_listRepeatedVertices;

			[Token(Token = "0x17000292")]
			public int UniqueIndex
			{
				[Token(Token = "0x6001BE4")]
				[Address(RVA = "0xDFF890", Offset = "0xDFF890", VA = "0xDFF890")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xDFF72C", Offset = "0xDFF72C", VA = "0xDFF72C")]
			public RepeatedVertexList(int nUniqueIndex, RepeatedVertex repeatedVertex)
			{
			}

			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0xDFF6C4", Offset = "0xDFF6C4", VA = "0xDFF6C4")]
			public void Add(RepeatedVertex repeatedVertex)
			{
			}
		}

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<Vector3> m_listVertices;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Vector3> m_listVerticesWorld;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SerializableBoneWeight> m_listBoneWeights;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ListIndices[] m_aFaceList;

		[Token(Token = "0x17000130")]
		public ListIndices[] SubmeshesFaceList
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0xDFF00C", Offset = "0xDFF00C", VA = "0xDFF00C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		public List<Vector3> ListVertices
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0xDFF014", Offset = "0xDFF014", VA = "0xDFF014")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		public List<Vector3> ListVerticesWorld
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0xDFF01C", Offset = "0xDFF01C", VA = "0xDFF01C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		public List<SerializableBoneWeight> ListBoneWeights
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0xDFF024", Offset = "0xDFF024", VA = "0xDFF024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xDFF02C", Offset = "0xDFF02C", VA = "0xDFF02C")]
		public void BuildData(Mesh sourceMesh, Vector3[] av3VerticesWorld)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xDFF878", Offset = "0xDFF878", VA = "0xDFF878")]
		public MeshUniqueVertices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B6")]
	public class RelevanceSphere
	{
		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bExpanded;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 m_v3Position;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_v3Rotation;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_v3Scale;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fRelevance;

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xDFFC00", Offset = "0xDFFC00", VA = "0xDFFC00")]
		public RelevanceSphere()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xDFFC7C", Offset = "0xDFFC7C", VA = "0xDFFC7C")]
		public void SetDefault(Transform target, float fRelevance)
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class Simplifier : MonoBehaviour
	{
		[Token(Token = "0x20004EF")]
		public delegate void ProgressDelegate(string strTitle, string strProgressMessage, float fT);

		[Token(Token = "0x20004F0")]
		private class Triangle
		{
			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vertex[] m_aVertices;

			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_bUVData;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int[] m_aUV;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] m_aIndices;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 m_v3Normal;

			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int m_nSubMesh;

			[Token(Token = "0x17000293")]
			public Vertex[] Vertices
			{
				[Token(Token = "0x6001BEB")]
				[Address(RVA = "0xE062A0", Offset = "0xE062A0", VA = "0xE062A0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000294")]
			public bool HasUVData
			{
				[Token(Token = "0x6001BEC")]
				[Address(RVA = "0xE062A8", Offset = "0xE062A8", VA = "0xE062A8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000295")]
			public int[] IndicesUV
			{
				[Token(Token = "0x6001BED")]
				[Address(RVA = "0xE062B0", Offset = "0xE062B0", VA = "0xE062B0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000296")]
			public Vector3 Normal
			{
				[Token(Token = "0x6001BEE")]
				[Address(RVA = "0xE062B8", Offset = "0xE062B8", VA = "0xE062B8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000297")]
			public int[] Indices
			{
				[Token(Token = "0x6001BEF")]
				[Address(RVA = "0xE062C4", Offset = "0xE062C4", VA = "0xE062C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0xE02AFC", Offset = "0xE02AFC", VA = "0xE02AFC")]
			public Triangle(Simplifier simplifier, int nSubMesh, Vertex v0, Vertex v1, Vertex v2, bool bUVData, int nIndex1, int nIndex2, int nIndex3)
			{
			}

			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xE01DD0", Offset = "0xE01DD0", VA = "0xE01DD0")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0xE010B0", Offset = "0xE010B0", VA = "0xE010B0")]
			public bool HasVertex(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0xE062CC", Offset = "0xE062CC", VA = "0xE062CC")]
			public void ComputeNormal()
			{
			}

			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xE0122C", Offset = "0xE0122C", VA = "0xE0122C")]
			public int TexAt(Vertex vertex)
			{
				return default(int);
			}

			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0xE06544", Offset = "0xE06544", VA = "0xE06544")]
			public int TexAt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xE01CDC", Offset = "0xE01CDC", VA = "0xE01CDC")]
			public void SetTexAt(Vertex vertex, int uv)
			{
			}

			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0xE06580", Offset = "0xE06580", VA = "0xE06580")]
			public void SetTexAt(int i, int uv)
			{
			}

			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0xE01F48", Offset = "0xE01F48", VA = "0xE01F48")]
			public void ReplaceVertex(Vertex vold, Vertex vnew)
			{
			}
		}

		[Token(Token = "0x20004F1")]
		private class TriangleList
		{
			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Triangle> m_listTriangles;

			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0xE04554", Offset = "0xE04554", VA = "0xE04554")]
			public TriangleList()
			{
			}
		}

		[Token(Token = "0x20004F2")]
		private class Vertex
		{
			[Token(Token = "0x4001E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 m_v3Position;

			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 m_v3PositionWorld;

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_bHasBoneWeight;

			[Token(Token = "0x4001E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public BoneWeight m_boneWeight;

			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int m_nID;

			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Vertex> m_listNeighbors;

			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Triangle> m_listFaces;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float m_fObjDist;

			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vertex m_collapse;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int m_nHeapSpot;

			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0xE02730", Offset = "0xE02730", VA = "0xE02730")]
			public Vertex(Simplifier simplifier, Vector3 v, Vector3 v3World, bool bHasBoneWeight, BoneWeight boneWeight, int nID)
			{
			}

			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xE01C08", Offset = "0xE01C08", VA = "0xE01C08")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0xE06458", Offset = "0xE06458", VA = "0xE06458")]
			public void RemoveIfNonNeighbor(Vertex n)
			{
			}

			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0xE0111C", Offset = "0xE0111C", VA = "0xE0111C")]
			public bool IsBorder()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004F3")]
		private class VertexDataHashComparer : IEqualityComparer<VertexDataHash>
		{
			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0xE06810", Offset = "0xE06810", VA = "0xE06810", Slot = "4")]
			public bool Equals(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xE0699C", Offset = "0xE0699C", VA = "0xE0699C", Slot = "5")]
			public int GetHashCode(VertexDataHash vdata)
			{
				return default(int);
			}

			[Token(Token = "0x6001C00")]
			[Address(RVA = "0xE05660", Offset = "0xE05660", VA = "0xE05660")]
			public VertexDataHashComparer()
			{
			}
		}

		[Token(Token = "0x20004F4")]
		private class VertexDataHash
		{
			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3 _v3Vertex;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector3 _v3Normal;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 _v2Mapping1;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 _v2Mapping2;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Color32 _color;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MeshUniqueVertices.UniqueVertex _uniqueVertex;

			[Token(Token = "0x17000298")]
			public Vector3 Vertex
			{
				[Token(Token = "0x6001C01")]
				[Address(RVA = "0xE065BC", Offset = "0xE065BC", VA = "0xE065BC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000299")]
			public Vector3 Normal
			{
				[Token(Token = "0x6001C02")]
				[Address(RVA = "0xE065C8", Offset = "0xE065C8", VA = "0xE065C8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700029A")]
			public Vector2 UV1
			{
				[Token(Token = "0x6001C03")]
				[Address(RVA = "0xE065D4", Offset = "0xE065D4", VA = "0xE065D4")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x1700029B")]
			public Vector2 UV2
			{
				[Token(Token = "0x6001C04")]
				[Address(RVA = "0xE065DC", Offset = "0xE065DC", VA = "0xE065DC")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x1700029C")]
			public Color32 Color
			{
				[Token(Token = "0x6001C05")]
				[Address(RVA = "0xE065E4", Offset = "0xE065E4", VA = "0xE065E4")]
				get
				{
					return default(Color32);
				}
			}

			[Token(Token = "0x6001C06")]
			[Address(RVA = "0xE05668", Offset = "0xE05668", VA = "0xE05668")]
			public VertexDataHash(Vector3 v3Vertex, Vector3 v3Normal, Vector2 v2Mapping1, Vector2 v2Mapping2, Color32 color)
			{
			}

			[Token(Token = "0x6001C07")]
			[Address(RVA = "0xE065EC", Offset = "0xE065EC", VA = "0xE065EC", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xE067A8", Offset = "0xE067A8", VA = "0xE067A8", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6001C09")]
			[Address(RVA = "0xE067C8", Offset = "0xE067C8", VA = "0xE067C8")]
			public static bool operator ==(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xE067E4", Offset = "0xE067E4", VA = "0xE067E4")]
			public static bool operator !=(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA045E0", Offset = "0xA045E0")]
		private sealed class <ProgressiveMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh sourceMesh;

			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject gameObject;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <nVertices>5__2;

			[Token(Token = "0x1700029D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C0E")]
				[Address(RVA = "0xE06174", Offset = "0xE06174", VA = "0xE06174", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C10")]
				[Address(RVA = "0xE061DC", Offset = "0xE061DC", VA = "0xE061DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0xE0004C", Offset = "0xE0004C", VA = "0xE0004C")]
			[DebuggerHidden]
			public <ProgressiveMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0xE057C8", Offset = "0xE057C8", VA = "0xE057C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0xE057CC", Offset = "0xE057CC", VA = "0xE057CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0xE0617C", Offset = "0xE0617C", VA = "0xE0617C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA045F0", Offset = "0xA045F0")]
		private sealed class <ComputeMeshWithVertexCount>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nVertices;

			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Mesh meshOut;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject gameObject;

			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vertex> <listVertices>5__2;

			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <nTotalVertices>5__3;

			[Token(Token = "0x1700029F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C14")]
				[Address(RVA = "0xE045C8", Offset = "0xE045C8", VA = "0xE045C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C16")]
				[Address(RVA = "0xE04630", Offset = "0xE04630", VA = "0xE04630", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C11")]
			[Address(RVA = "0xE00120", Offset = "0xE00120", VA = "0xE00120")]
			[DebuggerHidden]
			public <ComputeMeshWithVertexCount>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001C12")]
			[Address(RVA = "0xE03A4C", Offset = "0xE03A4C", VA = "0xE03A4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xE03A50", Offset = "0xE03A50", VA = "0xE03A50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C15")]
			[Address(RVA = "0xE045D0", Offset = "0xE045D0", VA = "0xE045D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04600", Offset = "0xA04600")]
		private sealed class <ConsolidateMesh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh meshIn;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriangleList[] aListTriangles;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh meshOut;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject gameObject;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3[] <av3NormalsIn>5__2;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector4[] <av4TangentsIn>5__3;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector2[] <av2Mapping1In>5__4;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector2[] <av2Mapping2In>5__5;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Color[] <acolColorsIn>5__6;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color32[] <aColors32In>5__7;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private List<List<int>> <listlistIndicesOut>5__8;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<Vector3> <listVerticesOut>5__9;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<Vector3> <listNormalsOut>5__10;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private List<Vector4> <listTangentsOut>5__11;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private List<Vector2> <listMapping1Out>5__12;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private List<Vector2> <listMapping2Out>5__13;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private List<Color32> <listColors32Out>5__14;

			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private List<BoneWeight> <listBoneWeightsOut>5__15;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Dictionary<VertexDataHash, int> <dicVertexDataHash2Index>5__16;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private bool <bUV1>5__17;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
			private bool <bUV2>5__18;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
			private bool <bNormal>5__19;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
			private bool <bTangent>5__20;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int <nSubMesh>5__21;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private List<int> <listIndicesOut>5__22;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <strMesh>5__23;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private int <i>5__24;

			[Token(Token = "0x170002A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C1A")]
				[Address(RVA = "0xE05758", Offset = "0xE05758", VA = "0xE05758", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C1C")]
				[Address(RVA = "0xE057C0", Offset = "0xE057C0", VA = "0xE057C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xE00B44", Offset = "0xE00B44", VA = "0xE00B44")]
			[DebuggerHidden]
			public <ConsolidateMesh>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001C18")]
			[Address(RVA = "0xE04638", Offset = "0xE04638", VA = "0xE04638", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C19")]
			[Address(RVA = "0xE0463C", Offset = "0xE0463C", VA = "0xE0463C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0xE05760", Offset = "0xE05760", VA = "0xE05760", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04610", Offset = "0xA04610")]
		private sealed class <ComputeAllEdgeCollapseCosts>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Simplifier <>4__this;

			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform transform;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x170002A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C20")]
				[Address(RVA = "0xE039DC", Offset = "0xE039DC", VA = "0xE039DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C22")]
				[Address(RVA = "0xE03A44", Offset = "0xE03A44", VA = "0xE03A44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0xE016C0", Offset = "0xE016C0", VA = "0xE016C0")]
			[DebuggerHidden]
			public <ComputeAllEdgeCollapseCosts>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0xE03268", Offset = "0xE03268", VA = "0xE03268", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xE0326C", Offset = "0xE0326C", VA = "0xE0326C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C21")]
			[Address(RVA = "0xE039E4", Offset = "0xE039E4", VA = "0xE039E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15ECC", Offset = "0xA15ECC")]
		private static bool <Cancelled>k__BackingField;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15EDC", Offset = "0xA15EDC")]
		private bool <CoroutineEnded>k__BackingField;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_nCoroutineFrameMiliseconds;

		[Token(Token = "0x4001232")]
		private const float MAX_VERTEX_COLLAPSE_COST = 10000000f;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vertex> m_listVertices;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vertex> m_listHeap;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TriangleList[] m_aListTriangles;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15EEC", Offset = "0xA15EEC")]
		private int m_nOriginalMeshVertexCount;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15F24", Offset = "0xA15F24")]
		private float m_fOriginalMeshSize;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15F5C", Offset = "0xA15F5C")]
		private List<int> m_listVertexMap;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15F94", Offset = "0xA15F94")]
		private List<int> m_listVertexPermutationBack;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA15FCC", Offset = "0xA15FCC")]
		private MeshUniqueVertices m_meshUniqueVertices;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16004", Offset = "0xA16004")]
		private Mesh m_meshOriginal;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA1603C", Offset = "0xA1603C")]
		private bool m_bUseEdgeLength;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16074", Offset = "0xA16074")]
		private bool m_bUseCurvature;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA160AC", Offset = "0xA160AC")]
		private bool m_bProtectTexture;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA160E4", Offset = "0xA160E4")]
		private bool m_bLockBorder;

		[Token(Token = "0x17000134")]
		public static bool Cancelled
		{
			[Token(Token = "0x600113B")]
			[Address(RVA = "0xDFFD98", Offset = "0xDFFD98", VA = "0xDFFD98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1FE58", Offset = "0xA1FE58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600113C")]
			[Address(RVA = "0xDFFE00", Offset = "0xDFFE00", VA = "0xDFFE00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1FE68", Offset = "0xA1FE68")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public static int CoroutineFrameMiliseconds
		{
			[Token(Token = "0x600113D")]
			[Address(RVA = "0xDFFE70", Offset = "0xDFFE70", VA = "0xDFFE70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600113E")]
			[Address(RVA = "0xDFFED8", Offset = "0xDFFED8", VA = "0xDFFED8")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public bool CoroutineEnded
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0xDFFF44", Offset = "0xDFFF44", VA = "0xDFFF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1FE78", Offset = "0xA1FE78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001140")]
			[Address(RVA = "0xDFFF4C", Offset = "0xDFFF4C", VA = "0xDFFF4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1FE88", Offset = "0xA1FE88")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public bool UseEdgeLength
		{
			[Token(Token = "0x6001141")]
			[Address(RVA = "0xDFFF58", Offset = "0xDFFF58", VA = "0xDFFF58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001142")]
			[Address(RVA = "0xDFFF60", Offset = "0xDFFF60", VA = "0xDFFF60")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public bool UseCurvature
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0xDFFF6C", Offset = "0xDFFF6C", VA = "0xDFFF6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001144")]
			[Address(RVA = "0xDFFF74", Offset = "0xDFFF74", VA = "0xDFFF74")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public bool ProtectTexture
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0xDFFF80", Offset = "0xDFFF80", VA = "0xDFFF80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001146")]
			[Address(RVA = "0xDFFF88", Offset = "0xDFFF88", VA = "0xDFFF88")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public bool LockBorder
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0xDFFF94", Offset = "0xDFFF94", VA = "0xDFFF94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001148")]
			[Address(RVA = "0xDFFF9C", Offset = "0xDFFF9C", VA = "0xDFFF9C")]
			set
			{
			}
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xDFFFA8", Offset = "0xDFFFA8", VA = "0xDFFFA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FE98", Offset = "0xA1FE98")]
		public IEnumerator ProgressiveMesh(GameObject gameObject, Mesh sourceMesh, RelevanceSphere[] aRelevanceSpheres, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xE00078", Offset = "0xE00078", VA = "0xE00078")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FEFC", Offset = "0xA1FEFC")]
		public IEnumerator ComputeMeshWithVertexCount(GameObject gameObject, Mesh meshOut, int nVertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xE0014C", Offset = "0xE0014C", VA = "0xE0014C")]
		public int GetOriginalMeshUniqueVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xE00154", Offset = "0xE00154", VA = "0xE00154")]
		public int GetOriginalMeshTriangleCount()
		{
			return default(int);
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xE00198", Offset = "0xE00198", VA = "0xE00198")]
		public static Vector3[] GetWorldVertices(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xE00AA0", Offset = "0xE00AA0", VA = "0xE00AA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FF60", Offset = "0xA1FF60")]
		private IEnumerator ConsolidateMesh(GameObject gameObject, Mesh meshIn, Mesh meshOut, TriangleList[] aListTriangles, Vector3[] av3Vertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xE00B70", Offset = "0xE00B70", VA = "0xE00B70")]
		private int MapVertex(int nVertex, int nMax)
		{
			return default(int);
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xE00C08", Offset = "0xE00C08", VA = "0xE00C08")]
		private float ComputeEdgeCollapseCost(Vertex u, Vertex v, float fRelevanceBias)
		{
			return default(float);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xE01318", Offset = "0xE01318", VA = "0xE01318")]
		private void ComputeEdgeCostAtVertex(Vertex v, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xE01628", Offset = "0xE01628", VA = "0xE01628")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1FFC4", Offset = "0xA1FFC4")]
		private IEnumerator ComputeAllEdgeCollapseCosts(string strProgressDisplayObjectName, Transform transform, RelevanceSphere[] aRelevanceSpheres, [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xE016EC", Offset = "0xE016EC", VA = "0xE016EC")]
		private void Collapse(Vertex u, Vertex v, bool bRecompute, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xE0257C", Offset = "0xE0257C", VA = "0xE0257C")]
		private void AddVertices(List<Vector3> listVertices, List<Vector3> listVerticesWorld, List<MeshUniqueVertices.SerializableBoneWeight> listBoneWeights)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xE02860", Offset = "0xE02860", VA = "0xE02860")]
		private void AddFaceListSubMesh(int nSubMesh, List<int> listTriangles, int[] anIndices, Vector2[] v2Mapping)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xE02E50", Offset = "0xE02E50", VA = "0xE02E50")]
		private void ShareUV(Vector2[] aMapping, Triangle t)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xE03058", Offset = "0xE03058", VA = "0xE03058")]
		private Vertex MinimumCostEdge()
		{
			return null;
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xE030FC", Offset = "0xE030FC", VA = "0xE030FC")]
		private float HeapValue(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xE021B0", Offset = "0xE021B0", VA = "0xE021B0")]
		private void HeapSortUp(int k)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xE02384", Offset = "0xE02384", VA = "0xE02384")]
		private void HeapSortDown(int k)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xE031C8", Offset = "0xE031C8", VA = "0xE031C8")]
		private void HeapAdd(Vertex v)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xE0305C", Offset = "0xE0305C", VA = "0xE0305C")]
		private Vertex HeapPop()
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xE03248", Offset = "0xE03248", VA = "0xE03248")]
		public Simplifier()
		{
		}
	}
}
namespace UB
{
	[Token(Token = "0x20002B8")]
	public class EffectBase : MonoBehaviour
	{
		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, RenderTexture> AlreadyRendered;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _insiderendering;

		[Token(Token = "0x1700013B")]
		public static bool InsideRendering
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0xDFA5B0", Offset = "0xDFA5B0", VA = "0xDFA5B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001160")]
			[Address(RVA = "0xDFA618", Offset = "0xDFA618", VA = "0xDFA618")]
			set
			{
			}
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xDFA688", Offset = "0xDFA688", VA = "0xDFA688")]
		public EffectBase()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03788", Offset = "0xA03788")]
	public class MirrorWithShader : EffectBase
	{
		[Serializable]
		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04620", Offset = "0xA04620")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Material, bool> <>9__27_0;

			[Token(Token = "0x6001C24")]
			[Address(RVA = "0xDFD1DC", Offset = "0xDFD1DC", VA = "0xDFD1DC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C25")]
			[Address(RVA = "0xDFD1E4", Offset = "0xDFD1E4", VA = "0xDFD1E4")]
			internal bool <OnWillRenderObject>b__27_0(Material a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string UniqueName;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UpdateOnEditor;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WorkType WorkType;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FollowVector UpVector;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool DisablePixelLights;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int TextureSize;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ClipPlaneOffset;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Camera Camera;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask ReflectLayers;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject ReflectionCameraPrefab;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject _reflectionCameraPrefabInstance;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA1611C", Offset = "0xA1611C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1611C", Offset = "0xA1611C")]
		public Shader Shader;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int Lod;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1616C", Offset = "0xA1616C")]
		public int Iterations;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float CustomFloatParam2;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _material;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Hashtable _reflectionCameras;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RenderTexture _reflectionTexture1;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderTexture _reflectionTexture2;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RenderTexture _reflectionTexture3;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _oldReflectionTextureSize;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 ZeroV3;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Vector3 OneV3;

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xDFA710", Offset = "0xDFA710", VA = "0xDFA710")]
		public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xDFA82C", Offset = "0xDFA82C", VA = "0xDFA82C")]
		public static Vector4 PosToV4(Vector3 v)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xDFA860", Offset = "0xDFA860", VA = "0xDFA860")]
		public static Vector3 ToV3(Vector4 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xDFA894", Offset = "0xDFA894", VA = "0xDFA894")]
		private void Start()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xDFA934", Offset = "0xDFA934", VA = "0xDFA934")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xDFAA78", Offset = "0xDFAA78", VA = "0xDFAA78")]
		private void RenderMe(Material[] materials)
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xDFCC28", Offset = "0xDFCC28", VA = "0xDFCC28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xDFC3A4", Offset = "0xDFC3A4", VA = "0xDFC3A4")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xDFBA1C", Offset = "0xDFBA1C", VA = "0xDFBA1C")]
		private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xDFCA44", Offset = "0xDFCA44", VA = "0xDFCA44")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xDFC7A0", Offset = "0xDFC7A0", VA = "0xDFC7A0")]
		private void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xDFCFE8", Offset = "0xDFCFE8", VA = "0xDFCFE8")]
		public MirrorWithShader()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public enum FollowVector
	{
		[Token(Token = "0x400125A")]
		RedX = 1,
		[Token(Token = "0x400125B")]
		RedX_Negative = 4,
		[Token(Token = "0x400125C")]
		GreenY = 2,
		[Token(Token = "0x400125D")]
		GreenY_Negative = 5,
		[Token(Token = "0x400125E")]
		BlueZ = 3,
		[Token(Token = "0x400125F")]
		BlueZ_Negative = 6
	}
	[Token(Token = "0x20002BB")]
	public enum WorkType
	{
		[Token(Token = "0x4001261")]
		Reflect = 1,
		[Token(Token = "0x4001262")]
		Direct,
		[Token(Token = "0x4001263")]
		Transparent
	}
	[Token(Token = "0x20002BC")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03798", Offset = "0xA03798")]
	public class PortalWithShader : EffectBase
	{
		[Serializable]
		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04630", Offset = "0xA04630")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Material, bool> <>9__21_0;

			[Token(Token = "0x6001C27")]
			[Address(RVA = "0xDFEF98", Offset = "0xDFEF98", VA = "0xDFEF98")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xDFEFA0", Offset = "0xDFEFA0", VA = "0xDFEFA0")]
			internal bool <OnWillRenderObject>b__21_0(Material a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera MainCamera;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera PortalCamera;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Source;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform Destination;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16184", Offset = "0xA16184")]
		public int Iterations;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float CustomFloatParam2;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader Shader;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _material;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool DisablePixelLights;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int TextureSize;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask ReflectLayers;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Hashtable _reflectionCameras;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture _reflectionTexture1;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTexture _reflectionTexture2;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture _reflectionTexture3;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _oldReflectionTextureSize;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 ZeroV3;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Vector3 OneV3;

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xDFD250", Offset = "0xDFD250", VA = "0xDFD250")]
		public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xDFD36C", Offset = "0xDFD36C", VA = "0xDFD36C")]
		public static Vector4 PosToV4(Vector3 v)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xDFD3A0", Offset = "0xDFD3A0", VA = "0xDFD3A0")]
		public static Vector3 ToV3(Vector4 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xDFD3D4", Offset = "0xDFD3D4", VA = "0xDFD3D4")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xDFD518", Offset = "0xDFD518", VA = "0xDFD518")]
		private void RenderMe(Material[] materials)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xDFEA04", Offset = "0xDFEA04", VA = "0xDFEA04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xDFE70C", Offset = "0xDFE70C", VA = "0xDFE70C")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xDFDF74", Offset = "0xDFDF74", VA = "0xDFDF74")]
		private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xDFEDC4", Offset = "0xDFEDC4", VA = "0xDFEDC4")]
		public PortalWithShader()
		{
		}
	}
}
namespace Puppet3D
{
	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA037A8", Offset = "0xA037A8")]
	public class DrivenKey : MonoBehaviour
	{
		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DrivenObject[] DriverColection;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DriverEnabled;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Blend;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string BlendName;

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xEF4BA0", Offset = "0xEF4BA0", VA = "0xEF4BA0")]
		public void Run()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xEF4EB0", Offset = "0xEF4EB0", VA = "0xEF4EB0")]
		public DrivenKey()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BE")]
	public class DrivenObject
	{
		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] DrivenGOs;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] StartPositions;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] EndPositions;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion[] StartRotations;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion[] EndRotations;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Blend;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string BlendName;

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xEF4F20", Offset = "0xEF4F20", VA = "0xEF4F20")]
		public DrivenObject(GameObject[] objs)
		{
		}
	}
	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA037B8", Offset = "0xA037B8")]
	public class FABRIKControl : MonoBehaviour
	{
		[Token(Token = "0x20004FB")]
		public class BoneInfo
		{
			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Trans;

			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 Pos;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float L;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform Source;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Quaternion Offset;

			[Token(Token = "0x6001C29")]
			[Address(RVA = "0xEF6D94", Offset = "0xEF6D94", VA = "0xEF6D94")]
			public BoneInfo(Transform TransSet, Transform SourceSet)
			{
			}
		}

		[Token(Token = "0x20004FC")]
		public class BoneInfoChain
		{
			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Effector;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform Root;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 EffectorPos;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IKControl ikControl;

			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float ik;

			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<BoneInfo> _boneInfos;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float _MinDistance;

			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<BoneInfoChain> _childBoneChains;

			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0xEF52A4", Offset = "0xEF52A4", VA = "0xEF52A4")]
			public BoneInfoChain(Transform root)
			{
			}

			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0xEF58DC", Offset = "0xEF58DC", VA = "0xEF58DC")]
			public void Print()
			{
			}

			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0xEF5E70", Offset = "0xEF5E70", VA = "0xEF5E70")]
			public Vector3 Backward()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0xEF63B0", Offset = "0xEF63B0", VA = "0xEF63B0")]
			public void Forward(Vector3 newRootPos, bool isRoot = false)
			{
			}

			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0xEF7068", Offset = "0xEF7068", VA = "0xEF7068")]
			private bool MinDistanceCheck()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0xEF7154", Offset = "0xEF7154", VA = "0xEF7154")]
			public bool IsTooFar()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C30")]
			[Address(RVA = "0xEF7240", Offset = "0xEF7240", VA = "0xEF7240")]
			private float SumDistances()
			{
				return default(float);
			}

			[Token(Token = "0x6001C31")]
			[Address(RVA = "0xEF5BF4", Offset = "0xEF5BF4", VA = "0xEF5BF4")]
			public void SetInitialBones()
			{
			}

			[Token(Token = "0x6001C32")]
			[Address(RVA = "0xEF6A74", Offset = "0xEF6A74", VA = "0xEF6A74")]
			public void SetBones()
			{
			}

			[Token(Token = "0x6001C33")]
			[Address(RVA = "0xEF72E8", Offset = "0xEF72E8", VA = "0xEF72E8")]
			public void StrechedSolve()
			{
			}
		}

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoneInfoChain BoneChain;

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xEF5204", Offset = "0xEF5204", VA = "0xEF5204")]
		public void Awake()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xEF529C", Offset = "0xEF529C", VA = "0xEF529C")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xEF52A0", Offset = "0xEF52A0", VA = "0xEF52A0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xEF5208", Offset = "0xEF5208", VA = "0xEF5208")]
		public void Init()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xEF5E04", Offset = "0xEF5E04", VA = "0xEF5E04")]
		public void Update()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xEF6D8C", Offset = "0xEF6D8C", VA = "0xEF6D8C")]
		public FABRIKControl()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA037C8", Offset = "0xA037C8")]
	public class GlobalControl : Control
	{
		[Serializable]
		[Token(Token = "0x20004FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04640", Offset = "0xA04640")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<SkinnedMeshRenderer, float>, int> <>9__37_0;

			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<SkinnedMeshRenderer, float>, float> <>9__37_1;

			[Token(Token = "0x6001C35")]
			[Address(RVA = "0xEFBCC8", Offset = "0xEFBCC8", VA = "0xEFBCC8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C36")]
			[Address(RVA = "0xEFBCD0", Offset = "0xEFBCD0", VA = "0xEFBCD0")]
			internal int <CombineAllMeshes>b__37_0(KeyValuePair<SkinnedMeshRenderer, float> pair)
			{
				return default(int);
			}

			[Token(Token = "0x6001C37")]
			[Address(RVA = "0xEFBD20", Offset = "0xEFBD20", VA = "0xEFBD20")]
			internal float <CombineAllMeshes>b__37_1(KeyValuePair<SkinnedMeshRenderer, float> pair)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool BonesVisiblity;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ControlsVisiblity;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SplineControl> _SplineControls;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<IKControl> _Ikhandles;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ParentControl> _ParentControls;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<IKFKBlend> _IKFKBlends;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<DrivenKey> _DrivenKeys;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA161A0", Offset = "0xA161A0")]
		public float Body;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA161B8", Offset = "0xA161B8")]
		public float ArmLeft;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA161D0", Offset = "0xA161D0")]
		public float ArmRight;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA161E8", Offset = "0xA161E8")]
		public float LegLeft;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16200", Offset = "0xA16200")]
		public float LegRight;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16218", Offset = "0xA16218")]
		public List<Control> _Controls;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16228", Offset = "0xA16228")]
		public List<Bone> _Bones;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool AutoRefresh;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool ControlsEnabled;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool lateUpdate;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16238", Offset = "0xA16238")]
		public int _flipCorrection;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float HandleRadius;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform myTransform;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SplineControl[] _SplineControlsArray;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IKControl[] _IkhandlesArray;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ParentControl[] _ParentControlsArray;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Mesh _mesh;

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xEF7870", Offset = "0xEF7870", VA = "0xEF7870")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xEF806C", Offset = "0xEF806C", VA = "0xEF806C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xEF8174", Offset = "0xEF8174", VA = "0xEF8174")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xEF81CC", Offset = "0xEF81CC", VA = "0xEF81CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xEF7FCC", Offset = "0xEF7FCC", VA = "0xEF7FCC")]
		public void InitializeArrays()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xEF828C", Offset = "0xEF828C", VA = "0xEF828C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xEF837C", Offset = "0xEF837C", VA = "0xEF837C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xEF8380", Offset = "0xEF8380", VA = "0xEF8380")]
		public void UpdateVisibility()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xEF86C0", Offset = "0xEF86C0", VA = "0xEF86C0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xEF8844", Offset = "0xEF8844", VA = "0xEF8844")]
		private void Update()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xEF8D9C", Offset = "0xEF8D9C", VA = "0xEF8D9C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xEF885C", Offset = "0xEF885C", VA = "0xEF885C")]
		public void Run()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xEF798C", Offset = "0xEF798C", VA = "0xEF798C")]
		public void TraverseHierarchy(Transform root)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xEFA774", Offset = "0xEFA774", VA = "0xEFA774")]
		private void CombineAllMeshes()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xEF970C", Offset = "0xEF970C", VA = "0xEF970C")]
		private void FaceCamera()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xEFBAD8", Offset = "0xEFBAD8", VA = "0xEFBAD8")]
		public GlobalControl()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class IKControl : MonoBehaviour
	{
		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16248", Offset = "0xA16248")]
		public float IKFK;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool FKVisibility;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool IKVisibility;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16260", Offset = "0xA16260")]
		public Vector3 AimDirection;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16270", Offset = "0xA16270")]
		public Transform poleVector;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16280", Offset = "0xA16280")]
		public Vector3 UpDirection;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16290", Offset = "0xA16290")]
		public Vector3[] scaleStart;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA162A0", Offset = "0xA162A0")]
		public Transform topJointTransformIK;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA162B0", Offset = "0xA162B0")]
		public Transform middleJointTransformIK;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA162C0", Offset = "0xA162C0")]
		public Transform bottomJointTransformIK;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA162D0", Offset = "0xA162D0")]
		public Vector3 OffsetScale;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA162E0", Offset = "0xA162E0")]
		public Transform IK_CTRL;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 root2IK;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 root2IK2MiddleJoint;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA162F0", Offset = "0xA162F0")]
		public int numberIkBonesIndex;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16300", Offset = "0xA16300")]
		public int numberOfBones;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16310", Offset = "0xA16310")]
		public int iterations;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16320", Offset = "0xA16320")]
		public float damping;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16330", Offset = "0xA16330")]
		public Transform IKHandle;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16340", Offset = "0xA16340")]
		public Transform endTransform;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16350", Offset = "0xA16350")]
		public Transform startTransform;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16360", Offset = "0xA16360")]
		public List<Vector3> bindPose;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16370", Offset = "0xA16370")]
		public List<Transform> bindBones;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16380", Offset = "0xA16380")]
		public bool limitBones;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16390", Offset = "0xA16390")]
		public Quaternion Offset;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA163A0", Offset = "0xA163A0")]
		public Quaternion topJointTransform_OffsetRotation;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA163B0", Offset = "0xA163B0")]
		public Quaternion topJointTransform_OffsetRotation2;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA163C0", Offset = "0xA163C0")]
		public Quaternion middleJointTransform_OffsetRotation;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA163D0", Offset = "0xA163D0")]
		public Vector3 bottomJointTransform_OffsetRotation;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA163E0", Offset = "0xA163E0")]
		public bool bottomJointTransformMatchesIK_CTRLRotation;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA163F0", Offset = "0xA163F0")]
		public bool debug;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float angle;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float topJointTransform_Length;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float middleJointTransform_Length;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float arm_Length;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float IK_CTRLDistance;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float adyacent;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16400", Offset = "0xA16400")]
		public bool DisableRotateAround;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16410", Offset = "0xA16410")]
		public Transform topJointTransform;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16420", Offset = "0xA16420")]
		public Transform middleJointTransform;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16430", Offset = "0xA16430")]
		public Transform bottomJointTransform;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16440", Offset = "0xA16440")]
		public Transform topJointTransformFK;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16450", Offset = "0xA16450")]
		public Transform middleJointTransformFK;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16460", Offset = "0xA16460")]
		public Transform bottomJointTransformFK;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16470", Offset = "0xA16470")]
		public FK[] fks;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16480", Offset = "0xA16480")]
		public List<Transform> angleLimitTransform;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16490", Offset = "0xA16490")]
		public List<Vector2> angleLimits;

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xEF9838", Offset = "0xEF9838", VA = "0xEF9838")]
		public void CalculateIK()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xEFC640", Offset = "0xEFC640", VA = "0xEFC640")]
		private bool IsNaN(Quaternion q)
		{
			return default(bool);
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xEFC6B4", Offset = "0xEFC6B4", VA = "0xEFC6B4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xEFC828", Offset = "0xEFC828", VA = "0xEFC828")]
		public void CalculateMultiIK()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xEFC94C", Offset = "0xEFC94C", VA = "0xEFC94C")]
		private void CalculateMultiIK_run()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xEFCA08", Offset = "0xEFCA08", VA = "0xEFCA08")]
		private void RotateTowardsIK_CTRL(Transform startTransform)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xEFCD4C", Offset = "0xEFCD4C", VA = "0xEFCD4C")]
		public static float SignedAngle(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xEFCE90", Offset = "0xEFCE90", VA = "0xEFCE90")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xEFCF18", Offset = "0xEFCF18", VA = "0xEFCF18")]
		public IKControl()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA037D8", Offset = "0xA037D8")]
	public class IKFKBlend : MonoBehaviour
	{
		[Token(Token = "0x20004FE")]
		public enum IKFKType
		{
			[Token(Token = "0x4001E75")]
			ArmL,
			[Token(Token = "0x4001E76")]
			ArmR,
			[Token(Token = "0x4001E77")]
			LegL,
			[Token(Token = "0x4001E78")]
			LegR,
			[Token(Token = "0x4001E79")]
			Body
		}

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA164A0", Offset = "0xA164A0")]
		public float IKFK;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform IK;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform FK;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 PositionOffset;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion RotationOffset;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool ContrstrainPosition;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IKFKType GroupID;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 Pos;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float L;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform ConstrainedControl;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Vector3 _constrainedControlPosOffset;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Quaternion _constrainedControlRotOffset;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private Quaternion _constrainedControlRotOffsetDif;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform _globalControlTrans;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA164F8", Offset = "0xA164F8")]
		public Transform Handle;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool OverrideWithRig;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion _initialRotation;

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xEFD06C", Offset = "0xEFD06C", VA = "0xEFD06C")]
		public void Awake()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xEFD0A4", Offset = "0xEFD0A4", VA = "0xEFD0A4")]
		public void Init()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xEFA3D0", Offset = "0xEFA3D0", VA = "0xEFA3D0")]
		public void Run()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xEF8DB4", Offset = "0xEF8DB4", VA = "0xEF8DB4")]
		public void RunConstrianedControls()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xEFD33C", Offset = "0xEFD33C", VA = "0xEFD33C")]
		public IKFKBlend()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class ParentControl : Control
	{
		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject bone;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 HandleScale;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh OverrideMesh;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 OverrideMeshOffset;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool Point;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool Orient;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool Scale;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool ConstrianedPosition;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool ConstrianedOrient;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool MaintainOffset;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 OffsetPos;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 OffsetScale;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Quaternion OffsetOrient;

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xEF9468", Offset = "0xEF9468", VA = "0xEF9468")]
		public void ParentControlRun()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xEFD4F8", Offset = "0xEFD4F8", VA = "0xEFD4F8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xEFD7FC", Offset = "0xEFD7FC", VA = "0xEFD7FC")]
		public ParentControl()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA037E8", Offset = "0xA037E8")]
	public class SkinWeightControl : MonoBehaviour
	{
		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Bone0;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Bone1;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Bone2;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Bone3;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int boneIndex0;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int boneIndex1;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int boneIndex2;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int boneIndex3;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Weight0;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Weight1;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Weight2;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float Weight3;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh mesh;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SkinnedMeshRenderer meshRenderer;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int vertNumber;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject[] handles;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3[] verts;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh skinnedMesh;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool autoUpdate;

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xEFDBEC", Offset = "0xEFDBEC", VA = "0xEFDBEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xEFDBF0", Offset = "0xEFDBF0", VA = "0xEFDBF0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xEFDF88", Offset = "0xEFDF88", VA = "0xEFDF88")]
		public SkinWeightControl()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA037F8", Offset = "0xA037F8")]
	public class SplineControl : MonoBehaviour
	{
		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> _splineCTRLS;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numberBones;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector3> outCoordinates;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> bones;

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xEFE24C", Offset = "0xEFE24C", VA = "0xEFE24C")]
		private string GetUniqueName(string name)
		{
			return null;
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xEF8FF4", Offset = "0xEF8FF4", VA = "0xEF8FF4")]
		public void Run()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xEFE470", Offset = "0xEFE470", VA = "0xEFE470")]
		public static bool CatmullRom(List<Transform> inCoordinates, out List<Vector3> outCoordinates, int samples)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xEFE720", Offset = "0xEFE720", VA = "0xEFE720")]
		public static Vector3 PointOnCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xEFE7F8", Offset = "0xEFE7F8", VA = "0xEFE7F8")]
		public SplineControl()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03808", Offset = "0xA03808")]
	public class Bakedmesh : MonoBehaviour
	{
		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinnedMeshRenderer skin;

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xEF3EF0", Offset = "0xEF3EF0", VA = "0xEF3EF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xEF3F58", Offset = "0xEF3F58", VA = "0xEF3F58")]
		private void Update()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xEF4390", Offset = "0xEF4390", VA = "0xEF4390")]
		public Bakedmesh()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class Guides : MonoBehaviour
	{
		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] Biped;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bounds Bounds;

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xEFC450", Offset = "0xEFC450", VA = "0xEFC450")]
		public Guides()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03818", Offset = "0xA03818")]
	public class StoreData : MonoBehaviour
	{
		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> Data;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 OriginalSpritePosition;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16508", Offset = "0xA16508")]
		public bool Editable;

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xEFE8C0", Offset = "0xEFE8C0", VA = "0xEFE8C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xEFE9BC", Offset = "0xEFE9BC", VA = "0xEFE9BC")]
		public StoreData()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class Voxel
	{
		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Bone0;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Bone1;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Bone2;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Bone3;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Weight0;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Weight1;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Weight2;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Weight3;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] NeighbourIndexes;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Bounds bounds;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool Inside;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 Pos;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 Scale;

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xEFEADC", Offset = "0xEFEADC", VA = "0xEFEADC")]
		public Voxel()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03828", Offset = "0xA03828")]
	public class Bone : MonoBehaviour
	{
		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Radius;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color Color;

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xEF4398", Offset = "0xEF4398", VA = "0xEF4398")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xEF4458", Offset = "0xEF4458", VA = "0xEF4458")]
		private void Update()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xEF445C", Offset = "0xEF445C", VA = "0xEF445C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xEF4B50", Offset = "0xEF4B50", VA = "0xEF4B50")]
		private void OnHideGizmos()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xEF4B54", Offset = "0xEF4B54", VA = "0xEF4B54")]
		public Bone()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class Control : MonoBehaviour
	{
		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16518", Offset = "0xA16518")]
		public bool Active;

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xEF4B90", Offset = "0xEF4B90", VA = "0xEF4B90")]
		public Control()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03838", Offset = "0xA03838")]
	public class FK : Control
	{
		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Transparency;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float HandleSize;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16528", Offset = "0xA16528")]
		public IKControl IKHandle;

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xEF7550", Offset = "0xEF7550", VA = "0xEF7550")]
		private void Start()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xEF7554", Offset = "0xEF7554", VA = "0xEF7554")]
		private void Update()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xEF7610", Offset = "0xEF7610", VA = "0xEF7610")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xEF7614", Offset = "0xEF7614", VA = "0xEF7614")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xEF7858", Offset = "0xEF7858", VA = "0xEF7858")]
		public FK()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03848", Offset = "0xA03848")]
	public class Guide : MonoBehaviour
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Radius;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 HandlePos;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool SnapToCentre;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool Mirror;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Guide MirroredGuide;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16538", Offset = "0xA16538")]
		public Color _Color;

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xEFBD64", Offset = "0xEFBD64", VA = "0xEFBD64")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xEFBF20", Offset = "0xEFBF20", VA = "0xEFBF20")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xEFC294", Offset = "0xEFC294", VA = "0xEFC294")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xEFC298", Offset = "0xEFC298", VA = "0xEFC298")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xEFC434", Offset = "0xEFC434", VA = "0xEFC434")]
		public Guide()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class IK : Control
	{
		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HandleSize;

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xEFC458", Offset = "0xEFC458", VA = "0xEFC458")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xEFC628", Offset = "0xEFC628", VA = "0xEFC628")]
		public IK()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03858", Offset = "0xA03858")]
	public class IKHidden : MonoBehaviour
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16548", Offset = "0xA16548")]
		public IKControl IKHandle;

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xEFD434", Offset = "0xEFD434", VA = "0xEFD434")]
		private void Update()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xEFD4F0", Offset = "0xEFD4F0", VA = "0xEFD4F0")]
		public IKHidden()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03868", Offset = "0xA03868")]
	public class Pole : Control
	{
		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HandleRadius;

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xEFD8C8", Offset = "0xEFD8C8", VA = "0xEFD8C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xEFD8CC", Offset = "0xEFD8CC", VA = "0xEFD8CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xEFD8D0", Offset = "0xEFD8D0", VA = "0xEFD8D0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xEFD940", Offset = "0xEFD940", VA = "0xEFD940")]
		public Pole()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03878", Offset = "0xA03878")]
	public class Spline : Control
	{
		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 HandleSize;

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xEFDF90", Offset = "0xEFDF90", VA = "0xEFDF90")]
		private void Start()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xEFDF94", Offset = "0xEFDF94", VA = "0xEFDF94")]
		private void Update()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xEFDF98", Offset = "0xEFDF98", VA = "0xEFDF98")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xEFE1CC", Offset = "0xEFE1CC", VA = "0xEFE1CC")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03888", Offset = "0xA03888")]
	public class VertexWeight : MonoBehaviour
	{
		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float HandleRadius;

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xEFEA64", Offset = "0xEFEA64", VA = "0xEFEA64")]
		private void Start()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xEFEA68", Offset = "0xEFEA68", VA = "0xEFEA68")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xEFEA6C", Offset = "0xEFEA6C", VA = "0xEFEA6C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xEFEAC8", Offset = "0xEFEAC8", VA = "0xEFEAC8")]
		public VertexWeight()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class Puppet3DAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator _animator;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string axisName;

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xEFD958", Offset = "0xEFD958", VA = "0xEFD958")]
		private void Start()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xEFD9C0", Offset = "0xEFD9C0", VA = "0xEFD9C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xEFDB84", Offset = "0xEFDB84", VA = "0xEFDB84")]
		public Puppet3DAnimatorController()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class Puppet3DSortingLayer : MonoBehaviour
	{
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16558", Offset = "0xA16558")]
		public Vector2 offsetAmount;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16568", Offset = "0xA16568")]
		public Vector2[] uvsDefault;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16578", Offset = "0xA16578")]
		public bool initialized;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA16588", Offset = "0xA16588")]
		public Bounds bounds;

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xEFDBE4", Offset = "0xEFDBE4", VA = "0xEFDBE4")]
		public Puppet3DSortingLayer()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20002D5")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04650", Offset = "0xA04650")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x6001C38")]
			[Address(RVA = "0xED8F1C", Offset = "0xED8F1C", VA = "0xED8F1C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001C39")]
			[Address(RVA = "0xED96C4", Offset = "0xED96C4", VA = "0xED96C4")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xED96E0", Offset = "0xED96E0", VA = "0xED96E0")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04660", Offset = "0xA04660")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xED9054", Offset = "0xED9054", VA = "0xED9054")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0xED96FC", Offset = "0xED96FC", VA = "0xED96FC")]
			internal float <DOPitch>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xED9718", Offset = "0xED9718", VA = "0xED9718")]
			internal void <DOPitch>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04670", Offset = "0xA04670")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMixer target;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string floatName;

			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xED9190", Offset = "0xED9190", VA = "0xED9190")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xED9734", Offset = "0xED9734", VA = "0xED9734")]
			internal float <DOSetFloat>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xED9774", Offset = "0xED9774", VA = "0xED9774")]
			internal void <DOSetFloat>b__1(float x)
			{
			}
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xED8DC4", Offset = "0xED8DC4", VA = "0xED8DC4")]
		public static Tweener DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xED8F24", Offset = "0xED8F24", VA = "0xED8F24")]
		public static Tweener DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xED905C", Offset = "0xED905C", VA = "0xED905C")]
		public static Tweener DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xED9198", Offset = "0xED9198", VA = "0xED9198")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xED9210", Offset = "0xED9210", VA = "0xED9210")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xED9288", Offset = "0xED9288", VA = "0xED9288")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xED92F0", Offset = "0xED92F0", VA = "0xED92F0")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xED9378", Offset = "0xED9378", VA = "0xED9378")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xED93E0", Offset = "0xED93E0", VA = "0xED93E0")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xED9448", Offset = "0xED9448", VA = "0xED9448")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xED94B0", Offset = "0xED94B0", VA = "0xED94B0")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xED9518", Offset = "0xED9518", VA = "0xED9518")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xED9588", Offset = "0xED9588", VA = "0xED9588")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xED95F4", Offset = "0xED95F4", VA = "0xED95F4")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xED965C", Offset = "0xED965C", VA = "0xED965C")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002D6")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x2000502")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04680", Offset = "0xA04680")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001C41")]
			[Address(RVA = "0xED98FC", Offset = "0xED98FC", VA = "0xED98FC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001C42")]
			[Address(RVA = "0xEDAC80", Offset = "0xEDAC80", VA = "0xEDAC80")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04690", Offset = "0xA04690")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001C43")]
			[Address(RVA = "0xED9A84", Offset = "0xED9A84", VA = "0xED9A84")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001C44")]
			[Address(RVA = "0xEDADBC", Offset = "0xEDADBC", VA = "0xEDADBC")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA046A0", Offset = "0xA046A0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001C45")]
			[Address(RVA = "0xED9C0C", Offset = "0xED9C0C", VA = "0xED9C0C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001C46")]
			[Address(RVA = "0xEDADD8", Offset = "0xEDADD8", VA = "0xEDADD8")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA046B0", Offset = "0xA046B0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001C47")]
			[Address(RVA = "0xED9D94", Offset = "0xED9D94", VA = "0xED9D94")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xEDADF4", Offset = "0xEDADF4", VA = "0xEDADF4")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA046C0", Offset = "0xA046C0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001C49")]
			[Address(RVA = "0xED9F08", Offset = "0xED9F08", VA = "0xED9F08")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xEDAE10", Offset = "0xEDAE10", VA = "0xEDAE10")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA046D0", Offset = "0xA046D0")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0xEDA0F4", Offset = "0xEDA0F4", VA = "0xEDA0F4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xEDAE2C", Offset = "0xEDAE2C", VA = "0xEDAE2C")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA046E0", Offset = "0xA046E0")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endValue;

			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Tween yTween;

			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xEDA570", Offset = "0xEDA570", VA = "0xEDA570")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xEDAE48", Offset = "0xEDAE48", VA = "0xEDAE48")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0xEDAE64", Offset = "0xEDAE64", VA = "0xEDAE64")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x6001C50")]
			[Address(RVA = "0xEDAE98", Offset = "0xEDAE98", VA = "0xEDAE98")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001C51")]
			[Address(RVA = "0xEDAEB4", Offset = "0xEDAEB4", VA = "0xEDAEB4")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001C52")]
			[Address(RVA = "0xEDAED0", Offset = "0xEDAED0", VA = "0xEDAED0")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA046F0", Offset = "0xA046F0")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001C53")]
			[Address(RVA = "0xEDA764", Offset = "0xEDA764", VA = "0xEDA764")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001C54")]
			[Address(RVA = "0xEDAF90", Offset = "0xEDAF90", VA = "0xEDAF90")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04700", Offset = "0xA04700")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x6001C55")]
			[Address(RVA = "0xEDA96C", Offset = "0xEDA96C", VA = "0xEDA96C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001C56")]
			[Address(RVA = "0xEDAFAC", Offset = "0xEDAFAC", VA = "0xEDAFAC")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001C57")]
			[Address(RVA = "0xEDAFC8", Offset = "0xEDAFC8", VA = "0xEDAFC8")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04710", Offset = "0xA04710")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6001C58")]
			[Address(RVA = "0xEDAAEC", Offset = "0xEDAAEC", VA = "0xEDAAEC")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001C59")]
			[Address(RVA = "0xEDB0CC", Offset = "0xEDB0CC", VA = "0xEDB0CC")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04720", Offset = "0xA04720")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xEDAC78", Offset = "0xEDAC78", VA = "0xEDAC78")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0xEDAC9C", Offset = "0xEDAC9C", VA = "0xEDAC9C")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0xEDACB8", Offset = "0xEDACB8", VA = "0xEDACB8")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xED9798", Offset = "0xED9798", VA = "0xED9798")]
		public static Tweener DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xED9904", Offset = "0xED9904", VA = "0xED9904")]
		public static Tweener DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xED9A8C", Offset = "0xED9A8C", VA = "0xED9A8C")]
		public static Tweener DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xED9C14", Offset = "0xED9C14", VA = "0xED9C14")]
		public static Tweener DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xED9D9C", Offset = "0xED9D9C", VA = "0xED9D9C")]
		public static Tweener DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xED9F10", Offset = "0xED9F10", VA = "0xED9F10")]
		public static Tweener DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xEDA0FC", Offset = "0xEDA0FC", VA = "0xEDA0FC")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xEDA578", Offset = "0xEDA578", VA = "0xEDA578")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xEDA76C", Offset = "0xEDA76C", VA = "0xEDA76C")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xEDA974", Offset = "0xEDA974", VA = "0xEDA974")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xEDAAF4", Offset = "0xEDAAF4", VA = "0xEDAAF4")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D7")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04730", Offset = "0xA04730")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0xEDB244", Offset = "0xEDB244", VA = "0xEDB244")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0xEDB9F0", Offset = "0xEDB9F0", VA = "0xEDB9F0")]
			internal Vector2 <DOMove>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04740", Offset = "0xA04740")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0xEDB3B8", Offset = "0xEDB3B8", VA = "0xEDB3B8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001C60")]
			[Address(RVA = "0xEDBA0C", Offset = "0xEDBA0C", VA = "0xEDBA0C")]
			internal Vector2 <DOMoveX>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04750", Offset = "0xA04750")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001C61")]
			[Address(RVA = "0xEDB52C", Offset = "0xEDB52C", VA = "0xEDB52C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001C62")]
			[Address(RVA = "0xEDBA28", Offset = "0xEDBA28", VA = "0xEDBA28")]
			internal Vector2 <DOMoveY>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04760", Offset = "0xA04760")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xEDB668", Offset = "0xEDB668", VA = "0xEDB668")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001C64")]
			[Address(RVA = "0xEDBA44", Offset = "0xEDBA44", VA = "0xEDBA44")]
			internal float <DORotate>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04770", Offset = "0xA04770")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Tween yTween;

			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xEDB9E8", Offset = "0xEDB9E8", VA = "0xEDB9E8")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001C66")]
			[Address(RVA = "0xEDBA60", Offset = "0xEDBA60", VA = "0xEDBA60")]
			internal Vector2 <DOJump>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xEDBA7C", Offset = "0xEDBA7C", VA = "0xEDBA7C")]
			internal void <DOJump>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x6001C68")]
			[Address(RVA = "0xEDBA98", Offset = "0xEDBA98", VA = "0xEDBA98")]
			internal void <DOJump>b__2()
			{
			}

			[Token(Token = "0x6001C69")]
			[Address(RVA = "0xEDBACC", Offset = "0xEDBACC", VA = "0xEDBACC")]
			internal Vector2 <DOJump>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0xEDBAE8", Offset = "0xEDBAE8", VA = "0xEDBAE8")]
			internal void <DOJump>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0xEDBB04", Offset = "0xEDBB04", VA = "0xEDBB04")]
			internal void <DOJump>b__5()
			{
			}
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xEDB0E8", Offset = "0xEDB0E8", VA = "0xEDB0E8")]
		public static Tweener DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xEDB24C", Offset = "0xEDB24C", VA = "0xEDB24C")]
		public static Tweener DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xEDB3C0", Offset = "0xEDB3C0", VA = "0xEDB3C0")]
		public static Tweener DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xEDB534", Offset = "0xEDB534", VA = "0xEDB534")]
		public static Tweener DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xEDB670", Offset = "0xEDB670", VA = "0xEDB670")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D8")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04780", Offset = "0xA04780")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0xEDBD84", Offset = "0xEDBD84", VA = "0xEDBD84")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0xEDC270", Offset = "0xEDC270", VA = "0xEDC270")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xEDC28C", Offset = "0xEDC28C", VA = "0xEDC28C")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04790", Offset = "0xA04790")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xEDBEBC", Offset = "0xEDBEBC", VA = "0xEDBEBC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xEDC2A8", Offset = "0xEDC2A8", VA = "0xEDC2A8")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001C71")]
			[Address(RVA = "0xEDC2C4", Offset = "0xEDC2C4", VA = "0xEDC2C4")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA047A0", Offset = "0xA047A0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer target;

			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xEDC268", Offset = "0xEDC268", VA = "0xEDC268")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xEDC2E0", Offset = "0xEDC2E0", VA = "0xEDC2E0")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xEDC2EC", Offset = "0xEDC2EC", VA = "0xEDC2EC")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xEDBC2C", Offset = "0xEDBC2C", VA = "0xEDBC2C")]
		public static Tweener DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xEDBD8C", Offset = "0xEDBD8C", VA = "0xEDBD8C")]
		public static Tweener DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xEDBEC4", Offset = "0xEDBEC4", VA = "0xEDBEC4")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xEDC084", Offset = "0xEDC084", VA = "0xEDC084")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D9")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x2000515")]
		public static class Utils
		{
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xEE1018", Offset = "0xEE1018", VA = "0xEE1018")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA047B0", Offset = "0xA047B0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup target;

			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xEDC4C8", Offset = "0xEDC4C8", VA = "0xEDC4C8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xEDFED4", Offset = "0xEDFED4", VA = "0xEDFED4")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xEDFEF0", Offset = "0xEDFEF0", VA = "0xEDFEF0")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA047C0", Offset = "0xA047C0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xEDC628", Offset = "0xEDC628", VA = "0xEDC628")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0xEE0144", Offset = "0xEE0144", VA = "0xEE0144")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xEE0168", Offset = "0xEE0168", VA = "0xEE0168")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA047D0", Offset = "0xA047D0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0xEDC760", Offset = "0xEDC760", VA = "0xEDC760")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0xEE07D0", Offset = "0xEE07D0", VA = "0xEE07D0")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0xEE07F4", Offset = "0xEE07F4", VA = "0xEE07F4")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA047E0", Offset = "0xA047E0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0xEDC8C0", Offset = "0xEDC8C0", VA = "0xEDC8C0")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xEE0CBC", Offset = "0xEE0CBC", VA = "0xEE0CBC")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xEE0CE0", Offset = "0xEE0CE0", VA = "0xEE0CE0")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA047F0", Offset = "0xA047F0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6001C82")]
			[Address(RVA = "0xEDC9F8", Offset = "0xEDC9F8", VA = "0xEDC9F8")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xEE0D04", Offset = "0xEE0D04", VA = "0xEE0D04")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001C84")]
			[Address(RVA = "0xEE0D28", Offset = "0xEE0D28", VA = "0xEE0D28")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04800", Offset = "0xA04800")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6001C85")]
			[Address(RVA = "0xEDCB54", Offset = "0xEDCB54", VA = "0xEDCB54")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001C86")]
			[Address(RVA = "0xEE0D4C", Offset = "0xEE0D4C", VA = "0xEE0D4C")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xEE0D68", Offset = "0xEE0D68", VA = "0xEE0D68")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04810", Offset = "0xA04810")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6001C88")]
			[Address(RVA = "0xEDCE74", Offset = "0xEDCE74", VA = "0xEDCE74")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001C89")]
			[Address(RVA = "0xEE0D84", Offset = "0xEE0D84", VA = "0xEE0D84")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0xEE0E04", Offset = "0xEE0E04", VA = "0xEE0E04")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04820", Offset = "0xA04820")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0xEDCFCC", Offset = "0xEDCFCC", VA = "0xEDCFCC")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0xEE0E60", Offset = "0xEE0E60", VA = "0xEE0E60")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0xEE0EE0", Offset = "0xEE0EE0", VA = "0xEE0EE0")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04830", Offset = "0xA04830")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0xEDD124", Offset = "0xEDD124", VA = "0xEDD124")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xEE0F3C", Offset = "0xEE0F3C", VA = "0xEE0F3C")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001C90")]
			[Address(RVA = "0xEE0FBC", Offset = "0xEE0FBC", VA = "0xEE0FBC")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04840", Offset = "0xA04840")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xEDD284", Offset = "0xEDD284", VA = "0xEDD284")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xEDFF0C", Offset = "0xEDFF0C", VA = "0xEDFF0C")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xEDFF2C", Offset = "0xEDFF2C", VA = "0xEDFF2C")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04850", Offset = "0xA04850")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6001C94")]
			[Address(RVA = "0xEDD3BC", Offset = "0xEDD3BC", VA = "0xEDD3BC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001C95")]
			[Address(RVA = "0xEDFF48", Offset = "0xEDFF48", VA = "0xEDFF48")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001C96")]
			[Address(RVA = "0xEDFF68", Offset = "0xEDFF68", VA = "0xEDFF68")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04860", Offset = "0xA04860")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6001C97")]
			[Address(RVA = "0xEDD504", Offset = "0xEDD504", VA = "0xEDD504")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xEDFF84", Offset = "0xEDFF84", VA = "0xEDFF84")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xEDFFA0", Offset = "0xEDFFA0", VA = "0xEDFFA0")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04870", Offset = "0xA04870")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0xEDD65C", Offset = "0xEDD65C", VA = "0xEDD65C")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0xEDFFBC", Offset = "0xEDFFBC", VA = "0xEDFFBC")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0xEDFFD8", Offset = "0xEDFFD8", VA = "0xEDFFD8")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04880", Offset = "0xA04880")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0xEDD7CC", Offset = "0xEDD7CC", VA = "0xEDD7CC")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0xEDFFF4", Offset = "0xEDFFF4", VA = "0xEDFFF4")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0xEE0010", Offset = "0xEE0010", VA = "0xEE0010")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04890", Offset = "0xA04890")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0xEDD93C", Offset = "0xEDD93C", VA = "0xEDD93C")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0xEE002C", Offset = "0xEE002C", VA = "0xEE002C")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0xEE0048", Offset = "0xEE0048", VA = "0xEE0048")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA048A0", Offset = "0xA048A0")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xEDDA9C", Offset = "0xEDDA9C", VA = "0xEDDA9C")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0xEE0064", Offset = "0xEE0064", VA = "0xEE0064")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0xEE0080", Offset = "0xEE0080", VA = "0xEE0080")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA048B0", Offset = "0xA048B0")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0xEDDC18", Offset = "0xEDDC18", VA = "0xEDDC18")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0xEE009C", Offset = "0xEE009C", VA = "0xEE009C")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xEE00B8", Offset = "0xEE00B8", VA = "0xEE00B8")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA048C0", Offset = "0xA048C0")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0xEDDD94", Offset = "0xEDDD94", VA = "0xEDDD94")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0xEE00D4", Offset = "0xEE00D4", VA = "0xEE00D4")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0xEE00F0", Offset = "0xEE00F0", VA = "0xEE00F0")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA048D0", Offset = "0xA048D0")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0xEDDF10", Offset = "0xEDDF10", VA = "0xEDDF10")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0xEE010C", Offset = "0xEE010C", VA = "0xEE010C")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0xEE0128", Offset = "0xEE0128", VA = "0xEE0128")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA048E0", Offset = "0xA048E0")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0xEDE068", Offset = "0xEDE068", VA = "0xEDE068")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0xEE018C", Offset = "0xEE018C", VA = "0xEE018C")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0xEE01A8", Offset = "0xEE01A8", VA = "0xEE01A8")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA048F0", Offset = "0xA048F0")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0xEDE1C0", Offset = "0xEDE1C0", VA = "0xEDE1C0")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0xEE01C4", Offset = "0xEE01C4", VA = "0xEE01C4")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0xEE01E0", Offset = "0xEE01E0", VA = "0xEE01E0")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04900", Offset = "0xA04900")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0xEDE308", Offset = "0xEDE308", VA = "0xEDE308")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0xEE01FC", Offset = "0xEE01FC", VA = "0xEE01FC")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xEE0218", Offset = "0xEE0218", VA = "0xEE0218")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04910", Offset = "0xA04910")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xEDE46C", Offset = "0xEDE46C", VA = "0xEDE46C")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0xEE0234", Offset = "0xEE0234", VA = "0xEE0234")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xEE0250", Offset = "0xEE0250", VA = "0xEE0250")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04920", Offset = "0xA04920")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0xEDE5D0", Offset = "0xEDE5D0", VA = "0xEDE5D0")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0xEE026C", Offset = "0xEE026C", VA = "0xEE026C")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0xEE0288", Offset = "0xEE0288", VA = "0xEE0288")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04930", Offset = "0xA04930")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0xEDE728", Offset = "0xEDE728", VA = "0xEDE728")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0xEE02A4", Offset = "0xEE02A4", VA = "0xEE02A4")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0xEE02C0", Offset = "0xEE02C0", VA = "0xEE02C0")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200052F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04940", Offset = "0xA04940")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0xEDE8E0", Offset = "0xEDE8E0", VA = "0xEDE8E0")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0xEE02DC", Offset = "0xEE02DC", VA = "0xEE02DC")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0xEE036C", Offset = "0xEE036C", VA = "0xEE036C")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04950", Offset = "0xA04950")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0xEDEA68", Offset = "0xEDEA68", VA = "0xEDEA68")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0xEE0410", Offset = "0xEE0410", VA = "0xEE0410")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xEE04A0", Offset = "0xEE04A0", VA = "0xEE04A0")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04960", Offset = "0xA04960")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0xEDEC3C", Offset = "0xEDEC3C", VA = "0xEDEC3C")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0xEE0544", Offset = "0xEE0544", VA = "0xEE0544")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0xEE05D4", Offset = "0xEE05D4", VA = "0xEE05D4")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04970", Offset = "0xA04970")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xEDEFC0", Offset = "0xEDEFC0", VA = "0xEDEFC0")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0xEE0678", Offset = "0xEE0678", VA = "0xEE0678")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xEE0694", Offset = "0xEE0694", VA = "0xEE0694")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xEE06B0", Offset = "0xEE06B0", VA = "0xEE06B0")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0xEE06E4", Offset = "0xEE06E4", VA = "0xEE06E4")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xEE0700", Offset = "0xEE0700", VA = "0xEE0700")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xEE071C", Offset = "0xEE071C", VA = "0xEE071C")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04980", Offset = "0xA04980")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xEDF118", Offset = "0xEDF118", VA = "0xEDF118")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0xEE0818", Offset = "0xEE0818", VA = "0xEE0818")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0xEE0888", Offset = "0xEE0888", VA = "0xEE0888")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04990", Offset = "0xA04990")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0xEDF260", Offset = "0xEDF260", VA = "0xEDF260")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0xEE08D4", Offset = "0xEE08D4", VA = "0xEE08D4")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0xEE08F0", Offset = "0xEE08F0", VA = "0xEE08F0")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA049A0", Offset = "0xA049A0")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0xEDF3A8", Offset = "0xEDF3A8", VA = "0xEDF3A8")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0xEE090C", Offset = "0xEE090C", VA = "0xEE090C")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xEE0928", Offset = "0xEE0928", VA = "0xEE0928")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000536")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA049B0", Offset = "0xA049B0")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider target;

			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0xEDF4F0", Offset = "0xEDF4F0", VA = "0xEDF4F0")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0xEE0944", Offset = "0xEE0944", VA = "0xEE0944")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0xEE0968", Offset = "0xEE0968", VA = "0xEE0968")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA049C0", Offset = "0xA049C0")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0xEDF650", Offset = "0xEDF650", VA = "0xEDF650")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0xEE098C", Offset = "0xEE098C", VA = "0xEE098C")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0xEE09B0", Offset = "0xEE09B0", VA = "0xEE09B0")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA049D0", Offset = "0xA049D0")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0xEDF788", Offset = "0xEDF788", VA = "0xEDF788")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0xEE09D4", Offset = "0xEE09D4", VA = "0xEE09D4")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0xEE09F8", Offset = "0xEE09F8", VA = "0xEE09F8")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA049E0", Offset = "0xA049E0")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0xEDF8F0", Offset = "0xEDF8F0", VA = "0xEDF8F0")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xEE0A1C", Offset = "0xEE0A1C", VA = "0xEE0A1C")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xEE0A40", Offset = "0xEE0A40", VA = "0xEE0A40")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA049F0", Offset = "0xA049F0")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic target;

			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0xEDFAE4", Offset = "0xEDFAE4", VA = "0xEDFAE4")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0xEE0A64", Offset = "0xEE0A64", VA = "0xEE0A64")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0xEE0A70", Offset = "0xEE0A70", VA = "0xEE0A70")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04A00", Offset = "0xA04A00")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image target;

			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0xEDFCD8", Offset = "0xEDFCD8", VA = "0xEDFCD8")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0xEE0B2C", Offset = "0xEE0B2C", VA = "0xEE0B2C")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0xEE0B38", Offset = "0xEE0B38", VA = "0xEE0B38")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04A10", Offset = "0xA04A10")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text target;

			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0xEDFECC", Offset = "0xEDFECC", VA = "0xEDFECC")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6001CED")]
			[Address(RVA = "0xEE0BF4", Offset = "0xEE0BF4", VA = "0xEE0BF4")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0xEE0C00", Offset = "0xEE0C00", VA = "0xEE0C00")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xEDC398", Offset = "0xEDC398", VA = "0xEDC398")]
		public static Tweener DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xEDC4D0", Offset = "0xEDC4D0", VA = "0xEDC4D0")]
		public static Tweener DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xEDC630", Offset = "0xEDC630", VA = "0xEDC630")]
		public static Tweener DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xEDC768", Offset = "0xEDC768", VA = "0xEDC768")]
		public static Tweener DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xEDC8C8", Offset = "0xEDC8C8", VA = "0xEDC8C8")]
		public static Tweener DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xEDCA00", Offset = "0xEDCA00", VA = "0xEDCA00")]
		public static Tweener DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xEDCB5C", Offset = "0xEDCB5C", VA = "0xEDCB5C")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xEDCD24", Offset = "0xEDCD24", VA = "0xEDCD24")]
		public static Tweener DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xEDCE7C", Offset = "0xEDCE7C", VA = "0xEDCE7C")]
		public static Tweener DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xEDCFD4", Offset = "0xEDCFD4", VA = "0xEDCFD4")]
		public static Tweener DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xEDD12C", Offset = "0xEDD12C", VA = "0xEDD12C")]
		public static Tweener DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xEDD28C", Offset = "0xEDD28C", VA = "0xEDD28C")]
		public static Tweener DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xEDD3C4", Offset = "0xEDD3C4", VA = "0xEDD3C4")]
		public static Tweener DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xEDD50C", Offset = "0xEDD50C", VA = "0xEDD50C")]
		public static Tweener DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xEDD664", Offset = "0xEDD664", VA = "0xEDD664")]
		public static Tweener DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xEDD7D4", Offset = "0xEDD7D4", VA = "0xEDD7D4")]
		public static Tweener DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xEDD944", Offset = "0xEDD944", VA = "0xEDD944")]
		public static Tweener DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xEDDAA4", Offset = "0xEDDAA4", VA = "0xEDDAA4")]
		public static Tweener DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xEDDC20", Offset = "0xEDDC20", VA = "0xEDDC20")]
		public static Tweener DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xEDDD9C", Offset = "0xEDDD9C", VA = "0xEDDD9C")]
		public static Tweener DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xEDDF18", Offset = "0xEDDF18", VA = "0xEDDF18")]
		public static Tweener DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xEDE070", Offset = "0xEDE070", VA = "0xEDE070")]
		public static Tweener DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xEDE1C8", Offset = "0xEDE1C8", VA = "0xEDE1C8")]
		public static Tweener DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xEDE310", Offset = "0xEDE310", VA = "0xEDE310")]
		public static Tweener DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xEDE474", Offset = "0xEDE474", VA = "0xEDE474")]
		public static Tweener DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xEDE5D8", Offset = "0xEDE5D8", VA = "0xEDE5D8")]
		public static Tweener DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xEDE730", Offset = "0xEDE730", VA = "0xEDE730")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xEDE8E8", Offset = "0xEDE8E8", VA = "0xEDE8E8")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xEDEA70", Offset = "0xEDEA70", VA = "0xEDEA70")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xEDEC44", Offset = "0xEDEC44", VA = "0xEDEC44")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xEDEFC8", Offset = "0xEDEFC8", VA = "0xEDEFC8")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xEDF120", Offset = "0xEDF120", VA = "0xEDF120")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xEDF268", Offset = "0xEDF268", VA = "0xEDF268")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xEDF3B0", Offset = "0xEDF3B0", VA = "0xEDF3B0")]
		public static Tweener DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xEDF4F8", Offset = "0xEDF4F8", VA = "0xEDF4F8")]
		public static Tweener DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xEDF658", Offset = "0xEDF658", VA = "0xEDF658")]
		public static Tweener DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xEDF790", Offset = "0xEDF790", VA = "0xEDF790")]
		public static Tweener DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xEDF8F8", Offset = "0xEDF8F8", VA = "0xEDF8F8")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xEDFAEC", Offset = "0xEDFAEC", VA = "0xEDFAEC")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xEDFCE0", Offset = "0xEDFCE0", VA = "0xEDFCE0")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DA")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x6001222")]
		[Address(RVA = "0xEE12C4", Offset = "0xEE12C4", VA = "0xEE12C4")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xEE1488", Offset = "0xEE1488", VA = "0xEE1488")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xEE165C", Offset = "0xEE165C", VA = "0xEE165C")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xEE1700", Offset = "0xEE1700", VA = "0xEE1700")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xEE17A4", Offset = "0xEE17A4", VA = "0xEE17A4")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xEE1848", Offset = "0xEE1848", VA = "0xEE1848")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xEE18FC", Offset = "0xEE18FC", VA = "0xEE18FC")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xEE19B0", Offset = "0xEE19B0", VA = "0xEE19B0")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DB")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x200053D")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002A5")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001CEF")]
				[Address(RVA = "0xED8B04", Offset = "0xED8B04", VA = "0xED8B04", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0xED8B38", Offset = "0xED8B38", VA = "0xED8B38")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x200053E")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002A6")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001CF1")]
				[Address(RVA = "0xED8CD4", Offset = "0xED8CD4", VA = "0xED8CD4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0xED8D38", Offset = "0xED8D38", VA = "0xED8D38")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x200053F")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002A7")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001CF3")]
				[Address(RVA = "0xED8BEC", Offset = "0xED8BEC", VA = "0xED8BEC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0xED8C08", Offset = "0xED8C08", VA = "0xED8C08")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000540")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x170002A8")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001CF5")]
				[Address(RVA = "0xED8B64", Offset = "0xED8B64", VA = "0xED8B64", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0xED8BB0", Offset = "0xED8BB0", VA = "0xED8BB0")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000541")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x170002A9")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001CF7")]
				[Address(RVA = "0xED8C34", Offset = "0xED8C34", VA = "0xED8C34", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xED8C98", Offset = "0xED8C98", VA = "0xED8C98")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000542")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170002AA")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001CF9")]
				[Address(RVA = "0xED8D64", Offset = "0xED8D64", VA = "0xED8D64", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0xED8D98", Offset = "0xED8D98", VA = "0xED8D98")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x20002DC")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x2000543")]
		public static class Physics
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xEE1AF8", Offset = "0xEE1AF8", VA = "0xEE1AF8")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xEE1C00", Offset = "0xEE1C00", VA = "0xEE1C00")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xEE1C90", Offset = "0xEE1C90", VA = "0xEE1C90")]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0xEE1D20", Offset = "0xEE1D20", VA = "0xEE1D20")]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xEE1A54", Offset = "0xEE1A54", VA = "0xEE1A54")]
		public static void Init()
		{
		}
	}
}
namespace AmplifyColor
{
	[Token(Token = "0x20002DD")]
	public enum Quality
	{
		[Token(Token = "0x400132C")]
		Mobile,
		[Token(Token = "0x400132D")]
		Standard
	}
	[Token(Token = "0x20002DE")]
	public enum Tonemapping
	{
		[Token(Token = "0x400132F")]
		Disabled,
		[Token(Token = "0x4001330")]
		Photographic,
		[Token(Token = "0x4001331")]
		FilmicHable,
		[Token(Token = "0x4001332")]
		FilmicACES
	}
	[Serializable]
	[Token(Token = "0x20002DF")]
	public struct RenderLayer
	{
		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask mask;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color color;

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xAEBB64", Offset = "0xAEBB64", VA = "0xAEBB64")]
		public RenderLayer(LayerMask mask, Color color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E0")]
	public class VersionInfo
	{
		[Token(Token = "0x4001335")]
		public const byte Major = 1;

		[Token(Token = "0x4001336")]
		public const byte Minor = 8;

		[Token(Token = "0x4001337")]
		public const byte Release = 0;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string StageSuffix;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string TrialSuffix;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int m_major;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int m_minor;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_release;

		[Token(Token = "0x1700013C")]
		public int Number
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x118A6B8", Offset = "0x118A6B8", VA = "0x118A6B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x118A4C0", Offset = "0x118A4C0", VA = "0x118A4C0")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x118A5B8", Offset = "0x118A5B8", VA = "0x118A5B8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x118A6D8", Offset = "0x118A6D8", VA = "0x118A6D8")]
		private VersionInfo()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x118A70C", Offset = "0x118A70C", VA = "0x118A70C")]
		private VersionInfo(byte major, byte minor, byte release)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x118A758", Offset = "0x118A758", VA = "0x118A758")]
		public static VersionInfo Current()
		{
			return null;
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x118A7C4", Offset = "0x118A7C4", VA = "0x118A7C4")]
		public static bool Matches(VersionInfo version)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20002E1")]
	public class VolumeEffectField
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldName;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fieldType;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float valueSingle;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color valueColor;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool valueBoolean;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 valueVector2;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 valueVector3;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 valueVector4;

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x118B240", Offset = "0x118B240", VA = "0x118B240")]
		public VolumeEffectField(string fieldName, string fieldType)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x118CB84", Offset = "0x118CB84", VA = "0x118CB84")]
		public VolumeEffectField(FieldInfo pi, Component c)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x118CA94", Offset = "0x118CA94", VA = "0x118CA94")]
		public static bool IsValidType(string type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x118E038", Offset = "0x118E038", VA = "0x118E038")]
		public void UpdateValue(object val)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E2")]
	public class VolumeEffectComponent
	{
		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04A20", Offset = "0xA04A20")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectFieldFlags fieldFlags;

			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x118CC9C", Offset = "0x118CC9C", VA = "0x118CC9C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x118CFE0", Offset = "0x118CFE0", VA = "0x118CFE0")]
			internal bool <UpdateComponent>b__0(VolumeEffectField s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04A30", Offset = "0xA04A30")]
		private sealed class <>c
		{
			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<FieldInfo, bool> <>9__9_0;

			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectField, string> <>9__10_0;

			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x118CF80", Offset = "0x118CF80", VA = "0x118CF80")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x118CF88", Offset = "0x118CF88", VA = "0x118CF88")]
			internal bool <ListAcceptableFields>b__9_0(FieldInfo f)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D04")]
			[Address(RVA = "0x118CFC8", Offset = "0x118CFC8", VA = "0x118CFC8")]
			internal string <GetFieldNames>b__10_0(VolumeEffectField r)
			{
				return null;
			}
		}

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string componentName;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectField> fields;

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x118B0DC", Offset = "0x118B0DC", VA = "0x118B0DC")]
		public VolumeEffectComponent(string name)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x118C97C", Offset = "0x118C97C", VA = "0x118C97C")]
		public VolumeEffectField AddField(FieldInfo pi, Component c)
		{
			return null;
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x118C984", Offset = "0x118C984", VA = "0x118C984")]
		public VolumeEffectField AddField(FieldInfo pi, Component c, int position)
		{
			return null;
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x118CC34", Offset = "0x118CC34", VA = "0x118CC34")]
		public void RemoveEffectField(VolumeEffectField field)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x118B62C", Offset = "0x118B62C", VA = "0x118B62C")]
		public VolumeEffectComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x118B378", Offset = "0x118B378", VA = "0x118B378")]
		public void UpdateComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x118B160", Offset = "0x118B160", VA = "0x118B160")]
		public VolumeEffectField FindEffectField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x118CCA4", Offset = "0x118CCA4", VA = "0x118CCA4")]
		public static FieldInfo[] ListAcceptableFields(Component c)
		{
			return null;
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x118CE1C", Offset = "0x118CE1C", VA = "0x118CE1C")]
		public string[] GetFieldNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002E3")]
	public class VolumeEffect
	{
		[Serializable]
		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04A40", Offset = "0xA04A40")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Component, bool> <>9__10_0;

			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectComponent, string> <>9__11_0;

			[Token(Token = "0x6001D06")]
			[Address(RVA = "0x118C844", Offset = "0x118C844", VA = "0x118C844")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D07")]
			[Address(RVA = "0x118C84C", Offset = "0x118C84C", VA = "0x118C84C")]
			internal bool <ListAcceptableComponents>b__10_0(Component comp)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D08")]
			[Address(RVA = "0x118C964", Offset = "0x118C964", VA = "0x118C964")]
			internal string <GetComponentNames>b__11_0(VolumeEffectComponent r)
			{
				return null;
			}
		}

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AmplifyColorBase gameObject;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectComponent> components;

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x118A878", Offset = "0x118A878", VA = "0x118A878")]
		public VolumeEffect(AmplifyColorBase effect)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x118A8FC", Offset = "0x118A8FC", VA = "0x118A8FC")]
		public static VolumeEffect BlendValuesToVolumeEffect(VolumeEffectFlags flags, VolumeEffect volume1, VolumeEffect volume2, float blend)
		{
			return null;
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x118B278", Offset = "0x118B278", VA = "0x118B278")]
		public VolumeEffectComponent AddComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
			return null;
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x118B83C", Offset = "0x118B83C", VA = "0x118B83C")]
		public void RemoveEffectComponent(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x118B8A4", Offset = "0x118B8A4", VA = "0x118B8A4")]
		public void UpdateVolume()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x118BA5C", Offset = "0x118BA5C", VA = "0x118BA5C")]
		public void SetValues(AmplifyColorBase targetColor)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x118C040", Offset = "0x118C040", VA = "0x118C040")]
		public void BlendValues(AmplifyColorBase targetColor, VolumeEffect other, float blendAmount)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x118AFFC", Offset = "0x118AFFC", VA = "0x118AFFC")]
		public VolumeEffectComponent FindEffectComponent(string compName)
		{
			return null;
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x118C538", Offset = "0x118C538", VA = "0x118C538")]
		public static Component[] ListAcceptableComponents(AmplifyColorBase go)
		{
			return null;
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x118C6E0", Offset = "0x118C6E0", VA = "0x118C6E0")]
		public string[] GetComponentNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002E4")]
	public class VolumeEffectContainer
	{
		[Serializable]
		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04A50", Offset = "0xA04A50")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffect, AmplifyColorBase> <>9__6_0;

			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0x118E018", Offset = "0x118E018", VA = "0x118E018")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x118E020", Offset = "0x118E020", VA = "0x118E020")]
			internal AmplifyColorBase <GetStoredEffects>b__6_0(VolumeEffect r)
			{
				return null;
			}
		}

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<VolumeEffect> volumes;

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x118DAB8", Offset = "0x118DAB8", VA = "0x118DAB8")]
		public VolumeEffectContainer()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x118DB2C", Offset = "0x118DB2C", VA = "0x118DB2C")]
		public void AddColorEffect(AmplifyColorBase colorEffect)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x118DDC0", Offset = "0x118DDC0", VA = "0x118DDC0")]
		public VolumeEffect AddJustColorEffect(AmplifyColorBase colorEffect)
		{
			return null;
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x118DBCC", Offset = "0x118DBCC", VA = "0x118DBCC")]
		public VolumeEffect FindVolumeEffect(AmplifyColorBase colorEffect)
		{
			return null;
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x118DE4C", Offset = "0x118DE4C", VA = "0x118DE4C")]
		public void RemoveVolumeEffect(VolumeEffect volume)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x118DEB4", Offset = "0x118DEB4", VA = "0x118DEB4")]
		public AmplifyColorBase[] GetStoredEffects()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002E5")]
	public class VolumeEffectFieldFlags
	{
		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldName;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fieldType;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blendFlag;

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x118D3A0", Offset = "0x118D3A0", VA = "0x118D3A0")]
		public VolumeEffectFieldFlags(FieldInfo pi)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x118D208", Offset = "0x118D208", VA = "0x118D208")]
		public VolumeEffectFieldFlags(VolumeEffectField field)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E6")]
	public class VolumeEffectComponentFlags
	{
		[Token(Token = "0x2000548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04A60", Offset = "0xA04A60")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectField field;

			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x118D630", Offset = "0x118D630", VA = "0x118D630")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x118DA44", Offset = "0x118DA44", VA = "0x118DA44")]
			internal bool <UpdateComponentFlags>b__0(VolumeEffectFieldFlags s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04A70", Offset = "0xA04A70")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo pi;

			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x118D7F4", Offset = "0x118D7F4", VA = "0x118D7F4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x118DA70", Offset = "0x118DA70", VA = "0x118DA70")]
			internal bool <UpdateComponentFlags>b__0(VolumeEffectFieldFlags s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04A80", Offset = "0xA04A80")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffectFieldFlags, bool> <>9__8_0;

			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectFieldFlags, string> <>9__8_1;

			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x118DA0C", Offset = "0x118DA0C", VA = "0x118DA0C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D12")]
			[Address(RVA = "0x118DA14", Offset = "0x118DA14", VA = "0x118DA14")]
			internal bool <GetFieldNames>b__8_0(VolumeEffectFieldFlags r)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D13")]
			[Address(RVA = "0x118DA2C", Offset = "0x118DA2C", VA = "0x118DA2C")]
			internal string <GetFieldNames>b__8_1(VolumeEffectFieldFlags r)
			{
				return null;
			}
		}

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string componentName;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectFieldFlags> componentFields;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blendFlag;

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x118D00C", Offset = "0x118D00C", VA = "0x118D00C")]
		public VolumeEffectComponentFlags(string name)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x118D090", Offset = "0x118D090", VA = "0x118D090")]
		public VolumeEffectComponentFlags(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x118D250", Offset = "0x118D250", VA = "0x118D250")]
		public VolumeEffectComponentFlags(Component c)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x118D414", Offset = "0x118D414", VA = "0x118D414")]
		public void UpdateComponentFlags(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x118D638", Offset = "0x118D638", VA = "0x118D638")]
		public void UpdateComponentFlags(Component c)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x118D7FC", Offset = "0x118D7FC", VA = "0x118D7FC")]
		public string[] GetFieldNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002E7")]
	public class VolumeEffectFlags
	{
		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04A90", Offset = "0xA04A90")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Component c;

			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x118E420", Offset = "0x118E420", VA = "0x118E420")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x118EC30", Offset = "0x118EC30", VA = "0x118EC30")]
			internal bool <AddComponent>b__0(VolumeEffectComponentFlags s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04AA0", Offset = "0xA04AA0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectComponent comp;

			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x118E634", Offset = "0x118E634", VA = "0x118E634")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001D17")]
			[Address(RVA = "0x118EC78", Offset = "0x118EC78", VA = "0x118EC78")]
			internal bool <UpdateFlags>b__0(VolumeEffectComponentFlags s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04AB0", Offset = "0xA04AB0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffectComponentFlags, bool> <>9__7_0;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectComponentFlags, string> <>9__7_1;

			[Token(Token = "0x6001D19")]
			[Address(RVA = "0x118EBF8", Offset = "0x118EBF8", VA = "0x118EBF8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0x118EC00", Offset = "0x118EC00", VA = "0x118EC00")]
			internal bool <GetComponentNames>b__7_0(VolumeEffectComponentFlags r)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0x118EC18", Offset = "0x118EC18", VA = "0x118EC18")]
			internal string <GetComponentNames>b__7_1(VolumeEffectComponentFlags r)
			{
				return null;
			}
		}

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<VolumeEffectComponentFlags> components;

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x118E290", Offset = "0x118E290", VA = "0x118E290")]
		public VolumeEffectFlags()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x118E304", Offset = "0x118E304", VA = "0x118E304")]
		public void AddComponent(Component c)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x118E428", Offset = "0x118E428", VA = "0x118E428")]
		public void UpdateFlags(VolumeEffect effectVol)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x118E63C", Offset = "0x118E63C", VA = "0x118E63C")]
		public static void UpdateCamFlags(AmplifyColorBase[] effects, AmplifyColorVolumeBase[] volumes)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x118E750", Offset = "0x118E750", VA = "0x118E750")]
		public VolumeEffect GenerateEffectData(AmplifyColorBase go)
		{
			return null;
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x118E908", Offset = "0x118E908", VA = "0x118E908")]
		public VolumeEffectComponentFlags FindComponentFlags(string compName)
		{
			return null;
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x118E9E8", Offset = "0x118E9E8", VA = "0x118E9E8")]
		public string[] GetComponentNames()
		{
			return null;
		}
	}
}
namespace Tantawowa.TimelineEvents
{
	[Token(Token = "0x20002E8")]
	public class EventInvocationInfo
	{
		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Behaviour TargetBehaviour;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MethodInfo MethodInfo;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type[] SupportedTypes;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Key;

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xCEFB14", Offset = "0xCEFB14", VA = "0xCEFB14")]
		public EventInvocationInfo(string key, Behaviour targetBehaviour, MethodInfo methodInfo)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xCEFB54", Offset = "0xCEFB54", VA = "0xCEFB54")]
		public void Invoke(object value)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xCEFC38", Offset = "0xCEFC38", VA = "0xCEFC38")]
		public void InvokEnum(int value)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xCEFD94", Offset = "0xCEFD94", VA = "0xCEFD94")]
		public void InvokeNoArgs()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xCEFDE8", Offset = "0xCEFDE8", VA = "0xCEFDE8")]
		public void Invoke(bool isSingleArg, string value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E9")]
	public class TimelineEventBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x200054E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04AC0", Offset = "0xA04AC0")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string methodName;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool methodWitharg;

			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0xDF1C68", Offset = "0xDF1C68", VA = "0xDF1C68")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0xDF1C70", Offset = "0xDF1C70", VA = "0xDF1C70")]
			internal bool <GetInvocationInfo>b__0(MethodInfo m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string HandlerKey;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsMethodWithParam;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool InvokeEventsInEditMode;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject TargetObject;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ArgValue;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventInvocationInfo invocationInfo;

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xCF0908", Offset = "0xCF0908", VA = "0xCF0908", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xCF0970", Offset = "0xCF0970", VA = "0xCF0970")]
		private void UpdateDelegates()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xCF09C4", Offset = "0xCF09C4", VA = "0xCF09C4")]
		private EventInvocationInfo GetInvocationInfo(bool isEnabled, string methodKey, EventInvocationInfo currentInfo, bool methodWitharg)
		{
			return null;
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xCF0BB4", Offset = "0xCF0BB4", VA = "0xCF0BB4")]
		private void GetBehaviourAndMethod(bool isEnabled, string key, ref Behaviour targetBehaviour, ref string methodName)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xCF0E64", Offset = "0xCF0E64", VA = "0xCF0E64")]
		public TimelineEventBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EA")]
	public class TimelineEventClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimelineEventBehaviour template;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA165C8", Offset = "0xA165C8")]
		private GameObject <TrackTargetObject>k__BackingField;

		[Token(Token = "0x1700013D")]
		public GameObject TrackTargetObject
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0xDF1D80", Offset = "0xDF1D80", VA = "0xDF1D80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21558", Offset = "0xA21558")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126C")]
			[Address(RVA = "0xDF1D88", Offset = "0xDF1D88", VA = "0xDF1D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21568", Offset = "0xA21568")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0xDF1D90", Offset = "0xDF1D90", VA = "0xDF1D90", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xDF1D98", Offset = "0xDF1D98", VA = "0xDF1D98", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xDF1E78", Offset = "0xDF1E78", VA = "0xDF1E78")]
		public TimelineEventClip()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class TimelineEventMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x6001270")]
		[Address(RVA = "0xDF1EE0", Offset = "0xDF1EE0", VA = "0xDF1EE0")]
		public TimelineEventMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA038F8", Offset = "0xA038F8")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA038F8", Offset = "0xA038F8")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xA038F8", Offset = "0xA038F8")]
	public class TimelineEventTrack : TrackAsset
	{
		[Token(Token = "0x6001271")]
		[Address(RVA = "0xDF1EE8", Offset = "0xDF1EE8", VA = "0xDF1EE8", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xDF22C0", Offset = "0xDF22C0", VA = "0xDF22C0")]
		public TimelineEventTrack()
		{
		}
	}
}
namespace Tantawowa.Extensions
{
	[Token(Token = "0x20002ED")]
	public static class PrimitiveExtensions
	{
		[Token(Token = "0x6001273")]
		[Address(RVA = "0xCEF5D8", Offset = "0xCEF5D8", VA = "0xCEF5D8")]
		public static int ClampIndex(this int value, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xCEF5F4", Offset = "0xCEF5F4", VA = "0xCEF5F4")]
		public static bool IsValidAsType(this string input, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001275")]
		public static T ConvertToType<T>(this string input)
		{
			return (T)null;
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xCEF7D8", Offset = "0xCEF7D8", VA = "0xCEF7D8")]
		public static double RoundUpToNearest(this double passednumber, double roundto)
		{
			return default(double);
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xCEF85C", Offset = "0xCEF85C", VA = "0xCEF85C")]
		public static double RoundDownToNearest(this double passednumber, double roundto)
		{
			return default(double);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xCEF8E0", Offset = "0xCEF8E0", VA = "0xCEF8E0")]
		public static float RoundUpToNearest(this float passednumber, float roundto)
		{
			return default(float);
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xCEF964", Offset = "0xCEF964", VA = "0xCEF964")]
		public static float RoundDownToNearest(this float passednumber, float roundto)
		{
			return default(float);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xCEF9E8", Offset = "0xCEF9E8", VA = "0xCEF9E8")]
		public static int RoundUpToNearest(this int passednumber, int roundto)
		{
			return default(int);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xCEFA78", Offset = "0xCEFA78", VA = "0xCEFA78")]
		public static int RoundDownToNearest(this int passednumber, int roundto)
		{
			return default(int);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xCEFB08", Offset = "0xCEFB08", VA = "0xCEFB08")]
		public static int Flip(this int value)
		{
			return default(int);
		}
	}
}
namespace Tantawowa.Demo.DemoScripts
{
	[Token(Token = "0x20002EE")]
	public enum RobotState
	{
		[Token(Token = "0x400135E")]
		Sleeping,
		[Token(Token = "0x400135F")]
		GoToWork,
		[Token(Token = "0x4001360")]
		GoHome
	}
	[Token(Token = "0x20002EF")]
	public class Robot : MonoBehaviour
	{
		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int points;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private RobotState currentState;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMesh Message;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NavMeshAgent Agent;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NavMeshFollower NavMeshFollower;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Work;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform Home;

		[Token(Token = "0x1700013F")]
		public int Points
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0xCEF1A4", Offset = "0xCEF1A4", VA = "0xCEF1A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600127E")]
			[Address(RVA = "0xCEF1AC", Offset = "0xCEF1AC", VA = "0xCEF1AC")]
			set
			{
			}
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xCEF238", Offset = "0xCEF238", VA = "0xCEF238")]
		public void AddScore(int points)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xCEF244", Offset = "0xCEF244", VA = "0xCEF244")]
		public void ResetScore()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xCEF24C", Offset = "0xCEF24C", VA = "0xCEF24C")]
		public void SetState(RobotState state)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xCEF394", Offset = "0xCEF394", VA = "0xCEF394")]
		private void Update()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xCEF504", Offset = "0xCEF504", VA = "0xCEF504")]
		public Robot()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class UIManager : MonoBehaviour
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> UIElements;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Light;

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xCEF50C", Offset = "0xCEF50C", VA = "0xCEF50C")]
		public void ChangeUI(UIType type)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xCEF5B0", Offset = "0xCEF5B0", VA = "0xCEF5B0")]
		public void ToggleLight(bool isOn)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xCEF5D0", Offset = "0xCEF5D0", VA = "0xCEF5D0")]
		public UIManager()
		{
		}
	}
}
namespace Game.General.Navigation
{
	[Token(Token = "0x20002F1")]
	public class NavMeshFollower : MonoBehaviour
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<NavMeshFollower> OnArrive;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent Agent;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x17000140")]
		public Transform Target
		{
			[Token(Token = "0x6001287")]
			[Address(RVA = "0xEA85E0", Offset = "0xEA85E0", VA = "0xEA85E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001288")]
			[Address(RVA = "0xEA85E8", Offset = "0xEA85E8", VA = "0xEA85E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xEA873C", Offset = "0xEA873C", VA = "0xEA873C")]
		private void Update()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xEA8804", Offset = "0xEA8804", VA = "0xEA8804")]
		public NavMeshFollower()
		{
		}
	}
}
namespace UnityEngine.Timeline
{
	[Token(Token = "0x20002F2")]
	public class VideoPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoClip videoClip;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mute;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double preloadTime;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double clipInTime;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool playedOnce;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool preparing;

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xE71E20", Offset = "0xE71E20", VA = "0xE71E20")]
		public void PrepareVideo()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xE721D8", Offset = "0xE721D8", VA = "0xE721D8")]
		private void LoopPointReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xE721E8", Offset = "0xE721E8", VA = "0xE721E8", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xE724D4", Offset = "0xE724D4", VA = "0xE724D4", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xE72634", Offset = "0xE72634", VA = "0xE72634", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xE72768", Offset = "0xE72768", VA = "0xE72768", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xE7295C", Offset = "0xE7295C", VA = "0xE7295C", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xE72964", Offset = "0xE72964", VA = "0xE72964", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xE7299C", Offset = "0xE7299C", VA = "0xE7299C", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xE72588", Offset = "0xE72588", VA = "0xE72588")]
		public void PlayVideo()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xE726D8", Offset = "0xE726D8", VA = "0xE726D8")]
		public void PauseVideo()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xE72144", Offset = "0xE72144", VA = "0xE72144")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xE7235C", Offset = "0xE7235C", VA = "0xE7235C")]
		private void SyncVideoToPlayable(Playable playable)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xE729A0", Offset = "0xE729A0", VA = "0xE729A0")]
		public VideoPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public sealed class VideoSchedulerPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<TimelineClip> m_Clips;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_Director;

		[Token(Token = "0x17000141")]
		internal PlayableDirector director
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0xE729BC", Offset = "0xE729BC", VA = "0xE729BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600129A")]
			[Address(RVA = "0xE729C4", Offset = "0xE729C4", VA = "0xE729C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		internal IEnumerable<TimelineClip> clips
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0xE729CC", Offset = "0xE729CC", VA = "0xE729CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600129C")]
			[Address(RVA = "0xE729D4", Offset = "0xE729D4", VA = "0xE729D4")]
			set
			{
			}
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xE729DC", Offset = "0xE729DC", VA = "0xE729DC", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xE72DDC", Offset = "0xE72DDC", VA = "0xE72DDC")]
		public VideoSchedulerPlayableBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F4")]
	public class VideoScriptPlayableAsset : PlayableAsset
	{
		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<VideoPlayer> videoPlayer;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "NotKeyableAttribute", RVA = "0xA16608", Offset = "0xA16608")]
		public VideoClip videoClip;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "NotKeyableAttribute", RVA = "0xA16640", Offset = "0xA16640")]
		public bool mute;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[AttributeAttribute(Name = "NotKeyableAttribute", RVA = "0xA16678", Offset = "0xA16678")]
		public bool loop;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "NotKeyableAttribute", RVA = "0xA166B0", Offset = "0xA166B0")]
		public double preloadTime;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "NotKeyableAttribute", RVA = "0xA166E8", Offset = "0xA166E8")]
		public double clipInTime;

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xE72DE4", Offset = "0xE72DE4", VA = "0xE72DE4", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xE72F10", Offset = "0xE72F10", VA = "0xE72F10")]
		public VideoScriptPlayableAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xA039B4", Offset = "0xA039B4")]
	[AttributeAttribute(Name = "TrackMediaType", RVA = "0xA039B4", Offset = "0xA039B4")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xA039B4", Offset = "0xA039B4")]
	public class VideoScriptPlayableTrack : TrackAsset
	{
		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xE72F2C", Offset = "0xE72F2C", VA = "0xE72F2C", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xE73064", Offset = "0xE73064", VA = "0xE73064")]
		public VideoScriptPlayableTrack()
		{
		}
	}
}
namespace nTools.PrefabPainter
{
	[Token(Token = "0x20002F6")]
	public class PrefabPainterSceneSettings : MonoBehaviour
	{
		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject parentForPrefabs;

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x210F774", Offset = "0x210F774", VA = "0x210F774")]
		public PrefabPainterSceneSettings()
		{
		}
	}
}
namespace VRStandardAssets.Utils
{
	[Token(Token = "0x20002F7")]
	public class VRFPSCounter : MonoBehaviour
	{
		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_DeltaTime;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_Text;

		[Token(Token = "0x4001380")]
		private const float k_SmoothingCoef = 0.1f;

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xE802A4", Offset = "0xE802A4", VA = "0xE802A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xE802FC", Offset = "0xE802FC", VA = "0xE802FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xE8042C", Offset = "0xE8042C", VA = "0xE8042C")]
		public VRFPSCounter()
		{
		}
	}
}
namespace StylizedWaterShader
{
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03A54", Offset = "0xA03A54")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03A54", Offset = "0xA03A54")]
	public class EnableDepthBuffer : MonoBehaviour
	{
		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xCEAFE0", Offset = "0xCEAFE0", VA = "0xCEAFE0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xCEB06C", Offset = "0xCEB06C", VA = "0xCEB06C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xCEB168", Offset = "0xCEB168", VA = "0xCEB168")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xCEB1FC", Offset = "0xCEB1FC", VA = "0xCEB1FC")]
		public EnableDepthBuffer()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03AC8", Offset = "0xA03AC8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03AC8", Offset = "0xA03AC8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA03AC8", Offset = "0xA03AC8")]
	public class StylizedWater : MonoBehaviour
	{
		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] shaderNames;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int shaderIndex;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader shader;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Shader DesktopShader;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shader MobileAdvancedShader;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16720", Offset = "0xA16720")]
		public int renderQueue;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool enableVertexColors;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool enableDepthTex;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool isUnlit;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool enableGradient;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Gradient colorGradient;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA16740", Offset = "0xA16740")]
		public Color waterShallowColor;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16758", Offset = "0xA16758")]
		public float depth;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA16774", Offset = "0xA16774")]
		public Color waterColor;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA1678C", Offset = "0xA1678C")]
		public Color fresnelColor;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float fresnel;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA167A4", Offset = "0xA167A4")]
		public Color rimColor;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA167BC", Offset = "0xA167BC")]
		public float waveTint;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA167D4", Offset = "0xA167D4")]
		public float transparency;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA167EC", Offset = "0xA167EC")]
		public float glossiness;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16808", Offset = "0xA16808")]
		public float metallicness;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16820", Offset = "0xA16820")]
		public float edgeFade;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string[] tilingMethodNames;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float worldSpaceTiling;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16838", Offset = "0xA16838")]
		public float refractionAmount;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool enableNormalMap;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16854", Offset = "0xA16854")]
		public float normalStrength;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool enableMacroNormals;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1686C", Offset = "0xA1686C")]
		public float macroNormalsDistance;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1688C", Offset = "0xA1688C")]
		public float normalTiling;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int intersectionSolver;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string[] intersectionSolverNames;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA168A8", Offset = "0xA168A8")]
		public float rimSize;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA168C0", Offset = "0xA168C0")]
		public float rimFalloff;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float rimTiling;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA168DC", Offset = "0xA168DC")]
		public float rimDistortion;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool enableVCIntersection;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int foamSolver;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string[] foamSolverNames;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA168F4", Offset = "0xA168F4")]
		public float foamOpacity;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float foamTiling;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1690C", Offset = "0xA1690C")]
		public float foamSize;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16924", Offset = "0xA16924")]
		public float foamDistortion;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1693C", Offset = "0xA1693C")]
		public float foamSpeed;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16954", Offset = "0xA16954")]
		public float waveFoam;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1696C", Offset = "0xA1696C")]
		public float reflectionStrength;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16984", Offset = "0xA16984")]
		public float reflectionFresnel;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool showReflection;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA169A0", Offset = "0xA169A0")]
		public float reflectionRefraction;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA169BC", Offset = "0xA169BC")]
		public float waveSpeed;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA169D8", Offset = "0xA169D8")]
		public float waveStrength;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA169F0", Offset = "0xA169F0")]
		public Vector4 waveDirectionXZ;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool enableSecondaryWaves;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Texture2D customIntersection;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Texture2D customNormal;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Texture2D customHeightmap;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public string[] intersectionStyleNames;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public int intersectionStyle;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string[] waveStyleNames;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public int waveStyle;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string[] waveHeightmapNames;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public int waveHeightmapStyle;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float waveSize;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool useCustomIntersection;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		public bool useCustomNormals;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
		public bool useCustomHeightmap;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Texture2D normals;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Texture2D shadermap;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Texture2D colorGradientTex;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public bool useCompression;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnableReflections;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Camera reflectionCamera;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Camera refractCamera;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public bool useReflection;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		public bool useRefractionCam;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
		public bool enableReflectionBlur;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16A08", Offset = "0xA16A08")]
		public float reflectionBlurLength;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16A20", Offset = "0xA16A20")]
		public int reflectionBlurPasses;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private StylizedWaterBlur reflectionBlurRenderer;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public string[] refractionSolverNames;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public int refractionSolver;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public string[] resolutionNames;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public int reflectionRes;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public int refractRes;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public int reflectionTextureSize;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public int refractTextureSize;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16A38", Offset = "0xA16A38")]
		public float clipPlaneOffset;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public LayerMask reflectLayers;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public LayerMask refractLayers;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Dictionary<Camera, StylizedWaterBlur> m_BlurRenderers;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Dictionary<Camera, Camera> m_RefractCameras;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private RenderTexture m_RefractTexture;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private int m_OldRefractTextureSize;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private bool s_InsideRendering;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public int lightingMethod;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public string[] lightingMethodNames;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public bool enableShadows;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private StylizedWaterShadowCaster shadowRenderer;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public Light shadowCaster;

		[NonSerialized]
		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public Material material;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public bool isMobileAdvanced;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
		public bool isMobilePlatform;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public string shaderName;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public bool isWaterLayer;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x291")]
		public bool hasShaderParams;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x292")]
		public bool hasMaterial;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x293")]
		public bool usingSinglePassRendering;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		public bool hideMeshRenderer;

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xCEB204", Offset = "0xCEB204", VA = "0xCEB204")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xCEB32C", Offset = "0xCEB32C", VA = "0xCEB32C")]
		public void Init()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xCEB294", Offset = "0xCEB294", VA = "0xCEB294")]
		public void GetProperties()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xCEB330", Offset = "0xCEB330", VA = "0xCEB330")]
		private void GetShaderProperties()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xCEBB08", Offset = "0xCEBB08", VA = "0xCEBB08")]
		private void GetShaderType()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xCEBB0C", Offset = "0xCEBB0C", VA = "0xCEBB0C")]
		private void SetShaderType()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xCEB298", Offset = "0xCEB298", VA = "0xCEB298")]
		public void SetProperties()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xCEBDC0", Offset = "0xCEBDC0", VA = "0xCEBDC0")]
		private void SetShaderProperties()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xCEC850", Offset = "0xCEC850", VA = "0xCEC850")]
		public void DisableReflectionCam()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xCEC6A8", Offset = "0xCEC6A8", VA = "0xCEC6A8")]
		public void DisableRefractionCam()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xCEBB10", Offset = "0xCEBB10", VA = "0xCEBB10")]
		private void EnableShadowRendering()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xCEBBD0", Offset = "0xCEBBD0", VA = "0xCEBBD0")]
		private void DisableShadowRendering()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xCECA4C", Offset = "0xCECA4C", VA = "0xCECA4C")]
		public void SetVegetationStudioWaterLevel()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xCECA50", Offset = "0xCECA50", VA = "0xCECA50")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xCEE370", Offset = "0xCEE370", VA = "0xCEE370")]
		public void CreateReflectionTexture()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xCEE494", Offset = "0xCEE494", VA = "0xCEE494")]
		public void CreateRefractionTexture()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xCED1E4", Offset = "0xCED1E4", VA = "0xCED1E4")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractCamera)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xCEE62C", Offset = "0xCEE62C", VA = "0xCEE62C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xCEE6EC", Offset = "0xCEE6EC", VA = "0xCEE6EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xCEE6F0", Offset = "0xCEE6F0", VA = "0xCEE6F0")]
		public StylizedWater()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03B60", Offset = "0xA03B60")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03B60", Offset = "0xA03B60")]
	public class StylizedWaterBlur : MonoBehaviour
	{
		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float length;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int passes;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader m_BlurRenderShader;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material m_BlurRenderMat;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer cmd;

		[Token(Token = "0x17000143")]
		private static Shader BlurRenderShader
		{
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0xCEE828", Offset = "0xCEE828", VA = "0xCEE828")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private static Material BlurRenderMat
		{
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0xCEE8D8", Offset = "0xCEE8D8", VA = "0xCEE8D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xCEE9C4", Offset = "0xCEE9C4", VA = "0xCEE9C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xCEEA54", Offset = "0xCEEA54", VA = "0xCEEA54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xCEDFF0", Offset = "0xCEDFF0", VA = "0xCEDFF0")]
		public void Render()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xCEEB00", Offset = "0xCEEB00", VA = "0xCEEB00")]
		public StylizedWaterBlur()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03BD4", Offset = "0xA03BD4")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03BD4", Offset = "0xA03BD4")]
	public class StylizedWaterShadowCaster : MonoBehaviour
	{
		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer cmd;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light dirLight;

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xCEEB14", Offset = "0xCEEB14", VA = "0xCEEB14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xCEECB8", Offset = "0xCEECB8", VA = "0xCEECB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xCEED48", Offset = "0xCEED48", VA = "0xCEED48")]
		public StylizedWaterShadowCaster()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public static class StylizedWaterUtilities
	{
		[Token(Token = "0x200054F")]
		public static class CameraUtils
		{
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0xCEDE10", Offset = "0xCEDE10", VA = "0xCEDE10")]
			public static Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign, float clipPlaneOffset)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xCEDB6C", Offset = "0xCEDB6C", VA = "0xCEDB6C")]
			public static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
			{
			}

			[Token(Token = "0x6001D20")]
			[Address(RVA = "0xCED9D4", Offset = "0xCED9D4", VA = "0xCED9D4")]
			public static void CopyCameraSettings(Camera src, Camera dest)
			{
			}
		}

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DEBUG;

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xCEED50", Offset = "0xCEED50", VA = "0xCEED50")]
		public static string[] ComposeDropdown(Texture2D[] resource, string replaceFilter)
		{
			return null;
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xCEEF58", Offset = "0xCEEF58", VA = "0xCEEF58")]
		public static bool IsApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xCEEFD8", Offset = "0xCEEFD8", VA = "0xCEEFD8")]
		public static bool HasVertexColors(Mesh mesh)
		{
			return default(bool);
		}
	}
}
namespace Polybrush
{
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03C48", Offset = "0xA03C48")]
	public class z_AdditionalVertexStreams : MonoBehaviour
	{
		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh m_AdditionalVertexStreamMesh;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x17000145")]
		private MeshRenderer meshRenderer
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0xEF2B50", Offset = "0xEF2B50", VA = "0xEF2B50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xEF2BF8", Offset = "0xEF2BF8", VA = "0xEF2BF8")]
		private void Start()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xEF2C00", Offset = "0xEF2C00", VA = "0xEF2C00")]
		public void SetAdditionalVertexStreamsMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xEF2C34", Offset = "0xEF2C34", VA = "0xEF2C34")]
		public z_AdditionalVertexStreams()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20002FE")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000146")]
		public bool Highlight
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0xC23834", Offset = "0xC23834", VA = "0xC23834")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0xC2383C", Offset = "0xC2383C", VA = "0xC2383C")]
			set
			{
			}
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xC23848", Offset = "0xC23848", VA = "0xC23848")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xC23A14", Offset = "0xC23A14", VA = "0xC23A14", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xC23A3C", Offset = "0xC23A3C", VA = "0xC23A3C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xC23A64", Offset = "0xC23A64", VA = "0xC23A64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xC23914", Offset = "0xC23914", VA = "0xC23914")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xC23CB8", Offset = "0xC23CB8", VA = "0xC23CB8")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000147")]
		public bool InRange
		{
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xC24420", Offset = "0xC24420", VA = "0xC24420")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0xC24428", Offset = "0xC24428", VA = "0xC24428")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public bool Targeted
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0xC245A4", Offset = "0xC245A4", VA = "0xC245A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xC245AC", Offset = "0xC245AC", VA = "0xC245AC")]
			set
			{
			}
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xC245B8", Offset = "0xC245B8", VA = "0xC245B8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xC24434", Offset = "0xC24434", VA = "0xC24434")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xC24758", Offset = "0xC24758", VA = "0xC24758")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03C58", Offset = "0xA03C58")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000149")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xC24760", Offset = "0xC24760", VA = "0xC24760")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0xC24768", Offset = "0xC24768", VA = "0xC24768")]
			set
			{
			}
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xC24784", Offset = "0xC24784", VA = "0xC24784", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xC2498C", Offset = "0xC2498C", VA = "0xC2498C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xC252A8", Offset = "0xC252A8", VA = "0xC252A8", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xC25864", Offset = "0xC25864", VA = "0xC25864", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xC25C44", Offset = "0xC25C44", VA = "0xC25C44")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xC24BD8", Offset = "0xC24BD8", VA = "0xC24BD8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xC25D20", Offset = "0xC25D20", VA = "0xC25D20")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xC2615C", Offset = "0xC2615C", VA = "0xC2615C", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xC26174", Offset = "0xC26174", VA = "0xC26174", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xC2617C", Offset = "0xC2617C", VA = "0xC2617C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xC27CCC", Offset = "0xC27CCC", VA = "0xC27CCC")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xC27D7C", Offset = "0xC27D7C", VA = "0xC27D7C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xC27E28", Offset = "0xC27E28", VA = "0xC27E28")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000550")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001EED")]
			Disabled,
			[Token(Token = "0x4001EEE")]
			Enabled,
			[Token(Token = "0x4001EEF")]
			Targeted
		}

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xC27E30", Offset = "0xC27E30", VA = "0xC27E30")]
		private void Start()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xC246BC", Offset = "0xC246BC", VA = "0xC246BC")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xC27E98", Offset = "0xC27E98", VA = "0xC27E98")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xC27EE0", Offset = "0xC27EE0", VA = "0xC27EE0")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xC2CCBC", Offset = "0xC2CCBC", VA = "0xC2CCBC")]
		private void Start()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xC2CD88", Offset = "0xC2CD88", VA = "0xC2CD88")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xC2CD94", Offset = "0xC2CD94", VA = "0xC2CD94")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xC2CDA0", Offset = "0xC2CDA0", VA = "0xC2CDA0")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xC223AC", Offset = "0xC223AC", VA = "0xC223AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xC22404", Offset = "0xC22404", VA = "0xC22404")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xC226A8", Offset = "0xC226A8", VA = "0xC226A8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xC22798", Offset = "0xC22798", VA = "0xC22798")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xC22408", Offset = "0xC22408", VA = "0xC22408")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xC22888", Offset = "0xC22888", VA = "0xC22888")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000551")]
		public enum ContactTest
		{
			[Token(Token = "0x4001EF1")]
			PerpenTest,
			[Token(Token = "0x4001EF2")]
			BackwardsPress
		}

		[Token(Token = "0x4001421")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001422")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16B80", Offset = "0xA16B80")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700014A")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0xC22920", Offset = "0xC22920", VA = "0xC22920", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014B")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0xC22928", Offset = "0xC22928", VA = "0xC22928")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700014C")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0xC22934", Offset = "0xC22934", VA = "0xC22934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21618", Offset = "0xA21618")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6001300")]
			[Address(RVA = "0xC2293C", Offset = "0xC2293C", VA = "0xC2293C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21628", Offset = "0xA21628")]
			private set
			{
			}
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xC22944", Offset = "0xC22944", VA = "0xC22944", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xC22A94", Offset = "0xC22A94", VA = "0xC22A94")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xC22C9C", Offset = "0xC22C9C", VA = "0xC22C9C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xC231F4", Offset = "0xC231F4", VA = "0xC231F4")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xC23344", Offset = "0xC23344", VA = "0xC23344")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xC2310C", Offset = "0xC2310C", VA = "0xC2310C")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xC23434", Offset = "0xC23434", VA = "0xC23434")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xC23528", Offset = "0xC23528", VA = "0xC23528")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xC23654", Offset = "0xC23654", VA = "0xC23654")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16BA0", Offset = "0xA16BA0")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16BB0", Offset = "0xA16BB0")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700014D")]
		public Collider Collider
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0xC23740", Offset = "0xC23740", VA = "0xC23740", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21638", Offset = "0xA21638")]
			get
			{
				return null;
			}
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xC23748", Offset = "0xC23748", VA = "0xC23748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21648", Offset = "0xA21648")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0xC23750", Offset = "0xC23750", VA = "0xC23750", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21658", Offset = "0xA21658")]
			get
			{
				return null;
			}
			[Token(Token = "0x600130D")]
			[Address(RVA = "0xC23758", Offset = "0xC23758", VA = "0xC23758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21668", Offset = "0xA21668")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0xC23760", Offset = "0xC23760", VA = "0xC23760", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xC237B0", Offset = "0xC237B0", VA = "0xC237B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xC2382C", Offset = "0xC2382C", VA = "0xC2382C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000150")]
		Collider Collider
		{
			[Token(Token = "0x6001311")]
			get;
		}

		[Token(Token = "0x17000151")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001312")]
			get;
		}

		[Token(Token = "0x17000152")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001313")]
			get;
		}
	}
	[Token(Token = "0x2000308")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xC22BF8", Offset = "0xC22BF8", VA = "0xC22BF8")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000309")]
	public enum InteractionType
	{
		[Token(Token = "0x4001437")]
		Enter,
		[Token(Token = "0x4001438")]
		Stay,
		[Token(Token = "0x4001439")]
		Exit
	}
	[Token(Token = "0x200030A")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000552")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001EF4")]
			Mesh,
			[Token(Token = "0x4001EF5")]
			Skeleton,
			[Token(Token = "0x4001EF6")]
			Both
		}

		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04AD0", Offset = "0xA04AD0")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170002AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D24")]
				[Address(RVA = "0xC28DD4", Offset = "0xC28DD4", VA = "0xC28DD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D26")]
				[Address(RVA = "0xC28E3C", Offset = "0xC28E3C", VA = "0xC28E3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xC288C8", Offset = "0xC288C8", VA = "0xC288C8")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xC28BB4", Offset = "0xC28BB4", VA = "0xC28BB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xC28BB8", Offset = "0xC28BB8", VA = "0xC28BB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D25")]
			[Address(RVA = "0xC28DDC", Offset = "0xC28DDC", VA = "0xC28DDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400143A")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16BE0", Offset = "0xA16BE0")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000153")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001315")]
			[Address(RVA = "0xC26DD0", Offset = "0xC26DD0", VA = "0xC26DD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001316")]
			[Address(RVA = "0xC27EE8", Offset = "0xC27EE8", VA = "0xC27EE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001317")]
			[Address(RVA = "0xC27950", Offset = "0xC27950", VA = "0xC27950")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001318")]
			[Address(RVA = "0xC27F50", Offset = "0xC27F50", VA = "0xC27F50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001319")]
			[Address(RVA = "0xC27FB8", Offset = "0xC27FB8", VA = "0xC27FB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131A")]
			[Address(RVA = "0xC27FF0", Offset = "0xC27FF0", VA = "0xC27FF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600131B")]
			[Address(RVA = "0xC28058", Offset = "0xC28058", VA = "0xC28058")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131C")]
			[Address(RVA = "0xC28090", Offset = "0xC28090", VA = "0xC28090")]
			private set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600131D")]
			[Address(RVA = "0xC280F8", Offset = "0xC280F8", VA = "0xC280F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131E")]
			[Address(RVA = "0xC28130", Offset = "0xC28130", VA = "0xC28130")]
			private set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x600131F")]
			[Address(RVA = "0xC26D9C", Offset = "0xC26D9C", VA = "0xC26D9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001320")]
			[Address(RVA = "0xC28198", Offset = "0xC28198", VA = "0xC28198")]
			private set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0xC2791C", Offset = "0xC2791C", VA = "0xC2791C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001322")]
			[Address(RVA = "0xC281FC", Offset = "0xC281FC", VA = "0xC281FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0xC28260", Offset = "0xC28260", VA = "0xC28260")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001324")]
			[Address(RVA = "0xC28294", Offset = "0xC28294", VA = "0xC28294")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001325")]
			[Address(RVA = "0xC282F8", Offset = "0xC282F8", VA = "0xC282F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001326")]
			[Address(RVA = "0xC2832C", Offset = "0xC2832C", VA = "0xC2832C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0xC28390", Offset = "0xC28390", VA = "0xC28390")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001328")]
			[Address(RVA = "0xC283C4", Offset = "0xC283C4", VA = "0xC283C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001329")]
			[Address(RVA = "0xC28428", Offset = "0xC28428", VA = "0xC28428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21678", Offset = "0xA21678")]
			get
			{
				return null;
			}
			[Token(Token = "0x600132A")]
			[Address(RVA = "0xC28478", Offset = "0xC28478", VA = "0xC28478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21688", Offset = "0xA21688")]
			private set
			{
			}
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xC284CC", Offset = "0xC284CC", VA = "0xC284CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xC28840", Offset = "0xC28840", VA = "0xC28840")]
		private void Update()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xC287D0", Offset = "0xC287D0", VA = "0xC287D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA21698", Offset = "0xA21698")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xC24274", Offset = "0xC24274", VA = "0xC24274")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xC288F4", Offset = "0xC288F4", VA = "0xC288F4")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xC27988", Offset = "0xC27988", VA = "0xC27988")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xC26C0C", Offset = "0xC26C0C", VA = "0xC26C0C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xC28AD4", Offset = "0xC28AD4", VA = "0xC28AD4")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000554")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xC2958C", Offset = "0xC2958C", VA = "0xC2958C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700015E")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0xC28E44", Offset = "0xC28E44", VA = "0xC28E44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001334")]
			[Address(RVA = "0xC28E4C", Offset = "0xC28E4C", VA = "0xC28E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0xC28E54", Offset = "0xC28E54", VA = "0xC28E54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001336")]
			[Address(RVA = "0xC28E5C", Offset = "0xC28E5C", VA = "0xC28E5C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0xC28E64", Offset = "0xC28E64", VA = "0xC28E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA216FC", Offset = "0xA216FC")]
			add
			{
			}
			[Token(Token = "0x6001338")]
			[Address(RVA = "0xC28F08", Offset = "0xC28F08", VA = "0xC28F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2170C", Offset = "0xA2170C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x600133A")]
			[Address(RVA = "0xC29020", Offset = "0xC29020", VA = "0xC29020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2171C", Offset = "0xA2171C")]
			add
			{
			}
			[Token(Token = "0x600133B")]
			[Address(RVA = "0xC290C4", Offset = "0xC290C4", VA = "0xC290C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2172C", Offset = "0xA2172C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0xC291DC", Offset = "0xC291DC", VA = "0xC291DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2173C", Offset = "0xA2173C")]
			add
			{
			}
			[Token(Token = "0x600133E")]
			[Address(RVA = "0xC29280", Offset = "0xC29280", VA = "0xC29280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2174C", Offset = "0xA2174C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xC28FAC", Offset = "0xC28FAC", VA = "0xC28FAC", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xC29168", Offset = "0xC29168", VA = "0xC29168", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xC29324", Offset = "0xC29324", VA = "0xC29324", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001340")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xC22A30", Offset = "0xC22A30", VA = "0xC22A30", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xC29460", Offset = "0xC29460", VA = "0xC29460", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xC23738", Offset = "0xC23738", VA = "0xC23738")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001452")]
		None,
		[Token(Token = "0x4001453")]
		Proximity,
		[Token(Token = "0x4001454")]
		Contact,
		[Token(Token = "0x4001455")]
		Action
	}
	[Token(Token = "0x200030D")]
	public enum InteractableState
	{
		[Token(Token = "0x4001457")]
		Default,
		[Token(Token = "0x4001458")]
		ProximityState,
		[Token(Token = "0x4001459")]
		ContactState,
		[Token(Token = "0x400145A")]
		ActionState
	}
	[Token(Token = "0x200030E")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xC232A0", Offset = "0xC232A0", VA = "0xC232A0")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000162")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0xC295DC", Offset = "0xC295DC", VA = "0xC295DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xC29398", Offset = "0xC29398", VA = "0xC29398")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xC294C4", Offset = "0xC294C4", VA = "0xC294C4")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xC29644", Offset = "0xC29644", VA = "0xC29644")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04AE0", Offset = "0xA04AE0")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170002AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D2C")]
				[Address(RVA = "0xC2A684", Offset = "0xC2A684", VA = "0xC2A684", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D2E")]
				[Address(RVA = "0xC2A6EC", Offset = "0xC2A6EC", VA = "0xC2A6EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D28")]
			[Address(RVA = "0xC2A148", Offset = "0xC2A148", VA = "0xC2A148")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xC2A274", Offset = "0xC2A274", VA = "0xC2A274", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0xC2A2E8", Offset = "0xC2A2E8", VA = "0xC2A2E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0xC2A290", Offset = "0xC2A290", VA = "0xC2A290")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0xC2A68C", Offset = "0xC2A68C", VA = "0xC2A68C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xC2A040", Offset = "0xC2A040", VA = "0xC2A040")]
		private void Awake()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xC2A0BC", Offset = "0xC2A0BC", VA = "0xC2A0BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA2175C", Offset = "0xA2175C")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xC2A174", Offset = "0xC2A174", VA = "0xC2A174")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xC2A26C", Offset = "0xC2A26C", VA = "0xC2A26C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000163")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0xC26648", Offset = "0xC26648", VA = "0xC26648")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xC267B0", Offset = "0xC267B0", VA = "0xC267B0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xC2A6F4", Offset = "0xC2A6F4", VA = "0xC2A6F4")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xC2A7A0", Offset = "0xC2A7A0", VA = "0xC2A7A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xC2AA68", Offset = "0xC2AA68", VA = "0xC2AA68")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xC2AAB0", Offset = "0xC2AAB0", VA = "0xC2AAB0")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xC2AD00", Offset = "0xC2AD00", VA = "0xC2AD00")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xC2AE2C", Offset = "0xC2AE2C", VA = "0xC2AE2C")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04AF0", Offset = "0xA04AF0")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170002AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D32")]
				[Address(RVA = "0xC27B98", Offset = "0xC27B98", VA = "0xC27B98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D34")]
				[Address(RVA = "0xC27C00", Offset = "0xC27C00", VA = "0xC27C00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0xC268CC", Offset = "0xC268CC", VA = "0xC268CC")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001D30")]
			[Address(RVA = "0xC275B4", Offset = "0xC275B4", VA = "0xC275B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D31")]
			[Address(RVA = "0xC275B8", Offset = "0xC275B8", VA = "0xC275B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D33")]
			[Address(RVA = "0xC27BA0", Offset = "0xC27BA0", VA = "0xC27BA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400146A")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000164")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0xC2652C", Offset = "0xC2652C", VA = "0xC2652C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000165")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0xC26534", Offset = "0xC26534", VA = "0xC26534", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000166")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001358")]
			[Address(RVA = "0xC2653C", Offset = "0xC2653C", VA = "0xC2653C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000167")]
		public override bool EnableState
		{
			[Token(Token = "0x6001359")]
			[Address(RVA = "0xC26544", Offset = "0xC26544", VA = "0xC26544", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600135A")]
			[Address(RVA = "0xC26570", Offset = "0xC26570", VA = "0xC26570", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xC265AC", Offset = "0xC265AC", VA = "0xC265AC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xC2685C", Offset = "0xC2685C", VA = "0xC2685C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA217C0", Offset = "0xA217C0")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xC268F8", Offset = "0xC268F8", VA = "0xC268F8")]
		private void Update()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xC26E08", Offset = "0xC26E08", VA = "0xC26E08")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xC27080", Offset = "0xC27080", VA = "0xC27080")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xC271C0", Offset = "0xC271C0", VA = "0xC271C0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xC27488", Offset = "0xC27488", VA = "0xC27488", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xC2748C", Offset = "0xC2748C", VA = "0xC2748C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xC27490", Offset = "0xC27490", VA = "0xC27490")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16C70", Offset = "0xA16C70")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16C80", Offset = "0xA16C80")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16C90", Offset = "0xA16C90")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000168")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0xC27C08", Offset = "0xC27C08", VA = "0xC27C08", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21824", Offset = "0xA21824")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001365")]
			[Address(RVA = "0xC27C10", Offset = "0xC27C10", VA = "0xC27C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21834", Offset = "0xA21834")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public bool EnableState
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0xC27C18", Offset = "0xC27C18", VA = "0xC27C18", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001367")]
			[Address(RVA = "0xC27C34", Offset = "0xC27C34", VA = "0xC27C34", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0xC27C54", Offset = "0xC27C54", VA = "0xC27C54", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21844", Offset = "0xA21844")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001369")]
			[Address(RVA = "0xC27C5C", Offset = "0xC27C5C", VA = "0xC27C5C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21854", Offset = "0xA21854")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public float SphereRadius
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0xC27C68", Offset = "0xC27C68", VA = "0xC27C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21864", Offset = "0xA21864")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600136B")]
			[Address(RVA = "0xC27C70", Offset = "0xC27C70", VA = "0xC27C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21874", Offset = "0xA21874")]
			private set
			{
			}
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xC27C78", Offset = "0xC27C78", VA = "0xC27C78")]
		private void Awake()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xC27CC0", Offset = "0xC27CC0", VA = "0xC27CC0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xC27CC4", Offset = "0xC27CC4", VA = "0xC27CC4")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000314")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x400147A")]
		None = 0,
		[Token(Token = "0x400147B")]
		Ray = 1,
		[Token(Token = "0x400147C")]
		Poke = 4,
		[Token(Token = "0x400147D")]
		All = -1
	}
	[Token(Token = "0x2000315")]
	public enum ToolInputState
	{
		[Token(Token = "0x400147F")]
		Inactive,
		[Token(Token = "0x4001480")]
		PrimaryInputDown,
		[Token(Token = "0x4001481")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001482")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000316")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xC27444", Offset = "0xC27444", VA = "0xC27444")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000317")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16CA0", Offset = "0xA16CA0")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16CB0", Offset = "0xA16CB0")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16CC0", Offset = "0xA16CC0")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700016C")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001370")]
			[Address(RVA = "0xC2364C", Offset = "0xC2364C", VA = "0xC2364C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001371")]
			[Address(RVA = "0xC296C0", Offset = "0xC296C0", VA = "0xC296C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21884", Offset = "0xA21884")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001372")]
			[Address(RVA = "0xC296C8", Offset = "0xC296C8", VA = "0xC296C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21894", Offset = "0xA21894")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001373")]
			get;
		}

		[Token(Token = "0x1700016F")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001374")]
			get;
		}

		[Token(Token = "0x17000170")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001375")]
			get;
		}

		[Token(Token = "0x17000171")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0xC296D4", Offset = "0xC296D4", VA = "0xC296D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA218A4", Offset = "0xA218A4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001377")]
			[Address(RVA = "0xC296E0", Offset = "0xC296E0", VA = "0xC296E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA218B4", Offset = "0xA218B4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0xC296EC", Offset = "0xC296EC", VA = "0xC296EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA218C4", Offset = "0xA218C4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001379")]
			[Address(RVA = "0xC296F8", Offset = "0xC296F8", VA = "0xC296F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA218D4", Offset = "0xA218D4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public abstract bool EnableState
		{
			[Token(Token = "0x600137E")]
			get;
			[Token(Token = "0x600137F")]
			set;
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xC29704", Offset = "0xC29704", VA = "0xC29704")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600137B")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600137C")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600137D")]
		public abstract void DeFocus();

		[Token(Token = "0x6001380")]
		public abstract void Initialize();

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xC2970C", Offset = "0xC2970C", VA = "0xC2970C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xC2975C", Offset = "0xC2975C", VA = "0xC2975C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xC297B4", Offset = "0xC297B4", VA = "0xC297B4", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xC299F8", Offset = "0xC299F8", VA = "0xC299F8", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xC274A4", Offset = "0xC274A4", VA = "0xC274A4")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000174")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001386")]
			get;
		}

		[Token(Token = "0x17000175")]
		bool EnableState
		{
			[Token(Token = "0x6001388")]
			get;
			[Token(Token = "0x6001389")]
			set;
		}

		[Token(Token = "0x17000176")]
		bool ToolActivateState
		{
			[Token(Token = "0x600138A")]
			get;
			[Token(Token = "0x600138B")]
			set;
		}

		[Token(Token = "0x6001387")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000319")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000557")]
		private enum PinchState
		{
			[Token(Token = "0x4001F07")]
			None,
			[Token(Token = "0x4001F08")]
			PinchDown,
			[Token(Token = "0x4001F09")]
			PinchStay,
			[Token(Token = "0x4001F0A")]
			PinchUp
		}

		[Token(Token = "0x400148F")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000177")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0xC2CDA8", Offset = "0xC2CDA8", VA = "0xC2CDA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0xC2CE34", Offset = "0xC2CE34", VA = "0xC2CE34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000179")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0xC2CEC0", Offset = "0xC2CEC0", VA = "0xC2CEC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xC2CF4C", Offset = "0xC2CF4C", VA = "0xC2CF4C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xC2CF78", Offset = "0xC2CF78", VA = "0xC2CF78")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001492")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001493")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001494")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001495")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001496")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16CE0", Offset = "0xA16CE0")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700017A")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001391")]
			[Address(RVA = "0xC2D218", Offset = "0xC2D218", VA = "0xC2D218", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700017B")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0xC2D220", Offset = "0xC2D220", VA = "0xC2D220", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700017C")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0xC2D288", Offset = "0xC2D288", VA = "0xC2D288", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017D")]
		public override bool EnableState
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xC2D290", Offset = "0xC2D290", VA = "0xC2D290", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001395")]
			[Address(RVA = "0xC2D2D4", Offset = "0xC2D2D4", VA = "0xC2D2D4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xC2D348", Offset = "0xC2D348", VA = "0xC2D348", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xC2D3A0", Offset = "0xC2D3A0", VA = "0xC2D3A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xC2D43C", Offset = "0xC2D43C", VA = "0xC2D43C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xC2D73C", Offset = "0xC2D73C", VA = "0xC2D73C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xC2D838", Offset = "0xC2D838", VA = "0xC2D838", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xC2DB9C", Offset = "0xC2DB9C", VA = "0xC2DB9C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xC2DD40", Offset = "0xC2DD40", VA = "0xC2DD40")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xC2DE68", Offset = "0xC2DE68", VA = "0xC2DE68")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xC2E1A0", Offset = "0xC2E1A0", VA = "0xC2E1A0")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xC2E5B0", Offset = "0xC2E5B0", VA = "0xC2E5B0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xC2E684", Offset = "0xC2E684", VA = "0xC2E684", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xC2E6B8", Offset = "0xC2E6B8", VA = "0xC2E6B8")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40014A2")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40014A3")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16D54", Offset = "0xA16D54")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700017E")]
		public bool EnableState
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0xC2D2B8", Offset = "0xC2D2B8", VA = "0xC2D2B8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0xC2D2F0", Offset = "0xC2D2F0", VA = "0xC2D2F0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0xC2E770", Offset = "0xC2E770", VA = "0xC2E770", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xC2D700", Offset = "0xC2D700", VA = "0xC2D700", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0xC2E9A0", Offset = "0xC2E9A0", VA = "0xC2E9A0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA218E4", Offset = "0xA218E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0xC2E9A8", Offset = "0xC2E9A8", VA = "0xC2E9A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA218F4", Offset = "0xA218F4")]
			set
			{
			}
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xC2E778", Offset = "0xC2E778", VA = "0xC2E778")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xC2E5E4", Offset = "0xC2E5E4", VA = "0xC2E5E4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xC2E9B0", Offset = "0xC2E9B0", VA = "0xC2E9B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xC2ECDC", Offset = "0xC2ECDC", VA = "0xC2ECDC")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xC2EECC", Offset = "0xC2EECC", VA = "0xC2EECC")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000181")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0xC2619C", Offset = "0xC2619C", VA = "0xC2619C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xC261A4", Offset = "0xC261A4", VA = "0xC261A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0xC2622C", Offset = "0xC2622C", VA = "0xC2622C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xC26234", Offset = "0xC26234", VA = "0xC26234")]
			set
			{
			}
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xC262A0", Offset = "0xC262A0", VA = "0xC262A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xC26504", Offset = "0xC26504", VA = "0xC26504")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xC26514", Offset = "0xC26514", VA = "0xC26514")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xC26524", Offset = "0xC26524", VA = "0xC26524")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xC23DA4", Offset = "0xC23DA4", VA = "0xC23DA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xC23DA8", Offset = "0xC23DA8", VA = "0xC23DA8")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xC23E28", Offset = "0xC23E28", VA = "0xC23E28")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xC23F18", Offset = "0xC23F18", VA = "0xC23F18")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xC24008", Offset = "0xC24008", VA = "0xC24008")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xC240C8", Offset = "0xC240C8", VA = "0xC240C8")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xC241B8", Offset = "0xC241B8", VA = "0xC241B8")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xC24200", Offset = "0xC24200", VA = "0xC24200")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xC2435C", Offset = "0xC2435C", VA = "0xC2435C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xC243CC", Offset = "0xC243CC", VA = "0xC243CC")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xC243D4", Offset = "0xC243D4", VA = "0xC243D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xC243D8", Offset = "0xC243D8", VA = "0xC243D8")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xC24390", Offset = "0xC24390", VA = "0xC24390")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xC24418", Offset = "0xC24418", VA = "0xC24418")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B00", Offset = "0xA04B00")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170002B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D38")]
				[Address(RVA = "0xC2CC4C", Offset = "0xC2CC4C", VA = "0xC2CC4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D3A")]
				[Address(RVA = "0xC2CCB4", Offset = "0xC2CCB4", VA = "0xC2CCB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D35")]
			[Address(RVA = "0xC2C980", Offset = "0xC2C980", VA = "0xC2C980")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001D36")]
			[Address(RVA = "0xC2CA5C", Offset = "0xC2CA5C", VA = "0xC2CA5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D37")]
			[Address(RVA = "0xC2CA60", Offset = "0xC2CA60", VA = "0xC2CA60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xC2CC54", Offset = "0xC2CC54", VA = "0xC2CC54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014B3")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40014B4")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xC2C598", Offset = "0xC2C598", VA = "0xC2C598")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xC2C630", Offset = "0xC2C630", VA = "0xC2C630")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xC2C8BC", Offset = "0xC2C8BC", VA = "0xC2C8BC")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xC2C84C", Offset = "0xC2C84C", VA = "0xC2C84C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA21904", Offset = "0xA21904")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xC2C9AC", Offset = "0xC2C9AC", VA = "0xC2C9AC")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000559")]
		public enum SelectionState
		{
			[Token(Token = "0x4001F12")]
			Off,
			[Token(Token = "0x4001F13")]
			Selected,
			[Token(Token = "0x4001F14")]
			Highlighted
		}

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000183")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0xC2EF2C", Offset = "0xC2EF2C", VA = "0xC2EF2C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0xC2EF34", Offset = "0xC2EF34", VA = "0xC2EF34")]
			set
			{
			}
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xC2F0BC", Offset = "0xC2F0BC", VA = "0xC2F0BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xC2F27C", Offset = "0xC2F27C", VA = "0xC2F27C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xC2EFBC", Offset = "0xC2EFBC", VA = "0xC2EFBC")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xC2F36C", Offset = "0xC2F36C", VA = "0xC2F36C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200055A")]
		public enum SegmentType
		{
			[Token(Token = "0x4001F16")]
			Straight,
			[Token(Token = "0x4001F17")]
			LeftTurn,
			[Token(Token = "0x4001F18")]
			RightTurn,
			[Token(Token = "0x4001F19")]
			Switch
		}

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40014C9")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40014CA")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16E34", Offset = "0xA16E34")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000184")]
		public float StartDistance
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xC2F3D8", Offset = "0xC2F3D8", VA = "0xC2F3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21968", Offset = "0xA21968")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xC2F3E0", Offset = "0xC2F3E0", VA = "0xC2F3E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21978", Offset = "0xA21978")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public float GridSize
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xC2F3E8", Offset = "0xC2F3E8", VA = "0xC2F3E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xC2F3F0", Offset = "0xC2F3F0", VA = "0xC2F3F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public int SubDivCount
		{
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xC2F3F8", Offset = "0xC2F3F8", VA = "0xC2F3F8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0xC2F400", Offset = "0xC2F400", VA = "0xC2F400")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public SegmentType Type
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xC2F408", Offset = "0xC2F408", VA = "0xC2F408")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000188")]
		public Pose EndPose
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xC2F410", Offset = "0xC2F410", VA = "0xC2F410")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public float Radius
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xC2F8A4", Offset = "0xC2F8A4", VA = "0xC2F8A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018A")]
		public float SegmentLength
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0xC2F478", Offset = "0xC2F478", VA = "0xC2F478")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xC2F8B4", Offset = "0xC2F8B4", VA = "0xC2F8B4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xC2F8CC", Offset = "0xC2F8CC", VA = "0xC2F8CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xC2F4B8", Offset = "0xC2F4B8", VA = "0xC2F4B8")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xC2F8D0", Offset = "0xC2F8D0", VA = "0xC2F8D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xC2F8D4", Offset = "0xC2F8D4", VA = "0xC2F8D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xC2F940", Offset = "0xC2F940", VA = "0xC2F940")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xC304C8", Offset = "0xC304C8", VA = "0xC304C8")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xC307D4", Offset = "0xC307D4", VA = "0xC307D4")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200055B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B10", Offset = "0xA04B10")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170002B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D3E")]
				[Address(RVA = "0xC313DC", Offset = "0xC313DC", VA = "0xC313DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D40")]
				[Address(RVA = "0xC31444", Offset = "0xC31444", VA = "0xC31444", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0xC31154", Offset = "0xC31154", VA = "0xC31154")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0xC31230", Offset = "0xC31230", VA = "0xC31230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0xC31234", Offset = "0xC31234", VA = "0xC31234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0xC313E4", Offset = "0xC313E4", VA = "0xC313E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014D0")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40014D1")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xC30878", Offset = "0xC30878", VA = "0xC30878")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xC30924", Offset = "0xC30924", VA = "0xC30924")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xC309D8", Offset = "0xC309D8", VA = "0xC309D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xC30B04", Offset = "0xC30B04", VA = "0xC30B04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xC30C74", Offset = "0xC30C74", VA = "0xC30C74")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xC30E10", Offset = "0xC30E10", VA = "0xC30E10")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xC3108C", Offset = "0xC3108C", VA = "0xC3108C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xC30F24", Offset = "0xC30F24", VA = "0xC30F24")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xC30F38", Offset = "0xC30F38", VA = "0xC30F38")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xC310E4", Offset = "0xC310E4", VA = "0xC310E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA21988", Offset = "0xA21988")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xC31180", Offset = "0xC31180", VA = "0xC31180")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700018B")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0xC3144C", Offset = "0xC3144C", VA = "0xC3144C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xC3145C", Offset = "0xC3145C", VA = "0xC3145C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xC31464", Offset = "0xC31464", VA = "0xC31464", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xC318D0", Offset = "0xC318D0", VA = "0xC318D0")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40014E4")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40014E5")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16F34", Offset = "0xA16F34")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700018C")]
		public float Distance
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xC319C8", Offset = "0xC319C8", VA = "0xC319C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA219EC", Offset = "0xA219EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0xC319D0", Offset = "0xC319D0", VA = "0xC319D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA219FC", Offset = "0xA219FC")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public float Scale
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0xC319D8", Offset = "0xC319D8", VA = "0xC319D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0xC319E0", Offset = "0xC319E0", VA = "0xC319E0")]
			set
			{
			}
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xC31460", Offset = "0xC31460", VA = "0xC31460", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xC319E8", Offset = "0xC319E8", VA = "0xC319E8")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xC314AC", Offset = "0xC314AC", VA = "0xC314AC")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xC31784", Offset = "0xC31784", VA = "0xC31784")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60013F8")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xC31940", Offset = "0xC31940", VA = "0xC31940")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B20", Offset = "0xA04B20")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170002B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D44")]
				[Address(RVA = "0xC32370", Offset = "0xC32370", VA = "0xC32370", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D46")]
				[Address(RVA = "0xC323D8", Offset = "0xC323D8", VA = "0xC323D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D41")]
			[Address(RVA = "0xC31FB4", Offset = "0xC31FB4", VA = "0xC31FB4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001D42")]
			[Address(RVA = "0xC3214C", Offset = "0xC3214C", VA = "0xC3214C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D43")]
			[Address(RVA = "0xC32150", Offset = "0xC32150", VA = "0xC32150", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D45")]
			[Address(RVA = "0xC32378", Offset = "0xC32378", VA = "0xC32378", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xC31BB8", Offset = "0xC31BB8", VA = "0xC31BB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xC31C04", Offset = "0xC31C04", VA = "0xC31C04")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xC31D10", Offset = "0xC31D10", VA = "0xC31D10")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xC31E58", Offset = "0xC31E58", VA = "0xC31E58")]
		private void Update()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xC31D6C", Offset = "0xC31D6C", VA = "0xC31D6C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xC31F34", Offset = "0xC31F34", VA = "0xC31F34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA21A0C", Offset = "0xA21A0C")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xC31FE0", Offset = "0xC31FE0", VA = "0xC31FE0")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xC3208C", Offset = "0xC3208C", VA = "0xC3208C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xC320EC", Offset = "0xC320EC", VA = "0xC320EC")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200055D")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001F2C")]
			Start,
			[Token(Token = "0x4001F2D")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001F2E")]
			Stop
		}

		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B30", Offset = "0xA04B30")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170002B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D4A")]
				[Address(RVA = "0xC32CFC", Offset = "0xC32CFC", VA = "0xC32CFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D4C")]
				[Address(RVA = "0xC32D64", Offset = "0xC32D64", VA = "0xC32D64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xC32698", Offset = "0xC32698", VA = "0xC32698")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001D48")]
			[Address(RVA = "0xC32ADC", Offset = "0xC32ADC", VA = "0xC32ADC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D49")]
			[Address(RVA = "0xC32AE0", Offset = "0xC32AE0", VA = "0xC32AE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xC32D04", Offset = "0xC32D04", VA = "0xC32D04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014F8")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40014F9")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40014FA")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40014FB")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA16F94", Offset = "0xA16F94")]
		protected float _initialSpeed;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xC323E0", Offset = "0xC323E0", VA = "0xC323E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xC32538", Offset = "0xC32538", VA = "0xC32538")]
		private void Update()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xC32544", Offset = "0xC32544", VA = "0xC32544", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xC23DDC", Offset = "0xC23DDC", VA = "0xC23DDC")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xC324B4", Offset = "0xC324B4", VA = "0xC324B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA21A70", Offset = "0xA21A70")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xC326C4", Offset = "0xC326C4", VA = "0xC326C4")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xC32634", Offset = "0xC32634", VA = "0xC32634")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xC23E5C", Offset = "0xC23E5C", VA = "0xC23E5C")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xC23F4C", Offset = "0xC23F4C", VA = "0xC23F4C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xC328F8", Offset = "0xC328F8", VA = "0xC328F8")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xC329E8", Offset = "0xC329E8", VA = "0xC329E8")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xC2403C", Offset = "0xC2403C", VA = "0xC2403C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xC240FC", Offset = "0xC240FC", VA = "0xC240FC")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xC241F0", Offset = "0xC241F0", VA = "0xC241F0")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xC32A70", Offset = "0xC32A70", VA = "0xC32A70")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700018E")]
		public float TrackLength
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0xC32D6C", Offset = "0xC32D6C", VA = "0xC32D6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001414")]
			[Address(RVA = "0xC32D74", Offset = "0xC32D74", VA = "0xC32D74")]
			private set
			{
			}
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xC32D7C", Offset = "0xC32D7C", VA = "0xC32D7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xC31A68", Offset = "0xC31A68", VA = "0xC31A68")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xC32D80", Offset = "0xC32D80", VA = "0xC32D80")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xC32F78", Offset = "0xC32F78", VA = "0xC32F78")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xC33094", Offset = "0xC33094", VA = "0xC33094")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class Pose
	{
		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xC2D0FC", Offset = "0xC2D0FC", VA = "0xC2D0FC")]
		public Pose()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xC2D1A8", Offset = "0xC2D1A8", VA = "0xC2D1A8")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B40", Offset = "0xA04B40")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170002B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D50")]
				[Address(RVA = "0xC33678", Offset = "0xC33678", VA = "0xC33678", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D52")]
				[Address(RVA = "0xC336E0", Offset = "0xC336E0", VA = "0xC336E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xC3333C", Offset = "0xC3333C", VA = "0xC3333C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0xC3349C", Offset = "0xC3349C", VA = "0xC3349C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0xC334A0", Offset = "0xC334A0", VA = "0xC334A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D51")]
			[Address(RVA = "0xC33680", Offset = "0xC33680", VA = "0xC33680", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B50", Offset = "0xA04B50")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170002BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D56")]
				[Address(RVA = "0xC337B4", Offset = "0xC337B4", VA = "0xC337B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D58")]
				[Address(RVA = "0xC3381C", Offset = "0xC3381C", VA = "0xC3381C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xC333FC", Offset = "0xC333FC", VA = "0xC333FC")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xC336E8", Offset = "0xC336E8", VA = "0xC336E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xC336EC", Offset = "0xC336EC", VA = "0xC336EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D57")]
			[Address(RVA = "0xC337BC", Offset = "0xC337BC", VA = "0xC337BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400151E")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1717C", Offset = "0xA1717C")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700018F")]
		public bool IsMoving
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0xC330B0", Offset = "0xC330B0", VA = "0xC330B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21AD4", Offset = "0xA21AD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600141D")]
			[Address(RVA = "0xC330B8", Offset = "0xC330B8", VA = "0xC330B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21AE4", Offset = "0xA21AE4")]
			private set
			{
			}
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xC330C4", Offset = "0xC330C4", VA = "0xC330C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xC33100", Offset = "0xC33100", VA = "0xC33100")]
		private void Update()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xC33254", Offset = "0xC33254", VA = "0xC33254")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xC332BC", Offset = "0xC332BC", VA = "0xC332BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA21AF4", Offset = "0xA21AF4")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xC33368", Offset = "0xC33368", VA = "0xC33368")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA21B58", Offset = "0xA21B58")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xC33428", Offset = "0xC33428", VA = "0xC33428")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xC33494", Offset = "0xC33494", VA = "0xC33494")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xC33824", Offset = "0xC33824", VA = "0xC33824")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xC3388C", Offset = "0xC3388C", VA = "0xC3388C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xC33944", Offset = "0xC33944", VA = "0xC33944")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xC33A44", Offset = "0xC33A44", VA = "0xC33A44")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xC33AC0", Offset = "0xC33AC0", VA = "0xC33AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xC33B9C", Offset = "0xC33B9C", VA = "0xC33B9C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x400152F")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001530")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001531")]
		EUDT_None,
		[Token(Token = "0x4001532")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200032C")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B60", Offset = "0xA04B60")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170002BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D5C")]
				[Address(RVA = "0xC2C528", Offset = "0xC2C528", VA = "0xC2C528", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D5E")]
				[Address(RVA = "0xC2C590", Offset = "0xC2C590", VA = "0xC2C590", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D59")]
			[Address(RVA = "0xC2BBA4", Offset = "0xC2BBA4", VA = "0xC2BBA4")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0xC2C2DC", Offset = "0xC2C2DC", VA = "0xC2C2DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0xC2C2E0", Offset = "0xC2C2E0", VA = "0xC2C2E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0xC2C530", Offset = "0xC2C530", VA = "0xC2C530", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001534")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001535")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001536")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA171BC", Offset = "0xA171BC")]
		public GameObject mainCamera;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA171F4", Offset = "0xA171F4")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xC2AEEC", Offset = "0xC2AEEC", VA = "0xC2AEEC")]
		private void Start()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xC2B6CC", Offset = "0xC2B6CC", VA = "0xC2B6CC")]
		private void Update()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xC2B80C", Offset = "0xC2B80C", VA = "0xC2B80C")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xC2B934", Offset = "0xC2B934", VA = "0xC2B934")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xC2BA5C", Offset = "0xC2BA5C", VA = "0xC2BA5C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xC2B7E0", Offset = "0xC2B7E0", VA = "0xC2B7E0")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xC2BB34", Offset = "0xC2BB34", VA = "0xC2BB34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA21BBC", Offset = "0xA21BBC")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xC2BBD0", Offset = "0xC2BBD0", VA = "0xC2BBD0")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xC2B258", Offset = "0xC2B258", VA = "0xC2B258")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xC2BCF8", Offset = "0xC2BCF8", VA = "0xC2BCF8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xC2BC04", Offset = "0xC2BC04", VA = "0xC2BC04")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xC2C094", Offset = "0xC2C094", VA = "0xC2C094")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xC2C170", Offset = "0xC2C170", VA = "0xC2C170")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xC2C1EC", Offset = "0xC2C1EC", VA = "0xC2C1EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21C20", Offset = "0xA21C20")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xC2C23C", Offset = "0xC2C23C", VA = "0xC2C23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21C30", Offset = "0xA21C30")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xC2C28C", Offset = "0xC2C28C", VA = "0xC2C28C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA21C40", Offset = "0xA21C40")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03CCC", Offset = "0xA03CCC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B70", Offset = "0xA04B70")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001D60")]
			[Address(RVA = "0xCC7FF0", Offset = "0xCC7FF0", VA = "0xCC7FF0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D61")]
			[Address(RVA = "0xCC7FF8", Offset = "0xCC7FF8", VA = "0xCC7FF8")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400154B")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x400154C")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x400154D")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x400154E")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x400154F")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001550")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001551")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001552")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001553")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001554")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001555")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xCC7234", Offset = "0xCC7234", VA = "0xCC7234")]
		private void Awake()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xCC728C", Offset = "0xCC728C", VA = "0xCC728C")]
		private void Start()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xCC7694", Offset = "0xCC7694", VA = "0xCC7694")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xCC7760", Offset = "0xCC7760", VA = "0xCC7760")]
		private void Update()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xCC786C", Offset = "0xCC786C", VA = "0xCC786C")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xCC7BA4", Offset = "0xCC7BA4", VA = "0xCC7BA4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xCC7D0C", Offset = "0xCC7D0C", VA = "0xCC7D0C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xCC7E58", Offset = "0xCC7E58", VA = "0xCC7E58")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xCC7908", Offset = "0xCC7908", VA = "0xCC7908")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xCC79A8", Offset = "0xCC79A8", VA = "0xCC79A8")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xCC74E8", Offset = "0xCC74E8", VA = "0xCC74E8")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xCC7F74", Offset = "0xCC7F74", VA = "0xCC7F74")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001568")]
		Default,
		[Token(Token = "0x4001569")]
		Generic,
		[Token(Token = "0x400156A")]
		PingPongBall,
		[Token(Token = "0x400156B")]
		Controller
	}
	[Token(Token = "0x200032F")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000190")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001447")]
			[Address(RVA = "0xCC8024", Offset = "0xCC8024", VA = "0xCC8024")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000191")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001448")]
			[Address(RVA = "0xCC802C", Offset = "0xCC802C", VA = "0xCC802C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000192")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0xCC8034", Offset = "0xCC8034", VA = "0xCC8034")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xCC803C", Offset = "0xCC803C", VA = "0xCC803C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xCC8044", Offset = "0xCC8044", VA = "0xCC8044")]
		private void Update()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xCC82B8", Offset = "0xCC82B8", VA = "0xCC82B8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xCC8314", Offset = "0xCC8314", VA = "0xCC8314")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xCC8358", Offset = "0xCC8358", VA = "0xCC8358")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000331")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001572")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001573")]
		public const string Tab = "    ";

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xCD1090", Offset = "0xCD1090", VA = "0xCD1090")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA21C50", Offset = "0xA21C50")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA21C50", Offset = "0xA21C50")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xCD1118", Offset = "0xCD1118", VA = "0xCD1118")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA21CB0", Offset = "0xA21CB0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA21CB0", Offset = "0xA21CB0")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xCD11B0", Offset = "0xCD11B0", VA = "0xCD11B0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA21D10", Offset = "0xA21D10")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA21D10", Offset = "0xA21D10")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xCD1238", Offset = "0xCD1238", VA = "0xCD1238")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA21D70", Offset = "0xA21D70")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA21D70", Offset = "0xA21D70")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xCD12C0", Offset = "0xCD12C0", VA = "0xCD12C0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA21DD0", Offset = "0xA21DD0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA21DD0", Offset = "0xA21DD0")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class CAPI
	{
		[Token(Token = "0x2000563")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000564")]
		public enum Result
		{
			[Token(Token = "0x4001F4A")]
			Success = 0,
			[Token(Token = "0x4001F4B")]
			Failure = -1000,
			[Token(Token = "0x4001F4C")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001F4D")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001F4E")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001F4F")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001F50")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001F51")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001F52")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000565")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0xC22258", Offset = "0xC22258", VA = "0xC22258")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001574")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x400157C")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001454")]
		[Address(RVA = "0xCD13C0", Offset = "0xCD13C0", VA = "0xCD13C0")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xCD1450", Offset = "0xCD1450", VA = "0xCD1450")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xCD160C", Offset = "0xCD160C", VA = "0xCD160C")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001457")]
		[Address(RVA = "0xCD16EC", Offset = "0xCD16EC", VA = "0xCD16EC")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001458")]
		[Address(RVA = "0xCD175C", Offset = "0xCD175C", VA = "0xCD175C")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001459")]
		[Address(RVA = "0xCD17D0", Offset = "0xCD17D0", VA = "0xCD17D0")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xCD1850", Offset = "0xCD1850", VA = "0xCD1850")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x600145B")]
		[Address(RVA = "0xCD1968", Offset = "0xCD1968", VA = "0xCD1968")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xCD19E8", Offset = "0xCD19E8", VA = "0xCD19E8")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x600145D")]
		[Address(RVA = "0xCD1B00", Offset = "0xCD1B00", VA = "0xCD1B00")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600145E")]
		[Address(RVA = "0xCD1B80", Offset = "0xCD1B80", VA = "0xCD1B80")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600145F")]
		[Address(RVA = "0xCD1C00", Offset = "0xCD1C00", VA = "0xCD1C00")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001460")]
		[Address(RVA = "0xCD1C80", Offset = "0xCD1C80", VA = "0xCD1C80")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001461")]
		[Address(RVA = "0xCD1D00", Offset = "0xCD1D00", VA = "0xCD1D00")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001462")]
		[Address(RVA = "0xCD1D90", Offset = "0xCD1D90", VA = "0xCD1D90")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001463")]
		[Address(RVA = "0xCD1E20", Offset = "0xCD1E20", VA = "0xCD1E20")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001464")]
		[Address(RVA = "0xCD1EB0", Offset = "0xCD1EB0", VA = "0xCD1EB0")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001465")]
		[Address(RVA = "0xCD1F30", Offset = "0xCD1F30", VA = "0xCD1F30")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001466")]
		[Address(RVA = "0xCD1FB0", Offset = "0xCD1FB0", VA = "0xCD1FB0")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001467")]
		[Address(RVA = "0xCD2040", Offset = "0xCD2040", VA = "0xCD2040")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001468")]
		[Address(RVA = "0xCD20D0", Offset = "0xCD20D0", VA = "0xCD20D0")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001469")]
		[Address(RVA = "0xCD2160", Offset = "0xCD2160", VA = "0xCD2160")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600146A")]
		[Address(RVA = "0xCD21E0", Offset = "0xCD21E0", VA = "0xCD21E0")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xCD2280", Offset = "0xCD2280", VA = "0xCD2280")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600146C")]
		[Address(RVA = "0xCD2300", Offset = "0xCD2300", VA = "0xCD2300")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x600146D")]
		[Address(RVA = "0xCD23A0", Offset = "0xCD23A0", VA = "0xCD23A0")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x600146E")]
		[Address(RVA = "0xCD2460", Offset = "0xCD2460", VA = "0xCD2460")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x600146F")]
		[Address(RVA = "0xCD2530", Offset = "0xCD2530", VA = "0xCD2530")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001470")]
		[Address(RVA = "0xCD25C0", Offset = "0xCD25C0", VA = "0xCD25C0")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001471")]
		[Address(RVA = "0xCD2650", Offset = "0xCD2650", VA = "0xCD2650")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001472")]
		[Address(RVA = "0xCD26E0", Offset = "0xCD26E0", VA = "0xCD26E0")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001473")]
		[Address(RVA = "0xCD2770", Offset = "0xCD2770", VA = "0xCD2770")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001474")]
		[Address(RVA = "0xCD2800", Offset = "0xCD2800", VA = "0xCD2800")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xCD2880", Offset = "0xCD2880", VA = "0xCD2880")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xCD29A0", Offset = "0xCD29A0", VA = "0xCD29A0")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001477")]
		[Address(RVA = "0xCD2910", Offset = "0xCD2910", VA = "0xCD2910")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xCD2B94", Offset = "0xCD2B94", VA = "0xCD2B94")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001479")]
		[Address(RVA = "0xCD2CCC", Offset = "0xCD2CCC", VA = "0xCD2CCC")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x600147A")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xCD2D4C", Offset = "0xCD2D4C", VA = "0xCD2D4C")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600147C")]
		[Address(RVA = "0xCD2FBC", Offset = "0xCD2FBC", VA = "0xCD2FBC")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xCD303C", Offset = "0xCD303C", VA = "0xCD303C")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600147E")]
		[Address(RVA = "0xCD3174", Offset = "0xCD3174", VA = "0xCD3174")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xCD31F4", Offset = "0xCD31F4", VA = "0xCD31F4")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001480")]
		[Address(RVA = "0xCD332C", Offset = "0xCD332C", VA = "0xCD332C")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xCD33AC", Offset = "0xCD33AC", VA = "0xCD33AC")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001482")]
		[Address(RVA = "0xCD34E4", Offset = "0xCD34E4", VA = "0xCD34E4")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xCD3564", Offset = "0xCD3564", VA = "0xCD3564")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001484")]
		[Address(RVA = "0xCD369C", Offset = "0xCD369C", VA = "0xCD369C")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001485")]
		[Address(RVA = "0xCD371C", Offset = "0xCD371C", VA = "0xCD371C")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001486")]
		[Address(RVA = "0xCD379C", Offset = "0xCD379C", VA = "0xCD379C")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001487")]
		[Address(RVA = "0xCD3834", Offset = "0xCD3834", VA = "0xCD3834")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xCD38B4", Offset = "0xCD38B4", VA = "0xCD38B4")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xCD3A60", Offset = "0xCD3A60", VA = "0xCD3A60")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x600148A")]
		[Address(RVA = "0xCD3B8C", Offset = "0xCD3B8C", VA = "0xCD3B8C")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600148B")]
		[Address(RVA = "0xCD39E0", Offset = "0xCD39E0", VA = "0xCD39E0")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600148C")]
		[Address(RVA = "0xCD3C0C", Offset = "0xCD3C0C", VA = "0xCD3C0C")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600148D")]
		[Address(RVA = "0xCD3C8C", Offset = "0xCD3C8C", VA = "0xCD3C8C")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600148E")]
		[Address(RVA = "0xCD3D1C", Offset = "0xCD3D1C", VA = "0xCD3D1C")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600148F")]
		[Address(RVA = "0xCD3D9C", Offset = "0xCD3D9C", VA = "0xCD3D9C")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001490")]
		[Address(RVA = "0xCD3E2C", Offset = "0xCD3E2C", VA = "0xCD3E2C")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001491")]
		[Address(RVA = "0xCD3EAC", Offset = "0xCD3EAC", VA = "0xCD3EAC")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xCD3F2C", Offset = "0xCD3F2C", VA = "0xCD3F2C")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001493")]
		[Address(RVA = "0xCD4168", Offset = "0xCD4168", VA = "0xCD4168")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xCD41F8", Offset = "0xCD41F8", VA = "0xCD41F8")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001495")]
		[Address(RVA = "0xCD43E4", Offset = "0xCD43E4", VA = "0xCD43E4")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xCD447C", Offset = "0xCD447C", VA = "0xCD447C")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001497")]
		[Address(RVA = "0xCD45A0", Offset = "0xCD45A0", VA = "0xCD45A0")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001498")]
		[Address(RVA = "0xCD4620", Offset = "0xCD4620", VA = "0xCD4620")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xCD46A0", Offset = "0xCD46A0", VA = "0xCD46A0")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x600149A")]
		[Address(RVA = "0xCD47C8", Offset = "0xCD47C8", VA = "0xCD47C8")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xCD4848", Offset = "0xCD4848", VA = "0xCD4848")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x600149C")]
		[Address(RVA = "0xCD4970", Offset = "0xCD4970", VA = "0xCD4970")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600149D")]
		[Address(RVA = "0xCD49F0", Offset = "0xCD49F0", VA = "0xCD49F0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600149E")]
		[Address(RVA = "0xCD4A80", Offset = "0xCD4A80", VA = "0xCD4A80")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600149F")]
		[Address(RVA = "0xCD4B10", Offset = "0xCD4B10", VA = "0xCD4B10")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xCD4BA0", Offset = "0xCD4BA0", VA = "0xCD4BA0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xCD4C20", Offset = "0xCD4C20", VA = "0xCD4C20")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xCD4CA8", Offset = "0xCD4CA8", VA = "0xCD4CA8")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xCD4D30", Offset = "0xCD4D30", VA = "0xCD4D30")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xCD4DB0", Offset = "0xCD4DB0", VA = "0xCD4DB0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xCD4E30", Offset = "0xCD4E30", VA = "0xCD4E30")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xCD4EE4", Offset = "0xCD4EE4", VA = "0xCD4EE4")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xCD4F74", Offset = "0xCD4F74", VA = "0xCD4F74")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xCD5004", Offset = "0xCD5004", VA = "0xCD5004")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xCD5084", Offset = "0xCD5084", VA = "0xCD5084")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xCD5104", Offset = "0xCD5104", VA = "0xCD5104")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xCD5184", Offset = "0xCD5184", VA = "0xCD5184")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xCD521C", Offset = "0xCD521C", VA = "0xCD521C")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xCD52AC", Offset = "0xCD52AC", VA = "0xCD52AC")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xCD533C", Offset = "0xCD533C", VA = "0xCD533C")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xCD53CC", Offset = "0xCD53CC", VA = "0xCD53CC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xCD5464", Offset = "0xCD5464", VA = "0xCD5464")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xCD54FC", Offset = "0xCD54FC", VA = "0xCD54FC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xCD557C", Offset = "0xCD557C", VA = "0xCD557C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xCD55FC", Offset = "0xCD55FC", VA = "0xCD55FC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xCD5724", Offset = "0xCD5724", VA = "0xCD5724")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xCD57A4", Offset = "0xCD57A4", VA = "0xCD57A4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xCD58CC", Offset = "0xCD58CC", VA = "0xCD58CC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xCD594C", Offset = "0xCD594C", VA = "0xCD594C")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xCD5A74", Offset = "0xCD5A74", VA = "0xCD5A74")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xCD5AF4", Offset = "0xCD5AF4", VA = "0xCD5AF4")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xCD5C9C", Offset = "0xCD5C9C", VA = "0xCD5C9C")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xCD5F38", Offset = "0xCD5F38", VA = "0xCD5F38")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xCD5C1C", Offset = "0xCD5C1C", VA = "0xCD5C1C")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xCD5FC8", Offset = "0xCD5FC8", VA = "0xCD5FC8")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xCD6048", Offset = "0xCD6048", VA = "0xCD6048")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xCD60D8", Offset = "0xCD60D8", VA = "0xCD60D8")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xCD6168", Offset = "0xCD6168", VA = "0xCD6168")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xCD61F8", Offset = "0xCD61F8", VA = "0xCD61F8")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xCD6298", Offset = "0xCD6298", VA = "0xCD6298")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xCD6338", Offset = "0xCD6338", VA = "0xCD6338")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xCD63D8", Offset = "0xCD63D8", VA = "0xCD63D8")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xCD6458", Offset = "0xCD6458", VA = "0xCD6458")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xCD64D8", Offset = "0xCD64D8", VA = "0xCD64D8")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xCD6558", Offset = "0xCD6558", VA = "0xCD6558")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xCD65D8", Offset = "0xCD65D8", VA = "0xCD65D8")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xCD6658", Offset = "0xCD6658", VA = "0xCD6658")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xCD6780", Offset = "0xCD6780", VA = "0xCD6780")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xCD6818", Offset = "0xCD6818", VA = "0xCD6818")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xCD6898", Offset = "0xCD6898", VA = "0xCD6898")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xCD68FC", Offset = "0xCD68FC", VA = "0xCD68FC")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xCD6A18", Offset = "0xCD6A18", VA = "0xCD6A18")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xCD6AA8", Offset = "0xCD6AA8", VA = "0xCD6AA8")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xCD6BEC", Offset = "0xCD6BEC", VA = "0xCD6BEC")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xCD6C7C", Offset = "0xCD6C7C", VA = "0xCD6C7C")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xCD6D1C", Offset = "0xCD6D1C", VA = "0xCD6D1C")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xCD70B4", Offset = "0xCD70B4", VA = "0xCD70B4")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xCD7134", Offset = "0xCD7134", VA = "0xCD7134")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xCD71CC", Offset = "0xCD71CC", VA = "0xCD71CC")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xCD7994", Offset = "0xCD7994", VA = "0xCD7994")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xCD7A14", Offset = "0xCD7A14", VA = "0xCD7A14")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xCD1358", Offset = "0xCD1358", VA = "0xCD1358")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xA21E30", Offset = "0xA21E30")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xCD7AAC", Offset = "0xCD7AAC", VA = "0xCD7AAC")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xCD7B30", Offset = "0xCD7B30", VA = "0xCD7B30")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xCD7BB0", Offset = "0xCD7BB0", VA = "0xCD7BB0")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xCD7C30", Offset = "0xCD7C30", VA = "0xCD7C30")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xCD7CB0", Offset = "0xCD7CB0", VA = "0xCD7CB0")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xCD8690", Offset = "0xCD8690", VA = "0xCD8690")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xCD8710", Offset = "0xCD8710", VA = "0xCD8710")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xCD8AFC", Offset = "0xCD8AFC", VA = "0xCD8AFC")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xCD8A6C", Offset = "0xCD8A6C", VA = "0xCD8A6C")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xCD8B70", Offset = "0xCD8B70", VA = "0xCD8B70")]
		public CAPI()
		{
		}
	}
}
namespace Observer
{
	[Token(Token = "0x2000333")]
	public static class Observer_Events
	{
		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xCC4FE8", Offset = "0xCC4FE8", VA = "0xCC4FE8")]
		public static Observer_CustomEvent CustomEvent(string type)
		{
			return null;
		}
	}
}
namespace MantisLODEditor
{
	[Token(Token = "0x2000334")]
	public class Mantis_Mesh
	{
		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uuid;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[][] origin_triangles;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] out_triangles;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int out_count;

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xCAE750", Offset = "0xCAE750", VA = "0xCAE750")]
		public Mantis_Mesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000335")]
	public class ProgressiveMesh : ScriptableObject
	{
		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int max_lod_count;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xCAE784", Offset = "0xCAE784", VA = "0xCAE784")]
		public ProgressiveMesh()
		{
		}
	}
	[Token(Token = "0x2000336")]
	internal class ProgressiveMeshRuntime : MonoBehaviour
	{
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProgressiveMesh progressiveMesh;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text fpsHint;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text lodHint;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text triangleHint;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int minLod;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int maxLod;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Mesh[] cloned_meshes;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Mesh[] shared_meshes;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int current_lod;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Component[] allBasicRenderers;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float UpdateInterval;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float currentTimeToInterval;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool culled;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool working;

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xCAE7E0", Offset = "0xCAE7E0", VA = "0xCAE7E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xCAED60", Offset = "0xCAED60", VA = "0xCAED60")]
		private void Start()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xCAED64", Offset = "0xCAED64", VA = "0xCAED64")]
		private float ratio_of_screen()
		{
			return default(float);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xCAF230", Offset = "0xCAF230", VA = "0xCAF230")]
		private void Update()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xCAF8E8", Offset = "0xCAF8E8", VA = "0xCAF8E8")]
		private int[] get_triangles_from_progressive_mesh(int lod0, int mesh_count0, int mat0)
		{
			return null;
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xCAF6A0", Offset = "0xCAF6A0", VA = "0xCAF6A0")]
		private void set_triangles(int lod)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xCAE7E4", Offset = "0xCAE7E4", VA = "0xCAE7E4")]
		private void get_all_meshes()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xCAFA6C", Offset = "0xCAFA6C", VA = "0xCAFA6C")]
		private void clean_all()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xCAFCAC", Offset = "0xCAFCAC", VA = "0xCAFCAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xCAFCB0", Offset = "0xCAFCB0", VA = "0xCAFCB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xCAFCB4", Offset = "0xCAFCB4", VA = "0xCAFCB4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xCAFCB8", Offset = "0xCAFCB8", VA = "0xCAFCB8")]
		public ProgressiveMeshRuntime()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x2000337")]
	public class CUI_AnimateCurvedFillOnStart : MonoBehaviour
	{
		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x10005AC", Offset = "0x10005AC", VA = "0x10005AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x100079C", Offset = "0x100079C", VA = "0x100079C")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class CUI_CameraController : MonoBehaviour
	{
		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController instance;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x10007A4", Offset = "0x10007A4", VA = "0x10007A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x10007F8", Offset = "0x10007F8", VA = "0x10007F8")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class CUI_ChangeValueOnHold : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x1000810", Offset = "0x1000810", VA = "0x1000810")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x1000894", Offset = "0x1000894", VA = "0x1000894")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x10009FC", Offset = "0x10009FC", VA = "0x10009FC", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x1000A94", Offset = "0x1000A94", VA = "0x1000A94", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x1000B20", Offset = "0x1000B20", VA = "0x1000B20")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class CUI_DragBetweenCanvases : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x1000B28", Offset = "0x1000B28", VA = "0x1000B28", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x1000E60", Offset = "0x1000E60", VA = "0x1000E60", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x1001684", Offset = "0x1001684", VA = "0x1001684", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x1000C70", Offset = "0x1000C70", VA = "0x1000C70")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x10016F0", Offset = "0x10016F0", VA = "0x10016F0")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class CUI_GunController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000566")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B80", Offset = "0xA04B80")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x1001CEC", Offset = "0x1001CEC", VA = "0x1001CEC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0x1001CF4", Offset = "0x1001CF4", VA = "0x1001CF4")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x10016F8", Offset = "0x10016F8", VA = "0x10016F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x1001C80", Offset = "0x1001C80", VA = "0x1001C80")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class CUI_GunMovement : MonoBehaviour
	{
		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastMouse;

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x1001DBC", Offset = "0x1001DBC", VA = "0x1001DBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x1001DE8", Offset = "0x1001DE8", VA = "0x1001DE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x1002070", Offset = "0x1002070", VA = "0x1002070")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class CUI_OrientOnCurvedSpace : MonoBehaviour
	{
		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x1002084", Offset = "0x1002084", VA = "0x1002084")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x10020DC", Offset = "0x10020DC", VA = "0x10020DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x100276C", Offset = "0x100276C", VA = "0x100276C")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class CUI_PerlinNoisePosition : MonoBehaviour
	{
		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x1002774", Offset = "0x1002774", VA = "0x1002774")]
		private void Start()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x10027E8", Offset = "0x10027E8", VA = "0x10027E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x1002940", Offset = "0x1002940", VA = "0x1002940")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class CUI_PerlinNoiseRotation : MonoBehaviour
	{
		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x1002950", Offset = "0x1002950", VA = "0x1002950")]
		private void Start()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x10029C4", Offset = "0x10029C4", VA = "0x10029C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x1002AB8", Offset = "0x1002AB8", VA = "0x1002AB8")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class CUI_PickImageFromSet : MonoBehaviour
	{
		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x1002ACC", Offset = "0x1002ACC", VA = "0x1002ACC")]
		public void PickThis()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1002C90", Offset = "0x1002C90", VA = "0x1002C90")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class CUI_RaycastToCanvas : MonoBehaviour
	{
		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x1002C9C", Offset = "0x1002C9C", VA = "0x1002C9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x1002CF4", Offset = "0x1002CF4", VA = "0x1002CF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1002DF4", Offset = "0x1002DF4", VA = "0x1002DF4")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class CUI_RiseChildrenOverTime : MonoBehaviour
	{
		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1002DFC", Offset = "0x1002DFC", VA = "0x1002DFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1002E00", Offset = "0x1002E00", VA = "0x1002E00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x1002FF8", Offset = "0x1002FF8", VA = "0x1002FF8")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class CUI_TMPChecker : MonoBehaviour
	{
		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x100300C", Offset = "0x100300C", VA = "0x100300C")]
		private void Start()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x1003088", Offset = "0x1003088", VA = "0x1003088")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class CUI_ViveButtonState : MonoBehaviour
	{
		[Token(Token = "0x2000567")]
		private enum ViveButton
		{
			[Token(Token = "0x4001F57")]
			Trigger,
			[Token(Token = "0x4001F58")]
			TouchpadTouch,
			[Token(Token = "0x4001F59")]
			TouchpadPress,
			[Token(Token = "0x4001F5A")]
			Grip,
			[Token(Token = "0x4001F5B")]
			Menu
		}

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1003090", Offset = "0x1003090", VA = "0x1003090")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class CUI_ViveHapticPulse : MonoBehaviour
	{
		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x10030D4", Offset = "0x10030D4", VA = "0x10030D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x10030E0", Offset = "0x10030E0", VA = "0x10030E0")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x1003164", Offset = "0x1003164", VA = "0x1003164")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x1003168", Offset = "0x1003168", VA = "0x1003168")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class CUI_WorldSpaceCursorFollow : MonoBehaviour
	{
		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x1003170", Offset = "0x1003170", VA = "0x1003170")]
		private void Start()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x10033D8", Offset = "0x10033D8", VA = "0x10033D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x10034A8", Offset = "0x10034A8", VA = "0x10034A8")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class CUI_WorldSpaceMouseMultipleCanvases : MonoBehaviour
	{
		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x10034B0", Offset = "0x10034B0", VA = "0x10034B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x10034B4", Offset = "0x10034B4", VA = "0x10034B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1003844", Offset = "0x1003844", VA = "0x1003844")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class CUI_draggable : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x100384C", Offset = "0x100384C", VA = "0x100384C", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1003B8C", Offset = "0x1003B8C", VA = "0x1003B8C", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1003B90", Offset = "0x1003B90", VA = "0x1003B90", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1003C08", Offset = "0x1003C08", VA = "0x1003C08")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x100399C", Offset = "0x100399C", VA = "0x100399C")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x1003CE8", Offset = "0x1003CE8", VA = "0x1003CE8")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class CUI_inventory_paralax : MonoBehaviour
	{
		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x1003CF0", Offset = "0x1003CF0", VA = "0x1003CF0")]
		private void Start()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x1003D40", Offset = "0x1003D40", VA = "0x1003D40")]
		private void Update()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1003F7C", Offset = "0x1003F7C", VA = "0x1003F7C")]
		public CUI_inventory_paralax()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x1003F8C", Offset = "0x1003F8C", VA = "0x1003F8C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1003FEC", Offset = "0x1003FEC", VA = "0x1003FEC", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x1003FF8", Offset = "0x1003FF8", VA = "0x1003FF8")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x6001532")]
		[Address(RVA = "0x1004060", Offset = "0x1004060", VA = "0x1004060")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1002924", Offset = "0x1002924", VA = "0x1002924")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x100412C", Offset = "0x100412C", VA = "0x100412C")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x10041D8", Offset = "0x10041D8", VA = "0x10041D8")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x10041F8", Offset = "0x10041F8", VA = "0x10041F8")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1004150", Offset = "0x1004150", VA = "0x1004150")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1004214", Offset = "0x1004214", VA = "0x1004214")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x100429C", Offset = "0x100429C", VA = "0x100429C")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1004304", Offset = "0x1004304", VA = "0x1004304")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1004370", Offset = "0x1004370", VA = "0x1004370")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x10043E0", Offset = "0x10043E0", VA = "0x10043E0")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1004450", Offset = "0x1004450", VA = "0x1004450")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1001C10", Offset = "0x1001C10", VA = "0x1001C10")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x1001C48", Offset = "0x1001C48", VA = "0x1001C48")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x1001BD8", Offset = "0x1001BD8", VA = "0x1001BD8")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x10044C0", Offset = "0x10044C0", VA = "0x10044C0")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x1004560", Offset = "0x1004560", VA = "0x1004560")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1001318", Offset = "0x1001318", VA = "0x1001318")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x6001544")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001545")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x200034C")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1743C", Offset = "0xA1743C")]
		private bool autoSwitchHands;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private OVRInput.Controller activeCont;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool initialized;

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x1004600", Offset = "0x1004600", VA = "0x1004600")]
		private void Update()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x10048E8", Offset = "0x10048E8", VA = "0x10048E8")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x10049C0", Offset = "0x10049C0", VA = "0x10049C0")]
		private bool IsButtonDownOnController(OVRInput.Controller cont, OVRInput.Controller cont2 = OVRInput.Controller.None)
		{
			return default(bool);
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1004AEC", Offset = "0x1004AEC", VA = "0x1004AEC")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B90", Offset = "0xA04B90")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x170002BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D6E")]
				[Address(RVA = "0x100575C", Offset = "0x100575C", VA = "0x100575C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D70")]
				[Address(RVA = "0x10057C4", Offset = "0x10057C4", VA = "0x10057C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x1005314", Offset = "0x1005314", VA = "0x1005314")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0x1005640", Offset = "0x1005640", VA = "0x1005640", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x1005644", Offset = "0x1005644", VA = "0x1005644", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x1005764", Offset = "0x1005764", VA = "0x1005764", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x17000193")]
		public Color CaretColor
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x10055C8", Offset = "0x10055C8", VA = "0x10055C8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001553")]
			[Address(RVA = "0x10055D4", Offset = "0x10055D4", VA = "0x10055D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public Color SelectionColor
		{
			[Token(Token = "0x6001554")]
			[Address(RVA = "0x10055E0", Offset = "0x10055E0", VA = "0x10055E0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001555")]
			[Address(RVA = "0x10055EC", Offset = "0x10055EC", VA = "0x10055EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x10055F8", Offset = "0x10055F8", VA = "0x10055F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x1005614", Offset = "0x1005614", VA = "0x1005614")]
			set
			{
			}
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x1004AFC", Offset = "0x1004AFC", VA = "0x1004AFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x1004B54", Offset = "0x1004B54", VA = "0x1004B54")]
		private void Update()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x1004E94", Offset = "0x1004E94", VA = "0x1004E94", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x10052DC", Offset = "0x10052DC", VA = "0x10052DC", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x100526C", Offset = "0x100526C", VA = "0x100526C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA21FD4", Offset = "0xA21FD4")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x1004F54", Offset = "0x1004F54", VA = "0x1004F54")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1004B64", Offset = "0x1004B64", VA = "0x1004B64")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1005340", Offset = "0x1005340", VA = "0x1005340")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x1005630", Offset = "0x1005630", VA = "0x1005630")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04BA0", Offset = "0xA04BA0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__4_0;

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0x1005D40", Offset = "0x1005D40", VA = "0x1005D40")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0x1005D48", Offset = "0x1005D48", VA = "0x1005D48")]
			internal bool <Update>b__4_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool CollideWithMyLayerOnly;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x10057CC", Offset = "0x10057CC", VA = "0x10057CC")]
		protected void Update()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x1005CD4", Offset = "0x1005CD4", VA = "0x1005CD4")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x200056A")]
		public enum ControllerType
		{
			[Token(Token = "0x4001F62")]
			NONE = -1,
			[Token(Token = "0x4001F63")]
			VIVE
		}

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject Controller;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x1005E10", Offset = "0x1005E10", VA = "0x1005E10")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04BB0", Offset = "0xA04BB0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__17_0;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__45_0;

			[Token(Token = "0x6001D75")]
			[Address(RVA = "0x100D4C0", Offset = "0x100D4C0", VA = "0x100D4C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D76")]
			[Address(RVA = "0x100D4C8", Offset = "0x100D4C8", VA = "0x100D4C8")]
			internal bool <Update>b__17_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D77")]
			[Address(RVA = "0x100D58C", Offset = "0x100D58C", VA = "0x100D58C")]
			internal int <GetObjectsHitByRay>b__45_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool gazeClickExecuted;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		private bool pointingAtCanvas;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		private bool pointingAtCanvasLastFrame;

		[Token(Token = "0x17000196")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0x1006B74", Offset = "0x1006B74", VA = "0x1006B74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0x100CBC4", Offset = "0x100CBC4", VA = "0x100CBC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x1005E98", Offset = "0x1005E98", VA = "0x1005E98", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x1006188", Offset = "0x1006188", VA = "0x1006188", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x1006694", Offset = "0x1006694", VA = "0x1006694", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x10069C4", Offset = "0x10069C4", VA = "0x10069C4")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x1006BE0", Offset = "0x1006BE0", VA = "0x1006BE0")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x1007138", Offset = "0x1007138", VA = "0x1007138", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x1007EE8", Offset = "0x1007EE8", VA = "0x1007EE8")]
		private LayerMask GetLayerMaskForMyLayer()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x1007F3C", Offset = "0x1007F3C", VA = "0x1007F3C", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x100879C", Offset = "0x100879C", VA = "0x100879C", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x1008EB8", Offset = "0x1008EB8", VA = "0x1008EB8", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x100946C", Offset = "0x100946C", VA = "0x100946C", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x100618C", Offset = "0x100618C", VA = "0x100618C")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x100B59C", Offset = "0x100B59C", VA = "0x100B59C")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x1009F94", Offset = "0x1009F94", VA = "0x1009F94")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x100AC18", Offset = "0x100AC18", VA = "0x100AC18")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x100B64C", Offset = "0x100B64C", VA = "0x100B64C")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x1008658", Offset = "0x1008658", VA = "0x1008658")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x100C1A0", Offset = "0x100C1A0", VA = "0x100C1A0")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x100C270", Offset = "0x100C270", VA = "0x100C270", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x100799C", Offset = "0x100799C", VA = "0x100799C")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x100C288", Offset = "0x100C288", VA = "0x100C288")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x100C890", Offset = "0x100C890", VA = "0x100C890")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x100CA38", Offset = "0x100CA38", VA = "0x100CA38")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x100CBCC", Offset = "0x100CBCC", VA = "0x100CBCC")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x1001B64", Offset = "0x1001B64", VA = "0x1001B64")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x100CC38", Offset = "0x100CC38", VA = "0x100CC38")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x100CD48", Offset = "0x100CD48", VA = "0x100CD48")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x1006C0C", Offset = "0x1006C0C", VA = "0x1006C0C")]
		public void Click()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x100BE3C", Offset = "0x100BE3C", VA = "0x100BE3C")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x100D16C", Offset = "0x100D16C", VA = "0x100D16C")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x100D360", Offset = "0x100D360", VA = "0x100D360")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA03D40", Offset = "0xA03D40")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03D40", Offset = "0xA03D40")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x200056C")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x4001F68")]
			CYLINDER,
			[Token(Token = "0x4001F69")]
			RING,
			[Token(Token = "0x4001F6A")]
			SPHERE,
			[Token(Token = "0x4001F6B")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool raycastMyLayerOnly;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x17000198")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x100D67C", Offset = "0x100D67C", VA = "0x100D67C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x100E73C", Offset = "0x100E73C", VA = "0x100E73C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019A")]
		public int Angle
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x100E744", Offset = "0x100E744", VA = "0x100E744")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x100E74C", Offset = "0x100E74C", VA = "0x100E74C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public float Quality
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x100E760", Offset = "0x100E760", VA = "0x100E760")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x100E768", Offset = "0x100E768", VA = "0x100E768")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x100E784", Offset = "0x100E784", VA = "0x100E784")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x6001596")]
			[Address(RVA = "0x100E78C", Offset = "0x100E78C", VA = "0x100E78C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public int VerticalAngle
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0x100E7AC", Offset = "0x100E7AC", VA = "0x100E7AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001598")]
			[Address(RVA = "0x100E7B4", Offset = "0x100E7B4", VA = "0x100E7B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public float RingFill
		{
			[Token(Token = "0x6001599")]
			[Address(RVA = "0x100E7D4", Offset = "0x100E7D4", VA = "0x100E7D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600159A")]
			[Address(RVA = "0x1000780", Offset = "0x1000780", VA = "0x1000780")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public float SavedRadius
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x100DE84", Offset = "0x100DE84", VA = "0x100DE84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A0")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x600159C")]
			[Address(RVA = "0x100E7DC", Offset = "0x100E7DC", VA = "0x100E7DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600159D")]
			[Address(RVA = "0x100E7E4", Offset = "0x100E7E4", VA = "0x100E7E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x600159E")]
			[Address(RVA = "0x100E804", Offset = "0x100E804", VA = "0x100E804")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x100E80C", Offset = "0x100E80C", VA = "0x100E80C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public bool PreserveAspect
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x100E838", Offset = "0x100E838", VA = "0x100E838")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x100E840", Offset = "0x100E840", VA = "0x100E840")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public bool Interactable
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x100E86C", Offset = "0x100E86C", VA = "0x100E86C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x100E874", Offset = "0x100E874", VA = "0x100E874")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x100E880", Offset = "0x100E880", VA = "0x100E880")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x100E888", Offset = "0x100E888", VA = "0x100E888")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x100E894", Offset = "0x100E894", VA = "0x100E894")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x100E89C", Offset = "0x100E89C", VA = "0x100E89C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x100E984", Offset = "0x100E984", VA = "0x100E984")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x100E98C", Offset = "0x100E98C", VA = "0x100E98C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x100EA54", Offset = "0x100EA54", VA = "0x100EA54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A8")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x100C834", Offset = "0x100C834", VA = "0x100C834")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x100EC04", Offset = "0x100EC04", VA = "0x100EC04")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x100EF5C", Offset = "0x100EF5C", VA = "0x100EF5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x100EFC8", Offset = "0x100EFC8", VA = "0x100EFC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public float GazeClickTimer
		{
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0x100F03C", Offset = "0x100F03C", VA = "0x100F03C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x100F0A8", Offset = "0x100F0A8", VA = "0x100F0A8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x100F1A0", Offset = "0x100F1A0", VA = "0x100F1A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x100F20C", Offset = "0x100F20C", VA = "0x100F20C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x100F304", Offset = "0x100F304", VA = "0x100F304")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x100D5E4", Offset = "0x100D5E4", VA = "0x100D5E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x100D728", Offset = "0x100D728", VA = "0x100D728")]
		private void Start()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x100D8A8", Offset = "0x100D8A8", VA = "0x100D8A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x100D958", Offset = "0x100D958", VA = "0x100D958")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x100DA08", Offset = "0x100DA08", VA = "0x100DA08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x100DB5C", Offset = "0x100DB5C", VA = "0x100DB5C")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x100DD54", Offset = "0x100DD54", VA = "0x100DD54")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x100DEB4", Offset = "0x100DEB4", VA = "0x100DEB4")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x100DFE4", Offset = "0x100DFE4", VA = "0x100DFE4")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x100E11C", Offset = "0x100E11C", VA = "0x100E11C")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x100E304", Offset = "0x100E304", VA = "0x100E304")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x100E508", Offset = "0x100E508", VA = "0x100E508")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x10022CC", Offset = "0x10022CC", VA = "0x10022CC")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x10023EC", Offset = "0x10023EC", VA = "0x10023EC")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x10014D4", Offset = "0x10014D4", VA = "0x10014D4")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x100600C", Offset = "0x100600C", VA = "0x100600C")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x100BC08", Offset = "0x100BC08", VA = "0x100BC08")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x100E638", Offset = "0x100E638", VA = "0x100E638")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x100E998", Offset = "0x100E998", VA = "0x100E998")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x100EB48", Offset = "0x100EB48", VA = "0x100EB48")]
		public void Click()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x1005BF0", Offset = "0x1005BF0", VA = "0x1005BF0")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x100ED04", Offset = "0x100ED04", VA = "0x100ED04")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x100EE4C", Offset = "0x100EE4C", VA = "0x100EE4C")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x100F370", Offset = "0x100F370", VA = "0x100F370")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17598", Offset = "0xA17598")]
		public bool DoNotTesselate;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_tesselationRequired;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool curvingRequired;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool TransformMisaligned;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private UIVertex m_ret;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float[] m_weights;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA175D0", Offset = "0xA175D0")]
		private Vector3 savedPos;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17608", Offset = "0xA17608")]
		private Vector3 savedUp;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17640", Offset = "0xA17640")]
		private Vector2 savedRectSize;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17678", Offset = "0xA17678")]
		private Color savedColor;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA176B0", Offset = "0xA176B0")]
		private Vector2 savedTextUV0;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA176E8", Offset = "0xA176E8")]
		private float savedFill;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private Vector2 _uv0;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private Vector2 _uv1;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector3 _pos;

		[Token(Token = "0x170001AD")]
		private bool tesselationRequired
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x100F3D0", Offset = "0x100F3D0", VA = "0x100F3D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x100F3D8", Offset = "0x100F3D8", VA = "0x100F3D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public bool TesselationRequired
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x1011EC0", Offset = "0x1011EC0", VA = "0x1011EC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x1000A88", Offset = "0x1000A88", VA = "0x1000A88")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public bool CurvingRequired
		{
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0x1011EC8", Offset = "0x1011EC8", VA = "0x1011EC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x1011ED0", Offset = "0x1011ED0", VA = "0x1011ED0")]
			set
			{
			}
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x100F3E4", Offset = "0x100F3E4", VA = "0x100F3E4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x100F460", Offset = "0x100F460", VA = "0x100F460", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x100F604", Offset = "0x100F604", VA = "0x100F604", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x100FB84", Offset = "0x100FB84", VA = "0x100FB84", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x100FD04", Offset = "0x100FD04", VA = "0x100FD04")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x100FD10", Offset = "0x100FD10", VA = "0x100FD10")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x100FDB4", Offset = "0x100FDB4", VA = "0x100FDB4")]
		private void Update()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x101030C", Offset = "0x101030C", VA = "0x101030C", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x1010A28", Offset = "0x1010A28", VA = "0x1010A28")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x10013D8", Offset = "0x10013D8", VA = "0x10013D8")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x1010E74", Offset = "0x1010E74", VA = "0x1010E74")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x1010CCC", Offset = "0x1010CCC", VA = "0x1010CCC")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x1011498", Offset = "0x1011498", VA = "0x1011498")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x1011238", Offset = "0x1011238", VA = "0x1011238")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x1011B34", Offset = "0x1011B34", VA = "0x1011B34")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x100DD48", Offset = "0x100DD48", VA = "0x100DD48")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x1011EDC", Offset = "0x1011EDC", VA = "0x1011EDC")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x1011FBC", Offset = "0x1011FBC", VA = "0x1011FBC")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x2000355")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x2000356")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03DC8", Offset = "0xA03DC8")]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x100F3B8", Offset = "0x100F3B8", VA = "0x100F3B8")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour
	{
		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x100F3C0", Offset = "0x100F3C0", VA = "0x100F3C0")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0xA03DD8", Offset = "0xA03DD8")]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x100F3C8", Offset = "0x100F3C8", VA = "0x100F3C8")]
		public CurvedUITMPSubmesh()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x200035A")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4001614")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x4001618")]
		private const string display = "{0} FPS";

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_uiText;

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xE730CC", Offset = "0xE730CC", VA = "0xE730CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xE731A8", Offset = "0xE731A8", VA = "0xE731A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xE7328C", Offset = "0xE7328C", VA = "0xE7328C")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03DE8", Offset = "0xA03DE8")]
	public class FPSCounterVR : MonoBehaviour
	{
		[Token(Token = "0x400161A")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x400161E")]
		private const string display = "{0} FPS";

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_Text;

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xE73294", Offset = "0xE73294", VA = "0xE73294")]
		private void Start()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xE73300", Offset = "0xE73300", VA = "0xE73300")]
		private void Update()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xE733E4", Offset = "0xE733E4", VA = "0xE733E4")]
		public FPSCounterVR()
		{
		}
	}
}
namespace MLSpace
{
	[Token(Token = "0x200035C")]
	public class CameraScript : MonoBehaviour
	{
		[Token(Token = "0x200056D")]
		private enum Move
		{
			[Token(Token = "0x4001F6D")]
			None,
			[Token(Token = "0x4001F6E")]
			Forward,
			[Token(Token = "0x4001F6F")]
			Backward,
			[Token(Token = "0x4001F70")]
			Left,
			[Token(Token = "0x4001F71")]
			Right
		}

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17720", Offset = "0xA17720")]
		public float speed;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17758", Offset = "0xA17758")]
		public float angularSpeed;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_totalXAngleDeg;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_totalYAngleDeg;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Move m_move;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xCAD6D8", Offset = "0xCAD6D8", VA = "0xCAD6D8")]
		public void OnBtnForwDown()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xCAD6E4", Offset = "0xCAD6E4", VA = "0xCAD6E4")]
		public void OnBtnBackDown()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xCAD6F0", Offset = "0xCAD6F0", VA = "0xCAD6F0")]
		public void OnBtnRightDown()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xCAD6FC", Offset = "0xCAD6FC", VA = "0xCAD6FC")]
		public void OnBtnLeftDown()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xCAD708", Offset = "0xCAD708", VA = "0xCAD708")]
		public void BtnStop()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xCAD710", Offset = "0xCAD710", VA = "0xCAD710")]
		private void Start()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xCAD7F8", Offset = "0xCAD7F8", VA = "0xCAD7F8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xCADAD4", Offset = "0xCADAD4", VA = "0xCADAD4")]
		public CameraScript()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class GameControl : MonoBehaviour
	{
		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject onMobileOnly;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text infoUI;

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xCADAE8", Offset = "0xCADAE8", VA = "0xCADAE8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xCADAEC", Offset = "0xCADAEC", VA = "0xCADAEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xCADB18", Offset = "0xCADB18", VA = "0xCADB18")]
		private void info()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xCADBBC", Offset = "0xCADBBC", VA = "0xCADBBC")]
		public GameControl()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class RotateLight : MonoBehaviour
	{
		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17790", Offset = "0xA17790")]
		public GameObject[] m_NightLights;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA177C8", Offset = "0xA177C8")]
		public float rotateSpeed;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17800", Offset = "0xA17800")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA17800", Offset = "0xA17800")]
		public int timeToLightsOn;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17854", Offset = "0xA17854")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA17854", Offset = "0xA17854")]
		public float timeToLightsOff;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Light m_SunLight;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_rotation;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_NightLightsEnabled;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool m_afternoon;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool m_initialized;

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xCADBC4", Offset = "0xCADBC4", VA = "0xCADBC4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xCADD2C", Offset = "0xCADD2C", VA = "0xCADD2C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xCADD30", Offset = "0xCADD30", VA = "0xCADD30")]
		private void Update()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xCAE018", Offset = "0xCAE018", VA = "0xCAE018")]
		private void EnableNightLights()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xCAE208", Offset = "0xCAE208", VA = "0xCAE208")]
		private void DisableNightLights()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xCADFEC", Offset = "0xCADFEC", VA = "0xCADFEC")]
		private float wrapAngle360(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xCAE3F4", Offset = "0xCAE3F4", VA = "0xCAE3F4")]
		public RotateLight()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class ToggleText : MonoBehaviour
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text m_textUI;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_showInstr;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool m_initialized;

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xCAE410", Offset = "0xCAE410", VA = "0xCAE410")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xCAE4E8", Offset = "0xCAE4E8", VA = "0xCAE4E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xCAE4EC", Offset = "0xCAE4EC", VA = "0xCAE4EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xCAE5A0", Offset = "0xCAE5A0", VA = "0xCAE5A0")]
		private void ShowInstr()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xCAE674", Offset = "0xCAE674", VA = "0xCAE674")]
		private void ShowF1()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xCAE748", Offset = "0xCAE748", VA = "0xCAE748")]
		public ToggleText()
		{
		}
	}
}
namespace Pegasus
{
	[Token(Token = "0x2000360")]
	public static class PegasusConstants
	{
		[Token(Token = "0x200056E")]
		public enum FlythroughType
		{
			[Token(Token = "0x4001F73")]
			SingleShot,
			[Token(Token = "0x4001F74")]
			Looped
		}

		[Token(Token = "0x200056F")]
		public enum FlythroughEndAction
		{
			[Token(Token = "0x4001F76")]
			StopFlythrough,
			[Token(Token = "0x4001F77")]
			QuitApplication,
			[Token(Token = "0x4001F78")]
			PlayNextPegasus
		}

		[Token(Token = "0x2000570")]
		public enum FlythroughState
		{
			[Token(Token = "0x4001F7A")]
			Stopped,
			[Token(Token = "0x4001F7B")]
			Initialising,
			[Token(Token = "0x4001F7C")]
			Started,
			[Token(Token = "0x4001F7D")]
			Paused
		}

		[Token(Token = "0x2000571")]
		public enum HeightCheckType
		{
			[Token(Token = "0x4001F7F")]
			Collision,
			[Token(Token = "0x4001F80")]
			Terrain,
			[Token(Token = "0x4001F81")]
			None
		}

		[Token(Token = "0x2000572")]
		public enum PoiHeightCheckType
		{
			[Token(Token = "0x4001F83")]
			ManagerSettings,
			[Token(Token = "0x4001F84")]
			Collision,
			[Token(Token = "0x4001F85")]
			Terrain,
			[Token(Token = "0x4001F86")]
			None
		}

		[Token(Token = "0x2000573")]
		public enum PoiType
		{
			[Token(Token = "0x4001F88")]
			Manual,
			[Token(Token = "0x4001F89")]
			AutoGenerated
		}

		[Token(Token = "0x2000574")]
		public enum LookatType
		{
			[Token(Token = "0x4001F8B")]
			Path,
			[Token(Token = "0x4001F8C")]
			Target
		}

		[Token(Token = "0x2000575")]
		public enum SpeedType
		{
			[Token(Token = "0x4001F8E")]
			ReallySlow,
			[Token(Token = "0x4001F8F")]
			Slow,
			[Token(Token = "0x4001F90")]
			Medium,
			[Token(Token = "0x4001F91")]
			Fast,
			[Token(Token = "0x4001F92")]
			ReallyFast,
			[Token(Token = "0x4001F93")]
			Stratospheric,
			[Token(Token = "0x4001F94")]
			Custom
		}

		[Token(Token = "0x2000576")]
		public enum EasingType
		{
			[Token(Token = "0x4001F96")]
			Linear,
			[Token(Token = "0x4001F97")]
			EaseIn,
			[Token(Token = "0x4001F98")]
			EaseOut,
			[Token(Token = "0x4001F99")]
			EaseInOut
		}

		[Token(Token = "0x2000577")]
		public enum TargetFrameRate
		{
			[Token(Token = "0x4001F9B")]
			NineFps,
			[Token(Token = "0x4001F9C")]
			FifteenFps,
			[Token(Token = "0x4001F9D")]
			TwentyFourFps,
			[Token(Token = "0x4001F9E")]
			TwentyFiveFps,
			[Token(Token = "0x4001F9F")]
			ThirtyFps,
			[Token(Token = "0x4001FA0")]
			SixtyFps,
			[Token(Token = "0x4001FA1")]
			NinetyFps,
			[Token(Token = "0x4001FA2")]
			MaxFps
		}

		[Token(Token = "0x2000578")]
		public enum PoiPegasusTriggerAction
		{
			[Token(Token = "0x4001FA4")]
			PlayPegasus,
			[Token(Token = "0x4001FA5")]
			PausePegasus,
			[Token(Token = "0x4001FA6")]
			ResumePegasus,
			[Token(Token = "0x4001FA7")]
			StopPegasus,
			[Token(Token = "0x4001FA8")]
			DoNothing
		}

		[Token(Token = "0x2000579")]
		public enum PoiHeliosTriggerAction
		{
			[Token(Token = "0x4001FAA")]
			FadeIn,
			[Token(Token = "0x4001FAB")]
			FadeOut,
			[Token(Token = "0x4001FAC")]
			DoNothing
		}

		[Token(Token = "0x200057A")]
		public enum PoiRotateTowardsTriggerAction
		{
			[Token(Token = "0x4001FAE")]
			Rotate,
			[Token(Token = "0x4001FAF")]
			DoNothing
		}

		[Token(Token = "0x200057B")]
		public enum PoiAnimationTriggerAction
		{
			[Token(Token = "0x4001FB1")]
			PlayAnimation,
			[Token(Token = "0x4001FB2")]
			StopAnimation,
			[Token(Token = "0x4001FB3")]
			DoNothing
		}

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MajorVersion;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string MinorVersion;

		[Token(Token = "0x4001635")]
		public const float FlybyOffsetDefaultHeight = 1.8f;

		[Token(Token = "0x4001636")]
		public const float FlybyOffsetLow = 5f;

		[Token(Token = "0x4001637")]
		public const float FlybyOffsetHigh = 40f;

		[Token(Token = "0x4001638")]
		public const float SpeedReallySlow = 0.01f;

		[Token(Token = "0x4001639")]
		public const float SpeedSlow = 1.4f;

		[Token(Token = "0x400163A")]
		public const float SpeedMedium = 8f;

		[Token(Token = "0x400163B")]
		public const float SpeedFast = 25f;

		[Token(Token = "0x400163C")]
		public const float SpeedReallyFast = 70f;

		[Token(Token = "0x400163D")]
		public const float SpeedStratospheric = 250f;
	}
	[Token(Token = "0x2000361")]
	public class PegasusDefaults : ScriptableObject
	{
		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA178A8", Offset = "0xA178A8")]
		public KeyCode m_keyPrevPoi;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode m_keyNextPoi;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA178E0", Offset = "0xA178E0")]
		public KeyCode m_keyUp;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode m_keyDown;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode m_keyLeft;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode m_keyRight;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode m_keyForward;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode m_keyBackward;

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xE5B8DC", Offset = "0xE5B8DC", VA = "0xE5B8DC")]
		public PegasusDefaults()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class PegasusManager : MonoBehaviour
	{
		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_target;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PegasusConstants.FlythroughType m_flythroughType;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PegasusConstants.FlythroughEndAction m_flythroughEndAction;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PegasusConstants.TargetFrameRate m_targetFramerateType;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PegasusConstants.HeightCheckType m_heightCheckType;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_autoStartAtRuntime;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<PegasusPoi> m_poiList;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_minHeightAboveTerrain;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool m_displayDebug;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool m_alwaysShowGizmos;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PegasusConstants.FlythroughState m_currentState;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int m_currentSegmentIdx;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PegasusPoi m_currentSegment;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_currentSegmentDistanceTravelled;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_totalDistanceTravelled;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_totalDistanceTravelledPct;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_totalDistance;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TimeSpan m_totalDuration;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float m_currentVelocity;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 m_currentPosition;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Quaternion m_currentRotation;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool m_canUpdateNow;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public DateTime m_lastUpdateTime;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_frameUpdateTime;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_frameUpdateDistance;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_rotationDamping;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float m_positionDamping;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public PegasusManager m_nextPegasus;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool m_alwaysShowPath;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool m_showScrubber;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		public bool m_showPOIHelpers;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_poiGizmoSize;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool m_showAdvanced;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float m_collisionHeightOffset;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public PegasusDefaults m_defaults;

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xE5B8FC", Offset = "0xE5B8FC", VA = "0xE5B8FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xE5BBC0", Offset = "0xE5BBC0", VA = "0xE5BBC0")]
		public void InitialiseFlythrough()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xE5C24C", Offset = "0xE5C24C", VA = "0xE5C24C")]
		private void RestartFlythrough()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xE5C33C", Offset = "0xE5C33C", VA = "0xE5C33C")]
		public void UpdateFlythroughMetaData()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xE5C4AC", Offset = "0xE5C4AC", VA = "0xE5C4AC")]
		public void UpdateSegmentWithDependencies(PegasusPoi segment)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xE5C620", Offset = "0xE5C620", VA = "0xE5C620")]
		private void SafeInitialise(int idx, bool wrap, bool updateSegments)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xE5C0AC", Offset = "0xE5C0AC", VA = "0xE5C0AC")]
		public void StartFlythrough(bool fullInitialise = false)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xE5C6FC", Offset = "0xE5C6FC", VA = "0xE5C6FC")]
		public void ResumeFlythrough()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xE5C7C8", Offset = "0xE5C7C8", VA = "0xE5C7C8")]
		public void PauseFlythrough()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xE5C84C", Offset = "0xE5C84C", VA = "0xE5C84C")]
		public void StopFlythrough()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xE5BAB8", Offset = "0xE5BAB8", VA = "0xE5BAB8")]
		public void ChangeFramerate(PegasusConstants.TargetFrameRate newRate)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xE5C8D0", Offset = "0xE5C8D0", VA = "0xE5C8D0")]
		public void SelectPoi(PegasusPoi poi)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xE5C9AC", Offset = "0xE5C9AC", VA = "0xE5C9AC")]
		public void MovePoi(PegasusPoi poi, Vector3 movement)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xE5CCD8", Offset = "0xE5CCD8", VA = "0xE5CCD8")]
		public void MovePoiLookat(PegasusPoi poi, Vector3 movement)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xE5D008", Offset = "0xE5D008", VA = "0xE5D008")]
		public void MoveTargetNow()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xE5D018", Offset = "0xE5D018", VA = "0xE5D018")]
		public void MoveTargetTo(float percent)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xE5D214", Offset = "0xE5D214", VA = "0xE5D214")]
		public void MoveTargetToPoi(PegasusPoi targetPoi)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xE5D434", Offset = "0xE5D434", VA = "0xE5D434")]
		public void StepTargetBackward(float distMeters)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xE5D454", Offset = "0xE5D454", VA = "0xE5D454")]
		public void StepTargetForward(float distMeters)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xE5D474", Offset = "0xE5D474", VA = "0xE5D474")]
		public void CreateDebugObjects()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xE5D808", Offset = "0xE5D808", VA = "0xE5D808")]
		public void DeleteDebugObjects()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xE5CAF4", Offset = "0xE5CAF4", VA = "0xE5CAF4")]
		public Vector3 GetValidatedPoiPosition(Vector3 source, PegasusConstants.PoiHeightCheckType heightCheckOverride = PegasusConstants.PoiHeightCheckType.ManagerSettings)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xE5DB74", Offset = "0xE5DB74", VA = "0xE5DB74")]
		public Vector3 GetLowestPoiPosition(Vector3 source, PegasusConstants.PoiHeightCheckType heightCheckOverride = PegasusConstants.PoiHeightCheckType.ManagerSettings)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xE5CE38", Offset = "0xE5CE38", VA = "0xE5CE38")]
		public Vector3 GetValidatedLookatPosition(Vector3 source, PegasusConstants.PoiHeightCheckType heightCheckOverride = PegasusConstants.PoiHeightCheckType.ManagerSettings)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xE5DD30", Offset = "0xE5DD30", VA = "0xE5DD30")]
		public Vector3 GetLowestLookatPosition(Vector3 source, PegasusConstants.PoiHeightCheckType heightCheckOverride = PegasusConstants.PoiHeightCheckType.ManagerSettings)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xE5DEE4", Offset = "0xE5DEE4", VA = "0xE5DEE4")]
		public float GetValidatedLookatHeightRelativeToMinimum(Vector3 source, PegasusConstants.PoiHeightCheckType heightCheckOverride = PegasusConstants.PoiHeightCheckType.ManagerSettings)
		{
			return default(float);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xE5D920", Offset = "0xE5D920", VA = "0xE5D920")]
		public Terrain GetTerrain(Vector3 location)
		{
			return null;
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xE5DF08", Offset = "0xE5DF08", VA = "0xE5DF08")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xE5E1A4", Offset = "0xE5E1A4", VA = "0xE5E1A4")]
		private void CalculateFlythroughUpdates()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xE5E4A8", Offset = "0xE5E4A8", VA = "0xE5E4A8")]
		public void AddPOI(Vector3 targetLocation, Vector3 lookatLocation)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xE5E62C", Offset = "0xE5E62C", VA = "0xE5E62C")]
		public PegasusPoi AddPoiAfter(PegasusPoi currentPoi)
		{
			return null;
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xE5E810", Offset = "0xE5E810", VA = "0xE5E810")]
		public PegasusPoi AddPoiBefore(PegasusPoi currentPoi)
		{
			return null;
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xE5E938", Offset = "0xE5E938", VA = "0xE5E938")]
		public PegasusPoi GetFirstPOI()
		{
			return null;
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xE5E9A0", Offset = "0xE5E9A0", VA = "0xE5E9A0")]
		public PegasusPoi GetPOI(int poiIndex)
		{
			return null;
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xE5E83C", Offset = "0xE5E83C", VA = "0xE5E83C")]
		public PegasusPoi GetPrevPOI(PegasusPoi currentPoi, bool wrap = true)
		{
			return null;
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xE5EA2C", Offset = "0xE5EA2C", VA = "0xE5EA2C")]
		public PegasusPoi GetNextPOI(PegasusPoi currentPoi, bool wrap = true)
		{
			return null;
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xE5EB1C", Offset = "0xE5EB1C", VA = "0xE5EB1C")]
		public void SetPoiToMinHeight()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xE5EC04", Offset = "0xE5EC04", VA = "0xE5EC04")]
		public PegasusManager()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class PegasusPoi : MonoBehaviour
	{
		[Token(Token = "0x200057C")]
		private delegate float Easing(float time, float duration = 1f);

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17918", Offset = "0xA17918")]
		public PegasusConstants.PoiType m_poiType;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17950", Offset = "0xA17950")]
		public PegasusConstants.PoiHeightCheckType m_heightCheckType;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17988", Offset = "0xA17988")]
		public PegasusConstants.LookatType m_lookatType;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA179C0", Offset = "0xA179C0")]
		public float m_lookAtAngle;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA179F8", Offset = "0xA179F8")]
		public float m_lookAtDistance;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17A30", Offset = "0xA17A30")]
		public float m_lookAtHeight;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17A68", Offset = "0xA17A68")]
		public Vector3 m_lookatLocation;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17AA0", Offset = "0xA17AA0")]
		public PegasusConstants.SpeedType m_startSpeedType;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17AD8", Offset = "0xA17AD8")]
		public float m_startSpeed;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17B10", Offset = "0xA17B10")]
		public PegasusConstants.EasingType m_rotationEasingType;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17B20", Offset = "0xA17B20")]
		public PegasusConstants.EasingType m_velocityEasingType;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17B30", Offset = "0xA17B30")]
		public PegasusConstants.EasingType m_positionEasingType;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17B40", Offset = "0xA17B40")]
		public PegasusManager m_manager;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17B50", Offset = "0xA17B50")]
		public bool m_alwaysShowGizmos;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17B60", Offset = "0xA17B60")]
		public float m_segmentDistance;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17B70", Offset = "0xA17B70")]
		public TimeSpan m_segmentStartTime;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17B80", Offset = "0xA17B80")]
		public TimeSpan m_segmentDuration;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17B90", Offset = "0xA17B90")]
		public int m_segmentIndex;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17BA0", Offset = "0xA17BA0")]
		public bool m_isFirstPOI;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17BB0", Offset = "0xA17BB0")]
		public bool m_isLastPOI;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17BC0", Offset = "0xA17BC0")]
		public PegasusPoi m_prevPoi;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17BD0", Offset = "0xA17BD0")]
		public PegasusPoi m_nextPoi;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17BE0", Offset = "0xA17BE0")]
		public List<Vector3> m_poiSteps;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17BF0", Offset = "0xA17BF0")]
		public bool m_isSelected;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA17C00", Offset = "0xA17C00")]
		public List<TriggerBase> m_poiTriggers;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Easing m_velocityEasingCalculator;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Easing m_positionEasingCalculator;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Easing m_rotationEasingCalculator;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Quaternion m_rotationStart;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Quaternion m_rotationEnd;

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xEEDEFC", Offset = "0xEEDEFC", VA = "0xEEDEFC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xEEE420", Offset = "0xEEE420", VA = "0xEEE420")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xEEDF04", Offset = "0xEEDF04", VA = "0xEEDF04")]
		private void DrawGizmos(bool isSelected)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xEEE788", Offset = "0xEEE788", VA = "0xEEE788")]
		public bool IsSameObject(PegasusPoi poi)
		{
			return default(bool);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xEEE83C", Offset = "0xEEE83C", VA = "0xEEE83C")]
		public void Initialise(bool updateSegments = true)
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xEEF760", Offset = "0xEEF760", VA = "0xEEF760")]
		public void OnStartTriggers()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xEEF800", Offset = "0xEEF800", VA = "0xEEF800")]
		public void OnUpdateTriggers(float progress)
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xEEF8B0", Offset = "0xEEF8B0", VA = "0xEEF8B0")]
		public void OnEndTriggers()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xEEF950", Offset = "0xEEF950", VA = "0xEEF950")]
		public float GetStartSpeed(PegasusConstants.SpeedType speedType)
		{
			return default(float);
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xEEF0CC", Offset = "0xEEF0CC", VA = "0xEEF0CC")]
		public void UpdateSegment()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xEEFA00", Offset = "0xEEFA00", VA = "0xEEFA00")]
		public void UpdateSegmentDuration()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xEEFB9C", Offset = "0xEEFB9C", VA = "0xEEFB9C")]
		public void CalculateProgress(float percent, out float velocity, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xEEE428", Offset = "0xEEE428", VA = "0xEEE428")]
		public Vector3 CalculatePositionSpline(float percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xEEE5E4", Offset = "0xEEE5E4", VA = "0xEEE5E4")]
		public Vector3 CalculatePositionLinear(float percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xEEE534", Offset = "0xEEE534", VA = "0xEEE534")]
		public float CalculateVelocity(float percent)
		{
			return default(float);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xEEFC08", Offset = "0xEEFC08", VA = "0xEEFC08")]
		public Quaternion CalculateRotation(float percent)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xEEEEB4", Offset = "0xEEEEB4", VA = "0xEEEEB4")]
		public void GetRelativeOffsets(Vector3 source, Vector3 target, out float targetDistance, out float targetHeight, out float targetAngle)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xEEF970", Offset = "0xEEF970", VA = "0xEEF970")]
		public static bool ApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xEF0034", Offset = "0xEF0034", VA = "0xEF0034")]
		public static Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xEF0158", Offset = "0xEF0158", VA = "0xEF0158")]
		private static float EaseLinear(float time, float duration = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xEF0160", Offset = "0xEF0160", VA = "0xEF0160")]
		private static float EaseIn(float time, float duration = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xEF016C", Offset = "0xEF016C", VA = "0xEF016C")]
		private static float EaseOut(float time, float duration = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xEF0180", Offset = "0xEF0180", VA = "0xEF0180")]
		private static float EaseInOut(float time, float duration = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xEEFCF0", Offset = "0xEEFCF0", VA = "0xEEFCF0")]
		public static Vector3 CatmullRom(Vector3 value1, Vector3 value2, Vector3 value3, Vector3 value4, float amount)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xEF0250", Offset = "0xEF0250", VA = "0xEF0250")]
		public static void CatmullRom(ref Vector3 value1, ref Vector3 value2, ref Vector3 value3, ref Vector3 value4, float amount, out Vector3 result)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xEF01C4", Offset = "0xEF01C4", VA = "0xEF01C4")]
		public static float CalcCatmullRom(float value1, float value2, float value3, float value4, float amount)
		{
			return default(float);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xEF02F0", Offset = "0xEF02F0", VA = "0xEF02F0")]
		public static Vector3 Hermite(Vector3 value1, Vector3 tangent1, Vector3 value2, Vector3 tangent2, float amount)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xEF043C", Offset = "0xEF043C", VA = "0xEF043C")]
		public static void Hermite(ref Vector3 value1, ref Vector3 tangent1, ref Vector3 value2, ref Vector3 tangent2, float amount, out Vector3 result)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xEF03B4", Offset = "0xEF03B4", VA = "0xEF03B4")]
		public static float CalcHermite(float value1, float tangent1, float value2, float tangent2, float amount)
		{
			return default(float);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xEF04DC", Offset = "0xEF04DC", VA = "0xEF04DC")]
		public PegasusPoi()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class TriggerBase : MonoBehaviour
	{
		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_triggerAtStart;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_triggerOnUpdate;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_triggerAtEnd;

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xEF077C", Offset = "0xEF077C", VA = "0xEF077C", Slot = "4")]
		public virtual void OnStart(PegasusPoi poi)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xEF0894", Offset = "0xEF0894", VA = "0xEF0894", Slot = "5")]
		public virtual void OnUpdate(PegasusPoi poi, float progress)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xEF09D4", Offset = "0xEF09D4", VA = "0xEF09D4", Slot = "6")]
		public virtual void OnEnd(PegasusPoi poi)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xEF0AEC", Offset = "0xEF0AEC", VA = "0xEF0AEC")]
		public TriggerBase()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class TriggerControlAnimation : TriggerBase
	{
		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation m_targetAnimation;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PegasusConstants.PoiAnimationTriggerAction m_actionOnStart;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PegasusConstants.PoiAnimationTriggerAction m_actionOnEnd;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_startAnimationIdx;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int m_endAnimation;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<AnimationState> m_animations;

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xEF0B00", Offset = "0xEF0B00", VA = "0xEF0B00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xEF0D84", Offset = "0xEF0D84", VA = "0xEF0D84", Slot = "4")]
		public override void OnStart(PegasusPoi poi)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xEF0F48", Offset = "0xEF0F48", VA = "0xEF0F48", Slot = "6")]
		public override void OnEnd(PegasusPoi poi)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xEF110C", Offset = "0xEF110C", VA = "0xEF110C")]
		public TriggerControlAnimation()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class TriggerControlPegasus : TriggerBase
	{
		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PegasusConstants.PoiPegasusTriggerAction m_actionOnStart;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PegasusConstants.PoiPegasusTriggerAction m_actionOnEnd;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PegasusManager m_pegasus;

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xEF1190", Offset = "0xEF1190", VA = "0xEF1190", Slot = "4")]
		public override void OnStart(PegasusPoi poi)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xEF15F8", Offset = "0xEF15F8", VA = "0xEF15F8", Slot = "6")]
		public override void OnEnd(PegasusPoi poi)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xEF1A60", Offset = "0xEF1A60", VA = "0xEF1A60")]
		public TriggerControlPegasus()
		{
		}
	}
}
namespace nightowl.HoloShaderPack
{
	[Token(Token = "0x2000367")]
	public class CodeExample1 : MonoBehaviour
	{
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture Texture;

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x210F77C", Offset = "0x210F77C", VA = "0x210F77C")]
		private void Update()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x210F80C", Offset = "0x210F80C", VA = "0x210F80C")]
		public CodeExample1()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class CodeExample10 : MonoBehaviour
	{
		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float switchDelay;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float currentTime;

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x210F814", Offset = "0x210F814", VA = "0x210F814")]
		private void Update()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x210F8F8", Offset = "0x210F8F8", VA = "0x210F8F8")]
		public CodeExample10()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class CodeExample12 : MonoBehaviour
	{
		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x210F908", Offset = "0x210F908", VA = "0x210F908")]
		private void Update()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x210FAD8", Offset = "0x210FAD8", VA = "0x210FAD8")]
		public CodeExample12()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public class CodeExample13 : MonoBehaviour
	{
		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color TargetColor;

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x210FAE0", Offset = "0x210FAE0", VA = "0x210FAE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x210FC68", Offset = "0x210FC68", VA = "0x210FC68")]
		public CodeExample13()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class CodeExample14 : MonoBehaviour
	{
		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x210FC70", Offset = "0x210FC70", VA = "0x210FC70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x210FD60", Offset = "0x210FD60", VA = "0x210FD60")]
		public CodeExample14()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class CodeExample15 : MonoBehaviour
	{
		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x210FD68", Offset = "0x210FD68", VA = "0x210FD68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x210FE60", Offset = "0x210FE60", VA = "0x210FE60")]
		public CodeExample15()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class CodeExample16 : MonoBehaviour
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x210FE68", Offset = "0x210FE68", VA = "0x210FE68")]
		private void Update()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x2110038", Offset = "0x2110038", VA = "0x2110038")]
		public CodeExample16()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class CodeExample17 : MonoBehaviour
	{
		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x2110040", Offset = "0x2110040", VA = "0x2110040")]
		private void Update()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x211011C", Offset = "0x211011C", VA = "0x211011C")]
		public CodeExample17()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class CodeExample18 : MonoBehaviour
	{
		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x2110124", Offset = "0x2110124", VA = "0x2110124")]
		private void Update()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x21101CC", Offset = "0x21101CC", VA = "0x21101CC")]
		public CodeExample18()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class CodeExample19 : MonoBehaviour
	{
		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x21101D4", Offset = "0x21101D4", VA = "0x21101D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x2110278", Offset = "0x2110278", VA = "0x2110278")]
		public CodeExample19()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class CodeExample2 : MonoBehaviour
	{
		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color TargetColor;

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x2110280", Offset = "0x2110280", VA = "0x2110280")]
		private void Update()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x2110384", Offset = "0x2110384", VA = "0x2110384")]
		public CodeExample2()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class CodeExample3 : MonoBehaviour
	{
		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TargetStrength;

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x211038C", Offset = "0x211038C", VA = "0x211038C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x2110400", Offset = "0x2110400", VA = "0x2110400")]
		public CodeExample3()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class CodeExample4 : MonoBehaviour
	{
		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TargetStrength;

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x2110408", Offset = "0x2110408", VA = "0x2110408")]
		private void Update()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x2110608", Offset = "0x2110608", VA = "0x2110608")]
		public CodeExample4()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class CodeExample5 : MonoBehaviour
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TargetStrength;

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x2110610", Offset = "0x2110610", VA = "0x2110610")]
		private void Update()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x211072C", Offset = "0x211072C", VA = "0x211072C")]
		public CodeExample5()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class CodeExample6 : MonoBehaviour
	{
		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x2110734", Offset = "0x2110734", VA = "0x2110734")]
		private void Update()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x2110904", Offset = "0x2110904", VA = "0x2110904")]
		public CodeExample6()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class CodeExample7 : MonoBehaviour
	{
		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color TargetColor;

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x211090C", Offset = "0x211090C", VA = "0x211090C")]
		private void Update()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x2110A10", Offset = "0x2110A10", VA = "0x2110A10")]
		public CodeExample7()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class CodeExample8 : MonoBehaviour
	{
		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TargetStrength;

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x2110A18", Offset = "0x2110A18", VA = "0x2110A18")]
		private void Update()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x2110AF0", Offset = "0x2110AF0", VA = "0x2110AF0")]
		public CodeExample8()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class CodeExample9 : MonoBehaviour
	{
		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x2110AF8", Offset = "0x2110AF8", VA = "0x2110AF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x2110C04", Offset = "0x2110C04", VA = "0x2110C04")]
		public CodeExample9()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class CodeExampleHelper : MonoBehaviour
	{
		[Token(Token = "0x170001B0")]
		public static float NormalizedTime
		{
			[Token(Token = "0x6001671")]
			[Address(RVA = "0x210FBE4", Offset = "0x210FBE4", VA = "0x210FBE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x2110C0C", Offset = "0x2110C0C", VA = "0x2110C0C")]
		public CodeExampleHelper()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class DissolveFlicker : MonoBehaviour
	{
		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MinStrength;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MaxStrength;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxStep;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float TickDelay;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x2110C14", Offset = "0x2110C14", VA = "0x2110C14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x2110C74", Offset = "0x2110C74", VA = "0x2110C74")]
		private void UpdateDissolve()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x2110D44", Offset = "0x2110D44", VA = "0x2110D44")]
		public DissolveFlicker()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class Scaler : MonoBehaviour
	{
		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinScale;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxScale;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Speed;

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x2111214", Offset = "0x2111214", VA = "0x2111214")]
		private void Update()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x2111340", Offset = "0x2111340", VA = "0x2111340")]
		public Scaler()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class HoloShader
	{
		[Token(Token = "0x200057D")]
		public enum Rim
		{
			[Token(Token = "0x4001FB5")]
			Off,
			[Token(Token = "0x4001FB6")]
			Rim,
			[Token(Token = "0x4001FB7")]
			Inverted
		}

		[Token(Token = "0x200057E")]
		public enum Scanline
		{
			[Token(Token = "0x4001FB9")]
			Off,
			[Token(Token = "0x4001FBA")]
			World,
			[Token(Token = "0x4001FBB")]
			Local,
			[Token(Token = "0x4001FBC")]
			Face
		}

		[Token(Token = "0x200057F")]
		public enum Noise
		{
			[Token(Token = "0x4001FBE")]
			Off,
			[Token(Token = "0x4001FBF")]
			On,
			[Token(Token = "0x4001FC0")]
			World,
			[Token(Token = "0x4001FC1")]
			Local,
			[Token(Token = "0x4001FC2")]
			Face
		}

		[Token(Token = "0x2000580")]
		public enum Distortion
		{
			[Token(Token = "0x4001FC4")]
			Off,
			[Token(Token = "0x4001FC5")]
			Distirtion,
			[Token(Token = "0x4001FC6")]
			Dissolve
		}

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] RIM;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] SCANLINE;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] NOISE;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string[] DISTORTION;

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x21104DC", Offset = "0x21104DC", VA = "0x21104DC")]
		public static void EnableRim(Material material, Rim type)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x21107D8", Offset = "0x21107D8", VA = "0x21107D8")]
		public static void EnableScanline(Material material, Scanline type)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x210F9AC", Offset = "0x210F9AC", VA = "0x210F9AC")]
		public static void EnableNoise(Material material, Noise type)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x210FF0C", Offset = "0x210FF0C", VA = "0x210FF0C")]
		public static void EnableDistortion(Material material, Distortion type)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x2110D64", Offset = "0x2110D64", VA = "0x2110D64")]
		public HoloShader()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class Rotate : MonoBehaviour
	{
		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Angle;

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x2111158", Offset = "0x2111158", VA = "0x2111158")]
		private void Update()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x2111190", Offset = "0x2111190", VA = "0x2111190")]
		public Rotate()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class ScreenShotTool : MonoBehaviour
	{
		[Token(Token = "0x6001680")]
		[Address(RVA = "0x2111350", Offset = "0x2111350", VA = "0x2111350")]
		private void Update()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x21113B8", Offset = "0x21113B8", VA = "0x21113B8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x21113BC", Offset = "0x21113BC", VA = "0x21113BC")]
		public ScreenShotTool()
		{
		}
	}
}
namespace FastShadowProjector
{
	[Token(Token = "0x200037F")]
	public static class FSPDebugUtils
	{
		[Token(Token = "0x6001683")]
		[Address(RVA = "0x13AED4C", Offset = "0x13AED4C", VA = "0x13AED4C")]
		public static void DrawCameraFrustumPlanes(Camera camera)
		{
		}
	}
	[Token(Token = "0x2000380")]
	public static class FSPUtils
	{
		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Action<Plane[], Matrix4x4> _calculateFrustumPlanes_Imp;

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x13AF5A8", Offset = "0x13AF5A8", VA = "0x13AF5A8")]
		public static void CalculateFrustumPlanes(Plane[] planes, Camera camera)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x13AF164", Offset = "0x13AF164", VA = "0x13AF164")]
		public static Vector3 Get3PlaneConcurrencePoint(Plane planeA, Plane planeB, Plane planeC)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x13AF9AC", Offset = "0x13AF9AC", VA = "0x13AF9AC")]
		public static float Determinant3x3(Vector3 col1, Vector3 col2, Vector3 col3)
		{
			return default(float);
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x13AF694", Offset = "0x13AF694", VA = "0x13AF694")]
		private static void CalculateFrustumPlanesNonAlloc(Plane[] planes, Matrix4x4 worldToProjectMatrix)
		{
		}
	}
}
namespace FSP_Samples
{
	[Token(Token = "0x2000381")]
	public class CubeGen : MonoBehaviour
	{
		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject _cubePrefab;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _cubeCount;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _genWidth;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _angle;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float _groundOffset;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _scale;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool _rotate;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _cubeGameObject;

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x13ABD78", Offset = "0x13ABD78", VA = "0x13ABD78")]
		private void Start()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x13ABD7C", Offset = "0x13ABD7C", VA = "0x13ABD7C")]
		private void Generate()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x13AC180", Offset = "0x13AC180", VA = "0x13AC180")]
		private void Update()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x13AC270", Offset = "0x13AC270", VA = "0x13AC270")]
		public CubeGen()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class CubeMove : MonoBehaviour
	{
		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _initialPos;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion _initialRot;

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x13AC298", Offset = "0x13AC298", VA = "0x13AC298")]
		private void Start()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x13AC3A0", Offset = "0x13AC3A0", VA = "0x13AC3A0")]
		private void Update()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x13AC3A4", Offset = "0x13AC3A4", VA = "0x13AC3A4")]
		public void Reset()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x13AC4AC", Offset = "0x13AC4AC", VA = "0x13AC4AC")]
		public CubeMove()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class FPSCounter
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_LastTickCount;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_FPS;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FrameTime;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_DropFrameTime;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_LastDropTime;

		[Token(Token = "0x40016CE")]
		private const float FPSDropThres = 0.002f;

		[Token(Token = "0x40016CF")]
		private const float DropTimeout = 0.5f;

		[Token(Token = "0x40016D0")]
		private const float AvgFactor = 0.1f;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_Dt;

		[Token(Token = "0x170001B1")]
		public float timeDelta
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0x13AC4B4", Offset = "0x13AC4B4", VA = "0x13AC4B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x13AC4BC", Offset = "0x13AC4BC", VA = "0x13AC4BC")]
		public FPSCounter()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x13AC4E8", Offset = "0x13AC4E8", VA = "0x13AC4E8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x13AC644", Offset = "0x13AC644", VA = "0x13AC644")]
		public float GetFPS()
		{
			return default(float);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x13AC64C", Offset = "0x13AC64C", VA = "0x13AC64C")]
		public float GetDropFPS()
		{
			return default(float);
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x13AC670", Offset = "0x13AC670", VA = "0x13AC670")]
		public float GetAverageFrameTime()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000384")]
	public class FPSLabel : MonoBehaviour
	{
		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FPSCounter m_FPSCounter;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_Label;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_ShowFPSDrop;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringBuilder m_FPSTextBuilder;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private char[] m_FPSChars;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private char[] m_FPSDropChars;

		[Token(Token = "0x40016D8")]
		private const int FPSTextLen = 10;

		[Token(Token = "0x40016D9")]
		private const float LabelUpdateFrequency = 0.5f;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_TimeSinceLastLabelUpdate;

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x13AC678", Offset = "0x13AC678", VA = "0x13AC678")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x13AC75C", Offset = "0x13AC75C", VA = "0x13AC75C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x13AC8C8", Offset = "0x13AC8C8", VA = "0x13AC8C8")]
		private void FloatToCharArray(char[] charArray, float number)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x13ACA38", Offset = "0x13ACA38", VA = "0x13ACA38")]
		private int GetDecLen(float number)
		{
			return default(int);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x13ACA70", Offset = "0x13ACA70", VA = "0x13ACA70")]
		public FPSLabel()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class FloatAnimation : MonoBehaviour
	{
		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _initialPos;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _angle;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _angleY;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float _xFloatDist;

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x13ACA78", Offset = "0x13ACA78", VA = "0x13ACA78")]
		private void Start()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x13ACAF0", Offset = "0x13ACAF0", VA = "0x13ACAF0")]
		private void Update()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x13ACD38", Offset = "0x13ACD38", VA = "0x13ACD38")]
		public FloatAnimation()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class Menu : MonoBehaviour
	{
		[Token(Token = "0x600169E")]
		[Address(RVA = "0x13ACD48", Offset = "0x13ACD48", VA = "0x13ACD48")]
		private void Start()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x13ACD54", Offset = "0x13ACD54", VA = "0x13ACD54")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x13AD010", Offset = "0x13AD010", VA = "0x13AD010")]
		public Menu()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class MovementAnimation : MonoBehaviour
	{
		[Token(Token = "0x40016DF")]
		private const float _animSpeed = 0.7f;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _movementLength;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _initialPos;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _angle;

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x13AD018", Offset = "0x13AD018", VA = "0x13AD018")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x13AD054", Offset = "0x13AD054", VA = "0x13AD054")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x13AD178", Offset = "0x13AD178", VA = "0x13AD178")]
		public MovementAnimation()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class RollingCubes : MonoBehaviour
	{
		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x13AD188", Offset = "0x13AD188", VA = "0x13AD188")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x13AD18C", Offset = "0x13AD18C", VA = "0x13AD18C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x13AD190", Offset = "0x13AD190", VA = "0x13AD190")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x13AD324", Offset = "0x13AD324", VA = "0x13AD324")]
		public RollingCubes()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class ScaleAnimation : MonoBehaviour
	{
		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _scaleUp;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _curScale;

		[Token(Token = "0x40016E5")]
		private const float MaxScale = 0.7f;

		[Token(Token = "0x40016E6")]
		private const float AnimationSpeed = 3f;

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x13AD32C", Offset = "0x13AD32C", VA = "0x13AD32C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x13AD364", Offset = "0x13AD364", VA = "0x13AD364")]
		private void Update()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x13AD4B4", Offset = "0x13AD4B4", VA = "0x13AD4B4")]
		public ScaleAnimation()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class ScalingSphere : MonoBehaviour
	{
		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ShadowTrigger shadowAreaTrigger;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool inShadow;

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x13AD4C4", Offset = "0x13AD4C4", VA = "0x13AD4C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x13AD5C0", Offset = "0x13AD5C0", VA = "0x13AD5C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x13AD6F0", Offset = "0x13AD6F0", VA = "0x13AD6F0")]
		private void OnShadowEnter()
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x13AD6FC", Offset = "0x13AD6FC", VA = "0x13AD6FC")]
		private void OnShadowStay()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x13AD700", Offset = "0x13AD700", VA = "0x13AD700")]
		private void OnShadowExit()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x13AD708", Offset = "0x13AD708", VA = "0x13AD708")]
		public ScalingSphere()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class ShadowSwitch : MonoBehaviour
	{
		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x13AD710", Offset = "0x13AD710", VA = "0x13AD710")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x13AD818", Offset = "0x13AD818", VA = "0x13AD818")]
		public ShadowSwitch()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class SpinAnimation : MonoBehaviour
	{
		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _angle;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float AnimationSpeed;

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x13AD820", Offset = "0x13AD820", VA = "0x13AD820")]
		private void Update()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x13AD908", Offset = "0x13AD908", VA = "0x13AD908")]
		public SpinAnimation()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class TerrainShadowSwitch : MonoBehaviour
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Terrain duplicateTerrain;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material terrainMat;

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x13AD910", Offset = "0x13AD910", VA = "0x13AD910")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x13AD9E4", Offset = "0x13AD9E4", VA = "0x13AD9E4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x13ADB64", Offset = "0x13ADB64", VA = "0x13ADB64")]
		public TerrainShadowSwitch()
		{
		}
	}
}
namespace FIMSpace.FSpine
{
	[Token(Token = "0x200038E")]
	public class FSpine_Demo_GroundMovement : MonoBehaviour
	{
		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA17C10", Offset = "0xA17C10")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA17C10", Offset = "0xA17C10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA17C10", Offset = "0xA17C10")]
		public float RotationYAxis;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA17CA0", Offset = "0xA17CA0")]
		public float FittingSpeed;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RaycastHeightOffset;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RaycastCheckRange;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LookAheadRaycast;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float AheadBlend;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float YOffset;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA17CB8", Offset = "0xA17CB8")]
		public LayerMask GroundLayerMask;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool RelativeLookUp;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA17CCC", Offset = "0xA17CCC")]
		public float RelativeLookUpBias;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17CE4", Offset = "0xA17CE4")]
		private RaycastHit <LastRaycast>k__BackingField;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Quaternion helperRotation;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float delta;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool fittingEnabled;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA17CF4", Offset = "0xA17CF4")]
		public float BaseSpeed;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float RotateToTargetSpeed;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float SprintingSpeed;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float ActiveSpeed;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float AccelerationSpeed;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float DecelerationSpeed;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float JumpPower;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float gravity;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool MultiplySprintAnimation;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal float YVelocity;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected bool inAir;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected float gravityOffset;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		internal bool MoveForward;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		internal bool Sprint;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal float RotationOffset;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected string lastAnim;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Animator animator;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool animatorHaveAnimationSpeedProp;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float initialYOffset;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Vector3 holdJumpPosition;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float freezeJumpYPosition;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool oneAnimation;

		[Token(Token = "0x170001B2")]
		public RaycastHit LastRaycast
		{
			[Token(Token = "0x60016B8")]
			[Address(RVA = "0x13A004C", Offset = "0x13A004C", VA = "0x13A004C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22038", Offset = "0xA22038")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x13A0060", Offset = "0x13A0060", VA = "0x13A0060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22048", Offset = "0xA22048")]
			protected set
			{
			}
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x13A007C", Offset = "0x13A007C", VA = "0x13A007C")]
		private Vector3 GetUpVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x13A017C", Offset = "0x13A017C", VA = "0x13A017C", Slot = "4")]
		protected virtual void FitToGround()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x13A0768", Offset = "0x13A0768", VA = "0x13A0768")]
		internal void RotationCalculations()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x13A08A0", Offset = "0x13A08A0", VA = "0x13A08A0")]
		internal RaycastHit CastRay()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x13A072C", Offset = "0x13A072C", VA = "0x13A072C")]
		internal void RefreshLastRaycast()
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x13A0A5C", Offset = "0x13A0A5C", VA = "0x13A0A5C", Slot = "5")]
		protected virtual void InitMovement()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x13A0C50", Offset = "0x13A0C50", VA = "0x13A0C50", Slot = "6")]
		protected virtual void UpdateMovement()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x13A0CB4", Offset = "0x13A0CB4", VA = "0x13A0CB4", Slot = "7")]
		protected virtual void HandleInput()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x13A0DA4", Offset = "0x13A0DA4", VA = "0x13A0DA4", Slot = "8")]
		protected virtual void HandleGravity()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x13A10C4", Offset = "0x13A10C4", VA = "0x13A10C4", Slot = "9")]
		protected virtual void HandleAnimations()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x13A12A0", Offset = "0x13A12A0", VA = "0x13A12A0")]
		protected void RefreshHitGroundVars(RaycastHit hit)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x13A1398", Offset = "0x13A1398", VA = "0x13A1398", Slot = "10")]
		protected virtual void HandleTransforming()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x13A1790", Offset = "0x13A1790", VA = "0x13A1790", Slot = "11")]
		protected virtual void HitGround()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x13A17DC", Offset = "0x13A17DC", VA = "0x13A17DC", Slot = "12")]
		public virtual void Jump()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x13A1828", Offset = "0x13A1828", VA = "0x13A1828", Slot = "13")]
		protected virtual void CrossfadeTo(string animation, float transitionTime = 0.25f)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x13A0BB0", Offset = "0x13A0BB0", VA = "0x13A0BB0")]
		public static bool HasParameter(Animator animator, string paramName)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x13A1914", Offset = "0x13A1914", VA = "0x13A1914")]
		private void Start()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x13A1920", Offset = "0x13A1920", VA = "0x13A1920")]
		private void Update()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x13A196C", Offset = "0x13A196C", VA = "0x13A196C")]
		public FSpine_Demo_GroundMovement()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class FSpineAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000581")]
		public class FSpine_Point
		{
			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Position;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion Rotation;

			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0x13996D0", Offset = "0x13996D0", VA = "0x13996D0")]
			public Vector3 TransformDirection(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0x1399784", Offset = "0x1399784", VA = "0x1399784")]
			public FSpine_Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000582")]
		public class FSpine_FixingSet
		{
			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector3> Current;

			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Vector3> Initial;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Vector3> Rounded;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Vector3> Reversed;

			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Vector3> RoundedReversed;

			[Token(Token = "0x4001FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Vector3> Unified;

			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0x1399430", Offset = "0x1399430", VA = "0x1399430")]
			public List<Vector3> SetUnified(List<Vector3> toUnify)
			{
				return null;
			}

			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0x1399520", Offset = "0x1399520", VA = "0x1399520")]
			internal void AddToAllNormal(Vector3 v)
			{
			}

			[Token(Token = "0x6001D80")]
			[Address(RVA = "0x13995F4", Offset = "0x13995F4", VA = "0x13995F4")]
			internal FSpine_FixingSet Init()
			{
				return null;
			}

			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x13996C8", Offset = "0x13996C8", VA = "0x13996C8")]
			public FSpine_FixingSet()
			{
			}
		}

		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04BC0", Offset = "0xA04BC0")]
		private sealed class <InitTPoseStartOffset>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FSpineAnimator <>4__this;

			[Token(Token = "0x4001FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <counter>5__2;

			[Token(Token = "0x170002C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D85")]
				[Address(RVA = "0x1399278", Offset = "0x1399278", VA = "0x1399278", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D87")]
				[Address(RVA = "0x13992E0", Offset = "0x13992E0", VA = "0x13992E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D82")]
			[Address(RVA = "0x1399168", Offset = "0x1399168", VA = "0x1399168")]
			[DebuggerHidden]
			public <InitTPoseStartOffset>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001D83")]
			[Address(RVA = "0x1399194", Offset = "0x1399194", VA = "0x1399194", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D84")]
			[Address(RVA = "0x1399198", Offset = "0x1399198", VA = "0x1399198", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D86")]
			[Address(RVA = "0x1399280", Offset = "0x1399280", VA = "0x1399280", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04BD0", Offset = "0xA04BD0")]
		private sealed class <LateFixedUpdate>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FSpineAnimator <>4__this;

			[Token(Token = "0x170002C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D8B")]
				[Address(RVA = "0x13993C0", Offset = "0x13993C0", VA = "0x13993C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D8D")]
				[Address(RVA = "0x1399428", Offset = "0x1399428", VA = "0x1399428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D88")]
			[Address(RVA = "0x13992E8", Offset = "0x13992E8", VA = "0x13992E8")]
			[DebuggerHidden]
			public <LateFixedUpdate>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x1399314", Offset = "0x1399314", VA = "0x1399314", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0x1399318", Offset = "0x1399318", VA = "0x1399318", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0x13993C8", Offset = "0x13993C8", VA = "0x13993C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17D2C", Offset = "0xA17D2C")]
		public List<Transform> SpineTransforms;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<FSpine_Point> proceduralPoints;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<FSpine_Point> ProceduralReferencePose;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<FSpine_Point> helperProceduralPoints;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<float> initialBoneDistances;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17D64", Offset = "0xA17D64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA17D64", Offset = "0xA17D64")]
		public float BlendToOriginal;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17DBC", Offset = "0xA17DBC")]
		public bool LastBoneLeading;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool reversedChangeFlag;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 lookUp;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17DF4", Offset = "0xA17DF4")]
		public bool InversedVerticalRotation;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17E2C", Offset = "0xA17E2C")]
		public bool ConnectWithAnimator;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17E64", Offset = "0xA17E64")]
		public bool AnimateLeadingBone;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17E9C", Offset = "0xA17E9C")]
		public bool LeadingAnimateAfterMotion;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17ED4", Offset = "0xA17ED4")]
		public bool PhysicalUpdate;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17F0C", Offset = "0xA17F0C")]
		public bool AnchorToThis;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17F44", Offset = "0xA17F44")]
		public Transform AnchorRoot;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17F7C", Offset = "0xA17F7C")]
		public Vector3 CustomAnchorRotationOffset;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17FB4", Offset = "0xA17FB4")]
		public bool QueueToLastUpdate;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA17FEC", Offset = "0xA17FEC")]
		public bool PositionsNotAnimated;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<bool> SelectivePosNotAnimated;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18024", Offset = "0xA18024")]
		public bool RotationsNotAnimated;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<bool> SelectiveRotNotAnimated;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int leadingBoneIndex;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int reverser;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int adjuster;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<FSpine_Point> staticCoordinates;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FSpine_FixingSet spineLookDirectionsSet;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1805C", Offset = "0xA1805C")]
		public List<Vector3> lookDirectionsAdditiveCorrection;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18094", Offset = "0xA18094")]
		public List<Vector3> ManualRotationOffsets;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA180CC", Offset = "0xA180CC")]
		public List<Vector3> ManualPositionOffsets;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18104", Offset = "0xA18104")]
		public bool RoundCorrection;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool wasRoundCorrection;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1813C", Offset = "0xA1813C")]
		public bool UnifyCorrection;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		private bool wasUnified;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18174", Offset = "0xA18174")]
		public bool StartAfterTPose;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 previousScale;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform[] anchorHelpers;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform anchorsContainer;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool wasSourceAnimation;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool initialized;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 previousPos;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA181AC", Offset = "0xA181AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA181AC", Offset = "0xA181AC")]
		public float PosSmoother;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18200", Offset = "0xA18200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18200", Offset = "0xA18200")]
		public float RotSmoother;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18254", Offset = "0xA18254")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18254", Offset = "0xA18254")]
		public float AngleLimit;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA182AC", Offset = "0xA182AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA182AC", Offset = "0xA182AC")]
		public float LimitSmoother;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18300", Offset = "0xA18300")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18300", Offset = "0xA18300")]
		public float StraightenSpeed;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public bool TurboStraighten;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18354", Offset = "0xA18354")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18354", Offset = "0xA18354")]
		public float GoBackSpeed;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA183A8", Offset = "0xA183A8")]
		public Vector3 MainPivotOffset;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA183E0", Offset = "0xA183E0")]
		public Transform mainPivotOffsetTransform;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA183F0", Offset = "0xA183F0")]
		public Vector3 SegmentsPivotOffset;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18428", Offset = "0xA18428")]
		public float DistancesMultiplier;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Transform rotationRef;

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x1316230", Offset = "0x1316230", VA = "0x1316230")]
		private void Init()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x13162C4", Offset = "0x13162C4", VA = "0x13162C4")]
		protected void ComputePredefinedVariables()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x1319138", Offset = "0x1319138", VA = "0x1319138", Slot = "4")]
		protected virtual void PrepareSpinePoints()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x1319818", Offset = "0x1319818", VA = "0x1319818", Slot = "5")]
		protected virtual void ConfigureBonesTransforms()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x13199A4", Offset = "0x13199A4", VA = "0x13199A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x1319A0C", Offset = "0x1319A0C", VA = "0x1319A0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x1319A60", Offset = "0x1319A60", VA = "0x1319A60")]
		protected void Start()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x1319AD0", Offset = "0x1319AD0", VA = "0x1319AD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA22058", Offset = "0xA22058")]
		private IEnumerator InitTPoseStartOffset()
		{
			return null;
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x1319B40", Offset = "0x1319B40", VA = "0x1319B40")]
		private void UpdateReverseHelpVariables()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x1316D58", Offset = "0x1316D58", VA = "0x1316D58")]
		private void ReposeSpine()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x131A714", Offset = "0x131A714", VA = "0x131A714")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x131A724", Offset = "0x131A724", VA = "0x131A724")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA220BC", Offset = "0xA220BC")]
		private IEnumerator LateFixedUpdate()
		{
			return null;
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x1316EDC", Offset = "0x1316EDC", VA = "0x1316EDC")]
		private void SpineMotion()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x131A048", Offset = "0x131A048", VA = "0x131A048")]
		private FSpine_Point GetLeadingBoneCoordinates()
		{
			return null;
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x131A92C", Offset = "0x131A92C", VA = "0x131A92C", Slot = "6")]
		protected virtual void CalculateMotion()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x131B12C", Offset = "0x131B12C", VA = "0x131B12C")]
		private void CalculateSpineBehaviourPosition(int index)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x131A9E8", Offset = "0x131A9E8", VA = "0x131A9E8")]
		private void CalculateSpineBehaviourRotation(int index)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x131A794", Offset = "0x131A794", VA = "0x131A794")]
		private void RefreshRefDirsOnReverse()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x1318854", Offset = "0x1318854", VA = "0x1318854")]
		private void RefreshDistances()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x131B3A0", Offset = "0x131B3A0", VA = "0x131B3A0")]
		private float SmootherValue(float val)
		{
			return default(float);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x131A844", Offset = "0x131A844", VA = "0x131A844")]
		protected Vector3 RoundPosDiff(Vector3 pos, int digits = 1)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x1318E70", Offset = "0x1318E70", VA = "0x1318E70")]
		private Vector3 RoundToBiggestValue(Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x131B420", Offset = "0x131B420", VA = "0x131B420")]
		private void DrawFatRay(Vector3 origin, Vector3 dir)
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x131B688", Offset = "0x131B688", VA = "0x131B688")]
		private void DrawBoneLine(Vector3 origin, Vector3 dir)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x1318CC8", Offset = "0x1318CC8", VA = "0x1318CC8")]
		public void RefreshSelectivePosNotAnimated()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x1318D9C", Offset = "0x1318D9C", VA = "0x1318D9C")]
		public void RefreshSelectiveRotNotAnimated()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x1318AC0", Offset = "0x1318AC0", VA = "0x1318AC0")]
		public void RefreshManualPosOffs()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x1318BC4", Offset = "0x1318BC4", VA = "0x1318BC4")]
		public void RefreshManualRotOffs()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x131B8F0", Offset = "0x131B8F0", VA = "0x131B8F0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x131BB78", Offset = "0x131BB78", VA = "0x131BB78")]
		private void RestoreBasePivotChildren()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x131BC04", Offset = "0x131BC04", VA = "0x131BC04")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x1319BBC", Offset = "0x1319BBC", VA = "0x1319BBC")]
		private void RefreshDifferenceReference()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x131BF7C", Offset = "0x131BF7C", VA = "0x131BF7C")]
		public void TryAutoCorrect([Optional] Transform head)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x131C594", Offset = "0x131C594", VA = "0x131C594")]
		public void DevLog()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x131C600", Offset = "0x131C600", VA = "0x131C600")]
		public FSpineAnimator()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class FSpine_AnimatorPerchance : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000585")]
		public class FSpine_Point
		{
			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Position;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion Rotation;

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x139E238", Offset = "0x139E238", VA = "0x139E238")]
			public Vector3 TransformDirection(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x139CD6C", Offset = "0x139CD6C", VA = "0x139CD6C")]
			public FSpine_Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000586")]
		public class FSpine_FixingSet
		{
			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector3> Current;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Vector3> Initial;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Vector3> Rounded;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Vector3> Reversed;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Vector3> RoundedReversed;

			[Token(Token = "0x6001D90")]
			[Address(RVA = "0x139D15C", Offset = "0x139D15C", VA = "0x139D15C")]
			internal void AddToAllNormal(Vector3 v)
			{
			}

			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x139D088", Offset = "0x139D088", VA = "0x139D088")]
			internal FSpine_FixingSet Init()
			{
				return null;
			}

			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x139D080", Offset = "0x139D080", VA = "0x139D080")]
			public FSpine_FixingSet()
			{
			}
		}

		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04BE0", Offset = "0xA04BE0")]
		private sealed class <InitTPoseStartOffset>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FSpine_AnimatorPerchance <>4__this;

			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <counter>5__2;

			[Token(Token = "0x170002C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D96")]
				[Address(RVA = "0x139FE8C", Offset = "0x139FE8C", VA = "0x139FE8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D98")]
				[Address(RVA = "0x139FEF4", Offset = "0x139FEF4", VA = "0x139FEF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x139E13C", Offset = "0x139E13C", VA = "0x139E13C")]
			[DebuggerHidden]
			public <InitTPoseStartOffset>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x139FDC0", Offset = "0x139FDC0", VA = "0x139FDC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x139FDC4", Offset = "0x139FDC4", VA = "0x139FDC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x139FE94", Offset = "0x139FE94", VA = "0x139FE94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04BF0", Offset = "0xA04BF0")]
		private sealed class <ReactivateMe>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FSpine_AnimatorPerchance <>4__this;

			[Token(Token = "0x170002C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D9C")]
				[Address(RVA = "0x139FFDC", Offset = "0x139FFDC", VA = "0x139FFDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D9E")]
				[Address(RVA = "0x13A0044", Offset = "0x13A0044", VA = "0x13A0044", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x139FC80", Offset = "0x139FC80", VA = "0x139FC80")]
			[DebuggerHidden]
			public <ReactivateMe>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x139FEFC", Offset = "0x139FEFC", VA = "0x139FEFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x139FF00", Offset = "0x139FF00", VA = "0x139FF00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x139FFE4", Offset = "0x139FFE4", VA = "0x139FFE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18460", Offset = "0xA18460")]
		public List<Transform> SpineTransforms;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<FSpine_Point> proceduralPoints;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<FSpine_Point> helperProceduralPoints;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<float> initialBoneDistances;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18498", Offset = "0xA18498")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18498", Offset = "0xA18498")]
		public float BlendToOriginal;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA184F0", Offset = "0xA184F0")]
		public bool ReversedLeadBone;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool reversedChangeFlag;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18528", Offset = "0xA18528")]
		public bool RolledBones;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lookUp;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool rolledChangeFlag;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18560", Offset = "0xA18560")]
		public bool ConnectWithAnimator;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18598", Offset = "0xA18598")]
		public bool AnchoredSpine;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA185D0", Offset = "0xA185D0")]
		public Transform AnchorRoot;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18608", Offset = "0xA18608")]
		public bool QueueToLastUpdate;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18640", Offset = "0xA18640")]
		public bool PositionsNotAnimated;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<bool> SelectivePosNotAnimated;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18678", Offset = "0xA18678")]
		public bool RotationsNotAnimated;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<bool> SelectiveRotNotAnimated;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int leadingBoneIndex;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int endingBoneIndex;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int reverser;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<FSpine_Point> staticCoordinates;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<FSpine_Point> staticCoordinatesBaseRef;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<FSpine_Point> referencePoses;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FSpine_FixingSet spineLookDirectionsSet;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA186B0", Offset = "0xA186B0")]
		public List<Vector3> ManualRotationOffsets;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA186E8", Offset = "0xA186E8")]
		public List<Vector3> ManualPositionOffsets;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18720", Offset = "0xA18720")]
		public bool RoundCorrection;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool wasRoundCorrection;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18758", Offset = "0xA18758")]
		public bool StartAfterTPose;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18790", Offset = "0xA18790")]
		public bool RefinedCorrection;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion initialRotation;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 previousScale;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform[] anchorHelpers;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform anchorsContainer;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool wasSourceAnimation;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<float> StaticYOffsets;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool initialized;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 previousPos;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA187C8", Offset = "0xA187C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA187C8", Offset = "0xA187C8")]
		public float PosSmoother;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1881C", Offset = "0xA1881C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1881C", Offset = "0xA1881C")]
		public float RotSmoother;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18870", Offset = "0xA18870")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18870", Offset = "0xA18870")]
		public float AngleLimit;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA188C8", Offset = "0xA188C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA188C8", Offset = "0xA188C8")]
		public float LimitSmoother;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1891C", Offset = "0xA1891C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1891C", Offset = "0xA1891C")]
		public float StraightenSpeed;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public bool TurboStraighten;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18970", Offset = "0xA18970")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18970", Offset = "0xA18970")]
		public float GoBackSpeed;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA189C4", Offset = "0xA189C4")]
		public Vector3 PivotOffset;

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x139982C", Offset = "0x139982C", VA = "0x139982C")]
		private void Init()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x13998C0", Offset = "0x13998C0", VA = "0x13998C0")]
		protected void ComputePredefinedVariables()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x139D8A8", Offset = "0x139D8A8", VA = "0x139D8A8", Slot = "4")]
		protected virtual void PrepareSpinePoints()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x139DED0", Offset = "0x139DED0", VA = "0x139DED0", Slot = "5")]
		protected virtual void ConfigureBonesTransforms()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x139E05C", Offset = "0x139E05C", VA = "0x139E05C")]
		protected void Start()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x139E0CC", Offset = "0x139E0CC", VA = "0x139E0CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA22120", Offset = "0xA22120")]
		private IEnumerator InitTPoseStartOffset()
		{
			return null;
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x139E168", Offset = "0x139E168", VA = "0x139E168")]
		private void UpdateReverseHelpVariables()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x139E1F0", Offset = "0x139E1F0", VA = "0x139E1F0")]
		private void ReposeSpineAccord()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x139C734", Offset = "0x139C734", VA = "0x139C734")]
		private void ReposeSpine()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x139A470", Offset = "0x139A470", VA = "0x139A470")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x139E4E8", Offset = "0x139E4E8", VA = "0x139E4E8", Slot = "6")]
		protected virtual void CalculateMotion()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x139EBD8", Offset = "0x139EBD8", VA = "0x139EBD8")]
		private void CalculateSpineBehaviourPosition(int index)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x139E5A4", Offset = "0x139E5A4", VA = "0x139E5A4")]
		private void CalculateSpineBehaviourRotation(int index)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x139EEA8", Offset = "0x139EEA8", VA = "0x139EEA8", Slot = "7")]
		protected virtual Quaternion CalculateTargetRotation([Optional] FSpine_Point otherSpinePoint, [Optional] FSpine_Point currentSpinePoint, int index = 0)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x139E2EC", Offset = "0x139E2EC", VA = "0x139E2EC")]
		private void RefreshRefDirsOnReverse()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x139CE14", Offset = "0x139CE14", VA = "0x139CE14")]
		private void RefreshDistances()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x139EE28", Offset = "0x139EE28", VA = "0x139EE28")]
		private float SmootherValue(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x139E400", Offset = "0x139E400", VA = "0x139E400")]
		protected Vector3 RoundPosDiff(Vector3 pos, int digits = 1)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x139D5E0", Offset = "0x139D5E0", VA = "0x139D5E0")]
		private Vector3 RoundToBiggestValue(Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x139F080", Offset = "0x139F080", VA = "0x139F080")]
		private void DrawFatRay(Vector3 origin, Vector3 dir)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x139F2E8", Offset = "0x139F2E8", VA = "0x139F2E8")]
		private void DrawFatLine(Vector3 origin, Vector3 dir)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x139D438", Offset = "0x139D438", VA = "0x139D438")]
		public void RefreshSelectivePosNotAnimated()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x139D50C", Offset = "0x139D50C", VA = "0x139D50C")]
		public void RefreshSelectiveRotNotAnimated()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x139D230", Offset = "0x139D230", VA = "0x139D230")]
		public void RefreshManualPosOffs()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x139D334", Offset = "0x139D334", VA = "0x139D334")]
		public void RefreshManualRotOffs()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x139F550", Offset = "0x139F550", VA = "0x139F550")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x139F6D8", Offset = "0x139F6D8", VA = "0x139F6D8")]
		public void TryAutoCorrect([Optional] Transform head)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x139FC0C", Offset = "0x139FC0C", VA = "0x139FC0C")]
		public void DevLog()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x139FC10", Offset = "0x139FC10", VA = "0x139FC10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA22184", Offset = "0xA22184")]
		public IEnumerator ReactivateMe()
		{
			return null;
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x139FCAC", Offset = "0x139FCAC", VA = "0x139FCAC")]
		public FSpine_AnimatorPerchance()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class FSpine_DrawSkeleton : MonoBehaviour
	{
		[Token(Token = "0x600170E")]
		[Address(RVA = "0x13A1A54", Offset = "0x13A1A54", VA = "0x13A1A54")]
		public FSpine_DrawSkeleton()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class FSpine_Reference : MonoBehaviour
	{
		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FSpineAnimator SpineReference;

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x13A1A5C", Offset = "0x13A1A5C", VA = "0x13A1A5C")]
		public FSpine_Reference()
		{
		}
	}
}
namespace FIMSpace.FTail
{
	[Token(Token = "0x2000393")]
	public class FLookAnimator_Demo_GroundMovement : MonoBehaviour
	{
		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA189FC", Offset = "0xA189FC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA189FC", Offset = "0xA189FC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA189FC", Offset = "0xA189FC")]
		public float RotationYAxis;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18A8C", Offset = "0xA18A8C")]
		public float FittingSpeed;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RaycastHeightOffset;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RaycastCheckRange;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LookAheadRaycast;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float AheadBlend;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float YOffset;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA18AA4", Offset = "0xA18AA4")]
		public LayerMask GroundLayerMask;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool RelativeLookUp;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18AB8", Offset = "0xA18AB8")]
		public float RelativeLookUpBias;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18AD0", Offset = "0xA18AD0")]
		private RaycastHit <LastRaycast>k__BackingField;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Quaternion helperRotation;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float delta;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool fittingEnabled;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA18AE0", Offset = "0xA18AE0")]
		public float BaseSpeed;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float RotateToTargetSpeed;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float SprintingSpeed;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float ActiveSpeed;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float AccelerationSpeed;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float DecelerationSpeed;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float JumpPower;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float gravity;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool MultiplySprintAnimation;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal float YVelocity;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected bool inAir;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected float gravityOffset;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		internal bool MoveForward;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		internal bool Sprint;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal float RotationOffset;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected string lastAnim;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Animator animator;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool animatorHaveAnimationSpeedProp;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float initialYOffset;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Vector3 holdJumpPosition;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float freezeJumpYPosition;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool oneAnimation;

		[Token(Token = "0x170001B3")]
		public RaycastHit LastRaycast
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0x13A1A64", Offset = "0x13A1A64", VA = "0x13A1A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA221E8", Offset = "0xA221E8")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6001711")]
			[Address(RVA = "0x13A1A78", Offset = "0x13A1A78", VA = "0x13A1A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA221F8", Offset = "0xA221F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x13A1A94", Offset = "0x13A1A94", VA = "0x13A1A94")]
		private Vector3 GetUpVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x13A1B94", Offset = "0x13A1B94", VA = "0x13A1B94", Slot = "4")]
		protected virtual void FitToGround()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x13A2180", Offset = "0x13A2180", VA = "0x13A2180")]
		internal void RotationCalculations()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x13A22B8", Offset = "0x13A22B8", VA = "0x13A22B8")]
		internal RaycastHit CastRay()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x13A2144", Offset = "0x13A2144", VA = "0x13A2144")]
		internal void RefreshLastRaycast()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x13A2474", Offset = "0x13A2474", VA = "0x13A2474", Slot = "5")]
		protected virtual void InitMovement()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x13A2668", Offset = "0x13A2668", VA = "0x13A2668", Slot = "6")]
		protected virtual void UpdateMovement()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x13A26CC", Offset = "0x13A26CC", VA = "0x13A26CC", Slot = "7")]
		protected virtual void HandleInput()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x13A27BC", Offset = "0x13A27BC", VA = "0x13A27BC", Slot = "8")]
		protected virtual void HandleGravity()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x13A2ADC", Offset = "0x13A2ADC", VA = "0x13A2ADC", Slot = "9")]
		protected virtual void HandleAnimations()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x13A2CB8", Offset = "0x13A2CB8", VA = "0x13A2CB8")]
		protected void RefreshHitGroundVars(RaycastHit hit)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x13A2DB0", Offset = "0x13A2DB0", VA = "0x13A2DB0", Slot = "10")]
		protected virtual void HandleTransforming()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x13A31A8", Offset = "0x13A31A8", VA = "0x13A31A8", Slot = "11")]
		protected virtual void HitGround()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x13A31F4", Offset = "0x13A31F4", VA = "0x13A31F4", Slot = "12")]
		public virtual void Jump()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x13A3240", Offset = "0x13A3240", VA = "0x13A3240", Slot = "13")]
		protected virtual void CrossfadeTo(string animation, float transitionTime = 0.25f)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x13A25C8", Offset = "0x13A25C8", VA = "0x13A25C8")]
		public static bool HasParameter(Animator animator, string paramName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x13A3360", Offset = "0x13A3360", VA = "0x13A3360", Slot = "14")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x13A336C", Offset = "0x13A336C", VA = "0x13A336C", Slot = "15")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x13A33B8", Offset = "0x13A33B8", VA = "0x13A33B8")]
		public FLookAnimator_Demo_GroundMovement()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public abstract class FTail_AnimatorBase : MonoBehaviour
	{
		[Token(Token = "0x2000589")]
		protected class FTail_Point
		{
			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Position;

			[Token(Token = "0x4001FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion Rotation;

			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x13A5664", Offset = "0x13A5664", VA = "0x13A5664")]
			public Vector3 TransformDirection(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0x13A500C", Offset = "0x13A500C", VA = "0x13A500C")]
			public FTail_Point()
			{
			}
		}

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA18B18", Offset = "0xA18B18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA18B18", Offset = "0xA18B18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA18B18", Offset = "0xA18B18")]
		public List<Transform> TailTransforms;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<FTail_Point> proceduralPoints;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA18B9C", Offset = "0xA18B9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18B9C", Offset = "0xA18B9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18B9C", Offset = "0xA18B9C")]
		public float PositionSpeed;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18C18", Offset = "0xA18C18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18C18", Offset = "0xA18C18")]
		public float RotationSpeed;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<Transform> editorGizmoTailList;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18C70", Offset = "0xA18C70")]
		public bool UseAutoCorrectLookAxis;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool FullCorrection;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18CA8", Offset = "0xA18CA8")]
		public bool RolledBones;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool AnimateCorrections;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float StretchMultiplier;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18CE0", Offset = "0xA18CE0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA18CE0", Offset = "0xA18CE0")]
		public Vector3 AxisCorrection;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 AxisLookBack;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA18D30", Offset = "0xA18D30")]
		public bool ExtraCorrectionOptions;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 ExtraFromDirection;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 ExtraToDirection;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18D40", Offset = "0xA18D40")]
		public bool AddTailReferences;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18D78", Offset = "0xA18D78")]
		public EFUpdateClock UpdateClock;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18DB0", Offset = "0xA18DB0")]
		public bool SmoothDeltaTime;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18DE8", Offset = "0xA18DE8")]
		public bool RefreshHelpers;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18E20", Offset = "0xA18E20")]
		public bool QueueToLastUpdate;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		protected bool initialized;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected List<float> distances;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Transform rootTransform;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected List<Vector3> tailLookDirections;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected List<Vector3> lookBackDirections;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected List<Quaternion> lookBackOffsets;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected List<Quaternion> animatedCorrections;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool preAutoCorrect;

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x13A3500", Offset = "0x13A3500", VA = "0x13A3500", Slot = "4")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x13A36D8", Offset = "0x13A36D8", VA = "0x13A36D8", Slot = "5")]
		protected virtual void CoputeHelperVariables()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x13A4368", Offset = "0x13A4368", VA = "0x13A4368", Slot = "6")]
		protected virtual void ConfigureBonesTransforms()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x13A4D2C", Offset = "0x13A4D2C", VA = "0x13A4D2C")]
		public void AutoGetTailTransforms()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x13A4EB8", Offset = "0x13A4EB8", VA = "0x13A4EB8", Slot = "7")]
		protected virtual void PrepareTailPoints()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x13A50B4", Offset = "0x13A50B4", VA = "0x13A50B4")]
		protected void Start()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x13A42A0", Offset = "0x13A42A0", VA = "0x13A42A0", Slot = "8")]
		protected virtual void CalculateOffsets()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x13A50C0", Offset = "0x13A50C0", VA = "0x13A50C0", Slot = "9")]
		protected virtual void MotionCalculations()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x13A5718", Offset = "0x13A5718", VA = "0x13A5718", Slot = "10")]
		protected virtual void SetTailTransformsFromPoints()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x13A5850", Offset = "0x13A5850", VA = "0x13A5850", Slot = "11")]
		protected virtual Quaternion CalculateTargetRotation(Vector3 startLookPos, Vector3 currentPos, [Optional] FTail_Point previousTailPoint, [Optional] FTail_Point currentTailPoint, int lookDirectionFixIndex = 0)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x13A4668", Offset = "0x13A4668", VA = "0x13A4668", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x13A55B4", Offset = "0x13A55B4", VA = "0x13A55B4")]
		protected void ApplyAutoCorrection()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x13A4CF8", Offset = "0x13A4CF8", VA = "0x13A4CF8")]
		public void QueueComponentToLastUpdate()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x13A5D84", Offset = "0x13A5D84", VA = "0x13A5D84", Slot = "13")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x13A4740", Offset = "0x13A4740", VA = "0x13A4740")]
		protected FTail_AnimatorBase()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class FTail_Reference : MonoBehaviour
	{
		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FTail_AnimatorBase TailReference;

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x13A8828", Offset = "0x13A8828", VA = "0x13A8828")]
		public FTail_Reference()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class FTail_Animator : FTail_AnimatorBase
	{
		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool UseWaving;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18E58", Offset = "0xA18E58")]
		public bool CosinusAdd;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float WavingSpeed;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float WavingRange;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector3 WavingAxis;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector3 TailRotationOffset;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18E90", Offset = "0xA18E90")]
		public bool DisconnectTransforms;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Transform disconnectedContainer;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Transform localDisconnectedContainer;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float waveTime;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float cosTime;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Vector3 firstBoneInitialRotation;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int RefreshCounter;

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x13A34A0", Offset = "0x13A34A0", VA = "0x13A34A0", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x13A3638", Offset = "0x13A3638", VA = "0x13A3638", Slot = "5")]
		protected override void CoputeHelperVariables()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x13A3E0C", Offset = "0x13A3E0C", VA = "0x13A3E0C", Slot = "14")]
		protected virtual void WavingCalculations()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x13A4220", Offset = "0x13A4220", VA = "0x13A4220", Slot = "8")]
		protected override void CalculateOffsets()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x13A42AC", Offset = "0x13A42AC", VA = "0x13A42AC", Slot = "6")]
		protected override void ConfigureBonesTransforms()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x13A436C", Offset = "0x13A436C", VA = "0x13A436C")]
		protected Transform GetDisconnectedContainer()
		{
			return null;
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x13A4504", Offset = "0x13A4504", VA = "0x13A4504", Slot = "15")]
		internal virtual void Update()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x13A4524", Offset = "0x13A4524", VA = "0x13A4524", Slot = "16")]
		internal virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x13A457C", Offset = "0x13A457C", VA = "0x13A457C", Slot = "17")]
		internal virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x13A45A0", Offset = "0x13A45A0", VA = "0x13A45A0", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x13A466C", Offset = "0x13A466C", VA = "0x13A466C")]
		public FTail_Animator()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class FTail_Animator2D : FTail_AnimatorUI
	{
		[Token(Token = "0x6001740")]
		[Address(RVA = "0x13A4860", Offset = "0x13A4860", VA = "0x13A4860", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x13A4868", Offset = "0x13A4868", VA = "0x13A4868", Slot = "18")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x13A4928", Offset = "0x13A4928", VA = "0x13A4928", Slot = "11")]
		protected override Quaternion CalculateTargetRotation(Vector3 startLookPos, Vector3 currentPos, [Optional] FTail_Point previousTailPoint, [Optional] FTail_Point currentTailPoint, int lookDirectionFixIndex = 0)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x13A4CE0", Offset = "0x13A4CE0", VA = "0x13A4CE0")]
		public FTail_Animator2D()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class FTail_AnimatorBlending : FTail_Animator
	{
		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA18EC8", Offset = "0xA18EC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18EC8", Offset = "0xA18EC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18EC8", Offset = "0xA18EC8")]
		public float BlendToOriginal;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18F40", Offset = "0xA18F40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18F40", Offset = "0xA18F40")]
		public float BlendChainValue;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18F94", Offset = "0xA18F94")]
		public bool PositionsNotAnimated;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float smoothChainBlend;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<Vector3> staticPositions;

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x13A5D88", Offset = "0x13A5D88", VA = "0x13A5D88", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x13A5D8C", Offset = "0x13A5D8C", VA = "0x13A5D8C", Slot = "5")]
		protected override void CoputeHelperVariables()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x13A5E78", Offset = "0x13A5E78", VA = "0x13A5E78", Slot = "18")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x13A5E84", Offset = "0x13A5E84", VA = "0x13A5E84", Slot = "15")]
		internal override void Update()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x13A5F94", Offset = "0x13A5F94", VA = "0x13A5F94", Slot = "17")]
		internal override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x13A5F98", Offset = "0x13A5F98", VA = "0x13A5F98", Slot = "16")]
		internal override void LateUpdate()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x13A693C", Offset = "0x13A693C", VA = "0x13A693C", Slot = "10")]
		protected override void SetTailTransformsFromPoints()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x13A6940", Offset = "0x13A6940", VA = "0x13A6940")]
		public FTail_AnimatorBlending()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class FTail_AnimatorLegacy : FTail_Animator
	{
		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SkinnedMeshRenderer BonesOwner;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA18FCC", Offset = "0xA18FCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA18FCC", Offset = "0xA18FCC")]
		public float BlendToOriginal;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected List<Transform> newSkinnedBones;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected List<Transform> previousSkinnedBones;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x13A69BC", Offset = "0x13A69BC", VA = "0x13A69BC")]
		private void Reset()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x13A69C8", Offset = "0x13A69C8", VA = "0x13A69C8", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x13A6BD0", Offset = "0x13A6BD0", VA = "0x13A6BD0", Slot = "6")]
		protected override void ConfigureBonesTransforms()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x13A7494", Offset = "0x13A7494", VA = "0x13A7494", Slot = "9")]
		protected override void MotionCalculations()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x13A7A4C", Offset = "0x13A7A4C", VA = "0x13A7A4C", Slot = "8")]
		protected override void CalculateOffsets()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x13A701C", Offset = "0x13A701C", VA = "0x13A701C")]
		public void TryFindBonesOwner()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x13A7A84", Offset = "0x13A7A84", VA = "0x13A7A84")]
		public FTail_AnimatorLegacy()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class FTail_AnimatorUI : FTail_Animator
	{
		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool Lock2D;

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x13A7A88", Offset = "0x13A7A88", VA = "0x13A7A88", Slot = "18")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x13A4BB4", Offset = "0x13A4BB4", VA = "0x13A4BB4", Slot = "11")]
		protected override Quaternion CalculateTargetRotation(Vector3 startLookPos, Vector3 currentPos, [Optional] FTail_Point previousTailPoint, [Optional] FTail_Point currentTailPoint, int lookDirectionFixIndex = 0)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x13A4CEC", Offset = "0x13A4CEC", VA = "0x13A4CEC")]
		public FTail_AnimatorUI()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class FTail_Demo_FixedUpdateLimit : FTail_Animator
	{
		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA19020", Offset = "0xA19020")]
		public bool UseXLimitation;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float WorldXDontGoUnder;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float PushTime;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float PushPower;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Vector3 TrueTailRotationOffset;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		protected float pushTimer;

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x13A7B40", Offset = "0x13A7B40", VA = "0x13A7B40")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x13A7B4C", Offset = "0x13A7B4C", VA = "0x13A7B4C", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x13A7B84", Offset = "0x13A7B84", VA = "0x13A7B84", Slot = "15")]
		internal override void Update()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x13A7BA0", Offset = "0x13A7BA0", VA = "0x13A7BA0", Slot = "17")]
		internal override void FixedUpdate()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x13A7BBC", Offset = "0x13A7BBC", VA = "0x13A7BBC", Slot = "8")]
		protected override void CalculateOffsets()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x13A84E4", Offset = "0x13A84E4", VA = "0x13A84E4")]
		private static float LimitAngle360(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x13A851C", Offset = "0x13A851C", VA = "0x13A851C")]
		public FTail_Demo_FixedUpdateLimit()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class FTail_Demo_LeverBlend : MonoBehaviour
	{
		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FBasic_PullableLever lever;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FTail_AnimatorBlending tailToBlend;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform TailSegmentsContainer;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool blendChain;

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x13A85B0", Offset = "0x13A85B0", VA = "0x13A85B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x13A85EC", Offset = "0x13A85EC", VA = "0x13A85EC")]
		public FTail_Demo_LeverBlend()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class FTail_Demo_LeverUsage : MonoBehaviour
	{
		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TargetToMove;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 TargetLocalOffset;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 initPosition;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion initRotation;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FBasic_PullableLever lever;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool RotationLever;

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x13A85F4", Offset = "0x13A85F4", VA = "0x13A85F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x13A8670", Offset = "0x13A8670", VA = "0x13A8670")]
		private void Update()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x13A8820", Offset = "0x13A8820", VA = "0x13A8820")]
		public FTail_Demo_LeverUsage()
		{
		}
	}
}
namespace FIMSpace.FLook
{
	[Token(Token = "0x200039E")]
	public class FLookAnimator_DemoUI : MonoBehaviour
	{
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle headSpine;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider rotationSpeed;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider animationBlend;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Toggle rotAsOffsets;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle anchor;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider compensation;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA19058", Offset = "0xA19058")]
		public FLookAnimator headLook;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FLookAnimator spineLook;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool switchingComponents;

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x1315BE8", Offset = "0x1315BE8", VA = "0x1315BE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x1315E7C", Offset = "0x1315E7C", VA = "0x1315E7C")]
		private void SwitchingFinished()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1315EBC", Offset = "0x1315EBC", VA = "0x1315EBC")]
		public FLookAnimator_DemoUI()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class FLookAnimator_Demo_TriggeredMomentTarget : MonoBehaviour
	{
		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeOfLooking;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject generatedFollow;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer rend;

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x1315EC4", Offset = "0x1315EC4", VA = "0x1315EC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x1315F1C", Offset = "0x1315F1C", VA = "0x1315F1C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x131605C", Offset = "0x131605C", VA = "0x131605C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x13161B0", Offset = "0x13161B0", VA = "0x13161B0")]
		public FLookAnimator_Demo_TriggeredMomentTarget()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class FLookAnimator : MonoBehaviour
	{
		[Token(Token = "0x200058A")]
		public enum EFAxisFixOrder
		{
			[Token(Token = "0x4001FE7")]
			Parental,
			[Token(Token = "0x4001FE8")]
			FromBased,
			[Token(Token = "0x4001FE9")]
			FullManual,
			[Token(Token = "0x4001FEA")]
			ZYX
		}

		[Token(Token = "0x200058B")]
		private enum EFHeadLookState
		{
			[Token(Token = "0x4001FEC")]
			Null,
			[Token(Token = "0x4001FED")]
			Following,
			[Token(Token = "0x4001FEE")]
			OutOfMaxRotation,
			[Token(Token = "0x4001FEF")]
			ClampedAngle,
			[Token(Token = "0x4001FF0")]
			OutOfMaxDistance
		}

		[Token(Token = "0x200058C")]
		private class CustomBackBone
		{
			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0x131575C", Offset = "0x131575C", VA = "0x131575C")]
			public CustomBackBone(Transform t, int i)
			{
			}
		}

		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04C00", Offset = "0xA04C00")]
		private sealed class <SwitchLookingTransition>d__118 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float transitionTime;

			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool enableAnimation;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <time>5__2;

			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <startBlend>5__3;

			[Token(Token = "0x170002C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA5")]
				[Address(RVA = "0x1315B78", Offset = "0x1315B78", VA = "0x1315B78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA7")]
				[Address(RVA = "0x1315BE0", Offset = "0x1315BE0", VA = "0x1315BE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0x1315404", Offset = "0x1315404", VA = "0x1315404")]
			[DebuggerHidden]
			public <SwitchLookingTransition>d__118(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x1315A40", Offset = "0x1315A40", VA = "0x1315A40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0x1315A44", Offset = "0x1315A44", VA = "0x1315A44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x1315B80", Offset = "0x1315B80", VA = "0x1315B80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1906C", Offset = "0xA1906C")]
		public Transform ObjectToFollow;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform preObjectToFollow;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA190A4", Offset = "0xA190A4")]
		public Transform LeadBone;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA190DC", Offset = "0xA190DC")]
		public Transform BaseTransform;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA19114", Offset = "0xA19114")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19114", Offset = "0xA19114")]
		public float RotationSpeed;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1916C", Offset = "0xA1916C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1916C", Offset = "0xA1916C")]
		public float UltraSmoother;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA191C0", Offset = "0xA191C0")]
		public bool Prevent180Error;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int BackBonesCount;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA191F8", Offset = "0xA191F8")]
		public Transform[] BackBonesTransforms;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<CustomBackBone> customBackBones;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19208", Offset = "0xA19208")]
		public bool StartAfterTPose;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int helpTPose;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19240", Offset = "0xA19240")]
		public bool CurveSpread;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19278", Offset = "0xA19278")]
		public AnimationCurve BackBonesFalloff;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA192B0", Offset = "0xA192B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA192B0", Offset = "0xA192B0")]
		public float FaloffValue;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19304", Offset = "0xA19304")]
		public float MaximumDistance;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1933C", Offset = "0xA1933C")]
		public Vector2 XRotationLimits;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA19374", Offset = "0xA19374")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19374", Offset = "0xA19374")]
		public float XElasticRange;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector2 YRotationLimits;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA193CC", Offset = "0xA193CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA193CC", Offset = "0xA193CC")]
		public float YElasticRange;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA19424", Offset = "0xA19424")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA19424", Offset = "0xA19424")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19424", Offset = "0xA19424")]
		public float MaxRotationDiffrence;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA194A8", Offset = "0xA194A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA194A8", Offset = "0xA194A8")]
		public float DeltaAccelerationRange;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA19500", Offset = "0xA19500")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19500", Offset = "0xA19500")]
		public float ChangeTargetSpeed;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 LookDirection;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 HeadUpDirection;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19558", Offset = "0xA19558")]
		public Vector3 ManualFromAxis;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector3 ManualToAxis;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Vector3 FromAuto;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Vector3 OffsetAuto;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public Vector3 ReferenceLookForward;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Vector3 ReferenceUp;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public Vector3 DynamicReferenceUp;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19590", Offset = "0xA19590")]
		public EFAxisFixOrder FixingPreset;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA195C8", Offset = "0xA195C8")]
		public Vector3 RotationOffset;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19600", Offset = "0xA19600")]
		public Vector3 BackBonesAddOffset;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19638", Offset = "0xA19638")]
		public Vector3 RotCorrectionMultiplier;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19670", Offset = "0xA19670")]
		public bool DebugRays;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA196A8", Offset = "0xA196A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA196A8", Offset = "0xA196A8")]
		public float BlendToOriginal;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA196FC", Offset = "0xA196FC")]
		public Vector3 LookReferenceOffset;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19734", Offset = "0xA19734")]
		public bool AnchorReferencePoint;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1976C", Offset = "0xA1976C")]
		public bool RefreshAnchor;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA197A4", Offset = "0xA197A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA197A4", Offset = "0xA197A4")]
		public float LeadBoneWeight;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA197F8", Offset = "0xA197F8")]
		public bool AnimateWithSource;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19830", Offset = "0xA19830")]
		public bool MonitorAnimator;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA19868", Offset = "0xA19868")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA19868", Offset = "0xA19868")]
		public List<Transform> CompensationBones;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA198DC", Offset = "0xA198DC")]
		public float CompensationWeight;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool CompensatePositions;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
		public bool CompensatePositionsNotAnimated;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA198F4", Offset = "0xA198F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA198F4", Offset = "0xA198F4")]
		public float WeightsMultiplier;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public int bonesNotAnimated;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private EFHeadLookState lookState;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Transform lookStartReferenceTransform;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float localAnimationWeight;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float deltaLerpAccelerator;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector2 lastDeltaVector;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float holdGoBack;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float changeTargetSmootherWeight;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float changeTargetSmootherBones;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Quaternion headLerpRot;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Quaternion headLerpRotUltra;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Quaternion[] lerpRotations;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Quaternion[] lerpRotationsUltra;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19948", Offset = "0xA19948")]
		private float[] <RotationWeights>k__BackingField;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19958", Offset = "0xA19958")]
		private Vector3 <LastLookStartPosition>k__BackingField;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA19968", Offset = "0xA19968")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19968", Offset = "0xA19968")]
		public float BigAngleSmoother;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Quaternion[] defautLocalRots;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Transform momentLookTransform;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool wasMomentLookTransform;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Quaternion[] compensationRotations;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Vector3[] compensationPositions;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private bool targetExists;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		private bool smoothingOutOfMaxRange;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private Quaternion targetLookRotation;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Quaternion[] newBonesRotations;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Quaternion[] poseReferenceRotations;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Quaternion[] lerpedReferenceRotations;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Quaternion mainReferenceRotation;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Quaternion lerpedMainReferenceRotation;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Quaternion[] staticRotations;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Transform anchorHelper;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Animator animator;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private int lastClipHash;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private bool initialized;

		[Token(Token = "0x170001B4")]
		public float[] RotationWeights
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0x130E8B8", Offset = "0x130E8B8", VA = "0x130E8B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22208", Offset = "0xA22208")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x130E8C0", Offset = "0x130E8C0", VA = "0x130E8C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22218", Offset = "0xA22218")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public Vector3 LastLookStartPosition
		{
			[Token(Token = "0x600176B")]
			[Address(RVA = "0x130E8C8", Offset = "0x130E8C8", VA = "0x130E8C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22228", Offset = "0xA22228")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600176C")]
			[Address(RVA = "0x130E8D8", Offset = "0x130E8D8", VA = "0x130E8D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22238", Offset = "0xA22238")]
			private set
			{
			}
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x130E8E8", Offset = "0x130E8E8", VA = "0x130E8E8")]
		private void Reset()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x130EA44", Offset = "0x130EA44", VA = "0x130EA44")]
		private void Init()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x130FAAC", Offset = "0x130FAAC", VA = "0x130FAAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x130F634", Offset = "0x130F634", VA = "0x130F634")]
		private void ComputeBonesRotationsFixVariables()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x130FABC", Offset = "0x130FABC", VA = "0x130FABC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x130FC24", Offset = "0x130FC24", VA = "0x130FC24", Slot = "4")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x1310760", Offset = "0x1310760", VA = "0x1310760")]
		private void BasicCalculations()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x13131A4", Offset = "0x13131A4", VA = "0x13131A4")]
		private void ChangeBonesRotations()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x1313564", Offset = "0x1313564", VA = "0x1313564")]
		private Vector3? GetTargetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x13136C8", Offset = "0x13136C8", VA = "0x13136C8")]
		private Vector3 CalculateTargetLookRotation(Vector3 lookPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x1310C84", Offset = "0x1310C84", VA = "0x1310C84")]
		private void CalculateLookAnimation()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x1314B7C", Offset = "0x1314B7C", VA = "0x1314B7C")]
		private Vector3 WrapVector(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x13140D8", Offset = "0x13140D8", VA = "0x13140D8")]
		private Quaternion LookRotationParental(Vector3 startLookPosition, Vector3 targetPosition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x13139AC", Offset = "0x13139AC", VA = "0x13139AC")]
		private Vector2 CalculateLimitationAndStuff(Vector3 angles)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x1314B48", Offset = "0x1314B48", VA = "0x1314B48")]
		public float AnglePositive(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x1314DC0", Offset = "0x1314DC0", VA = "0x1314DC0")]
		public void SwitchLooking([Optional] bool? enableLooking, float transitionTime = 0.2f, [Optional] Action callback)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x13150C4", Offset = "0x13150C4", VA = "0x13150C4")]
		public void SetLookTarget(Transform transform)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x13150D0", Offset = "0x13150D0", VA = "0x13150D0")]
		public GameObject SetMomentLookTarget([Optional] Transform parent, [Optional] Vector3? position, [Optional][MetadataOffset(Offset = "0x3C33D3")] float? destroyTimer)
		{
			return null;
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x131533C", Offset = "0x131533C", VA = "0x131533C")]
		public void ForceDestroyMomentTarget()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x1310C38", Offset = "0x1310C38", VA = "0x1310C38")]
		public void SmoothChangeTarget(float value, float bonesSmoother = 0.8f, bool overrideIfSlower = false)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x1310264", Offset = "0x1310264", VA = "0x1310264")]
		public void RememberCurrentBonesRotations(bool resetLerpRotations = false)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x13147A0", Offset = "0x13147A0", VA = "0x13147A0")]
		private Vector3 ConvertFlippedAxes(Vector3 rotations)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x1314BFC", Offset = "0x1314BFC", VA = "0x1314BFC")]
		public static float AngleAroundAxis(Vector3 firstDirection, Vector3 secondDirection, Vector3 axis)
		{
			return default(float);
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x130F5DC", Offset = "0x130F5DC", VA = "0x130F5DC")]
		private Transform GetParentBone(int index)
		{
			return null;
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x130F200", Offset = "0x130F200", VA = "0x130F200")]
		private void GetAdditionalBones(bool resetRotation = false)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1310484", Offset = "0x1310484", VA = "0x1310484")]
		private void ResetBonesLerps(bool onlyIfNull = false)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x130EECC", Offset = "0x130EECC", VA = "0x130EECC")]
		private void CalculateBonesRotationsWeights()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x1315028", Offset = "0x1315028", VA = "0x1315028")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA22248", Offset = "0xA22248")]
		private IEnumerator SwitchLookingTransition(float transitionTime, bool enableAnimation, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x1315430", Offset = "0x1315430", VA = "0x1315430")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x13154D8", Offset = "0x13154D8", VA = "0x13154D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x13155AC", Offset = "0x13155AC", VA = "0x13155AC")]
		public void UpdateForCustomInspector()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x13155D4", Offset = "0x13155D4", VA = "0x13155D4")]
		public void AddCustomBackbone(Transform t, int index)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x130E8EC", Offset = "0x130E8EC", VA = "0x130E8EC")]
		public void FindBaseTransform()
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x1314A30", Offset = "0x1314A30", VA = "0x1314A30")]
		private Quaternion LinearInterpolateRotation(Quaternion start, Quaternion end, float value)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x1315798", Offset = "0x1315798", VA = "0x1315798")]
		public FLookAnimator()
		{
		}
	}
}
namespace FIMSpace.Jiggling
{
	[Token(Token = "0x20003A1")]
	public abstract class FJiggling_Base : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200058E")]
		public class TrigonoParams
		{
			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Value;

			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Multiplier;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float TimeOffset;

			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float RandomTimeMul;

			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x13A90F8", Offset = "0x13A90F8", VA = "0x13A90F8")]
			public void Randomize()
			{
			}

			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0x13A90F0", Offset = "0x13A90F0", VA = "0x13A90F0")]
			public TrigonoParams()
			{
			}
		}

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA199C4", Offset = "0xA199C4")]
		public float JiggleTiltValue;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA199FC", Offset = "0xA199FC")]
		public float JiggleFrequency;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19A34", Offset = "0xA19A34")]
		public float JiggleDecelerate;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19A6C", Offset = "0xA19A6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA19A6C", Offset = "0xA19A6C")]
		public float AdditionalSpeedValue;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19AC0", Offset = "0xA19AC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA19AC0", Offset = "0xA19AC0")]
		public float ConstantJiggleValue;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float time;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool animationFinished;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<TrigonoParams> trigParams;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19B14", Offset = "0xA19B14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA19B14", Offset = "0xA19B14")]
		public int RandomLevel;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected float targetPowerValue;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float easedPowerProgress;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected float currentJigglePower;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool reJiggled;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		protected bool initialized;

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x13A8944", Offset = "0x13A8944", VA = "0x13A8944", Slot = "4")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x13A8EAC", Offset = "0x13A8EAC", VA = "0x13A8EAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x13A8EB8", Offset = "0x13A8EB8", VA = "0x13A8EB8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x13A8EF8", Offset = "0x13A8EF8", VA = "0x13A8EF8", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x13A8F40", Offset = "0x13A8F40", VA = "0x13A8F40", Slot = "6")]
		protected virtual void OnAnimationFinish()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x13A8F44", Offset = "0x13A8F44", VA = "0x13A8F44", Slot = "7")]
		public virtual void StartJiggle()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x13A8FD8", Offset = "0x13A8FD8", VA = "0x13A8FD8", Slot = "8")]
		protected virtual void ReJiggle()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x13A8FE4", Offset = "0x13A8FE4", VA = "0x13A8FE4", Slot = "9")]
		protected virtual void RandomizeVariables()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x13A916C", Offset = "0x13A916C", VA = "0x13A916C", Slot = "10")]
		protected virtual void CalculateTrigonometricVariables(float timeMultiplier = 1f)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x13A8D4C", Offset = "0x13A8D4C", VA = "0x13A8D4C", Slot = "11")]
		protected virtual void CalculateJiggle()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x13A93C0", Offset = "0x13A93C0", VA = "0x13A93C0")]
		public static float EaseInOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x13A8E78", Offset = "0x13A8E78", VA = "0x13A8E78")]
		protected FJiggling_Base()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class FJiggling_Active : FJiggling_Base
	{
		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA19B68", Offset = "0xA19B68")]
		public Transform TransformToAnimate;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA19BA0", Offset = "0xA19BA0")]
		public Vector3 ScaleAxesMultiplier;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 RotationAxesMultiplier;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Quaternion initRotation;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Vector3 initScale;

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x13A8830", Offset = "0x13A8830", VA = "0x13A8830", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x13A899C", Offset = "0x13A899C", VA = "0x13A899C", Slot = "11")]
		protected override void CalculateJiggle()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x13A8D98", Offset = "0x13A8D98", VA = "0x13A8D98")]
		public FJiggling_Active()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class FJiggling_Grow : FJiggling_Simple
	{
		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float GrowShrinkSpeed;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float growProgress;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected bool shrinking;

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x13A9780", Offset = "0x13A9780", VA = "0x13A9780")]
		public void ToggleGrowShrink()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x13A97A4", Offset = "0x13A97A4", VA = "0x13A97A4", Slot = "13")]
		public virtual void StartGrowing()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x13A97B4", Offset = "0x13A97B4", VA = "0x13A97B4", Slot = "14")]
		public virtual void StartShrinking()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x13A97C8", Offset = "0x13A97C8", VA = "0x13A97C8", Slot = "8")]
		protected override void ReJiggle()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x13A97CC", Offset = "0x13A97CC", VA = "0x13A97CC", Slot = "11")]
		protected override void CalculateJiggle()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x13A9F34", Offset = "0x13A9F34", VA = "0x13A9F34", Slot = "6")]
		protected override void OnAnimationFinish()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x13A9F54", Offset = "0x13A9F54", VA = "0x13A9F54")]
		protected void ResetInitialPosRot()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x13A9FA4", Offset = "0x13A9FA4", VA = "0x13A9FA4")]
		public FJiggling_Grow()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class FJiggling_Multi : FJiggling_Base
	{
		[Serializable]
		[Token(Token = "0x200058F")]
		public class FJiggling_Element
		{
			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Transform;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 RotationAxesMul;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 ScaleAxesMul;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 InitPos;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion InitRot;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 InitScale;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<TrigonoParams> trigParams;

			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0x13AB380", Offset = "0x13AB380", VA = "0x13AB380")]
			public FJiggling_Element(Transform target)
			{
			}
		}

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA19BD8", Offset = "0xA19BD8")]
		public List<FJiggling_Element> ToJiggle;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA19BE8", Offset = "0xA19BE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19BE8", Offset = "0xA19BE8")]
		public bool SeparatedCalculations;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool BonesNotAnimatedByAnimator;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0xA19C48", Offset = "0xA19C48")]
		public bool ShowIndividualOptions;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA19C58", Offset = "0xA19C58")]
		public Vector3 ScaleAxesMultiplier;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 RotationAxesMultiplier;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA19C90", Offset = "0xA19C90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19C90", Offset = "0xA19C90")]
		public float ReJigglePower;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float reJiggleProgress;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float reJiggleValue;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float reJiggleRandomOffset;

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x13A9FB0", Offset = "0x13A9FB0", VA = "0x13A9FB0", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x13AA208", Offset = "0x13AA208", VA = "0x13AA208", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x13AA20C", Offset = "0x13AA20C", VA = "0x13AA20C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x13AA868", Offset = "0x13AA868", VA = "0x13AA868")]
		private void CalculateJigglingFor(int index)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x13AAC64", Offset = "0x13AAC64", VA = "0x13AAC64")]
		protected void CalculateTrigonoFor(int i)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x13AADE0", Offset = "0x13AADE0", VA = "0x13AADE0", Slot = "9")]
		protected override void RandomizeVariables()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x13AAFB0", Offset = "0x13AAFB0", VA = "0x13AAFB0")]
		public void AddNewElement(FJiggling_Element el)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x13AB0B4", Offset = "0x13AB0B4", VA = "0x13AB0B4")]
		public void RemoveElement(FJiggling_Element el)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x13AB11C", Offset = "0x13AB11C", VA = "0x13AB11C")]
		public void RemoveElement(int index)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x13AB184", Offset = "0x13AB184", VA = "0x13AB184")]
		public void ClearElements()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x13AB1DC", Offset = "0x13AB1DC", VA = "0x13AB1DC")]
		public bool ContainsElement(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x13AB2BC", Offset = "0x13AB2BC", VA = "0x13AB2BC")]
		public FJiggling_Multi()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class FJiggling_Rect : FJiggling_Simple
	{
		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected RectTransform RectTransformToAnimate;

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x13AB41C", Offset = "0x13AB41C", VA = "0x13AB41C", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x13AB534", Offset = "0x13AB534", VA = "0x13AB534")]
		public FJiggling_Rect()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class FJiggling_Simple : FJiggling_Base
	{
		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform TransformToAnimate;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA19CE0", Offset = "0xA19CE0")]
		public Vector3 ScaleAxesMultiplier;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 RotationAxesMultiplier;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Quaternion initRotation;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Vector3 initScale;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA19D18", Offset = "0xA19D18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19D18", Offset = "0xA19D18")]
		public float ReJigglePower;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float reJiggleProgress;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected float reJiggleValue;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected float reJiggleRandomOffset;

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x13A945C", Offset = "0x13A945C", VA = "0x13A945C", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x13AB538", Offset = "0x13AB538", VA = "0x13AB538", Slot = "12")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x13AB560", Offset = "0x13AB560", VA = "0x13AB560", Slot = "7")]
		public override void StartJiggle()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x13AB5A4", Offset = "0x13AB5A4", VA = "0x13AB5A4", Slot = "8")]
		protected override void ReJiggle()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x13A99E4", Offset = "0x13A99E4", VA = "0x13A99E4", Slot = "11")]
		protected override void CalculateJiggle()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x13A9F58", Offset = "0x13A9F58", VA = "0x13A9F58", Slot = "6")]
		protected override void OnAnimationFinish()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x13A95FC", Offset = "0x13A95FC", VA = "0x13A95FC")]
		public FJiggling_Simple()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class FJiggling_SimpleBones : FJiggling_Simple
	{
		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool NoRotationKeyframes;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion initialKeyRotation;

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x13AB5B8", Offset = "0x13AB5B8", VA = "0x13AB5B8", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x13AB5FC", Offset = "0x13AB5FC", VA = "0x13AB5FC", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x13AB600", Offset = "0x13AB600", VA = "0x13AB600", Slot = "13")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x13AB66C", Offset = "0x13AB66C", VA = "0x13AB66C")]
		public FJiggling_SimpleBones()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class FJiggling_Demo_Limb : FJiggling_Simple
	{
		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool NoRotationKeyframes;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion initialKeyRotation;

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x13A9418", Offset = "0x13A9418", VA = "0x13A9418", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x13A957C", Offset = "0x13A957C", VA = "0x13A957C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x13A9580", Offset = "0x13A9580", VA = "0x13A9580", Slot = "13")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x13A95EC", Offset = "0x13A95EC", VA = "0x13A95EC")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x13A95F8", Offset = "0x13A95F8", VA = "0x13A95F8")]
		public FJiggling_Demo_Limb()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class FJiggling_Demo_TriggerJiggleOnClick : MonoBehaviour
	{
		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FJiggling_Base JiggleScript;

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x13A96E4", Offset = "0x13A96E4", VA = "0x13A96E4")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x13A9778", Offset = "0x13A9778", VA = "0x13A9778")]
		public FJiggling_Demo_TriggerJiggleOnClick()
		{
		}
	}
}
namespace FIMSpace.Audio
{
	[Token(Token = "0x20003AA")]
	public class FBasic_FheelekFighter : FBasic_FheelekController
	{
		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private AudioSource HitSource;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioClip SwingAudioClip;

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xEEB0C8", Offset = "0xEEB0C8", VA = "0xEEB0C8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xEEB160", Offset = "0xEEB160", VA = "0xEEB160", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xEEB1F0", Offset = "0xEEB1F0", VA = "0xEEB1F0")]
		public void ESwing()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xEEB21C", Offset = "0xEEB21C", VA = "0xEEB21C")]
		public void EHit()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xEEB220", Offset = "0xEEB220", VA = "0xEEB220")]
		public FBasic_FheelekFighter()
		{
		}
	}
}
namespace FIMSpace.Basics
{
	[Token(Token = "0x20003AB")]
	public class FBasic_FlyMovement : MonoBehaviour
	{
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19D68", Offset = "0xA19D68")]
		public float MainSpeed;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19DA0", Offset = "0xA19DA0")]
		public Vector3 RangeValue;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19DD8", Offset = "0xA19DD8")]
		public float RangeMul;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19E10", Offset = "0xA19E10")]
		public float AddYSin;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float AddYSinTimeSpeed;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19E48", Offset = "0xA19E48")]
		public float RotateForwardSpeed;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float time;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 offset;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 initPos;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 preOffsetNoYAdd;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 posOffsetNoYAdd;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 speeds;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 randomVector1;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 randomVector2;

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1306464", Offset = "0x1306464", VA = "0x1306464")]
		private void Start()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1306514", Offset = "0x1306514", VA = "0x1306514")]
		private void Update()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1306928", Offset = "0x1306928", VA = "0x1306928")]
		public FBasic_FlyMovement()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class FBasic_FollowTarget : MonoBehaviour
	{
		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19E80", Offset = "0xA19E80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA19E80", Offset = "0xA19E80")]
		public float MoveSpeed;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform TargetTransform;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 PositionOffsetInTargetSpace;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public EFUpdateClock UpdateClock;

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x13069B4", Offset = "0x13069B4", VA = "0x13069B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1306BC8", Offset = "0x1306BC8", VA = "0x1306BC8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x1306BDC", Offset = "0x1306BDC", VA = "0x1306BDC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x13069C4", Offset = "0x13069C4", VA = "0x13069C4")]
		private void Follow()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x1306BF0", Offset = "0x1306BF0", VA = "0x1306BF0")]
		public FBasic_FollowTarget()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class FBasic_HoldPosition : MonoBehaviour
	{
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19ED8", Offset = "0xA19ED8")]
		public float HoldPower;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool ResetRigidbodyVelocity;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Vector3 initialPosition;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Rigidbody rigidbodyToHold;

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x1307344", Offset = "0x1307344", VA = "0x1307344", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x13073C8", Offset = "0x13073C8", VA = "0x13073C8", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x130758C", Offset = "0x130758C", VA = "0x130758C")]
		public FBasic_HoldPosition()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class FBasic_SlideObjectTo : MonoBehaviour
	{
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FEasing.EFease EaseFunction;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19F10", Offset = "0xA19F10")]
		public float Duration;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19F48", Offset = "0xA19F48")]
		public Vector3 OffsetPosition;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19F80", Offset = "0xA19F80")]
		public Vector3 OffsetRotation;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool goToTarget;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float time;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 initPos;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion initRot;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected FEasing.Function func;

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x130C2A0", Offset = "0x130C2A0", VA = "0x130C2A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x130C30C", Offset = "0x130C30C", VA = "0x130C30C", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x130C540", Offset = "0x130C540", VA = "0x130C540")]
		public void ToggleMove()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x130C59C", Offset = "0x130C59C", VA = "0x130C59C")]
		public void MoveToTarget()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x130C5DC", Offset = "0x130C5DC", VA = "0x130C5DC")]
		public void MoveBack()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x130C618", Offset = "0x130C618", VA = "0x130C618")]
		public FBasic_SlideObjectTo()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class FBasic_ObjectVibrate : MonoBehaviour
	{
		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19FB8", Offset = "0xA19FB8")]
		public float VibrationRate;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA19FF0", Offset = "0xA19FF0")]
		public float BaseRange;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A028", Offset = "0xA1A028")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1A028", Offset = "0xA1A028")]
		public float SmoothTranslation;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] randomOffsets;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A07C", Offset = "0xA1A07C")]
		private Vector3 <initialPosition>k__BackingField;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A08C", Offset = "0xA1A08C")]
		private Vector3 <localPosition>k__BackingField;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float time;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float speed;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float range;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal float intensity;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 AxesMultiplier;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool ChangeObjectPosition;

		[Token(Token = "0x170001B6")]
		public Vector3 initialPosition
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x1308C80", Offset = "0x1308C80", VA = "0x1308C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA222AC", Offset = "0xA222AC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x1308C8C", Offset = "0x1308C8C", VA = "0x1308C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA222BC", Offset = "0xA222BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public Vector3 localPosition
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x1308C98", Offset = "0x1308C98", VA = "0x1308C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA222CC", Offset = "0xA222CC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x1308CA4", Offset = "0x1308CA4", VA = "0x1308CA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA222DC", Offset = "0xA222DC")]
			private set
			{
			}
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x1308CB0", Offset = "0x1308CB0", VA = "0x1308CB0")]
		private void Start()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x1308E90", Offset = "0x1308E90", VA = "0x1308E90")]
		private void Update()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1308D98", Offset = "0x1308D98", VA = "0x1308D98")]
		public void ChooseNewSeed()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1309400", Offset = "0x1309400", VA = "0x1309400")]
		public FBasic_ObjectVibrate()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class FBasic_PowerUpObject : MonoBehaviour
	{
		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A09C", Offset = "0xA1A09C")]
		public float YFloatingValue;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FloatingSpeedRate;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RotationSpeed;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A0D4", Offset = "0xA1A0D4")]
		public string TagToCollideWith;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initPosition;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float randomOffset;

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x13094AC", Offset = "0x13094AC", VA = "0x13094AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x1309544", Offset = "0x1309544", VA = "0x1309544")]
		private void Update()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x13096A8", Offset = "0x13096A8", VA = "0x13096A8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x1309704", Offset = "0x1309704", VA = "0x1309704")]
		protected void Collect()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1309780", Offset = "0x1309780", VA = "0x1309780")]
		public FBasic_PowerUpObject()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class FBasic_RotateSpinSin : MonoBehaviour
	{
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A10C", Offset = "0xA1A10C")]
		public Vector3 RotationAxis;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A144", Offset = "0xA1A144")]
		public float RotationRange;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A17C", Offset = "0xA1A17C")]
		public float SinSpeed;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float time;

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x130B7B8", Offset = "0x130B7B8", VA = "0x130B7B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x130B7F0", Offset = "0x130B7F0", VA = "0x130B7F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x130B924", Offset = "0x130B924", VA = "0x130B924")]
		public FBasic_RotateSpinSin()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class FBasic_RotateTo : MonoBehaviour
	{
		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 TargetRotation;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationSpeed;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UnscaledDeltaTime;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform TargetTransform;

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x130B9A8", Offset = "0x130B9A8", VA = "0x130B9A8", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x130BC00", Offset = "0x130BC00", VA = "0x130BC00")]
		public FBasic_RotateTo()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class FBasic_Rotator : MonoBehaviour
	{
		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 RotationAxis;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationSpeed;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UnscaledDeltaTime;

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x130BC64", Offset = "0x130BC64", VA = "0x130BC64", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x130BD90", Offset = "0x130BD90", VA = "0x130BD90")]
		public FBasic_Rotator()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class FBasic_Shared_PanelAnimations : MonoBehaviour
	{
		[Token(Token = "0x2000590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04C10", Offset = "0xA04C10")]
		private sealed class <ClickAniamtion>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FBasic_Shared_PanelAnimations <>4__this;

			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <currentPos>5__3;

			[Token(Token = "0x170002CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DAE")]
				[Address(RVA = "0x130C230", Offset = "0x130C230", VA = "0x130C230", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB0")]
				[Address(RVA = "0x130C298", Offset = "0x130C298", VA = "0x130C298", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0x130BF24", Offset = "0x130BF24", VA = "0x130BF24")]
			[DebuggerHidden]
			public <ClickAniamtion>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x130BF64", Offset = "0x130BF64", VA = "0x130BF64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0x130BF68", Offset = "0x130BF68", VA = "0x130BF68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x130C238", Offset = "0x130C238", VA = "0x130C238", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A1B4", Offset = "0xA1A1B4")]
		public float AnimationTime;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A1EC", Offset = "0xA1A1EC")]
		public float EaseExtraValue;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform buttonTransform;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 buttonInitPosition;

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x130BDFC", Offset = "0x130BDFC", VA = "0x130BDFC", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x130BE7C", Offset = "0x130BE7C", VA = "0x130BE7C", Slot = "5")]
		public virtual void Click()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x130BEB4", Offset = "0x130BEB4", VA = "0x130BEB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA222EC", Offset = "0xA222EC")]
		private IEnumerator ClickAniamtion()
		{
			return null;
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x130BF50", Offset = "0x130BF50", VA = "0x130BF50")]
		public FBasic_Shared_PanelAnimations()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class FBasic_Spinner : FBasic_Rotator
	{
		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A224", Offset = "0xA1A224")]
		public float DeceleratePower;

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x130C6AC", Offset = "0x130C6AC", VA = "0x130C6AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x130C6B4", Offset = "0x130C6B4", VA = "0x130C6B4", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x130C7D8", Offset = "0x130C7D8", VA = "0x130C7D8")]
		public void Spin(float power = 500f)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x130C7E0", Offset = "0x130C7E0", VA = "0x130C7E0")]
		public FBasic_Spinner()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class FBasic_TimedExecutor : MonoBehaviour
	{
		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A25C", Offset = "0xA1A25C")]
		public Vector2 RandomTimerRange;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent ToExecute;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float timer;

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x130D45C", Offset = "0x130D45C", VA = "0x130D45C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x130D4B4", Offset = "0x130D4B4", VA = "0x130D4B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x130D488", Offset = "0x130D488", VA = "0x130D488")]
		private void ResetTimer()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x130D514", Offset = "0x130D514", VA = "0x130D514")]
		public FBasic_TimedExecutor()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class FBasic_TranslateTransformSpace : MonoBehaviour
	{
		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 TranslationAxis;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TranslationSpeed;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UnscaledDeltaTime;

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x130D55C", Offset = "0x130D55C", VA = "0x130D55C", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x130D6A0", Offset = "0x130D6A0", VA = "0x130D6A0")]
		public FBasic_TranslateTransformSpace()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class FBasic_FreeCameraBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A294", Offset = "0xA1A294")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A294", Offset = "0xA1A294")]
		public float SpeedMultiplier;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A2F4", Offset = "0xA1A2F4")]
		public float AccelerationSmothnessValue;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A32C", Offset = "0xA1A32C")]
		public float RotationSmothnessValue;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MouseSensitivity;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float turboModeMultiply;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 speeds;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float ySpeed;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 rotation;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float turbo;

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x1306C00", Offset = "0x1306C00", VA = "0x1306C00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x1306CB8", Offset = "0x1306CB8", VA = "0x1306CB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x13072D8", Offset = "0x13072D8", VA = "0x13072D8")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x1307320", Offset = "0x1307320", VA = "0x1307320")]
		public FBasic_FreeCameraBehaviour()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class FBasic_TPPCameraBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A364", Offset = "0xA1A364")]
		public Transform ToFollow;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A39C", Offset = "0xA1A39C")]
		public Vector3 FollowingOffset;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A3D4", Offset = "0xA1A3D4")]
		public Vector3 FollowingOffsetDirection;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A40C", Offset = "0xA1A40C")]
		public Vector2 DistanceRanges;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float targetDistance;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float animatedDistance;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 RotationRanges;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 targetSphericRotation;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 animatedSphericRotation;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA1A444", Offset = "0xA1A444")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A444", Offset = "0xA1A444")]
		public float RotationSensitivity;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A494", Offset = "0xA1A494")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1A494", Offset = "0xA1A494")]
		public float RotationSpeed;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A4EC", Offset = "0xA1A4EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1A4EC", Offset = "0xA1A4EC")]
		public float HardFollowValue;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A540", Offset = "0xA1A540")]
		public bool LockCursor;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool rotateCamera;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit sightObstacleHit;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A578", Offset = "0xA1A578")]
		public LayerMask SightLayerMask;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 targetPosition;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A5B0", Offset = "0xA1A5B0")]
		public float CollisionOffset;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public EFUpdateClock UpdateClock;

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x130C7EC", Offset = "0x130C7EC", VA = "0x130C7EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x130C8A4", Offset = "0x130C8A4", VA = "0x130C8A4")]
		private void UpdateMethods()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x130D23C", Offset = "0x130D23C", VA = "0x130D23C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x130D250", Offset = "0x130D250", VA = "0x130D250")]
		private void Update()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x130D260", Offset = "0x130D260", VA = "0x130D260")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x130C8E0", Offset = "0x130C8E0", VA = "0x130C8E0")]
		private void InputCalculations()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x130C9A8", Offset = "0x130C9A8", VA = "0x130C9A8")]
		private void ZoomCalculations()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x130CACC", Offset = "0x130CACC", VA = "0x130CACC")]
		private void FollowCalculations()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x130CDD4", Offset = "0x130CDD4", VA = "0x130CDD4")]
		private void RaycastCalculations()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x130D1E8", Offset = "0x130D1E8", VA = "0x130D1E8")]
		private void SwitchCalculations()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x130D274", Offset = "0x130D274", VA = "0x130D274")]
		private float HelperClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x130C84C", Offset = "0x130C84C", VA = "0x130C84C")]
		private void HelperSwitchCursor()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x130D324", Offset = "0x130D324", VA = "0x130D324")]
		public FBasic_TPPCameraBehaviour()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public abstract class FBasic_CharacterHorizontalBase : FBasic_CharacterMovementBase
	{
		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected float accelerationRight;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Vector3 newVelocityRight;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastTargetVelocityRight;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float horizontalValue;

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x1302614", Offset = "0x1302614", VA = "0x1302614", Slot = "8")]
		protected override void MovementCalculations()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x13027D0", Offset = "0x13027D0", VA = "0x13027D0", Slot = "13")]
		protected virtual void MoveRight(bool leftSide)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x13028B4", Offset = "0x13028B4", VA = "0x13028B4", Slot = "14")]
		protected virtual void StoppingSidewaysMovement()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x13029A4", Offset = "0x13029A4", VA = "0x13029A4", Slot = "7")]
		protected override void RotationCalculations()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1302A9C", Offset = "0x1302A9C", VA = "0x1302A9C")]
		protected FBasic_CharacterHorizontalBase()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public abstract class FBasic_CharacterInputBase : MonoBehaviour
	{
		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected FBasic_CharacterMovementBase characterController;

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1302DF8", Offset = "0x1302DF8", VA = "0x1302DF8", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1302E50", Offset = "0x1302E50", VA = "0x1302E50", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1302E98", Offset = "0x1302E98", VA = "0x1302E98", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x1302D90", Offset = "0x1302D90", VA = "0x1302D90")]
		public void SetInputAxis(Vector2 inputAxis)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x1302DC8", Offset = "0x1302DC8", VA = "0x1302DC8")]
		public void Jump()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x1302DAC", Offset = "0x1302DAC", VA = "0x1302DAC")]
		public void SetInputDirection(float yDirection)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x1302CDC", Offset = "0x1302CDC", VA = "0x1302CDC")]
		protected float CalculateClampedAxisValue(string axis = "Vertical")
		{
			return default(float);
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x1302DF0", Offset = "0x1302DF0", VA = "0x1302DF0")]
		protected FBasic_CharacterInputBase()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03E4C", Offset = "0xA03E4C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03E4C", Offset = "0xA03E4C")]
	public abstract class FBasic_CharacterMovementBase : MonoBehaviour
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A5E8", Offset = "0xA1A5E8")]
		public float MaxSpeed;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Grounded;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool Jumped;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float targetDirection;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float animatedDirection;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool onlyForward;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float GravityPower;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A620", Offset = "0xA1A620")]
		public float AccelerationSpeed;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A658", Offset = "0xA1A658")]
		public float DecelerateSpeed;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float accelerationForward;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected Vector3 newVelocityForward;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Vector3 lastTargetVelocityForward;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected float verticalValue;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector2 inputAxes;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float inputDirection;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected bool inputJump;

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x1303068", Offset = "0x1303068", VA = "0x1303068", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x13030A4", Offset = "0x13030A4", VA = "0x13030A4", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x13030B0", Offset = "0x13030B0", VA = "0x13030B0", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x13030BC", Offset = "0x13030BC", VA = "0x13030BC", Slot = "7")]
		protected virtual void RotationCalculations()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x13031DC", Offset = "0x13031DC", VA = "0x13031DC", Slot = "8")]
		protected virtual void MovementCalculations()
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1303284", Offset = "0x1303284", VA = "0x1303284", Slot = "9")]
		protected virtual Vector3 CalculateTargetVelocity(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x130334C", Offset = "0x130334C", VA = "0x130334C", Slot = "10")]
		protected virtual void MoveForward(bool backward)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1303464", Offset = "0x1303464", VA = "0x1303464", Slot = "11")]
		protected virtual void StoppingMovement()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x1303554", Offset = "0x1303554", VA = "0x1303554", Slot = "12")]
		protected virtual void Jump()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x1303558", Offset = "0x1303558", VA = "0x1303558")]
		internal void SetInputAxis(Vector2 inputAxis)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x1303560", Offset = "0x1303560", VA = "0x1303560")]
		internal void SetInputDirection(float yDirection)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1302EE0", Offset = "0x1302EE0", VA = "0x1302EE0")]
		internal void SetJumpInput()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x1303568", Offset = "0x1303568", VA = "0x1303568")]
		protected float CalculateJumpYVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1302B20", Offset = "0x1302B20", VA = "0x1302B20")]
		protected FBasic_CharacterMovementBase()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03ED8", Offset = "0xA03ED8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03ED8", Offset = "0xA03ED8")]
	public class FBasic_CharacterController : FBasic_CharacterHorizontalBase
	{
		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A690", Offset = "0xA1A690")]
		private Rigidbody <CharacterRigidbody>k__BackingField;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected CharacterController characterController;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 translationVector;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float yVelocity;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A6A0", Offset = "0xA1A6A0")]
		public bool SimpleMove;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A6D8", Offset = "0xA1A6D8")]
		public float pushDownYVelocity;

		[Token(Token = "0x170001B8")]
		public Rigidbody CharacterRigidbody
		{
			[Token(Token = "0x600182B")]
			[Address(RVA = "0xEEC9D0", Offset = "0xEEC9D0", VA = "0xEEC9D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22350", Offset = "0xA22350")]
			get
			{
				return null;
			}
			[Token(Token = "0x600182C")]
			[Address(RVA = "0xEEC9D8", Offset = "0xEEC9D8", VA = "0xEEC9D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22360", Offset = "0xA22360")]
			protected set
			{
			}
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xEEC9E0", Offset = "0xEEC9E0", VA = "0xEEC9E0", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xEECAD8", Offset = "0xEECAD8", VA = "0xEECAD8", Slot = "8")]
		protected override void MovementCalculations()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xEECD20", Offset = "0xEECD20", VA = "0xEECD20", Slot = "7")]
		protected override void RotationCalculations()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xEECD54", Offset = "0xEECD54", VA = "0xEECD54", Slot = "12")]
		protected override void Jump()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xEECD90", Offset = "0xEECD90", VA = "0xEECD90")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xEECEE8", Offset = "0xEECEE8", VA = "0xEECEE8")]
		public FBasic_CharacterController()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class FBasic_CharacterInputAxis : FBasic_CharacterInputBase
	{
		[Token(Token = "0x6001833")]
		[Address(RVA = "0x1302BF0", Offset = "0x1302BF0", VA = "0x1302BF0", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x1302DE8", Offset = "0x1302DE8", VA = "0x1302DE8")]
		public FBasic_CharacterInputAxis()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class FBasic_CharacterInputKeys : FBasic_CharacterInputBase
	{
		[Token(Token = "0x6001835")]
		[Address(RVA = "0x1302EEC", Offset = "0x1302EEC", VA = "0x1302EEC", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x1303060", Offset = "0x1303060", VA = "0x1303060")]
		public FBasic_CharacterInputKeys()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class FBasic_FheelekController : FBasic_RigidbodyMovement
	{
		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A710", Offset = "0xA1A710")]
		public float RotationSpeed;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool movingBackward;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected FBasic_FheelekAnimator fheelekAnimator;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float turbo;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform wheel;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform fBody;

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x13051F8", Offset = "0x13051F8", VA = "0x13051F8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x13053E0", Offset = "0x13053E0", VA = "0x13053E0", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x1305A64", Offset = "0x1305A64", VA = "0x1305A64", Slot = "6")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1305C30", Offset = "0x1305C30", VA = "0x1305C30", Slot = "7")]
		protected override void RotationCalculations()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1305D88", Offset = "0x1305D88", VA = "0x1305D88", Slot = "10")]
		protected override void MoveForward(bool backward)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1305F00", Offset = "0x1305F00", VA = "0x1305F00", Slot = "12")]
		protected override void Jump()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x1306158", Offset = "0x1306158", VA = "0x1306158", Slot = "11")]
		protected override void StoppingMovement()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x1306364", Offset = "0x1306364", VA = "0x1306364")]
		public FBasic_FheelekController()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03F64", Offset = "0xA03F64")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA03F64", Offset = "0xA03F64")]
	public class FBasic_RigidbodyMovement : FBasic_CharacterHorizontalBase
	{
		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A748", Offset = "0xA1A748")]
		private Rigidbody <CharacterRigidbody>k__BackingField;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float SkinHeight;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected float fakeYVelocity;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool FacingWall;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool SideingWall;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected float diagonalMultiplier;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected CapsuleCollider capsuleCollider;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 targetVelocity;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected bool jumpCollisionFrameOffset;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A758", Offset = "0xA1A758")]
		public float PushDownYVelocity;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LayerMask ChracterLayerMask;

		[Token(Token = "0x170001B9")]
		public Rigidbody CharacterRigidbody
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0x130AE80", Offset = "0x130AE80", VA = "0x130AE80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22370", Offset = "0xA22370")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001840")]
			[Address(RVA = "0x130AE88", Offset = "0x130AE88", VA = "0x130AE88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22380", Offset = "0xA22380")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x13052DC", Offset = "0x13052DC", VA = "0x13052DC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x1305AD8", Offset = "0x1305AD8", VA = "0x1305AD8", Slot = "6")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x130AE90", Offset = "0x130AE90", VA = "0x130AE90", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x13056E0", Offset = "0x13056E0", VA = "0x13056E0")]
		protected void CheckGroundPlacement()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x130AEBC", Offset = "0x130AEBC", VA = "0x130AEBC", Slot = "8")]
		protected override void MovementCalculations()
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x130B008", Offset = "0x130B008", VA = "0x130B008", Slot = "7")]
		protected override void RotationCalculations()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x130601C", Offset = "0x130601C", VA = "0x130601C", Slot = "12")]
		protected override void Jump()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x130B038", Offset = "0x130B038", VA = "0x130B038")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x130B5E0", Offset = "0x130B5E0", VA = "0x130B5E0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x130B228", Offset = "0x130B228", VA = "0x130B228")]
		private void CheckIfFacingWall(Collision collision)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x13063D0", Offset = "0x13063D0", VA = "0x13063D0")]
		public FBasic_RigidbodyMovement()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public abstract class FBasic_InteractionAreaBase : MonoBehaviour
	{
		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04C20", Offset = "0xA04C20")]
		private sealed class <UpdateIfInRange>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FBasic_InteractionAreaBase <>4__this;

			[Token(Token = "0x170002CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB4")]
				[Address(RVA = "0x1307968", Offset = "0x1307968", VA = "0x1307968", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB6")]
				[Address(RVA = "0x13079D0", Offset = "0x13079D0", VA = "0x13079D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x130777C", Offset = "0x130777C", VA = "0x130777C")]
			[DebuggerHidden]
			public <UpdateIfInRange>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0x1307908", Offset = "0x1307908", VA = "0x1307908", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0x130790C", Offset = "0x130790C", VA = "0x130790C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0x1307970", Offset = "0x1307970", VA = "0x1307970", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SphereCollider triggerArea;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A790", Offset = "0xA1A790")]
		private bool <Entered>k__BackingField;

		[Token(Token = "0x170001BA")]
		public bool Entered
		{
			[Token(Token = "0x600184D")]
			[Address(RVA = "0x130759C", Offset = "0x130759C", VA = "0x130759C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22390", Offset = "0xA22390")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600184E")]
			[Address(RVA = "0x13075A4", Offset = "0x13075A4", VA = "0x13075A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA223A0", Offset = "0xA223A0")]
			protected set
			{
			}
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x13075B0", Offset = "0x13075B0", VA = "0x13075B0", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x1307704", Offset = "0x1307704", VA = "0x1307704", Slot = "5")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x13075B8", Offset = "0x13075B8", VA = "0x13075B8")]
		protected SphereCollider GetTrigger()
		{
			return null;
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x1307708", Offset = "0x1307708", VA = "0x1307708", Slot = "6")]
		protected virtual void UpdateIn()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x130770C", Offset = "0x130770C", VA = "0x130770C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA223B0", Offset = "0xA223B0")]
		protected IEnumerator UpdateIfInRange()
		{
			return null;
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x13077A8", Offset = "0x13077A8", VA = "0x13077A8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x1307858", Offset = "0x1307858", VA = "0x1307858", Slot = "7")]
		protected virtual void OnEnter()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x130785C", Offset = "0x130785C", VA = "0x130785C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x13078FC", Offset = "0x13078FC", VA = "0x13078FC", Slot = "8")]
		protected virtual void OnExit()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1307900", Offset = "0x1307900", VA = "0x1307900")]
		protected FBasic_InteractionAreaBase()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class FBasic_InteractionAreaCanvas : FBasic_InteractionAreaBase
	{
		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Transform InteractionCanvasesContainer;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA1A7A0", Offset = "0xA1A7A0")]
		public KeyCode InteractionKey;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA1A7B4", Offset = "0xA1A7B4")]
		public Vector3 canvasObjectOffset;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA1A7C8", Offset = "0xA1A7C8")]
		public UnityEvent EventOnInteraction;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string textInCanvas;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Canvas viewCanvas;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected RectTransform canvasRect;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected CanvasGroup canvasGroup;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Text viewText;

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x13079D8", Offset = "0x13079D8", VA = "0x13079D8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x1307F38", Offset = "0x1307F38", VA = "0x1307F38", Slot = "6")]
		protected override void UpdateIn()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x130816C", Offset = "0x130816C", VA = "0x130816C", Slot = "7")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x1308410", Offset = "0x1308410", VA = "0x1308410", Slot = "8")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x1308430", Offset = "0x1308430", VA = "0x1308430")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x1308568", Offset = "0x1308568", VA = "0x1308568")]
		public FBasic_InteractionAreaCanvas()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class FBasic_Pullable : FBasic_InteractionAreaCanvas
	{
		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1A7DC", Offset = "0xA1A7DC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA1A7DC", Offset = "0xA1A7DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A7DC", Offset = "0xA1A7DC")]
		public bool XAxis;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A850", Offset = "0xA1A850")]
		public bool YAxis;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A888", Offset = "0xA1A888")]
		public bool ResetValue;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A8C0", Offset = "0xA1A8C0")]
		public float Sensitivity;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1A8F8", Offset = "0xA1A8F8")]
		public float StartValueY;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA1A910", Offset = "0xA1A910")]
		public float StartValueX;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A928", Offset = "0xA1A928")]
		private float <YValue>k__BackingField;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A938", Offset = "0xA1A938")]
		private float <YValueUnclamped>k__BackingField;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A948", Offset = "0xA1A948")]
		private float <XValue>k__BackingField;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A958", Offset = "0xA1A958")]
		private float <XValueUnclamped>k__BackingField;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool mouseEntered;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector2 holdStartPosition;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float holdStartValueY;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float holdStartValueX;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private CursorLockMode previousCursorLockMode;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool previousCursorVisibility;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool startedByMouseClick;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A968", Offset = "0xA1A968")]
		private bool <Holding>k__BackingField;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A978", Offset = "0xA1A978")]
		public bool OverrideCanBePulledByMouse;

		[Token(Token = "0x170001BB")]
		public float YValue
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0x1309E0C", Offset = "0x1309E0C", VA = "0x1309E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22414", Offset = "0xA22414")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001860")]
			[Address(RVA = "0x1309E14", Offset = "0x1309E14", VA = "0x1309E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22424", Offset = "0xA22424")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public float YValueUnclamped
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0x1309E1C", Offset = "0x1309E1C", VA = "0x1309E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22434", Offset = "0xA22434")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001862")]
			[Address(RVA = "0x1309E24", Offset = "0x1309E24", VA = "0x1309E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22444", Offset = "0xA22444")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public float XValue
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0x1309E2C", Offset = "0x1309E2C", VA = "0x1309E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22454", Offset = "0xA22454")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001864")]
			[Address(RVA = "0x1309E34", Offset = "0x1309E34", VA = "0x1309E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22464", Offset = "0xA22464")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public float XValueUnclamped
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0x1309E3C", Offset = "0x1309E3C", VA = "0x1309E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22474", Offset = "0xA22474")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001866")]
			[Address(RVA = "0x1309E44", Offset = "0x1309E44", VA = "0x1309E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22484", Offset = "0xA22484")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public bool Holding
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0x1309E4C", Offset = "0x1309E4C", VA = "0x1309E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22494", Offset = "0xA22494")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001868")]
			[Address(RVA = "0x1309E54", Offset = "0x1309E54", VA = "0x1309E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA224A4", Offset = "0xA224A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x1309E60", Offset = "0x1309E60", VA = "0x1309E60", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1309F20", Offset = "0x1309F20", VA = "0x1309F20", Slot = "9")]
		protected virtual void UpdatePullableOrientation()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x1309F24", Offset = "0x1309F24", VA = "0x1309F24")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1309FA0", Offset = "0x1309FA0", VA = "0x1309FA0", Slot = "10")]
		protected virtual void MouseEnter()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1309FAC", Offset = "0x1309FAC", VA = "0x1309FAC", Slot = "11")]
		protected virtual void OnMouseDown()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x1309FDC", Offset = "0x1309FDC", VA = "0x1309FDC", Slot = "12")]
		protected virtual void StartHolding()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x130A0DC", Offset = "0x130A0DC", VA = "0x130A0DC", Slot = "6")]
		protected override void UpdateIn()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x130A294", Offset = "0x130A294", VA = "0x130A294", Slot = "8")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x130A2C4", Offset = "0x130A2C4", VA = "0x130A2C4", Slot = "13")]
		protected virtual void StopHolding()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x130A33C", Offset = "0x130A33C", VA = "0x130A33C")]
		public FBasic_Pullable()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class FBasic_PullableKnob : FBasic_Pullable
	{
		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A9B0", Offset = "0xA1A9B0")]
		private float <KnobValue>k__BackingField;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform body;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Material markerMaterial;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material valueMaterial;

		[Token(Token = "0x170001C0")]
		public float KnobValue
		{
			[Token(Token = "0x6001873")]
			[Address(RVA = "0x130A350", Offset = "0x130A350", VA = "0x130A350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA224B4", Offset = "0xA224B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001874")]
			[Address(RVA = "0x130A358", Offset = "0x130A358", VA = "0x130A358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA224C4", Offset = "0xA224C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x130A360", Offset = "0x130A360", VA = "0x130A360", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x130A470", Offset = "0x130A470", VA = "0x130A470", Slot = "9")]
		protected override void UpdatePullableOrientation()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x130A594", Offset = "0x130A594", VA = "0x130A594", Slot = "6")]
		protected override void UpdateIn()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x130A690", Offset = "0x130A690", VA = "0x130A690", Slot = "8")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x130A714", Offset = "0x130A714", VA = "0x130A714", Slot = "12")]
		protected override void StartHolding()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x130A804", Offset = "0x130A804", VA = "0x130A804", Slot = "13")]
		protected override void StopHolding()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x130A8F4", Offset = "0x130A8F4", VA = "0x130A8F4")]
		public FBasic_PullableKnob()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class FBasic_PullableLever : FBasic_Pullable
	{
		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A9C0", Offset = "0xA1A9C0")]
		private float <LeverValueY>k__BackingField;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1A9D0", Offset = "0xA1A9D0")]
		private float <LeverValueX>k__BackingField;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Vector2 RotationRangesY;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector2 RotationRangesX;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform LeverTransform;

		[Token(Token = "0x170001C1")]
		public float LeverValueY
		{
			[Token(Token = "0x600187C")]
			[Address(RVA = "0x130A908", Offset = "0x130A908", VA = "0x130A908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA224D4", Offset = "0xA224D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600187D")]
			[Address(RVA = "0x130A910", Offset = "0x130A910", VA = "0x130A910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA224E4", Offset = "0xA224E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public float LeverValueX
		{
			[Token(Token = "0x600187E")]
			[Address(RVA = "0x130A918", Offset = "0x130A918", VA = "0x130A918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA224F4", Offset = "0xA224F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600187F")]
			[Address(RVA = "0x130A920", Offset = "0x130A920", VA = "0x130A920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22504", Offset = "0xA22504")]
			private set
			{
			}
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x130A928", Offset = "0x130A928", VA = "0x130A928", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x130A9C4", Offset = "0x130A9C4", VA = "0x130A9C4", Slot = "9")]
		protected override void UpdatePullableOrientation()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x130AB24", Offset = "0x130AB24", VA = "0x130AB24", Slot = "6")]
		protected override void UpdateIn()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x130AC18", Offset = "0x130AC18", VA = "0x130AC18", Slot = "12")]
		protected override void StartHolding()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x130AD08", Offset = "0x130AD08", VA = "0x130AD08", Slot = "13")]
		protected override void StopHolding()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x130ADF8", Offset = "0x130ADF8", VA = "0x130ADF8")]
		public FBasic_PullableLever()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class FBasic_ProjectileBase : MonoBehaviour
	{
		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1A9E0", Offset = "0xA1A9E0")]
		public float FlySpeed;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AA18", Offset = "0xA1AA18")]
		public float DistanceLimit;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 initPosition;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1AA50", Offset = "0xA1AA50")]
		private static LayerMask <ProjectiletHitMask>k__BackingField;

		[Token(Token = "0x170001C3")]
		public static LayerMask ProjectiletHitMask
		{
			[Token(Token = "0x6001886")]
			[Address(RVA = "0x13097EC", Offset = "0x13097EC", VA = "0x13097EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22514", Offset = "0xA22514")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001887")]
			[Address(RVA = "0x130983C", Offset = "0x130983C", VA = "0x130983C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA22524", Offset = "0xA22524")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x1309890", Offset = "0x1309890", VA = "0x1309890", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x1309B34", Offset = "0x1309B34", VA = "0x1309B34", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x1303A1C", Offset = "0x1303A1C", VA = "0x1303A1C", Slot = "6")]
		protected virtual void HitTarget(RaycastHit hit)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x1309A58", Offset = "0x1309A58", VA = "0x1309A58")]
		internal Vector3 StepForward()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x1303AAC", Offset = "0x1303AAC", VA = "0x1303AAC")]
		public FBasic_ProjectileBase()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class FBasic_Shared_BulletHittable : MonoBehaviour
	{
		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnProjectileHit;

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x130BDF4", Offset = "0x130BDF4", VA = "0x130BDF4")]
		public FBasic_Shared_BulletHittable()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public abstract class FBasic_MaterialScriptBase : MonoBehaviour
	{
		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Material RendererMaterial;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Renderer ObjectRenderer;

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x1304858", Offset = "0x1304858", VA = "0x1304858")]
		protected Material GetRendererMaterial()
		{
			return null;
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x1304C10", Offset = "0x1304C10", VA = "0x1304C10")]
		protected FBasic_MaterialScriptBase()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class FBasic_AnimatorPlayState : MonoBehaviour
	{
		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AnimationStateName;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int AnimationLayer;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AA60", Offset = "0xA1AA60")]
		public Vector2 TimeOffset;

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xEEC860", Offset = "0xEEC860", VA = "0xEEC860")]
		private void Start()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xEEC94C", Offset = "0xEEC94C", VA = "0xEEC94C")]
		public FBasic_AnimatorPlayState()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class FBasic_CourutineHelper : MonoBehaviour
	{
		[Token(Token = "0x6001892")]
		[Address(RVA = "0x13035FC", Offset = "0x13035FC", VA = "0x13035FC")]
		public FBasic_CourutineHelper()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class FBasic_DestroyAfter : MonoBehaviour
	{
		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SecondsToDestroy;

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x1303AFC", Offset = "0x1303AFC", VA = "0x1303AFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x1303B94", Offset = "0x1303B94", VA = "0x1303B94")]
		public FBasic_DestroyAfter()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class FBasic_DestroyOthersWithMe : MonoBehaviour
	{
		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<UnityEngine.Object> ToDestroyAfterDestroy;

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x1303BA4", Offset = "0x1303BA4", VA = "0x1303BA4")]
		public void AddToDestroy(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x1303C3C", Offset = "0x1303C3C", VA = "0x1303C3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x1303D50", Offset = "0x1303D50", VA = "0x1303D50")]
		public FBasic_DestroyOthersWithMe()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class FBasic_DuplicateObjects : MonoBehaviour
	{
		[Token(Token = "0x2000592")]
		public enum FEDuplicateDirection
		{
			[Token(Token = "0x400200F")]
			GoIterative,
			[Token(Token = "0x4002010")]
			GoFromCenter
		}

		[Token(Token = "0x2000593")]
		public enum FEDuplicateOrigin
		{
			[Token(Token = "0x4002012")]
			FromToDuplicate,
			[Token(Token = "0x4002013")]
			FromComponent
		}

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AA98", Offset = "0xA1AA98")]
		public GameObject ToDuplicate;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AAD0", Offset = "0xA1AAD0")]
		public Vector3 DuplicatesCount;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AB08", Offset = "0xA1AB08")]
		public Vector3 Offsets;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AB40", Offset = "0xA1AB40")]
		public bool PlaceOnGround;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public FEDuplicateDirection DuplicationType;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FEDuplicateOrigin DuplicationOrigin;

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x1303D58", Offset = "0x1303D58", VA = "0x1303D58")]
		public void Duplicate()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x13043C0", Offset = "0x13043C0", VA = "0x13043C0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x13047B8", Offset = "0x13047B8", VA = "0x13047B8")]
		public FBasic_DuplicateObjects()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class FBasic_FadeOutMaterialAndDestroy : FBasic_MaterialScriptBase
	{
		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string shaderParamName;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FadeSpeed;

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x1304854", Offset = "0x1304854", VA = "0x1304854")]
		private void Start()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x1304A9C", Offset = "0x1304A9C", VA = "0x1304A9C")]
		private void Update()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x1304BB0", Offset = "0x1304BB0", VA = "0x1304BB0")]
		public FBasic_FadeOutMaterialAndDestroy()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class FBasic_MaterialFloatAnimate : FBasic_MaterialScriptBase
	{
		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AB78", Offset = "0xA1AB78")]
		public string TextureProperty;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PropertyInitValue;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RangeValue;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float AnimateSpeed;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float time;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float randomValue;

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x13085C8", Offset = "0x13085C8", VA = "0x13085C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x1308628", Offset = "0x1308628", VA = "0x1308628")]
		private void Update()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x13086FC", Offset = "0x13086FC", VA = "0x13086FC")]
		public FBasic_MaterialFloatAnimate()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class FBasic_MaterialOffset : FBasic_MaterialScriptBase
	{
		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1ABB0", Offset = "0xA1ABB0")]
		public string TextureProperty;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1ABE8", Offset = "0xA1ABE8")]
		public Vector2 OffsetSpeed;

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x1308768", Offset = "0x1308768", VA = "0x1308768")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x130876C", Offset = "0x130876C", VA = "0x130876C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x1308850", Offset = "0x1308850", VA = "0x1308850")]
		public FBasic_MaterialOffset()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class FBasic_MaterialRandomColor : FBasic_MaterialScriptBase
	{
		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AC20", Offset = "0xA1AC20")]
		public string TextureProperty;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 HueRange;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 SaturationRange;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 ValueRange;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 AlphaRange;

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x13088D4", Offset = "0x13088D4", VA = "0x13088D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x1308988", Offset = "0x1308988", VA = "0x1308988")]
		public FBasic_MaterialRandomColor()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class FBasic_MaterialTiler : FBasic_MaterialScriptBase
	{
		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1AC58", Offset = "0xA1AC58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1AC58", Offset = "0xA1AC58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA1AC58", Offset = "0xA1AC58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AC58", Offset = "0xA1AC58")]
		public string TextureProperty;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1ACF0", Offset = "0xA1ACF0")]
		public Vector2 ScaleValues;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AD28", Offset = "0xA1AD28")]
		public bool EqualDimensions;

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x1308A80", Offset = "0x1308A80", VA = "0x1308A80")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x1308AB4", Offset = "0x1308AB4", VA = "0x1308AB4")]
		private void TileMaterialToScale()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x1308BFC", Offset = "0x1308BFC", VA = "0x1308BFC")]
		public FBasic_MaterialTiler()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class FBasic_TriggerEvents : MonoBehaviour
	{
		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string EnteringTag;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnAwakeEvent;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnStartEvent;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnTriggerEnterEvents;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnTriggerExitEvents;

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x130D704", Offset = "0x130D704", VA = "0x130D704")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x130D718", Offset = "0x130D718", VA = "0x130D718")]
		private void Start()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x130D72C", Offset = "0x130D72C", VA = "0x130D72C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x130D790", Offset = "0x130D790", VA = "0x130D790")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x130D7F4", Offset = "0x130D7F4", VA = "0x130D7F4")]
		public FBasic_TriggerEvents()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class FBasic_Demo_Cannon : MonoBehaviour
	{
		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1AD60", Offset = "0xA1AD60")]
		public Vector2 RandomTimerRange;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject BulletPrefab;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject MuzzlePrefab;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ShotPoint;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timer;

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x1303604", Offset = "0x1303604", VA = "0x1303604")]
		private void Start()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x130365C", Offset = "0x130365C", VA = "0x130365C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x13036B4", Offset = "0x13036B4", VA = "0x13036B4")]
		public void Shot()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x1303630", Offset = "0x1303630", VA = "0x1303630")]
		private void ResetTimer()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1303818", Offset = "0x1303818", VA = "0x1303818")]
		public FBasic_Demo_Cannon()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class FBasic_Demo_HideText : MonoBehaviour
	{
		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text text;

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x1303860", Offset = "0x1303860", VA = "0x1303860")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x13038B8", Offset = "0x13038B8", VA = "0x13038B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x1303918", Offset = "0x1303918", VA = "0x1303918")]
		public FBasic_Demo_HideText()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class FBasic_Demo_Projectile : FBasic_ProjectileBase
	{
		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1303920", Offset = "0x1303920", VA = "0x1303920", Slot = "6")]
		protected override void HitTarget(RaycastHit hit)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1303A98", Offset = "0x1303A98", VA = "0x1303A98")]
		public FBasic_Demo_Projectile()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class FBasic_Demo_PullableExample : MonoBehaviour
	{
		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FBasic_Pullable TargetPullable;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FBasic_Rotator TargetRotator;

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x1303AC0", Offset = "0x1303AC0", VA = "0x1303AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x1303AF4", Offset = "0x1303AF4", VA = "0x1303AF4")]
		public FBasic_Demo_PullableExample()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public enum EFUpdateClock
	{
		[Token(Token = "0x4001957")]
		Update,
		[Token(Token = "0x4001958")]
		LateUpdate,
		[Token(Token = "0x4001959")]
		FixedUpdate
	}
	[Serializable]
	[Token(Token = "0x20003DA")]
	public class FBasic_FheelekAnimator
	{
		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool AnimationHolder;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected FBasic_FheelekController controller;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Animator animator;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected string lastAnimation;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool waitForIdle;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float landingTimer;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected string defaultIdle;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected string defaultRun;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int locomotionLayer;

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x1304C18", Offset = "0x1304C18", VA = "0x1304C18")]
		public FBasic_FheelekAnimator(FBasic_FheelekController contr)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x1304CC4", Offset = "0x1304CC4", VA = "0x1304CC4")]
		internal void Animate(float acc)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1305114", Offset = "0x1305114", VA = "0x1305114")]
		public void PlayAnimationHoldUntilIdle(string animation, float crossfadeTime = 0.2f, int animationLayer = 0)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x1305140", Offset = "0x1305140", VA = "0x1305140")]
		internal void SetDefaultIdle(string stateName)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1305148", Offset = "0x1305148", VA = "0x1305148")]
		internal void SetDefaultRun(string stateName)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1305098", Offset = "0x1305098", VA = "0x1305098")]
		protected void CrossfadeTo(string animation, float time = 0.25f, int animationLayer = 0)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1305150", Offset = "0x1305150", VA = "0x1305150", Slot = "4")]
		public virtual void Jump()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1305154", Offset = "0x1305154", VA = "0x1305154", Slot = "5")]
		protected virtual void Landing()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x1305104", Offset = "0x1305104", VA = "0x1305104")]
		private void LerpValue(string parameter, float value)
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class FBasic_NotRepetiveSelector<T>
	{
		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int backRange;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<int> previousElements;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> elements;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int added;

		[Token(Token = "0x60018C3")]
		public FBasic_NotRepetiveSelector(List<T> elements, int backRange)
		{
		}

		[Token(Token = "0x60018C4")]
		public static List<T> ArrayToList(T[] elements)
		{
			return null;
		}

		[Token(Token = "0x60018C5")]
		public T GetElementNotRepetive()
		{
			return (T)null;
		}

		[Token(Token = "0x60018C6")]
		private int ChooseElementDontRepeat(List<T> elements, List<int> previousClips, int backCount)
		{
			return default(int);
		}
	}
}
namespace FIMSpace.Basics.Demo
{
	[Token(Token = "0x20003DC")]
	public class FBasic_Demo_CharacterChoosePanel : MonoBehaviour
	{
		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FBasic_CharacterInputKeys TargetController;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ToActivate;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int ChooseCamera;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FBasic_CharacterInputKeys mainController;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FBasic_CharacterInputKeys currentController;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static GameObject mainText;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FBasic_TPPCameraBehaviour tppCam;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FBasic_FreeCameraBehaviour freeCam;

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xEEB228", Offset = "0xEEB228", VA = "0xEEB228")]
		private void Start()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xEEB390", Offset = "0xEEB390", VA = "0xEEB390")]
		public void Switch()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xEEB708", Offset = "0xEEB708", VA = "0xEEB708")]
		private void SwitchActiveText(bool restoreMain = false)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xEEB808", Offset = "0xEEB808", VA = "0xEEB808")]
		public FBasic_Demo_CharacterChoosePanel()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class FBasic_Demo_Controller : MonoBehaviour
	{
		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text descriptionText;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text numberText;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text nameText;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> dontDestroyOnLoad;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentScene;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> scenes;

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xEEB818", Offset = "0xEEB818", VA = "0xEEB818")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xEEB964", Offset = "0xEEB964", VA = "0xEEB964")]
		private void Start()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xEEBBD4", Offset = "0xEEBBD4", VA = "0xEEBBD4")]
		public void NextScene()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xEEBC9C", Offset = "0xEEBC9C", VA = "0xEEBC9C")]
		public void PreviousScene()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xEEBA90", Offset = "0xEEBA90", VA = "0xEEBA90")]
		private void ResetTexts()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xEEBD64", Offset = "0xEEBD64", VA = "0xEEBD64")]
		private string GetDescription(int scene)
		{
			return null;
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xEEC798", Offset = "0xEEC798", VA = "0xEEC798")]
		private string KeyColor(string input)
		{
			return null;
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xEEC738", Offset = "0xEEC738", VA = "0xEEC738")]
		private string ClassColor(string className)
		{
			return null;
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xEEC7F8", Offset = "0xEEC7F8", VA = "0xEEC7F8")]
		private string MethodColor(string className)
		{
			return null;
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xEEC858", Offset = "0xEEC858", VA = "0xEEC858")]
		public FBasic_Demo_Controller()
		{
		}
	}
}
namespace FIMSpace.BonesStimulation
{
	[Token(Token = "0x20003DE")]
	public class FBonesStim_Demo_StimulatorsLever : MonoBehaviour
	{
		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FBasic_PullableLever Lever;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<FBonesStim_Vibrate> Vibrates;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<FBonesStim_Squasher> Squashers;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] vibInits;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] sqInits;

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x130D84C", Offset = "0x130D84C", VA = "0x130D84C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x130D9FC", Offset = "0x130D9FC", VA = "0x130D9FC")]
		public void Update()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x130D850", Offset = "0x130D850", VA = "0x130D850")]
		private void GetAllComponents()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x130DBA0", Offset = "0x130DBA0", VA = "0x130DBA0")]
		public FBonesStim_Demo_StimulatorsLever()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class FBonesStim_Squasher : MonoBehaviour
	{
		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MainScalerMultiplier;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 AxesScaleMultiply;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float time;

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x130DBA8", Offset = "0x130DBA8", VA = "0x130DBA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x130DBE0", Offset = "0x130DBE0", VA = "0x130DBE0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x130DD1C", Offset = "0x130DD1C", VA = "0x130DD1C")]
		public FBonesStim_Squasher()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class FBonesStim_Vibrate : MonoBehaviour
	{
		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1AD98", Offset = "0xA1AD98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AD98", Offset = "0xA1AD98")]
		public float BaseSpeed;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1ADF8", Offset = "0xA1ADF8")]
		public float BaseRange;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA1AE30", Offset = "0xA1AE30")]
		public Vector3 AxesMultiplier;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1AE68", Offset = "0xA1AE68")]
		public float PositionMultiplier;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float RotationMultiplier;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ScaleMultiplier;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA1AEA0", Offset = "0xA1AEA0")]
		public bool BonePosIsNotAnimated;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool BoneRotIsNotAnimated;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool BoneScaleIsNotAnimated;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 initPos;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion initRot;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 initScale;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] randomFloats;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 initPosition;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float time;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float trueSpeed;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float speed;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float range;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float intensity;

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x130DD90", Offset = "0x130DD90", VA = "0x130DD90")]
		private void Start()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x130DFAC", Offset = "0x130DFAC", VA = "0x130DFAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x130E768", Offset = "0x130E768", VA = "0x130E768")]
		public void ExplosionShake(float value = 12f)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x130E434", Offset = "0x130E434", VA = "0x130E434")]
		private void ChangePosition(Vector3 newTranslationsValue)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x130E520", Offset = "0x130E520", VA = "0x130E520")]
		private void ChangeRotation(Vector3 newTranslationsValue)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x130E668", Offset = "0x130E668", VA = "0x130E668")]
		private void ChangeScale(Vector3 newTranslationsValue)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x130DEAC", Offset = "0x130DEAC", VA = "0x130DEAC")]
		private void ChooseNewSeed()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x130E80C", Offset = "0x130E80C", VA = "0x130E80C")]
		public FBonesStim_Vibrate()
		{
		}
	}
}
namespace CalmWater
{
	[Token(Token = "0x20003E1")]
	public class MaterialSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer WaterPlane;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ClassicMat;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material DX11Mat;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MirrorReflection m;

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x119EC84", Offset = "0x119EC84", VA = "0x119EC84")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x119ECE4", Offset = "0x119ECE4", VA = "0x119ECE4")]
		public void SetDX11Mat()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x119ED24", Offset = "0x119ED24", VA = "0x119ED24")]
		public void SetClassicMat()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x119ED64", Offset = "0x119ED64", VA = "0x119ED64")]
		public MaterialSwitcher()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class SceneSwitcher : MonoBehaviour
	{
		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x119ED6C", Offset = "0x119ED6C", VA = "0x119ED6C")]
		public void SwitchLevel(string level)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x119EDD4", Offset = "0x119EDD4", VA = "0x119EDD4")]
		public SceneSwitcher()
		{
		}
	}
}
