using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using DarkTonic.MasterAudio;
using FRG.Core;
using Il2CppDummyDll;
using Impact.Data;
using Impact.Interactions;
using Impact.Materials;
using Impact.Objects;
using Impact.TagLibrary;
using Impact.Utility;
using Impact.Utility.ObjectPool;
using Newtonsoft.Json;
using Oculus.Interaction;
using Oculus.Interaction.Input;
using Oculus.Platform;
using Oculus.Platform.Models;
using PathCreation;
using RubeGoldberg;
using TMPro;
using Unity.Mathematics;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Android;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.VFX;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class DebugUIWindowTester : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject realUI;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject demoUI;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool open;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool noise;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject UIOption1;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject UIOption2;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject UIOption3;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject UIOption4;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject UIOption5;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject UIOption6;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject UIOption7;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject NoiseGrid;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject FrostedGlass;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject SlideLeft;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject SlideRight;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int index;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int maxIndex;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xBC0594", Offset = "0xBC0594", VA = "0xBC0594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xBC0598", Offset = "0xBC0598", VA = "0xBC0598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xBC08B8", Offset = "0xBC08B8", VA = "0xBC08B8")]
	private void CloseOptions()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xBC0960", Offset = "0xBC0960", VA = "0xBC0960")]
	public void NavLeft()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xBC097C", Offset = "0xBC097C", VA = "0xBC097C")]
	public void NavRight()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xBC0744", Offset = "0xBC0744", VA = "0xBC0744")]
	public void ShowWindow(int windowIndex)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xBC07E8", Offset = "0xBC07E8", VA = "0xBC07E8")]
	public void ToggleDebugWindow()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xBC0994", Offset = "0xBC0994", VA = "0xBC0994")]
	public DebugUIWindowTester()
	{
	}
}
[Token(Token = "0x2000003")]
public class FlatKitDepthNormals : ScriptableRendererFeature
{
	[Token(Token = "0x2000004")]
	private class DepthNormalsPass : ScriptableRenderPass
	{
		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTargetHandle _depthAttachmentHandle;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTextureDescriptor _descriptor;

		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private FilteringSettings _filteringSettings;

		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly Material _depthNormalsMaterial;

		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly string _profilerTag;

		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly ShaderTagId _shaderTagId;

		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private readonly int _depthBufferBits;

		[Token(Token = "0x600000C")]
		[Address(RVA = "0x1BEC444", Offset = "0x1BEC444", VA = "0x1BEC444")]
		public DepthNormalsPass(RenderQueueRange renderQueueRange, LayerMask layerMask, Material material)
		{
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0x1BEC56C", Offset = "0x1BEC56C", VA = "0x1BEC56C")]
		public void Setup(RenderTextureDescriptor baseDescriptor, RenderTargetHandle depthRTHandle)
		{
		}

		[Token(Token = "0x600000E")]
		[Address(RVA = "0x1BEC5D4", Offset = "0x1BEC5D4", VA = "0x1BEC5D4", Slot = "6")]
		public override void Configure(CommandBuffer cmd, RenderTextureDescriptor cameraTextureDescriptor)
		{
		}

		[Token(Token = "0x600000F")]
		[Address(RVA = "0x1BEC69C", Offset = "0x1BEC69C", VA = "0x1BEC69C", Slot = "9")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6000010")]
		[Address(RVA = "0x1BEC910", Offset = "0x1BEC910", VA = "0x1BEC910", Slot = "4")]
		public override void FrameCleanup(CommandBuffer cmd)
		{
		}
	}

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool overrideRenderEvent;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderPassEvent renderEvent;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DepthNormalsPass _depthNormalsPass;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTargetHandle _depthNormalsTexture;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material _depthNormalsMaterial;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1C17A00", Offset = "0x1C17A00", VA = "0x1C17A00")]
	public FlatKitDepthNormals(RenderTargetHandle depthNormalsTexture)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1C17A44", Offset = "0x1C17A44", VA = "0x1C17A44", Slot = "5")]
	public override void Create()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1C17B9C", Offset = "0x1C17B9C", VA = "0x1C17B9C", Slot = "6")]
	public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
	{
	}
}
[Token(Token = "0x2000005")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xBF22F4", Offset = "0xBF22F4", VA = "0xBF22F4")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xBF2458", Offset = "0xBF2458", VA = "0xBF2458")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xBF27F4", Offset = "0xBF27F4", VA = "0xBF27F4")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xBF2998", Offset = "0xBF2998", VA = "0xBF2998", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xBF29C4", Offset = "0xBF29C4", VA = "0xBF29C4")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000006")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x9A1728", Offset = "0x9A1728", VA = "0x9A1728")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x9A17B0", Offset = "0x9A17B0", VA = "0x9A17B0")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x9A1924", Offset = "0x9A1924", VA = "0x9A1924")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000007")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000001")]
	public bool IsVisible
	{
		[Token(Token = "0x6000019")]
		[Address(RVA = "0x1C1E8A4", Offset = "0x1C1E8A4", VA = "0x1C1E8A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600001A")]
		[Address(RVA = "0x1C1E8AC", Offset = "0x1C1E8AC", VA = "0x1C1E8AC")]
		set
		{
		}
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1C1E9E8", Offset = "0x1C1E9E8", VA = "0x1C1E9E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1C1EBB0", Offset = "0x1C1EBB0", VA = "0x1C1EBB0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1C1EBB8", Offset = "0x1C1EBB8", VA = "0x1C1EBB8")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000008")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000009")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000024")]
		[Address(RVA = "0x1BF470C", Offset = "0x1BF470C", VA = "0x1BF470C")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200000A")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83738C", Offset = "0x83738C")]
		public float FakeLatencyMax;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8373A4", Offset = "0x8373A4")]
		public float FakeLatencyMin;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8373BC", Offset = "0x8373BC")]
		public float LatencyWeight;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8373D4", Offset = "0x8373D4")]
		public int MaxSamples;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000025")]
		[Address(RVA = "0x1BF4714", Offset = "0x1BF4714", VA = "0x1BF4714")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000026")]
		[Address(RVA = "0x1BF484C", Offset = "0x1BF484C", VA = "0x1BF484C")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x9A8D58", Offset = "0x9A8D58", VA = "0x9A8D58")]
	private void Start()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x9A8E9C", Offset = "0x9A8E9C", VA = "0x9A8E9C")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x9A9274", Offset = "0x9A9274", VA = "0x9A9274")]
	private void Update()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x9A91CC", Offset = "0x9A91CC", VA = "0x9A91CC")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x9A95A4", Offset = "0x9A95A4", VA = "0x9A95A4")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x9A988C", Offset = "0x9A988C", VA = "0x9A988C")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200000B")]
public class P2PManager
{
	[Token(Token = "0x200000C")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000035")]
		Update = 1
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xBF33E0", Offset = "0xBF33E0", VA = "0xBF33E0")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xBF34C0", Offset = "0xBF34C0", VA = "0xBF34C0")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xBF35A4", Offset = "0xBF35A4", VA = "0xBF35A4")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xBF3624", Offset = "0xBF3624", VA = "0xBF3624")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xBF3794", Offset = "0xBF3794", VA = "0xBF3794")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xBF39D4", Offset = "0xBF39D4", VA = "0xBF39D4")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xBF3DC4", Offset = "0xBF3DC4", VA = "0xBF3DC4")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xBF4080", Offset = "0xBF4080", VA = "0xBF4080")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xBF3BA0", Offset = "0xBF3BA0", VA = "0xBF3BA0")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xBF3FB4", Offset = "0xBF3FB4", VA = "0xBF3FB4")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xBF3C84", Offset = "0xBF3C84", VA = "0xBF3C84")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xBF42B8", Offset = "0xBF42B8", VA = "0xBF42B8")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xBF3BE8", Offset = "0xBF3BE8", VA = "0xBF3BE8")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xBF3FF8", Offset = "0xBF3FF8", VA = "0xBF3FF8")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xBF3D28", Offset = "0xBF3D28", VA = "0xBF3D28")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xBF4340", Offset = "0xBF4340", VA = "0xBF4340")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200000D")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x99DB4C", Offset = "0x99DB4C", VA = "0x99DB4C", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x99DB88", Offset = "0x99DB88", VA = "0x99DB88", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x99DBC0", Offset = "0x99DBC0", VA = "0x99DBC0", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x99DBE8", Offset = "0x99DBE8", VA = "0x99DBE8")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x99DD84", Offset = "0x99DD84", VA = "0x99DD84")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x99DE04", Offset = "0x99DE04", VA = "0x99DE04")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x99DE58", Offset = "0x99DE58", VA = "0x99DE58")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200000E")]
public class RemotePlayer
{
	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x9A9930", Offset = "0x9A9930", VA = "0x9A9930")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200000F")]
public class RoomManager
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1BFDB64", Offset = "0x1BFDB64", VA = "0x1BFDB64")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1BFDC68", Offset = "0x1BFDC68", VA = "0x1BFDC68")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1BFDDE8", Offset = "0x1BFDDE8", VA = "0x1BFDDE8")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1BFDF24", Offset = "0x1BFDF24", VA = "0x1BFDF24")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1BFDFF8", Offset = "0x1BFDFF8", VA = "0x1BFDFF8")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1BFE134", Offset = "0x1BFE134", VA = "0x1BFE134")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1BFDE18", Offset = "0x1BFDE18", VA = "0x1BFDE18")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1BFE1BC", Offset = "0x1BFE1BC", VA = "0x1BFE1BC")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1BFE914", Offset = "0x1BFE914", VA = "0x1BFE914")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1BFEC14", Offset = "0x1BFEC14", VA = "0x1BFEC14")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1BFE49C", Offset = "0x1BFE49C", VA = "0x1BFE49C")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000010")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000011")]
	public enum State
	{
		[Token(Token = "0x400006D")]
		INITIALIZING,
		[Token(Token = "0x400006E")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x400006F")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000070")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000071")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000072")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000073")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000074")]
		SHUTDOWN
	}

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000002")]
	public static State CurrentState
	{
		[Token(Token = "0x6000056")]
		[Address(RVA = "0xB18624", Offset = "0xB18624", VA = "0xB18624")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000003")]
	public static ulong MyID
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0xB18694", Offset = "0xB18694", VA = "0xB18694")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000004")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0xB18774", Offset = "0xB18774", VA = "0xB18774")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xB16844", Offset = "0xB16844", VA = "0xB16844", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xB16BD4", Offset = "0xB16BD4", VA = "0xB16BD4", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xB172E0", Offset = "0xB172E0", VA = "0xB172E0")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xB17600", Offset = "0xB17600", VA = "0xB17600", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xB17604", Offset = "0xB17604", VA = "0xB17604")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xB17724", Offset = "0xB17724", VA = "0xB17724")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xB17E2C", Offset = "0xB17E2C", VA = "0xB17E2C")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xB18220", Offset = "0xB18220", VA = "0xB18220")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xB18430", Offset = "0xB18430", VA = "0xB18430")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xB185B8", Offset = "0xB185B8", VA = "0xB185B8")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xB16F6C", Offset = "0xB16F6C", VA = "0xB16F6C")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xB17488", Offset = "0xB17488", VA = "0xB17488")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xB17020", Offset = "0xB17020", VA = "0xB17020")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xB1889C", Offset = "0xB1889C", VA = "0xB1889C")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xB18A18", Offset = "0xB18A18", VA = "0xB18A18")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xB18AFC", Offset = "0xB18AFC", VA = "0xB18AFC")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xB18C58", Offset = "0xB18C58", VA = "0xB18C58")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xB18D3C", Offset = "0xB18D3C", VA = "0xB18D3C")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xB17540", Offset = "0xB17540", VA = "0xB17540")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xB19284", Offset = "0xB19284", VA = "0xB19284")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xB19318", Offset = "0xB19318", VA = "0xB19318")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xB19070", Offset = "0xB19070", VA = "0xB19070")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xB19508", Offset = "0xB19508", VA = "0xB19508")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xB167C0", Offset = "0xB167C0", VA = "0xB167C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x83DB64", Offset = "0x83DB64")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xB1964C", Offset = "0xB1964C", VA = "0xB1964C")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xB19728", Offset = "0xB19728", VA = "0xB19728")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000012")]
public class VoipManager
{
	[Token(Token = "0x6000068")]
	[Address(RVA = "0xDB0FB4", Offset = "0xDB0FB4", VA = "0xDB0FB4")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xDB1094", Offset = "0xDB1094", VA = "0xDB1094")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xDB1178", Offset = "0xDB1178", VA = "0xDB1178")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xDB11F8", Offset = "0xDB11F8", VA = "0xDB11F8")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xDB1368", Offset = "0xDB1368", VA = "0xDB1368")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000013")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1C1E570", Offset = "0x1C1E570", VA = "0x1C1E570")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1C1E5E8", Offset = "0x1C1E5E8", VA = "0x1C1E5E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1C1E75C", Offset = "0x1C1E75C", VA = "0x1C1E75C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1C1E7C0", Offset = "0x1C1E7C0", VA = "0x1C1E7C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1C1E624", Offset = "0x1C1E624", VA = "0x1C1E624")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1C1E884", Offset = "0x1C1E884", VA = "0x1C1E884")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1C1E89C", Offset = "0x1C1E89C", VA = "0x1C1E89C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000014")]
public class AvatarLayer
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xB1FACC", Offset = "0xB1FACC", VA = "0xB1FACC")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000015")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xBF43C8", Offset = "0xBF43C8", VA = "0xBF43C8")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000016")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000017")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x1BF2798", Offset = "0x1BF2798", VA = "0x1BF2798")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000018")]
	public enum HandType
	{
		[Token(Token = "0x40000D6")]
		Right,
		[Token(Token = "0x40000D7")]
		Left,
		[Token(Token = "0x40000D8")]
		Max
	}

	[Token(Token = "0x2000019")]
	public enum HandJoint
	{
		[Token(Token = "0x40000DA")]
		HandBase,
		[Token(Token = "0x40000DB")]
		IndexBase,
		[Token(Token = "0x40000DC")]
		IndexTip,
		[Token(Token = "0x40000DD")]
		ThumbBase,
		[Token(Token = "0x40000DE")]
		ThumbTip,
		[Token(Token = "0x40000DF")]
		Max
	}

	[Token(Token = "0x200001A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83558C", Offset = "0x83558C")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000AE")]
			[Address(RVA = "0x1BF2748", Offset = "0x1BF2748", VA = "0x1BF2748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B0")]
			[Address(RVA = "0x1BF2790", Offset = "0x1BF2790", VA = "0x1BF2790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x1BF2578", Offset = "0x1BF2578", VA = "0x1BF2578")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x1BF25A4", Offset = "0x1BF25A4", VA = "0x1BF25A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x1BF25A8", Offset = "0x1BF25A8", VA = "0x1BF25A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x1BF2750", Offset = "0x1BF2750", VA = "0x1BF2750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8373EC", Offset = "0x8373EC")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x837424", Offset = "0x837424")]
	public bool EnableBody;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83745C", Offset = "0x83745C")]
	public bool RecordPackets;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x837494", Offset = "0x837494")]
	public bool StartWithControllers;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8374CC", Offset = "0x8374CC")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8374CC", Offset = "0x8374CC")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83753C", Offset = "0x83753C")]
	private bool CombineMeshes;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837574", Offset = "0x837574")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8375AC", Offset = "0x8375AC")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8375E4", Offset = "0x8375E4")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83761C", Offset = "0x83761C")]
	public bool EnableLaughter;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000B6")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000B8")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000B9")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000BA")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000BB")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000BC")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xB8F350", Offset = "0xB8F350", VA = "0xB8F350")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xB8F73C", Offset = "0xB8F73C", VA = "0xB8F73C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xB8F7D0", Offset = "0xB8F7D0", VA = "0xB8F7D0")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xB8F838", Offset = "0xB8F838", VA = "0xB8F838")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xB8F968", Offset = "0xB8F968", VA = "0xB8F968")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xB8FA48", Offset = "0xB8FA48", VA = "0xB8FA48")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xB8FB24", Offset = "0xB8FB24", VA = "0xB8FB24")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB8FD08", Offset = "0xB8FD08", VA = "0xB8FD08")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xB8FDE4", Offset = "0xB8FDE4", VA = "0xB8FDE4")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xB8FE5C", Offset = "0xB8FE5C", VA = "0xB8FE5C")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xB8FF44", Offset = "0xB8FF44", VA = "0xB8FF44")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xB8FFD0", Offset = "0xB8FFD0", VA = "0xB8FFD0")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB90058", Offset = "0xB90058", VA = "0xB90058")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB90070", Offset = "0xB90070", VA = "0xB90070")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000084")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xB90520", Offset = "0xB90520", VA = "0xB90520")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xB908A0", Offset = "0xB908A0", VA = "0xB908A0")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xB90A48", Offset = "0xB90A48", VA = "0xB90A48")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xB90C94", Offset = "0xB90C94", VA = "0xB90C94")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xB90D88", Offset = "0xB90D88", VA = "0xB90D88")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xB91190", Offset = "0xB91190", VA = "0xB91190")]
	private void Start()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xB914BC", Offset = "0xB914BC", VA = "0xB914BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xB91EE0", Offset = "0xB91EE0", VA = "0xB91EE0")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xB91F34", Offset = "0xB91F34", VA = "0xB91F34")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xB91048", Offset = "0xB91048", VA = "0xB91048")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xB910EC", Offset = "0xB910EC", VA = "0xB910EC")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xB91F64", Offset = "0xB91F64", VA = "0xB91F64")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xB91894", Offset = "0xB91894", VA = "0xB91894")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xB921D8", Offset = "0xB921D8", VA = "0xB921D8")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xB91FC8", Offset = "0xB91FC8", VA = "0xB91FC8")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xB92488", Offset = "0xB92488", VA = "0xB92488")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xB92904", Offset = "0xB92904", VA = "0xB92904")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xB92B9C", Offset = "0xB92B9C", VA = "0xB92B9C")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xB92CF0", Offset = "0xB92CF0", VA = "0xB92CF0")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB92ED4", Offset = "0xB92ED4", VA = "0xB92ED4")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xB91A60", Offset = "0xB91A60", VA = "0xB91A60")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xB92FA8", Offset = "0xB92FA8", VA = "0xB92FA8")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xB918A4", Offset = "0xB918A4", VA = "0xB918A4")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xB93098", Offset = "0xB93098", VA = "0xB93098")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xB936F0", Offset = "0xB936F0", VA = "0xB936F0")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xB93BD4", Offset = "0xB93BD4", VA = "0xB93BD4")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xB93BFC", Offset = "0xB93BFC", VA = "0xB93BFC")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xB93C24", Offset = "0xB93C24", VA = "0xB93C24")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xB91D6C", Offset = "0xB91D6C", VA = "0xB91D6C")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xB9315C", Offset = "0xB9315C", VA = "0xB9315C")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xB94044", Offset = "0xB94044", VA = "0xB94044")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83DBC4", Offset = "0x83DBC4")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xB940B0", Offset = "0xB940B0", VA = "0xB940B0")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xB93F04", Offset = "0xB93F04", VA = "0xB93F04")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB94174", Offset = "0xB94174", VA = "0xB94174")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB9425C", Offset = "0xB9425C", VA = "0xB9425C")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB93C60", Offset = "0xB93C60", VA = "0xB93C60")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB94344", Offset = "0xB94344", VA = "0xB94344")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200001B")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xBE59E0", Offset = "0xBE59E0", VA = "0xBE59E0")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200001C")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xBE5AA4", Offset = "0xBE5AA4", VA = "0xBE5AA4")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xBE6D28", Offset = "0xBE6D28", VA = "0xBE6D28")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xBE68FC", Offset = "0xBE68FC", VA = "0xBE68FC")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xBE668C", Offset = "0xBE668C", VA = "0xBE668C")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xBE6768", Offset = "0xBE6768", VA = "0xBE6768")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xBE6FB8", Offset = "0xBE6FB8", VA = "0xBE6FB8")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200001D")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000E8")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xBE7540", Offset = "0xBE7540", VA = "0xBE7540")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xBE77AC", Offset = "0xBE77AC", VA = "0xBE77AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xBE7BF8", Offset = "0xBE7BF8", VA = "0xBE7BF8")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200001F")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xBE7D10", Offset = "0xBE7D10", VA = "0xBE7D10")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xBE7E80", Offset = "0xBE7E80", VA = "0xBE7E80")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xBE7FA4", Offset = "0xBE7FA4", VA = "0xBE7FA4")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000020")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xBE8004", Offset = "0xBE8004", VA = "0xBE8004")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xBE78D0", Offset = "0xBE78D0", VA = "0xBE78D0")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xBE8654", Offset = "0xBE8654", VA = "0xBE8654")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xBE86B4", Offset = "0xBE86B4", VA = "0xBE86B4")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xBE8E68", Offset = "0xBE8E68", VA = "0xBE8E68")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xBE7C58", Offset = "0xBE7C58", VA = "0xBE7C58")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000021")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000022")]
	public enum PacketMode
	{
		[Token(Token = "0x40000FC")]
		SDK,
		[Token(Token = "0x40000FD")]
		Unity
	}

	[Token(Token = "0x2000023")]
	public struct ControllerPose
	{
		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x1BF2810", Offset = "0x1BF2810", VA = "0x1BF2810")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000024")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x1BF28EC", Offset = "0x1BF28EC", VA = "0x1BF28EC")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xBEA514", Offset = "0xBEA514", VA = "0xBEA514")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000C6")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xBEA524", Offset = "0xBEA524", VA = "0xBEA524")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xBEA5AC", Offset = "0xBEA5AC", VA = "0xBEA5AC")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xBEA828", Offset = "0xBEA828", VA = "0xBEA828")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xBEA830", Offset = "0xBEA830", VA = "0xBEA830")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000025")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xBEA840", Offset = "0xBEA840", VA = "0xBEA840")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xBEA9A4", Offset = "0xBEA9A4", VA = "0xBEA9A4")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000026")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xBEAA0C", Offset = "0xBEAA0C", VA = "0xBEAA0C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xBEAB70", Offset = "0xBEAB70", VA = "0xBEAB70")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xBEAF0C", Offset = "0xBEAF0C", VA = "0xBEAF0C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xBEB130", Offset = "0xBEB130", VA = "0xBEB130", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xBEB15C", Offset = "0xBEB15C", VA = "0xBEB15C")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000027")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000028")]
	public enum TextureType
	{
		[Token(Token = "0x4000133")]
		DiffuseTextures,
		[Token(Token = "0x4000134")]
		NormalMaps,
		[Token(Token = "0x4000135")]
		RoughnessMaps,
		[Token(Token = "0x4000136")]
		Count
	}

	[Token(Token = "0x2000029")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200002A")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200002B")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200002C")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x1BF32E8", Offset = "0x1BF32E8", VA = "0x1BF32E8")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200002D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83559C", Offset = "0x83559C")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E7")]
			[Address(RVA = "0x1BF3298", Offset = "0x1BF3298", VA = "0x1BF3298", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E9")]
			[Address(RVA = "0x1BF32E0", Offset = "0x1BF32E0", VA = "0x1BF32E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x1BF2BF0", Offset = "0x1BF2BF0", VA = "0x1BF2BF0")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x1BF2C1C", Offset = "0x1BF2C1C", VA = "0x1BF2C1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x1BF2C20", Offset = "0x1BF2C20", VA = "0x1BF2C20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x1BF32A0", Offset = "0x1BF32A0", VA = "0x1BF32A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400012E")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x400012F")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000130")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000131")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xBEB1A8", Offset = "0xBEB1A8", VA = "0xBEB1A8")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xBEB334", Offset = "0xBEB334", VA = "0xBEB334")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xBEB35C", Offset = "0xBEB35C", VA = "0xBEB35C")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xBEBAB8", Offset = "0xBEBAB8", VA = "0xBEBAB8")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xBEBDA0", Offset = "0xBEBDA0", VA = "0xBEBDA0")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xBEB3F8", Offset = "0xBEB3F8", VA = "0xBEB3F8")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xBEBE8C", Offset = "0xBEBE8C", VA = "0xBEBE8C")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xBEB830", Offset = "0xBEB830", VA = "0xBEB830")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xBEC11C", Offset = "0xBEC11C", VA = "0xBEC11C")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xBEC3C0", Offset = "0xBEC3C0", VA = "0xBEC3C0")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xBEC4E8", Offset = "0xBEC4E8", VA = "0xBEC4E8")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xBEC520", Offset = "0xBEC520", VA = "0xBEC520")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xBEBA40", Offset = "0xBEBA40", VA = "0xBEBA40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83DC74", Offset = "0x83DC74")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xBED398", Offset = "0xBED398", VA = "0xBED398")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200002E")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000009")]
	public float Duration
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xBED8DC", Offset = "0xBED8DC", VA = "0xBED8DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000A")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xBED950", Offset = "0xBED950", VA = "0xBED950")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xBED9E0", Offset = "0xBED9E0", VA = "0xBED9E0")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xBEDAE8", Offset = "0xBEDAE8", VA = "0xBEDAE8")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xBEDC84", Offset = "0xBEDC84", VA = "0xBEDC84")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xBEDDA4", Offset = "0xBEDDA4", VA = "0xBEDDA4")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xBEDE7C", Offset = "0xBEDE7C", VA = "0xBEDE7C")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xBEE0AC", Offset = "0xBEE0AC", VA = "0xBEE0AC")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xBEE388", Offset = "0xBEE388", VA = "0xBEE388")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200002F")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xB201C4", Offset = "0xB201C4", VA = "0xB201C4")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xB202D8", Offset = "0xB202D8", VA = "0xB202D8")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xB20484", Offset = "0xB20484", VA = "0xB20484")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB20348", Offset = "0xB20348", VA = "0xB20348")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xB203DC", Offset = "0xB203DC", VA = "0xB203DC")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000030")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB1FDC4", Offset = "0xB1FDC4", VA = "0xB1FDC4")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB20168", Offset = "0xB20168", VA = "0xB20168")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB1FF64", Offset = "0xB1FF64", VA = "0xB1FF64")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB1FFDC", Offset = "0xB1FFDC", VA = "0xB1FFDC")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB20078", Offset = "0xB20078", VA = "0xB20078")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000031")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000158")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000159")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xBEE5B0", Offset = "0xBEE5B0", VA = "0xBEE5B0")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xBEE638", Offset = "0xBEE638", VA = "0xBEE638", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xBEE654", Offset = "0xBEE654", VA = "0xBEE654")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xBEE7F8", Offset = "0xBEE7F8", VA = "0xBEE7F8")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xBEE9A8", Offset = "0xBEE9A8", VA = "0xBEE9A8")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000032")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xBEEA3C", Offset = "0xBEEA3C", VA = "0xBEEA3C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xBEEB20", Offset = "0xBEEB20", VA = "0xBEEB20")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xBEED14", Offset = "0xBEED14", VA = "0xBEED14")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xBEF0D4", Offset = "0xBEF0D4", VA = "0xBEF0D4")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xBEF1E0", Offset = "0xBEF1E0", VA = "0xBEF1E0")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000033")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000162")]
	Body = 1,
	[Token(Token = "0x4000163")]
	Hands = 2,
	[Token(Token = "0x4000164")]
	Base = 4,
	[Token(Token = "0x4000165")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000166")]
	Expressive = 0x20,
	[Token(Token = "0x4000167")]
	All = -1
}
[Token(Token = "0x2000034")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000169")]
	AvatarSpecification,
	[Token(Token = "0x400016A")]
	AssetLoaded,
	[Token(Token = "0x400016B")]
	Count
}
[Token(Token = "0x2000035")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000036")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000037")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000171")]
	Mesh,
	[Token(Token = "0x4000172")]
	Texture,
	[Token(Token = "0x4000173")]
	Pose,
	[Token(Token = "0x4000174")]
	Material,
	[Token(Token = "0x4000175")]
	CombinedMesh,
	[Token(Token = "0x4000176")]
	PBSMaterial,
	[Token(Token = "0x4000177")]
	FailedLoad,
	[Token(Token = "0x4000178")]
	Count
}
[Token(Token = "0x2000038")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000039")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200003A")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200003B")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003C")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003D")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40001AD")]
	RGB24,
	[Token(Token = "0x40001AE")]
	DXT1,
	[Token(Token = "0x40001AF")]
	DXT5,
	[Token(Token = "0x40001B0")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40001B1")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40001B2")]
	Count
}
[Token(Token = "0x200003E")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200003F")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001BA")]
	SkinnedMeshRender,
	[Token(Token = "0x40001BB")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001BC")]
	ProjectorRender,
	[Token(Token = "0x40001BD")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001BE")]
	Count
}
[Token(Token = "0x2000040")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001C0")]
	Unknown,
	[Token(Token = "0x40001C1")]
	Default,
	[Token(Token = "0x40001C2")]
	Verbose,
	[Token(Token = "0x40001C3")]
	Debug,
	[Token(Token = "0x40001C4")]
	Info,
	[Token(Token = "0x40001C5")]
	Warn,
	[Token(Token = "0x40001C6")]
	Error,
	[Token(Token = "0x40001C7")]
	Fatal,
	[Token(Token = "0x40001C8")]
	Silent
}
[Token(Token = "0x2000041")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000042")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001CD")]
	One = 1,
	[Token(Token = "0x40001CE")]
	Two = 2,
	[Token(Token = "0x40001CF")]
	Three = 4,
	[Token(Token = "0x40001D0")]
	Joystick = 8
}
[Token(Token = "0x2000043")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001D2")]
	One = 1,
	[Token(Token = "0x40001D3")]
	Two = 2,
	[Token(Token = "0x40001D4")]
	Joystick = 4,
	[Token(Token = "0x40001D5")]
	ThumbRest = 8,
	[Token(Token = "0x40001D6")]
	Index = 0x10,
	[Token(Token = "0x40001D7")]
	Pointing = 0x40,
	[Token(Token = "0x40001D8")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000044")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000045")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000046")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000048")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200004A")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004B")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004C")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001F8")]
	Add,
	[Token(Token = "0x40001F9")]
	Multiply,
	[Token(Token = "0x40001FA")]
	Count
}
[Token(Token = "0x200004D")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001FC")]
	Color,
	[Token(Token = "0x40001FD")]
	Texture,
	[Token(Token = "0x40001FE")]
	TextureSingleChannel,
	[Token(Token = "0x40001FF")]
	Parallax,
	[Token(Token = "0x4000200")]
	Count
}
[Token(Token = "0x200004E")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000202")]
	None,
	[Token(Token = "0x4000203")]
	Positional,
	[Token(Token = "0x4000204")]
	ViewReflection,
	[Token(Token = "0x4000205")]
	Fresnel,
	[Token(Token = "0x4000206")]
	Pulse,
	[Token(Token = "0x4000207")]
	Count
}
[Token(Token = "0x200004F")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000209")]
	Touch,
	[Token(Token = "0x400020A")]
	Malibu,
	[Token(Token = "0x400020B")]
	Go,
	[Token(Token = "0x400020C")]
	Quest,
	[Token(Token = "0x400020D")]
	Count
}
[Token(Token = "0x2000050")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x400020F")]
	Lowest = 1,
	[Token(Token = "0x4000210")]
	Medium = 3,
	[Token(Token = "0x4000211")]
	Highest = 5
}
[Token(Token = "0x2000051")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000213")]
	Unknown = -1,
	[Token(Token = "0x4000214")]
	One,
	[Token(Token = "0x4000215")]
	Two
}
[Token(Token = "0x2000052")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1BE8070", Offset = "0x1BE8070", VA = "0x1BE8070")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1BE80A0", Offset = "0x1BE80A0", VA = "0x1BE80A0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1BE82BC", Offset = "0x1BE82BC", VA = "0x1BE82BC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000053")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1BE83A0", Offset = "0x1BE83A0", VA = "0x1BE83A0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1BE83D0", Offset = "0x1BE83D0", VA = "0x1BE83D0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1BE876C", Offset = "0x1BE876C", VA = "0x1BE876C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000054")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1BE7600", Offset = "0x1BE7600", VA = "0x1BE7600")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1BE7630", Offset = "0x1BE7630", VA = "0x1BE7630", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1BE78C0", Offset = "0x1BE78C0", VA = "0x1BE78C0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000055")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1BE88D4", Offset = "0x1BE88D4", VA = "0x1BE88D4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1BE8904", Offset = "0x1BE8904", VA = "0x1BE8904", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1BE8AF4", Offset = "0x1BE8AF4", VA = "0x1BE8AF4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000056")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xBE59E8", Offset = "0xBE59E8", VA = "0xBE59E8")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000057")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000058")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x400024A")]
	FirstPerson = 1,
	[Token(Token = "0x400024B")]
	ThirdPerson = 2,
	[Token(Token = "0x400024C")]
	SelfOccluding = 4
}
[Token(Token = "0x2000059")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005A")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005B")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200005C")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005D")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000262")]
	Default,
	[Token(Token = "0x4000263")]
	GripSphere,
	[Token(Token = "0x4000264")]
	GripCube,
	[Token(Token = "0x4000265")]
	Count
}
[Token(Token = "0x200005E")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000267")]
	Body,
	[Token(Token = "0x4000268")]
	Clothing,
	[Token(Token = "0x4000269")]
	Eyewear,
	[Token(Token = "0x400026A")]
	Hair,
	[Token(Token = "0x400026B")]
	Beard,
	[Token(Token = "0x400026C")]
	Count
}
[Token(Token = "0x200005F")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000060")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000061")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000062")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000063")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000276")]
	AvatarHead,
	[Token(Token = "0x4000277")]
	AvatarHand,
	[Token(Token = "0x4000278")]
	Object,
	[Token(Token = "0x4000279")]
	ObjectStatic,
	[Token(Token = "0x400027A")]
	Count
}
[Token(Token = "0x2000064")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000065")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000066")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000067")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000068")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000286")]
	Point,
	[Token(Token = "0x4000287")]
	Direction,
	[Token(Token = "0x4000288")]
	Spot,
	[Token(Token = "0x4000289")]
	Count
}
[Token(Token = "0x2000069")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200006A")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200006B")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200006C")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200006D")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x400029F")]
	None = 0u,
	[Token(Token = "0x40002A0")]
	GazeTarget = 1u,
	[Token(Token = "0x40002A1")]
	Any = uint.MaxValue
}
[Token(Token = "0x200006E")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200006F")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000070")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000071")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000072")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000073")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000074")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x1BF32F0", Offset = "0x1BF32F0", VA = "0x1BF32F0")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002B6")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000B")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0xBE8EF8", Offset = "0xBE8EF8", VA = "0xBE8EF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xBEF1F0", Offset = "0xBEF1F0", VA = "0xBEF1F0")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xBEF4F8", Offset = "0xBEF4F8", VA = "0xBEF4F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xBEF568", Offset = "0xBEF568", VA = "0xBEF568")]
	private void Update()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xBEFF38", Offset = "0xBEFF38", VA = "0xBEFF38")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xBEFF8C", Offset = "0xBEFF8C", VA = "0xBEFF8C")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xBEFFE0", Offset = "0xBEFFE0", VA = "0xBEFFE0")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xBF0044", Offset = "0xBF0044", VA = "0xBF0044")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xBF00A8", Offset = "0xBF00A8", VA = "0xBF00A8")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xBEFD38", Offset = "0xBEFD38", VA = "0xBEFD38")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xBF0184", Offset = "0xBF0184", VA = "0xBF0184")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xBF02D8", Offset = "0xBF02D8", VA = "0xBF02D8")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xBE90CC", Offset = "0xBE90CC", VA = "0xBE90CC")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xBF03CC", Offset = "0xBF03CC", VA = "0xBF03CC")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xBEF4AC", Offset = "0xBEF4AC", VA = "0xBEF4AC")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xBEBB18", Offset = "0xBEBB18", VA = "0xBEBB18")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xBF04AC", Offset = "0xBF04AC", VA = "0xBF04AC")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000075")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000C")]
	public static string AppID
	{
		[Token(Token = "0x600013A")]
		[Address(RVA = "0xBF046C", Offset = "0xBF046C", VA = "0xBF046C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600013B")]
		[Address(RVA = "0xBF0604", Offset = "0xBF0604", VA = "0xBF0604")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static string MobileAppID
	{
		[Token(Token = "0x600013C")]
		[Address(RVA = "0xBF048C", Offset = "0xBF048C", VA = "0xBF048C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600013D")]
		[Address(RVA = "0xBF0630", Offset = "0xBF0630", VA = "0xBF0630")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0xBF04C4", Offset = "0xBF04C4", VA = "0xBF04C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600013F")]
		[Address(RVA = "0xBF065C", Offset = "0xBF065C", VA = "0xBF065C")]
		set
		{
		}
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xBF06AC", Offset = "0xBF06AC", VA = "0xBF06AC")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000076")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xBF1ED0", Offset = "0xBF1ED0", VA = "0xBF1ED0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xBE800C", Offset = "0xBE800C", VA = "0xBE800C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xBF2028", Offset = "0xBF2028", VA = "0xBF2028")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xBF2190", Offset = "0xBF2190", VA = "0xBF2190")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000077")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xBF21A0", Offset = "0xBF21A0", VA = "0xBF21A0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xBE8248", Offset = "0xBE8248", VA = "0xBE8248")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xBF22E4", Offset = "0xBF22E4", VA = "0xBF22E4")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000078")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002CD")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002CE")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002CF")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xBF0700", Offset = "0xBF0700", VA = "0xBF0700")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xBE8418", Offset = "0xBE8418", VA = "0xBE8418")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xBF1654", Offset = "0xBF1654", VA = "0xBF1654")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xBF0DC8", Offset = "0xBF0DC8", VA = "0xBF0DC8")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xBF0AEC", Offset = "0xBF0AEC", VA = "0xBF0AEC")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xBF0C50", Offset = "0xBF0C50", VA = "0xBF0C50")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xBF1EC0", Offset = "0xBF1EC0", VA = "0xBF1EC0")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000079")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200007A")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200007B")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x1BF3984", Offset = "0x1BF3984", VA = "0x1BF3984")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200007C")]
	public struct TextureSet
	{
		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x1BF3994", Offset = "0x1BF3994", VA = "0x1BF3994")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200007D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83561C", Offset = "0x83561C")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015E")]
			[Address(RVA = "0x1BF3934", Offset = "0x1BF3934", VA = "0x1BF3934", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000160")]
			[Address(RVA = "0x1BF397C", Offset = "0x1BF397C", VA = "0x1BF397C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x1BF331C", Offset = "0x1BF331C", VA = "0x1BF331C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x1BF3348", Offset = "0x1BF3348", VA = "0x1BF3348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x1BF334C", Offset = "0x1BF334C", VA = "0x1BF334C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x1BF393C", Offset = "0x1BF393C", VA = "0x1BF393C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002D3")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002D4")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002D7")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002D8")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002D9")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002DA")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002DB")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002DC")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002DD")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xBF2A10", Offset = "0xBF2A10", VA = "0xBF2A10")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xBF2DF8", Offset = "0xBF2DF8", VA = "0xBF2DF8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xBF2FF8", Offset = "0xBF2FF8", VA = "0xBF2FF8")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xBEBF70", Offset = "0xBEBF70", VA = "0xBEBF70")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xBF2F6C", Offset = "0xBF2F6C", VA = "0xBF2F6C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xBEBB98", Offset = "0xBEBB98", VA = "0xBEBB98")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xBEBDE8", Offset = "0xBEBDE8", VA = "0xBEBDE8")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xBF3044", Offset = "0xBF3044", VA = "0xBF3044")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83DDC4", Offset = "0x83DDC4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xBF0138", Offset = "0xBF0138", VA = "0xBF0138")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xBF30D4", Offset = "0xBF30D4", VA = "0xBF30D4")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x200007E")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xBF320C", Offset = "0xBF320C", VA = "0xBF320C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xBF3370", Offset = "0xBF3370", VA = "0xBF3370")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200007F")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000080")]
	public delegate void OnClick();

	[Token(Token = "0x2000081")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000082")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000083")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000084")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83562C", Offset = "0x83562C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x1BEAEDC", Offset = "0x1BEAEDC", VA = "0x1BEAEDC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x1BEAEE4", Offset = "0x1BEAEE4", VA = "0x1BEAEE4")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83563C", Offset = "0x83563C")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000186")]
		[Address(RVA = "0x1BEB108", Offset = "0x1BEB108", VA = "0x1BEB108")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x1BEB110", Offset = "0x1BEB110", VA = "0x1BEB110")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000086")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83564C", Offset = "0x83564C")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000188")]
		[Address(RVA = "0x1BEB35C", Offset = "0x1BEB35C", VA = "0x1BEB35C")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x1BEB364", Offset = "0x1BEB364", VA = "0x1BEB364")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000087")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83565C", Offset = "0x83565C")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x1BEB6F8", Offset = "0x1BEB6F8", VA = "0x1BEB6F8")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x1BEB700", Offset = "0x1BEB700", VA = "0x1BEB700")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000088")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83566C", Offset = "0x83566C")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x1BEB720", Offset = "0x1BEB720", VA = "0x1BEB720")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x1BEB728", Offset = "0x1BEB728", VA = "0x1BEB728")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40002EF")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40002F0")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40002F1")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xBBD754", Offset = "0xBBD754", VA = "0xBBD754")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xBBDC0C", Offset = "0xBBDC0C", VA = "0xBBDC0C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xBBDFC0", Offset = "0xBBDFC0", VA = "0xBBDFC0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xBBE17C", Offset = "0xBBE17C", VA = "0xBBE17C")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xBBE3BC", Offset = "0xBBE3BC", VA = "0xBBE3BC")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xBBDFB0", Offset = "0xBBDFB0", VA = "0xBBDFB0")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xBBE6EC", Offset = "0xBBE6EC", VA = "0xBBE6EC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xBBE9C4", Offset = "0xBBE9C4", VA = "0xBBE9C4")]
	public RectTransform AddButton(string label, [System.Runtime.InteropServices.Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xBBED7C", Offset = "0xBBED7C", VA = "0xBBED7C")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xBBEE80", Offset = "0xBBEE80", VA = "0xBBEE80")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xBBF058", Offset = "0xBBF058", VA = "0xBBF058")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xBBF0FC", Offset = "0xBBF0FC", VA = "0xBBF0FC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xBBF2CC", Offset = "0xBBF2CC", VA = "0xBBF2CC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xBBF4B4", Offset = "0xBBF4B4", VA = "0xBBF4B4")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xBBF79C", Offset = "0xBBF79C", VA = "0xBBF79C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xBBF898", Offset = "0xBBF898", VA = "0xBBF898")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xBBF944", Offset = "0xBBF944", VA = "0xBBF944")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000089")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1C25820", Offset = "0x1C25820", VA = "0x1C25820")]
	private void Start()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1C258BC", Offset = "0x1C258BC", VA = "0x1C258BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1C2597C", Offset = "0x1C2597C", VA = "0x1C2597C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1C259B8", Offset = "0x1C259B8", VA = "0x1C259B8")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200008A")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200008B")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000321")]
		On,
		[Token(Token = "0x4000322")]
		Off,
		[Token(Token = "0x4000323")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000011")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0xA1B68C", Offset = "0xA1B68C", VA = "0xA1B68C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000192")]
		[Address(RVA = "0xA1B648", Offset = "0xA1B648", VA = "0xA1B648")]
		set
		{
		}
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xA1B694", Offset = "0xA1B694", VA = "0xA1B694")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xA1B6E8", Offset = "0xA1B6E8", VA = "0xA1B6E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xA1B898", Offset = "0xA1B898", VA = "0xA1B898", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xA1B8B4", Offset = "0xA1B8B4", VA = "0xA1B8B4", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xA1B908", Offset = "0xA1B908", VA = "0xA1B908")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xA1BAC4", Offset = "0xA1BAC4", VA = "0xA1BAC4")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xA1BBD8", Offset = "0xA1BBD8", VA = "0xA1BBD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xA1BC68", Offset = "0xA1BC68", VA = "0xA1BC68")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xA1BD34", Offset = "0xA1BD34", VA = "0xA1BD34")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xA1BDE8", Offset = "0xA1BDE8", VA = "0xA1BDE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xA1BF40", Offset = "0xA1BF40", VA = "0xA1BF40")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200008C")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000324")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000325")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000326")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837734", Offset = "0x837734")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83776C", Offset = "0x83776C")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8377A4", Offset = "0x8377A4")]
	public float HeightOffset;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8377DC", Offset = "0x8377DC")]
	public float MinimumHeight;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837814", Offset = "0x837814")]
	public float MaximumHeight;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xB2CD84", Offset = "0xB2CD84", VA = "0xB2CD84")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xB2CD8C", Offset = "0xB2CD8C", VA = "0xB2CD8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xB2CE04", Offset = "0xB2CE04", VA = "0xB2CE04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xB2CE98", Offset = "0xB2CE98", VA = "0xB2CE98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xB2CF2C", Offset = "0xB2CF2C", VA = "0xB2CF2C")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xB2D258", Offset = "0xB2D258", VA = "0xB2D258")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xB2D488", Offset = "0xB2D488", VA = "0xB2D488")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200008D")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xA1CBF8", Offset = "0xA1CBF8", VA = "0xA1CBF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xA1CCAC", Offset = "0xA1CCAC", VA = "0xA1CCAC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200008E")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	public enum States
	{
		[Token(Token = "0x4000354")]
		Ready,
		[Token(Token = "0x4000355")]
		Aim,
		[Token(Token = "0x4000356")]
		CancelAim,
		[Token(Token = "0x4000357")]
		PreTeleport,
		[Token(Token = "0x4000358")]
		CancelTeleport,
		[Token(Token = "0x4000359")]
		Teleporting,
		[Token(Token = "0x400035A")]
		PostTeleport
	}

	[Token(Token = "0x2000090")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x400035C")]
		None,
		[Token(Token = "0x400035D")]
		Aim,
		[Token(Token = "0x400035E")]
		PreTeleport,
		[Token(Token = "0x400035F")]
		Teleport
	}

	[Token(Token = "0x2000091")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000361")]
		Point,
		[Token(Token = "0x4000362")]
		Sphere,
		[Token(Token = "0x4000363")]
		Capsule
	}

	[Token(Token = "0x2000092")]
	public class AimData
	{
		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x837C2C", Offset = "0x837C2C")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000015")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60001DD")]
			[Address(RVA = "0x1BF0424", Offset = "0x1BF0424", VA = "0x1BF0424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E2EC", Offset = "0x83E2EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001DE")]
			[Address(RVA = "0x1BF042C", Offset = "0x1BF042C", VA = "0x1BF042C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E2FC", Offset = "0x83E2FC")]
			private set
			{
			}
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x1BF03A8", Offset = "0x1BF03A8", VA = "0x1BF03A8")]
		public AimData()
		{
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x1BF0434", Offset = "0x1BF0434", VA = "0x1BF0434")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83567C", Offset = "0x83567C")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E3")]
			[Address(RVA = "0x1BF0200", Offset = "0x1BF0200", VA = "0x1BF0200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E5")]
			[Address(RVA = "0x1BF0248", Offset = "0x1BF0248", VA = "0x1BF0248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x1BF00E4", Offset = "0x1BF00E4", VA = "0x1BF00E4")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x1BF0110", Offset = "0x1BF0110", VA = "0x1BF0110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x1BF0114", Offset = "0x1BF0114", VA = "0x1BF0114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x1BF0208", Offset = "0x1BF0208", VA = "0x1BF0208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83568C", Offset = "0x83568C")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E9")]
			[Address(RVA = "0x1BEFB8C", Offset = "0x1BEFB8C", VA = "0x1BEFB8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EB")]
			[Address(RVA = "0x1BEFBD4", Offset = "0x1BEFBD4", VA = "0x1BEFBD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x1BEFA1C", Offset = "0x1BEFA1C", VA = "0x1BEFA1C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x1BEFA48", Offset = "0x1BEFA48", VA = "0x1BEFA48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x1BEFA4C", Offset = "0x1BEFA4C", VA = "0x1BEFA4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x1BEFB94", Offset = "0x1BEFB94", VA = "0x1BEFB94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000095")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83569C", Offset = "0x83569C")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001EF")]
			[Address(RVA = "0x1BEFCAC", Offset = "0x1BEFCAC", VA = "0x1BEFCAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F1")]
			[Address(RVA = "0x1BEFCF4", Offset = "0x1BEFCF4", VA = "0x1BEFCF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x1BEFBDC", Offset = "0x1BEFBDC", VA = "0x1BEFBDC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x1BEFC08", Offset = "0x1BEFC08", VA = "0x1BEFC08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x1BEFC0C", Offset = "0x1BEFC0C", VA = "0x1BEFC0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x1BEFCB4", Offset = "0x1BEFCB4", VA = "0x1BEFCB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8356AC", Offset = "0x8356AC")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F5")]
			[Address(RVA = "0x1BF0094", Offset = "0x1BF0094", VA = "0x1BF0094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F7")]
			[Address(RVA = "0x1BF00DC", Offset = "0x1BF00DC", VA = "0x1BF00DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x1BEFF84", Offset = "0x1BEFF84", VA = "0x1BEFF84")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x1BEFFB0", Offset = "0x1BEFFB0", VA = "0x1BEFFB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x1BEFFB4", Offset = "0x1BEFFB4", VA = "0x1BEFFB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x1BF009C", Offset = "0x1BF009C", VA = "0x1BF009C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000097")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8356BC", Offset = "0x8356BC")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001FB")]
			[Address(RVA = "0x1BEFDCC", Offset = "0x1BEFDCC", VA = "0x1BEFDCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001FD")]
			[Address(RVA = "0x1BEFE14", Offset = "0x1BEFE14", VA = "0x1BEFE14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x1BEFCFC", Offset = "0x1BEFCFC", VA = "0x1BEFCFC")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x1BEFD28", Offset = "0x1BEFD28", VA = "0x1BEFD28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x1BEFD2C", Offset = "0x1BEFD2C", VA = "0x1BEFD2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x1BEFDD4", Offset = "0x1BEFDD4", VA = "0x1BEFDD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000098")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8356CC", Offset = "0x8356CC")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000201")]
			[Address(RVA = "0x1BF0358", Offset = "0x1BF0358", VA = "0x1BF0358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000203")]
			[Address(RVA = "0x1BF03A0", Offset = "0x1BF03A0", VA = "0x1BF03A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x1BF0250", Offset = "0x1BF0250", VA = "0x1BF0250")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x1BF027C", Offset = "0x1BF027C", VA = "0x1BF027C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0x1BF0280", Offset = "0x1BF0280", VA = "0x1BF0280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0x1BF0360", Offset = "0x1BF0360", VA = "0x1BF0360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000099")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8356DC", Offset = "0x8356DC")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000207")]
			[Address(RVA = "0x1BEFF34", Offset = "0x1BEFF34", VA = "0x1BEFF34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000209")]
			[Address(RVA = "0x1BEFF7C", Offset = "0x1BEFF7C", VA = "0x1BEFF7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000204")]
		[Address(RVA = "0x1BEFE1C", Offset = "0x1BEFE1C", VA = "0x1BEFE1C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0x1BEFE48", Offset = "0x1BEFE48", VA = "0x1BEFE48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0x1BEFE4C", Offset = "0x1BEFE4C", VA = "0x1BEFE4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0x1BEFF3C", Offset = "0x1BEFF3C", VA = "0x1BEFF3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83784C", Offset = "0x83784C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837884", Offset = "0x837884")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8378BC", Offset = "0x8378BC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8378F4", Offset = "0x8378F4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83792C", Offset = "0x83792C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837964", Offset = "0x837964")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83799C", Offset = "0x83799C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8379D4", Offset = "0x8379D4")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x837A0C", Offset = "0x837A0C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837A1C", Offset = "0x837A1C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837A54", Offset = "0x837A54")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x837A9C", Offset = "0x837A9C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837AAC", Offset = "0x837AAC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837AE4", Offset = "0x837AE4")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837B1C", Offset = "0x837B1C")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837B54", Offset = "0x837B54")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000012")]
	public States CurrentState
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xA1D79C", Offset = "0xA1D79C", VA = "0xA1D79C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DE74", Offset = "0x83DE74")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xA1D7A4", Offset = "0xA1D7A4", VA = "0xA1D7A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DE84", Offset = "0x83DE84")]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xA1D9C8", Offset = "0xA1D9C8", VA = "0xA1D9C8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000014")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xA1D9F0", Offset = "0xA1D9F0", VA = "0xA1D9F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DEB4", Offset = "0x83DEB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xA1D9F8", Offset = "0xA1D9F8", VA = "0xA1D9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DEC4", Offset = "0x83DEC4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xA1D7AC", Offset = "0xA1D7AC", VA = "0xA1D7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DE94", Offset = "0x83DE94")]
		add
		{
		}
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xA1D84C", Offset = "0xA1D84C", VA = "0xA1D84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DEA4", Offset = "0x83DEA4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xA1DFF0", Offset = "0xA1DFF0", VA = "0xA1DFF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DF0C", Offset = "0x83DF0C")]
		add
		{
		}
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xA1E090", Offset = "0xA1E090", VA = "0xA1E090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DF1C", Offset = "0x83DF1C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xA1E130", Offset = "0xA1E130", VA = "0xA1E130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DF8C", Offset = "0x83DF8C")]
		add
		{
		}
		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xA1E1D0", Offset = "0xA1E1D0", VA = "0xA1E1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DF9C", Offset = "0x83DF9C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xA1E270", Offset = "0xA1E270", VA = "0xA1E270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DFAC", Offset = "0x83DFAC")]
		add
		{
		}
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xA1E310", Offset = "0xA1E310", VA = "0xA1E310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DFBC", Offset = "0x83DFBC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xA1E420", Offset = "0xA1E420", VA = "0xA1E420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DFCC", Offset = "0x83DFCC")]
		add
		{
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xA1E4C0", Offset = "0xA1E4C0", VA = "0xA1E4C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83DFDC", Offset = "0x83DFDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xA1E5CC", Offset = "0xA1E5CC", VA = "0xA1E5CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E04C", Offset = "0x83E04C")]
		add
		{
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xA1E66C", Offset = "0xA1E66C", VA = "0xA1E66C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E05C", Offset = "0x83E05C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xA1E778", Offset = "0xA1E778", VA = "0xA1E778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E0CC", Offset = "0x83E0CC")]
		add
		{
		}
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xA1E818", Offset = "0xA1E818", VA = "0xA1E818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E0DC", Offset = "0x83E0DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xA1E924", Offset = "0xA1E924", VA = "0xA1E924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E14C", Offset = "0x83E14C")]
		add
		{
		}
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xA1E9C4", Offset = "0xA1E9C4", VA = "0xA1E9C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E15C", Offset = "0x83E15C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xA1EAD0", Offset = "0xA1EAD0", VA = "0xA1EAD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E1CC", Offset = "0x83E1CC")]
		add
		{
		}
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xA1EB70", Offset = "0xA1EB70", VA = "0xA1EB70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E1DC", Offset = "0x83E1DC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xA1EC7C", Offset = "0xA1EC7C", VA = "0xA1EC7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E24C", Offset = "0x83E24C")]
		add
		{
		}
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xA1ED1C", Offset = "0xA1ED1C", VA = "0xA1ED1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E25C", Offset = "0x83E25C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xA1EE28", Offset = "0xA1EE28", VA = "0xA1EE28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E2CC", Offset = "0x83E2CC")]
		add
		{
		}
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xA1EEC8", Offset = "0xA1EEC8", VA = "0xA1EEC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E2DC", Offset = "0x83E2DC")]
		remove
		{
		}
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xA1D448", Offset = "0xA1D448", VA = "0xA1D448")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xA1D46C", Offset = "0xA1D46C", VA = "0xA1D46C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xA1D8EC", Offset = "0xA1D8EC", VA = "0xA1D8EC")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xA1DA00", Offset = "0xA1DA00", VA = "0xA1DA00")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xA1DC4C", Offset = "0xA1DC4C", VA = "0xA1DC4C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x83DED4", Offset = "0x83DED4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xA1DD00", Offset = "0xA1DD00", VA = "0xA1DD00")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xA1DDD0", Offset = "0xA1DDD0", VA = "0xA1DDD0")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xA1DDEC", Offset = "0xA1DDEC", VA = "0xA1DDEC")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xA1DEB0", Offset = "0xA1DEB0", VA = "0xA1DEB0")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xA1DEF4", Offset = "0xA1DEF4", VA = "0xA1DEF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xA1DF4C", Offset = "0xA1DF4C", VA = "0xA1DF4C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xA1DFE8", Offset = "0xA1DFE8", VA = "0xA1DFE8", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xA1DF7C", Offset = "0xA1DF7C", VA = "0xA1DF7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83DF2C", Offset = "0x83DF2C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xA1E3B0", Offset = "0xA1E3B0", VA = "0xA1E3B0")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xA1E560", Offset = "0xA1E560", VA = "0xA1E560")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83DFEC", Offset = "0x83DFEC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xA1E70C", Offset = "0xA1E70C", VA = "0xA1E70C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83E06C", Offset = "0x83E06C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xA1E8B8", Offset = "0xA1E8B8", VA = "0xA1E8B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83E0EC", Offset = "0x83E0EC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xA1EA64", Offset = "0xA1EA64", VA = "0xA1EA64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83E16C", Offset = "0x83E16C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xA1EC10", Offset = "0xA1EC10", VA = "0xA1EC10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83E1EC", Offset = "0x83E1EC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xA1EDBC", Offset = "0xA1EDBC", VA = "0xA1EDBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83E26C", Offset = "0x83E26C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xA1EF68", Offset = "0xA1EF68", VA = "0xA1EF68")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xA1F0A8", Offset = "0xA1F0A8", VA = "0xA1F0A8")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xA1F0DC", Offset = "0xA1F0DC", VA = "0xA1F0DC")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xA1F1A4", Offset = "0xA1F1A4", VA = "0xA1F1A4")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xA1F29C", Offset = "0xA1F29C", VA = "0xA1F29C")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200009A")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0xB154D0", Offset = "0xB154D0", VA = "0xB154D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E53C", Offset = "0x83E53C")]
		add
		{
		}
		[Token(Token = "0x600020B")]
		[Address(RVA = "0xB15570", Offset = "0xB15570", VA = "0xB15570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E54C", Offset = "0x83E54C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xB15610", Offset = "0xB15610", VA = "0xB15610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E55C", Offset = "0x83E55C")]
		add
		{
		}
		[Token(Token = "0x600020D")]
		[Address(RVA = "0xB156B0", Offset = "0xB156B0", VA = "0xB156B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E56C", Offset = "0x83E56C")]
		remove
		{
		}
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xB15750", Offset = "0xB15750", VA = "0xB15750")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xB1580C", Offset = "0xB1580C", VA = "0xB1580C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xB15810", Offset = "0xB15810", VA = "0xB15810")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xB15884", Offset = "0xB15884", VA = "0xB15884")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xB159A8", Offset = "0xB159A8", VA = "0xB159A8")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xB15B90", Offset = "0xB15B90", VA = "0xB15B90")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xB15D98", Offset = "0xB15D98", VA = "0xB15D98")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200009B")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000215")]
	[Address(RVA = "0xC2A93C", Offset = "0xC2A93C", VA = "0xC2A93C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xC2A9CC", Offset = "0xC2A9CC", VA = "0xC2A9CC", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000217")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xC2AA98", Offset = "0xC2AA98", VA = "0xC2AA98")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837C5C", Offset = "0x837C5C")]
	public float Range;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xC2AAA8", Offset = "0xC2AAA8", VA = "0xC2AAA8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xC2ABA4", Offset = "0xC2ABA4", VA = "0xC2ABA4")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200009D")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837C94", Offset = "0x837C94")]
	public float Range;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837CCC", Offset = "0x837CCC")]
	public float MinimumElevation;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837D04", Offset = "0x837D04")]
	public float Gravity;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x837D3C", Offset = "0x837D3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837D3C", Offset = "0x837D3C")]
	public float AimVelocity;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837D98", Offset = "0x837D98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x837D98", Offset = "0x837D98")]
	public float AimStep;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xC2ABB4", Offset = "0xC2ABB4", VA = "0xC2ABB4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xC2AD44", Offset = "0xC2AD44", VA = "0xC2AD44")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837DF0", Offset = "0x837DF0")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xC2AD58", Offset = "0xC2AD58", VA = "0xC2AD58")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xC2AE74", Offset = "0xC2AE74", VA = "0xC2AE74")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xC2AEA4", Offset = "0xC2AEA4", VA = "0xC2AEA4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xC2AED4", Offset = "0xC2AED4", VA = "0xC2AED4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xC2AF7C", Offset = "0xC2AF7C", VA = "0xC2AF7C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xC2AFE8", Offset = "0xC2AFE8", VA = "0xC2AFE8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xC2B050", Offset = "0xC2B050", VA = "0xC2B050")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200009F")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x837E28", Offset = "0x837E28")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837E38", Offset = "0x837E38")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837E70", Offset = "0x837E70")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837EA8", Offset = "0x837EA8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000024")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0xC2B174", Offset = "0xC2B174", VA = "0xC2B174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E57C", Offset = "0x83E57C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xC2B17C", Offset = "0xC2B17C", VA = "0xC2B17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E58C", Offset = "0x83E58C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0xC2B330", Offset = "0xC2B330", VA = "0xC2B330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E59C", Offset = "0x83E59C")]
		add
		{
		}
		[Token(Token = "0x600022B")]
		[Address(RVA = "0xC2B3D0", Offset = "0xC2B3D0", VA = "0xC2B3D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E5AC", Offset = "0x83E5AC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xC2B188", Offset = "0xC2B188", VA = "0xC2B188")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xC2B218", Offset = "0xC2B218", VA = "0xC2B218")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xC2B2EC", Offset = "0xC2B2EC", VA = "0xC2B2EC")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xC2B32C", Offset = "0xC2B32C", VA = "0xC2B32C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xC2B470", Offset = "0xC2B470", VA = "0xC2B470")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xC2B4D4", Offset = "0xC2B4D4", VA = "0xC2B4D4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xC2B4F4", Offset = "0xC2B4F4", VA = "0xC2B4F4", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000A0")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8356EC", Offset = "0x8356EC")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600023B")]
			[Address(RVA = "0x1BF7C00", Offset = "0x1BF7C00", VA = "0x1BF7C00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600023D")]
			[Address(RVA = "0x1BF7C48", Offset = "0x1BF7C48", VA = "0x1BF7C48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000238")]
		[Address(RVA = "0x1BF7B44", Offset = "0x1BF7B44", VA = "0x1BF7B44")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0x1BF7B70", Offset = "0x1BF7B70", VA = "0x1BF7B70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x1BF7B74", Offset = "0x1BF7B74", VA = "0x1BF7B74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x1BF7C08", Offset = "0x1BF7C08", VA = "0x1BF7C08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8356FC", Offset = "0x8356FC")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000241")]
			[Address(RVA = "0x1BF7AF4", Offset = "0x1BF7AF4", VA = "0x1BF7AF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000243")]
			[Address(RVA = "0x1BF7B3C", Offset = "0x1BF7B3C", VA = "0x1BF7B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x1BF7A34", Offset = "0x1BF7A34", VA = "0x1BF7A34")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0x1BF7A60", Offset = "0x1BF7A60", VA = "0x1BF7A60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0x1BF7A64", Offset = "0x1BF7A64", VA = "0x1BF7A64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x1BF7AFC", Offset = "0x1BF7AFC", VA = "0x1BF7AFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xC2B700", Offset = "0xC2B700", VA = "0xC2B700")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xC2B7C0", Offset = "0xC2B7C0", VA = "0xC2B7C0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xC2B818", Offset = "0xC2B818", VA = "0xC2B818", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xC2B8D0", Offset = "0xC2B8D0", VA = "0xC2B8D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83E5BC", Offset = "0x83E5BC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xC2B93C", Offset = "0xC2B93C", VA = "0xC2B93C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83E61C", Offset = "0x83E61C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000234")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000235")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xC2B9A8", Offset = "0xC2B9A8", VA = "0xC2B9A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E67C", Offset = "0x83E67C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xC2B9D4", Offset = "0xC2B9D4", VA = "0xC2B9D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E68C", Offset = "0x83E68C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000A3")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x837EF0", Offset = "0x837EF0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837F00", Offset = "0x837F00")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837F38", Offset = "0x837F38")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837F70", Offset = "0x837F70")]
	public bool FastTeleport;

	[Token(Token = "0x17000029")]
	public Transform Pointer
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xC2BA00", Offset = "0xC2BA00", VA = "0xC2BA00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E73C", Offset = "0x83E73C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000245")]
		[Address(RVA = "0xC2BA08", Offset = "0xC2BA08", VA = "0xC2BA08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E74C", Offset = "0x83E74C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xC2BA10", Offset = "0xC2BA10", VA = "0xC2BA10", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xC2BB68", Offset = "0xC2BB68", VA = "0xC2BB68", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xC2BC20", Offset = "0xC2BC20", VA = "0xC2BC20")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A4")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000A5")]
	public enum InputModes
	{
		[Token(Token = "0x40003B4")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40003B5")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40003B6")]
		ThumbstickTeleport,
		[Token(Token = "0x40003B7")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000A6")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40003B9")]
		A,
		[Token(Token = "0x40003BA")]
		B,
		[Token(Token = "0x40003BB")]
		LeftTrigger,
		[Token(Token = "0x40003BC")]
		LeftThumbstick,
		[Token(Token = "0x40003BD")]
		RightTrigger,
		[Token(Token = "0x40003BE")]
		RightThumbstick,
		[Token(Token = "0x40003BF")]
		X,
		[Token(Token = "0x40003C0")]
		Y
	}

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837FA8", Offset = "0x837FA8")]
	public InputModes InputMode;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x837FE0", Offset = "0x837FE0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838018", Offset = "0x838018")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838050", Offset = "0x838050")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xC2BC24", Offset = "0xC2BC24", VA = "0xC2BC24")]
	private void Start()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xC2BC28", Offset = "0xC2BC28", VA = "0xC2BC28", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xC2C010", Offset = "0xC2C010", VA = "0xC2C010", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xC2C0D0", Offset = "0xC2C0D0", VA = "0xC2C0D0")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000A7")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000A8")]
	public enum OrientationModes
	{
		[Token(Token = "0x40003C5")]
		HeadRelative,
		[Token(Token = "0x40003C6")]
		ForwardFacing
	}

	[Token(Token = "0x20000A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83570C", Offset = "0x83570C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000259")]
			[Address(RVA = "0x1BF7D24", Offset = "0x1BF7D24", VA = "0x1BF7D24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600025B")]
			[Address(RVA = "0x1BF7D6C", Offset = "0x1BF7D6C", VA = "0x1BF7D6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x1BF7C50", Offset = "0x1BF7C50", VA = "0x1BF7C50")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0x1BF7C7C", Offset = "0x1BF7C7C", VA = "0x1BF7C7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x1BF7C80", Offset = "0x1BF7C80", VA = "0x1BF7C80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0x1BF7D2C", Offset = "0x1BF7D2C", VA = "0x1BF7D2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xC2C19C", Offset = "0xC2C19C", VA = "0xC2C19C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xC2C27C", Offset = "0xC2C27C", VA = "0xC2C27C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xC2C284", Offset = "0xC2C284", VA = "0xC2C284", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xC2C2D0", Offset = "0xC2C2D0", VA = "0xC2C2D0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xC2C318", Offset = "0xC2C318", VA = "0xC2C318")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83E75C", Offset = "0x83E75C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000253")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xC2C384", Offset = "0xC2C384", VA = "0xC2C384")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xC2C440", Offset = "0xC2C440", VA = "0xC2C440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E7BC", Offset = "0x83E7BC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600025C")]
	[Address(RVA = "0xC2C46C", Offset = "0xC2C46C", VA = "0xC2C46C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xC2C470", Offset = "0xC2C470", VA = "0xC2C470", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xC2C4EC", Offset = "0xC2C4EC", VA = "0xC2C4EC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000AB")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838088", Offset = "0x838088")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8380C0", Offset = "0x8380C0")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8380F8", Offset = "0x8380F8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838130", Offset = "0x838130")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xC2C4F0", Offset = "0xC2C4F0", VA = "0xC2C4F0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xC2C51C", Offset = "0xC2C51C", VA = "0xC2C51C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xC2C8CC", Offset = "0xC2C8CC", VA = "0xC2C8CC")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000AC")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838168", Offset = "0x838168")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8381A0", Offset = "0x8381A0")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8381D8", Offset = "0x8381D8")]
	public float RotateStickThreshold;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xC2C8D0", Offset = "0xC2C8D0", VA = "0xC2C8D0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xC2C914", Offset = "0xC2C914", VA = "0xC2C914", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xC2CCBC", Offset = "0xC2CCBC", VA = "0xC2CCBC")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000AD")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xC2CCCC", Offset = "0xC2CCCC", VA = "0xC2CCCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xC2CCD0", Offset = "0xC2CCD0", VA = "0xC2CCD0")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xC2CCD8", Offset = "0xC2CCD8", VA = "0xC2CCD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xC2CD94", Offset = "0xC2CD94", VA = "0xC2CD94")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xC2CDBC", Offset = "0xC2CDBC", VA = "0xC2CDBC")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000AE")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x838210", Offset = "0x838210")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700002C")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600026A")]
		[Address(RVA = "0xC2CDD4", Offset = "0xC2CDD4", VA = "0xC2CDD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E81C", Offset = "0x83E81C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xC2CDDC", Offset = "0xC2CDDC", VA = "0xC2CDDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E82C", Offset = "0x83E82C")]
		private set
		{
		}
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xC2A96C", Offset = "0xC2A96C", VA = "0xC2A96C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xC2AA6C", Offset = "0xC2AA6C", VA = "0xC2AA6C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xC2CDE4", Offset = "0xC2CDE4", VA = "0xC2CDE4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x83E83C", Offset = "0x83E83C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xC2AFDC", Offset = "0xC2AFDC", VA = "0xC2AFDC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xC2B048", Offset = "0xC2B048", VA = "0xC2B048", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xC2AAA0", Offset = "0xC2AAA0", VA = "0xC2AAA0")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000AF")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83571C", Offset = "0x83571C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027D")]
			[Address(RVA = "0x1BF8038", Offset = "0x1BF8038", VA = "0x1BF8038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0x1BF8080", Offset = "0x1BF8080", VA = "0x1BF8080", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x1BF7D74", Offset = "0x1BF7D74", VA = "0x1BF7D74")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x1BF7DA0", Offset = "0x1BF7DA0", VA = "0x1BF7DA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x1BF7DA4", Offset = "0x1BF7DA4", VA = "0x1BF7DA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x1BF8040", Offset = "0x1BF8040", VA = "0x1BF8040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838220", Offset = "0x838220")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40003E0")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xC2CEC0", Offset = "0xC2CEC0", VA = "0xC2CEC0")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xC2CFB0", Offset = "0xC2CFB0", VA = "0xC2CFB0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xC2CFDC", Offset = "0xC2CFDC", VA = "0xC2CFDC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xC2D004", Offset = "0xC2D004", VA = "0xC2D004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83E874", Offset = "0x83E874")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xC2D070", Offset = "0xC2D070", VA = "0xC2D070", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000277")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xC2D08C", Offset = "0xC2D08C", VA = "0xC2D08C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xC2D1AC", Offset = "0xC2D1AC", VA = "0xC2D1AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83E8D4", Offset = "0x83E8D4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000B1")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xC2D1D8", Offset = "0xC2D1D8", VA = "0xC2D1D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xC2D234", Offset = "0xC2D234", VA = "0xC2D234", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xC2D32C", Offset = "0xC2D32C", VA = "0xC2D32C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xC2D424", Offset = "0xC2D424", VA = "0xC2D424")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x83E934", Offset = "0x83E934")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xC2D428", Offset = "0xC2D428", VA = "0xC2D428")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000B2")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838258", Offset = "0x838258")]
	public float LOSOffset;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838290", Offset = "0x838290")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xC2D434", Offset = "0xC2D434", VA = "0xC2D434", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xC2D640", Offset = "0xC2D640", VA = "0xC2D640")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000B3")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000287")]
	[Address(RVA = "0xC2D64C", Offset = "0xC2D64C", VA = "0xC2D64C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xC2D744", Offset = "0xC2D744", VA = "0xC2D744")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000B4")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000289")]
	[Address(RVA = "0xC2D748", Offset = "0xC2D748", VA = "0xC2D748", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xC2D7DC", Offset = "0xC2D7DC", VA = "0xC2D7DC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600028B")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xC2D86C", Offset = "0xC2D86C", VA = "0xC2D86C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000B5")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83572C", Offset = "0x83572C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000293")]
			[Address(RVA = "0x1BF81B4", Offset = "0x1BF81B4", VA = "0x1BF81B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000295")]
			[Address(RVA = "0x1BF81FC", Offset = "0x1BF81FC", VA = "0x1BF81FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x1BF8088", Offset = "0x1BF8088", VA = "0x1BF8088")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0x1BF80B4", Offset = "0x1BF80B4", VA = "0x1BF80B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x1BF80B8", Offset = "0x1BF80B8", VA = "0x1BF80B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x1BF81BC", Offset = "0x1BF81BC", VA = "0x1BF81BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8382C8", Offset = "0x8382C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8382C8", Offset = "0x8382C8")]
	public float TransitionDuration;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x838320", Offset = "0x838320")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838320", Offset = "0x838320")]
	public float TeleportDelay;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838374", Offset = "0x838374")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xC2D874", Offset = "0xC2D874", VA = "0xC2D874", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xC2D8A0", Offset = "0xC2D8A0", VA = "0xC2D8A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83E96C", Offset = "0x83E96C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xC2D90C", Offset = "0xC2D90C", VA = "0xC2D90C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000B7")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000296")]
	[Address(RVA = "0xC2DAAC", Offset = "0xC2DAAC", VA = "0xC2DAAC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xC2DAC8", Offset = "0xC2DAC8", VA = "0xC2DAC8")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000B8")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83573C", Offset = "0x83573C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029E")]
			[Address(RVA = "0x1BF8364", Offset = "0x1BF8364", VA = "0x1BF8364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A0")]
			[Address(RVA = "0x1BF83AC", Offset = "0x1BF83AC", VA = "0x1BF83AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x1BF8204", Offset = "0x1BF8204", VA = "0x1BF8204")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x1BF8230", Offset = "0x1BF8230", VA = "0x1BF8230", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x1BF8234", Offset = "0x1BF8234", VA = "0x1BF8234", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x1BF836C", Offset = "0x1BF836C", VA = "0x1BF836C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8383AC", Offset = "0x8383AC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8383AC", Offset = "0x8383AC")]
	public float TransitionDuration;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xC2DAD0", Offset = "0xC2DAD0", VA = "0xC2DAD0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xC2DAFC", Offset = "0xC2DAFC", VA = "0xC2DAFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83EA1C", Offset = "0x83EA1C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xC2DB68", Offset = "0xC2DB68", VA = "0xC2DB68")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000BA")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000BB")]
	public enum PlabackState
	{
		[Token(Token = "0x4000410")]
		Idle = 1,
		[Token(Token = "0x4000411")]
		Preparing,
		[Token(Token = "0x4000412")]
		Buffering,
		[Token(Token = "0x4000413")]
		Ready,
		[Token(Token = "0x4000414")]
		Ended
	}

	[Token(Token = "0x20000BC")]
	public enum StereoMode
	{
		[Token(Token = "0x4000416")]
		Unknown = -1,
		[Token(Token = "0x4000417")]
		Mono,
		[Token(Token = "0x4000418")]
		TopBottom,
		[Token(Token = "0x4000419")]
		LeftRight,
		[Token(Token = "0x400041A")]
		Mesh
	}

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000033")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xB82130", Offset = "0xB82130", VA = "0xB82130")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000034")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xB82460", Offset = "0xB82460", VA = "0xB82460")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000035")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xB7EE40", Offset = "0xB7EE40", VA = "0xB7EE40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000036")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xB805D0", Offset = "0xB805D0", VA = "0xB805D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xB82730", Offset = "0xB82730", VA = "0xB82730")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000038")]
	public static long Duration
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xB807F4", Offset = "0xB807F4", VA = "0xB807F4")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000039")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xB7F468", Offset = "0xB7F468", VA = "0xB7F468")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700003A")]
	public static int VideoWidth
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xB7F240", Offset = "0xB7F240", VA = "0xB7F240")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003B")]
	public static int VideoHeight
	{
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xB7F354", Offset = "0xB7F354", VA = "0xB7F354")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003C")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xB806E0", Offset = "0xB806E0", VA = "0xB806E0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xB7FCD0", Offset = "0xB7FCD0", VA = "0xB7FCD0")]
		set
		{
		}
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xB82844", Offset = "0xB82844", VA = "0xB82844")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xB80BBC", Offset = "0xB80BBC", VA = "0xB80BBC")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xB7F91C", Offset = "0xB7F91C", VA = "0xB7F91C")]
	public static void Play()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xB7FABC", Offset = "0xB7FABC", VA = "0xB7FABC")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xB809BC", Offset = "0xB809BC", VA = "0xB809BC")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xB82A64", Offset = "0xB82A64", VA = "0xB82A64")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xB803E8", Offset = "0xB803E8", VA = "0xB803E8")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000BD")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xB23B34", Offset = "0xB23B34", VA = "0xB23B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EACC", Offset = "0x83EACC")]
		add
		{
		}
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xB23BD4", Offset = "0xB23BD4", VA = "0xB23BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EADC", Offset = "0x83EADC")]
		remove
		{
		}
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xB23C74", Offset = "0xB23C74", VA = "0xB23C74", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xB23C88", Offset = "0xB23C88", VA = "0xB23C88")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000BE")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000BF")]
	public enum ButtonType
	{
		[Token(Token = "0x400041E")]
		Play,
		[Token(Token = "0x400041F")]
		Pause,
		[Token(Token = "0x4000420")]
		FastForward,
		[Token(Token = "0x4000421")]
		Rewind,
		[Token(Token = "0x4000422")]
		SkipForward,
		[Token(Token = "0x4000423")]
		SkipBack,
		[Token(Token = "0x4000424")]
		Stop
	}

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700003D")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xA207E8", Offset = "0xA207E8", VA = "0xA207E8")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xA207F0", Offset = "0xA207F0", VA = "0xA207F0")]
		set
		{
		}
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xA20814", Offset = "0xA20814", VA = "0xA20814", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xA21CAC", Offset = "0xA21CAC", VA = "0xA21CAC")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000C0")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000C1")]
	public enum VideoShape
	{
		[Token(Token = "0x4000439")]
		_360,
		[Token(Token = "0x400043A")]
		_180,
		[Token(Token = "0x400043B")]
		Quad
	}

	[Token(Token = "0x20000C2")]
	public enum VideoStereo
	{
		[Token(Token = "0x400043D")]
		Mono,
		[Token(Token = "0x400043E")]
		TopBottom,
		[Token(Token = "0x400043F")]
		LeftRight,
		[Token(Token = "0x4000440")]
		BottomTop
	}

	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83574C", Offset = "0x83574C")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D2")]
			[Address(RVA = "0x1BF077C", Offset = "0x1BF077C", VA = "0x1BF077C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D4")]
			[Address(RVA = "0x1BF07C4", Offset = "0x1BF07C4", VA = "0x1BF07C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x1BF0594", Offset = "0x1BF0594", VA = "0x1BF0594")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1BF05C0", Offset = "0x1BF05C0", VA = "0x1BF05C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x1BF05C4", Offset = "0x1BF05C4", VA = "0x1BF05C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x1BF0784", Offset = "0x1BF0784", VA = "0x1BF0784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83575C", Offset = "0x83575C")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x1BF049C", Offset = "0x1BF049C", VA = "0x1BF049C")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x1BF04A4", Offset = "0x1BF04A4", VA = "0x1BF04A4")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x838434", Offset = "0x838434")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x838444", Offset = "0x838444")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x838454", Offset = "0x838454")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700003E")]
	public bool IsPlaying
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xB7EB98", Offset = "0xB7EB98", VA = "0xB7EB98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EAEC", Offset = "0x83EAEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xB7EBA0", Offset = "0xB7EBA0", VA = "0xB7EBA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EAFC", Offset = "0x83EAFC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public long Duration
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xB7EBAC", Offset = "0xB7EBAC", VA = "0xB7EBAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EB0C", Offset = "0x83EB0C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xB7EBB4", Offset = "0xB7EBB4", VA = "0xB7EBB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EB1C", Offset = "0x83EB1C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xB7EBBC", Offset = "0xB7EBBC", VA = "0xB7EBBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EB2C", Offset = "0x83EB2C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xB7EBC4", Offset = "0xB7EBC4", VA = "0xB7EBC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EB3C", Offset = "0x83EB3C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xB7EBCC", Offset = "0xB7EBCC", VA = "0xB7EBCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xB7EEB0", Offset = "0xB7EEB0", VA = "0xB7EEB0")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xB7EF14", Offset = "0xB7EF14", VA = "0xB7EF14")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xB7F57C", Offset = "0xB7F57C", VA = "0xB7F57C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83EB4C", Offset = "0x83EB4C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xB7F5E8", Offset = "0xB7F5E8", VA = "0xB7F5E8")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xB7F88C", Offset = "0xB7F88C", VA = "0xB7F88C")]
	public void Play()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xB7FA30", Offset = "0xB7FA30", VA = "0xB7FA30")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xB7FBD0", Offset = "0xB7FBD0", VA = "0xB7FBD0")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xB7FE3C", Offset = "0xB7FE3C", VA = "0xB7FE3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xB80908", Offset = "0xB80908", VA = "0xB80908")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xB80B30", Offset = "0xB80B30", VA = "0xB80B30")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xB80CD0", Offset = "0xB80CD0", VA = "0xB80CD0")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xB80DBC", Offset = "0xB80DBC", VA = "0xB80DBC")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000C5")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000C6")]
	private enum PlaybackState
	{
		[Token(Token = "0x400045D")]
		Playing,
		[Token(Token = "0x400045E")]
		Paused,
		[Token(Token = "0x400045F")]
		Rewinding,
		[Token(Token = "0x4000460")]
		FastForwarding
	}

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xB80DCC", Offset = "0xB80DCC", VA = "0xB80DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xB810D8", Offset = "0xB810D8", VA = "0xB810D8")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xB81204", Offset = "0xB81204", VA = "0xB81204")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xB81310", Offset = "0xB81310", VA = "0xB81310")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xB813F0", Offset = "0xB813F0", VA = "0xB813F0")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xB812E4", Offset = "0xB812E4", VA = "0xB812E4")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xB81450", Offset = "0xB81450", VA = "0xB81450")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xB80FC4", Offset = "0xB80FC4", VA = "0xB80FC4")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xB81790", Offset = "0xB81790", VA = "0xB81790")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000C7")]
public static class VectorUtil
{
	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xDB0C74", Offset = "0xDB0C74", VA = "0xDB0C74")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000C8")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000461")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000462")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xB1D5C8", Offset = "0xB1D5C8", VA = "0xB1D5C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xB1D988", Offset = "0xB1D988", VA = "0xB1D988")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xB1DC14", Offset = "0xB1DC14", VA = "0xB1DC14")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xB1DD7C", Offset = "0xB1DD7C", VA = "0xB1DD7C")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xB1DEE8", Offset = "0xB1DEE8", VA = "0xB1DEE8")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xB1E078", Offset = "0xB1E078", VA = "0xB1E078")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000C9")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x400046B")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xBBD1F4", Offset = "0xBBD1F4", VA = "0xBBD1F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xBBD244", Offset = "0xBBD244", VA = "0xBBD244")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xBBD248", Offset = "0xBBD248", VA = "0xBBD248")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xBBD24C", Offset = "0xBBD24C", VA = "0xBBD24C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xBBD4A8", Offset = "0xBBD4A8", VA = "0xBBD4A8")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xBBD6D8", Offset = "0xBBD6D8", VA = "0xBBD6D8")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000CA")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xBBF9CC", Offset = "0xBBF9CC", VA = "0xBBF9CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xBBFED8", Offset = "0xBBFED8", VA = "0xBBFED8")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xBBFF98", Offset = "0xBBFF98", VA = "0xBBFF98")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xBC01C4", Offset = "0xBC01C4", VA = "0xBC01C4")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xBC02A4", Offset = "0xBC02A4", VA = "0xBC02A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xBC0388", Offset = "0xBC0388", VA = "0xBC0388")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xBC03FC", Offset = "0xBC03FC", VA = "0xBC03FC")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xBC0404", Offset = "0xBC0404", VA = "0xBC0404")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EC0C", Offset = "0x83EC0C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xBC0468", Offset = "0xBC0468", VA = "0xBC0468")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EC1C", Offset = "0x83EC1C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xBC04CC", Offset = "0xBC04CC", VA = "0xBC04CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EC2C", Offset = "0x83EC2C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xBC0530", Offset = "0xBC0530", VA = "0xBC0530")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83EC3C", Offset = "0x83EC3C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000CB")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB1B20C", Offset = "0xB1B20C", VA = "0xB1B20C")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000CC")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB137BC", Offset = "0xB137BC", VA = "0xB137BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB13860", Offset = "0xB13860", VA = "0xB13860")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB1394C", Offset = "0xB1394C", VA = "0xB1394C")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xB139AC", Offset = "0xB139AC", VA = "0xB139AC")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000CD")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xC23A28", Offset = "0xC23A28", VA = "0xC23A28")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000CE")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83577C", Offset = "0x83577C")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000305")]
			[Address(RVA = "0x1BEF0B4", Offset = "0x1BEF0B4", VA = "0x1BEF0B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000307")]
			[Address(RVA = "0x1BEF0FC", Offset = "0x1BEF0FC", VA = "0x1BEF0FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x1BEEF64", Offset = "0x1BEEF64", VA = "0x1BEEF64")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x1BEEF90", Offset = "0x1BEEF90", VA = "0x1BEEF90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x1BEEF94", Offset = "0x1BEEF94", VA = "0x1BEEF94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x1BEF0BC", Offset = "0x1BEF0BC", VA = "0x1BEF0BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1C25EB8", Offset = "0x1C25EB8", VA = "0x1C25EB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1C25FBC", Offset = "0x1C25FBC", VA = "0x1C25FBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1C25F50", Offset = "0x1C25F50", VA = "0x1C25F50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83EC4C", Offset = "0x83EC4C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1C26168", Offset = "0x1C26168", VA = "0x1C26168")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000D0")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x838484", Offset = "0x838484")]
	public int SubdivisionsU;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8384A0", Offset = "0x8384A0")]
	public int SubdivisionsV;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xB2D954", Offset = "0xB2D954", VA = "0xB2D954")]
	private void Update()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xB2E360", Offset = "0xB2E360", VA = "0xB2E360")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000D1")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000045")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xA1CCB4", Offset = "0xA1CCB4", VA = "0xA1CCB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xA1CD08", Offset = "0xA1CD08", VA = "0xA1CD08")]
	public void Start()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xA1D124", Offset = "0xA1D124", VA = "0xA1D124")]
	public void Update()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xA1D210", Offset = "0xA1D210", VA = "0xA1D210")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x83ECFC", Offset = "0x83ECFC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600030E")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600030F")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000310")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000311")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000312")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000313")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000314")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000315")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xA1D274", Offset = "0xA1D274", VA = "0xA1D274")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xA1D2B0", Offset = "0xA1D2B0", VA = "0xA1D2B0")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xA1D320", Offset = "0xA1D320", VA = "0xA1D320")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xA1D490", Offset = "0xA1D490", VA = "0xA1D490")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xA1D56C", Offset = "0xA1D56C", VA = "0xA1D56C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xA1D01C", Offset = "0xA1D01C", VA = "0xA1D01C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xA1D634", Offset = "0xA1D634", VA = "0xA1D634")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xA1D69C", Offset = "0xA1D69C", VA = "0xA1D69C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xA1D794", Offset = "0xA1D794", VA = "0xA1D794")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000D2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x83579C", Offset = "0x83579C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000D3")]
	public enum DrawMode
	{
		[Token(Token = "0x400049A")]
		Opaque,
		[Token(Token = "0x400049B")]
		OpaqueWithClip,
		[Token(Token = "0x400049C")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400049D")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000046")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xB8786C", Offset = "0xB8786C", VA = "0xB8786C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xB878FC", Offset = "0xB878FC", VA = "0xB878FC")]
		set
		{
		}
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xB863A4", Offset = "0xB863A4", VA = "0xB863A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xB86ED8", Offset = "0xB86ED8", VA = "0xB86ED8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xB86F58", Offset = "0xB86F58", VA = "0xB86F58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xB87048", Offset = "0xB87048", VA = "0xB87048")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xB87138", Offset = "0xB87138", VA = "0xB87138", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xB87344", Offset = "0xB87344", VA = "0xB87344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xB879C8", Offset = "0xB879C8", VA = "0xB879C8")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000D4")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xB1EE80", Offset = "0xB1EE80", VA = "0xB1EE80")]
	private void Start()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xB1F034", Offset = "0xB1F034", VA = "0xB1F034")]
	private void Update()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xB1F1BC", Offset = "0xB1F1BC", VA = "0xB1F1BC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xB1F1C4", Offset = "0xB1F1C4", VA = "0xB1F1C4")]
	public void Release()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xB1F1AC", Offset = "0xB1F1AC", VA = "0xB1F1AC")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xB1F1CC", Offset = "0xB1F1CC", VA = "0xB1F1CC")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20000D5")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20000D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8357FC", Offset = "0x8357FC")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000339")]
			[Address(RVA = "0x1BE9E7C", Offset = "0x1BE9E7C", VA = "0x1BE9E7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600033B")]
			[Address(RVA = "0x1BE9EC4", Offset = "0x1BE9EC4", VA = "0x1BE9EC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x1BE9D58", Offset = "0x1BE9D58", VA = "0x1BE9D58")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x1BE9D84", Offset = "0x1BE9D84", VA = "0x1BE9D84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x1BE9D88", Offset = "0x1BE9D88", VA = "0x1BE9D88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x1BE9E84", Offset = "0x1BE9E84", VA = "0x1BE9E84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83580C", Offset = "0x83580C")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600033F")]
			[Address(RVA = "0x1BEA078", Offset = "0x1BEA078", VA = "0x1BEA078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000341")]
			[Address(RVA = "0x1BEA0C0", Offset = "0x1BEA0C0", VA = "0x1BEA0C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0x1BE9ECC", Offset = "0x1BE9ECC", VA = "0x1BE9ECC")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x1BE9EF8", Offset = "0x1BE9EF8", VA = "0x1BE9EF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0x1BE9EFC", Offset = "0x1BE9EFC", VA = "0x1BE9EFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x1BEA080", Offset = "0x1BEA080", VA = "0x1BEA080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xB22134", Offset = "0xB22134", VA = "0xB22134")]
	private void Start()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xB223C8", Offset = "0xB223C8", VA = "0xB223C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xB22424", Offset = "0xB22424", VA = "0xB22424")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xB22588", Offset = "0xB22588", VA = "0xB22588")]
	public void Release()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xB2264C", Offset = "0xB2264C", VA = "0xB2264C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83ED34", Offset = "0x83ED34")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xB224D0", Offset = "0xB224D0", VA = "0xB224D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83ED94", Offset = "0x83ED94")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xB226E8", Offset = "0xB226E8", VA = "0xB226E8")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20000D8")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1C14670", Offset = "0x1C14670", VA = "0x1C14670")]
	private void Start()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1C146D0", Offset = "0x1C146D0", VA = "0x1C146D0")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20000D9")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1C167D4", Offset = "0x1C167D4", VA = "0x1C167D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1C16908", Offset = "0x1C16908", VA = "0x1C16908")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1C1699C", Offset = "0x1C1699C", VA = "0x1C1699C")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1C16A04", Offset = "0x1C16A04", VA = "0x1C16A04")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20000DA")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83581C", Offset = "0x83581C")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000354")]
			[Address(RVA = "0x1BEC3F4", Offset = "0x1BEC3F4", VA = "0x1BEC3F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000356")]
			[Address(RVA = "0x1BEC43C", Offset = "0x1BEC43C", VA = "0x1BEC43C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x1BEC1F4", Offset = "0x1BEC1F4", VA = "0x1BEC1F4")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x1BEC220", Offset = "0x1BEC220", VA = "0x1BEC220", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x1BEC224", Offset = "0x1BEC224", VA = "0x1BEC224", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x1BEC3FC", Offset = "0x1BEC3FC", VA = "0x1BEC3FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1C16A0C", Offset = "0x1C16A0C", VA = "0x1C16A0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1C16C98", Offset = "0x1C16C98", VA = "0x1C16C98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1C16FE8", Offset = "0x1C16FE8", VA = "0x1C16FE8")]
	private void FindHands()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1C17314", Offset = "0x1C17314", VA = "0x1C17314")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1C17618", Offset = "0x1C17618", VA = "0x1C17618")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1C1770C", Offset = "0x1C1770C", VA = "0x1C1770C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1C178CC", Offset = "0x1C178CC", VA = "0x1C178CC")]
	public void Release()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1C17824", Offset = "0x1C17824", VA = "0x1C17824")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83EE94", Offset = "0x83EE94")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1C179B4", Offset = "0x1C179B4", VA = "0x1C179B4")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20000DC")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	public enum ManipulationType
	{
		[Token(Token = "0x40004D2")]
		Default,
		[Token(Token = "0x40004D3")]
		ForcedHand,
		[Token(Token = "0x40004D4")]
		DollyHand,
		[Token(Token = "0x40004D5")]
		DollyAttached,
		[Token(Token = "0x40004D6")]
		HorizontalScaled,
		[Token(Token = "0x40004D7")]
		VerticalScaled,
		[Token(Token = "0x40004D8")]
		Menu
	}

	[Token(Token = "0x20000DE")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20000DF")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20000E0")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x83852C", Offset = "0x83852C")]
	public string ObjectName;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x83853C", Offset = "0x83853C")]
	public string ObjectInstructions;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x1C1EFD4", Offset = "0x1C1EFD4", VA = "0x1C1EFD4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1C1F030", Offset = "0x1C1F030", VA = "0x1C1F030")]
	public void Release()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1C1F044", Offset = "0x1C1F044", VA = "0x1C1F044")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1C1F058", Offset = "0x1C1F058", VA = "0x1C1F058")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20000E1")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83855C", Offset = "0x83855C")]
	public int radialDivisions;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838594", Offset = "0x838594")]
	public float borderSize;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8385CC", Offset = "0x8385CC")]
	public float fingerTaper;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838604", Offset = "0x838604")]
	public float fingerTipLength;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83863C", Offset = "0x83863C")]
	public float webOffset;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1C20A04", Offset = "0x1C20A04", VA = "0x1C20A04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1C20BDC", Offset = "0x1C20BDC", VA = "0x1C20BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1C20DE8", Offset = "0x1C20DE8", VA = "0x1C20DE8")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1C21424", Offset = "0x1C21424", VA = "0x1C21424")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1C21A54", Offset = "0x1C21A54", VA = "0x1C21A54")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1C240D0", Offset = "0x1C240D0", VA = "0x1C240D0")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1C2418C", Offset = "0x1C2418C", VA = "0x1C2418C")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20000E2")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1C241B0", Offset = "0x1C241B0", VA = "0x1C241B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1C244E8", Offset = "0x1C244E8", VA = "0x1C244E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1C24258", Offset = "0x1C24258", VA = "0x1C24258")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1C248D8", Offset = "0x1C248D8", VA = "0x1C248D8")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1C24DC8", Offset = "0x1C24DC8", VA = "0x1C24DC8")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20000E3")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20000E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83582C", Offset = "0x83582C")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000382")]
			[Address(RVA = "0x1BF2528", Offset = "0x1BF2528", VA = "0x1BF2528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000384")]
			[Address(RVA = "0x1BF2570", Offset = "0x1BF2570", VA = "0x1BF2570", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0x1BF2264", Offset = "0x1BF2264", VA = "0x1BF2264")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x1BF2290", Offset = "0x1BF2290", VA = "0x1BF2290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x1BF2294", Offset = "0x1BF2294", VA = "0x1BF2294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x1BF2530", Offset = "0x1BF2530", VA = "0x1BF2530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xB8C2FC", Offset = "0xB8C2FC", VA = "0xB8C2FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xB8C528", Offset = "0xB8C528", VA = "0xB8C528")]
	private void Update()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xB8D140", Offset = "0xB8D140", VA = "0xB8D140")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xB8DD48", Offset = "0xB8DD48", VA = "0xB8DD48")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xB8C4BC", Offset = "0xB8C4BC", VA = "0xB8C4BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83EF44", Offset = "0x83EF44")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xB8C78C", Offset = "0xB8C78C", VA = "0xB8C78C")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xB8D404", Offset = "0xB8D404", VA = "0xB8D404")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xB8E000", Offset = "0xB8E000", VA = "0xB8E000")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xB8E08C", Offset = "0xB8E08C", VA = "0xB8E08C")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xB8E0BC", Offset = "0xB8E0BC", VA = "0xB8E0BC")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xB8DEC8", Offset = "0xB8DEC8", VA = "0xB8DEC8")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB8E1E0", Offset = "0xB8E1E0", VA = "0xB8E1E0")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20000E5")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xB8F0F4", Offset = "0xB8F0F4", VA = "0xB8F0F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xB8F280", Offset = "0xB8F280", VA = "0xB8F280")]
	private void Update()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xB8F348", Offset = "0xB8F348", VA = "0xB8F348")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x20000E6")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x20000E7")]
	public enum BrushState
	{
		[Token(Token = "0x4000515")]
		Idle,
		[Token(Token = "0x4000516")]
		Inking
	}

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xBF9454", Offset = "0xBF9454", VA = "0xBF9454")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xBF945C", Offset = "0xBF945C", VA = "0xBF945C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xBF9744", Offset = "0xBF9744", VA = "0xBF9744")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xBF9920", Offset = "0xBF9920", VA = "0xBF9920")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xBF9AC8", Offset = "0xBF9AC8", VA = "0xBF9AC8")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xBF9650", Offset = "0xBF9650", VA = "0xBF9650")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xBF9BA4", Offset = "0xBF9BA4", VA = "0xBF9BA4")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x20000E8")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xBF9C30", Offset = "0xBF9C30", VA = "0xBF9C30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xBF9DBC", Offset = "0xBF9DBC", VA = "0xBF9DBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xBF9F24", Offset = "0xBF9F24", VA = "0xBF9F24")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x20000E9")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x9985D8", Offset = "0x9985D8", VA = "0x9985D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x9987CC", Offset = "0x9987CC", VA = "0x9987CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x99899C", Offset = "0x99899C", VA = "0x99899C")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x20000EA")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83583C", Offset = "0x83583C")]
	private sealed class <FadeToCurrentStyle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0x1BF3FA8", Offset = "0x1BF3FA8", VA = "0x1BF3FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A8")]
			[Address(RVA = "0x1BF3FF0", Offset = "0x1BF3FF0", VA = "0x1BF3FF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x1BF3E00", Offset = "0x1BF3E00", VA = "0x1BF3E00")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x1BF3E2C", Offset = "0x1BF3E2C", VA = "0x1BF3E2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1BF3E30", Offset = "0x1BF3E30", VA = "0x1BF3E30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1BF3FB0", Offset = "0x1BF3FB0", VA = "0x1BF3FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83584C", Offset = "0x83584C")]
	private sealed class <FadeToDefaultPassthrough>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003AC")]
			[Address(RVA = "0x1BF41E0", Offset = "0x1BF41E0", VA = "0x1BF41E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003AE")]
			[Address(RVA = "0x1BF4228", Offset = "0x1BF4228", VA = "0x1BF4228", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1BF3FF8", Offset = "0x1BF3FF8", VA = "0x1BF3FF8")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x1BF4024", Offset = "0x1BF4024", VA = "0x1BF4024", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1BF4028", Offset = "0x1BF4028", VA = "0x1BF4028", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x1BF41E8", Offset = "0x1BF41E8", VA = "0x1BF41E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x998C30", Offset = "0x998C30", VA = "0x998C30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x998F48", Offset = "0x998F48", VA = "0x998F48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x9991A0", Offset = "0x9991A0", VA = "0x9991A0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x999308", Offset = "0x999308", VA = "0x999308")]
	public void Release()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x99928C", Offset = "0x99928C", VA = "0x99928C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83EFF4", Offset = "0x83EFF4")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x9993E8", Offset = "0x9993E8", VA = "0x9993E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F054", Offset = "0x83F054")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x999464", Offset = "0x999464", VA = "0x999464")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x999484", Offset = "0x999484", VA = "0x999484")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x9994A4", Offset = "0x9994A4", VA = "0x9994A4")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x998ECC", Offset = "0x998ECC", VA = "0x998ECC")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x999508", Offset = "0x999508", VA = "0x999508")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x999514", Offset = "0x999514", VA = "0x999514")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x998F60", Offset = "0x998F60", VA = "0x998F60")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x999520", Offset = "0x999520", VA = "0x999520")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x20000ED")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x999564", Offset = "0x999564", VA = "0x999564")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x999624", Offset = "0x999624", VA = "0x999624")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x20000EE")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xB13508", Offset = "0xB13508", VA = "0xB13508")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xB13710", Offset = "0xB13710", VA = "0xB13710")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xB13768", Offset = "0xB13768", VA = "0xB13768")]
	public void Release()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xB137B4", Offset = "0xB137B4", VA = "0xB137B4")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x20000EF")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xB13DF4", Offset = "0xB13DF4", VA = "0xB13DF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xB13E6C", Offset = "0xB13E6C", VA = "0xB13E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xB14190", Offset = "0xB14190", VA = "0xB14190")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x20000F0")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xB14FF8", Offset = "0xB14FF8", VA = "0xB14FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xB15480", Offset = "0xB15480", VA = "0xB15480")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x20000F1")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83585C", Offset = "0x83585C")]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x17000053")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C5")]
			[Address(RVA = "0x1BE9D08", Offset = "0x1BE9D08", VA = "0x1BE9D08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000054")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0x1BE9D50", Offset = "0x1BE9D50", VA = "0x1BE9D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x1BE9BE8", Offset = "0x1BE9BE8", VA = "0x1BE9BE8")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x1BE9C14", Offset = "0x1BE9C14", VA = "0x1BE9C14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x1BE9C18", Offset = "0x1BE9C18", VA = "0x1BE9C18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x1BE9D10", Offset = "0x1BE9D10", VA = "0x1BE9D10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xB215D8", Offset = "0xB215D8", VA = "0xB215D8")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xB215FC", Offset = "0xB215FC", VA = "0xB215FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xB21708", Offset = "0xB21708", VA = "0xB21708")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xB217BC", Offset = "0xB217BC", VA = "0xB217BC")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xB219DC", Offset = "0xB219DC", VA = "0xB219DC")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xB21A94", Offset = "0xB21A94", VA = "0xB21A94")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xB21960", Offset = "0xB21960", VA = "0xB21960")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F154", Offset = "0x83F154")]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xB21BB4", Offset = "0xB21BB4", VA = "0xB21BB4")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x20000F3")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xB21BCC", Offset = "0xB21BCC", VA = "0xB21BCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xB21ED4", Offset = "0xB21ED4", VA = "0xB21ED4")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x20000F4")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x83586C", Offset = "0x83586C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x83586C", Offset = "0x83586C")]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x838714", Offset = "0x838714")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1C1BB64", Offset = "0x1C1BB64", VA = "0x1C1BB64")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1C1BD68", Offset = "0x1C1BD68", VA = "0x1C1BD68")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1C1C1C8", Offset = "0x1C1C1C8", VA = "0x1C1C1C8")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1C1BBE8", Offset = "0x1C1BBE8", VA = "0x1C1BBE8")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1C1C3AC", Offset = "0x1C1C3AC", VA = "0x1C1C3AC")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1C1C4A0", Offset = "0x1C1C4A0", VA = "0x1C1C4A0")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x20000F5")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x20000F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8358E0", Offset = "0x8358E0")]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0x1BF08F4", Offset = "0x1BF08F4", VA = "0x1BF08F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D9")]
			[Address(RVA = "0x1BF093C", Offset = "0x1BF093C", VA = "0x1BF093C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1BF07CC", Offset = "0x1BF07CC", VA = "0x1BF07CC")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1BF07F8", Offset = "0x1BF07F8", VA = "0x1BF07F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1BF07FC", Offset = "0x1BF07FC", VA = "0x1BF07FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x1BF08FC", Offset = "0x1BF08FC", VA = "0x1BF08FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xB817A0", Offset = "0xB817A0", VA = "0xB817A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F204", Offset = "0x83F204")]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xB8180C", Offset = "0xB8180C", VA = "0xB8180C", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xB81838", Offset = "0xB81838", VA = "0xB81838", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xB818AC", Offset = "0xB818AC", VA = "0xB818AC")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8358F0", Offset = "0x8358F0")]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x9985CC", Offset = "0x9985CC", VA = "0x9985CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x9985D0", Offset = "0x9985D0", VA = "0x9985D0")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x20000F8")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x9A9938", Offset = "0x9A9938", VA = "0x9A9938")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x9A99B4", Offset = "0x9A99B4", VA = "0x9A99B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x9A9A44", Offset = "0x9A9A44", VA = "0x9A9A44")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x20000F9")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x20000FA")]
	public enum Method
	{
		[Token(Token = "0x4000572")]
		Adapt,
		[Token(Token = "0x4000573")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x4000574")]
		Scale,
		[Token(Token = "0x4000575")]
		None
	}

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83874C", Offset = "0x83874C")]
	public Method ScalingX;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x838760", Offset = "0x838760")]
	public float PaddingX;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x838778", Offset = "0x838778")]
	public float PaddingXMax;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x838790", Offset = "0x838790")]
	public Method ScalingY;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8387A4", Offset = "0x8387A4")]
	public float PaddingY;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8387BC", Offset = "0x8387BC")]
	public float PaddingYMax;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8387D4", Offset = "0x8387D4")]
	public Method ScalingZ;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8387E8", Offset = "0x8387E8")]
	public float PaddingZ;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x838800", Offset = "0x838800")]
	public float PaddingZMax;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x838818", Offset = "0x838818")]
	private Vector3 <NewSize>k__BackingField;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x838828", Offset = "0x838828")]
	private Vector3 <DefaultSize>k__BackingField;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x838838", Offset = "0x838838")]
	private Mesh <Mesh>k__BackingField;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x17000057")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xB15DB8", Offset = "0xB15DB8", VA = "0xB15DB8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000058")]
	public Vector3 NewSize
	{
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xB15DD4", Offset = "0xB15DD4", VA = "0xB15DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83F2B4", Offset = "0x83F2B4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xB15DE0", Offset = "0xB15DE0", VA = "0xB15DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83F2C4", Offset = "0x83F2C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xB15DEC", Offset = "0xB15DEC", VA = "0xB15DEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83F2D4", Offset = "0x83F2D4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xB15DF8", Offset = "0xB15DF8", VA = "0xB15DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83F2E4", Offset = "0x83F2E4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public Mesh Mesh
	{
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xB15E04", Offset = "0xB15E04", VA = "0xB15E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83F2F4", Offset = "0x83F2F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xB15E0C", Offset = "0xB15E0C", VA = "0xB15E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83F304", Offset = "0x83F304")]
		private set
		{
		}
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xB15E14", Offset = "0xB15E14", VA = "0xB15E14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xB15F30", Offset = "0xB15F30", VA = "0xB15F30")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x20000FB")]
public class SimpleResizer
{
	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xB15F38", Offset = "0xB15F38", VA = "0xB15F38")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xB16244", Offset = "0xB16244", VA = "0xB16244")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xB164DC", Offset = "0xB164DC", VA = "0xB164DC")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xB165B8", Offset = "0xB165B8", VA = "0xB165B8")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FC")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xC20F04", Offset = "0xC20F04", VA = "0xC20F04", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xC20F08", Offset = "0xC20F08", VA = "0xC20F08", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xC2136C", Offset = "0xC2136C", VA = "0xC2136C")]
	public Spawnable()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xC21078", Offset = "0xC21078", VA = "0xC21078")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83F314", Offset = "0x83F314")]
	internal static int <OnAfterDeserialize>g__IndexOf|4_0(string label, IEnumerable<string> collection)
	{
		return default(int);
	}
}
[Token(Token = "0x20000FD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x835960", Offset = "0x835960")]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x20000FE")]
	public enum GeometryType
	{
		[Token(Token = "0x400057D")]
		Plane,
		[Token(Token = "0x400057E")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x20000FF")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xDB15A8", Offset = "0xDB15A8", VA = "0xDB15A8")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xDB19B4", Offset = "0xDB19B4", VA = "0xDB19B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xDB2258", Offset = "0xDB2258", VA = "0xDB2258")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xDB215C", Offset = "0xDB215C", VA = "0xDB215C")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xDB22DC", Offset = "0xDB22DC", VA = "0xDB22DC")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x2000100")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8359C0", Offset = "0x8359C0")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835A20", Offset = "0x835A20")]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000408")]
			[Address(RVA = "0x1BE9200", Offset = "0x1BE9200", VA = "0x1BE9200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600040A")]
			[Address(RVA = "0x1BE9248", Offset = "0x1BE9248", VA = "0x1BE9248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x1BE9048", Offset = "0x1BE9048", VA = "0x1BE9048")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x1BE9074", Offset = "0x1BE9074", VA = "0x1BE9074", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x1BE9078", Offset = "0x1BE9078", VA = "0x1BE9078", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x1BE9208", Offset = "0x1BE9208", VA = "0x1BE9208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000581")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838868", Offset = "0x838868")]
	[SerializeField]
	private Canvas _canvas;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8388B4", Offset = "0x8388B4")]
	[SerializeField]
	private Transform _pivot;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838900", Offset = "0x838900")]
	[SerializeField]
	private GameObject _anchorMenu;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x83894C", Offset = "0x83894C")]
	[SerializeField]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838998", Offset = "0x838998")]
	[SerializeField]
	private GameObject _saveIcon;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8389E4", Offset = "0x8389E4")]
	[SerializeField]
	private Image _labelImage;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838A30", Offset = "0x838A30")]
	[SerializeField]
	private Color _labelBaseColor;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838A7C", Offset = "0x838A7C")]
	private Color _labelHighlightColor;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838AC8", Offset = "0x838AC8")]
	[SerializeField]
	private Color _labelSelectedColor;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838B14", Offset = "0x838B14")]
	[SerializeField]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838B60", Offset = "0x838B60")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838BAC", Offset = "0x838BAC")]
	private List<Button> _buttonList;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x1700005B")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xB1B8B0", Offset = "0xB1B8B0", VA = "0xB1B8B0")]
		set
		{
		}
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xB1B214", Offset = "0xB1B214", VA = "0xB1B214")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xB1B35C", Offset = "0xB1B35C", VA = "0xB1B35C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F324", Offset = "0x83F324")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xB1B3C8", Offset = "0xB1B3C8", VA = "0xB1B3C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xB1B648", Offset = "0xB1B648", VA = "0xB1B648")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xB1B740", Offset = "0xB1B740", VA = "0xB1B740")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xB1B7B8", Offset = "0xB1B7B8", VA = "0xB1B7B8")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xB1B8D0", Offset = "0xB1B8D0", VA = "0xB1B8D0")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xB1B9D8", Offset = "0xB1B9D8", VA = "0xB1B9D8")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xB1BAF8", Offset = "0xB1BAF8", VA = "0xB1BAF8")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xB1B424", Offset = "0xB1B424", VA = "0xB1B424")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xB1B538", Offset = "0xB1B538", VA = "0xB1B538")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xB1BBBC", Offset = "0xB1BBBC", VA = "0xB1BBBC")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xB1BD04", Offset = "0xB1BD04", VA = "0xB1BD04")]
	public Anchor()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xB1BD0C", Offset = "0xB1BD0C", VA = "0xB1BD0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83F384", Offset = "0x83F384")]
	private void <OnSaveLocalButtonPressed>b__22_0(OVRSpatialAnchor anchor, bool success)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xB1BE34", Offset = "0xB1BE34", VA = "0xB1BE34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83F394", Offset = "0x83F394")]
	private void <OnEraseButtonPressed>b__24_0(OVRSpatialAnchor anchor, bool success)
	{
	}
}
[Token(Token = "0x2000102")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x835A30", Offset = "0x835A30")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000103")]
	public enum AnchorMode
	{
		[Token(Token = "0x40005AA")]
		Create,
		[Token(Token = "0x40005AB")]
		Select
	}

	[Token(Token = "0x2000104")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838BF8", Offset = "0x838BF8")]
	private GameObject _createModeButton;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838C44", Offset = "0x838C44")]
	private GameObject _selectModeButton;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838C90", Offset = "0x838C90")]
	private Transform _trackedDevice;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838CDC", Offset = "0x838CDC")]
	[SerializeField]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838D28", Offset = "0x838D28")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838D84", Offset = "0x838D84")]
	[SerializeField]
	private GameObject _placementPreview;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x838DD0", Offset = "0x838DD0")]
	[SerializeField]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x1700005E")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0xB1BE5C", Offset = "0xB1BE5C", VA = "0xB1BE5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xB1BE64", Offset = "0xB1BE64", VA = "0xB1BE64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xB1BF38", Offset = "0xB1BF38", VA = "0xB1BF38")]
	private void Start()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xB1C084", Offset = "0xB1C084", VA = "0xB1C084")]
	private void Update()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xB1C4DC", Offset = "0xB1C4DC", VA = "0xB1C4DC")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xB1C54C", Offset = "0xB1C54C", VA = "0xB1C54C")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xB1C024", Offset = "0xB1C024", VA = "0xB1C024")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xB1C5CC", Offset = "0xB1C5CC", VA = "0xB1C5CC")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xB1C64C", Offset = "0xB1C64C", VA = "0xB1C64C")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xB1C670", Offset = "0xB1C670", VA = "0xB1C670")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xB1C5A8", Offset = "0xB1C5A8", VA = "0xB1C5A8")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xB1C3CC", Offset = "0xB1C3CC", VA = "0xB1C3CC")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xB1C7A4", Offset = "0xB1C7A4", VA = "0xB1C7A4")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xB1C6F0", Offset = "0xB1C6F0", VA = "0xB1C6F0")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xB1C710", Offset = "0xB1C710", VA = "0xB1C710")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xB1C8AC", Offset = "0xB1C8AC", VA = "0xB1C8AC")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xB1C730", Offset = "0xB1C730", VA = "0xB1C730")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xB1C76C", Offset = "0xB1C76C", VA = "0xB1C76C")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xB1C190", Offset = "0xB1C190", VA = "0xB1C190")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xB1C9A4", Offset = "0xB1C9A4", VA = "0xB1C9A4")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xB1C9C0", Offset = "0xB1C9C0", VA = "0xB1C9C0")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xB1CA48", Offset = "0xB1CA48", VA = "0xB1CA48")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xB1CB9C", Offset = "0xB1CB9C", VA = "0xB1CB9C")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000105")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly HashSet<ulong> _locateAnchorRequest;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong _queryRequestId;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xC1CEA0", Offset = "0xC1CEA0", VA = "0xC1CEA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xC1CFC0", Offset = "0xC1CFC0", VA = "0xC1CFC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xC1D0E0", Offset = "0xC1D0E0", VA = "0xC1D0E0")]
	private void SetComponentEnabled(ulong requestId, bool result, OVRSpace space, Guid uuid, OVRPlugin.SpaceComponentType componentType, bool enabled)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xC1D34C", Offset = "0xC1D34C", VA = "0xC1D34C")]
	private void QueryComplete(ulong requestId, bool result)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xC1D57C", Offset = "0xC1D57C", VA = "0xC1D57C")]
	private void TryEnableComponent(ulong anchorHandle, OVRPlugin.SpaceComponentType type)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xC1D934", Offset = "0xC1D934", VA = "0xC1D934")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xC1DBC0", Offset = "0xC1DBC0", VA = "0xC1DBC0")]
	public void LoadAllLocalAnchors()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xC1D2BC", Offset = "0xC1D2BC", VA = "0xC1D2BC")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xC1DD08", Offset = "0xC1DD08", VA = "0xC1DD08")]
	public SpatialAnchorLoader()
	{
	}
}
[Token(Token = "0x2000106")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835A90", Offset = "0x835A90")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1BF79CC", Offset = "0x1BF79CC", VA = "0x1BF79CC")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x1BF79D4", Offset = "0x1BF79D4", VA = "0x1BF79D4")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xC23A30", Offset = "0xC23A30", VA = "0xC23A30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xC23C3C", Offset = "0xC23C3C", VA = "0xC23C3C")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xC23D4C", Offset = "0xC23D4C", VA = "0xC23D4C")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000108")]
public class AutoPopulateMenu : MonoBehaviour
{
	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject togglePrefab;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ClassificationManager.Interaction interaction;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ClassificationManager.ObjectClassification classification;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ClassificationManager.ObjectClassification, Toggle> toggles;

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xB1F1D4", Offset = "0xB1F1D4", VA = "0xB1F1D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xB1F9E4", Offset = "0xB1F9E4", VA = "0xB1F9E4")]
	private void AdapthHeight(int elementCount, int countPerRow)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xB1FAC4", Offset = "0xB1FAC4", VA = "0xB1FAC4")]
	public AutoPopulateMenu()
	{
	}
}
[Token(Token = "0x2000109")]
public class ClassificationManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200010A")]
	public enum ObjectClassification
	{
		[Token(Token = "0x40005BD")]
		GENERIC,
		[Token(Token = "0x40005BE")]
		DESK,
		[Token(Token = "0x40005BF")]
		TABLETOP,
		[Token(Token = "0x40005C0")]
		COUCH,
		[Token(Token = "0x40005C1")]
		WHITEBOARD,
		[Token(Token = "0x40005C2")]
		FLOOR,
		[Token(Token = "0x40005C3")]
		CEILING,
		[Token(Token = "0x40005C4")]
		WALL_FACE,
		[Token(Token = "0x40005C5")]
		DOOR_FRAME,
		[Token(Token = "0x40005C6")]
		WINDOW_FRAME,
		[Token(Token = "0x40005C7")]
		WALL_ART,
		[Token(Token = "0x40005C8")]
		TABLE,
		[Token(Token = "0x40005C9")]
		CABINET,
		[Token(Token = "0x40005CA")]
		SHELF,
		[Token(Token = "0x40005CB")]
		WARDROBE,
		[Token(Token = "0x40005CC")]
		MONITOR,
		[Token(Token = "0x40005CD")]
		TV,
		[Token(Token = "0x40005CE")]
		LAMP,
		[Token(Token = "0x40005CF")]
		PLANT
	}

	[Token(Token = "0x200010B")]
	public enum Interaction
	{
		[Token(Token = "0x40005D1")]
		Any,
		[Token(Token = "0x40005D2")]
		WallQuad,
		[Token(Token = "0x40005D3")]
		ThreePoints
	}

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ClassificationManager instance;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ObjectClassification> allTypes;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ObjectClassification> quadTypes;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ObjectClassification> boxTypes;

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xB2E3E0", Offset = "0xB2E3E0", VA = "0xB2E3E0")]
	public static ClassificationManager GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xB2E42C", Offset = "0xB2E42C", VA = "0xB2E42C")]
	public ClassificationManager()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xB1F8A0", Offset = "0xB1F8A0", VA = "0xB1F8A0")]
	public string GetObjectClassificationString(ObjectClassification classfication)
	{
		return null;
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xB2E5B8", Offset = "0xB2E5B8", VA = "0xB2E5B8")]
	public ObjectClassification GetObjectClassificationFromString(string name)
	{
		return default(ObjectClassification);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xB1F868", Offset = "0xB1F868", VA = "0xB1F868")]
	public List<ObjectClassification> GetList(Interaction category)
	{
		return null;
	}
}
[Token(Token = "0x200010C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x835AA0", Offset = "0x835AA0")]
public class MoveToFrontRaycast : MonoBehaviour
{
	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask groundCollisionMask;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObjectMenu objectMenu;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform centerEye;

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xB7E89C", Offset = "0xB7E89C", VA = "0xB7E89C")]
	private void Start()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xB7E998", Offset = "0xB7E998", VA = "0xB7E998")]
	private void Update()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xB7EB90", Offset = "0xB7EB90", VA = "0xB7EB90")]
	public MoveToFrontRaycast()
	{
	}
}
[Token(Token = "0x200010D")]
public class ObjectClassification : MonoBehaviour
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text text;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image Icon;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ObjectMenuIcons MenuIcons;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ClassificationManager.ObjectClassification classification;

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xB8BD88", Offset = "0xB8BD88", VA = "0xB8BD88")]
	public void SetObjectClassification(ClassificationManager.ObjectClassification c)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xB8BF34", Offset = "0xB8BF34", VA = "0xB8BF34")]
	public ObjectClassification()
	{
	}
}
[Token(Token = "0x200010E")]
public class ObjectGlintIconHelper : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image icon;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ObjectMenuIcons menuIcons;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ObjectMenu objectMenu;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentIconStr;

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xB8C1E4", Offset = "0xB8C1E4", VA = "0xB8C1E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xB8C2A0", Offset = "0xB8C2A0", VA = "0xB8C2A0")]
	public ObjectGlintIconHelper()
	{
	}
}
[Token(Token = "0x200010F")]
public class ObjectMenu : MonoBehaviour
{
	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text title;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VerticalLayoutGroup classificationPanel;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VerticalLayoutGroup buttonPanel;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button editButton;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button applyButton;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button removeButton;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject target;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ClassificationManager.ObjectClassification selectedClassification;

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xB8E27C", Offset = "0xB8E27C", VA = "0xB8E27C")]
	public void OnObjectBeingDestroyed(GameObject obj)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xB8E340", Offset = "0xB8E340", VA = "0xB8E340")]
	public void Remove()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xB8E3C0", Offset = "0xB8E3C0", VA = "0xB8E3C0")]
	public void OpenClassificationPanel()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xB8E480", Offset = "0xB8E480", VA = "0xB8E480")]
	public void CloseClassificationPanel()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xB8E4FC", Offset = "0xB8E4FC", VA = "0xB8E4FC")]
	public void MenuButtonsVisibility(bool isVisible)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xB8E55C", Offset = "0xB8E55C", VA = "0xB8E55C")]
	public void ApplyClassificationAndClose()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xB8E680", Offset = "0xB8E680", VA = "0xB8E680")]
	public void SetClassification()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xB8E7C0", Offset = "0xB8E7C0", VA = "0xB8E7C0")]
	public ObjectMenu()
	{
	}
}
[Token(Token = "0x2000110")]
public class ObjectMenuIcons : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000111")]
	public struct IconItem
	{
		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string name;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public Sprite icon;
	}

	[Token(Token = "0x40005E7")]
	private const int GENERIC = 4;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private IconItem[] IconClassifications;

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xB8BE88", Offset = "0xB8BE88", VA = "0xB8BE88")]
	public Sprite GetIcon(string classification)
	{
		return null;
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xB8E7C8", Offset = "0xB8E7C8", VA = "0xB8E7C8")]
	public ObjectMenuIcons()
	{
	}
}
[Token(Token = "0x2000112")]
public class SceneObject : MonoBehaviour
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClassificationManager.ObjectClassification classification;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 dimensions;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xB13DC0", Offset = "0xB13DC0", VA = "0xB13DC0")]
	public SceneObject()
	{
	}
}
[Token(Token = "0x2000113")]
public class ControllerAnchors : MonoBehaviour
{
	[Token(Token = "0x2000114")]
	private enum ControllerType
	{
		[Token(Token = "0x40005F0")]
		QuestAndRiftS = 1,
		[Token(Token = "0x40005F1")]
		Rift,
		[Token(Token = "0x40005F2")]
		Quest2
	}

	[Token(Token = "0x2000115")]
	public enum AnchorType
	{
		[Token(Token = "0x40005F4")]
		MenuAnchor,
		[Token(Token = "0x40005F5")]
		TouchAnchor,
		[Token(Token = "0x40005F6")]
		InstructionsAnchor,
		[Token(Token = "0x40005F7")]
		ControllerAnchor
	}

	[Serializable]
	[Token(Token = "0x2000116")]
	private struct Anchor
	{
		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnchorType anchorType;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private Transform anchorRiftAndQuest;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform anchorQuest2;

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x1BEA8A4", Offset = "0x1BEA8A4", VA = "0x1BEA8A4")]
		public Transform Get(ControllerType controllerType)
		{
			return null;
		}
	}

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerType activeControllerType;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Anchor> anchors;

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xBB7D2C", Offset = "0xBB7D2C", VA = "0xBB7D2C")]
	public Transform GetAnchor(AnchorType anchorType)
	{
		return null;
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xBB7EB0", Offset = "0xBB7EB0", VA = "0xBB7EB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xBB7F34", Offset = "0xBB7F34", VA = "0xBB7F34")]
	public ControllerAnchors()
	{
	}
}
[Token(Token = "0x2000117")]
public class ControllerMapping : MonoBehaviour
{
	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ControllerMapping instance;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ControllerAnchors controllerAnchorsLeft;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ControllerAnchors controllerAnchorsRight;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ToggleLaserPointer laserPointerLeft;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ToggleLaserPointer laserPointerRight;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject laserPointerLeftGO;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject laserPointerRightGO;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OVRInput.Controller primaryController;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public OVRInput.Controller auxiliaryController;

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xBBAF40", Offset = "0xBBAF40", VA = "0xBBAF40")]
	public static ControllerMapping GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xBBAF8C", Offset = "0xBBAF8C", VA = "0xBBAF8C")]
	public ControllerMapping()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xBBAFF4", Offset = "0xBBAFF4", VA = "0xBBAFF4")]
	public void SwapHands()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xBBB054", Offset = "0xBBB054", VA = "0xBBB054")]
	public Transform GetAnchor(ControllerAnchors.AnchorType anchorType, bool primary = true)
	{
		return null;
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xBBB08C", Offset = "0xBBB08C", VA = "0xBBB08C")]
	public bool PrimaryHandPointingAtUI()
	{
		return default(bool);
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xBBB0C0", Offset = "0xBBB0C0", VA = "0xBBB0C0")]
	public string GetPrimaryHandName()
	{
		return null;
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xBBB128", Offset = "0xBBB128", VA = "0xBBB128")]
	public string GetButtonOneName()
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xBBB190", Offset = "0xBBB190", VA = "0xBBB190")]
	public string GetButtonTwoName()
	{
		return null;
	}
}
[Token(Token = "0x2000118")]
public class ChangeSceneExample : MonoBehaviour
{
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRInput.RawButton btn;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int SceneIndex;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xB2CC5C", Offset = "0xB2CC5C", VA = "0xB2CC5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xB2CD7C", Offset = "0xB2CD7C", VA = "0xB2CD7C")]
	public ChangeSceneExample()
	{
	}
}
[Token(Token = "0x2000119")]
public static class IOHelper
{
	[Token(Token = "0x600045C")]
	[Address(RVA = "0xA0DD34", Offset = "0xA0DD34", VA = "0xA0DD34")]
	public static bool FileExists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xA0DD3C", Offset = "0xA0DD3C", VA = "0xA0DD3C")]
	public static bool DirectoryExists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xA0DD44", Offset = "0xA0DD44", VA = "0xA0DD44")]
	public static string CreateFileInDirectory(string directoryPath, string filename)
	{
		return null;
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xA0DE48", Offset = "0xA0DE48", VA = "0xA0DE48")]
	public static string CreateFolderInDirectory(string directoryPath, string folderName)
	{
		return null;
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xA0DED0", Offset = "0xA0DED0", VA = "0xA0DED0")]
	public static void WriteTextToFile(string targetPath, string text)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xA0DED8", Offset = "0xA0DED8", VA = "0xA0DED8")]
	public static string ReadTextFromFile(string sourcePath)
	{
		return null;
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xA0DEE0", Offset = "0xA0DEE0", VA = "0xA0DEE0")]
	public static void DeleteFile(string path)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xA0DEE8", Offset = "0xA0DEE8", VA = "0xA0DEE8")]
	public static void DeleteDirectory(string path)
	{
	}
}
[Token(Token = "0x200011A")]
public class MRSingleton<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _Instance;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly object _Lock;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _ApplicationIsQuitting;

	[Token(Token = "0x1700005F")]
	public static T Instance
	{
		[Token(Token = "0x6000464")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000465")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000466")]
	public MRSingleton()
	{
	}
}
[Token(Token = "0x200011B")]
public class MyHomeBroker : MonoBehaviour
{
	[Token(Token = "0x200011C")]
	public delegate void RoomBoxNotifier(MyHomeRDF rdf, bool foundRoom, bool forceRedraw, bool versionOK);

	[Token(Token = "0x200011D")]
	public delegate void FoundRoomBox(MyHomeRDF rdf);

	[Token(Token = "0x200011E")]
	public delegate void RedrawRoomBox(bool forceRedraw);

	[Token(Token = "0x200011F")]
	public delegate void LeaveRoomBoxEditor();

	[Token(Token = "0x2000120")]
	public delegate void RoomboxVersionMismatch(int versionExpected, int versionFound);

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isRoomBoxScene;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool lookForRoomBox;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool forceNewRoomBox;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int targetRDFVersion;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoomBoxNotifier RoomBoxNotifierDelegate;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FoundRoomBox FoundRoomBoxDelegate;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RedrawRoomBox RedrawRoomBoxDelegate;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LeaveRoomBoxEditor LeaveRoomBoxEditorDelegate;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RoomboxVersionMismatch RoomboxVersionMismatchDelegate;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RDFManager rdfInstance;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xB818B4", Offset = "0xB818B4", VA = "0xB818B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xB81930", Offset = "0xB81930", VA = "0xB81930")]
	private void Start()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xB81A78", Offset = "0xB81A78", VA = "0xB81A78")]
	public void ExitRoomBoxEditor()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xB81978", Offset = "0xB81978", VA = "0xB81978")]
	private void LookForRoomBox()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xB81B20", Offset = "0xB81B20", VA = "0xB81B20")]
	private bool VersionMatch(MyHomeRDF rdf)
	{
		return default(bool);
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xB81BCC", Offset = "0xB81BCC", VA = "0xB81BCC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xB81CB0", Offset = "0xB81CB0", VA = "0xB81CB0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xB81DA8", Offset = "0xB81DA8", VA = "0xB81DA8")]
	public MyHomeBroker()
	{
	}
}
[Token(Token = "0x2000121")]
[Preserve]
public class MyHomeRDF : RDFBase
{
	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<List<RoomBoxManager.Plane>> WallAnchors;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<TransformItem> CubicFurnitureItems;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<TransformItem> WallFixturesItems;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<TransformItem> DecorationItems;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float CeilingHeight;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xB81DBC", Offset = "0xB81DBC", VA = "0xB81DBC")]
	public MyHomeRDF()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xB81DC4", Offset = "0xB81DC4", VA = "0xB81DC4")]
	public MyHomeRDF(string userID, string roomName)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xB81ED8", Offset = "0xB81ED8", VA = "0xB81ED8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xB82044", Offset = "0xB82044", VA = "0xB82044")]
	public string SerializeRDF(Formatting formatting = Formatting.Indented)
	{
		return null;
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xB820B8", Offset = "0xB820B8", VA = "0xB820B8")]
	public MyHomeRDF DeserializeRDF(string JSON)
	{
		return null;
	}
}
[Token(Token = "0x2000122")]
[Preserve]
public class RDFBase
{
	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Owner owner;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Version;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string RoomName;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x9A3AD4", Offset = "0x9A3AD4", VA = "0x9A3AD4")]
	public RDFBase()
	{
	}
}
[Token(Token = "0x2000123")]
[Preserve]
public class Owner
{
	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ID;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xBF33D8", Offset = "0xBF33D8", VA = "0xBF33D8")]
	public Owner()
	{
	}
}
[Token(Token = "0x2000124")]
[Preserve]
public class ItemBase
{
	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ItemInfo itemInfo;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xA1B58C", Offset = "0xA1B58C", VA = "0xA1B58C")]
	public ItemBase()
	{
	}
}
[Token(Token = "0x2000125")]
[Preserve]
public class ItemInfo
{
	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Classification;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xA1B5EC", Offset = "0xA1B5EC", VA = "0xA1B5EC")]
	public ItemInfo()
	{
	}
}
[Token(Token = "0x2000126")]
[Preserve]
public class TransformItem : ItemBase
{
	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 position;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 localScale;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Quaternion rotation;

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xDAB8B8", Offset = "0xDAB8B8", VA = "0xDAB8B8")]
	public TransformItem()
	{
	}
}
[Token(Token = "0x2000127")]
public class RDFManager : MRSingleton<RDFManager>
{
	[Token(Token = "0x4000621")]
	private const string FOLDER_NAME = "ProtoHomes";

	[Token(Token = "0x4000622")]
	private const string MY_HOME_NAME = "ProtoHome";

	[Token(Token = "0x4000623")]
	private const string ANDROID_SAVE_PATH = "/storage/emulated/0/Oculus";

	[Token(Token = "0x4000624")]
	private const string SLASH = "/";

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string UserID;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MyHomeRDF localRDF;

	[Token(Token = "0x17000060")]
	private string DataFolder
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0x9A3B40", Offset = "0x9A3B40", VA = "0x9A3B40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000061")]
	private string DataFolderSaveName
	{
		[Token(Token = "0x600048F")]
		[Address(RVA = "0x9A3B84", Offset = "0x9A3B84", VA = "0x9A3B84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000062")]
	private string CompletePathAndFileName
	{
		[Token(Token = "0x6000490")]
		[Address(RVA = "0x9A3BF8", Offset = "0x9A3BF8", VA = "0x9A3BF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x9A3CA4", Offset = "0x9A3CA4", VA = "0x9A3CA4")]
	public MyHomeRDF LoadRoomData()
	{
		return null;
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x9A3D60", Offset = "0x9A3D60", VA = "0x9A3D60")]
	private bool GetFileContent(string filename, ref string JSON)
	{
		return default(bool);
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x9A3E84", Offset = "0x9A3E84", VA = "0x9A3E84")]
	public bool InstantiateLoadedRoom(MyHomeRDF rdf)
	{
		return default(bool);
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x9A3E90", Offset = "0x9A3E90", VA = "0x9A3E90")]
	public bool InstantiateLoadedRoom([System.Runtime.InteropServices.Optional] RoomBoxManager roomBoxManager)
	{
		return default(bool);
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x9A4524", Offset = "0x9A4524", VA = "0x9A4524")]
	public void SaveRoomData()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x9A3FC0", Offset = "0x9A3FC0", VA = "0x9A3FC0")]
	private void LoadWalls(RoomBoxManager roomBoxManager)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x9A40FC", Offset = "0x9A40FC", VA = "0x9A40FC")]
	private void LoadCubicFurnitureItems(FurnishingManager furnishingManager)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x9A4310", Offset = "0x9A4310", VA = "0x9A4310")]
	private void LoadWallFixturesItems(FurnishingManager furnishingManager)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x9A4744", Offset = "0x9A4744", VA = "0x9A4744")]
	private void SaveWalls(ref MyHomeRDF homeFile)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x9A4C54", Offset = "0x9A4C54", VA = "0x9A4C54")]
	private void SaveFurniturePieces(ref MyHomeRDF homeFile, FurnishingManager furnishingManager)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x9A4F44", Offset = "0x9A4F44", VA = "0x9A4F44")]
	private void SaveWallFixturePieces(ref MyHomeRDF homeFile, FurnishingManager furnishingManager)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x9A5264", Offset = "0x9A5264", VA = "0x9A5264")]
	public void ClearRoom()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x9A54F8", Offset = "0x9A54F8", VA = "0x9A54F8")]
	public void ClearAllRoomData()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x9A5620", Offset = "0x9A5620", VA = "0x9A5620")]
	public RDFManager()
	{
	}
}
[Token(Token = "0x2000128")]
public class RoomConsumerMgr : MonoBehaviour
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MyHomeBroker myHomeBroker;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject lucidMesh;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject Room;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private OVRInput.RawAxis1D showHideLucidTrigger;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool lucidVisible;

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1BFD264", Offset = "0x1BFD264", VA = "0x1BFD264")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1BFD324", Offset = "0x1BFD324", VA = "0x1BFD324")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1BFD3E4", Offset = "0x1BFD3E4", VA = "0x1BFD3E4")]
	private void OnFoundHomeBox(MyHomeRDF rdf)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1BFD5BC", Offset = "0x1BFD5BC", VA = "0x1BFD5BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1BFD500", Offset = "0x1BFD500", VA = "0x1BFD500")]
	public void SetFurnitureVisibility(bool isEnabled)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1BFD764", Offset = "0x1BFD764", VA = "0x1BFD764")]
	public RoomConsumerMgr()
	{
	}
}
[Token(Token = "0x2000129")]
public class ToggleLaserPointer : MonoBehaviour
{
	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layerMask;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool pointingAtUI;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIColliderHelper lastUIColliderHelper;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xC2EB74", Offset = "0xC2EB74", VA = "0xC2EB74")]
	public bool IsPointingAtUI()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xC2EB7C", Offset = "0xC2EB7C", VA = "0xC2EB7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xC2EBD0", Offset = "0xC2EBD0", VA = "0xC2EBD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xC2EECC", Offset = "0xC2EECC", VA = "0xC2EECC")]
	public ToggleLaserPointer()
	{
	}
}
[Token(Token = "0x200012A")]
public class AdaptCollider : MonoBehaviour
{
	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int width;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform panel;

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xB1AF90", Offset = "0xB1AF90", VA = "0xB1AF90")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xB1B02C", Offset = "0xB1B02C", VA = "0xB1B02C")]
	public AdaptCollider()
	{
	}
}
[Token(Token = "0x200012B")]
public class AnimatorBool : MonoBehaviour
{
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835B60", Offset = "0x835B60")]
	private sealed class <Haptics>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float frequency;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float amplitude;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OVRInput.Controller controller;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B6")]
			[Address(RVA = "0x1BE95F0", Offset = "0x1BE95F0", VA = "0x1BE95F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0x1BE9638", Offset = "0x1BE9638", VA = "0x1BE9638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x1BE94A4", Offset = "0x1BE94A4", VA = "0x1BE94A4")]
		[DebuggerHidden]
		public <Haptics>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x1BE94D0", Offset = "0x1BE94D0", VA = "0x1BE94D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x1BE94D4", Offset = "0x1BE94D4", VA = "0x1BE94D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x1BE95F8", Offset = "0x1BE95F8", VA = "0x1BE95F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835B70", Offset = "0x835B70")]
	private sealed class <ScaleButton>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimatorBool <>4__this;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float from;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float to;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentTime>5__2;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004BC")]
			[Address(RVA = "0x1BE9810", Offset = "0x1BE9810", VA = "0x1BE9810", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004BE")]
			[Address(RVA = "0x1BE9858", Offset = "0x1BE9858", VA = "0x1BE9858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x1BE9640", Offset = "0x1BE9640", VA = "0x1BE9640")]
		[DebuggerHidden]
		public <ScaleButton>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x1BE966C", Offset = "0x1BE966C", VA = "0x1BE966C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x1BE9670", Offset = "0x1BE9670", VA = "0x1BE9670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x1BE9818", Offset = "0x1BE9818", VA = "0x1BE9818", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isOn;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator anim;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Toggle toggle;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isScaling;

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xB1D210", Offset = "0xB1D210", VA = "0xB1D210")]
	public void ToggleAnimationBool(string animBoolName)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xB1D2A4", Offset = "0xB1D2A4", VA = "0xB1D2A4")]
	public void SetIsOnBool(bool isOn)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xB1D32C", Offset = "0xB1D32C", VA = "0xB1D32C")]
	public void HideChildren()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xB1D3AC", Offset = "0xB1D3AC", VA = "0xB1D3AC")]
	public void Vibrate()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xB1D3EC", Offset = "0xB1D3EC", VA = "0xB1D3EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F3F4", Offset = "0x83F3F4")]
	private IEnumerator Haptics(float frequency, float amplitude, float duration, OVRInput.Controller controller)
	{
		return null;
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xB1D47C", Offset = "0xB1D47C", VA = "0xB1D47C")]
	public void Scale()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xB1D4B8", Offset = "0xB1D4B8", VA = "0xB1D4B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F454", Offset = "0x83F454")]
	private IEnumerator ScaleButton(float from, float to, float duration)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xB1D548", Offset = "0xB1D548", VA = "0xB1D548")]
	public AnimatorBool()
	{
	}
}
[Token(Token = "0x200012E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x835B80", Offset = "0x835B80")]
public class UISpritesAnimation : MonoBehaviour
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] sprites;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image image;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int index;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timer;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xDB0534", Offset = "0xDB0534", VA = "0xDB0534")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xDB0588", Offset = "0xDB0588", VA = "0xDB0588")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xDB063C", Offset = "0xDB063C", VA = "0xDB063C")]
	public UISpritesAnimation()
	{
	}
}
[Token(Token = "0x200012F")]
public class AnimatorHelper : MonoBehaviour
{
	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator tutorialAnimator;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int animationMode;

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xB1D550", Offset = "0xB1D550", VA = "0xB1D550")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xB1D558", Offset = "0xB1D558", VA = "0xB1D558")]
	public void UpdateAnimation(int mode)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xB1D5C0", Offset = "0xB1D5C0", VA = "0xB1D5C0")]
	public AnimatorHelper()
	{
	}
}
[Token(Token = "0x2000130")]
public class ButtonImageTransparency : MonoBehaviour
{
	[Token(Token = "0x400064A")]
	private const float ACTIVE = 1f;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Inactive;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool IsActive;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image buttonBackground;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text buttonText;

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xB23F18", Offset = "0xB23F18", VA = "0xB23F18")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xB23F1C", Offset = "0xB23F1C", VA = "0xB23F1C")]
	public void SetState(bool isActive)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xB23F28", Offset = "0xB23F28", VA = "0xB23F28")]
	public void SetActive()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xB23F7C", Offset = "0xB23F7C", VA = "0xB23F7C")]
	public void SetInactive()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xB23FC4", Offset = "0xB23FC4", VA = "0xB23FC4")]
	private void SetButtonTransparency(float transparency)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xB24020", Offset = "0xB24020", VA = "0xB24020")]
	private void SetTextTransparency(float transparency)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xB2407C", Offset = "0xB2407C", VA = "0xB2407C")]
	public ButtonImageTransparency()
	{
	}
}
[Token(Token = "0x2000131")]
public class CaptureAppBehaviors : MonoBehaviour
{
	[Token(Token = "0x2000132")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835BE0", Offset = "0x835BE0")]
	private sealed class <LoadYourAsyncScene>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sceneIndex;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x17000067")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0x1BEA5E8", Offset = "0x1BEA5E8", VA = "0x1BEA5E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004D6")]
			[Address(RVA = "0x1BEA630", Offset = "0x1BEA630", VA = "0x1BEA630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x1BEA4F4", Offset = "0x1BEA4F4", VA = "0x1BEA4F4")]
		[DebuggerHidden]
		public <LoadYourAsyncScene>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x1BEA520", Offset = "0x1BEA520", VA = "0x1BEA520", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x1BEA524", Offset = "0x1BEA524", VA = "0x1BEA524", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x1BEA5F0", Offset = "0x1BEA5F0", VA = "0x1BEA5F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835BF0", Offset = "0x835BF0")]
	private sealed class <LoadYourAsyncScene>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneName;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x17000069")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004DA")]
			[Address(RVA = "0x1BEA72C", Offset = "0x1BEA72C", VA = "0x1BEA72C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004DC")]
			[Address(RVA = "0x1BEA774", Offset = "0x1BEA774", VA = "0x1BEA774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x1BEA638", Offset = "0x1BEA638", VA = "0x1BEA638")]
		[DebuggerHidden]
		public <LoadYourAsyncScene>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x1BEA664", Offset = "0x1BEA664", VA = "0x1BEA664", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x1BEA668", Offset = "0x1BEA668", VA = "0x1BEA668", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x1BEA734", Offset = "0x1BEA734", VA = "0x1BEA734", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xB2C004", Offset = "0xB2C004", VA = "0xB2C004")]
	public void OnQuitButtonPressed()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xB2C00C", Offset = "0xB2C00C", VA = "0xB2C00C")]
	public void TryLoadingAnotherScene()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xB2C2A4", Offset = "0xB2C2A4", VA = "0xB2C2A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F554", Offset = "0x83F554")]
	private IEnumerator LoadYourAsyncScene(int sceneIndex)
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xB2C238", Offset = "0xB2C238", VA = "0xB2C238")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F5B4", Offset = "0x83F5B4")]
	private IEnumerator LoadYourAsyncScene(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xB2C310", Offset = "0xB2C310", VA = "0xB2C310")]
	public CaptureAppBehaviors()
	{
	}
}
[Token(Token = "0x2000134")]
public class ClassificationMenuUIHelper : MonoBehaviour
{
	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float distanceThreshold;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform centerEye;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool gateTo;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool gateFrom;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xB2EB20", Offset = "0xB2EB20", VA = "0xB2EB20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xB2EB58", Offset = "0xB2EB58", VA = "0xB2EB58")]
	private void ResetPanel()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xB2EDD8", Offset = "0xB2EDD8", VA = "0xB2EDD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xB2EC38", Offset = "0xB2EC38", VA = "0xB2EC38")]
	private void HandleState()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xB2EDDC", Offset = "0xB2EDDC", VA = "0xB2EDDC")]
	public ClassificationMenuUIHelper()
	{
	}
}
[Token(Token = "0x2000135")]
public class IgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xA0DEF4", Offset = "0xA0DEF4", VA = "0xA0DEF4", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xA0DEFC", Offset = "0xA0DEFC", VA = "0xA0DEFC")]
	public IgnoreRaycast()
	{
	}
}
[Token(Token = "0x2000136")]
public class Reticle : MonoBehaviour
{
	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject reticle;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float inactiveTime;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastMove;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x9A9AB8", Offset = "0x9A9AB8", VA = "0x9A9AB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x9A9B34", Offset = "0x9A9B34", VA = "0x9A9B34")]
	public void Show()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x9A9B14", Offset = "0x9A9B14", VA = "0x9A9B14")]
	public void Hide()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x9A9B54", Offset = "0x9A9B54", VA = "0x9A9B54")]
	public void Move(Vector3 position)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x9A9BBC", Offset = "0x9A9BBC", VA = "0x9A9BBC")]
	public Reticle()
	{
	}
}
[Token(Token = "0x2000137")]
public class SliderFloatingValue : MonoBehaviour
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject FloatingBox;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform handle;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Slider slider;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI textMeshProUGUI;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float baseHeight;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float step;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentHeight;

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xB165C0", Offset = "0xB165C0", VA = "0xB165C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xB16610", Offset = "0xB16610", VA = "0xB16610")]
	public float GetRoomHeight()
	{
		return default(float);
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xB16618", Offset = "0xB16618", VA = "0xB16618")]
	public void OnSliderValueChanged(float value)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xB16700", Offset = "0xB16700", VA = "0xB16700")]
	public void OnDragBegin()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xB1671C", Offset = "0xB1671C", VA = "0xB1671C")]
	public void OnDragEnd()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xB16720", Offset = "0xB16720", VA = "0xB16720")]
	public void OnDrag()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xB167AC", Offset = "0xB167AC", VA = "0xB167AC")]
	public SliderFloatingValue()
	{
	}
}
[Token(Token = "0x2000138")]
[ExecuteInEditMode]
public class UIColliderHelper : MonoBehaviour
{
	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] menuPanels;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool ignoreColliderResizing;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Reticle reticleRef;

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xDADA3C", Offset = "0xDADA3C", VA = "0xDADA3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xDADB74", Offset = "0xDADB74", VA = "0xDADB74")]
	private RectTransform GetActivePanel()
	{
		return null;
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xDADC30", Offset = "0xDADC30", VA = "0xDADC30")]
	public UIColliderHelper()
	{
	}
}
[Token(Token = "0x2000139")]
public class PassthroughStyle : MonoBehaviour
{
	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PassthroughMaterial;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material FurnitureMaterialOverride;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material RoomboxMaterialOverride;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CameraClearFlags cameraClearFlag;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool FlatGreyAmbientLight;

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x998C20", Offset = "0x998C20", VA = "0x998C20")]
	public PassthroughStyle()
	{
	}
}
[Token(Token = "0x200013A")]
public class AreaPreview : MonoBehaviour
{
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform firstVertex;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform secondVertex;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform thirdVertex;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 firstEdge;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 secondEdge;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool hidden;

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xB1E088", Offset = "0xB1E088", VA = "0xB1E088")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xB1E08C", Offset = "0xB1E08C", VA = "0xB1E08C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xB1E3A4", Offset = "0xB1E3A4", VA = "0xB1E3A4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xB1E47C", Offset = "0xB1E47C", VA = "0xB1E47C")]
	public AreaPreview()
	{
	}
}
[Token(Token = "0x200013B")]
public class CubicFurniture : MonoBehaviour
{
	[Token(Token = "0x200013C")]
	public enum Flow
	{
		[Token(Token = "0x4000685")]
		HoldTrigger,
		[Token(Token = "0x4000686")]
		PressOne,
		[Token(Token = "0x4000687")]
		ReleaseTrigger
	}

	[Token(Token = "0x200013D")]
	public enum Stage
	{
		[Token(Token = "0x4000689")]
		Nothing,
		[Token(Token = "0x400068A")]
		CreatingFirstCorner,
		[Token(Token = "0x400068B")]
		FirstCornerCreated,
		[Token(Token = "0x400068C")]
		CreatingSecondCorner,
		[Token(Token = "0x400068D")]
		SecondCornerCreated,
		[Token(Token = "0x400068E")]
		CreatingThirdCorner,
		[Token(Token = "0x400068F")]
		ThirdCornerCreated
	}

	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835C10", Offset = "0x835C10")]
	private sealed class <PlaceCorner>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubicFurniture <>4__this;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Stage editingStage;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform corner;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Stage endStage;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ControllerMapping <cm>5__2;

		[Token(Token = "0x1700006B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000506")]
			[Address(RVA = "0x1BEAAE0", Offset = "0x1BEAAE0", VA = "0x1BEAAE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000508")]
			[Address(RVA = "0x1BEAB28", Offset = "0x1BEAB28", VA = "0x1BEAB28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x1BEA944", Offset = "0x1BEA944", VA = "0x1BEA944")]
		[DebuggerHidden]
		public <PlaceCorner>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x1BEA970", Offset = "0x1BEA970", VA = "0x1BEA970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x1BEA974", Offset = "0x1BEA974", VA = "0x1BEA974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x1BEAAE8", Offset = "0x1BEAAE8", VA = "0x1BEAAE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835C20", Offset = "0x835C20")]
	private sealed class <WaitForRelease>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubicFurniture <>4__this;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ControllerMapping <cm>5__2;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050C")]
			[Address(RVA = "0x1BEAE8C", Offset = "0x1BEAE8C", VA = "0x1BEAE8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600050E")]
			[Address(RVA = "0x1BEAED4", Offset = "0x1BEAED4", VA = "0x1BEAED4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x1BEAD3C", Offset = "0x1BEAD3C", VA = "0x1BEAD3C")]
		[DebuggerHidden]
		public <WaitForRelease>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x1BEAD68", Offset = "0x1BEAD68", VA = "0x1BEAD68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x1BEAD6C", Offset = "0x1BEAD6C", VA = "0x1BEAD6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x1BEAE94", Offset = "0x1BEAE94", VA = "0x1BEAE94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835C30", Offset = "0x835C30")]
	private sealed class <ProceedOnRelease>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubicFurniture <>4__this;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ControllerMapping <cm>5__2;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x1BEACEC", Offset = "0x1BEACEC", VA = "0x1BEACEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x1BEAD34", Offset = "0x1BEAD34", VA = "0x1BEAD34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x1BEAB30", Offset = "0x1BEAB30", VA = "0x1BEAB30")]
		[DebuggerHidden]
		public <ProceedOnRelease>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1BEAB5C", Offset = "0x1BEAB5C", VA = "0x1BEAB5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x1BEAB60", Offset = "0x1BEAB60", VA = "0x1BEAB60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x1BEACF4", Offset = "0x1BEACF4", VA = "0x1BEACF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Flow flow;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private LayerMask groundCollisionMask;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVRInput.Axis1D cornerCreationTrigger;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private OVRInput.Button cornerCreationButton;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.Button cancelButton;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private ControllerAnchors.AnchorType anchorType;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Stage stage;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject firstCorner;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject secondCorner;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject thirdCorner;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private EdgePreview firstEdgePreview;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private EdgePreview secondEdgePreview;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AreaPreview areaPreview;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool editing;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private Stage saveStage;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xBBB53C", Offset = "0xBBB53C", VA = "0xBBB53C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xBBB698", Offset = "0xBBB698", VA = "0xBBB698")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F6B4", Offset = "0x83F6B4")]
	private IEnumerator PlaceCorner(Transform corner, Stage editingStage, Stage endStage)
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xBBB72C", Offset = "0xBBB72C", VA = "0xBBB72C")]
	private void FinalizeCreation()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xBBBE28", Offset = "0xBBBE28", VA = "0xBBBE28")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xBBC298", Offset = "0xBBC298", VA = "0xBBC298")]
	private void UpdateButtonFlow()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xBBC4F0", Offset = "0xBBC4F0", VA = "0xBBC4F0")]
	private void UpdateReleaseTriggerFlow()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xBBB62C", Offset = "0xBBB62C", VA = "0xBBB62C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F714", Offset = "0x83F714")]
	private IEnumerator WaitForRelease()
	{
		return null;
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xBBC6F8", Offset = "0xBBC6F8", VA = "0xBBC6F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F774", Offset = "0x83F774")]
	private IEnumerator ProceedOnRelease()
	{
		return null;
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xBBC078", Offset = "0xBBC078", VA = "0xBBC078")]
	private void UpdateTriggerFlow()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xBBBF08", Offset = "0xBBBF08", VA = "0xBBBF08")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xBBC764", Offset = "0xBBC764", VA = "0xBBC764")]
	public CubicFurniture()
	{
	}
}
[Token(Token = "0x2000141")]
public class CubicFurnitureCreation : MonoBehaviour
{
	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject cubicFurniturePrefab;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVRInput.Axis1D cornerCreationTrigger;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private OVRInput.Button conerCreationButton;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ControllerAnchors.AnchorType anchorType;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject cubicFurnitureInstance;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<GameObject> gizmos;

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xBBC76C", Offset = "0xBBC76C", VA = "0xBBC76C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xBBC8A0", Offset = "0xBBC8A0", VA = "0xBBC8A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xBBC774", Offset = "0xBBC774", VA = "0xBBC774")]
	private void EnableGizmos(bool enable)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xBBC970", Offset = "0xBBC970", VA = "0xBBC970")]
	private void Update()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xBBC8C8", Offset = "0xBBC8C8", VA = "0xBBC8C8")]
	public void Clear()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xBBCBF0", Offset = "0xBBCBF0", VA = "0xBBCBF0")]
	public CubicFurnitureCreation()
	{
	}
}
[Token(Token = "0x2000142")]
public class DemoFlow : MRSingleton<DemoFlow>
{
	[Token(Token = "0x2000143")]
	public enum DemoState
	{
		[Token(Token = "0x40006BF")]
		None,
		[Token(Token = "0x40006C0")]
		RoomBox,
		[Token(Token = "0x40006C1")]
		WindowsAndDoor,
		[Token(Token = "0x40006C2")]
		Furniture,
		[Token(Token = "0x40006C3")]
		Relocalization
	}

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RelocalizationManager relocManager;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ToggleLaserPointer uiLaserPointer;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RoomBoxManager roomBoxManager;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MyHomeBroker myHomeBroker;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CubicFurnitureCreation furnitureCreation;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WallSequentialCreation wallSequentialCreation;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WallSequentialRelocalization wallSequentialRelocalization;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WindowCreation windowsCreation;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AutoPopulateMenu objectClassificationMenu;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject FindAnExistingRoomBtnGO;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject CreateWallsNextBtnGO;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject ClearAllBtnGO;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject GhostWallPreview;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Slider CeilingHeightSlider;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SliderFloatingValue ceilingHeighHelper;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject ClearAllFurnishingsBtnGO;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Button btnReturnToRoomFinder;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Toggle quadToggleNeo;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Toggle cubeToggleNeo;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject quadToggleNeoAnimation;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject cubeToggleNeoAnimation;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject panelCreation;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject panelRoomFound;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private DemoState state;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public ClassificationManager.ObjectClassification creationType;

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xBC22E4", Offset = "0xBC22E4", VA = "0xBC22E4")]
	public void CreateWallsNextClicked()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xBC2304", Offset = "0xBC2304", VA = "0xBC2304")]
	public void ClearAllClicked()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xBC2354", Offset = "0xBC2354", VA = "0xBC2354")]
	public void ValidateWallButtonState()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xBC2418", Offset = "0xBC2418", VA = "0xBC2418")]
	private void OnPanelCeilingHeightChanged()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xBC2444", Offset = "0xBC2444", VA = "0xBC2444")]
	public void SetFurnitureState()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xBC28C0", Offset = "0xBC28C0", VA = "0xBC28C0")]
	public void SetFinishedState()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xBC28C8", Offset = "0xBC28C8", VA = "0xBC28C8")]
	public void SetNeutralState()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xBC28D0", Offset = "0xBC28D0", VA = "0xBC28D0")]
	public void SetRelocalizationState()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xBC28E0", Offset = "0xBC28E0", VA = "0xBC28E0")]
	private void OnFurnitureCountChanged(int count)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xBC2954", Offset = "0xBC2954", VA = "0xBC2954")]
	public void SetRoomBoxState()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xBC2964", Offset = "0xBC2964", VA = "0xBC2964")]
	public void ClassificationVisibility(bool isVisible)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xBC29C4", Offset = "0xBC29C4", VA = "0xBC29C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xBC2DB0", Offset = "0xBC2DB0", VA = "0xBC2DB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xBC319C", Offset = "0xBC319C", VA = "0xBC319C")]
	private void OnWallCountChanged()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xBC327C", Offset = "0xBC327C", VA = "0xBC327C")]
	private void FoundRoomBox(MyHomeRDF rdf)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xBC3380", Offset = "0xBC3380", VA = "0xBC3380")]
	private void RoomboxVersionMismatch(int versionExpected, int versionFound)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xBC3454", Offset = "0xBC3454", VA = "0xBC3454")]
	private void RelocalizationStarted()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xBC3458", Offset = "0xBC3458", VA = "0xBC3458")]
	private void RelocalizationEnded()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xBC3480", Offset = "0xBC3480", VA = "0xBC3480")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xBC35E0", Offset = "0xBC35E0", VA = "0xBC35E0")]
	public void ClearAllFurnishing()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xBC2308", Offset = "0xBC2308", VA = "0xBC2308")]
	public void StartRoomBoxSetup()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xBC28B8", Offset = "0xBC28B8", VA = "0xBC28B8")]
	public void SetState(DemoState newState, ClassificationManager.ObjectClassification type)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xBC3658", Offset = "0xBC3658", VA = "0xBC3658")]
	private void UpdateInteractions()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xBC2490", Offset = "0xBC2490", VA = "0xBC2490")]
	public void ChangeFurnishingTool(Toggle toggle)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xBC3728", Offset = "0xBC3728", VA = "0xBC3728")]
	public void OnCreateRoomPressed()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xBC2300", Offset = "0xBC2300", VA = "0xBC2300")]
	public void FinalizeRoomBox()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xBC3744", Offset = "0xBC3744", VA = "0xBC3744")]
	public DemoFlow()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xBC37BC", Offset = "0xBC37BC", VA = "0xBC37BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83F8C4", Offset = "0x83F8C4")]
	private void <Awake>b__44_0(float <p0>)
	{
	}
}
[Token(Token = "0x2000144")]
public class DropPreview : MonoBehaviour
{
	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask groundCollisionMask;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform vertex;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xBC8C68", Offset = "0xBC8C68", VA = "0xBC8C68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xBC8D70", Offset = "0xBC8D70", VA = "0xBC8D70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xBC8EB4", Offset = "0xBC8EB4", VA = "0xBC8EB4")]
	public DropPreview()
	{
	}
}
[Token(Token = "0x2000145")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x835C40", Offset = "0x835C40")]
public class EdgePreview : MonoBehaviour
{
	[Token(Token = "0x2000146")]
	public enum EdgeType
	{
		[Token(Token = "0x40006CE")]
		FirstEdge,
		[Token(Token = "0x40006CF")]
		SecondEdge
	}

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform firstVertex;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform secondVertex;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform thirdVertex;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EdgeType edgeType;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool hidden;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1C14398", Offset = "0x1C14398", VA = "0x1C14398")]
	private void Start()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1C14538", Offset = "0x1C14538", VA = "0x1C14538")]
	private void Update()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1C14668", Offset = "0x1C14668", VA = "0x1C14668")]
	public EdgePreview()
	{
	}
}
[Token(Token = "0x2000147")]
public class FurnishingManager : MonoBehaviour
{
	[Token(Token = "0x2000148")]
	public delegate void ObjectBeingDestroyed(GameObject obj);

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FurnishingManager _instance;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CubePrefab;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject QuadPrefab;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ClassificationMenuPrefab;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ShowClassificationMenu;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> furnitureInstances;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> wallFixtureInstances;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> classificationMenues;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ObjectBeingDestroyed ObjectBeingDestroyedDelegate;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<int> OnFurnitureCountChanged;

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1C19C08", Offset = "0x1C19C08", VA = "0x1C19C08")]
	public FurnishingManager()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1C19CE4", Offset = "0x1C19CE4", VA = "0x1C19CE4")]
	public static FurnishingManager GetInstance()
	{
		return null;
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1C19D30", Offset = "0x1C19D30", VA = "0x1C19D30")]
	public void InstantiateFurniture(Vector3 position, Quaternion rotation, Vector3 localScale, ClassificationManager.ObjectClassification classification)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1C1A244", Offset = "0x1C1A244", VA = "0x1C1A244")]
	public void InstantiateWallFixtures(Vector3 position, Quaternion rotation, Vector3 localScale, ClassificationManager.ObjectClassification classification)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1C1A1A0", Offset = "0x1C1A1A0", VA = "0x1C1A1A0")]
	private void RoomItemsChanged()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1C19E24", Offset = "0x1C19E24", VA = "0x1C19E24")]
	public GameObject InstantiateFurnishing(GameObject furnishingPrefab, Vector3 position, Quaternion rotation, Vector3 localScale, ClassificationManager.Interaction interaction, ClassificationManager.ObjectClassification classification)
	{
		return null;
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1C1A338", Offset = "0x1C1A338", VA = "0x1C1A338")]
	public void SetFurnitureDimensions(SceneObject furniturePiece, Vector3 scale)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1C1A470", Offset = "0x1C1A470", VA = "0x1C1A470")]
	public void SetClassificationMenuesActive(bool active)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1C1A5E8", Offset = "0x1C1A5E8", VA = "0x1C1A5E8")]
	public void SetClassificationMenuesButtonViewOptions(bool isVisible)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1C1A7B4", Offset = "0x1C1A7B4", VA = "0x1C1A7B4")]
	public void ClearFurniture()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1C1A958", Offset = "0x1C1A958", VA = "0x1C1A958")]
	public void ClearWindows()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1C1AAFC", Offset = "0x1C1AAFC", VA = "0x1C1AAFC")]
	public void ClearAll()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1C1AE04", Offset = "0x1C1AE04", VA = "0x1C1AE04")]
	public void RemoveFurnishing(GameObject f, GameObject menu)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1C1B214", Offset = "0x1C1B214", VA = "0x1C1B214")]
	public void OverrideMaterialsForAR(Material mat)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1C1B244", Offset = "0x1C1B244", VA = "0x1C1B244")]
	private void OverrideMaterials(Material mat, ref List<GameObject> list)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1C1B660", Offset = "0x1C1B660", VA = "0x1C1B660")]
	public void SetFurnishingOverrideMaterial(Material overrideMaterial)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1C1BAB0", Offset = "0x1C1BAB0", VA = "0x1C1BAB0")]
	public List<GameObject> GetAllFurniture()
	{
		return null;
	}
}
[Token(Token = "0x2000149")]
public class MaterialBuffer : MonoBehaviour
{
	[Token(Token = "0x200014A")]
	public class MaterialInfo
	{
		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material[] meshMaterials;

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x1BF0494", Offset = "0x1BF0494", VA = "0x1BF0494")]
		public MaterialInfo()
		{
		}
	}

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<MaterialInfo> objectMaterials;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool materialsStored;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xA201D8", Offset = "0xA201D8", VA = "0xA201D8")]
	public void StoreMaterials()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xA2021C", Offset = "0xA2021C", VA = "0xA2021C")]
	private void CheckAndAddMaterials(Transform rootTransform)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xA20388", Offset = "0xA20388", VA = "0xA20388")]
	public void RestoreMaterials()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xA203B8", Offset = "0xA203B8", VA = "0xA203B8")]
	private int RestoreRecursively(Transform rootTransform, int rootIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xA20590", Offset = "0xA20590", VA = "0xA20590")]
	public void SetOverrideMaterial(Material overrideMaterial)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xA205C4", Offset = "0xA205C4", VA = "0xA205C4")]
	private void ApplyMaterialRecursively(Transform rootTransform, Material overrideMat)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xA20770", Offset = "0xA20770", VA = "0xA20770")]
	public MaterialBuffer()
	{
	}
}
[Token(Token = "0x200014B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x835CA0", Offset = "0x835CA0")]
public class RelocalizationManager : MonoBehaviour
{
	[Token(Token = "0x200014C")]
	public delegate void RelocalizationStarted();

	[Token(Token = "0x200014D")]
	public delegate void RelocalizationEnded();

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RelocalizationStarted RelocalizationStartedDelegate;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RelocalizationEnded RelocalizationEndedDelegate;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera ovrCamera;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RawImage roomView;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RoomBoxManager roomBoxManager;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int previousCullingMask;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int roomMask;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<RoomBoxManager.Plane> planes;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> anchorPreviews;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RelocalizationWallPreview wallPreview;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color firstWallColor;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color secondWallColor;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color genericColor;

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x9A771C", Offset = "0x9A771C", VA = "0x9A771C")]
	public void WallPreviewVisibility(bool showPreview)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x9A778C", Offset = "0x9A778C", VA = "0x9A778C")]
	private void Start()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x9A7874", Offset = "0x9A7874", VA = "0x9A7874")]
	public void CamStart()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x9A7CCC", Offset = "0x9A7CCC", VA = "0x9A7CCC")]
	public void CamStop()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x9A7CF8", Offset = "0x9A7CF8", VA = "0x9A7CF8")]
	public void StartRelocalization()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x9A7E70", Offset = "0x9A7E70", VA = "0x9A7E70")]
	public void StopRelocalization()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x9A80F0", Offset = "0x9A80F0", VA = "0x9A80F0")]
	public void AddWallAnchor(RoomBoxManager.Plane plane)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x9A7F50", Offset = "0x9A7F50", VA = "0x9A7F50")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x9A83C8", Offset = "0x9A83C8", VA = "0x9A83C8")]
	private bool Relocalize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x9A8B44", Offset = "0x9A8B44", VA = "0x9A8B44")]
	public RelocalizationManager()
	{
	}
}
[Token(Token = "0x200014E")]
public class RelocalizationWallPreview : MonoBehaviour
{
	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ControllerAnchors.AnchorType anchorType;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ControllerMapping cm;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x9A8BFC", Offset = "0x9A8BFC", VA = "0x9A8BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x9A8C50", Offset = "0x9A8C50", VA = "0x9A8C50")]
	private void Update()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x9A7DE4", Offset = "0x9A7DE4", VA = "0x9A7DE4")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x9A8D50", Offset = "0x9A8D50", VA = "0x9A8D50")]
	public RelocalizationWallPreview()
	{
	}
}
[Token(Token = "0x200014F")]
public class RoomBoxManager : MonoBehaviour
{
	[Token(Token = "0x2000150")]
	public delegate void WallCountChanged();

	[Token(Token = "0x2000151")]
	public struct Plane
	{
		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 anchor;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 anchorNormal;

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x1BF48DC", Offset = "0x1BF48DC", VA = "0x1BF48DC")]
		public Plane(Vector3 anch, Vector3 norm, string GUID)
		{
		}
	}

	[Token(Token = "0x2000152")]
	public struct Wall
	{
		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Plane anchorPlane;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 center;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float width;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float height;
	}

	[Token(Token = "0x2000153")]
	public enum WallCreationOutcome
	{
		[Token(Token = "0x4000704")]
		Success,
		[Token(Token = "0x4000705")]
		CoplanarAnchors,
		[Token(Token = "0x4000706")]
		AnchorsTooClose,
		[Token(Token = "0x4000707")]
		ParallelButNotCoplanar
	}

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RoomBoxManager _instance;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WallCountChanged WallCountChangedDelegate;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject anchorPreviewPrefab;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject wallPrefab;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject floorPrefab;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera birdViewCamera;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float coplanarityThresholdAngle;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float coplanarityThresholdDistance;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minAnchorDistance;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject floor;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float ceilingHeight;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<List<Plane>> anchors;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Wall> walls;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string floorMaterial;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string ceilingMaterial;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> anchorPreviews;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<GameObject> meshInstances;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x9AAAD4", Offset = "0x9AAAD4", VA = "0x9AAAD4")]
	public RoomBoxManager()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x9AAC50", Offset = "0x9AAC50", VA = "0x9AAC50")]
	public static RoomBoxManager GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x9AAC9C", Offset = "0x9AAC9C", VA = "0x9AAC9C")]
	public bool GetFloorInstance(out GameObject floorInstance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x9AAD34", Offset = "0x9AAD34", VA = "0x9AAD34")]
	public List<GameObject> GetMeshInstances()
	{
		return null;
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x9AAD3C", Offset = "0x9AAD3C", VA = "0x9AAD3C")]
	public WallCreationOutcome AddWallAnchor(Plane wall)
	{
		return default(WallCreationOutcome);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x9AB314", Offset = "0x9AB314", VA = "0x9AB314")]
	public void InstantiateLoadedWallAnchors()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x9AB0D8", Offset = "0x9AB0D8", VA = "0x9AB0D8")]
	private Plane GetAveragePlane(List<Plane> planes)
	{
		return default(Plane);
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x9AB234", Offset = "0x9AB234", VA = "0x9AB234")]
	private bool PlanesAreParallel(Plane a, Plane b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x9AB2B8", Offset = "0x9AB2B8", VA = "0x9AB2B8")]
	private float DistnaceBetweenPlanes(Plane a, Plane b)
	{
		return default(float);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x9A8258", Offset = "0x9A8258", VA = "0x9A8258")]
	public GameObject InstantiateAnchor(Plane wall, int anchorsCount)
	{
		return null;
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x9AB55C", Offset = "0x9AB55C", VA = "0x9AB55C")]
	public bool CanCreateRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x9AB5B0", Offset = "0x9AB5B0", VA = "0x9AB5B0")]
	public bool AnchorsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x9AB604", Offset = "0x9AB604", VA = "0x9AB604")]
	public void ChangeCeilingHeight(float height)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x9AB880", Offset = "0x9AB880", VA = "0x9AB880")]
	public void RemoveLastWall()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x9A5234", Offset = "0x9A5234", VA = "0x9A5234")]
	public void CreateInstances()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x9AC690", Offset = "0x9AC690", VA = "0x9AC690")]
	public void AnchorVisibility(bool isVisible)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x9A52F8", Offset = "0x9A52F8", VA = "0x9A52F8")]
	public void ClearAll()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x9AC7BC", Offset = "0x9AC7BC", VA = "0x9AC7BC")]
	public void ClearInstances()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x9AC9C0", Offset = "0x9AC9C0", VA = "0x9AC9C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x9ABA40", Offset = "0x9ABA40", VA = "0x9ABA40")]
	private void UpdateWalls()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x9ABFB4", Offset = "0x9ABFB4", VA = "0x9ABFB4")]
	private void UpdateFloorAndCeiling()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x9ACAA0", Offset = "0x9ACAA0", VA = "0x9ACAA0")]
	private void TestGizmos()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x9A87B8", Offset = "0x9A87B8", VA = "0x9A87B8")]
	public bool GetInteresection(Plane wall1, Plane wall2, out Vector3 point, out Vector3 direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x9ACB48", Offset = "0x9ACB48", VA = "0x9ACB48")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x9A795C", Offset = "0x9A795C", VA = "0x9A795C")]
	public void ShowRelocalizationBars(bool doShow, Color firstWallColor, Color secondWallColor, Color genericColor, bool ignoreColor = false)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x9AD3F4", Offset = "0x9AD3F4", VA = "0x9AD3F4")]
	public bool GetWallNumbersCoordinates(ref Vector3 first, ref Vector3 second)
	{
		return default(bool);
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x9A8914", Offset = "0x9A8914", VA = "0x9A8914")]
	public Vector3 GetUnityFrameRelocalizationCorner()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x9A86F0", Offset = "0x9A86F0", VA = "0x9A86F0")]
	public Quaternion GetFirstWallRelativeRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x9AD5BC", Offset = "0x9AD5BC", VA = "0x9AD5BC")]
	public void SetRoomboxOverrideMaterial(Material overrideMaterial)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x9AD850", Offset = "0x9AD850", VA = "0x9AD850")]
	public void OverrideMaterialsForAR(Material mat)
	{
	}
}
[Token(Token = "0x2000154")]
public class RoomBoxMesh : MonoBehaviour
{
	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material WallMaterial;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material FloorMaterial;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material CeilingMaterial;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject WallGameObject;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject FloorGameObject;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject CeilingGameObject;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh WallMesh;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh FloorMesh;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh CeilingMesh;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float borderSize;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83938C", Offset = "0x83938C")]
	public bool mappingInWorldUnits;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool CreateDebugRoom;

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1BFB298", Offset = "0x1BFB298", VA = "0x1BFB298")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1BFB524", Offset = "0x1BFB524", VA = "0x1BFB524")]
	private void PrepareSurfaceObject(ref GameObject gameObj, ref Mesh meshObj, string objName, Material objMaterial)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1BFB6E0", Offset = "0x1BFB6E0", VA = "0x1BFB6E0")]
	public void CreateRoomBoxMeshFromSpline(List<Vector3> points, float ceilingHeight)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1BFCB24", Offset = "0x1BFCB24", VA = "0x1BFCB24")]
	public void CreateRoomBoxMeshFromWalls(List<GameObject> roomFaces)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1BFB870", Offset = "0x1BFB870", VA = "0x1BFB870")]
	private void CreateWallMesh(List<Vector3> points, float ceilingHeight)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1BFBFF8", Offset = "0x1BFBFF8", VA = "0x1BFBFF8")]
	private void CreateFloorAndCeilingMeshes(List<Vector3> points, float ceilingHeight)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1BFCE0C", Offset = "0x1BFCE0C", VA = "0x1BFCE0C")]
	private void CreateBorderedPolygon(ref int[] indexArray, ref int indexCounter, int baseIndex, int pointsInLoop, bool flipNormal = false)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1BFD028", Offset = "0x1BFD028", VA = "0x1BFD028")]
	public void ClearRoomBoxMesh()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1BFD074", Offset = "0x1BFD074", VA = "0x1BFD074")]
	public void SetSurfaceMaterial(Material newMat)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1BFD124", Offset = "0x1BFD124", VA = "0x1BFD124")]
	public void SetMeshVisible(bool isVisible)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x1BFD18C", Offset = "0x1BFD18C", VA = "0x1BFD18C")]
	public RoomBoxMesh()
	{
	}
}
[Token(Token = "0x2000155")]
public class RoomBoxSurface : MonoBehaviour
{
	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer meshSurface;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x1BFD1A0", Offset = "0x1BFD1A0", VA = "0x1BFD1A0")]
	public void ApplyMaterial(Material newMaterial, string newGUID)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1BFD25C", Offset = "0x1BFD25C", VA = "0x1BFD25C")]
	public RoomBoxSurface()
	{
	}
}
[Token(Token = "0x2000156")]
public class SoftTrackingUI : MonoBehaviour
{
	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool soft;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float softRadius;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool collapse;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float collapseThresholdAngle;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float collpsedScale;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool primaryController;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ControllerAnchors.AnchorType anchorType;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool orientOnly;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform centerEye;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float inFocusElapsedTime;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 startScale;

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xB19984", Offset = "0xB19984", VA = "0xB19984")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xB19A7C", Offset = "0xB19A7C", VA = "0xB19A7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xB19EEC", Offset = "0xB19EEC", VA = "0xB19EEC")]
	public SoftTrackingUI()
	{
	}
}
[Token(Token = "0x2000157")]
public class TextureTiling : MonoBehaviour
{
	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 tiling;

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xC2DBB0", Offset = "0xC2DBB0", VA = "0xC2DBB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xC2DCF4", Offset = "0xC2DCF4", VA = "0xC2DCF4")]
	public TextureTiling()
	{
	}
}
[Token(Token = "0x2000158")]
public class WallData : MonoBehaviour
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer wallRimRenderer;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer wallFaceRenderer;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform NumberAnchor;

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xDB22E4", Offset = "0xDB22E4", VA = "0xDB22E4")]
	public WallData()
	{
	}
}
[Token(Token = "0x2000159")]
public class WallSequentialCreation : MonoBehaviour
{
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835D00", Offset = "0x835D00")]
	private sealed class <CreateOnRelease>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WallSequentialCreation <>4__this;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ControllerMapping <cm>5__2;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AD")]
			[Address(RVA = "0x1BF9978", Offset = "0x1BF9978", VA = "0x1BF9978", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AF")]
			[Address(RVA = "0x1BF99C0", Offset = "0x1BF99C0", VA = "0x1BF99C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x1BF97F0", Offset = "0x1BF97F0", VA = "0x1BF97F0")]
		[DebuggerHidden]
		public <CreateOnRelease>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x1BF981C", Offset = "0x1BF981C", VA = "0x1BF981C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x1BF9820", Offset = "0x1BF9820", VA = "0x1BF9820", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x1BF9980", Offset = "0x1BF9980", VA = "0x1BF9980", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RoomBoxManager roomBoxManager;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVRInput.Button creationButton;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private OVRInput.Axis1D creationTrigger;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.Button cancelButton;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private OVRInput.Button confirmButton;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ControllerAnchors.AnchorType anchorType;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool creationInProgress;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds pauseAfterCreation;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xDB22EC", Offset = "0xDB22EC", VA = "0xDB22EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xDB2678", Offset = "0xDB2678", VA = "0xDB2678")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F8D4", Offset = "0x83F8D4")]
	private IEnumerator CreateOnRelease()
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xDB2508", Offset = "0xDB2508", VA = "0xDB2508")]
	private void CreateAnchor()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xDB26E4", Offset = "0xDB26E4", VA = "0xDB26E4")]
	public WallSequentialCreation()
	{
	}
}
[Token(Token = "0x200015B")]
public class WallSequentialRelocalization : MonoBehaviour
{
	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835D10", Offset = "0x835D10")]
	private sealed class <Warmup>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WallSequentialRelocalization <>4__this;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0x1BF9C80", Offset = "0x1BF9C80", VA = "0x1BF9C80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0x1BF9CC8", Offset = "0x1BF9CC8", VA = "0x1BF9CC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x1BF9B68", Offset = "0x1BF9B68", VA = "0x1BF9B68")]
		[DebuggerHidden]
		public <Warmup>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x1BF9B94", Offset = "0x1BF9B94", VA = "0x1BF9B94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x1BF9B98", Offset = "0x1BF9B98", VA = "0x1BF9B98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x1BF9C88", Offset = "0x1BF9C88", VA = "0x1BF9C88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835D20", Offset = "0x835D20")]
	private sealed class <CreateOnRelease>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WallSequentialRelocalization <>4__this;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x1BF9B18", Offset = "0x1BF9B18", VA = "0x1BF9B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0x1BF9B60", Offset = "0x1BF9B60", VA = "0x1BF9B60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x1BF99C8", Offset = "0x1BF99C8", VA = "0x1BF99C8")]
		[DebuggerHidden]
		public <CreateOnRelease>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x1BF99F4", Offset = "0x1BF99F4", VA = "0x1BF99F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x1BF99F8", Offset = "0x1BF99F8", VA = "0x1BF99F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x1BF9B20", Offset = "0x1BF9B20", VA = "0x1BF9B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RelocalizationManager relocManager;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVRInput.Button creationButton;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private OVRInput.Button cancelButton;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.Axis1D creationTrigger;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private ControllerAnchors.AnchorType anchorType;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool creationInProgress;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds pauseAfterCreation;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ControllerMapping cm;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool justEnabled;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xDB2750", Offset = "0xDB2750", VA = "0xDB2750")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xDB27B8", Offset = "0xDB27B8", VA = "0xDB27B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F984", Offset = "0x83F984")]
	public IEnumerator Warmup()
	{
		return null;
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xDB2824", Offset = "0xDB2824", VA = "0xDB2824")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xDB2A98", Offset = "0xDB2A98", VA = "0xDB2A98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83F9E4", Offset = "0x83F9E4")]
	private IEnumerator CreateOnRelease()
	{
		return null;
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xDB29D0", Offset = "0xDB29D0", VA = "0xDB29D0")]
	private void CreateAnchor()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xDB2B04", Offset = "0xDB2B04", VA = "0xDB2B04")]
	public WallSequentialRelocalization()
	{
	}
}
[Token(Token = "0x200015E")]
public class WindowCreation : MonoBehaviour
{
	[Token(Token = "0x200015F")]
	public enum State
	{
		[Token(Token = "0x4000753")]
		NoneSet,
		[Token(Token = "0x4000754")]
		FirstSet,
		[Token(Token = "0x4000755")]
		SecondSet
	}

	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835D30", Offset = "0x835D30")]
	private sealed class <CreateOnRelease>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WindowCreation <>4__this;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RaycastHit info;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ControllerMapping <cm>5__2;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D0")]
			[Address(RVA = "0x1BFA248", Offset = "0x1BFA248", VA = "0x1BFA248", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D2")]
			[Address(RVA = "0x1BFA290", Offset = "0x1BFA290", VA = "0x1BFA290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x1BFA014", Offset = "0x1BFA014", VA = "0x1BFA014")]
		[DebuggerHidden]
		public <CreateOnRelease>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x1BFA040", Offset = "0x1BFA040", VA = "0x1BFA040", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x1BFA044", Offset = "0x1BFA044", VA = "0x1BFA044", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x1BFA250", Offset = "0x1BFA250", VA = "0x1BFA250", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRInput.Button creationButton;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private OVRInput.Axis1D creationTrigger;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVRInput.Button cancelButton;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private ControllerAnchors.AnchorType anchorType;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool snapToGrid;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float gridCellSize;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float lerpFactor;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private LayerMask wallCollisionMask;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform cursor;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform rawCursor;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private WindowPreview windowPreview;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Collider firstCollider;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float eps;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject creationCursor;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject creationCursorRaw;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool creationInProgress;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 lastPointOnPlane;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds pauseAfterCreation;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public State state;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xDB3274", Offset = "0xDB3274", VA = "0xDB3274")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xDB32B8", Offset = "0xDB32B8", VA = "0xDB32B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xDB3314", Offset = "0xDB3314", VA = "0xDB3314")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xDB3380", Offset = "0xDB3380", VA = "0xDB3380")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xDB3A84", Offset = "0xDB3A84", VA = "0xDB3A84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83FAE4", Offset = "0x83FAE4")]
	private IEnumerator CreateOnRelease(RaycastHit info)
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xDB3B18", Offset = "0xDB3B18", VA = "0xDB3B18")]
	private void FinalizeWindow()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xDB3A54", Offset = "0xDB3A54", VA = "0xDB3A54")]
	private float SnapToGrid(float x, float planeCellSize)
	{
		return default(float);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xDB3E34", Offset = "0xDB3E34", VA = "0xDB3E34")]
	private void UpdatePreview(RaycastHit info)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xDB3378", Offset = "0xDB3378", VA = "0xDB3378")]
	public void Clear()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xDB3F80", Offset = "0xDB3F80", VA = "0xDB3F80")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xDB4018", Offset = "0xDB4018", VA = "0xDB4018")]
	public WindowCreation()
	{
	}
}
[Token(Token = "0x2000161")]
public class WindowPreview : MonoBehaviour
{
	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform firstVertex;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform secondVertex;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isHidden;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x1BE67CC", Offset = "0x1BE67CC", VA = "0x1BE67CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1BE6A5C", Offset = "0x1BE6A5C", VA = "0x1BE6A5C")]
	public WindowPreview()
	{
	}
}
[Token(Token = "0x2000162")]
[ExecuteInEditMode]
public class UIElementPlacer : MonoBehaviour
{
	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x839564", Offset = "0x839564")]
	public Vector2 imagePositionPixels;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83959C", Offset = "0x83959C")]
	public RectTransform parentRectTransform;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8395D4", Offset = "0x8395D4")]
	public RawImage image;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83960C", Offset = "0x83960C")]
	public VerticalLayoutGroup panelLayout;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform imageTransform;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 offsetInPanel;

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xDADC38", Offset = "0xDADC38", VA = "0xDADC38")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xDADC3C", Offset = "0xDADC3C", VA = "0xDADC3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xDADE24", Offset = "0xDADE24", VA = "0xDADE24")]
	public UIElementPlacer()
	{
	}
}
[Token(Token = "0x2000163")]
public class BootLoader : MonoBehaviour
{
	[Token(Token = "0x2000164")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835D50", Offset = "0x835D50")]
	private sealed class <LoadTitle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BootLoader <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005E0")]
			[Address(RVA = "0x1BE9B98", Offset = "0x1BE9B98", VA = "0x1BE9B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005E2")]
			[Address(RVA = "0x1BE9BE0", Offset = "0x1BE9BE0", VA = "0x1BE9BE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x1BE9860", Offset = "0x1BE9860", VA = "0x1BE9860")]
		[DebuggerHidden]
		public <LoadTitle>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x1BE988C", Offset = "0x1BE988C", VA = "0x1BE988C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x1BE9890", Offset = "0x1BE9890", VA = "0x1BE9890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x1BE9BA0", Offset = "0x1BE9BA0", VA = "0x1BE9BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PermissionCallbacks permissionCallbacks;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool permissionRequestComplete;

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xB20B58", Offset = "0xB20B58", VA = "0xB20B58")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xB20B84", Offset = "0xB20B84", VA = "0xB20B84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83FB94", Offset = "0x83FB94")]
	private IEnumerator LoadTitle()
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xB20BF0", Offset = "0xB20BF0", VA = "0xB20BF0")]
	private bool HasPermissions()
	{
		return default(bool);
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xB20C58", Offset = "0xB20C58", VA = "0xB20C58")]
	private void OnPermissionResponse(string result)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xB20C64", Offset = "0xB20C64", VA = "0xB20C64")]
	public BootLoader()
	{
	}
}
[Token(Token = "0x2000165")]
[SelectionBase]
public class ControlPoint : MonoBehaviour
{
	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Spline spline;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material deleteMaterial;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material connectMaterial;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material baseMaterial;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InteractableUnityEventWrapper interactableEvents;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool objectSelected;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool justSelected;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool justDeselected;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool justRemoved;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject linkedStation;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ControlPointStatic linkedStaticControlPoint;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject objectCollided;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject objectStaticCollided;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ControlPoint controlPointCollided;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839644", Offset = "0x839644")]
	public GameObject tangentPrefab1;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject tangentPrefab2;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject tangent1;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject tangent2;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool initialized;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool isActive;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float activeSleepTime;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float currentActiveSleepTime;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Collider connectionCollider;

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xB2FFF8", Offset = "0xB2FFF8", VA = "0xB2FFF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xB304B0", Offset = "0xB304B0", VA = "0xB304B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xB309B8", Offset = "0xB309B8", VA = "0xB309B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xB30A50", Offset = "0xB30A50", VA = "0xB30A50")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xB3124C", Offset = "0xB3124C", VA = "0xB3124C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xB3053C", Offset = "0xB3053C", VA = "0xB3053C")]
	public void UpdateControlPointTangents()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xB31414", Offset = "0xB31414", VA = "0xB31414")]
	public void SelectedListener()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xB314A0", Offset = "0xB314A0", VA = "0xB314A0")]
	public void UnselectedListener()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xB30C4C", Offset = "0xB30C4C", VA = "0xB30C4C")]
	public bool IsLinkable(ControlPoint thisControlPoint, ControlPoint otherControlPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xB30F70", Offset = "0xB30F70", VA = "0xB30F70")]
	public bool IsLinkableStatic(ControlPoint thisControlPoint, ControlPointStatic staticControlPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xB313DC", Offset = "0xB313DC", VA = "0xB313DC")]
	public bool IsStart()
	{
		return default(bool);
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xB31CA0", Offset = "0xB31CA0", VA = "0xB31CA0")]
	public bool IsEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xB31CD8", Offset = "0xB31CD8", VA = "0xB31CD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xB303B8", Offset = "0xB303B8", VA = "0xB303B8")]
	public void HandleInputChange(bool handTracking)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xB31EB4", Offset = "0xB31EB4", VA = "0xB31EB4")]
	public ControlPoint()
	{
	}
}
[Token(Token = "0x2000166")]
[SelectionBase]
public class ControlPointCreator : MonoBehaviour
{
	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Spline spline;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material baseMaterial;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider creatorCollider;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InteractableUnityEventWrapper interactableEvents;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool atStart;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool objectSelected;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject objectCollided;

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xBB50F0", Offset = "0xBB50F0", VA = "0xBB50F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xBB553C", Offset = "0xBB553C", VA = "0xBB553C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xBB5624", Offset = "0xBB5624", VA = "0xBB5624")]
	private void SelectedListener()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xBB568C", Offset = "0xBB568C", VA = "0xBB568C")]
	private void UnselectedListener()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xBB57E4", Offset = "0xBB57E4", VA = "0xBB57E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xBB5444", Offset = "0xBB5444", VA = "0xBB5444")]
	public void HandleInputChange(bool handTracking)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xBB59C0", Offset = "0xBB59C0", VA = "0xBB59C0")]
	public ControlPointCreator()
	{
	}
}
[Token(Token = "0x2000167")]
public class PoseStateHandler : MonoBehaviour
{
	[Token(Token = "0x2000168")]
	public enum GestureState
	{
		[Token(Token = "0x4000796")]
		none,
		[Token(Token = "0x4000797")]
		menu,
		[Token(Token = "0x4000798")]
		gun,
		[Token(Token = "0x4000799")]
		trash,
		[Token(Token = "0x400079A")]
		disabled
	}

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject menuPoseL;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject menuPoseR;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject menuAwayPoseL;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject menuAwayPoseR;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GestureState lastGesture;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int lastHanded;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GestureState curGesture;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int curHanded;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float GestureCooldown;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float CDTank;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x9A192C", Offset = "0x9A192C", VA = "0x9A192C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x9A1BE4", Offset = "0x9A1BE4", VA = "0x9A1BE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x9A1B14", Offset = "0x9A1B14", VA = "0x9A1B14")]
	public void ChangeGestureState(GestureState pose, int handed)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x9A1E70", Offset = "0x9A1E70", VA = "0x9A1E70")]
	public void ForceGestureState(GestureState newState, int handed)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x9A1CA8", Offset = "0x9A1CA8", VA = "0x9A1CA8")]
	private void EnterGestureState()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x9A1C30", Offset = "0x9A1C30", VA = "0x9A1C30")]
	private void EndGestureState()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x9A1E80", Offset = "0x9A1E80", VA = "0x9A1E80")]
	public void PalmPose(int handed)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x9A200C", Offset = "0x9A200C", VA = "0x9A200C")]
	public void PalmAwayPose(int handed)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x9A2334", Offset = "0x9A2334", VA = "0x9A2334")]
	private void DisableAllPoses()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x9A23A0", Offset = "0x9A23A0", VA = "0x9A23A0")]
	private void DisableMainGestureNav()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x9A23E4", Offset = "0x9A23E4", VA = "0x9A23E4")]
	private void ReturnToMainGestureNav()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x9A2428", Offset = "0x9A2428", VA = "0x9A2428")]
	public PoseStateHandler()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x9A2444", Offset = "0x9A2444", VA = "0x9A2444")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FC44", Offset = "0x83FC44")]
	private void <Start>b__11_0()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x9A244C", Offset = "0x9A244C", VA = "0x9A244C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FC54", Offset = "0x83FC54")]
	private void <Start>b__11_1()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x9A2454", Offset = "0x9A2454", VA = "0x9A2454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FC64", Offset = "0x83FC64")]
	private void <Start>b__11_2()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x9A245C", Offset = "0x9A245C", VA = "0x9A245C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FC74", Offset = "0x83FC74")]
	private void <Start>b__11_3()
	{
	}
}
[Token(Token = "0x2000169")]
public class InteractiveConstruct : MonoBehaviour
{
	[Token(Token = "0x6000609")]
	[Address(RVA = "0xA1B380", Offset = "0xA1B380", VA = "0xA1B380")]
	private void Start()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xA1B384", Offset = "0xA1B384", VA = "0xA1B384")]
	private void Update()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xA1B388", Offset = "0xA1B388", VA = "0xA1B388")]
	public InteractiveConstruct()
	{
	}
}
[Token(Token = "0x200016A")]
public class SplineConstruct : MonoBehaviour
{
	[Token(Token = "0x600060C")]
	[Address(RVA = "0xC23A18", Offset = "0xC23A18", VA = "0xC23A18")]
	private void Start()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xC23A1C", Offset = "0xC23A1C", VA = "0xC23A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xC23A20", Offset = "0xC23A20", VA = "0xC23A20")]
	public SplineConstruct()
	{
	}
}
[Token(Token = "0x200016B")]
public class TriggerableConstruct : MonoBehaviour
{
	[Token(Token = "0x600060F")]
	[Address(RVA = "0xDAB8C0", Offset = "0xDAB8C0", VA = "0xDAB8C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xDAB8C4", Offset = "0xDAB8C4", VA = "0xDAB8C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xDAB8C8", Offset = "0xDAB8C8", VA = "0xDAB8C8")]
	public TriggerableConstruct()
	{
	}
}
[Token(Token = "0x200016C")]
public class FixLODBias : MonoBehaviour
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bias;

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1C167B8", Offset = "0x1C167B8", VA = "0x1C167B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1C167C4", Offset = "0x1C167C4", VA = "0x1C167C4")]
	public FixLODBias()
	{
	}
}
[Token(Token = "0x200016D")]
public class LODDistancer : MonoBehaviour
{
	[Token(Token = "0x6000614")]
	[Address(RVA = "0xA1B640", Offset = "0xA1B640", VA = "0xA1B640")]
	public LODDistancer()
	{
	}
}
[Token(Token = "0x200016E")]
public class OVRExtraSettings : MonoBehaviour
{
	[Token(Token = "0x200016F")]
	public enum FFRLevel
	{
		[Token(Token = "0x400079F")]
		off,
		[Token(Token = "0x40007A0")]
		low,
		[Token(Token = "0x40007A1")]
		medium,
		[Token(Token = "0x40007A2")]
		high,
		[Token(Token = "0x40007A3")]
		veryHigh
	}

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FFRLevel fixedFoveatedRenderingLevel;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float displayFrequency;

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xB82C40", Offset = "0xB82C40", VA = "0xB82C40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xB82DAC", Offset = "0xB82DAC", VA = "0xB82DAC")]
	public OVRExtraSettings()
	{
	}
}
[Token(Token = "0x2000170")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x835D80", Offset = "0x835D80")]
public class ButtonHook : MonoBehaviour
{
	[Token(Token = "0x1700007B")]
	protected Button button
	{
		[Token(Token = "0x6000617")]
		[Address(RVA = "0xB23C90", Offset = "0xB23C90", VA = "0xB23C90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xB23CDC", Offset = "0xB23CDC", VA = "0xB23CDC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xB23DBC", Offset = "0xB23DBC", VA = "0xB23DBC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xB23E9C", Offset = "0xB23E9C", VA = "0xB23E9C", Slot = "4")]
	protected virtual void OnClick()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xB23F10", Offset = "0xB23F10", VA = "0xB23F10")]
	public ButtonHook()
	{
	}
}
[Token(Token = "0x2000171")]
public class FingerTipButtonClicker : MonoBehaviour
{
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool leftHand;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float clickCooldownTime;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SphereCollider fingerTipCollider;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float cdTank;

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1C15598", Offset = "0x1C15598", VA = "0x1C15598")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1C155B8", Offset = "0x1C155B8", VA = "0x1C155B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1C15748", Offset = "0x1C15748", VA = "0x1C15748")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1C15864", Offset = "0x1C15864", VA = "0x1C15864")]
	public FingerTipButtonClicker()
	{
	}
}
[Token(Token = "0x2000172")]
public class HandInteractionCollider : MonoBehaviour
{
	[Token(Token = "0x2000173")]
	public enum ActionOnCollide
	{
		[Token(Token = "0x40007B1")]
		hover,
		[Token(Token = "0x40007B2")]
		click
	}

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool leftHand;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public HandSection interactSection;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ActionOnCollide actionOnCollide;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OVRInput.Button inputToActivate;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float clickCooldownTime;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider interactCollider;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float cdTank;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIButton curHoverButton;

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x1C204A4", Offset = "0x1C204A4", VA = "0x1C204A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x1C204D4", Offset = "0x1C204D4", VA = "0x1C204D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1C2077C", Offset = "0x1C2077C", VA = "0x1C2077C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1C208F4", Offset = "0x1C208F4", VA = "0x1C208F4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1C209F0", Offset = "0x1C209F0", VA = "0x1C209F0")]
	public HandInteractionCollider()
	{
	}
}
[Token(Token = "0x2000174")]
public enum HandSection
{
	[Token(Token = "0x40007B4")]
	none,
	[Token(Token = "0x40007B5")]
	any,
	[Token(Token = "0x40007B6")]
	index,
	[Token(Token = "0x40007B7")]
	palm
}
[Token(Token = "0x2000175")]
public class PlayerUIFollow : MonoBehaviour
{
	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playerController;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerHead;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useHeadHeight;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool followHead;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float verticalOffset;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float positionFollowSpeed;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationFollowSpeed;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterController playerCharBody;

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x99F65C", Offset = "0x99F65C", VA = "0x99F65C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x99F6B8", Offset = "0x99F6B8", VA = "0x99F6B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x99F7EC", Offset = "0x99F7EC", VA = "0x99F7EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x99F8F8", Offset = "0x99F8F8", VA = "0x99F8F8")]
	public PlayerUIFollow()
	{
	}
}
[Token(Token = "0x2000176")]
public class UIButton : MonoBehaviour
{
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835DE0", Offset = "0x835DE0")]
	private sealed class <FinishClick>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIButton <>4__this;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000633")]
			[Address(RVA = "0x1BF94D8", Offset = "0x1BF94D8", VA = "0x1BF94D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0x1BF9520", Offset = "0x1BF9520", VA = "0x1BF9520", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x1BF93B4", Offset = "0x1BF93B4", VA = "0x1BF93B4")]
		[DebuggerHidden]
		public <FinishClick>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x1BF93E0", Offset = "0x1BF93E0", VA = "0x1BF93E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x1BF93E4", Offset = "0x1BF93E4", VA = "0x1BF93E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x1BF94E0", Offset = "0x1BF94E0", VA = "0x1BF94E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image buttonImage;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hovered;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text buttonText;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string defaultText;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool verifying;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83967C", Offset = "0x83967C")]
	public HandSection limitHandSection;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool mustVerify;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color baseColour;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color hoverColour;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color clickColour;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float coolDown;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float coolDownTank;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8396B4", Offset = "0x8396B4")]
	public string hoverSound;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string clickSound;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool vibrateOnClick;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8396EC", Offset = "0x8396EC")]
	public bool leftHandInteracting;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent onClick;

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xDAD598", Offset = "0xDAD598", VA = "0xDAD598")]
	private void Start()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xDAD690", Offset = "0xDAD690", VA = "0xDAD690")]
	private void Update()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xDAD6D0", Offset = "0xDAD6D0", VA = "0xDAD6D0")]
	public void Hover(bool hover)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xDAD72C", Offset = "0xDAD72C", VA = "0xDAD72C")]
	public void ClickButton()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xDAD824", Offset = "0xDAD824", VA = "0xDAD824")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83FC84", Offset = "0x83FC84")]
	private IEnumerator FinishClick()
	{
		return null;
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xDAD890", Offset = "0xDAD890", VA = "0xDAD890")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xDAD9A0", Offset = "0xDAD9A0", VA = "0xDAD9A0")]
	public UIButton()
	{
	}
}
[Token(Token = "0x2000178")]
public class UIPointer : MonoBehaviour
{
	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool leftHand;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839724", Offset = "0x839724")]
	public float minDistanceToPoint;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float raycastLength;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask UILayer;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIButton lastButtonTarget;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xDAFFAC", Offset = "0xDAFFAC", VA = "0xDAFFAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xDAFFB0", Offset = "0xDAFFB0", VA = "0xDAFFB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xDAFFB4", Offset = "0xDAFFB4", VA = "0xDAFFB4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xDAFFB8", Offset = "0xDAFFB8", VA = "0xDAFFB8")]
	private void UpdateLine()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xDB0408", Offset = "0xDB0408", VA = "0xDB0408")]
	private void ShowRay(bool show)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xDB0310", Offset = "0xDB0310", VA = "0xDB0310")]
	private RaycastHit CreateRaycast(float dist)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xDB0428", Offset = "0xDB0428", VA = "0xDB0428")]
	public UIPointer()
	{
	}
}
[Token(Token = "0x2000179")]
public static class UITextStrings
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, string> _strings;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string Confirm;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string Cancel;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string Dismiss;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string OK;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xDAD150", Offset = "0xDAD150", VA = "0xDAD150")]
	public static string Get(string key)
	{
		return null;
	}
}
[Token(Token = "0x200017A")]
public class CurvedLinePoint : MonoBehaviour
{
	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool showGizmo;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float gizmoSize;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Color gizmoColor;

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xBBCBF8", Offset = "0xBBCBF8", VA = "0xBBCBF8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xBBCC5C", Offset = "0xBBCC5C", VA = "0xBBCC5C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xBBCD50", Offset = "0xBBCD50", VA = "0xBBCD50")]
	public CurvedLinePoint()
	{
	}
}
[Token(Token = "0x200017B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x835DF0", Offset = "0x835DF0")]
public class CurvedLineRenderer : MonoBehaviour
{
	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lineSegmentSize;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lineWidth;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83978C", Offset = "0x83978C")]
	public bool showGizmos;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float gizmoSize;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color gizmoColor;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CurvedLinePoint[] linePoints;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] linePositions;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] linePositionsOld;

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xBBCD2C", Offset = "0xBBCD2C", VA = "0xBBCD2C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xBBCDBC", Offset = "0xBBCDBC", VA = "0xBBCDBC")]
	private void GetPoints()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xBBCECC", Offset = "0xBBCECC", VA = "0xBBCECC")]
	private void SetPointsToLine()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xBBD054", Offset = "0xBBD054", VA = "0xBBD054")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xBBD078", Offset = "0xBBD078", VA = "0xBBD078")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xBBD110", Offset = "0xBBD110", VA = "0xBBD110")]
	public CurvedLineRenderer()
	{
	}
}
[Token(Token = "0x200017C")]
public class LineSmoother : MonoBehaviour
{
	[Token(Token = "0x6000648")]
	[Address(RVA = "0xA1C024", Offset = "0xA1C024", VA = "0xA1C024")]
	public static Vector3[] SmoothLine(Vector3[] inputPoints, float segmentSize)
	{
		return null;
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xA1C518", Offset = "0xA1C518", VA = "0xA1C518")]
	public LineSmoother()
	{
	}
}
[Token(Token = "0x200017D")]
public class ErrorDisplay : MonoBehaviour
{
	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas canvas;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text errorText;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button dismissButton;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isDevBuild;

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1C15054", Offset = "0x1C15054", VA = "0x1C15054")]
	private void Start()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x1C153C8", Offset = "0x1C153C8", VA = "0x1C153C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x1C15460", Offset = "0x1C15460", VA = "0x1C15460")]
	private void Update()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1C152E0", Offset = "0x1C152E0", VA = "0x1C152E0")]
	private void UpdateErrorDisplay()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1C15470", Offset = "0x1C15470", VA = "0x1C15470")]
	private void LogCallback(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1C15534", Offset = "0x1C15534", VA = "0x1C15534")]
	public ErrorDisplay()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x1C1553C", Offset = "0x1C1553C", VA = "0x1C1553C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FD34", Offset = "0x83FD34")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x200017E")]
public class LightDominantDirection : MonoBehaviour
{
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 directionOffset;

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xA1BF50", Offset = "0xA1BF50", VA = "0xA1BF50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xA1BF54", Offset = "0xA1BF54", VA = "0xA1BF54")]
	private void SetDirection()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xA1C000", Offset = "0xA1C000", VA = "0xA1C000")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xA1C004", Offset = "0xA1C004", VA = "0xA1C004")]
	public LightDominantDirection()
	{
	}
}
[Token(Token = "0x200017F")]
public class PlanarReflection : MonoBehaviour
{
	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera refCamera;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] m_ReflectionPlanes;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_ReflectionMaterial;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float renderDistance;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask cullingMask;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8397C4", Offset = "0x8397C4")]
	public float renderScale;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8397E0", Offset = "0x8397E0")]
	public float renderFPS;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera m_ReflectionCamera;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture m_RenderTarget;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 reflectedPosition;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x99ABA8", Offset = "0x99ABA8", VA = "0x99ABA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x99AE30", Offset = "0x99AE30", VA = "0x99AE30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x99AEEC", Offset = "0x99AEEC", VA = "0x99AEEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x99B234", Offset = "0x99B234", VA = "0x99B234")]
	private void RenderPipelineManager_endCameraRendering(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x99AF74", Offset = "0x99AF74", VA = "0x99AF74")]
	private void RenderReflection()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x99B254", Offset = "0x99B254", VA = "0x99B254")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x99B26C", Offset = "0x99B26C", VA = "0x99B26C")]
	public PlanarReflection()
	{
	}
}
namespace Assets._Scripts.Utilities
{
	[Token(Token = "0x2000180")]
	public class LockToTransform : MonoBehaviour
	{
		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform mTransform;

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xA1CA9C", Offset = "0xA1CA9C", VA = "0xA1CA9C")]
		private void Start()
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xA1CAC4", Offset = "0xA1CAC4", VA = "0xA1CAC4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xA1CBF0", Offset = "0xA1CBF0", VA = "0xA1CBF0")]
		public LockToTransform()
		{
		}
	}
}
namespace RubeGoldberg
{
	[Token(Token = "0x2000181")]
	public enum InputHand
	{
		[Token(Token = "0x40007FF")]
		None = -1,
		[Token(Token = "0x4000800")]
		Left,
		[Token(Token = "0x4000801")]
		Right
	}
	[Token(Token = "0x2000182")]
	[Flags]
	public enum Direction
	{
		[Token(Token = "0x4000803")]
		None = 0,
		[Token(Token = "0x4000804")]
		Up = 1,
		[Token(Token = "0x4000805")]
		Down = 2,
		[Token(Token = "0x4000806")]
		Left = 4,
		[Token(Token = "0x4000807")]
		Right = 8
	}
	[Token(Token = "0x2000183")]
	public static class GameConstants
	{
		[Token(Token = "0x4000808")]
		public const float DEFAULT_PLAYER_HEIGHT = 1.9f;

		[Token(Token = "0x4000809")]
		public const float PLAYER_HEIGHT_SCALE_MIN = 0.9f;

		[Token(Token = "0x400080A")]
		public const float PLAYER_HEIGHT_SCALE_MAX = 1.25f;

		[Token(Token = "0x400080B")]
		public const float INCHES_PER_METER = 39.37f;

		[Token(Token = "0x400080C")]
		public const float INCHES_PER_FOOT = 12f;

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x1C1C4A8", Offset = "0x1C1C4A8", VA = "0x1C1C4A8")]
		public static string GetOrdinalSuffix(int number)
		{
			return null;
		}
	}
	[Token(Token = "0x2000184")]
	public class InputManager : MonoBehaviour
	{
		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8397FC", Offset = "0x8397FC")]
		private static InputManager <Instance>k__BackingField;

		[Token(Token = "0x1700007E")]
		public static InputManager Instance
		{
			[Token(Token = "0x6000660")]
			[Address(RVA = "0xA18454", Offset = "0xA18454", VA = "0xA18454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FD44", Offset = "0x83FD44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000661")]
			[Address(RVA = "0xA184A0", Offset = "0xA184A0", VA = "0xA184A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FD54", Offset = "0x83FD54")]
			private set
			{
			}
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xA184F0", Offset = "0xA184F0", VA = "0xA184F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xA18540", Offset = "0xA18540", VA = "0xA18540")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xA185D8", Offset = "0xA185D8", VA = "0xA185D8")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class PlaceableObject : MonoBehaviour
	{
		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PieceTypes _pieceType;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _extraForceOnCollision;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minVelForExtraForce;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _pushVel;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _pushAngularVel;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _attachPoint;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _placedPos;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion _placedRot;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody _myRB;

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x99A460", Offset = "0x99A460", VA = "0x99A460")]
		private void Start()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x99A4B4", Offset = "0x99A4B4", VA = "0x99A4B4")]
		public void PlaceObject(Vector3 pos)
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x99A514", Offset = "0x99A514", VA = "0x99A514")]
		public void TurnObject(Quaternion rot)
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x99A57C", Offset = "0x99A57C", VA = "0x99A57C")]
		public void ResetObject()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x99A670", Offset = "0x99A670", VA = "0x99A670")]
		public void PushObject(Vector3 vel, Vector3 angularVel)
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x99A75C", Offset = "0x99A75C", VA = "0x99A75C")]
		public Transform GetAttachPoint()
		{
			return null;
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x99A764", Offset = "0x99A764", VA = "0x99A764")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x99AB58", Offset = "0x99AB58", VA = "0x99AB58")]
		public PlaceableObject()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public enum PlayState
	{
		[Token(Token = "0x4000818")]
		Edit,
		[Token(Token = "0x4000819")]
		Run,
		[Token(Token = "0x400081A")]
		ResetPieces,
		[Token(Token = "0x400081B")]
		Clear
	}
	[Token(Token = "0x2000187")]
	public enum PieceTypes
	{
		[Token(Token = "0x400081D")]
		Domino,
		[Token(Token = "0x400081E")]
		Ball,
		[Token(Token = "0x400081F")]
		Rail,
		[Token(Token = "0x4000820")]
		Portal
	}
	[Token(Token = "0x2000188")]
	public class PlayStateFSM : MonoMachine<PlayState>
	{
		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private PlaceableObject _dominoPrefab;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject _dominoTarget;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float _dominoTargetYOffset;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float _distanceBetweenDominoes;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private PlaceableObject _ballPrefab;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject _ballTarget;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private float _ballTargetYOffset;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private PlaceableObject _railPrefab;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject _railTarget;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float _railTargetOffset;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float _railBaseScale;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private PlaceableObject _portalPrefab;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject _portalTarget;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float _portalTargetOffset;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Material _safePlaceMat;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Material _unsafePlaceMat;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float _pullTriggerThreshold;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private float _holdPlaceTriggerDelay;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject _removeTarget;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject _grabTarget;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private float _manipulatePieceRange;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Transform _leftGrip;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Transform _rightGrip;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool _iPlacePiece;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float _lastPlaceTrigger;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool _triggerHeld;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		private bool _triggerHeldLastFrame;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private PieceTypes pieceToPlace;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool _nextPieceType;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		private bool _prevPieceType;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float _lastChangePiece;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float _changePieceDelay;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool _iUndoLastPiece;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
		private bool _readyToUndo;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x156")]
		private bool _iRemovePiece;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x157")]
		private bool _iGrabPiece;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int _grabbedPieceIndex;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool _iResetPieces;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
		private bool _iClear;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15E")]
		private bool _iRun;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float _runFinishedTime;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Quaternion _currentRot;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float _yRotDelta;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float _xRotDelta;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private List<PlaceableObject> _placedObjects;

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x99B5D4", Offset = "0x99B5D4", VA = "0x99B5D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x99B5D8", Offset = "0x99B5D8", VA = "0x99B5D8", Slot = "15")]
		public override void Refresh(float delta)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x99B634", Offset = "0x99B634", VA = "0x99B634", Slot = "25")]
		protected override void ClearFramewiseInputs()
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x99B6A4", Offset = "0x99B6A4", VA = "0x99B6A4", Slot = "22")]
		protected override void RefreshInputs(float delta)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x99B96C", Offset = "0x99B96C", VA = "0x99B96C", Slot = "29")]
		protected override void EnterState()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x99B9B8", Offset = "0x99B9B8", VA = "0x99B9B8", Slot = "27")]
		protected override bool StateTransition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x99BA80", Offset = "0x99BA80", VA = "0x99BA80", Slot = "9")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x99BA88", Offset = "0x99BA88", VA = "0x99BA88")]
		private void Refresh_Edit(float dT)
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x99D224", Offset = "0x99D224", VA = "0x99D224")]
		private void Exit_Edit()
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x99D328", Offset = "0x99D328", VA = "0x99D328")]
		private void Enter_Run()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x99D590", Offset = "0x99D590", VA = "0x99D590")]
		private void Refresh_Run(float dT)
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x99D788", Offset = "0x99D788", VA = "0x99D788")]
		private void Enter_ResetPieces()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x99D89C", Offset = "0x99D89C", VA = "0x99D89C")]
		private void Enter_Clear()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x99D050", Offset = "0x99D050", VA = "0x99D050")]
		private void Lineup_Dominoes()
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x99DA1C", Offset = "0x99DA1C", VA = "0x99DA1C")]
		public PlayStateFSM()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public static class PlayerInput
	{
		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ControllerInput RightController;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ControllerInput LeftController;

		[Token(Token = "0x1700007F")]
		public static Transform HeadTransform
		{
			[Token(Token = "0x600067C")]
			[Address(RVA = "0x99DEC4", Offset = "0x99DEC4", VA = "0x99DEC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		public static bool HeadsetActive
		{
			[Token(Token = "0x600067D")]
			[Address(RVA = "0x99DEE8", Offset = "0x99DEE8", VA = "0x99DEE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x99DFC4", Offset = "0x99DFC4", VA = "0x99DFC4")]
		public static Vector3 GetRawHeadsetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x99E058", Offset = "0x99E058", VA = "0x99E058")]
		public static void SetPlayerHeight(float measuredHeadHeight, bool forced = false)
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x99E0E4", Offset = "0x99E0E4", VA = "0x99E0E4")]
		public static void SetPlayerScale(float scale)
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x99E328", Offset = "0x99E328", VA = "0x99E328")]
		public static float GetAdjustedHeight(float height)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200018A")]
	public class ControllerInput
	{
		[StructLayout(3)]
		[Token(Token = "0x200018B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835E60", Offset = "0x835E60")]
		private struct <>c__DisplayClass37_0
		{
			[Token(Token = "0x4000852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Direction direction;

			[Token(Token = "0x4000853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<OVRInput.Button> buttons;
		}

		[Token(Token = "0x200018C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835E70", Offset = "0x835E70")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x200018D")]
			private sealed class <<Vibrate>g__StopAfterSeconds|0>d : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4000856")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4000857")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4000858")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass41_0 <>4__this;

				[Token(Token = "0x1700008F")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60006A3")]
					[Address(RVA = "0x1C5305C", Offset = "0x1C5305C", VA = "0x1C5305C", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000090")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60006A5")]
					[Address(RVA = "0x1C530A4", Offset = "0x1C530A4", VA = "0x1C530A4", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60006A0")]
				[Address(RVA = "0x1C52F5C", Offset = "0x1C52F5C", VA = "0x1C52F5C")]
				[DebuggerHidden]
				public <<Vibrate>g__StopAfterSeconds|0>d(int <>1__state)
				{
				}

				[Token(Token = "0x60006A1")]
				[Address(RVA = "0x1C52F88", Offset = "0x1C52F88", VA = "0x1C52F88", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60006A2")]
				[Address(RVA = "0x1C52F8C", Offset = "0x1C52F8C", VA = "0x1C52F8C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60006A4")]
				[Address(RVA = "0x1C53064", Offset = "0x1C53064", VA = "0x1C53064", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4000854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float durationSeconds;

			[Token(Token = "0x4000855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ControllerInput <>4__this;

			[Token(Token = "0x600069E")]
			[Address(RVA = "0x1BEA8D0", Offset = "0x1BEA8D0", VA = "0x1BEA8D0")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x600069F")]
			[Address(RVA = "0x1BEA8D8", Offset = "0x1BEA8D8", VA = "0x1BEA8D8")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83FD74", Offset = "0x83FD74")]
			internal IEnumerator <Vibrate>g__StopAfterSeconds|0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private OVRInput.Controller _controller;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine _vibrationCoroutine;

		[Token(Token = "0x17000081")]
		public float TriggerState
		{
			[Token(Token = "0x6000685")]
			[Address(RVA = "0xBB84A4", Offset = "0xBB84A4", VA = "0xBB84A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000082")]
		public bool TriggerUp
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0xBB8510", Offset = "0xBB8510", VA = "0xBB8510")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000083")]
		public float GripTriggerState
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0xBB85A0", Offset = "0xBB85A0", VA = "0xBB85A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000084")]
		public bool GripTriggerUp
		{
			[Token(Token = "0x6000688")]
			[Address(RVA = "0xBB860C", Offset = "0xBB860C", VA = "0xBB860C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		public bool ButtonState
		{
			[Token(Token = "0x6000689")]
			[Address(RVA = "0xBB869C", Offset = "0xBB869C", VA = "0xBB869C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000086")]
		public bool ButtonUp
		{
			[Token(Token = "0x600068A")]
			[Address(RVA = "0xBB8738", Offset = "0xBB8738", VA = "0xBB8738")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000087")]
		public bool AltButtonState
		{
			[Token(Token = "0x600068B")]
			[Address(RVA = "0xBB87D4", Offset = "0xBB87D4", VA = "0xBB87D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000088")]
		public bool AltButtonUp
		{
			[Token(Token = "0x600068C")]
			[Address(RVA = "0xBB8870", Offset = "0xBB8870", VA = "0xBB8870")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000089")]
		public bool ThumbstickButtonUp
		{
			[Token(Token = "0x600068D")]
			[Address(RVA = "0xBB890C", Offset = "0xBB890C", VA = "0xBB890C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008A")]
		public bool MenuButtonUp
		{
			[Token(Token = "0x600068E")]
			[Address(RVA = "0xBB8978", Offset = "0xBB8978", VA = "0xBB8978")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008B")]
		public Vector3 LocalControllerVelocity
		{
			[Token(Token = "0x600068F")]
			[Address(RVA = "0xBB89E4", Offset = "0xBB89E4", VA = "0xBB89E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700008C")]
		public Vector3 LocalControllerPosition
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0xBB8A4C", Offset = "0xBB8A4C", VA = "0xBB8A4C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700008D")]
		public Quaternion LocalControllerRotation
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0xBB8AB4", Offset = "0xBB8AB4", VA = "0xBB8AB4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700008E")]
		public Vector2 ThumbstickAxisState
		{
			[Token(Token = "0x6000695")]
			[Address(RVA = "0xBB8D70", Offset = "0xBB8D70", VA = "0xBB8D70")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xBB83C4", Offset = "0xBB83C4", VA = "0xBB83C4")]
		public ControllerInput(OVRInput.Controller controller)
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xBB83F0", Offset = "0xBB83F0", VA = "0xBB83F0")]
		public bool IsConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xBB8B1C", Offset = "0xBB8B1C", VA = "0xBB8B1C")]
		public Vector3 GetWorldVelocity(Transform playerTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xBB8CC4", Offset = "0xBB8CC4", VA = "0xBB8CC4")]
		public Vector3 GetWorldPosition(Transform playerTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xBB8CF4", Offset = "0xBB8CF4", VA = "0xBB8CF4")]
		public Quaternion GetWorldRotation(Transform playerTransform)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xBB8DDC", Offset = "0xBB8DDC", VA = "0xBB8DDC")]
		public bool GetThumbstickState(Direction direction)
		{
			return default(bool);
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xBB9028", Offset = "0xBB9028", VA = "0xBB9028")]
		public bool GetThumbstickUp(Direction direction)
		{
			return default(bool);
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xBB91B0", Offset = "0xBB91B0", VA = "0xBB91B0")]
		public bool GetThumbstickDown(Direction direction)
		{
			return default(bool);
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xBB8F64", Offset = "0xBB8F64", VA = "0xBB8F64")]
		private List<OVRInput.Button> GetThumbstickButtonsForDirection(Direction direction)
		{
			return null;
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xBB93BC", Offset = "0xBB93BC", VA = "0xBB93BC")]
		public void StartVibration(float strength)
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xBB9438", Offset = "0xBB9438", VA = "0xBB9438")]
		public void StopVibration()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xBB94A8", Offset = "0xBB94A8", VA = "0xBB94A8")]
		public void Vibrate(float strength, float durationSeconds)
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xBB9338", Offset = "0xBB9338", VA = "0xBB9338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FD64", Offset = "0x83FD64")]
		internal static void <GetThumbstickButtonsForDirection>g__AddDirection|37_0(Direction singleDirection, OVRInput.Button mappedButton, ref <>c__DisplayClass37_0 P_2)
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class Portal : MonoBehaviour
	{
		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlaceableObject _portalOut;

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x9A040C", Offset = "0x9A040C", VA = "0x9A040C")]
		private void Start()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x9A0414", Offset = "0x9A0414", VA = "0x9A0414")]
		public void SetPortalOut(PlaceableObject outPortal)
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x9A041C", Offset = "0x9A041C", VA = "0x9A041C")]
		public PlaceableObject GetPortalOut()
		{
			return null;
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x9A0424", Offset = "0x9A0424", VA = "0x9A0424")]
		public Portal()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public interface IRubeAnchorSession
	{
		[Token(Token = "0x17000091")]
		bool enabled
		{
			[Token(Token = "0x60006AA")]
			get;
			[Token(Token = "0x60006AB")]
			set;
		}

		[Token(Token = "0x17000092")]
		bool isActiveAndEnabled
		{
			[Token(Token = "0x60006AC")]
			get;
		}

		[Token(Token = "0x17000093")]
		bool IsQueryComplete
		{
			[Token(Token = "0x60006B2")]
			get;
			[Token(Token = "0x60006B3")]
			set;
		}

		[Token(Token = "0x17000094")]
		bool LoadError
		{
			[Token(Token = "0x60006B4")]
			get;
			[Token(Token = "0x60006B5")]
			set;
		}

		[Token(Token = "0x60006AD")]
		void Reset();

		[Token(Token = "0x60006AE")]
		bool TryGetUuidFromHandle(ulong handle, out string uuid);

		[Token(Token = "0x60006AF")]
		bool TryGetHandleFromUuid(string uuid, out ulong handle);

		[Token(Token = "0x60006B0")]
		bool IsAnchorEnabled(ulong handle);

		[Token(Token = "0x60006B1")]
		void QueryAnchorsByUuid(List<string> uuidStrings);

		[Token(Token = "0x60006B6")]
		bool MoveTranformToAnchorPose(Transform t, ref ulong anchorHandle);

		[Token(Token = "0x60006B7")]
		ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

		[Token(Token = "0x60006B8")]
		void SaveAnchor(ulong anchorHandle);
	}
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x835E80", Offset = "0x835E80")]
	public class PassthroughLayerControl : MonoBehaviour
	{
		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRPassthroughLayer _passthrough;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PassthroughThemeDefinition> Themes;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PassthroughThemeDefinition _activeTheme;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _contrast;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _brightness;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _posterize;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _colorMap;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> _passThroughSurfaces;

		[Token(Token = "0x17000095")]
		private OVRPassthroughLayer passthrough
		{
			[Token(Token = "0x60006B9")]
			[Address(RVA = "0x997BC8", Offset = "0x997BC8", VA = "0x997BC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x997C68", Offset = "0x997C68", VA = "0x997C68")]
		public float GetContrast()
		{
			return default(float);
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x997C70", Offset = "0x997C70", VA = "0x997C70")]
		public float GetBrightness()
		{
			return default(float);
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x997C78", Offset = "0x997C78", VA = "0x997C78")]
		public float GetPosterize()
		{
			return default(float);
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x997C80", Offset = "0x997C80", VA = "0x997C80")]
		public float GetEdgeAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x997CA0", Offset = "0x997CA0", VA = "0x997CA0")]
		public string GetActiveThemeName()
		{
			return null;
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x997CF8", Offset = "0x997CF8", VA = "0x997CF8")]
		public void SetEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x997D6C", Offset = "0x997D6C", VA = "0x997D6C")]
		public void SetDefaultTheme()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x997EF0", Offset = "0x997EF0", VA = "0x997EF0")]
		public void SetOpacity(float opacity)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x997F20", Offset = "0x997F20", VA = "0x997F20")]
		public void SetBrightness(float brightness)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x997F28", Offset = "0x997F28", VA = "0x997F28")]
		public void SetContrast(float contrast)
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x997F30", Offset = "0x997F30", VA = "0x997F30")]
		public void SetPosterize(float posterize)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x997F38", Offset = "0x997F38", VA = "0x997F38")]
		public void SetEdgeAlpha(float edgeAlpha)
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x997FF4", Offset = "0x997FF4", VA = "0x997FF4")]
		public void SetTheme(string theme)
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x9981AC", Offset = "0x9981AC", VA = "0x9981AC")]
		public void AddPassthroughSurface(GameObject passthroughSurface)
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x9982A0", Offset = "0x9982A0", VA = "0x9982A0")]
		public void RemovePassthroughSurface(GameObject passthroughSurface)
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x99839C", Offset = "0x99839C", VA = "0x99839C")]
		public void ClearPassthroughSurfaces()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x997DE4", Offset = "0x997DE4", VA = "0x997DE4")]
		private void ApplyTheme(PassthroughThemeDefinition theme)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x997D30", Offset = "0x997D30", VA = "0x997D30")]
		private void ApplySettings()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x998554", Offset = "0x998554", VA = "0x998554")]
		public PassthroughLayerControl()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000191")]
	public class PassthroughThemeDefinition
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient ColorMap;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color EdgeColor;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Brightness;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Contrast;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Posterize;

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x99962C", Offset = "0x99962C", VA = "0x99962C")]
		public PassthroughThemeDefinition()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class RubeAnchor : MonoBehaviour
	{
		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject VisibilityRoot;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CaptureRadius;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong _anchorHandle;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<SpatialAnchorConnection> _connections;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _visible;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _highlighted;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator _animator;

		[Token(Token = "0x17000096")]
		public ulong Handle
		{
			[Token(Token = "0x60006CE")]
			[Address(RVA = "0x1C03620", Offset = "0x1C03620", VA = "0x1C03620")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x1C03628", Offset = "0x1C03628", VA = "0x1C03628")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x1C0367C", Offset = "0x1C0367C", VA = "0x1C0367C")]
		public void SetAnchorHandle(ulong handle)
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1C03684", Offset = "0x1C03684", VA = "0x1C03684")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x1C036A4", Offset = "0x1C036A4", VA = "0x1C036A4")]
		public void AddConnection(SpatialAnchorConnection connection)
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x1C03730", Offset = "0x1C03730", VA = "0x1C03730")]
		public void RemoveConnection(SpatialAnchorConnection connection)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x1C03794", Offset = "0x1C03794", VA = "0x1C03794")]
		private void Update()
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x1C038E4", Offset = "0x1C038E4", VA = "0x1C038E4")]
		private void SetHighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1C03950", Offset = "0x1C03950", VA = "0x1C03950")]
		public RubeAnchor()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class RubeAnchorSession : MonoBehaviour, IRubeAnchorSession
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<ulong, ulong> locateAnchorRequest;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<ulong, ulong> saveAnchorRequest;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<ulong, string> HandleToUuid;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, ulong> UUidToHandle;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<ulong> enabledAnchors;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8399CC", Offset = "0x8399CC")]
		private bool <IsQueryComplete>k__BackingField;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8399DC", Offset = "0x8399DC")]
		private bool <LoadError>k__BackingField;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ulong _anchorQueryId;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ulong kInvalidHandle;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Quaternion RotateY180;

		[Token(Token = "0x17000097")]
		public bool IsQueryComplete
		{
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0x1C039D0", Offset = "0x1C039D0", VA = "0x1C039D0", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FE24", Offset = "0x83FE24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006D8")]
			[Address(RVA = "0x1C039D8", Offset = "0x1C039D8", VA = "0x1C039D8", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FE34", Offset = "0x83FE34")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public bool LoadError
		{
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0x1C039E4", Offset = "0x1C039E4", VA = "0x1C039E4", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FE44", Offset = "0x83FE44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x1C039EC", Offset = "0x1C039EC", VA = "0x1C039EC", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FE54", Offset = "0x83FE54")]
			set
			{
			}
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1C039F8", Offset = "0x1C039F8", VA = "0x1C039F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x1C03C90", Offset = "0x1C03C90", VA = "0x1C03C90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1C03F28", Offset = "0x1C03F28", VA = "0x1C03F28", Slot = "7")]
		public void Reset()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x1C0415C", Offset = "0x1C0415C", VA = "0x1C0415C", Slot = "8")]
		public bool TryGetUuidFromHandle(ulong handle, out string uuid)
		{
			return default(bool);
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1C041C8", Offset = "0x1C041C8", VA = "0x1C041C8", Slot = "9")]
		public bool TryGetHandleFromUuid(string uuid, out ulong handle)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1C04234", Offset = "0x1C04234", VA = "0x1C04234", Slot = "10")]
		public bool IsAnchorEnabled(ulong handle)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1C04298", Offset = "0x1C04298", VA = "0x1C04298")]
		private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRSpace space, Guid uuid, OVRPlugin.SpaceComponentType componentType, bool enabled)
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x1C046A4", Offset = "0x1C046A4", VA = "0x1C046A4")]
		private void SpatialAnchorSaved(ulong requestId, OVRSpace space, bool result, Guid uuid)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x1C04A5C", Offset = "0x1C04A5C", VA = "0x1C04A5C")]
		private void SpatialEntityStorageErase(ulong requestId, bool result, Guid uuid, OVRPlugin.SpaceStorageLocation location)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1C04D54", Offset = "0x1C04D54", VA = "0x1C04D54")]
		private void SpatialEntityQueryResults(ulong requestId)
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1C058C4", Offset = "0x1C058C4", VA = "0x1C058C4")]
		private void SpatialEntityQueryComplete(ulong requestId, bool result)
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x1C04A34", Offset = "0x1C04A34", VA = "0x1C04A34")]
		private string GetUuidString(Guid uuid)
		{
			return null;
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x1C05A14", Offset = "0x1C05A14", VA = "0x1C05A14")]
		private void ForgetHandle(ulong anchorHandle)
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x1C05178", Offset = "0x1C05178", VA = "0x1C05178")]
		private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpaceComponentType type)
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x1C05B38", Offset = "0x1C05B38", VA = "0x1C05B38", Slot = "17")]
		public ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
		{
			return default(ulong);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1C05D48", Offset = "0x1C05D48", VA = "0x1C05D48", Slot = "16")]
		public bool MoveTranformToAnchorPose(Transform t, ref ulong anchorHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x1C05F0C", Offset = "0x1C05F0C", VA = "0x1C05F0C")]
		public void DestroyAnchor(ulong anchorHandle)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x1C060D4", Offset = "0x1C060D4", VA = "0x1C060D4")]
		public void EraseAnchor(ulong anchorHandle)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x1C062B0", Offset = "0x1C062B0", VA = "0x1C062B0", Slot = "11")]
		public void QueryAnchorsByUuid(List<string> uuidStrings)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x1C06570", Offset = "0x1C06570", VA = "0x1C06570")]
		public void QueryAllLocalAnchors()
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x1C066B4", Offset = "0x1C066B4", VA = "0x1C066B4", Slot = "18")]
		public void SaveAnchor(ulong anchorHandle)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x1C04614", Offset = "0x1C04614", VA = "0x1C04614")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x1C06844", Offset = "0x1C06844", VA = "0x1C06844")]
		public RubeAnchorSession()
		{
		}

		[SpecialName]
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x1C06A0C", Offset = "0x1C06A0C", VA = "0x1C06A0C", Slot = "4")]
		private bool RubeGoldberg.IRubeAnchorSession.get_enabled()
		{
			return default(bool);
		}

		[SpecialName]
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x1C06A14", Offset = "0x1C06A14", VA = "0x1C06A14", Slot = "5")]
		private void RubeGoldberg.IRubeAnchorSession.set_enabled(bool value)
		{
		}

		[SpecialName]
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x1C06A20", Offset = "0x1C06A20", VA = "0x1C06A20", Slot = "6")]
		private bool RubeGoldberg.IRubeAnchorSession.get_isActiveAndEnabled()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000194")]
	public class RubeAnchorSessionFake : MonoBehaviour, IRubeAnchorSession
	{
		[Token(Token = "0x2000195")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835EE0", Offset = "0x835EE0")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x400087E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> uuidStrings;

			[Token(Token = "0x400087F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RubeAnchorSessionFake <>4__this;

			[Token(Token = "0x600070B")]
			[Address(RVA = "0x1BF4B40", Offset = "0x1BF4B40", VA = "0x1BF4B40")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600070C")]
			[Address(RVA = "0x1BF4B48", Offset = "0x1BF4B48", VA = "0x1BF4B48")]
			internal void <QueryAnchorsByUuid>b__0()
			{
			}
		}

		[Token(Token = "0x2000196")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835EF0", Offset = "0x835EF0")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4000880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RubeAnchorSessionFake <>4__this;

			[Token(Token = "0x4000881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong anchorHandle;

			[Token(Token = "0x600070D")]
			[Address(RVA = "0x1BF4E84", Offset = "0x1BF4E84", VA = "0x1BF4E84")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600070E")]
			[Address(RVA = "0x1BF4E8C", Offset = "0x1BF4E8C", VA = "0x1BF4E8C")]
			internal void <SaveAnchor>b__0()
			{
			}
		}

		[Token(Token = "0x2000197")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835F00", Offset = "0x835F00")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x2000198")]
			private sealed class <<DoAfterDelay>g__DelayedActionCoroutine|0>d : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4000884")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4000885")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4000886")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass23_0 <>4__this;

				[Token(Token = "0x1700009B")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6000714")]
					[Address(RVA = "0x1C53198", Offset = "0x1C53198", VA = "0x1C53198", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700009C")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6000716")]
					[Address(RVA = "0x1C531E0", Offset = "0x1C531E0", VA = "0x1C531E0", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6000711")]
				[Address(RVA = "0x1C530AC", Offset = "0x1C530AC", VA = "0x1C530AC")]
				[DebuggerHidden]
				public <<DoAfterDelay>g__DelayedActionCoroutine|0>d(int <>1__state)
				{
				}

				[Token(Token = "0x6000712")]
				[Address(RVA = "0x1C530D8", Offset = "0x1C530D8", VA = "0x1C530D8", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6000713")]
				[Address(RVA = "0x1C530DC", Offset = "0x1C530DC", VA = "0x1C530DC", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6000715")]
				[Address(RVA = "0x1C531A0", Offset = "0x1C531A0", VA = "0x1C531A0", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4000882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float delay;

			[Token(Token = "0x4000883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action action;

			[Token(Token = "0x600070F")]
			[Address(RVA = "0x1BF505C", Offset = "0x1BF505C", VA = "0x1BF505C")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6000710")]
			[Address(RVA = "0x1BF5064", Offset = "0x1BF5064", VA = "0x1BF5064")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83FEA4", Offset = "0x83FEA4")]
			internal IEnumerator <DoAfterDelay>g__DelayedActionCoroutine|0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<ulong, string> HandleToUuid;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, ulong> UUidToHandle;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<ulong, Pose> _fixedAnchorPoses;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8399EC", Offset = "0x8399EC")]
		private bool <IsQueryComplete>k__BackingField;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8399FC", Offset = "0x8399FC")]
		private bool <LoadError>k__BackingField;

		[Token(Token = "0x17000099")]
		public bool IsQueryComplete
		{
			[Token(Token = "0x60006F6")]
			[Address(RVA = "0x1C06A28", Offset = "0x1C06A28", VA = "0x1C06A28", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FE64", Offset = "0x83FE64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006F7")]
			[Address(RVA = "0x1C06A30", Offset = "0x1C06A30", VA = "0x1C06A30", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FE74", Offset = "0x83FE74")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public bool LoadError
		{
			[Token(Token = "0x60006F8")]
			[Address(RVA = "0x1C06A3C", Offset = "0x1C06A3C", VA = "0x1C06A3C", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FE84", Offset = "0x83FE84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006F9")]
			[Address(RVA = "0x1C06A44", Offset = "0x1C06A44", VA = "0x1C06A44", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83FE94", Offset = "0x83FE94")]
			set
			{
			}
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x1C06A50", Offset = "0x1C06A50", VA = "0x1C06A50", Slot = "8")]
		public bool TryGetUuidFromHandle(ulong handle, out string uuid)
		{
			return default(bool);
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x1C06ABC", Offset = "0x1C06ABC", VA = "0x1C06ABC", Slot = "9")]
		public bool TryGetHandleFromUuid(string uuid, out ulong handle)
		{
			return default(bool);
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x1C06B28", Offset = "0x1C06B28", VA = "0x1C06B28", Slot = "10")]
		public bool IsAnchorEnabled(ulong handle)
		{
			return default(bool);
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x1C06B8C", Offset = "0x1C06B8C", VA = "0x1C06B8C", Slot = "7")]
		public void Reset()
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x1C06C3C", Offset = "0x1C06C3C", VA = "0x1C06C3C", Slot = "11")]
		public void QueryAnchorsByUuid(List<string> uuidStrings)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x1C06D94", Offset = "0x1C06D94", VA = "0x1C06D94", Slot = "16")]
		public bool MoveTranformToAnchorPose(Transform t, ref ulong anchorHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x1C06E8C", Offset = "0x1C06E8C", VA = "0x1C06E8C", Slot = "17")]
		public ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x1C06FEC", Offset = "0x1C06FEC", VA = "0x1C06FEC", Slot = "18")]
		public void SaveAnchor(ulong anchorHandle)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1C070AC", Offset = "0x1C070AC", VA = "0x1C070AC")]
		private static string PlayerPrefsKey(string uuid)
		{
			return null;
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x1C070FC", Offset = "0x1C070FC", VA = "0x1C070FC")]
		private static string WritePose(Pose pose)
		{
			return null;
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1C0741C", Offset = "0x1C0741C", VA = "0x1C0741C")]
		private static Pose ReadPose(string str)
		{
			return default(Pose);
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x1C06FB8", Offset = "0x1C06FB8", VA = "0x1C06FB8")]
		private static ulong NewHandle()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x1C06CFC", Offset = "0x1C06CFC", VA = "0x1C06CFC")]
		private void DoAfterDelay(float delay, Action action)
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x1C07680", Offset = "0x1C07680", VA = "0x1C07680")]
		public RubeAnchorSessionFake()
		{
		}

		[SpecialName]
		[Token(Token = "0x6000708")]
		[Address(RVA = "0x1C07778", Offset = "0x1C07778", VA = "0x1C07778", Slot = "4")]
		private bool RubeGoldberg.IRubeAnchorSession.get_enabled()
		{
			return default(bool);
		}

		[SpecialName]
		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1C07780", Offset = "0x1C07780", VA = "0x1C07780", Slot = "5")]
		private void RubeGoldberg.IRubeAnchorSession.set_enabled(bool value)
		{
		}

		[SpecialName]
		[Token(Token = "0x600070A")]
		[Address(RVA = "0x1C0778C", Offset = "0x1C0778C", VA = "0x1C0778C", Slot = "6")]
		private bool RubeGoldberg.IRubeAnchorSession.get_isActiveAndEnabled()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000199")]
	public class RubePassthroughSurface : MonoBehaviour
	{
		[Token(Token = "0x200019A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835F10", Offset = "0x835F10")]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RubePassthroughSurface <>4__this;

			[Token(Token = "0x1700009D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600071D")]
				[Address(RVA = "0x1BF6F30", Offset = "0x1BF6F30", VA = "0x1BF6F30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600071F")]
				[Address(RVA = "0x1BF6F78", Offset = "0x1BF6F78", VA = "0x1BF6F78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600071A")]
			[Address(RVA = "0x1BF6D00", Offset = "0x1BF6D00", VA = "0x1BF6D00")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600071B")]
			[Address(RVA = "0x1BF6D2C", Offset = "0x1BF6D2C", VA = "0x1BF6D2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600071C")]
			[Address(RVA = "0x1BF6D30", Offset = "0x1BF6D30", VA = "0x1BF6D30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600071E")]
			[Address(RVA = "0x1BF6F38", Offset = "0x1BF6F38", VA = "0x1BF6F38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xB0DB38", Offset = "0xB0DB38", VA = "0xB0DB38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x83FF54", Offset = "0x83FF54")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xB0DBA4", Offset = "0xB0DBA4", VA = "0xB0DBA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xB0DC78", Offset = "0xB0DC78", VA = "0xB0DC78")]
		public RubePassthroughSurface()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class RubeTitleScreenBackground : MonoBehaviour
	{
		[Token(Token = "0x200019C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835F20", Offset = "0x835F20")]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400088A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400088B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400088C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RubeTitleScreenBackground <>4__this;

			[Token(Token = "0x1700009F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000725")]
				[Address(RVA = "0x1BF72C4", Offset = "0x1BF72C4", VA = "0x1BF72C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000727")]
				[Address(RVA = "0x1BF730C", Offset = "0x1BF730C", VA = "0x1BF730C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000722")]
			[Address(RVA = "0x1BF70AC", Offset = "0x1BF70AC", VA = "0x1BF70AC")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6000723")]
			[Address(RVA = "0x1BF70D8", Offset = "0x1BF70D8", VA = "0x1BF70D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000724")]
			[Address(RVA = "0x1BF70DC", Offset = "0x1BF70DC", VA = "0x1BF70DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000726")]
			[Address(RVA = "0x1BF72CC", Offset = "0x1BF72CC", VA = "0x1BF72CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xB11270", Offset = "0xB11270", VA = "0xB11270")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840004", Offset = "0x840004")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xB112DC", Offset = "0xB112DC", VA = "0xB112DC")]
		public RubeTitleScreenBackground()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019D")]
	public class SpatialAnchorConnection
	{
		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform _anchorable;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839A0C", Offset = "0x839A0C")]
		private bool <HasSpatialAnchorUuid>k__BackingField;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839A1C", Offset = "0x839A1C")]
		private bool <HasSpatialAnchorHandle>k__BackingField;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839A2C", Offset = "0x839A2C")]
		private bool <HasSpatialAnchorPose>k__BackingField;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839A3C", Offset = "0x839A3C")]
		private bool <HasInitialOffset>k__BackingField;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839A4C", Offset = "0x839A4C")]
		private bool <HasDefaultOffset>k__BackingField;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839A5C", Offset = "0x839A5C")]
		private string <SpatialEntityUuid>k__BackingField;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839A6C", Offset = "0x839A6C")]
		private ulong <SpatialAnchorHandle>k__BackingField;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839A7C", Offset = "0x839A7C")]
		private Pose <InitialOffset>k__BackingField;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839A8C", Offset = "0x839A8C")]
		private Pose <DefaultOffset>k__BackingField;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839A9C", Offset = "0x839A9C")]
		private Pose <SpatialAnchorPose>k__BackingField;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action OnAnchorPoseSet;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839AAC", Offset = "0x839AAC")]
		private bool <Active>k__BackingField;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839ABC", Offset = "0x839ABC")]
		private bool <Highlighted>k__BackingField;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839ACC", Offset = "0x839ACC")]
		private bool <AllowReanchoring>k__BackingField;

		[Token(Token = "0x170000A1")]
		public bool HasSpatialAnchorUuid
		{
			[Token(Token = "0x6000728")]
			[Address(RVA = "0xC1C548", Offset = "0xC1C548", VA = "0xC1C548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8400B4", Offset = "0x8400B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000729")]
			[Address(RVA = "0xC1C550", Offset = "0xC1C550", VA = "0xC1C550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8400C4", Offset = "0x8400C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public bool HasSpatialAnchorHandle
		{
			[Token(Token = "0x600072A")]
			[Address(RVA = "0xC1C55C", Offset = "0xC1C55C", VA = "0xC1C55C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8400D4", Offset = "0x8400D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600072B")]
			[Address(RVA = "0xC1C564", Offset = "0xC1C564", VA = "0xC1C564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8400E4", Offset = "0x8400E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public bool HasSpatialAnchorPose
		{
			[Token(Token = "0x600072C")]
			[Address(RVA = "0xC1C570", Offset = "0xC1C570", VA = "0xC1C570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8400F4", Offset = "0x8400F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600072D")]
			[Address(RVA = "0xC1C578", Offset = "0xC1C578", VA = "0xC1C578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840104", Offset = "0x840104")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public bool HasInitialOffset
		{
			[Token(Token = "0x600072E")]
			[Address(RVA = "0xC1C584", Offset = "0xC1C584", VA = "0xC1C584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840114", Offset = "0x840114")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600072F")]
			[Address(RVA = "0xC1C58C", Offset = "0xC1C58C", VA = "0xC1C58C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840124", Offset = "0x840124")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public bool HasDefaultOffset
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0xC1C598", Offset = "0xC1C598", VA = "0xC1C598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840134", Offset = "0x840134")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000731")]
			[Address(RVA = "0xC1C5A0", Offset = "0xC1C5A0", VA = "0xC1C5A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840144", Offset = "0x840144")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public string SpatialEntityUuid
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0xC1C5AC", Offset = "0xC1C5AC", VA = "0xC1C5AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840154", Offset = "0x840154")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000733")]
			[Address(RVA = "0xC1C5B4", Offset = "0xC1C5B4", VA = "0xC1C5B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840164", Offset = "0x840164")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public ulong SpatialAnchorHandle
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0xC1C5BC", Offset = "0xC1C5BC", VA = "0xC1C5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840174", Offset = "0x840174")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000735")]
			[Address(RVA = "0xC1C5C4", Offset = "0xC1C5C4", VA = "0xC1C5C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840184", Offset = "0x840184")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public Pose InitialOffset
		{
			[Token(Token = "0x6000736")]
			[Address(RVA = "0xC1C5CC", Offset = "0xC1C5CC", VA = "0xC1C5CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840194", Offset = "0x840194")]
			get
			{
				return default(Pose);
			}
			[Token(Token = "0x6000737")]
			[Address(RVA = "0xC1C5E0", Offset = "0xC1C5E0", VA = "0xC1C5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8401A4", Offset = "0x8401A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public Pose DefaultOffset
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0xC1C5FC", Offset = "0xC1C5FC", VA = "0xC1C5FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8401B4", Offset = "0x8401B4")]
			get
			{
				return default(Pose);
			}
			[Token(Token = "0x6000739")]
			[Address(RVA = "0xC1C610", Offset = "0xC1C610", VA = "0xC1C610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8401C4", Offset = "0x8401C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public Pose SpatialAnchorPose
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0xC1C62C", Offset = "0xC1C62C", VA = "0xC1C62C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8401D4", Offset = "0x8401D4")]
			get
			{
				return default(Pose);
			}
			[Token(Token = "0x600073B")]
			[Address(RVA = "0xC1C640", Offset = "0xC1C640", VA = "0xC1C640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8401E4", Offset = "0x8401E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public bool IsAnchored
		{
			[Token(Token = "0x600073C")]
			[Address(RVA = "0xC1C65C", Offset = "0xC1C65C", VA = "0xC1C65C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AC")]
		public Transform ConnectedObjectTransform
		{
			[Token(Token = "0x600073D")]
			[Address(RVA = "0xC1C67C", Offset = "0xC1C67C", VA = "0xC1C67C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public bool Active
		{
			[Token(Token = "0x600073E")]
			[Address(RVA = "0xC1C684", Offset = "0xC1C684", VA = "0xC1C684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8401F4", Offset = "0x8401F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600073F")]
			[Address(RVA = "0xC1C68C", Offset = "0xC1C68C", VA = "0xC1C68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840204", Offset = "0x840204")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public bool Highlighted
		{
			[Token(Token = "0x6000740")]
			[Address(RVA = "0xC1C698", Offset = "0xC1C698", VA = "0xC1C698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840214", Offset = "0x840214")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000741")]
			[Address(RVA = "0xC1C6A0", Offset = "0xC1C6A0", VA = "0xC1C6A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840224", Offset = "0x840224")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public bool AllowReanchoring
		{
			[Token(Token = "0x6000742")]
			[Address(RVA = "0xC1C6AC", Offset = "0xC1C6AC", VA = "0xC1C6AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840234", Offset = "0x840234")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xC1C6B4", Offset = "0xC1C6B4", VA = "0xC1C6B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840244", Offset = "0x840244")]
			set
			{
			}
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xC1C6C0", Offset = "0xC1C6C0", VA = "0xC1C6C0")]
		public SpatialAnchorConnection(Transform anchorable)
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xC1C728", Offset = "0xC1C728", VA = "0xC1C728")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xC1C734", Offset = "0xC1C734", VA = "0xC1C734")]
		public void SetSpatialEntityUuid(string Uuid)
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xC1C744", Offset = "0xC1C744", VA = "0xC1C744")]
		public void ClearSpatialEntityUuid()
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xC1C794", Offset = "0xC1C794", VA = "0xC1C794")]
		public void SetAnchorHandle(ulong anchorHandle)
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xC1C7A4", Offset = "0xC1C7A4", VA = "0xC1C7A4")]
		public void SetInitialOffset(Pose offset)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xC1C7C8", Offset = "0xC1C7C8", VA = "0xC1C7C8")]
		public void SetDefaultOffset(Pose offset)
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xC1C7EC", Offset = "0xC1C7EC", VA = "0xC1C7EC")]
		public void SetDefaultOffset(RubeAnchor anchor)
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xC1C920", Offset = "0xC1C920", VA = "0xC1C920")]
		public void SetAnchorPose(Pose pose)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xC1CA54", Offset = "0xC1CA54", VA = "0xC1CA54")]
		public void SetAnchorData(ulong handle, Pose defaultOffset)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xC1CA80", Offset = "0xC1CA80", VA = "0xC1CA80")]
		public void SetAnchorData(RubeAnchor anchor)
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xC1CAA4", Offset = "0xC1CAA4", VA = "0xC1CAA4")]
		public void HandleSpatialAnchorUpdate(Pose newAnchorPose)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xC1CC64", Offset = "0xC1CC64", VA = "0xC1CC64")]
		private void SafeReposition(Transform transform, Pose pose)
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xC1CDCC", Offset = "0xC1CDCC", VA = "0xC1CDCC")]
		public Pose GetCurrentOffset()
		{
			return default(Pose);
		}
	}
	[Token(Token = "0x200019E")]
	public class SpatialAnchorManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200019F")]
		public class SpatialAnchorManagerConfig
		{
			[Token(Token = "0x40008A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float DefaultCaptureDistance;

			[Token(Token = "0x40008A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float FloorCaptureDistance;

			[Token(Token = "0x40008A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool OnlyUseFloorAnchor;

			[Token(Token = "0x600076C")]
			[Address(RVA = "0x1BF7860", Offset = "0x1BF7860", VA = "0x1BF7860")]
			public SpatialAnchorManagerConfig()
			{
			}
		}

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpatialAnchorManagerConfig _config;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839AEC", Offset = "0x839AEC")]
		private static SpatialAnchorManager <Instance>k__BackingField;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string FLOOR_ANCHOR_ID;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject AnchorPrefab;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IRubeAnchorSession _anchorSesson;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<ulong, RubeAnchor> handleToAnchor;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<ulong, float> _lastUpdateTimes;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HashSet<SpatialAnchorConnection> _allAnchorConnections;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _visibleAnchors;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ulong _floorAnchorHandle;

		[Token(Token = "0x40008A6")]
		private const ulong kInvalidHandle = ulong.MaxValue;

		[Token(Token = "0x170000B0")]
		public static SpatialAnchorManager Instance
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0xC1DD80", Offset = "0xC1DD80", VA = "0xC1DD80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840254", Offset = "0x840254")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000753")]
			[Address(RVA = "0xC1DDE4", Offset = "0xC1DDE4", VA = "0xC1DDE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840264", Offset = "0x840264")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		private bool hasFloorAnchor
		{
			[Token(Token = "0x6000754")]
			[Address(RVA = "0xC1DE4C", Offset = "0xC1DE4C", VA = "0xC1DE4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xC1DE5C", Offset = "0xC1DE5C", VA = "0xC1DE5C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xC1E1A0", Offset = "0xC1E1A0", VA = "0xC1E1A0")]
		public bool AnchorLoadComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xC1E25C", Offset = "0xC1E25C", VA = "0xC1E25C")]
		public bool AnchorLoadFailed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xC1E318", Offset = "0xC1E318", VA = "0xC1E318")]
		public void StartSession()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xC1E4E4", Offset = "0xC1E4E4", VA = "0xC1E4E4")]
		public void StopSession()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xC1E61C", Offset = "0xC1E61C", VA = "0xC1E61C")]
		private void ClearLoadedAnchors()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xC1E878", Offset = "0xC1E878", VA = "0xC1E878")]
		public void SetupForNewMachine()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xC1EDA0", Offset = "0xC1EDA0", VA = "0xC1EDA0")]
		public void SetupForLoadMachine()
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xC1EA7C", Offset = "0xC1EA7C", VA = "0xC1EA7C")]
		public void AddRoomAnchors()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xC1F250", Offset = "0xC1F250", VA = "0xC1F250")]
		public void LoadSavedAnchors(List<string> anchorUuids)
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xC1F3D8", Offset = "0xC1F3D8", VA = "0xC1F3D8")]
		public void AddAnchorable(SpatialAnchorConnection connection)
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xC1FB00", Offset = "0xC1FB00", VA = "0xC1FB00")]
		public void RemoveAnchorable(SpatialAnchorConnection connection)
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xC1FB64", Offset = "0xC1FB64", VA = "0xC1FB64")]
		public void ToggleAnchorVisiblity()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xC1FB74", Offset = "0xC1FB74", VA = "0xC1FB74")]
		public void SetAnchorsVisible(bool visible)
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xC1FCC4", Offset = "0xC1FCC4", VA = "0xC1FCC4")]
		private bool IsCloseEnoughToAnchor(Vector3 pos, RubeAnchor anchor)
		{
			return default(bool);
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xC1FD5C", Offset = "0xC1FD5C", VA = "0xC1FD5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xC1F448", Offset = "0xC1F448", VA = "0xC1F448")]
		private void UpdateConnection(SpatialAnchorConnection connection)
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xC1FE68", Offset = "0xC1FE68", VA = "0xC1FE68")]
		private void UpdateAnchorPose(SpatialAnchorConnection connection, RubeAnchor anchor)
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xC2019C", Offset = "0xC2019C", VA = "0xC2019C")]
		private void AssignAnchor(SpatialAnchorConnection connection)
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xC1F0B8", Offset = "0xC1F0B8", VA = "0xC1F0B8")]
		public RubeAnchor CreateAnchorGameObject(ulong anchorHandle)
		{
			return null;
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xC1EFA4", Offset = "0xC1EFA4", VA = "0xC1EFA4")]
		public void DestroyAnchorGameObject(ulong anchorHandle)
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xC20810", Offset = "0xC20810", VA = "0xC20810")]
		public SpatialAnchorManager()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class GameManager : MonoBehaviour
	{
		[Token(Token = "0x20001A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835F30", Offset = "0x835F30")]
		private sealed class <SetUpGame>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x40008D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Color <backgroundFadeStart>5__2;

			[Token(Token = "0x40008D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Color <backgroundFadeEnd>5__3;

			[Token(Token = "0x40008D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeInTimer>5__4;

			[Token(Token = "0x170000B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600079D")]
				[Address(RVA = "0x1BEE610", Offset = "0x1BEE610", VA = "0x1BEE610", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600079F")]
				[Address(RVA = "0x1BEE658", Offset = "0x1BEE658", VA = "0x1BEE658", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600079A")]
			[Address(RVA = "0x1BEE1BC", Offset = "0x1BEE1BC", VA = "0x1BEE1BC")]
			[DebuggerHidden]
			public <SetUpGame>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x600079B")]
			[Address(RVA = "0x1BEE1E8", Offset = "0x1BEE1E8", VA = "0x1BEE1E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600079C")]
			[Address(RVA = "0x1BEE1EC", Offset = "0x1BEE1EC", VA = "0x1BEE1EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600079E")]
			[Address(RVA = "0x1BEE618", Offset = "0x1BEE618", VA = "0x1BEE618", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835F40", Offset = "0x835F40")]
		private sealed class <LoadLevel>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <reenablePlayer>5__2;

			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <asyncLoad>5__3;

			[Token(Token = "0x170000B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007A3")]
				[Address(RVA = "0x1BEE16C", Offset = "0x1BEE16C", VA = "0x1BEE16C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007A5")]
				[Address(RVA = "0x1BEE1B4", Offset = "0x1BEE1B4", VA = "0x1BEE1B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007A0")]
			[Address(RVA = "0x1BEDE9C", Offset = "0x1BEDE9C", VA = "0x1BEDE9C")]
			[DebuggerHidden]
			public <LoadLevel>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60007A1")]
			[Address(RVA = "0x1BEDEC8", Offset = "0x1BEDEC8", VA = "0x1BEDEC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60007A2")]
			[Address(RVA = "0x1BEDECC", Offset = "0x1BEDECC", VA = "0x1BEDECC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007A4")]
			[Address(RVA = "0x1BEE174", Offset = "0x1BEE174", VA = "0x1BEE174", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835F50", Offset = "0x835F50")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameManager <>4__this;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string machineToLoad;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startRoomEditor;

			[Token(Token = "0x60007A6")]
			[Address(RVA = "0x1BED60C", Offset = "0x1BED60C", VA = "0x1BED60C")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x60007A7")]
			[Address(RVA = "0x1BED614", Offset = "0x1BED614", VA = "0x1BED614")]
			internal void <InitializeScene>g__completion|0()
			{
			}
		}

		[Token(Token = "0x20001A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835F60", Offset = "0x835F60")]
		private sealed class <InitializeSceneCoroutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action completion;

			[Token(Token = "0x170000B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007AB")]
				[Address(RVA = "0x1BEDE4C", Offset = "0x1BEDE4C", VA = "0x1BEDE4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007AD")]
				[Address(RVA = "0x1BEDE94", Offset = "0x1BEDE94", VA = "0x1BEDE94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007A8")]
			[Address(RVA = "0x1BED88C", Offset = "0x1BED88C", VA = "0x1BED88C")]
			[DebuggerHidden]
			public <InitializeSceneCoroutine>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x60007A9")]
			[Address(RVA = "0x1BED8B8", Offset = "0x1BED8B8", VA = "0x1BED8B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x1BED8BC", Offset = "0x1BED8BC", VA = "0x1BED8BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x1BEDE54", Offset = "0x1BEDE54", VA = "0x1BEDE54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835F70", Offset = "0x835F70")]
		private sealed class <EndHandReset>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x170000BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007B1")]
				[Address(RVA = "0x1BED83C", Offset = "0x1BED83C", VA = "0x1BED83C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007B3")]
				[Address(RVA = "0x1BED884", Offset = "0x1BED884", VA = "0x1BED884", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007AE")]
			[Address(RVA = "0x1BED720", Offset = "0x1BED720", VA = "0x1BED720")]
			[DebuggerHidden]
			public <EndHandReset>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x60007AF")]
			[Address(RVA = "0x1BED74C", Offset = "0x1BED74C", VA = "0x1BED74C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x1BED750", Offset = "0x1BED750", VA = "0x1BED750", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007B2")]
			[Address(RVA = "0x1BED844", Offset = "0x1BED844", VA = "0x1BED844", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839AFC", Offset = "0x839AFC")]
		public GameObject childManagers;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerManager playerManager;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIManager uiManager;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RubeMachine rubeMachine;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MasterAudio audioManager;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839B34", Offset = "0x839B34")]
		public CollisionDetectionMode simCollisionDetectionMode;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool EnableHandleCulling;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool LoadDeviceSceneInEditor;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool ForceConfigWindowOnStart;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839B6C", Offset = "0x839B6C")]
		[SoundGroup]
		public string grabSound;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SoundGroup]
		public string releaseSound;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SoundGroup]
		public string snapSound;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SoundGroup]
		public string uiClick;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action<bool> onControllerModeChange;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Action<bool> onHideHandlesChange;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839BE8", Offset = "0x839BE8")]
		private GameObject resetPrefab;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject resetHandsObjectInstance;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839C34", Offset = "0x839C34")]
		public bool inGame;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool inShutdown;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool inRecordingMode;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public bool inTutorial;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool hideHandles;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		public bool isPassthroughInitialized;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
		public bool isInitialized;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8F")]
		public bool isUsingHandTracking;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool hadPassthroughSettings;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool permissionsBrokeHands;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839C6C", Offset = "0x839C6C")]
		private static GameManager <Instance>k__BackingField;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool UseLegacySceneCapture;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private PassthroughLayerControl _passthrough;

		[Token(Token = "0x40008C8")]
		private const string FTUE_KEY = "first_time";

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PermissionCallbacks permissionCallbacks;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool permissionRequestComplete;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool returnMenuOnFocusLost;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		private bool returnToolOnFocusLost;

		[Token(Token = "0x170000B2")]
		public static GameManager Instance
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0x1C1C54C", Offset = "0x1C1C54C", VA = "0x1C1C54C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840274", Offset = "0x840274")]
			get
			{
				return null;
			}
			[Token(Token = "0x600076E")]
			[Address(RVA = "0x1C1C5B0", Offset = "0x1C1C5B0", VA = "0x1C1C5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840284", Offset = "0x840284")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public string MainSceneName
		{
			[Token(Token = "0x6000777")]
			[Address(RVA = "0x1C1D070", Offset = "0x1C1D070", VA = "0x1C1D070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1C1C618", Offset = "0x1C1C618", VA = "0x1C1C618")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x1C1C86C", Offset = "0x1C1C86C", VA = "0x1C1C86C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x1C1C898", Offset = "0x1C1C898", VA = "0x1C1C898")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840294", Offset = "0x840294")]
		private IEnumerator SetUpGame()
		{
			return null;
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x1C1C904", Offset = "0x1C1C904", VA = "0x1C1C904")]
		private void InitializeGame()
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1C1CA20", Offset = "0x1C1CA20", VA = "0x1C1CA20")]
		private void StartGame()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x1C1CDBC", Offset = "0x1C1CDBC", VA = "0x1C1CDBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1C1CF48", Offset = "0x1C1CF48", VA = "0x1C1CF48")]
		public void ChangeLevel(string tScene)
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1C1CFF8", Offset = "0x1C1CFF8", VA = "0x1C1CFF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8402F4", Offset = "0x8402F4")]
		private IEnumerator LoadLevel(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x1C1D0E4", Offset = "0x1C1D0E4", VA = "0x1C1D0E4")]
		public void CreateNewMachine()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1C1D32C", Offset = "0x1C1D32C", VA = "0x1C1D32C")]
		public void LoadMachine(string machineName)
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x1C1D204", Offset = "0x1C1D204", VA = "0x1C1D204")]
		public void InitializeMachine()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1C1D4C8", Offset = "0x1C1D4C8", VA = "0x1C1D4C8")]
		public List<string> GetAllSavedMachines()
		{
			return null;
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x1C1D4D0", Offset = "0x1C1D4D0", VA = "0x1C1D4D0")]
		public bool MachineFileExists(string machineName)
		{
			return default(bool);
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x1C1D234", Offset = "0x1C1D234", VA = "0x1C1D234")]
		public void InitializeScene(string machineToLoad, bool startRoomEditor)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x1C1D554", Offset = "0x1C1D554", VA = "0x1C1D554")]
		public void InitializeScene()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x1C1D4DC", Offset = "0x1C1D4DC", VA = "0x1C1D4DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840354", Offset = "0x840354")]
		private IEnumerator InitializeSceneCoroutine(Action completion)
		{
			return null;
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1C1D590", Offset = "0x1C1D590", VA = "0x1C1D590")]
		public void StartRoomEditor()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x1C1D7E8", Offset = "0x1C1D7E8", VA = "0x1C1D7E8")]
		public void GetPassthroughValues(out float edgeAlpha, out float brightness, out float contrast, out float posterize)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x1C1D86C", Offset = "0x1C1D86C", VA = "0x1C1D86C")]
		public string GetPassthroughTheme()
		{
			return null;
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x1C1D888", Offset = "0x1C1D888", VA = "0x1C1D888")]
		public void SetPassthroughEdgeAlpha(float alpha)
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x1C1D8A4", Offset = "0x1C1D8A4", VA = "0x1C1D8A4")]
		public void SetPassthroughBrightness(float brightness)
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1C1D8C0", Offset = "0x1C1D8C0", VA = "0x1C1D8C0")]
		public void SetPassthroughContrast(float contrast)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x1C1D8DC", Offset = "0x1C1D8DC", VA = "0x1C1D8DC")]
		public void SetPassthroughPolarize(float polarize)
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x1C1D8F8", Offset = "0x1C1D8F8", VA = "0x1C1D8F8")]
		public void SetPassthroughTheme(string theme)
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x1C1D914", Offset = "0x1C1D914", VA = "0x1C1D914")]
		public void AddPassthroughSurface(GameObject passthroughSurface)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1C1D930", Offset = "0x1C1D930", VA = "0x1C1D930")]
		public void RemovePassthroughSurface(GameObject passthroughSurface)
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1C1D94C", Offset = "0x1C1D94C", VA = "0x1C1D94C")]
		public void ClearPassthroughSurfaces()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x1C166D0", Offset = "0x1C166D0", VA = "0x1C166D0")]
		public void ExitGame()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x1C1CD68", Offset = "0x1C1CD68", VA = "0x1C1CD68")]
		public bool PlayerFirstTime()
		{
			return default(bool);
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x1C1D968", Offset = "0x1C1D968", VA = "0x1C1D968")]
		public void RecordPlayerReturn()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x1C1D9D8", Offset = "0x1C1D9D8", VA = "0x1C1D9D8")]
		private void SetUpPlayerPrefs()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x1C1E078", Offset = "0x1C1E078", VA = "0x1C1E078")]
		private void SetUpRoomPrefs()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x1C1C96C", Offset = "0x1C1C96C", VA = "0x1C1C96C")]
		private void SetUpHandResetter()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x1C1CC90", Offset = "0x1C1CC90", VA = "0x1C1CC90")]
		public void ResetHand(bool left)
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x1C1E07C", Offset = "0x1C1E07C", VA = "0x1C1E07C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8403B4", Offset = "0x8403B4")]
		private IEnumerator EndHandReset()
		{
			return null;
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x1C1D674", Offset = "0x1C1D674", VA = "0x1C1D674")]
		public void ToggleRecordingMode()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x1C1E0E8", Offset = "0x1C1E0E8", VA = "0x1C1E0E8")]
		public void FocusLost()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x1C1E1FC", Offset = "0x1C1E1FC", VA = "0x1C1E1FC")]
		public void FocusGained()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x1C1E2C4", Offset = "0x1C1E2C4", VA = "0x1C1E2C4")]
		private void RestartGameScene()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x1C1E400", Offset = "0x1C1E400", VA = "0x1C1E400")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x1C1E428", Offset = "0x1C1E428", VA = "0x1C1E428")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class DominoContainer : RubeObject
	{
		[Token(Token = "0x20001A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835F80", Offset = "0x835F80")]
		private sealed class <EnableLockingWithDelay>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DominoContainer <>4__this;

			[Token(Token = "0x170000BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007CF")]
				[Address(RVA = "0x1BEBC18", Offset = "0x1BEBC18", VA = "0x1BEBC18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007D1")]
				[Address(RVA = "0x1BEBC60", Offset = "0x1BEBC60", VA = "0x1BEBC60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007CC")]
			[Address(RVA = "0x1BEBAF4", Offset = "0x1BEBAF4", VA = "0x1BEBAF4")]
			[DebuggerHidden]
			public <EnableLockingWithDelay>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60007CD")]
			[Address(RVA = "0x1BEBB20", Offset = "0x1BEBB20", VA = "0x1BEBB20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60007CE")]
			[Address(RVA = "0x1BEBB24", Offset = "0x1BEBB24", VA = "0x1BEBB24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007D0")]
			[Address(RVA = "0x1BEBC20", Offset = "0x1BEBC20", VA = "0x1BEBC20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839C7C", Offset = "0x839C7C")]
		public GameObject dominoTrackObject;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public GameObject[] controlPointLocations;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839CB4", Offset = "0x839CB4")]
		private DominoTrack dominoTrack;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Spline spline;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Transform splineTransform;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool objectSelected;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private int[] pointIndexes;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private bool initialized;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
		private bool listenersInitialized;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public float dominoTrackHeightOffset;

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xBC578C", Offset = "0xBC578C", VA = "0xBC578C", Slot = "17")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xBC5B90", Offset = "0xBC5B90", VA = "0xBC5B90")]
		private void ResetListener()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xBC5C24", Offset = "0xBC5C24", VA = "0xBC5C24")]
		private void RecordStateChangeWhenInitialized()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xBC5F70", Offset = "0xBC5F70", VA = "0xBC5F70")]
		private void RecordStateChangeWhenInitialized(int test)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xBC5F84", Offset = "0xBC5F84", VA = "0xBC5F84")]
		private void RecordStateChangeDestroyed()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xBC5FE4", Offset = "0xBC5FE4", VA = "0xBC5FE4", Slot = "11")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xBC6058", Offset = "0xBC6058", VA = "0xBC6058", Slot = "18")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xBC5C60", Offset = "0xBC5C60", VA = "0xBC5C60")]
		private void OnControlPointInteract()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xBC6258", Offset = "0xBC6258", VA = "0xBC6258", Slot = "21")]
		public override void ObjectGrabbed()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xBC6280", Offset = "0xBC6280", VA = "0xBC6280")]
		public void GrabObject()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xBC6734", Offset = "0xBC6734", VA = "0xBC6734", Slot = "20")]
		public override void ObjectReleased()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xBC6738", Offset = "0xBC6738", VA = "0xBC6738")]
		private void ReleaseObject()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xBC6A78", Offset = "0xBC6A78", VA = "0xBC6A78", Slot = "19")]
		public override void ActAsObject()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xBC6D28", Offset = "0xBC6D28", VA = "0xBC6D28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840554", Offset = "0x840554")]
		private IEnumerator EnableLockingWithDelay()
		{
			return null;
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xBC6E24", Offset = "0xBC6E24", VA = "0xBC6E24")]
		private void AddListeners(Spline splineToListenTo)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xBC6FC0", Offset = "0xBC6FC0", VA = "0xBC6FC0")]
		private void ActionListener_ControlPointAddedToStart(int index)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xBC701C", Offset = "0xBC701C", VA = "0xBC701C")]
		private void ActionListener_ControlPointAddedToEnd(int index)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xBC7020", Offset = "0xBC7020", VA = "0xBC7020")]
		private void ActionListener_ControlPointRemoved(int index)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xBC718C", Offset = "0xBC718C", VA = "0xBC718C")]
		public bool IsBetween(float testValue, float bound1, float bound2)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xBC71F0", Offset = "0xBC71F0", VA = "0xBC71F0", Slot = "16")]
		public override RubeObjectSnapshot CurrentState()
		{
			return null;
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xBC73A4", Offset = "0xBC73A4", VA = "0xBC73A4", Slot = "14")]
		public override void ApplyState(RubeObjectSnapshot state)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xBC74FC", Offset = "0xBC74FC", VA = "0xBC74FC", Slot = "6")]
		public override void OnMachineLoadComplete(RubeObjectSnapshot loadState)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xBC76C8", Offset = "0xBC76C8", VA = "0xBC76C8", Slot = "13")]
		public override void ResetPlacement()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xBC7804", Offset = "0xBC7804", VA = "0xBC7804")]
		public DominoContainer()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x835F90", Offset = "0x835F90")]
	public class DominoTrack : RubeComponent
	{
		[Token(Token = "0x20001A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x835FF0", Offset = "0x835FF0")]
		private sealed class <ResetRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DominoTrack <>4__this;

			[Token(Token = "0x170000BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007E6")]
				[Address(RVA = "0x1BEBD40", Offset = "0x1BEBD40", VA = "0x1BEBD40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007E8")]
				[Address(RVA = "0x1BEBD88", Offset = "0x1BEBD88", VA = "0x1BEBD88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x1BEBC68", Offset = "0x1BEBC68", VA = "0x1BEBC68")]
			[DebuggerHidden]
			public <ResetRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60007E4")]
			[Address(RVA = "0x1BEBC94", Offset = "0x1BEBC94", VA = "0x1BEBC94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60007E5")]
			[Address(RVA = "0x1BEBC98", Offset = "0x1BEBC98", VA = "0x1BEBC98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x1BEBD48", Offset = "0x1BEBD48", VA = "0x1BEBD48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839CEC", Offset = "0x839CEC")]
		public GameObject dominoPrefab;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float dominoSpacing;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 dominoScale;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Spline spline;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<GameObject> dominoes;

		[Token(Token = "0x170000BE")]
		public Spline Spline
		{
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0xBC780C", Offset = "0xBC780C", VA = "0xBC780C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xBC7814", Offset = "0xBC7814", VA = "0xBC7814")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xBC7B98", Offset = "0xBC7B98", VA = "0xBC7B98", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xBC7E28", Offset = "0xBC7E28", VA = "0xBC7E28")]
		private void ActionListener_ControlPointEdit()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xBC7E2C", Offset = "0xBC7E2C", VA = "0xBC7E2C")]
		private void ActionListener_ControlPointAdded(int index)
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xBC61B8", Offset = "0xBC61B8", VA = "0xBC61B8")]
		public void RefreshDominoes()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xBC7E30", Offset = "0xBC7E30", VA = "0xBC7E30")]
		public void FreezeThawDominoes()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xBC6588", Offset = "0xBC6588", VA = "0xBC6588")]
		public void FreezeDominoes()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xBC7FDC", Offset = "0xBC7FDC", VA = "0xBC7FDC")]
		public void ThawDominoes()
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xBC623C", Offset = "0xBC623C", VA = "0xBC623C")]
		public VertexPath GetVertexPath()
		{
			return null;
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xBC6D94", Offset = "0xBC6D94", VA = "0xBC6D94")]
		public void MoveToOrigin()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xBC8188", Offset = "0xBC8188", VA = "0xBC8188", Slot = "15")]
		public override bool HasPersistentState()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xBC8190", Offset = "0xBC8190", VA = "0xBC8190", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xBC81CC", Offset = "0xBC81CC", VA = "0xBC81CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840604", Offset = "0x840604")]
		private IEnumerator ResetRoutine()
		{
			return null;
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xBC8238", Offset = "0xBC8238", VA = "0xBC8238", Slot = "17")]
		public override RubeAdditionalObjectData CurrentState()
		{
			return null;
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xBC86E8", Offset = "0xBC86E8", VA = "0xBC86E8", Slot = "16")]
		public override void ApplyState(RubeAdditionalObjectData data)
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xBC8C28", Offset = "0xBC8C28", VA = "0xBC8C28")]
		public DominoTrack()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class RubeDomino : MonoBehaviour
	{
		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] meshes;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidbody;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float oldSleepThreshold;

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x1C0BBF0", Offset = "0x1C0BBF0", VA = "0x1C0BBF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1C0BE44", Offset = "0x1C0BE44", VA = "0x1C0BE44")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1C0BDCC", Offset = "0x1C0BDCC", VA = "0x1C0BDCC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1C0BF8C", Offset = "0x1C0BF8C", VA = "0x1C0BF8C")]
		public void ForceSleep()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1C0BFE4", Offset = "0x1C0BFE4", VA = "0x1C0BFE4")]
		public void ForceWakeUp()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1C0BE84", Offset = "0x1C0BE84", VA = "0x1C0BE84")]
		public void AssessSimState(string stateChange = "dont worry about it")
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x1C0C038", Offset = "0x1C0C038", VA = "0x1C0C038")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x1C0C13C", Offset = "0x1C0C13C", VA = "0x1C0C13C")]
		public RubeDomino()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[SelectionBase]
	public class ControlPointStatic : RubeSubObject
	{
		[Token(Token = "0x20001AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836010", Offset = "0x836010")]
		private sealed class <DeselectWithDelay>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400090B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400090C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400090D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControlPointStatic <>4__this;

			[Token(Token = "0x170000C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000802")]
				[Address(RVA = "0x1BEA854", Offset = "0x1BEA854", VA = "0x1BEA854", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000804")]
				[Address(RVA = "0x1BEA89C", Offset = "0x1BEA89C", VA = "0x1BEA89C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007FF")]
			[Address(RVA = "0x1BEA77C", Offset = "0x1BEA77C", VA = "0x1BEA77C")]
			[DebuggerHidden]
			public <DeselectWithDelay>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000800")]
			[Address(RVA = "0x1BEA7A8", Offset = "0x1BEA7A8", VA = "0x1BEA7A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000801")]
			[Address(RVA = "0x1BEA7AC", Offset = "0x1BEA7AC", VA = "0x1BEA7AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000803")]
			[Address(RVA = "0x1BEA85C", Offset = "0x1BEA85C", VA = "0x1BEA85C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RubeObject rubeObject;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Spline linkedSpline;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject linkedControlPointObject;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ControlPoint linkedControlPoint;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool isLinkedToStart;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool objectSelected;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float linkBreakDistance;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material baseMaterial;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Material linkMaterial;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public MeshRenderer[] meshRenderers;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ControlPointStaticCreator controlPointStaticCreator;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Action<Spline> OnLink;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Action<Spline> OnDisconnect;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 creatorPosition;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion creatorRotation;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool linked;

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xBB59C8", Offset = "0xBB59C8", VA = "0xBB59C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xBB5F34", Offset = "0xBB5F34", VA = "0xBB5F34")]
		private void OnUndoListener()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xBB61B4", Offset = "0xBB61B4", VA = "0xBB61B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xBB5FB8", Offset = "0xBB5FB8", VA = "0xBB5FB8")]
		public void UpdateConnected(Spline spline)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xBB6560", Offset = "0xBB6560", VA = "0xBB6560", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xBB6570", Offset = "0xBB6570", VA = "0xBB6570", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xBB6614", Offset = "0xBB6614", VA = "0xBB6614")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8406B4", Offset = "0x8406B4")]
		public IEnumerator DeselectWithDelay()
		{
			return null;
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xBB6680", Offset = "0xBB6680", VA = "0xBB6680")]
		public void LinkControlPoint(Spline spline, bool isStart)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xBB6AA8", Offset = "0xBB6AA8", VA = "0xBB6AA8", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xBB6328", Offset = "0xBB6328", VA = "0xBB6328")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xBB6DD0", Offset = "0xBB6DD0", VA = "0xBB6DD0", Slot = "17")]
		public override RubeAdditionalObjectData CurrentState()
		{
			return null;
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xBB6EA4", Offset = "0xBB6EA4", VA = "0xBB6EA4", Slot = "6")]
		public override void OnMachineLoadComplete(RubeAdditionalObjectData data)
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xBB5DBC", Offset = "0xBB5DBC", VA = "0xBB5DBC")]
		public void HandleInputChange(bool handTracking)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xBB7250", Offset = "0xBB7250", VA = "0xBB7250")]
		public ControlPointStatic()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	[SelectionBase]
	public class ControlPointStaticCreator : MonoBehaviour
	{
		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject splinePrefab;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControlPointStatic controlPointStatic;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material baseMaterial;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider[] colliders;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InteractableUnityEventWrapper interactableEvents;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool objectSelected;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject objectCollided;

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xBB72B0", Offset = "0xBB72B0", VA = "0xBB72B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xBB76F8", Offset = "0xBB76F8", VA = "0xBB76F8")]
		private void SelectedListener()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xBB7704", Offset = "0xBB7704", VA = "0xBB7704")]
		private void UnselectedListener()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xBB6A24", Offset = "0xBB6A24", VA = "0xBB6A24")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xBB6D4C", Offset = "0xBB6D4C", VA = "0xBB6D4C")]
		public void Enable()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xBB7B40", Offset = "0xBB7B40", VA = "0xBB7B40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xBB7628", Offset = "0xBB7628", VA = "0xBB7628")]
		public void HandleInputChange(bool handTracking)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xBB7D24", Offset = "0xBB7D24", VA = "0xBB7D24")]
		public ControlPointStaticCreator()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x836030", Offset = "0x836030")]
	public class Spline : RubeReference
	{
		[Token(Token = "0x20001AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836090", Offset = "0x836090")]
		private sealed class <DestroyAnchorAfterWait>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400093E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400093F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject toDestroy;

			[Token(Token = "0x170000C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600082E")]
				[Address(RVA = "0x1BF797C", Offset = "0x1BF797C", VA = "0x1BF797C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000830")]
				[Address(RVA = "0x1BF79C4", Offset = "0x1BF79C4", VA = "0x1BF79C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600082B")]
			[Address(RVA = "0x1BF787C", Offset = "0x1BF787C", VA = "0x1BF787C")]
			[DebuggerHidden]
			public <DestroyAnchorAfterWait>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600082C")]
			[Address(RVA = "0x1BF78A8", Offset = "0x1BF78A8", VA = "0x1BF78A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600082D")]
			[Address(RVA = "0x1BF78AC", Offset = "0x1BF78AC", VA = "0x1BF78AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600082F")]
			[Address(RVA = "0x1BF7984", Offset = "0x1BF7984", VA = "0x1BF7984", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839D24", Offset = "0x839D24")]
		private BezierPath <bezierPath>k__BackingField;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839D34", Offset = "0x839D34")]
		private VertexPath <vertexPath>k__BackingField;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839D44", Offset = "0x839D44")]
		public float vertexPathMaxAngleError;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float vertexPathMinVertexSpacing;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839D7C", Offset = "0x839D7C")]
		public bool useTransformLocking;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839DB4", Offset = "0x839DB4")]
		public bool lockXAxis;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool lockYAxis;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool lockZAxis;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 lockCoordinates;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839DEC", Offset = "0x839DEC")]
		public bool lockXRotation;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool lockYRotation;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool lockZRotation;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 lockRotations;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839E24", Offset = "0x839E24")]
		public GameObject controlPointPrefab;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject controlPointCreatorPrefabStart;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject controlPointCreatorPrefabEnd;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<GameObject> controlPoints;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839E5C", Offset = "0x839E5C")]
		public float ControlPointCreatorOffset;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 controlPointCreatorStaticOffset;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool startCreatorEnabled;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool endCreatorEnabled;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject controlPointCreatorStart;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject controlPointCreatorEnd;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839E94", Offset = "0x839E94")]
		public bool useLineRenderer;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool connectionUpdating;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Action onSplineDestroyed;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Action onSplineInitialized;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Action<int> onControlPointRemoved;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Action<int> onControlPointAddedToStart;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Action<int> onControlPointAddedToEnd;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Action onControlPointChanged;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Action onControlPointEdit;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Action onControlPointAdded;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Action onControlPointDeleted;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool selfStart;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		public bool initialized;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		private bool scheduledForDestroy;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839ECC", Offset = "0x839ECC")]
		private Vector3 positionOffset;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Quaternion rotationOffset;

		[Token(Token = "0x170000C3")]
		public BezierPath bezierPath
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0xC213C8", Offset = "0xC213C8", VA = "0xC213C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840774", Offset = "0x840774")]
			get
			{
				return null;
			}
			[Token(Token = "0x600080D")]
			[Address(RVA = "0xC213C0", Offset = "0xC213C0", VA = "0xC213C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840764", Offset = "0x840764")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public VertexPath vertexPath
		{
			[Token(Token = "0x6000810")]
			[Address(RVA = "0xC213D8", Offset = "0xC213D8", VA = "0xC213D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840794", Offset = "0x840794")]
			get
			{
				return null;
			}
			[Token(Token = "0x600080F")]
			[Address(RVA = "0xC213D0", Offset = "0xC213D0", VA = "0xC213D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840784", Offset = "0x840784")]
			set
			{
			}
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xC213E0", Offset = "0xC213E0", VA = "0xC213E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xC21638", Offset = "0xC21638", VA = "0xC21638")]
		private void Start()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xC219AC", Offset = "0xC219AC", VA = "0xC219AC", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xC219B4", Offset = "0xC219B4", VA = "0xC219B4")]
		public void SplineUpdate()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xC222D0", Offset = "0xC222D0", VA = "0xC222D0")]
		public void SplineControlPointUpdate(int index)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xC222D4", Offset = "0xC222D4", VA = "0xC222D4")]
		public void Initialize(Vector3[] positions, Quaternion[] rotations)
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xC216B8", Offset = "0xC216B8", VA = "0xC216B8")]
		public void SelfStart(GameObject controlPoint1, GameObject controlPoint2)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xC22860", Offset = "0xC22860", VA = "0xC22860", Slot = "5")]
		public virtual void AddControlPointToStart(Vector3 position, Quaternion rotation, bool invokeEventAdded = true)
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xC22A10", Offset = "0xC22A10", VA = "0xC22A10", Slot = "6")]
		public virtual void AddControlPointToEnd(Vector3 position, Quaternion rotation, bool invokeEventAdded = true)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xC22BD4", Offset = "0xC22BD4", VA = "0xC22BD4", Slot = "7")]
		public virtual void RemoveControlPointAt(int index, bool invokeEventDeleted = true)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xC22D98", Offset = "0xC22D98", VA = "0xC22D98", Slot = "8")]
		public virtual void RemoveControlPoint(GameObject controlPoint, bool invokeEventDeleted = true)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xC22CD8", Offset = "0xC22CD8", VA = "0xC22CD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8407A4", Offset = "0x8407A4")]
		public IEnumerator DestroyAnchorAfterWait(GameObject toDestroy)
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xC22D44", Offset = "0xC22D44", VA = "0xC22D44")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xC21E3C", Offset = "0xC21E3C", VA = "0xC21E3C")]
		public void RefreshControlPointCreators()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xC22EC4", Offset = "0xC22EC4", VA = "0xC22EC4")]
		public bool IsPartner(GameObject controlPoint1, GameObject controlPoint2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xC22F78", Offset = "0xC22F78", VA = "0xC22F78")]
		public bool IsStart(GameObject controlPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xC22FE8", Offset = "0xC22FE8", VA = "0xC22FE8")]
		public bool IsEnd(GameObject controlPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xC23074", Offset = "0xC23074", VA = "0xC23074")]
		public GameObject GetStartControlPoint()
		{
			return null;
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xC230E0", Offset = "0xC230E0", VA = "0xC230E0")]
		public GameObject GetEndControlPoint()
		{
			return null;
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xC23154", Offset = "0xC23154", VA = "0xC23154")]
		public float DistanceToNextControlPoint(GameObject controlPoint)
		{
			return default(float);
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xC23298", Offset = "0xC23298", VA = "0xC23298")]
		public float DistanceToPreviousControlPoint(GameObject controlPoint)
		{
			return default(float);
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xC233C8", Offset = "0xC233C8", VA = "0xC233C8")]
		public void UpdatePositionLockingBasedOnPosition(Vector3 pos, Vector3 rot)
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xC219F8", Offset = "0xC219F8", VA = "0xC219F8")]
		public void UpdatePath()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xC2341C", Offset = "0xC2341C", VA = "0xC2341C")]
		public void UpdateLineRenderer()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xC23478", Offset = "0xC23478", VA = "0xC23478")]
		public List<GameObject> SpawnPrefabsAlongPath(GameObject prefab, List<GameObject> existingPrefabs, float distanceInterval, Vector3 prefabScale, Transform parentTransform)
		{
			return null;
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xC2395C", Offset = "0xC2395C", VA = "0xC2395C")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8360A0", Offset = "0x8360A0")]
	public class Track : RubeComponent
	{
		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839F04", Offset = "0x839F04")]
		public GameObject trackPiecePrefab;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject trackPiecePrefabHollow;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject trackPiecePrefabCollision;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject segmentPrefab;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839F3C", Offset = "0x839F3C")]
		private Spline <spline>k__BackingField;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Quaternion[] trackRotations;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initalized;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshFilter meshFilter;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject trackPieceObject;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject trackPieceObjectHollow;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject trackPieceObjectCollision;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private TrackPiece trackPiece;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private TrackPiece trackPieceHollow;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private TrackPiece trackPieceCollision;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<GameObject> trackSegments;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool alternatingMeshGeneration;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool updateSwitch;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float currentUVOffset;

		[Token(Token = "0x170000C7")]
		public Spline spline
		{
			[Token(Token = "0x6000831")]
			[Address(RVA = "0xDA150C", Offset = "0xDA150C", VA = "0xDA150C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840854", Offset = "0x840854")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000832")]
			[Address(RVA = "0xDA1514", Offset = "0xDA1514", VA = "0xDA1514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840864", Offset = "0x840864")]
			set
			{
			}
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xDA151C", Offset = "0xDA151C", VA = "0xDA151C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xDA2388", Offset = "0xDA2388", VA = "0xDA2388", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xDA2564", Offset = "0xDA2564", VA = "0xDA2564")]
		private void DestroySelf()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xDA25C4", Offset = "0xDA25C4", VA = "0xDA25C4")]
		private void GenerateTrack()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xDA25CC", Offset = "0xDA25CC", VA = "0xDA25CC")]
		private void GenerateTrack(bool forceAllSegments = false)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xDA33CC", Offset = "0xDA33CC", VA = "0xDA33CC")]
		private void GenerateSegment(TrackSegment trackSegment, TrackPiece trackPieceUsing, ControlPoint controlPoint1, ControlPoint controlPoint2)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xDA3068", Offset = "0xDA3068", VA = "0xDA3068")]
		private void GenerateSegmentLoop(TrackSegment trackSegment, TrackPiece trackPieceUsing, ControlPoint controlPoint1, ControlPoint controlPoint2)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xDA3D1C", Offset = "0xDA3D1C", VA = "0xDA3D1C")]
		public TrackSegment GetClosestTrackSegment(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xDA3EE4", Offset = "0xDA3EE4", VA = "0xDA3EE4")]
		private void ActionListener_ControlPointRemoved(int index)
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xDA3FF8", Offset = "0xDA3FF8", VA = "0xDA3FF8")]
		private void ActionListener_ControlPointAddedToStart(int index)
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xDA41E4", Offset = "0xDA41E4", VA = "0xDA41E4")]
		private void ActionListener_ControlPointAddedToEnd(int index)
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xDA432C", Offset = "0xDA432C", VA = "0xDA432C")]
		private void ActionListener_ControlPointEdit()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xDA4330", Offset = "0xDA4330", VA = "0xDA4330", Slot = "15")]
		public override bool HasPersistentState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xDA4338", Offset = "0xDA4338", VA = "0xDA4338", Slot = "17")]
		public override RubeAdditionalObjectData CurrentState()
		{
			return null;
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xDA48DC", Offset = "0xDA48DC", VA = "0xDA48DC")]
		public void MoveToOrigin()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xDA496C", Offset = "0xDA496C", VA = "0xDA496C", Slot = "16")]
		public override void ApplyState(RubeAdditionalObjectData data)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xDA4EC0", Offset = "0xDA4EC0", VA = "0xDA4EC0")]
		public Track()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class TrackContainer : RubeObject
	{
		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839F4C", Offset = "0x839F4C")]
		public GameObject trackObject;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public GameObject[] controlPointLocations;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839F84", Offset = "0x839F84")]
		private Track track;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Spline spline;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Transform splineTransform;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool objectSelected;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private int[] pointIndexes;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private bool initialized;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
		private bool listenersInitialized;

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xDA4F38", Offset = "0xDA4F38", VA = "0xDA4F38", Slot = "17")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xDA51B0", Offset = "0xDA51B0", VA = "0xDA51B0")]
		private void RecordStateChangeWhenInitialized()
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xDA51C4", Offset = "0xDA51C4", VA = "0xDA51C4")]
		private void RecordStateChangeWhenInitialized(int test)
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xDA51D8", Offset = "0xDA51D8", VA = "0xDA51D8")]
		private void RecordStateChangeDestroyed()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xDA5238", Offset = "0xDA5238", VA = "0xDA5238", Slot = "11")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xDA52AC", Offset = "0xDA52AC", VA = "0xDA52AC", Slot = "18")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xDA577C", Offset = "0xDA577C", VA = "0xDA577C", Slot = "21")]
		public override void ObjectGrabbed()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xDA5A6C", Offset = "0xDA5A6C", VA = "0xDA5A6C", Slot = "20")]
		public override void ObjectReleased()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xDA5A70", Offset = "0xDA5A70", VA = "0xDA5A70")]
		private void ReleaseObject()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xDA5D30", Offset = "0xDA5D30", VA = "0xDA5D30", Slot = "19")]
		public override void ActAsObject()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xDA5FA0", Offset = "0xDA5FA0", VA = "0xDA5FA0")]
		private void AddListeners(Spline splineToListenTo)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xDA613C", Offset = "0xDA613C", VA = "0xDA613C")]
		private void ActionListener_ControlPointAddedToStart(int index)
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xDA6198", Offset = "0xDA6198", VA = "0xDA6198")]
		private void ActionListener_ControlPointAddedToEnd(int index)
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xDA619C", Offset = "0xDA619C", VA = "0xDA619C")]
		private void ActionListener_ControlPointRemoved(int index)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xDA6308", Offset = "0xDA6308", VA = "0xDA6308")]
		public bool IsBetween(float testValue, float bound1, float bound2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xDA636C", Offset = "0xDA636C", VA = "0xDA636C", Slot = "16")]
		public override RubeObjectSnapshot CurrentState()
		{
			return null;
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xDA6520", Offset = "0xDA6520", VA = "0xDA6520", Slot = "14")]
		public override void ApplyState(RubeObjectSnapshot state)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xDA6678", Offset = "0xDA6678", VA = "0xDA6678", Slot = "6")]
		public override void OnMachineLoadComplete(RubeObjectSnapshot loadState)
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xDA6830", Offset = "0xDA6830", VA = "0xDA6830", Slot = "13")]
		public override void ResetPlacement()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xDA696C", Offset = "0xDA696C", VA = "0xDA696C")]
		public TrackContainer()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	[SelectionBase]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x836100", Offset = "0x836100")]
	public class TrackPiece : MonoBehaviour
	{
		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoUpdate;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 pathScale;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject positivePlane;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject negativePlane;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject neutralPlane;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Bounds bounds;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject[] vertexObjects;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool[] sided;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] vertices;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int[] triangles;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2[] uvs;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3[] normals;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float uvTilingRatio;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] halfVertices;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2[] halfUVs;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3[] halfNormals;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MeshFilter meshFilter;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Mesh meshType;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Mesh mesh;

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xDA6BA8", Offset = "0xDA6BA8", VA = "0xDA6BA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xDA235C", Offset = "0xDA235C", VA = "0xDA235C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xDA79A8", Offset = "0xDA79A8", VA = "0xDA79A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xDA6C10", Offset = "0xDA6C10", VA = "0xDA6C10")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x840874", Offset = "0x840874")]
		public void InitializeMesh()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xDA1B38", Offset = "0xDA1B38", VA = "0xDA1B38")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8408AC", Offset = "0x8408AC")]
		public void InitializeSimpleMesh()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xDA7A48", Offset = "0xDA7A48", VA = "0xDA7A48")]
		public Mesh CopyMesh(Mesh meshToCopy)
		{
			return null;
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xDA2058", Offset = "0xDA2058", VA = "0xDA2058")]
		public float UpdateVertices(float uvPosition, float distance)
		{
			return default(float);
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xDA7B58", Offset = "0xDA7B58", VA = "0xDA7B58")]
		public Vector3[] GetVertices()
		{
			return null;
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xDA7B60", Offset = "0xDA7B60", VA = "0xDA7B60")]
		public int[] GetTriangles()
		{
			return null;
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xDA7B68", Offset = "0xDA7B68", VA = "0xDA7B68")]
		public Vector2[] GetUVs()
		{
			return null;
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xDA7B70", Offset = "0xDA7B70", VA = "0xDA7B70")]
		public Vector3[] GetNormals()
		{
			return null;
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xDA7B78", Offset = "0xDA7B78", VA = "0xDA7B78")]
		public Vector3[] GetHalfVertices()
		{
			return null;
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xDA7B80", Offset = "0xDA7B80", VA = "0xDA7B80")]
		public Vector2[] GetHalfUVs()
		{
			return null;
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xDA7B88", Offset = "0xDA7B88", VA = "0xDA7B88")]
		public Vector3[] GetHalfNormals()
		{
			return null;
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xDA7B90", Offset = "0xDA7B90", VA = "0xDA7B90")]
		public TrackPiece()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8361C8", Offset = "0x8361C8")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierPath bezierPath;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VertexPath vertexPath;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float vertexSpacing;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshCollider meshCollider;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vector3> vertices;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<int> triangles;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector2> uvs;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Vector3> normals;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject startControlPointObject;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject endControlPointObject;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ControlPoint startControlPoint;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ControlPoint endControlPoint;

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xDA8BD8", Offset = "0xDA8BD8", VA = "0xDA8BD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xDA2F00", Offset = "0xDA2F00", VA = "0xDA2F00")]
		public void InitializePath(GameObject controlPoint1, GameObject controlPoint2, float meshSpacing)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xDA8D34", Offset = "0xDA8D34", VA = "0xDA8D34")]
		public void UpdatePath()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xDA8E44", Offset = "0xDA8E44", VA = "0xDA8E44")]
		public void AutoSetPathTangents()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xDA8F50", Offset = "0xDA8F50", VA = "0xDA8F50")]
		public void ResetNormals()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xDA8F6C", Offset = "0xDA8F6C", VA = "0xDA8F6C")]
		public void FixPathNormals()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xDA3B50", Offset = "0xDA3B50", VA = "0xDA3B50")]
		public void AppendTriangles(Vector3[] verts, int[] tris, Vector2[] UVs, Vector3[] normalVectors)
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xDA3A10", Offset = "0xDA3A10", VA = "0xDA3A10")]
		public void SetTriangles(Vector3[] verts, int[] tris, Vector2[] UVs, Vector3[] normalVectors)
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xDA368C", Offset = "0xDA368C", VA = "0xDA368C")]
		public void AddTriangles(Vector3[] verts, int[] tris, Vector2[] UVs, Vector3[] normalVectors)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xDA2DF0", Offset = "0xDA2DF0", VA = "0xDA2DF0")]
		public void ClearVertices()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xDA3868", Offset = "0xDA3868", VA = "0xDA3868")]
		public void BuildMesh()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xDA384C", Offset = "0xDA384C", VA = "0xDA384C")]
		public void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xDA920C", Offset = "0xDA920C", VA = "0xDA920C")]
		public void SetMaterials(Material[] materials)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xDA9228", Offset = "0xDA9228", VA = "0xDA9228")]
		private Vector3[] RecalculateNormals()
		{
			return null;
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xDA95F4", Offset = "0xDA95F4", VA = "0xDA95F4")]
		private Vector3 CalculateNormal(int v0, int v1, int v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xDA974C", Offset = "0xDA974C", VA = "0xDA974C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class ControllerInputHandler : MonoBehaviour
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isInputTracking;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OVRInput.Controller primaryController;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRInput.Controller secondaryController;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject leftToolSelectIcons;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject rightToolSelectIcons;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject menuSelectRadial;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RubeButton menuSelectLeftOption;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RubeButton menuSelectTopOption;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RubeButton menuSelectRightOption;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string currentMenuSelection;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float buttonHoldTime;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float uiButtonHoldTank;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float systemButtonHoldTank;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float leftTriggerHoldTank;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float rightTriggerHoldTank;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public bool handlingToolSelect;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool handlingMenuSelect;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		private bool doneMenuSelect;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		private bool uiMenuInputHandled;

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xBB95E0", Offset = "0xBB95E0", VA = "0xBB95E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xBB9824", Offset = "0xBB9824", VA = "0xBB9824")]
		private void Update()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xBB9814", Offset = "0xBB9814", VA = "0xBB9814")]
		private void HandleInputChange(bool handTracking)
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xBBAE50", Offset = "0xBBAE50", VA = "0xBBAE50")]
		public void HandleDominantHandChange()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xBBAEC0", Offset = "0xBBAEC0", VA = "0xBBAEC0")]
		public void HandleDominantHandChange(bool leftHanded)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xBBAD68", Offset = "0xBBAD68", VA = "0xBBAD68")]
		private void ShowAndReleaseUI()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xBBAED8", Offset = "0xBBAED8", VA = "0xBBAED8")]
		public ControllerInputHandler()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class PlayerManager : MonoBehaviour
	{
		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x839FCC", Offset = "0x839FCC")]
		private static PlayerManager <Instance>k__BackingField;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject player;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMover mover;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject camRig;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PoseStateHandler poseHandler;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ChildGrouping;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ControllerInputHandler input;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform headTrackingAnchor;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x839FDC", Offset = "0x839FDC")]
		public Hand leftHand;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftWristAnchor;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TouchHandGrabInteractor leftHandInteractor;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SyntheticHand visualHandL;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform leftHandPos;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A014", Offset = "0x83A014")]
		public Controller leftController;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform leftControllerAnchor;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform leftControllerToolAnchor;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A04C", Offset = "0x83A04C")]
		public Hand rightHand;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform rightWristAnchor;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public TouchHandGrabInteractor rightHandInteractor;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public SyntheticHand visualHandR;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Transform rightHandPos;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A084", Offset = "0x83A084")]
		public Controller rightController;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform rightControllerAnchor;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform rightControllerToolAnchor;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A0BC", Offset = "0x83A0BC")]
		public bool oneHanded;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public bool leftHanded;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		public bool disableLeft;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		public bool disableRight;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float defaultSpeed;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float defaultGravity;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool isInitialized;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool isPlayerEnabled;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		private bool isHandTracking;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A0F4", Offset = "0x83A0F4")]
		public RubeToolData curToolData;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A12C", Offset = "0x83A12C")]
		public Volume cameraPostVolume;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private LiftGammaGain liftGammaGain;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Action<bool> onDominantHandChange;

		[Token(Token = "0x170000C8")]
		public static PlayerManager Instance
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x99E4B0", Offset = "0x99E4B0", VA = "0x99E4B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8408E4", Offset = "0x8408E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600087F")]
			[Address(RVA = "0x99E4FC", Offset = "0x99E4FC", VA = "0x99E4FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8408F4", Offset = "0x8408F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x99E54C", Offset = "0x99E54C", VA = "0x99E54C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x99E624", Offset = "0x99E624", VA = "0x99E624")]
		public void Init()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x99E6FC", Offset = "0x99E6FC", VA = "0x99E6FC")]
		public void SetUp()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x99E774", Offset = "0x99E774", VA = "0x99E774")]
		public void DisablePlayer()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x99EA20", Offset = "0x99EA20", VA = "0x99EA20")]
		public void EnablePlayer()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x99E7D0", Offset = "0x99E7D0", VA = "0x99E7D0")]
		public void TogglePlayerInteraction(bool on, int handed)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x99EB20", Offset = "0x99EB20", VA = "0x99EB20")]
		public void AssessInteractionState()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x99EC7C", Offset = "0x99EC7C", VA = "0x99EC7C")]
		public void RescuePlayer()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x99EC80", Offset = "0x99EC80", VA = "0x99EC80")]
		public void TeleportPlayer(string pointName)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x99ED3C", Offset = "0x99ED3C", VA = "0x99ED3C")]
		public void TeleportPlayer(Transform pointTransform)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x99ED38", Offset = "0x99ED38", VA = "0x99ED38")]
		public void TeleportPlayer(Vector3 pos, Vector3 rot)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x99ED74", Offset = "0x99ED74", VA = "0x99ED74")]
		public void ToggleDominantHand()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x99EEA4", Offset = "0x99EEA4", VA = "0x99EEA4")]
		public void ToggleOneHanded()
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x99EF68", Offset = "0x99EF68", VA = "0x99EF68")]
		public void SetGamma(float newGamma)
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x99F008", Offset = "0x99F008", VA = "0x99F008")]
		public float GetGamma()
		{
			return default(float);
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x99F03C", Offset = "0x99F03C", VA = "0x99F03C")]
		public PlayerManager()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class PlayerMover : MonoBehaviour
	{
		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A164", Offset = "0x83A164")]
		public OVRInput.Controller moverController;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OVRInput.Controller turningController;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRInput.Axis2D moverAxis;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A19C", Offset = "0x83A19C")]
		public GameObject head;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject cameraRig;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CharacterController controller;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CapsuleCollider collisionCapsule;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A1D4", Offset = "0x83A1D4")]
		public bool snapTurning;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float turnAngle;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float speed;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float gravity;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A20C", Offset = "0x83A20C")]
		private bool <canMove>k__BackingField;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A21C", Offset = "0x83A21C")]
		private bool <canTurn>k__BackingField;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float currentGravity;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 lastPos;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A22C", Offset = "0x83A22C")]
		private bool <axisReset>k__BackingField;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 moveAxis;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A23C", Offset = "0x83A23C")]
		private Vector2 <turningAxis>k__BackingField;

		[Token(Token = "0x170000C9")]
		public bool canMove
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x99F044", Offset = "0x99F044", VA = "0x99F044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840904", Offset = "0x840904")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000891")]
			[Address(RVA = "0x99F04C", Offset = "0x99F04C", VA = "0x99F04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840914", Offset = "0x840914")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public bool canTurn
		{
			[Token(Token = "0x6000892")]
			[Address(RVA = "0x99F058", Offset = "0x99F058", VA = "0x99F058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840924", Offset = "0x840924")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000893")]
			[Address(RVA = "0x99F060", Offset = "0x99F060", VA = "0x99F060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840934", Offset = "0x840934")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public bool axisReset
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0x99F06C", Offset = "0x99F06C", VA = "0x99F06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840944", Offset = "0x840944")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000895")]
			[Address(RVA = "0x99F074", Offset = "0x99F074", VA = "0x99F074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840954", Offset = "0x840954")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public Vector2 turningAxis
		{
			[Token(Token = "0x6000896")]
			[Address(RVA = "0x99F080", Offset = "0x99F080", VA = "0x99F080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840964", Offset = "0x840964")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000897")]
			[Address(RVA = "0x99F088", Offset = "0x99F088", VA = "0x99F088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840974", Offset = "0x840974")]
			set
			{
			}
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x99F090", Offset = "0x99F090", VA = "0x99F090")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x99F158", Offset = "0x99F158", VA = "0x99F158")]
		private Vector3 GetHeadOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x99F4E8", Offset = "0x99F4E8", VA = "0x99F4E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x99F1E0", Offset = "0x99F1E0", VA = "0x99F1E0")]
		public void Move(float x, float y, float z)
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x99F300", Offset = "0x99F300", VA = "0x99F300")]
		private void Turning()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x99F53C", Offset = "0x99F53C", VA = "0x99F53C")]
		public void Teleport(Vector3 position, Vector3 rotation)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x99F600", Offset = "0x99F600", VA = "0x99F600")]
		public PlayerMover()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class GrabBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<GrabBehaviour> ActionGrab;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<GrabBehaviour> ActionRelease;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<GrabBehaviour> ActionHoverStart;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<GrabBehaviour> ActionHoverEnd;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnGrab;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnRelease;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnHoverStart;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnHoverEnd;

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1C1EC9C", Offset = "0x1C1EC9C", VA = "0x1C1EC9C")]
		public GameObject Grab()
		{
			return null;
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1C1ED10", Offset = "0x1C1ED10", VA = "0x1C1ED10")]
		public void Release()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1C1ED78", Offset = "0x1C1ED78", VA = "0x1C1ED78")]
		public GameObject HoverStart()
		{
			return null;
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1C1EDEC", Offset = "0x1C1EDEC", VA = "0x1C1EDEC")]
		public void HoverEnd()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1C1EE54", Offset = "0x1C1EE54", VA = "0x1C1EE54")]
		public GrabBehaviour()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public enum ToolState
	{
		[Token(Token = "0x40009D1")]
		Disabled,
		[Token(Token = "0x40009D2")]
		Enabled,
		[Token(Token = "0x40009D3")]
		Active,
		[Token(Token = "0x40009D4")]
		CanActivate,
		[Token(Token = "0x40009D5")]
		Activated,
		[Token(Token = "0x40009D6")]
		Deactivated
	}
	[Token(Token = "0x20001B9")]
	public class HandTool : MonoMachine<ToolState>
	{
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1C2555C", Offset = "0x1C2555C", VA = "0x1C2555C", Slot = "34")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x1C25574", Offset = "0x1C25574", VA = "0x1C25574", Slot = "35")]
		public virtual void Disable()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x1C2558C", Offset = "0x1C2558C", VA = "0x1C2558C", Slot = "36")]
		public virtual void Activate()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1C255A4", Offset = "0x1C255A4", VA = "0x1C255A4", Slot = "37")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1C255BC", Offset = "0x1C255BC", VA = "0x1C255BC")]
		public HandTool()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class PointerTool : HandTool
	{
		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A24C", Offset = "0x83A24C")]
		public Transform aimer;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public LayerMask layer;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public LineRenderer line;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A284", Offset = "0x83A284")]
		public float lineLength;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float maxLineLength;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject lineIndicator;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Gradient colorDefault;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Gradient colorHover;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Gradient colorGrabbing;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A2BC", Offset = "0x83A2BC")]
		private float rayCastStepSize;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3[] _lineArr;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RaycastHit _aimHit;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _hitPosition;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 _grabOffset;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private GameObject grabbableObject;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GameObject grabbedObject;

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x99F910", Offset = "0x99F910", VA = "0x99F910")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x99F928", Offset = "0x99F928", VA = "0x99F928", Slot = "36")]
		public override void Activate()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x99F9D4", Offset = "0x99F9D4", VA = "0x99F9D4", Slot = "37")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x99F9EC", Offset = "0x99F9EC", VA = "0x99F9EC")]
		private void Enter_Disabled()
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x99FAE8", Offset = "0x99FAE8", VA = "0x99FAE8")]
		private void Enter_Enabled()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x99FB20", Offset = "0x99FB20", VA = "0x99FB20")]
		private void Refresh_Active(float delta)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x99FDDC", Offset = "0x99FDDC", VA = "0x99FDDC")]
		private void Refresh_CanActivate(float delta)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x99FE7C", Offset = "0x99FE7C", VA = "0x99FE7C")]
		private void Enter_Activated()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x99FE88", Offset = "0x99FE88", VA = "0x99FE88")]
		private void FixedRefresh_Activated(float delta)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x99FF34", Offset = "0x99FF34", VA = "0x99FF34")]
		private void Refresh_Activated(float delta)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x99FF38", Offset = "0x99FF38", VA = "0x99FF38")]
		private void Enter_Deactivated()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x99FBC0", Offset = "0x99FBC0", VA = "0x99FBC0")]
		private GameObject RaycastLinePointer()
		{
			return null;
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x99F9F0", Offset = "0x99F9F0", VA = "0x99F9F0")]
		private void UpdateLineRenderer()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x99FF74", Offset = "0x99FF74", VA = "0x99FF74")]
		private void UpdateLineColor()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x99FFF8", Offset = "0x99FFF8", VA = "0x99FFF8")]
		private void UpdateLineIndicator()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x9A0130", Offset = "0x9A0130", VA = "0x9A0130")]
		public PointerTool()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class PreviewToolHandler : MonoBehaviour
	{
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer[] meshRenderers;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ToolGrabObjectPreview mPreview;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TouchHandGrabInteractable mInteractable;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform anchorTransform;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool previewActive;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool followAnchor;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool cullPreview;

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x9A2A68", Offset = "0x9A2A68", VA = "0x9A2A68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x9A2ABC", Offset = "0x9A2ABC", VA = "0x9A2ABC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x9A2CEC", Offset = "0x9A2CEC", VA = "0x9A2CEC")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x9A2D74", Offset = "0x9A2D74", VA = "0x9A2D74")]
		public void SetPreview(ToolGrabObjectPreview p)
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x9A2C00", Offset = "0x9A2C00", VA = "0x9A2C00")]
		public void ShowPreview()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x9A2B18", Offset = "0x9A2B18", VA = "0x9A2B18")]
		public void HidePreview()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x9A2D94", Offset = "0x9A2D94", VA = "0x9A2D94")]
		public void ToggleFollowAnchor(bool on)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x9A2DA0", Offset = "0x9A2DA0", VA = "0x9A2DA0")]
		public PreviewToolHandler()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class RubeLevelTool : RubeTool
	{
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1C0EE90", Offset = "0x1C0EE90", VA = "0x1C0EE90", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1C0EEE8", Offset = "0x1C0EEE8", VA = "0x1C0EEE8", Slot = "13")]
		public override void OnPoke(Collider pokedObj)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1C0F034", Offset = "0x1C0F034", VA = "0x1C0F034", Slot = "12")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1C0F06C", Offset = "0x1C0F06C", VA = "0x1C0F06C")]
		public RubeLevelTool()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class RubeNudgeTool : RubeTool
	{
		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshProUGUI targetNameText;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject nudgeInputsGroup;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public RubeSubObject targetRubeSubO;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RubeObject targetRubeO;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool inWorldCoords;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A2F4", Offset = "0x83A2F4")]
		public bool isTranslating;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform translatorAnchor;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform translatorTransform;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 translatorStartPos;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 rubeStartPos;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion translatorStartRot;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Quaternion rubeStartRot;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float dampeningValue;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool translate;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		private bool rotate;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A32C", Offset = "0x83A32C")]
		public RubeToggleHelper coordsToggle;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public RubeToggleHelper translateToggle;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public RubeToggleHelper rotateToggle;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Slider dampeningSlider;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public bool pendingCommit;

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xB08FEC", Offset = "0xB08FEC", VA = "0xB08FEC", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xB092A0", Offset = "0xB092A0", VA = "0xB092A0", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xB09340", Offset = "0xB09340", VA = "0xB09340")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xB09954", Offset = "0xB09954", VA = "0xB09954", Slot = "11")]
		public override void OnGrab()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xB09BFC", Offset = "0xB09BFC", VA = "0xB09BFC", Slot = "12")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xB09E6C", Offset = "0xB09E6C", VA = "0xB09E6C", Slot = "13")]
		public override void OnPoke(Collider pokedObj)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xB0A070", Offset = "0xB0A070", VA = "0xB0A070")]
		private void UpdateUIOnUndo(string state)
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xB0A0FC", Offset = "0xB0A0FC", VA = "0xB0A0FC", Slot = "14")]
		public override void UpdateUIWindow()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xB0A408", Offset = "0xB0A408", VA = "0xB0A408")]
		public void ToggleNudgeCoordinates()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xB0A424", Offset = "0xB0A424", VA = "0xB0A424")]
		public void DampeningValueSlider(float sliderValue)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xB09270", Offset = "0xB09270", VA = "0xB09270")]
		public void HideTranslator()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xB0A484", Offset = "0xB0A484", VA = "0xB0A484")]
		public void StartTranslate()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xB0A76C", Offset = "0xB0A76C", VA = "0xB0A76C")]
		public void EndTranslate()
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xB0A8C4", Offset = "0xB0A8C4", VA = "0xB0A8C4")]
		public void ToggleTranslate()
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xB0A93C", Offset = "0xB0A93C", VA = "0xB0A93C")]
		public void ToggleRotate()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xB0A9B4", Offset = "0xB0A9B4", VA = "0xB0A9B4")]
		public void ClearTarget()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xB0A9C8", Offset = "0xB0A9C8", VA = "0xB0A9C8")]
		public RubeNudgeTool()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class RubeSizerTool : RubeTool
	{
		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshProUGUI targetNameText;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextMeshProUGUI curScaleText;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Slider scaleSlider;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject scaleInputsGroup;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public RubeObject targetRubeO;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RubeScaleHandler targetScaleHandler;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public bool pendingCommit;

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xB0F7B0", Offset = "0xB0F7B0", VA = "0xB0F7B0", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xB0F8E0", Offset = "0xB0F8E0", VA = "0xB0F8E0", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xB0F930", Offset = "0xB0F930", VA = "0xB0F930", Slot = "13")]
		public override void OnPoke(Collider pokedObj)
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xB0FBCC", Offset = "0xB0FBCC", VA = "0xB0FBCC")]
		private void UpdateUIOnUndo(string state)
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xB0FC58", Offset = "0xB0FC58", VA = "0xB0FC58", Slot = "14")]
		public override void UpdateUIWindow()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xB10070", Offset = "0xB10070", VA = "0xB10070")]
		public void ScaleSlider(float sliderValue)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xB0FB38", Offset = "0xB0FB38", VA = "0xB0FB38")]
		public void CommitScale()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xB10160", Offset = "0xB10160", VA = "0xB10160")]
		public void ResetSize()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xB0FF80", Offset = "0xB0FF80", VA = "0xB0FF80")]
		public void UpdateCurScaleText()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xB0F270", Offset = "0xB0F270", VA = "0xB0F270")]
		public void ClearTarget()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xB101DC", Offset = "0xB101DC", VA = "0xB101DC")]
		public RubeSizerTool()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class RubeTool : MonoBehaviour
	{
		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string displayName;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string displayDescription;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public string toolName;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isActiveTool;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool isGrabbed;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SoundGroup]
		public string pokeSuccessSound;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform followTarget;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TouchHandGrabInteractable mInteractable;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InteractableUnityEventWrapper mEvents;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public ToolUI toolUI;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public ToolTipColliderHook tipHook;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool inCooldown;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pokeCooldown;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float cdTank;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isSetUp;

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xB09264", Offset = "0xB09264", VA = "0xB09264", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xB092F0", Offset = "0xB092F0", VA = "0xB092F0", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xB113DC", Offset = "0xB113DC", VA = "0xB113DC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xB114C4", Offset = "0xB114C4", VA = "0xB114C4", Slot = "6")]
		public virtual void SetUp()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xB115E8", Offset = "0xB115E8", VA = "0xB115E8", Slot = "7")]
		public virtual void SetToActiveTool()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xB1167C", Offset = "0xB1167C", VA = "0xB1167C", Slot = "8")]
		public virtual void RemoveFromActiveTool()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xB116D0", Offset = "0xB116D0", VA = "0xB116D0", Slot = "9")]
		public virtual void ShowTool()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xB116F8", Offset = "0xB116F8", VA = "0xB116F8", Slot = "10")]
		public virtual void HideTool()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xB09994", Offset = "0xB09994", VA = "0xB09994", Slot = "11")]
		public virtual void OnGrab()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xB09C3C", Offset = "0xB09C3C", VA = "0xB09C3C", Slot = "12")]
		public virtual void OnRelease()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xB0A050", Offset = "0xB0A050", VA = "0xB0A050", Slot = "13")]
		public virtual void OnPoke(Collider pokedObj)
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xB11788", Offset = "0xB11788", VA = "0xB11788", Slot = "14")]
		public virtual void UpdateUIWindow()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xB11720", Offset = "0xB11720", VA = "0xB11720")]
		public void SnapToActiveAnchor()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xB1178C", Offset = "0xB1178C", VA = "0xB1178C", Slot = "15")]
		public virtual void ResetToolDimensions()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xB1181C", Offset = "0xB1181C", VA = "0xB1181C")]
		public void SetUIFollow(Transform anchor)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xB11824", Offset = "0xB11824", VA = "0xB11824")]
		public void SetParent(Transform newParent)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xB0A9E8", Offset = "0xB0A9E8", VA = "0xB0A9E8")]
		public RubeTool()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class ToolButtonClick : MonoBehaviour
	{
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableInteract;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string nameFilter;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material defaultMat;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material selectedMat;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xC2EED4", Offset = "0xC2EED4", VA = "0xC2EED4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xC2EFAC", Offset = "0xC2EFAC", VA = "0xC2EFAC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xC2F00C", Offset = "0xC2F00C", VA = "0xC2F00C")]
		public void ToggleInteractable(bool on)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xC2F018", Offset = "0xC2F018", VA = "0xC2F018")]
		public ToolButtonClick()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class ToolCuller : MonoBehaviour
	{
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xC2F06C", Offset = "0xC2F06C", VA = "0xC2F06C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xC2F114", Offset = "0xC2F114", VA = "0xC2F114")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xC2F1C0", Offset = "0xC2F1C0", VA = "0xC2F1C0")]
		public ToolCuller()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class ToolGrabObjectPreview : MonoBehaviour
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableOnStart;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject toolPrefab;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform previewFollowAnchor;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject previewObject;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PreviewToolHandler toolHandler;

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xC2F1C8", Offset = "0xC2F1C8", VA = "0xC2F1C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xC2F1CC", Offset = "0xC2F1CC", VA = "0xC2F1CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xC2F2B0", Offset = "0xC2F2B0", VA = "0xC2F2B0")]
		public void EnablePreview()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xC2F2CC", Offset = "0xC2F2CC", VA = "0xC2F2CC")]
		public void DisablePreview()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xC2F2E8", Offset = "0xC2F2E8", VA = "0xC2F2E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xC2F2EC", Offset = "0xC2F2EC", VA = "0xC2F2EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xC2F30C", Offset = "0xC2F30C", VA = "0xC2F30C")]
		public ToolGrabObjectPreview()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class ToolTipColliderHook : MonoBehaviour
	{
		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool engaged;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RubeTool mTool;

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xC2F584", Offset = "0xC2F584", VA = "0xC2F584")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xC2F5E4", Offset = "0xC2F5E4", VA = "0xC2F5E4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xC2F6CC", Offset = "0xC2F6CC", VA = "0xC2F6CC")]
		public ToolTipColliderHook()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class ToolUI : MonoBehaviour
	{
		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A3C4", Offset = "0x83A3C4")]
		public GameObject[] activeOnGameStart;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool useTopAnchor;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool invertToolPosition;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A3FC", Offset = "0x83A3FC")]
		public RubeTool activeTool;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform activeToolAnchorTop;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform activeToolAnchorSide;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A434", Offset = "0x83A434")]
		public Transform activeToolPivot;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject leftButtonMenu;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject rightButtonMenu;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A46C", Offset = "0x83A46C")]
		public Transform toolsObject;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RubeLevelTool levelTool;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RubeSizerTool sizerTool;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RubeNudgeTool nudgeTool;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A4A4", Offset = "0x83A4A4")]
		public GameObject windowsObject;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject toolSelectWindow;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject levelToolWindow;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject sizerToolWindow;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject nudgeToolWindow;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject toolWindowButton;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject changeWindowButton;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject disabledGraphics;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool windowActive;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string curWindow;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A4DC", Offset = "0x83A4DC")]
		public bool toolOnController;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool toolOnLeftController;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int maxTools;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int toolIndex;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool queueHide;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private PalmUIController palmUI;

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xC2F6D4", Offset = "0xC2F6D4", VA = "0xC2F6D4")]
		public void SetUp()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xC2FAAC", Offset = "0xC2FAAC", VA = "0xC2FAAC")]
		public void EnterPlay()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xC2FE8C", Offset = "0xC2FE8C", VA = "0xC2FE8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xC2FEA0", Offset = "0xC2FEA0", VA = "0xC2FEA0")]
		public void SetActiveTool(int targetToolIndex)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xC2FB8C", Offset = "0xC2FB8C", VA = "0xC2FB8C")]
		public void SetActiveTool(string targetToolName)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xC2FD14", Offset = "0xC2FD14", VA = "0xC2FD14")]
		public void SetActiveTool(RubeTool targetTool)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xC2FFB4", Offset = "0xC2FFB4", VA = "0xC2FFB4")]
		public void ShowToolWindow()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xC2FFD0", Offset = "0xC2FFD0", VA = "0xC2FFD0")]
		public void ShowToolWindow(string tool)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xC3033C", Offset = "0xC3033C", VA = "0xC3033C")]
		public void QueueHideToolWindow()
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xC2F8E8", Offset = "0xC2F8E8", VA = "0xC2F8E8")]
		public void HideToolWindow(bool showLast = true)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xC304D0", Offset = "0xC304D0", VA = "0xC304D0")]
		public void ToggleToolWindow()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xC302C0", Offset = "0xC302C0", VA = "0xC302C0")]
		private void HideWindows()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xC30548", Offset = "0xC30548", VA = "0xC30548")]
		public void SetToolHand()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xC306AC", Offset = "0xC306AC", VA = "0xC306AC")]
		public void HideToolMenu()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xC307A4", Offset = "0xC307A4", VA = "0xC307A4")]
		public void ShowToolMenu()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xC30800", Offset = "0xC30800", VA = "0xC30800")]
		public Transform GetActiveToolAnchor()
		{
			return null;
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xC2A198", Offset = "0xC2A198", VA = "0xC2A198")]
		public void ToggleToolPosition()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xC2A2A4", Offset = "0xC2A2A4", VA = "0xC2A2A4")]
		public void ToggleToolOrientation()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xC3081C", Offset = "0xC3081C", VA = "0xC3081C")]
		public void ToggleControllerTool(bool on, bool leftHand = true, bool openMenuOnOff = true)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xC30B74", Offset = "0xC30B74", VA = "0xC30B74")]
		public void EndControllerTool(bool openMenuOnOff = true, bool disableToolSwap = false)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xC30CA4", Offset = "0xC30CA4", VA = "0xC30CA4")]
		public void CycleControllerToolOption(bool left)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xC30400", Offset = "0xC30400", VA = "0xC30400")]
		public bool isToolGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xC30D20", Offset = "0xC30D20", VA = "0xC30D20")]
		public void ProcessInputChange(bool handTracking)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xC30D40", Offset = "0xC30D40", VA = "0xC30D40")]
		public ToolUI()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class RecordingStageHandler : MonoBehaviour
	{
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer panoramaMeshRenderer;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer ceilingMeshRenderer;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer floorMeshRenderer;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RecordingStageBackdrop[] backdrops;

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x9A7190", Offset = "0x9A7190", VA = "0x9A7190")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x9A75F8", Offset = "0x9A75F8", VA = "0x9A75F8")]
		public void SetBackdrop(string targetBackdrop)
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x9A7714", Offset = "0x9A7714", VA = "0x9A7714")]
		public RecordingStageHandler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C6")]
	public class RecordingStageBackdrop
	{
		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material panoramaMaterial;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ceilingMaterial;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material floorMaterial;

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x9A7188", Offset = "0x9A7188", VA = "0x9A7188")]
		public RecordingStageBackdrop()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public enum RoomState
	{
		[Token(Token = "0x4000A4A")]
		Unloaded,
		[Token(Token = "0x4000A4B")]
		Loading,
		[Token(Token = "0x4000A4C")]
		Loaded,
		[Token(Token = "0x4000A4D")]
		PromptRoomCapture,
		[Token(Token = "0x4000A4E")]
		LoadingRoomCaptureScene,
		[Token(Token = "0x4000A4F")]
		RoomCapture,
		[Token(Token = "0x4000A50")]
		UnloadingRoomCaptureScene,
		[Token(Token = "0x4000A51")]
		Error
	}
	[Token(Token = "0x20001C8")]
	public enum RoomObjectClassification
	{
		[Token(Token = "0x4000A53")]
		Floor,
		[Token(Token = "0x4000A54")]
		Ceiling,
		[Token(Token = "0x4000A55")]
		WallFace,
		[Token(Token = "0x4000A56")]
		Desk,
		[Token(Token = "0x4000A57")]
		Couch,
		[Token(Token = "0x4000A58")]
		DoorFrame,
		[Token(Token = "0x4000A59")]
		WindowFrame,
		[Token(Token = "0x4000A5A")]
		Other
	}
	[Serializable]
	[Token(Token = "0x20001C9")]
	public class RoomObjectStyle
	{
		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomObjectClassification ObjectType;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Prefab;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material[] Material;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Invisible;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool PassthroughSurface;

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x1C032C8", Offset = "0x1C032C8", VA = "0x1C032C8")]
		public RoomObjectStyle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001CA")]
	public class RoomTheme
	{
		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RoomObjectStyle> Styles;

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1C032D8", Offset = "0x1C032D8", VA = "0x1C032D8")]
		public RoomTheme()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class RoomManager : MonoMachine<RoomState>
	{
		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string RoomCaptureSceneName;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private RoomTheme[] RoomThemes;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private RoomTheme[] RecordingRoomThemes;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool AutoLoadRoomCapture;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		public GameObject PlaceholderFloor;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private bool FreezeAnchorsDuringSim;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A574", Offset = "0x83A574")]
		private static RoomManager <Instance>k__BackingField;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action OnRoomLoadError;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<OVRSpatialAnchor> OVRSpatialAnchors;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int _ovrAnchorUpdateIndex;

		[Token(Token = "0x4000A6C")]
		private const int MAX_OVR_UPDATES = 1;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private OVRSceneManager _ovrSceneManager;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool iRoomEditRequested;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool iRoomEditComplete;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool iLoadSceneData;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		private bool iSceneDataLoaded;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool iPromptRoomCaptureOK;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool iPromptRoomCaptureCancel;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		private bool iError;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
		private bool iReloadRoom;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A584", Offset = "0x83A584")]
		private List<RoomObject> <RoomObjects>k__BackingField;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A594", Offset = "0x83A594")]
		private List<RoomObject> <WallObjects>k__BackingField;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A5A4", Offset = "0x83A5A4")]
		private List<RoomObject> <FurnitureObjects>k__BackingField;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A5B4", Offset = "0x83A5B4")]
		private RoomObject <Floor>k__BackingField;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A5C4", Offset = "0x83A5C4")]
		private RoomObject <Ceiling>k__BackingField;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Dictionary<RoomObjectClassification, RoomObjectStyle> _roomObjectStyleLookup;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private string _errorString;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private RoomTheme _currentTheme;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RoomTheme _currentRecordingTheme;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool _entityQueryTriggeredRoomCapture;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int _expectedRoomObjectCount;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int _loadedRoomObjectCount;

		[Token(Token = "0x170000CD")]
		public static RoomManager Instance
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0x1BFEC8C", Offset = "0x1BFEC8C", VA = "0x1BFEC8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840984", Offset = "0x840984")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000922")]
			[Address(RVA = "0x1BFECF0", Offset = "0x1BFECF0", VA = "0x1BFECF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840994", Offset = "0x840994")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public List<RoomObject> RoomObjects
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x1BFED58", Offset = "0x1BFED58", VA = "0x1BFED58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8409A4", Offset = "0x8409A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000924")]
			[Address(RVA = "0x1BFED60", Offset = "0x1BFED60", VA = "0x1BFED60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8409B4", Offset = "0x8409B4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public List<RoomObject> WallObjects
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0x1BFED68", Offset = "0x1BFED68", VA = "0x1BFED68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8409C4", Offset = "0x8409C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000926")]
			[Address(RVA = "0x1BFED70", Offset = "0x1BFED70", VA = "0x1BFED70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8409D4", Offset = "0x8409D4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public List<RoomObject> FurnitureObjects
		{
			[Token(Token = "0x6000927")]
			[Address(RVA = "0x1BFED78", Offset = "0x1BFED78", VA = "0x1BFED78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8409E4", Offset = "0x8409E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000928")]
			[Address(RVA = "0x1BFED80", Offset = "0x1BFED80", VA = "0x1BFED80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8409F4", Offset = "0x8409F4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public RoomObject Floor
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0x1BFED88", Offset = "0x1BFED88", VA = "0x1BFED88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840A04", Offset = "0x840A04")]
			get
			{
				return null;
			}
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x1BFED90", Offset = "0x1BFED90", VA = "0x1BFED90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840A14", Offset = "0x840A14")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public RoomObject Ceiling
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0x1BFED98", Offset = "0x1BFED98", VA = "0x1BFED98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840A24", Offset = "0x840A24")]
			get
			{
				return null;
			}
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x1BFEDA0", Offset = "0x1BFEDA0", VA = "0x1BFEDA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840A34", Offset = "0x840A34")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public bool HasValidFloorAnchor
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x1BFEDA8", Offset = "0x1BFEDA8", VA = "0x1BFEDA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D4")]
		public ulong FloorAnchorHandle
		{
			[Token(Token = "0x600092E")]
			[Address(RVA = "0x1BFEED0", Offset = "0x1BFEED0", VA = "0x1BFEED0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000D5")]
		public string ErrorString
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x1C01278", Offset = "0x1C01278", VA = "0x1C01278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x1BFEF40", Offset = "0x1BFEF40", VA = "0x1BFEF40")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x1BFF158", Offset = "0x1BFF158", VA = "0x1BFF158")]
		private void Init()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x1C0011C", Offset = "0x1C0011C", VA = "0x1C0011C")]
		public RoomObjectClassification GetObjectClassificationFromString(string label)
		{
			return default(RoomObjectClassification);
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x1C00380", Offset = "0x1C00380", VA = "0x1C00380")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x1C0042C", Offset = "0x1C0042C", VA = "0x1C0042C")]
		private void CheckRoomObjectsStillValid()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x1C00674", Offset = "0x1C00674", VA = "0x1C00674", Slot = "15")]
		public override void Refresh(float delta)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x1C007FC", Offset = "0x1C007FC", VA = "0x1C007FC")]
		private void UpdateRoomAnchors()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x1C009D4", Offset = "0x1C009D4", VA = "0x1C009D4")]
		public void StartRoomEditor()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x1C009E0", Offset = "0x1C009E0", VA = "0x1C009E0")]
		public void SetRoomTheme()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x1BFF4C4", Offset = "0x1BFF4C4", VA = "0x1BFF4C4")]
		public void SetRoomTheme(string themeName)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x1BFF5E4", Offset = "0x1BFF5E4", VA = "0x1BFF5E4")]
		public void SetRoomTheme(RoomTheme theme)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1C01108", Offset = "0x1C01108", VA = "0x1C01108")]
		public void SetRecordingRoomTheme()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x1BFFB28", Offset = "0x1BFFB28", VA = "0x1BFFB28")]
		public void SetRecordingRoomTheme(string themeName)
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x1BFFC48", Offset = "0x1BFFC48", VA = "0x1BFFC48")]
		public void SetRecordingRoomTheme(RoomTheme theme)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x1C01110", Offset = "0x1C01110", VA = "0x1C01110")]
		public RoomObjectStyle GetRoomObjectStyle(RoomObjectClassification classification = RoomObjectClassification.Other)
		{
			return null;
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x1C011A4", Offset = "0x1C011A4", VA = "0x1C011A4")]
		public void RegisterRoomObject(RoomObject roomObject)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x1C01280", Offset = "0x1C01280", VA = "0x1C01280", Slot = "14")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x1C012D4", Offset = "0x1C012D4", VA = "0x1C012D4", Slot = "25")]
		protected override void ClearFramewiseInputs()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x1C01328", Offset = "0x1C01328", VA = "0x1C01328", Slot = "22")]
		protected override void RefreshInputs(float delta)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x1C013D0", Offset = "0x1C013D0", VA = "0x1C013D0", Slot = "27")]
		protected override bool StateTransition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x1C01754", Offset = "0x1C01754", VA = "0x1C01754", Slot = "28")]
		protected override bool ChangeState(RoomState newState, bool allowReentry = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x1C01884", Offset = "0x1C01884", VA = "0x1C01884")]
		private void Enter_Unloaded()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x1C019F4", Offset = "0x1C019F4", VA = "0x1C019F4")]
		private void Enter_Loading()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x1C01FB0", Offset = "0x1C01FB0", VA = "0x1C01FB0")]
		private void Exit_Loading()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x1C020FC", Offset = "0x1C020FC", VA = "0x1C020FC")]
		private void Enter_Loaded()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x1C021D0", Offset = "0x1C021D0", VA = "0x1C021D0")]
		private void Enter_PromptRoomCapture()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x1C023F4", Offset = "0x1C023F4", VA = "0x1C023F4")]
		private void Enter_LoadingRoomCaptureScene()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x1C0263C", Offset = "0x1C0263C", VA = "0x1C0263C")]
		private void Enter_UnloadingRoomCaptureScene()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x1C0277C", Offset = "0x1C0277C", VA = "0x1C0277C")]
		private void Enter_Error()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x1C0168C", Offset = "0x1C0168C", VA = "0x1C0168C")]
		private bool Query_EditSceneLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x1C01D6C", Offset = "0x1C01D6C", VA = "0x1C01D6C")]
		private void ClearRoomObjects()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x1C0287C", Offset = "0x1C0287C", VA = "0x1C0287C")]
		private void ButtonHandler_RoomCaptureConfirm()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x1C02900", Offset = "0x1C02900", VA = "0x1C02900")]
		private void ButtonHandler_RoomCaptureCancel()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x1C02984", Offset = "0x1C02984", VA = "0x1C02984")]
		private void SceneLoadSuccess()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x1C02990", Offset = "0x1C02990", VA = "0x1C02990")]
		private void RoomEditComplete()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x1C02A14", Offset = "0x1C02A14", VA = "0x1C02A14")]
		private void RoomEditError()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x1C02A9C", Offset = "0x1C02A9C", VA = "0x1C02A9C")]
		public RoomManager()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x1C02C1C", Offset = "0x1C02C1C", VA = "0x1C02C1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840A44", Offset = "0x840A44")]
		private void <Init>b__55_0()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x836280", Offset = "0x836280")]
	public class RoomObject : MonoBehaviour
	{
		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRSceneAnchor _ovrSceneObject;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer[] _renderers;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<RoomObjectClassification> _classifications;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RoomObjectClassification _mainClassification;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RoomObjectStyle _currentStyle;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _runtimeObject;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A5D4", Offset = "0x83A5D4")]
		private bool <IsWall>k__BackingField;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A5E4", Offset = "0x83A5E4")]
		private bool <IsFloor>k__BackingField;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A5F4", Offset = "0x83A5F4")]
		private bool <IsCeiling>k__BackingField;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A604", Offset = "0x83A604")]
		private bool <IsWindow>k__BackingField;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A614", Offset = "0x83A614")]
		private bool <IsDoor>k__BackingField;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A624", Offset = "0x83A624")]
		private bool <IsFurniture>k__BackingField;

		[Token(Token = "0x170000D6")]
		public bool IsWall
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x1C02C28", Offset = "0x1C02C28", VA = "0x1C02C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840A54", Offset = "0x840A54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x1C02C30", Offset = "0x1C02C30", VA = "0x1C02C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840A64", Offset = "0x840A64")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public bool IsFloor
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x1C02C3C", Offset = "0x1C02C3C", VA = "0x1C02C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840A74", Offset = "0x840A74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x1C02C44", Offset = "0x1C02C44", VA = "0x1C02C44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840A84", Offset = "0x840A84")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public bool IsCeiling
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x1C02C50", Offset = "0x1C02C50", VA = "0x1C02C50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840A94", Offset = "0x840A94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600095C")]
			[Address(RVA = "0x1C02C58", Offset = "0x1C02C58", VA = "0x1C02C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840AA4", Offset = "0x840AA4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public bool IsWindow
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0x1C02C64", Offset = "0x1C02C64", VA = "0x1C02C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840AB4", Offset = "0x840AB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x1C02C6C", Offset = "0x1C02C6C", VA = "0x1C02C6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840AC4", Offset = "0x840AC4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public bool IsDoor
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x1C02C78", Offset = "0x1C02C78", VA = "0x1C02C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840AD4", Offset = "0x840AD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x1C02C80", Offset = "0x1C02C80", VA = "0x1C02C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840AE4", Offset = "0x840AE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public bool IsFurniture
		{
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x1C02C8C", Offset = "0x1C02C8C", VA = "0x1C02C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840AF4", Offset = "0x840AF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x1C02C94", Offset = "0x1C02C94", VA = "0x1C02C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840B04", Offset = "0x840B04")]
			private set
			{
			}
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1C02CA0", Offset = "0x1C02CA0", VA = "0x1C02CA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x1C009E8", Offset = "0x1C009E8", VA = "0x1C009E8")]
		public void UpdateRoomObjectStyle(int variantCount = 0)
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x1C03250", Offset = "0x1C03250", VA = "0x1C03250")]
		public RoomObject()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8362E0", Offset = "0x8362E0")]
	public class RubeAsset : ScriptableObject
	{
		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string assetName;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string assetDescription;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject prefab;

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x1C09210", Offset = "0x1C09210", VA = "0x1C09210")]
		public RubeAsset()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class RubeAssetDatabase
	{
		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, RubeContainer> _idToAsset;

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x1C09280", Offset = "0x1C09280", VA = "0x1C09280")]
		public RubeAssetDatabase(RubeCatalogue rubeCatalogue)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x1C094F8", Offset = "0x1C094F8", VA = "0x1C094F8")]
		public bool TryGetAsset(string assetName, out RubeContainer asset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x83632C", Offset = "0x83632C")]
	public class RubeCatalogue : ScriptableObject
	{
		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RubeContainer> Assets;

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x1C0AF74", Offset = "0x1C0AF74", VA = "0x1C0AF74")]
		public RubeCatalogue()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x836380", Offset = "0x836380")]
	public class RubeContainer : ScriptableObject
	{
		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A634", Offset = "0x83A634")]
		public string assetName;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string displayName;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string assetDescription;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject prefab;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A66C", Offset = "0x83A66C")]
		public ObjectCategory sortingCategory;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A6A4", Offset = "0x83A6A4")]
		public float volume;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A6DC", Offset = "0x83A6DC")]
		public bool isSimulated;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isScalable;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool isBreakable;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool isLevelable;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool isAutoLeveling;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool isSnappable;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool isSnapSurface;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool DebugObject;

		[Token(Token = "0x170000DC")]
		public string DisplayName
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x1C0BA78", Offset = "0x1C0BA78", VA = "0x1C0BA78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x1C0BAB4", Offset = "0x1C0BAB4", VA = "0x1C0BAB4")]
		public RubeContainer()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public enum ObjectCategory
	{
		[Token(Token = "0x4000AA2")]
		dev,
		[Token(Token = "0x4000AA3")]
		balls,
		[Token(Token = "0x4000AA4")]
		movers,
		[Token(Token = "0x4000AA5")]
		containers,
		[Token(Token = "0x4000AA6")]
		tracks,
		[Token(Token = "0x4000AA7")]
		mechanical,
		[Token(Token = "0x4000AA8")]
		musical,
		[Token(Token = "0x4000AA9")]
		blocks,
		[Token(Token = "0x4000AAA")]
		furniture,
		[Token(Token = "0x4000AAB")]
		misc
	}
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8363D4", Offset = "0x8363D4")]
	public class RubeToolData : ScriptableObject
	{
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string toolName;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string toolDescription;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject inHandPrefab;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite uiImage;

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xB118B0", Offset = "0xB118B0", VA = "0xB118B0")]
		public RubeToolData()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public enum ConstructState
	{
		[Token(Token = "0x4000AB1")]
		Disabled,
		[Token(Token = "0x4000AB2")]
		Active,
		[Token(Token = "0x4000AB3")]
		Hover,
		[Token(Token = "0x4000AB4")]
		Grabbed
	}
	[Token(Token = "0x20001D4")]
	[SelectionBase]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x836428", Offset = "0x836428")]
	public class RubeConstruct : MonoMachine<ConstructState>
	{
		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public RubeContainer rubeContainer;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject bounds;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject rubeObjects;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject handles;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject _rubeObjectsClone;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GrabBehaviour _grabBehaviour;

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x1C0B0B8", Offset = "0x1C0B0B8", VA = "0x1C0B0B8")]
		public void Awake()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x1C0B0F0", Offset = "0x1C0B0F0", VA = "0x1C0B0F0")]
		public void RegisterListeners()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x1C0B314", Offset = "0x1C0B314", VA = "0x1C0B314")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x1C0B438", Offset = "0x1C0B438", VA = "0x1C0B438")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x1C0B538", Offset = "0x1C0B538", VA = "0x1C0B538")]
		private GameObject CloneObjects()
		{
			return null;
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x1C0B318", Offset = "0x1C0B318", VA = "0x1C0B318")]
		private void ActivateConstruct()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x1C0B61C", Offset = "0x1C0B61C", VA = "0x1C0B61C")]
		private void DeactivateConstruct()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x1C0B73C", Offset = "0x1C0B73C", VA = "0x1C0B73C")]
		private void ActivateBound()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x1C0B818", Offset = "0x1C0B818", VA = "0x1C0B818")]
		private void DeactivateBound()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x1C0B8E0", Offset = "0x1C0B8E0", VA = "0x1C0B8E0")]
		private void Enter_Disabled()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x1C0B904", Offset = "0x1C0B904", VA = "0x1C0B904")]
		private void Enter_Active()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x1C0B938", Offset = "0x1C0B938", VA = "0x1C0B938")]
		private void Enter_Hover()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x1C0B93C", Offset = "0x1C0B93C", VA = "0x1C0B93C")]
		private void Exit_Hover()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x1C0B940", Offset = "0x1C0B940", VA = "0x1C0B940")]
		private void Enter_Grabbed()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x1C0B96C", Offset = "0x1C0B96C", VA = "0x1C0B96C")]
		private void Exit_Grabbed()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x1C0B9A0", Offset = "0x1C0B9A0", VA = "0x1C0B9A0")]
		private void ActionListener_Grab(GrabBehaviour grabBehaviour)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x1C0B9B8", Offset = "0x1C0B9B8", VA = "0x1C0B9B8")]
		private void ActionListener_Release(GrabBehaviour grabBehaviour)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x1C0B9D0", Offset = "0x1C0B9D0", VA = "0x1C0B9D0")]
		private void ActionListener_HoverStart(GrabBehaviour grabBehaviour)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x1C0B9E8", Offset = "0x1C0B9E8", VA = "0x1C0B9E8")]
		private void ActionListener_HoverEnd(GrabBehaviour grabBehaviour)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x1C0BA00", Offset = "0x1C0BA00", VA = "0x1C0BA00")]
		public RubeConstruct()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class HandleLODGroupHook : MonoBehaviour
	{
		[Token(Token = "0x6000981")]
		[Address(RVA = "0x1C25DBC", Offset = "0x1C25DBC", VA = "0x1C25DBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x1C25EB0", Offset = "0x1C25EB0", VA = "0x1C25EB0")]
		public HandleLODGroupHook()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x836498", Offset = "0x836498")]
	public class RubeHandle : RubeComponent
	{
		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RubeObject rubeObject;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TouchHandGrabInteractable mTouchInteractable;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabInteractable mGrabInteractable;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A714", Offset = "0x83A714")]
		public bool alwaysActive;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool constrainObject;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A74C", Offset = "0x83A74C")]
		public bool usePoisitionLocking;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool lockPositionOnGrab;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool3 lockPositionAxis;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 lockPosition;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A784", Offset = "0x83A784")]
		public bool useRotationLocking;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool lockRotationOnGrab;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool3 lockRotationAxis;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 lockRotation;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A7BC", Offset = "0x83A7BC")]
		public bool useScaleLocking;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool lockScaleOnGrab;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool3 lockScaleAxis;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 lockScale;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A7F4", Offset = "0x83A7F4")]
		public Material baseMaterial;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Material grabbedMaterial;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform rubeTransform;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Collider[] colliders;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InteractableUnityEventWrapper interactableEvents;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private TouchHandGrabInteractable touchHandGI;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool objectSelected;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform oldParent;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform oldRubeParent;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 oldRubeObjectPosition;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 oldRubeObjectRotation;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 oldHandlePosition;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 oldHandleRotation;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 handleGrabPosition;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 handleGrabRotation;

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x1C0CB2C", Offset = "0x1C0CB2C", VA = "0x1C0CB2C", Slot = "5")]
		public override void Setup(RubeMachinePart parentPart)
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x1C0D000", Offset = "0x1C0D000", VA = "0x1C0D000")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x1C0D308", Offset = "0x1C0D308", VA = "0x1C0D308")]
		private void SelectedListener()
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x1C0D338", Offset = "0x1C0D338", VA = "0x1C0D338")]
		private void UnselectedListener()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x1C0D368", Offset = "0x1C0D368", VA = "0x1C0D368", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x1C0D770", Offset = "0x1C0D770", VA = "0x1C0D770", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x1C0CF00", Offset = "0x1C0CF00", VA = "0x1C0CF00")]
		public void HandleInputChange(bool handTracking)
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x1C0D7F8", Offset = "0x1C0D7F8", VA = "0x1C0D7F8", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x1C0D9DC", Offset = "0x1C0D9DC", VA = "0x1C0D9DC")]
		public RubeHandle()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class HistoryStep
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<Guid, RubeMachinePartData> Added;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Guid, RubeMachinePartData> Removed;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Guid> RemovedOrder;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Guid> Changed;

		[Token(Token = "0x170000DD")]
		public bool HasContent
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0x1C2813C", Offset = "0x1C2813C", VA = "0x1C2813C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x1C281DC", Offset = "0x1C281DC", VA = "0x1C281DC")]
		public HistoryStep()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class RubeMachineHistory
	{
		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<HistoryStep> _undoStack;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<HistoryStep> _redoStack;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RubeMachine _machine;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<Guid> _trackedIds;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Guid, Stack<RubeObjectSnapshot>> _objectHistories;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Guid, Stack<RubeObjectSnapshot>> _objectFutures;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HistoryStep _pendingChanges;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _pendingUndo;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _pendingRedo;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool _suppressTracking;

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x1C0F3C0", Offset = "0x1C0F3C0", VA = "0x1C0F3C0")]
		public RubeMachineHistory(RubeMachine machine)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x1C123E0", Offset = "0x1C123E0", VA = "0x1C123E0")]
		public bool IsTracked(RubeMachinePart part)
		{
			return default(bool);
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x1C12448", Offset = "0x1C12448", VA = "0x1C12448")]
		public void SetInitialState(RubeMachinePart part)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x1C0F7C8", Offset = "0x1C0F7C8", VA = "0x1C0F7C8")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x1C1393C", Offset = "0x1C1393C", VA = "0x1C1393C")]
		private void StopTracking(Guid rubeID)
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x1C139A8", Offset = "0x1C139A8", VA = "0x1C139A8")]
		public void RecordCreate(RubeMachinePart part)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x1C13A88", Offset = "0x1C13A88", VA = "0x1C13A88")]
		public void RecordChange(RubeMachinePart part)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x1C13CA0", Offset = "0x1C13CA0", VA = "0x1C13CA0")]
		public void RecordChange(Guid partId, RubeObjectSnapshot state)
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x1C13EBC", Offset = "0x1C13EBC", VA = "0x1C13EBC")]
		public void RecordChanges()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x1C116D4", Offset = "0x1C116D4", VA = "0x1C116D4")]
		public void RecordDelete(RubeMachinePart part)
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x1C142D0", Offset = "0x1C142D0", VA = "0x1C142D0")]
		public bool CanUndo()
		{
			return default(bool);
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x1C14328", Offset = "0x1C14328", VA = "0x1C14328")]
		public bool CanRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x1C14380", Offset = "0x1C14380", VA = "0x1C14380")]
		public void Undo()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x1C125E0", Offset = "0x1C125E0", VA = "0x1C125E0")]
		private void DoUndo()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x1C1438C", Offset = "0x1C1438C", VA = "0x1C1438C")]
		public void Redo()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x1C13238", Offset = "0x1C13238", VA = "0x1C13238")]
		private void DoRedo()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class RubeMachine : MonoBehaviour
	{
		[Token(Token = "0x20001DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8364F8", Offset = "0x8364F8")]
		private sealed class <LoadFromFileCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RubeMachine <>4__this;

			[Token(Token = "0x4000B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filename;

			[Token(Token = "0x4000B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <reenablePlayer>5__2;

			[Token(Token = "0x4000B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			private bool <restartSimulation>5__3;

			[Token(Token = "0x4000B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private RubeMachineData <data>5__4;

			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Dictionary<Guid, RubeObjectSnapshot> <loadStates>5__5;

			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <anchorLoadStartTime>5__6;

			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool <allAnchorsAssigned>5__7;

			[Token(Token = "0x170000E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009CE")]
				[Address(RVA = "0x1BF6890", Offset = "0x1BF6890", VA = "0x1BF6890", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009D0")]
				[Address(RVA = "0x1BF68D8", Offset = "0x1BF68D8", VA = "0x1BF68D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009CB")]
			[Address(RVA = "0x1BF5970", Offset = "0x1BF5970", VA = "0x1BF5970")]
			[DebuggerHidden]
			public <LoadFromFileCoroutine>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x60009CC")]
			[Address(RVA = "0x1BF599C", Offset = "0x1BF599C", VA = "0x1BF599C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x1BF59A0", Offset = "0x1BF59A0", VA = "0x1BF59A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009CF")]
			[Address(RVA = "0x1BF6898", Offset = "0x1BF6898", VA = "0x1BF6898", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836508", Offset = "0x836508")]
		private sealed class <PopulatePreviewPool>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RubeMachine <>4__this;

			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009D4")]
				[Address(RVA = "0x1BF6B28", Offset = "0x1BF6B28", VA = "0x1BF6B28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009D6")]
				[Address(RVA = "0x1BF6B70", Offset = "0x1BF6B70", VA = "0x1BF6B70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009D1")]
			[Address(RVA = "0x1BF68E0", Offset = "0x1BF68E0", VA = "0x1BF68E0")]
			[DebuggerHidden]
			public <PopulatePreviewPool>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x60009D2")]
			[Address(RVA = "0x1BF690C", Offset = "0x1BF690C", VA = "0x1BF690C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009D3")]
			[Address(RVA = "0x1BF6910", Offset = "0x1BF6910", VA = "0x1BF6910", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009D5")]
			[Address(RVA = "0x1BF6B30", Offset = "0x1BF6B30", VA = "0x1BF6B30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836518", Offset = "0x836518")]
		private sealed class <DestroyInFrame>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RubeMachinePart targetRubeObj;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RubeMachine <>4__this;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <deletedAssetName>5__2;

			[Token(Token = "0x170000E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009DA")]
				[Address(RVA = "0x1BF5920", Offset = "0x1BF5920", VA = "0x1BF5920", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009DC")]
				[Address(RVA = "0x1BF5968", Offset = "0x1BF5968", VA = "0x1BF5968", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009D7")]
			[Address(RVA = "0x1BF54F0", Offset = "0x1BF54F0", VA = "0x1BF54F0")]
			[DebuggerHidden]
			public <DestroyInFrame>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x1BF551C", Offset = "0x1BF551C", VA = "0x1BF551C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x1BF5520", Offset = "0x1BF5520", VA = "0x1BF5520", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x1BF5928", Offset = "0x1BF5928", VA = "0x1BF5928", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RubeCatalogue rubeCatalogue;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool machineHasChanged;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string currentMachineName;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform previewItemParent;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform machinePartParent;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A82C", Offset = "0x83A82C")]
		public int totalObjectCount;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, int> uniqueItemCountCatalogue;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<RubeConstruct> rubeConstructs;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<RubeMachinePart> machineParts;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Guid, RubeMachinePart> machinePartLookup;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<Guid, RubeReference> objectReferences;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RubeAssetDatabase _assetDatabase;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RubeMachineHistory _history;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A864", Offset = "0x83A864")]
		public int maxPrewviewActivateIterationsPerFrame;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Queue<GameObject> previewActivateQueue;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool previewsQueued;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A89C", Offset = "0x83A89C")]
		public bool isSimulating;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Action OnSimulate;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Action OnPauseSimulate;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A8D4", Offset = "0x83A8D4")]
		public LineRenderer moveSnapLine;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float moveSnapLineWidth;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Gradient moveSnapColourChange;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool visualizeMoveSnap;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform moveSnapHand;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform moveSnapObject;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3[] linePoints;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float moveSnapBreakDistance;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SoundGroup]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A90C", Offset = "0x83A90C")]
		public string destroyObjectSound;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool isInitialized;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A958", Offset = "0x83A958")]
		private static RubeMachine <Instance>k__BackingField;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Action<string> MachineLoadError;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Action<RubeContainer> onObjectCreated;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Action<string> onMachineStateChanged;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Action<string> onObjectDeleted;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Action onTrackExtended;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Action<RubeObject, RubeObject> onProximityTrigger;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Action<RubeObject, RubeObject> onBounceAmpTrigger;

		[Token(Token = "0x170000DE")]
		public static RubeMachine Instance
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x1C0F074", Offset = "0x1C0F074", VA = "0x1C0F074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840B14", Offset = "0x840B14")]
			get
			{
				return null;
			}
			[Token(Token = "0x600099F")]
			[Address(RVA = "0x1C0F0C0", Offset = "0x1C0F0C0", VA = "0x1C0F0C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840B24", Offset = "0x840B24")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public RubeMachineHistory History
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x1C0F110", Offset = "0x1C0F110", VA = "0x1C0F110")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x1C0F118", Offset = "0x1C0F118", VA = "0x1C0F118")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x1C0F220", Offset = "0x1C0F220", VA = "0x1C0F220")]
		private void Start()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x1C0F224", Offset = "0x1C0F224", VA = "0x1C0F224")]
		public void Init()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x1C0F500", Offset = "0x1C0F500", VA = "0x1C0F500")]
		public void SetUp()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x1C0F6EC", Offset = "0x1C0F6EC", VA = "0x1C0F6EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x1C0F7B0", Offset = "0x1C0F7B0", VA = "0x1C0F7B0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1C0FAA0", Offset = "0x1C0FAA0", VA = "0x1C0FAA0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x1C0FAA4", Offset = "0x1C0FAA4", VA = "0x1C0FAA4")]
		public void LoadFromFile(string filename)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x1C0FAD0", Offset = "0x1C0FAD0", VA = "0x1C0FAD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840B34", Offset = "0x840B34")]
		private IEnumerator LoadFromFileCoroutine(string filename)
		{
			return null;
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x1C0FB48", Offset = "0x1C0FB48", VA = "0x1C0FB48")]
		public void SaveMachineState()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x1C0FCD4", Offset = "0x1C0FCD4", VA = "0x1C0FCD4")]
		public void Save(string machineName)
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x1C0FD08", Offset = "0x1C0FD08", VA = "0x1C0FD08")]
		public RubeMachineData SaveData()
		{
			return null;
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x1C10030", Offset = "0x1C10030", VA = "0x1C10030")]
		public void NewMachine()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x1C104D8", Offset = "0x1C104D8", VA = "0x1C104D8")]
		public void ResetMachine(bool forceReset = false)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1C0F558", Offset = "0x1C0F558", VA = "0x1C0F558")]
		public void ToggleSimulation()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1C106FC", Offset = "0x1C106FC", VA = "0x1C106FC")]
		public bool ContainsPart(Guid Id)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1C10768", Offset = "0x1C10768", VA = "0x1C10768")]
		public RubeMachinePart GetMachinePart(Guid Id)
		{
			return null;
		}

		[Token(Token = "0x60009B2")]
		public T GetObjectReference<T>(Guid RubeID) where T : RubeReference
		{
			return null;
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x1C107EC", Offset = "0x1C107EC", VA = "0x1C107EC")]
		public IReadOnlyList<RubeMachinePart> AllParts()
		{
			return null;
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x1C10840", Offset = "0x1C10840", VA = "0x1C10840")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840B94", Offset = "0x840B94")]
		public IEnumerator PopulatePreviewPool()
		{
			return null;
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1C108AC", Offset = "0x1C108AC", VA = "0x1C108AC")]
		public RubeObject GetPreviewFromPool(string assetName)
		{
			return null;
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x1C10BCC", Offset = "0x1C10BCC", VA = "0x1C10BCC")]
		public RubeObject CreateRubePreviewItem(string assetName)
		{
			return null;
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1C10DEC", Offset = "0x1C10DEC", VA = "0x1C10DEC")]
		public void RegisterMachinePart(RubeMachinePart part)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x1C11094", Offset = "0x1C11094", VA = "0x1C11094")]
		public void UnRegisterMachinePart(RubeMachinePart part)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x1C113BC", Offset = "0x1C113BC", VA = "0x1C113BC")]
		public void RegisterObjectReference(RubeReference reference)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x1C11428", Offset = "0x1C11428", VA = "0x1C11428")]
		public void UnRegisterObjectReference(RubeReference reference)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x1C10218", Offset = "0x1C10218", VA = "0x1C10218")]
		public void ClearMachine()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x1C11490", Offset = "0x1C11490", VA = "0x1C11490")]
		public void DestroyRubeObject(RubeMachinePart targetRubeObj)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x1C118C4", Offset = "0x1C118C4", VA = "0x1C118C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840BF4", Offset = "0x840BF4")]
		private IEnumerator DestroyInFrame(RubeMachinePart targetRubeObj)
		{
			return null;
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x1C1193C", Offset = "0x1C1193C", VA = "0x1C1193C")]
		public RubeMachinePart CreatePartFromData(RubeMachinePartData data)
		{
			return null;
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x1C10DB4", Offset = "0x1C10DB4", VA = "0x1C10DB4")]
		private RubeMachinePart CreatePartFromAsset(string assetName)
		{
			return null;
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1C119F0", Offset = "0x1C119F0", VA = "0x1C119F0")]
		private RubeMachinePart CreatePartInternal(string assetName)
		{
			return null;
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x1C11B64", Offset = "0x1C11B64", VA = "0x1C11B64")]
		public void TogglePreviewInteractability(bool on)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x1C11E2C", Offset = "0x1C11E2C", VA = "0x1C11E2C")]
		public void StartMoveSnapVisualization(Transform rubeObj, Transform hand, float moveBreakDistance)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x1C11E70", Offset = "0x1C11E70", VA = "0x1C11E70")]
		public void UpdateMoveSnapVisualization(float percentage)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x1C11FC8", Offset = "0x1C11FC8", VA = "0x1C11FC8")]
		public void EndMoveSnapVisualization()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1C12004", Offset = "0x1C12004", VA = "0x1C12004")]
		public int GetObjectCount(string key)
		{
			return default(int);
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x1C120A8", Offset = "0x1C120A8", VA = "0x1C120A8")]
		public void QueuePreviewActivation(GameObject rubePreview)
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x1C0F6FC", Offset = "0x1C0F6FC", VA = "0x1C0F6FC")]
		private void ProcessPreviewQueue()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x1C12118", Offset = "0x1C12118", VA = "0x1C12118")]
		public bool IsEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x1C1216C", Offset = "0x1C1216C", VA = "0x1C1216C")]
		public bool HasContainerInCatalogue(RubeContainer container)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x1C12314", Offset = "0x1C12314", VA = "0x1C12314")]
		public RubeMachine()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public abstract class RubeMachinePart : MonoBehaviour
	{
		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RubeContainer rubeContainer;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A968", Offset = "0x83A968")]
		private Guid <RubeID>k__BackingField;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A978", Offset = "0x83A978")]
		private SpatialAnchorConnection <SpatialAnchorConnection>k__BackingField;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool pendingDelete;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A988", Offset = "0x83A988")]
		private bool <IsSimulated>k__BackingField;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A998", Offset = "0x83A998")]
		private List<RubeMachinePart> <ChildParts>k__BackingField;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A9A8", Offset = "0x83A9A8")]
		private RubeMachinePart <ParentPart>k__BackingField;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action OnUndo;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action OnRecordStateChange;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RubeObjectSnapshot _pendingApplyState;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RubeComponent> _components;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected RubeObjectSnapshot defaultState;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool createdAtRuntime;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RubeMachinePartData saveData;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83A9B8", Offset = "0x83A9B8")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x170000E6")]
		public Guid RubeID
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0xB05D44", Offset = "0xB05D44", VA = "0xB05D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840D44", Offset = "0x840D44")]
			get
			{
				return default(Guid);
			}
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0xB05D50", Offset = "0xB05D50", VA = "0xB05D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840D54", Offset = "0x840D54")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public SpatialAnchorConnection SpatialAnchorConnection
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0xB05D58", Offset = "0xB05D58", VA = "0xB05D58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840D64", Offset = "0x840D64")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0xB05D60", Offset = "0xB05D60", VA = "0xB05D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840D74", Offset = "0x840D74")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public bool IsSimulated
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xB05D68", Offset = "0xB05D68", VA = "0xB05D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840D84", Offset = "0x840D84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0xB05D70", Offset = "0xB05D70", VA = "0xB05D70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840D94", Offset = "0x840D94")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public List<RubeMachinePart> ChildParts
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0xB05D7C", Offset = "0xB05D7C", VA = "0xB05D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840DA4", Offset = "0x840DA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0xB05D84", Offset = "0xB05D84", VA = "0xB05D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840DB4", Offset = "0x840DB4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public RubeMachinePart ParentPart
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0xB05D8C", Offset = "0xB05D8C", VA = "0xB05D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840DC4", Offset = "0x840DC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0xB05D94", Offset = "0xB05D94", VA = "0xB05D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840DD4", Offset = "0x840DD4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public string AssetName
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0xB05D9C", Offset = "0xB05D9C", VA = "0xB05D9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		protected List<RubeComponent> Components
		{
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0xB05E28", Offset = "0xB05E28", VA = "0xB05E28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public bool IsInitialized
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0xB05EDC", Offset = "0xB05EDC", VA = "0xB05EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840DE4", Offset = "0x840DE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0xB05EE4", Offset = "0xB05EE4", VA = "0xB05EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840DF4", Offset = "0x840DF4")]
			private set
			{
			}
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xB05EF0", Offset = "0xB05EF0", VA = "0xB05EF0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xB0603C", Offset = "0xB0603C", VA = "0xB0603C")]
		public void AssignNewRubeID()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xB060A4", Offset = "0xB060A4", VA = "0xB060A4")]
		public void AssignRubeID(Guid id)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xB060AC", Offset = "0xB060AC", VA = "0xB060AC")]
		public void AddToMachine()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xB061F0", Offset = "0xB061F0", VA = "0xB061F0")]
		public void AddChildPart(RubeMachinePart part)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xB062C4", Offset = "0xB062C4", VA = "0xB062C4")]
		public void RemoveChildPart(RubeMachinePart part)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xB06360", Offset = "0xB06360", VA = "0xB06360", Slot = "4")]
		public virtual void OnCreate()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xB0656C", Offset = "0xB0656C", VA = "0xB0656C", Slot = "5")]
		public virtual void OnLoad(RubeMachinePartData data)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xB06C6C", Offset = "0xB06C6C", VA = "0xB06C6C", Slot = "6")]
		public virtual void OnMachineLoadComplete(RubeObjectSnapshot loadState)
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xB07030", Offset = "0xB07030", VA = "0xB07030", Slot = "7")]
		public virtual void OnAddedToMachine()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xB073E4", Offset = "0xB073E4", VA = "0xB073E4", Slot = "8")]
		protected virtual void OnSpatialAnchorAssigned()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xB07868", Offset = "0xB07868", VA = "0xB07868", Slot = "9")]
		protected virtual void OnStartSimulation()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xB07988", Offset = "0xB07988", VA = "0xB07988", Slot = "10")]
		protected virtual void OnStopSimulation()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xB07AA8", Offset = "0xB07AA8", VA = "0xB07AA8", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xB07D6C", Offset = "0xB07D6C", VA = "0xB07D6C")]
		public void UnRegisterComponent(RubeComponent component)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xB07E10", Offset = "0xB07E10", VA = "0xB07E10")]
		public void RecordStateChange()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xB06B34", Offset = "0xB06B34", VA = "0xB06B34")]
		public void SetDefaultState(RubeObjectSnapshot state)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xB07FF8", Offset = "0xB07FF8", VA = "0xB07FF8")]
		public RubeObjectSnapshot GetDefaultState()
		{
			return null;
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xB08000", Offset = "0xB08000", VA = "0xB08000", Slot = "12")]
		public virtual void ResetSimulation()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xB082B8", Offset = "0xB082B8", VA = "0xB082B8", Slot = "13")]
		public virtual void ResetPlacement()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xB083E4", Offset = "0xB083E4", VA = "0xB083E4", Slot = "14")]
		public virtual void ApplyState(RubeObjectSnapshot state)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xB08134", Offset = "0xB08134", VA = "0xB08134")]
		private void ApplyPositionFromState(RubeObjectSnapshot state)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xB085A0", Offset = "0xB085A0", VA = "0xB085A0", Slot = "15")]
		public virtual RubeMachinePartData SaveData()
		{
			return null;
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xB086B4", Offset = "0xB086B4", VA = "0xB086B4", Slot = "16")]
		public virtual RubeObjectSnapshot CurrentState()
		{
			return null;
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xB06A1C", Offset = "0xB06A1C", VA = "0xB06A1C")]
		private RubeAdditionalObjectData ExtractComponentState(RubeObjectSnapshot state, RubeComponent component)
		{
			return null;
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xB08DB8", Offset = "0xB08DB8", VA = "0xB08DB8")]
		protected RubeMachinePart()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public abstract class RubeComponent : RubeReference
	{
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _saveName;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected RubeMachinePart _parentPart;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected RubeAdditionalObjectData _defaultState;

		[Token(Token = "0x170000EE")]
		public string SaveName
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x1C0AF7C", Offset = "0x1C0AF7C", VA = "0x1C0AF7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1C0AFD0", Offset = "0x1C0AFD0", VA = "0x1C0AFD0", Slot = "5")]
		public virtual void Setup(RubeMachinePart parentPart)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x1C0AFD8", Offset = "0x1C0AFD8", VA = "0x1C0AFD8", Slot = "6")]
		public virtual void OnMachineLoadComplete(RubeAdditionalObjectData objectData)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x1C0AFDC", Offset = "0x1C0AFDC", VA = "0x1C0AFDC", Slot = "7")]
		public virtual void ResetSimulation()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1C0AFE0", Offset = "0x1C0AFE0", VA = "0x1C0AFE0", Slot = "8")]
		public virtual void ResetPlacement()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1C0AFE4", Offset = "0x1C0AFE4", VA = "0x1C0AFE4", Slot = "9")]
		public virtual void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1C0AFE8", Offset = "0x1C0AFE8", VA = "0x1C0AFE8", Slot = "10")]
		public virtual void OnParentReleased()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1C0AFEC", Offset = "0x1C0AFEC", VA = "0x1C0AFEC", Slot = "11")]
		public virtual void OnStartSimulation()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x1C0AFF0", Offset = "0x1C0AFF0", VA = "0x1C0AFF0", Slot = "12")]
		public virtual void OnStopSimulation()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1C0AFF4", Offset = "0x1C0AFF4", VA = "0x1C0AFF4", Slot = "13")]
		public virtual void ActAsPreview()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1C0AFF8", Offset = "0x1C0AFF8", VA = "0x1C0AFF8", Slot = "14")]
		public virtual void ActAsObject()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1C0AFFC", Offset = "0x1C0AFFC", VA = "0x1C0AFFC", Slot = "15")]
		public virtual bool HasPersistentState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x1C0B004", Offset = "0x1C0B004", VA = "0x1C0B004", Slot = "16")]
		public virtual void ApplyState(RubeAdditionalObjectData stateData)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1C0B008", Offset = "0x1C0B008", VA = "0x1C0B008", Slot = "17")]
		public virtual RubeAdditionalObjectData CurrentState()
		{
			return null;
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1C0B010", Offset = "0x1C0B010", VA = "0x1C0B010")]
		public void SetDefaultState(RubeAdditionalObjectData state)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1C08BB0", Offset = "0x1C08BB0", VA = "0x1C08BB0", Slot = "18")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1C0B018", Offset = "0x1C0B018", VA = "0x1C0B018", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x1C07E08", Offset = "0x1C07E08", VA = "0x1C07E08")]
		protected RubeComponent()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class AnimationToggle : RubeComponent
	{
		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationClip animationClip;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool saveToggleState;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool reverseOnToggle;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool onlyOnce;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		private bool inAnimation;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool toggled;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator anim;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isPaused;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float clipProgress;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float cdTank;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnAnimComplete;

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xB1CBAC", Offset = "0xB1CBAC", VA = "0xB1CBAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xB1CC10", Offset = "0xB1CC10", VA = "0xB1CC10")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xB1CC84", Offset = "0xB1CC84", VA = "0xB1CC84", Slot = "18")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xB1CCB4", Offset = "0xB1CCB4", VA = "0xB1CCB4", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xB1CD7C", Offset = "0xB1CD7C", VA = "0xB1CD7C", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xB1CD9C", Offset = "0xB1CD9C", VA = "0xB1CD9C", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xB1CE24", Offset = "0xB1CE24", VA = "0xB1CE24", Slot = "11")]
		public override void OnStartSimulation()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xB1CEF4", Offset = "0xB1CEF4", VA = "0xB1CEF4", Slot = "12")]
		public override void OnStopSimulation()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xB1CF88", Offset = "0xB1CF88", VA = "0xB1CF88", Slot = "17")]
		public override RubeAdditionalObjectData CurrentState()
		{
			return null;
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xB1D024", Offset = "0xB1D024", VA = "0xB1D024", Slot = "16")]
		public override void ApplyState(RubeAdditionalObjectData stateData)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xB1D09C", Offset = "0xB1D09C", VA = "0xB1D09C")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xB1CCE8", Offset = "0xB1CCE8", VA = "0xB1CCE8")]
		private void SetAnimState(bool on)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xB1D1E8", Offset = "0xB1D1E8", VA = "0xB1D1E8")]
		private void WaitForAnimationEnd(float time)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xB1D1F8", Offset = "0xB1D1F8", VA = "0xB1D1F8", Slot = "15")]
		public override bool HasPersistentState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xB1D200", Offset = "0xB1D200", VA = "0xB1D200")]
		public AnimationToggle()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class BounceAmplifier : RubeComponent
	{
		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83A9D8", Offset = "0x83A9D8")]
		public bool scaleToMass;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool overwriteVelocity;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AA10", Offset = "0x83AA10")]
		public bool useDirectionalForce;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool towardsDirection;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform outwardDirection;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float outwardForce;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AA48", Offset = "0x83AA48")]
		public bool useRepelForce;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform repelPoint;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float repelForce;

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xB20C74", Offset = "0xB20C74", VA = "0xB20C74")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xB212A0", Offset = "0xB212A0", VA = "0xB212A0")]
		public BounceAmplifier()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class ClearVelocityField : MonoBehaviour
	{
		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<RubeObject> rubeList;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<RubeDomino> dominoList;

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xB2EDE4", Offset = "0xB2EDE4", VA = "0xB2EDE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xB2EEE8", Offset = "0xB2EEE8", VA = "0xB2EEE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xB2EFEC", Offset = "0xB2EFEC", VA = "0xB2EFEC")]
		private void HandleReset(string stateChangeName)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xB2F0A8", Offset = "0xB2F0A8", VA = "0xB2F0A8")]
		public void Trigger(Rigidbody rBody)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xB2F150", Offset = "0xB2F150", VA = "0xB2F150")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xB2F40C", Offset = "0xB2F40C", VA = "0xB2F40C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xB2F5D0", Offset = "0xB2F5D0", VA = "0xB2F5D0")]
		public ClearVelocityField()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class ColliderToggle : RubeComponent
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool toggled;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Collider[] enableOnON;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Collider[] enableOnOFF;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AA80", Offset = "0x83AA80")]
		public bool onlyOnce;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool enableResetting;

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xB2F688", Offset = "0xB2F688", VA = "0xB2F688", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xB2F744", Offset = "0xB2F744", VA = "0xB2F744")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xB2F6C8", Offset = "0xB2F6C8", VA = "0xB2F6C8")]
		private void ToggleGOList(Collider[] goList, bool on)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xB2F7B4", Offset = "0xB2F7B4", VA = "0xB2F7B4")]
		public ColliderToggle()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class GameObjectToggle : RubeComponent
	{
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool toggled;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] enableOnON;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject[] enableOnOFF;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AAB8", Offset = "0x83AAB8")]
		public bool onlyOnce;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool enableResetting;

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x1C1E43C", Offset = "0x1C1E43C", VA = "0x1C1E43C", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x1C1E4F8", Offset = "0x1C1E4F8", VA = "0x1C1E4F8")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1C1E47C", Offset = "0x1C1E47C", VA = "0x1C1E47C")]
		private void ToggleGOList(GameObject[] goList, bool on)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x1C1E568", Offset = "0x1C1E568", VA = "0x1C1E568")]
		public GameObjectToggle()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class HoverOnDeleteHelper : RubeComponent
	{
		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isGrabbed;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RubeObject targetRubeObject;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Collider> colliderList;

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x1C282CC", Offset = "0x1C282CC", VA = "0x1C282CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x1C283C0", Offset = "0x1C283C0", VA = "0x1C283C0", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x1C283CC", Offset = "0x1C283CC", VA = "0x1C283CC", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x1C28444", Offset = "0x1C28444", VA = "0x1C28444")]
		public void RegisterCollider(Collider c)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1C2855C", Offset = "0x1C2855C", VA = "0x1C2855C")]
		public void UnRegisterCollider(Collider c)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x1C28680", Offset = "0x1C28680", VA = "0x1C28680")]
		public HoverOnDeleteHelper()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class InverseScaleHelper : MonoBehaviour
	{
		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RubeScaleHandler scaleHandler;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultScaleCache;

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xA1B390", Offset = "0xA1B390", VA = "0xA1B390")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xA1B4F8", Offset = "0xA1B4F8", VA = "0xA1B4F8")]
		private void HandleScale()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xA1B558", Offset = "0xA1B558", VA = "0xA1B558")]
		public InverseScaleHelper()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class PortalHandler : RubeComponent
	{
		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PortalHandler OtherPortal;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float TeleportOffset;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnPortal;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool inSimulation;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<GameObject> receivingList;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Collider mCollider;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<RubeObject> pendingList;

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x9A042C", Offset = "0x9A042C", VA = "0x9A042C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x9A0480", Offset = "0x9A0480", VA = "0x9A0480")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x9A0924", Offset = "0x9A0924", VA = "0x9A0924", Slot = "11")]
		public override void OnStartSimulation()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x9A09C0", Offset = "0x9A09C0", VA = "0x9A09C0", Slot = "12")]
		public override void OnStopSimulation()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x9A0A50", Offset = "0x9A0A50", VA = "0x9A0A50", Slot = "14")]
		public override void ActAsObject()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x9A0A54", Offset = "0x9A0A54", VA = "0x9A0A54")]
		public void AssessSimState()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x9A0AE0", Offset = "0x9A0AE0", VA = "0x9A0AE0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x9A1018", Offset = "0x9A1018", VA = "0x9A1018")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x9A06CC", Offset = "0x9A06CC", VA = "0x9A06CC")]
		public void SendObjectThroughPortal(GameObject obj, Rigidbody rBody, Vector3 storedVelocity)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x9A0E08", Offset = "0x9A0E08", VA = "0x9A0E08")]
		public void SendDominoThroughPortal(GameObject obj, Rigidbody rBody, Vector3 storedVelocity)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x9A1274", Offset = "0x9A1274", VA = "0x9A1274")]
		public void RegisterSentObject(GameObject sentObj)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x9A1314", Offset = "0x9A1314", VA = "0x9A1314")]
		public PortalHandler()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class RubeAnimationHandler : RubeComponent
	{
		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string targetAnim;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float playSpeed;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool saveState;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SoundGroup]
		public string targetSound;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator anim;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlaySoundResult soundResult;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SoundGroupVariation activeSound;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isGrabbed;

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x1C07794", Offset = "0x1C07794", VA = "0x1C07794")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x1C077E8", Offset = "0x1C077E8", VA = "0x1C077E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x1C078A8", Offset = "0x1C078A8", VA = "0x1C078A8", Slot = "11")]
		public override void OnStartSimulation()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x1C07A78", Offset = "0x1C07A78", VA = "0x1C07A78", Slot = "12")]
		public override void OnStopSimulation()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x1C07828", Offset = "0x1C07828", VA = "0x1C07828")]
		public void AssessSimState()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x1C07ACC", Offset = "0x1C07ACC", VA = "0x1C07ACC", Slot = "18")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x1C07AFC", Offset = "0x1C07AFC", VA = "0x1C07AFC", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x1C07BA4", Offset = "0x1C07BA4", VA = "0x1C07BA4", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x1C07BB8", Offset = "0x1C07BB8", VA = "0x1C07BB8", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1C07BF8", Offset = "0x1C07BF8", VA = "0x1C07BF8", Slot = "17")]
		public override RubeAdditionalObjectData CurrentState()
		{
			return null;
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1C07CC8", Offset = "0x1C07CC8", VA = "0x1C07CC8", Slot = "16")]
		public override void ApplyState(RubeAdditionalObjectData stateData)
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1C07DDC", Offset = "0x1C07DDC", VA = "0x1C07DDC", Slot = "15")]
		public override bool HasPersistentState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x1C07DE4", Offset = "0x1C07DE4", VA = "0x1C07DE4")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x1C07DF0", Offset = "0x1C07DF0", VA = "0x1C07DF0")]
		public RubeAnimationHandler()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class RubeArticulationHelper : RubeComponent
	{
		[Token(Token = "0x20001E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836528", Offset = "0x836528")]
		private sealed class <DelayedRelease>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RubeArticulationHelper <>4__this;

			[Token(Token = "0x170000EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A71")]
				[Address(RVA = "0x1BF51B0", Offset = "0x1BF51B0", VA = "0x1BF51B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A73")]
				[Address(RVA = "0x1BF51F8", Offset = "0x1BF51F8", VA = "0x1BF51F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0x1BF50D0", Offset = "0x1BF50D0", VA = "0x1BF50D0")]
			[DebuggerHidden]
			public <DelayedRelease>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0x1BF50FC", Offset = "0x1BF50FC", VA = "0x1BF50FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A70")]
			[Address(RVA = "0x1BF5100", Offset = "0x1BF5100", VA = "0x1BF5100", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A72")]
			[Address(RVA = "0x1BF51B8", Offset = "0x1BF51B8", VA = "0x1BF51B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isSimulating;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool isGrabbed;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool grabbedFromPreview;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RubeObject mRubeObj;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _velocity;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _angularVelocity;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ArticulationBody parentBody;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ArticulationBody[] leverJoints;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ArticulationReducedSpace[] jointPositions;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ArticulationReducedSpace[] jointVelocities;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private HashSet<ArticulationCollider> jointColliders;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform rootParentTransform;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Pose rootParentOffset;

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x1C07E10", Offset = "0x1C07E10", VA = "0x1C07E10")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x1C07F6C", Offset = "0x1C07F6C", VA = "0x1C07F6C")]
		public void SnapParentBody()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1C07FC8", Offset = "0x1C07FC8", VA = "0x1C07FC8", Slot = "5")]
		public override void Setup(RubeMachinePart parentPart)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x1C08638", Offset = "0x1C08638", VA = "0x1C08638", Slot = "6")]
		public override void OnMachineLoadComplete(RubeAdditionalObjectData objectData)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x1C087AC", Offset = "0x1C087AC", VA = "0x1C087AC", Slot = "11")]
		public override void OnStartSimulation()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x1C08988", Offset = "0x1C08988", VA = "0x1C08988", Slot = "12")]
		public override void OnStopSimulation()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x1C089AC", Offset = "0x1C089AC", VA = "0x1C089AC", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x1C089B8", Offset = "0x1C089B8", VA = "0x1C089B8", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x1C089E8", Offset = "0x1C089E8", VA = "0x1C089E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840E04", Offset = "0x840E04")]
		private IEnumerator DelayedRelease()
		{
			return null;
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x1C08A54", Offset = "0x1C08A54", VA = "0x1C08A54", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x1C08B7C", Offset = "0x1C08B7C", VA = "0x1C08B7C", Slot = "18")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x1C08BE0", Offset = "0x1C08BE0", VA = "0x1C08BE0", Slot = "8")]
		public override void ResetPlacement()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x1C086C0", Offset = "0x1C086C0", VA = "0x1C086C0")]
		public void AssessSimState()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x1C087D0", Offset = "0x1C087D0", VA = "0x1C087D0")]
		private void StartSimulating()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x1C08264", Offset = "0x1C08264", VA = "0x1C08264")]
		private void StopSimulating()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x1C084E4", Offset = "0x1C084E4", VA = "0x1C084E4")]
		private void ClearVelocities()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x1C08BE4", Offset = "0x1C08BE4", VA = "0x1C08BE4", Slot = "17")]
		public override RubeAdditionalObjectData CurrentState()
		{
			return null;
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x1C08E38", Offset = "0x1C08E38", VA = "0x1C08E38", Slot = "16")]
		public override void ApplyState(RubeAdditionalObjectData stateData)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x1C091F8", Offset = "0x1C091F8", VA = "0x1C091F8", Slot = "15")]
		public override bool HasPersistentState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x1C09200", Offset = "0x1C09200", VA = "0x1C09200")]
		public RubeArticulationHelper()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public static class ArticulationBodyHelpers
	{
		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ArticulationReducedSpace zeroDof1;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ArticulationReducedSpace zeroDof2;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ArticulationReducedSpace zeroDof3;

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xB1E484", Offset = "0xB1E484", VA = "0xB1E484")]
		public static ArticulationReducedSpace Zero(this ArticulationReducedSpace space)
		{
			return default(ArticulationReducedSpace);
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xB1E560", Offset = "0xB1E560", VA = "0xB1E560")]
		public static void Set(this ref ArticulationReducedSpace space, float a, float b, float c)
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class RubeAudioHandler : RubeComponent
	{
		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SoundGroup]
		public string targetSound;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlaySoundResult soundResult;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SoundGroupVariation activeSound;

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x1C09564", Offset = "0x1C09564", VA = "0x1C09564")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x1C09568", Offset = "0x1C09568", VA = "0x1C09568")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x1C095E0", Offset = "0x1C095E0", VA = "0x1C095E0", Slot = "11")]
		public override void OnStartSimulation()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x1C0979C", Offset = "0x1C0979C", VA = "0x1C0979C", Slot = "12")]
		public override void OnStopSimulation()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x1C0956C", Offset = "0x1C0956C", VA = "0x1C0956C")]
		public void AssessSimState()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x1C097B8", Offset = "0x1C097B8", VA = "0x1C097B8", Slot = "18")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x1C097E8", Offset = "0x1C097E8", VA = "0x1C097E8", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x1C09874", Offset = "0x1C09874", VA = "0x1C09874", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x1C09880", Offset = "0x1C09880", VA = "0x1C09880", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x1C098B0", Offset = "0x1C098B0", VA = "0x1C098B0")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x1C098BC", Offset = "0x1C098BC", VA = "0x1C098BC")]
		public RubeAudioHandler()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class RubeAudioTrigger : RubeComponent
	{
		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SoundGroup]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AB10", Offset = "0x83AB10")]
		public string targetSound;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<SoundGroupVariation> activeSounds;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AB5C", Offset = "0x83AB5C")]
		public bool stopOnReset;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SoundEventAction actionOnGrab;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundEventAction actionOnPause;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isPaused;

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x1C098C4", Offset = "0x1C098C4", VA = "0x1C098C4")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x1C09B7C", Offset = "0x1C09B7C", VA = "0x1C09B7C", Slot = "12")]
		public override void OnStopSimulation()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x1C09F2C", Offset = "0x1C09F2C", VA = "0x1C09F2C", Slot = "11")]
		public override void OnStartSimulation()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x1C09F4C", Offset = "0x1C09F4C", VA = "0x1C09F4C", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x1C09F5C", Offset = "0x1C09F5C", VA = "0x1C09F5C", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x1C09F80", Offset = "0x1C09F80", VA = "0x1C09F80", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x1C0A008", Offset = "0x1C0A008", VA = "0x1C0A008")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x1C09DCC", Offset = "0x1C09DCC", VA = "0x1C09DCC")]
		public void StopSound()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x1C09BA0", Offset = "0x1C09BA0", VA = "0x1C09BA0")]
		private void TogglePauseSound(bool pause)
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x1C09A3C", Offset = "0x1C09A3C", VA = "0x1C09A3C")]
		private void CleanList()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x1C0A00C", Offset = "0x1C0A00C", VA = "0x1C0A00C")]
		public RubeAudioTrigger()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class RubeForcefield : RubeComponent
	{
		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AB94", Offset = "0x83AB94")]
		public Transform forceDirection;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool towardsDirection;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool positionOnForceDirectionPoint;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool orientToDirection;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83ABCC", Offset = "0x83ABCC")]
		public float desiredVelocity;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool overwriteForces;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public ForceMode forceMode;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool forceOnTriggerStay;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool scaleForceToMass;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AC04", Offset = "0x83AC04")]
		public bool disableOnGrab;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Collider forcefieldCollider;

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x1C0C144", Offset = "0x1C0C144", VA = "0x1C0C144")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x1C0C198", Offset = "0x1C0C198", VA = "0x1C0C198", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x1C0C2C4", Offset = "0x1C0C2C4", VA = "0x1C0C2C4", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x1C0C2C8", Offset = "0x1C0C2C8", VA = "0x1C0C2C8", Slot = "11")]
		public override void OnStartSimulation()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x1C0C2D0", Offset = "0x1C0C2D0", VA = "0x1C0C2D0", Slot = "12")]
		public override void OnStopSimulation()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x1C0C250", Offset = "0x1C0C250", VA = "0x1C0C250")]
		public void AssessSimState()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x1C0C1AC", Offset = "0x1C0C1AC", VA = "0x1C0C1AC")]
		public void ToggleForcefield(bool on)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x1C0C2D8", Offset = "0x1C0C2D8", VA = "0x1C0C2D8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x1C0C7F4", Offset = "0x1C0C7F4", VA = "0x1C0C7F4")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x1C0CB1C", Offset = "0x1C0CB1C", VA = "0x1C0CB1C")]
		public RubeForcefield()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class RubeLevelHandler : RubeComponent
	{
		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RubeObject mRubeO;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RubeSubObject mRubeSubO;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool usingSubObj;

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x1C0EAF4", Offset = "0x1C0EAF4", VA = "0x1C0EAF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x1C0EC60", Offset = "0x1C0EC60", VA = "0x1C0EC60")]
		public void LevelObject()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x1C0ED60", Offset = "0x1C0ED60", VA = "0x1C0ED60")]
		public Vector3 GetRotation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x1C0EDA0", Offset = "0x1C0EDA0", VA = "0x1C0EDA0")]
		public bool IsLevel()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x1C0EE80", Offset = "0x1C0EE80", VA = "0x1C0EE80")]
		public RubeLevelHandler()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class RubeScaleHandler : RubeComponent
	{
		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AC4C", Offset = "0x83AC4C")]
		public Vector3 scaleConstraints;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float minScale;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float maxScale;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AC84", Offset = "0x83AC84")]
		public RubeObject rubeO;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 cachedScale;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float scaleAdjust;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public RubeSizerTool selectingTool;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Action onScale;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RubeArticulationHelper articulation;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SurfaceSnapperHandler snapper;

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xB0EE2C", Offset = "0xB0EE2C", VA = "0xB0EE2C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xB0EEEC", Offset = "0xB0EEEC", VA = "0xB0EEEC")]
		public void UpdateScale(float newScale, bool skipRecord = false)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xB0F030", Offset = "0xB0F030", VA = "0xB0F030", Slot = "18")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xB0F060", Offset = "0xB0F060", VA = "0xB0F060", Slot = "16")]
		public override void ApplyState(RubeAdditionalObjectData stateData)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xB0F134", Offset = "0xB0F134", VA = "0xB0F134", Slot = "17")]
		public override RubeAdditionalObjectData CurrentState()
		{
			return null;
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xB0F1C0", Offset = "0xB0F1C0", VA = "0xB0F1C0", Slot = "15")]
		public override bool HasPersistentState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xB0F1C8", Offset = "0xB0F1C8", VA = "0xB0F1C8", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xB0F284", Offset = "0xB0F284", VA = "0xB0F284")]
		public RubeScaleHandler()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class RubeSimulationHelper : RubeComponent
	{
		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isSimulating;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody rBody;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RubeObject mRubeObj;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _velocity;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 _angularVelocity;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Vector3 velocityBeforePhysicsUpdate;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 curVelocity;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CollisionDetectionMode collisionMode;

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xB0F2CC", Offset = "0xB0F2CC", VA = "0xB0F2CC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xB0F35C", Offset = "0xB0F35C", VA = "0xB0F35C", Slot = "5")]
		public override void Setup(RubeMachinePart parentPart)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xB0F500", Offset = "0xB0F500", VA = "0xB0F500", Slot = "11")]
		public override void OnStartSimulation()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xB0F600", Offset = "0xB0F600", VA = "0xB0F600", Slot = "12")]
		public override void OnStopSimulation()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xB0F6EC", Offset = "0xB0F6EC", VA = "0xB0F6EC", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xB0F6F0", Offset = "0xB0F6F0", VA = "0xB0F6F0", Slot = "13")]
		public override void ActAsPreview()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xB0F6F4", Offset = "0xB0F6F4", VA = "0xB0F6F4", Slot = "14")]
		public override void ActAsObject()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xB0F6F8", Offset = "0xB0F6F8", VA = "0xB0F6F8", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xB0F74C", Offset = "0xB0F74C", VA = "0xB0F74C", Slot = "8")]
		public override void ResetPlacement()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xB0F468", Offset = "0xB0F468", VA = "0xB0F468")]
		public void AssessSimState()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xB0F504", Offset = "0xB0F504", VA = "0xB0F504")]
		private void StartSimulating()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xB0F604", Offset = "0xB0F604", VA = "0xB0F604")]
		private void StopSimulating()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xB0F7A0", Offset = "0xB0F7A0", VA = "0xB0F7A0")]
		public RubeSimulationHelper()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class RubeSubObject : RubeComponent
	{
		[Token(Token = "0x20001F2")]
		public enum PositionMode
		{
			[Token(Token = "0x4000BAB")]
			RelativeToParent,
			[Token(Token = "0x4000BAC")]
			Absolute,
			[Token(Token = "0x4000BAD")]
			NoPositionData
		}

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PositionMode _positionMode;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool _includeInUndoHistory;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		private bool _isSimulated;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SpatialAnchorConnection _spatialAnchorConnection;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InteractableUnityEventWrapper _interactableEvents;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<RubeComponent> _grabChildComponents;

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xB101EC", Offset = "0xB101EC", VA = "0xB101EC", Slot = "5")]
		public override void Setup(RubeMachinePart parentPart)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xB104C8", Offset = "0xB104C8", VA = "0xB104C8")]
		private void OnSpatialAnchorAssigned()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xB10530", Offset = "0xB10530", VA = "0xB10530", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xB105F8", Offset = "0xB105F8", VA = "0xB105F8", Slot = "19")]
		public virtual void ObjectGrabbed()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xB10818", Offset = "0xB10818", VA = "0xB10818", Slot = "20")]
		public virtual void ObjectReleased()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xB10A48", Offset = "0xB10A48", VA = "0xB10A48", Slot = "18")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xB10A94", Offset = "0xB10A94", VA = "0xB10A94", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xB10EF0", Offset = "0xB10EF0", VA = "0xB10EF0", Slot = "8")]
		public override void ResetPlacement()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xB10B78", Offset = "0xB10B78", VA = "0xB10B78")]
		private void ApplyPositionFromData(RubeAdditionalObjectData data)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xB10FCC", Offset = "0xB10FCC", VA = "0xB10FCC", Slot = "15")]
		public override bool HasPersistentState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xB10FD4", Offset = "0xB10FD4", VA = "0xB10FD4", Slot = "16")]
		public override void ApplyState(RubeAdditionalObjectData data)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xB10FD8", Offset = "0xB10FD8", VA = "0xB10FD8", Slot = "17")]
		public override RubeAdditionalObjectData CurrentState()
		{
			return null;
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xB111F8", Offset = "0xB111F8", VA = "0xB111F8")]
		public RubeSubObject()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class RubeVFXHandler : RubeComponent
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VisualEffect effect;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AD0C", Offset = "0x83AD0C")]
		public bool pauseOnGrab;

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xB12FF0", Offset = "0xB12FF0", VA = "0xB12FF0")]
		public void Play()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xB1300C", Offset = "0xB1300C", VA = "0xB1300C", Slot = "11")]
		public override void OnStartSimulation()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xB1305C", Offset = "0xB1305C", VA = "0xB1305C", Slot = "12")]
		public override void OnStopSimulation()
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xB1307C", Offset = "0xB1307C", VA = "0xB1307C", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xB130A8", Offset = "0xB130A8", VA = "0xB130A8", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xB13138", Offset = "0xB13138", VA = "0xB13138", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xB13154", Offset = "0xB13154", VA = "0xB13154")]
		public RubeVFXHandler()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class SurfaceSnapperHandler : RubeComponent
	{
		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AD44", Offset = "0x83AD44")]
		public float snapCheckDistance;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform snapLineStart;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LayerMask layer;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AD7C", Offset = "0x83AD7C")]
		public Transform placementPlane;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool MatchSurfaceNormal;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83ADB4", Offset = "0x83ADB4")]
		public bool RequireLevelSurface;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool DestroyOnInvalidRelease;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83ADEC", Offset = "0x83ADEC")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float lineWidth;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Gradient colorInvalid;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Gradient colorValid;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float lineLength;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] _defaultLine;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] _lineArr;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit _aimHit;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 _hitPosition;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RubeObject mRubeObj;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 targetPlanePoint;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 targetPlaneNormal;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Transform targetSurfacePlane;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool _started;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool isGrabbed;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private HardSurfaceObject validSurfaceObj;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private HardSurfaceObject placementSurfaceObject;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 originalLocalPosition;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Quaternion originalLocalRotation;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private RubeScaleHandler scaler;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AE24", Offset = "0x83AE24")]
		public Action OnSnapEvent;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public UnityEvent OnSnap;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool hasLastSnapLoc;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 lastSnapLoc;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 lastTargetSurfacePlane;

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xC23D5C", Offset = "0xC23D5C", VA = "0xC23D5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xC23F54", Offset = "0xC23F54", VA = "0xC23F54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xC23F60", Offset = "0xC23F60", VA = "0xC23F60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xC24374", Offset = "0xC24374", VA = "0xC24374", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xC243A0", Offset = "0xC243A0", VA = "0xC243A0", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xC23F70", Offset = "0xC23F70", VA = "0xC23F70")]
		private void UpdateBeam()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xC24558", Offset = "0xC24558", VA = "0xC24558")]
		private void PlaceBottomPlaneOnTarget()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xC24F8C", Offset = "0xC24F8C", VA = "0xC24F8C")]
		public void ForceEndSnap()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xC24818", Offset = "0xC24818", VA = "0xC24818")]
		private Quaternion TurretLookRotation(Vector3 approximateForward, Vector3 exactUp)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xC248B0", Offset = "0xC248B0", VA = "0xC248B0")]
		private void MoveRootToPlacement()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xC250B8", Offset = "0xC250B8", VA = "0xC250B8")]
		public void RepositionToLastLoc(bool recordPlacement = true)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xC23E94", Offset = "0xC23E94", VA = "0xC23E94")]
		private void SetToDefaultLine()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xC25218", Offset = "0xC25218", VA = "0xC25218")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xC2521C", Offset = "0xC2521C", VA = "0xC2521C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xC25248", Offset = "0xC25248", VA = "0xC25248", Slot = "18")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xC25250", Offset = "0xC25250", VA = "0xC25250", Slot = "15")]
		public override bool HasPersistentState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xC25258", Offset = "0xC25258", VA = "0xC25258", Slot = "17")]
		public override RubeAdditionalObjectData CurrentState()
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xC254E8", Offset = "0xC254E8", VA = "0xC254E8", Slot = "16")]
		public override void ApplyState(RubeAdditionalObjectData stateData)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xC2571C", Offset = "0xC2571C", VA = "0xC2571C")]
		public SurfaceSnapperHandler()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	[SelectionBase]
	public class RubeObject : RubeMachinePart
	{
		[Token(Token = "0x20001F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836558", Offset = "0x836558")]
		private sealed class <EnablePhysicMaterialNextFixed>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RubeObject <>4__this;

			[Token(Token = "0x170000F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AFA")]
				[Address(RVA = "0x1BF6CB0", Offset = "0x1BF6CB0", VA = "0x1BF6CB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AFC")]
				[Address(RVA = "0x1BF6CF8", Offset = "0x1BF6CF8", VA = "0x1BF6CF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x1BF6B78", Offset = "0x1BF6B78", VA = "0x1BF6B78")]
			[DebuggerHidden]
			public <EnablePhysicMaterialNextFixed>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0x1BF6BA4", Offset = "0x1BF6BA4", VA = "0x1BF6BA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x1BF6BA8", Offset = "0x1BF6BA8", VA = "0x1BF6BA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0x1BF6CB8", Offset = "0x1BF6CB8", VA = "0x1BF6CB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 defaultScale;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Rigidbody rBody;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public InteractableUnityEventWrapper interactableEvents;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AE6C", Offset = "0x83AE6C")]
		public bool isGrabbed;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool isGrabbedFirstFrame;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public bool firstGrab;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		public bool hoveredOnDelete;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool inHandTrackingMode;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AEA4", Offset = "0x83AEA4")]
		public bool grabbedByLeftHand;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject realObject;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool grabPosLock;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float grabUnlockThreshold;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 interactorStartPos;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<Collider> realObjectColliders;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Collider[] allChildColliders;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float materialReturnDelay;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public PhysicMaterial objectPhysicMaterial;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public TouchHandGrabInteractable mTouchInteractable;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GrabInteractable mGrabInteractable;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Action OnGrab;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Action OnRelease;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Action OnReset;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Action OnObjectEnable;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private BoxCollider boundsObject;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AEDC", Offset = "0x83AEDC")]
		public bool StayLevel;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool isSimulated;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		public bool canPortal;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
		public bool canTrigger;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public bool ZeroOutForSubObjects;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AF14", Offset = "0x83AF14")]
		public bool inPreviewMode;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject previewMesh;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public MeshRenderer[] previewMeshRenderers;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public List<Collider> previewColliders;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private PreviewGrabUIOption mPreview;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Transform anchorTransform;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool previewActive;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		private bool followAnchor;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
		private bool _hasPendingForce;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private Vector3 _linearVelocity;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 _angularVelocity;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Transform currentGrabbingHandTransform;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 baseObjPosition;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 baseHandPosition;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Quaternion baseHandRotation;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private SurfaceSnapperHandler snapHelper;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float grabCD;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float grabCDTank;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Vector3 savedBoundsSize;

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xB0A9F8", Offset = "0xB0A9F8", VA = "0xB0A9F8", Slot = "17")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xB0B160", Offset = "0xB0B160", VA = "0xB0B160")]
		public void Start()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xB0B164", Offset = "0xB0B164", VA = "0xB0B164")]
		public void Update()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xB0B790", Offset = "0xB0B790", VA = "0xB0B790", Slot = "18")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xB0B804", Offset = "0xB0B804", VA = "0xB0B804")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xB0B904", Offset = "0xB0B904", VA = "0xB0B904")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xB0B9EC", Offset = "0xB0B9EC", VA = "0xB0B9EC", Slot = "19")]
		public virtual void ActAsObject()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xB0C070", Offset = "0xB0C070", VA = "0xB0C070", Slot = "6")]
		public override void OnMachineLoadComplete(RubeObjectSnapshot loadState)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xB0C074", Offset = "0xB0C074", VA = "0xB0C074", Slot = "7")]
		public override void OnAddedToMachine()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xB0C0B0", Offset = "0xB0C0B0", VA = "0xB0C0B0", Slot = "5")]
		public override void OnLoad(RubeMachinePartData data)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xB0C0B4", Offset = "0xB0C0B4", VA = "0xB0C0B4", Slot = "8")]
		protected override void OnSpatialAnchorAssigned()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xB0C0E8", Offset = "0xB0C0E8", VA = "0xB0C0E8", Slot = "20")]
		public virtual void ObjectReleased()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xB0C960", Offset = "0xB0C960", VA = "0xB0C960", Slot = "21")]
		public virtual void ObjectGrabbed()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xB0D15C", Offset = "0xB0D15C", VA = "0xB0D15C", Slot = "12")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xB0C894", Offset = "0xB0C894", VA = "0xB0C894")]
		public void EnterGrabCooldown()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xB0B788", Offset = "0xB0B788", VA = "0xB0B788")]
		public void ExitGrabCooldown()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xB0D1C4", Offset = "0xB0D1C4", VA = "0xB0D1C4", Slot = "22")]
		public virtual void ActAsPreview()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xB0D540", Offset = "0xB0D540", VA = "0xB0D540")]
		public void HandlePreview(PointerArgs args)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xB0B9B8", Offset = "0xB0B9B8", VA = "0xB0B9B8")]
		public void SetPreview(PreviewGrabUIOption p)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xB0D5F8", Offset = "0xB0D5F8", VA = "0xB0D5F8")]
		public void ClearPreview()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xB0B5D0", Offset = "0xB0B5D0", VA = "0xB0B5D0")]
		public void ShowPreview()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xB0B038", Offset = "0xB0B038", VA = "0xB0B038")]
		public void HidePreview()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xB0D644", Offset = "0xB0D644", VA = "0xB0D644")]
		public void TogglePreviewInteraction(bool on)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xB0D088", Offset = "0xB0D088", VA = "0xB0D088")]
		public void DisablePhysicMaterial()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xB0C7DC", Offset = "0xB0C7DC", VA = "0xB0C7DC")]
		public void EnablePhysicMaterial()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xB0AFCC", Offset = "0xB0AFCC", VA = "0xB0AFCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840ED4", Offset = "0x840ED4")]
		private IEnumerator EnablePhysicMaterialNextFixed()
		{
			return null;
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xB0C870", Offset = "0xB0C870", VA = "0xB0C870")]
		public void ApplyVelocities(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xB0D788", Offset = "0xB0D788", VA = "0xB0D788")]
		public void PrimeForDestroy()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xB0D9CC", Offset = "0xB0D9CC", VA = "0xB0D9CC")]
		public void ManuallyToggleGrab(bool on)
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xB0ADE4", Offset = "0xB0ADE4", VA = "0xB0ADE4")]
		public void HandleInputChange(bool handTracking)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xB0D9EC", Offset = "0xB0D9EC", VA = "0xB0D9EC")]
		public RubeObject()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class RubePortalHook : MonoBehaviour
	{
		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform parentToPortal;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3 velocityCache;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Rigidbody rBody;

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xB0DC80", Offset = "0xB0DC80", VA = "0xB0DC80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xB0DCD4", Offset = "0xB0DCD4", VA = "0xB0DCD4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xB0DD64", Offset = "0xB0DD64", VA = "0xB0DD64")]
		public RubePortalHook()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class RubeTrackSnappable : MonoBehaviour
	{
		[Token(Token = "0x20001F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836568", Offset = "0x836568")]
		private sealed class <ReconnectDelayed>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RubeTrackSnappable <>4__this;

			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x170000F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B12")]
				[Address(RVA = "0x1BF7404", Offset = "0x1BF7404", VA = "0x1BF7404", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B14")]
				[Address(RVA = "0x1BF744C", Offset = "0x1BF744C", VA = "0x1BF744C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x1BF7314", Offset = "0x1BF7314", VA = "0x1BF7314")]
			[DebuggerHidden]
			public <ReconnectDelayed>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x1BF7340", Offset = "0x1BF7340", VA = "0x1BF7340", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x1BF7344", Offset = "0x1BF7344", VA = "0x1BF7344", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x1BF740C", Offset = "0x1BF740C", VA = "0x1BF740C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836578", Offset = "0x836578")]
		private sealed class <ResetLayerDelayed>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RubeTrackSnappable <>4__this;

			[Token(Token = "0x170000F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B18")]
				[Address(RVA = "0x1BF754C", Offset = "0x1BF754C", VA = "0x1BF754C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B1A")]
				[Address(RVA = "0x1BF7594", Offset = "0x1BF7594", VA = "0x1BF7594", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x1BF7454", Offset = "0x1BF7454", VA = "0x1BF7454")]
			[DebuggerHidden]
			public <ResetLayerDelayed>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x1BF7480", Offset = "0x1BF7480", VA = "0x1BF7480", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x1BF7484", Offset = "0x1BF7484", VA = "0x1BF7484", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B19")]
			[Address(RVA = "0x1BF7554", Offset = "0x1BF7554", VA = "0x1BF7554", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AF6C", Offset = "0x83AF6C")]
		private float speed;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float friction;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distanceTravelled;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public EndOfPathInstruction endOfPathInstruction;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] CompatibleTrackTypes;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83AFA4", Offset = "0x83AFA4")]
		public Transform snappingOrigin;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float disconnectForce;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float reconnectDelay;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float layerMaskDelay;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject meshes;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject[] wheels;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractableUnityEventWrapper interactableEvents;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Track track;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Track lastTrack;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Spline spline;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool snapped;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool canConnect;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool objectSelected;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 correctedPosition;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 lastVelocity;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 lastAcceleration;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool flipped;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool justSnapped;

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xB11920", Offset = "0xB11920", VA = "0xB11920")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xB11B40", Offset = "0xB11B40", VA = "0xB11B40")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xB11C3C", Offset = "0xB11C3C", VA = "0xB11C3C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xB12260", Offset = "0xB12260", VA = "0xB12260")]
		private void UpdateWheels(float travelDistance)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xB12538", Offset = "0xB12538", VA = "0xB12538")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xB12934", Offset = "0xB12934", VA = "0xB12934")]
		private void SetColliderLayers(string layerName)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xB12AE8", Offset = "0xB12AE8", VA = "0xB12AE8")]
		private void OnSelectListener()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xB12B08", Offset = "0xB12B08", VA = "0xB12B08")]
		private void OnDeselectListener()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xB12B10", Offset = "0xB12B10", VA = "0xB12B10")]
		private void OnResetListener()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xB12794", Offset = "0xB12794", VA = "0xB12794")]
		public void Snap(Track snappedTrack)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xB12424", Offset = "0xB12424", VA = "0xB12424")]
		public void Disconnect(float connectDelay, float maskDelay)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xB12D08", Offset = "0xB12D08", VA = "0xB12D08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840F84", Offset = "0x840F84")]
		private IEnumerator ReconnectDelayed(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xB12D84", Offset = "0xB12D84", VA = "0xB12D84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x840FE4", Offset = "0x840FE4")]
		private IEnumerator ResetLayerDelayed(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xB12BF4", Offset = "0xB12BF4", VA = "0xB12BF4")]
		private bool CanSnap(Track track)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xB12E00", Offset = "0xB12E00", VA = "0xB12E00")]
		public RubeTrackSnappable()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class RoomPrefab : MonoBehaviour
	{
		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer[] RoomObjectRenderers;

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1C032D0", Offset = "0x1C032D0", VA = "0x1C032D0")]
		public RoomPrefab()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class ScaleToFloor : MonoBehaviour
	{
		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ScaleRoot;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _scaleSet;

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xB139B4", Offset = "0xB139B4", VA = "0xB139B4")]
		public void SetScale()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xB13DA0", Offset = "0xB13DA0", VA = "0xB13DA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xB13DA8", Offset = "0xB13DA8", VA = "0xB13DA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xB13DB8", Offset = "0xB13DB8", VA = "0xB13DB8")]
		public ScaleToFloor()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class TouchGlowMaterial : MonoBehaviour
	{
		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer _renderer;

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xDA0FE0", Offset = "0xDA0FE0", VA = "0xDA0FE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xDA1034", Offset = "0xDA1034", VA = "0xDA1034")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xDA1378", Offset = "0xDA1378", VA = "0xDA1378")]
		public TouchGlowMaterial()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public static class RubeIO
	{
		[Token(Token = "0x20001FF")]
		public enum MACHINE_LOAD_RESULT
		{
			[Token(Token = "0x4000C2D")]
			SUCCUSS,
			[Token(Token = "0x4000C2E")]
			UNSUPPORTED_VERSION,
			[Token(Token = "0x4000C2F")]
			FAILURE
		}

		[Serializable]
		[Token(Token = "0x2000200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836588", Offset = "0x836588")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<FileInfo, DateTime> <>9__6_0;

			[Token(Token = "0x4000C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<char, bool> <>9__9_0;

			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x1BF5468", Offset = "0x1BF5468", VA = "0x1BF5468")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x1BF5470", Offset = "0x1BF5470", VA = "0x1BF5470")]
			internal DateTime <GetAllSavedMachines>b__6_0(FileInfo f)
			{
				return default(DateTime);
			}

			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x1BF548C", Offset = "0x1BF548C", VA = "0x1BF548C")]
			internal bool <GetMachineDataVersionFromFile>b__9_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C2A")]
		public const string DEFAULT_MACHINE_NAME = "defaultMachine";

		[Token(Token = "0x4000C2B")]
		private const string LAST_SAVED_MACHINE_KEY = "LastSavedMachine";

		[Token(Token = "0x170000F7")]
		private static string DataFolder
		{
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0x1C0DA44", Offset = "0x1C0DA44", VA = "0x1C0DA44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1C0DACC", Offset = "0x1C0DACC", VA = "0x1C0DACC")]
		private static string GetLocalSavePath(string filename)
		{
			return null;
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x1C0DB88", Offset = "0x1C0DB88", VA = "0x1C0DB88")]
		public static List<string> GetAllSavedMachines()
		{
			return null;
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1C0E520", Offset = "0x1C0E520", VA = "0x1C0E520")]
		public static bool MachineFileExists(string filename)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1C0E538", Offset = "0x1C0E538", VA = "0x1C0E538")]
		public static void DeleteMachineFile(string filename)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1C0E0AC", Offset = "0x1C0E0AC", VA = "0x1C0E0AC")]
		public static int GetMachineDataVersionFromFile(string fileName)
		{
			return default(int);
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1C0E5E0", Offset = "0x1C0E5E0", VA = "0x1C0E5E0")]
		public static MACHINE_LOAD_RESULT LoadMachineDataFromFile(string fileName, out RubeMachineData machineData)
		{
			return default(MACHINE_LOAD_RESULT);
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1C0E7CC", Offset = "0x1C0E7CC", VA = "0x1C0E7CC")]
		public static void SaveMachineDataToFile(RubeMachineData data, string fileName)
		{
		}
	}
	[Token(Token = "0x2000201")]
	public static class RubeSaveVersion
	{
		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int VERSION;

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xB0EDC8", Offset = "0xB0EDC8", VA = "0xB0EDC8")]
		public static bool CanLoadVersion(int version)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xB0EDD4", Offset = "0xB0EDD4", VA = "0xB0EDD4")]
		public static string ConvertVersion(int fromVersion, string saveText)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000202")]
	public class RubeMachineData
	{
		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Version;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DisplayName;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<RubeMachinePartData> Parts;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RubeMachineSnapshot ResetState;

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x1C0FFBC", Offset = "0x1C0FFBC", VA = "0x1C0FFBC")]
		public RubeMachineData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000203")]
	public class RubeMachinePartData
	{
		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AssetName;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Guid ID;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RubeObjectSnapshot State;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RubeObjectSnapshot DefaultState;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, Guid> References;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool IsAnchored;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string AnchorUuid;

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xB086AC", Offset = "0xB086AC", VA = "0xB086AC")]
		public RubeMachinePartData()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xB08E30", Offset = "0xB08E30", VA = "0xB08E30")]
		public RubeMachinePartData(RubeMachinePartData data)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xB08E98", Offset = "0xB08E98", VA = "0xB08E98")]
		public void SaveRubeReference(string key, RubeReference reference)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xB08F50", Offset = "0xB08F50", VA = "0xB08F50")]
		public Guid LoadRubeReference(string key, RubeReference reference)
		{
			return default(Guid);
		}
	}
	[Serializable]
	[Token(Token = "0x2000204")]
	public class RubeMachineSnapshot
	{
		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<Guid, RubeObjectSnapshot> ObjectStates;

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xB08FE4", Offset = "0xB08FE4", VA = "0xB08FE4")]
		public RubeMachineSnapshot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000205")]
	public class RubeObjectSnapshot
	{
		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 PositionOffset;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion RotationOffset;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Guid> ChildParts;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Dictionary<string, RubeAdditionalObjectData> AdditionalData;

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xB08D40", Offset = "0xB08D40", VA = "0xB08D40")]
		public RubeObjectSnapshot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000206")]
	public class RubeAdditionalObjectData
	{
		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Guid RubeId;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PoseData LocalOffset;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PoseData[] ControlPointData;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SubObjectData SubObjectData;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Guid ReferenceData;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<string, bool> Flags;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Dictionary<string, float> FloatVariables;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, float[]> FloatArrayVariables;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<string, Guid> References;

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x1C032E0", Offset = "0x1C032E0", VA = "0x1C032E0")]
		public void SetFlag(string key, bool value)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x1C03348", Offset = "0x1C03348", VA = "0x1C03348")]
		public bool GetFlag(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x1C033A8", Offset = "0x1C033A8", VA = "0x1C033A8")]
		public void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x1C03418", Offset = "0x1C03418", VA = "0x1C03418")]
		public float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x1C03478", Offset = "0x1C03478", VA = "0x1C03478")]
		public void SetFloatArray(string key, float[] value)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x1C034E0", Offset = "0x1C034E0", VA = "0x1C034E0")]
		public float[] GetFloatArray(string key)
		{
			return null;
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x1C03540", Offset = "0x1C03540", VA = "0x1C03540")]
		public void SetReference(string key, Guid value)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1C035B8", Offset = "0x1C035B8", VA = "0x1C035B8")]
		public Guid GetReference(string key)
		{
			return default(Guid);
		}

		[Token(Token = "0x6000B41")]
		private void setStoredValue<T>(ref Dictionary<string, T> storage, string key, T value)
		{
		}

		[Token(Token = "0x6000B42")]
		private T getStoredValue<T>(Dictionary<string, T> storage, string key)
		{
			return (T)null;
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x1C03618", Offset = "0x1C03618", VA = "0x1C03618")]
		public RubeAdditionalObjectData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000207")]
	public class SubObjectData
	{
		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsAnchored;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AnchorUuid;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Position;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion Rotation;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 PositionOffset;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quaternion RotationOffset;

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xC23D54", Offset = "0xC23D54", VA = "0xC23D54")]
		public SubObjectData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000208")]
	public class PoseData
	{
		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float[] _data;

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x9A1480", Offset = "0x9A1480", VA = "0x9A1480")]
		public PoseData(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x9A1584", Offset = "0x9A1584", VA = "0x9A1584")]
		public bool GetPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x9A16B0", Offset = "0x9A16B0", VA = "0x9A16B0")]
		public Pose GetPose()
		{
			return default(Pose);
		}
	}
	[Token(Token = "0x2000209")]
	public class RubeReference : MonoBehaviour
	{
		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83AFEC", Offset = "0x83AFEC")]
		private Guid <RubeID>k__BackingField;

		[Token(Token = "0x170000F8")]
		public Guid RubeID
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0xB0EC50", Offset = "0xB0EC50", VA = "0xB0EC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8410E4", Offset = "0x8410E4")]
			get
			{
				return default(Guid);
			}
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0xB0EC5C", Offset = "0xB0EC5C", VA = "0xB0EC5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8410F4", Offset = "0x8410F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xB064F4", Offset = "0xB064F4", VA = "0xB064F4")]
		public void AssignNewRubeID()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xB0EC64", Offset = "0xB0EC64", VA = "0xB0EC64")]
		public void AssignRubeID(string idStr)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xB06AD0", Offset = "0xB06AD0", VA = "0xB06AD0")]
		public void AssignRubeID(Guid id)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xB0ED60", Offset = "0xB0ED60", VA = "0xB0ED60", Slot = "4")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xB0EDC0", Offset = "0xB0EDC0", VA = "0xB0EDC0")]
		public RubeReference()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class HardSurfaceObject : MonoBehaviour
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform surfacePlane;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gridSurfaceVisualizerPlaceholder;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool levelSurface;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Bounds _myBounds;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool hovering;

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x1C27200", Offset = "0x1C27200", VA = "0x1C27200")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1C27318", Offset = "0x1C27318", VA = "0x1C27318")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1C2731C", Offset = "0x1C2731C", VA = "0x1C2731C")]
		public void Hover()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1C27348", Offset = "0x1C27348", VA = "0x1C27348")]
		public void UnHover()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1C27368", Offset = "0x1C27368", VA = "0x1C27368")]
		public HardSurfaceObject()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class LoadButtonHook : MonoBehaviour
	{
		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Button mButton;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string loadName;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SystemWindowHandler sysHandler;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI buttonText;

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xA1C8EC", Offset = "0xA1C8EC", VA = "0xA1C8EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xA1C9A8", Offset = "0xA1C9A8", VA = "0xA1C9A8")]
		public void LoadMachine()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xA1C9CC", Offset = "0xA1C9CC", VA = "0xA1C9CC")]
		public void SetName(string name)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xA1C9F8", Offset = "0xA1C9F8", VA = "0xA1C9F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xA1CA94", Offset = "0xA1CA94", VA = "0xA1CA94")]
		public LoadButtonHook()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class ManageSaveButtonHook : MonoBehaviour
	{
		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string saveName;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI saveNameText;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RubeButton deleteButton;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RubeButton shareButton;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RubeButton renameButton;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SystemWindowHandler sysHandler;

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xA1F5F4", Offset = "0xA1F5F4", VA = "0xA1F5F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xA1F690", Offset = "0xA1F690", VA = "0xA1F690")]
		public void SetName(string name)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xA1F6BC", Offset = "0xA1F6BC", VA = "0xA1F6BC")]
		public void PromptDelete()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xA1F750", Offset = "0xA1F750", VA = "0xA1F750")]
		public void RenameButton()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xA1F754", Offset = "0xA1F754", VA = "0xA1F754")]
		public void ShareButton()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xA1F758", Offset = "0xA1F758", VA = "0xA1F758")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xA1F7F4", Offset = "0xA1F7F4", VA = "0xA1F7F4")]
		public ManageSaveButtonHook()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class ChangePalateCategory : MonoBehaviour
	{
		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ballsCategoryWindow;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject solidsCategoryWindow;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject leversCategoryWindow;

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xB2C918", Offset = "0xB2C918", VA = "0xB2C918")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xB2C964", Offset = "0xB2C964", VA = "0xB2C964")]
		public void ChangeCategory(string cat)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xB2CA5C", Offset = "0xB2CA5C", VA = "0xB2CA5C")]
		private void DisableCats()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xB2CAB4", Offset = "0xB2CAB4", VA = "0xB2CAB4")]
		public ChangePalateCategory()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class ChangePalmUIDesignHelper : MonoBehaviour
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject phoneSlideUI;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject originalAntennaUI;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject highAntennaUI;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject sideAntennaUI;

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xB2CABC", Offset = "0xB2CABC", VA = "0xB2CABC")]
		public void ChangeUI(string targetUI)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xB2CBE8", Offset = "0xB2CBE8", VA = "0xB2CBE8")]
		private void DisableUIs()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xB2CC54", Offset = "0xB2CC54", VA = "0xB2CC54")]
		public ChangePalmUIDesignHelper()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class ColourManager : MonoBehaviour
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onSchemeChange;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColourScheme[] colourSchemes;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public ColourScheme currentScheme;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83B00C", Offset = "0x83B00C")]
		private static ColourManager <Instance>k__BackingField;

		[Token(Token = "0x170000F9")]
		public static ColourManager Instance
		{
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0xB2FD68", Offset = "0xB2FD68", VA = "0xB2FD68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841104", Offset = "0x841104")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0xB2FDB4", Offset = "0xB2FDB4", VA = "0xB2FDB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841114", Offset = "0x841114")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xB2FE04", Offset = "0xB2FE04", VA = "0xB2FE04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xB2FEDC", Offset = "0xB2FEDC", VA = "0xB2FEDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xB2FF28", Offset = "0xB2FF28", VA = "0xB2FF28")]
		public void SetColourScheme(string newScheme)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xB2FFE8", Offset = "0xB2FFE8", VA = "0xB2FFE8")]
		public ColourManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000210")]
	public class ColourScheme
	{
		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string schemeName;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B01C", Offset = "0x83B01C")]
		public Color backgroundColor;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color primaryColour;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color secondaryColour;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color selectColour;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color disabledColour;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color warningColour;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color textFieldColour;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color highlightColour;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B054", Offset = "0x83B054")]
		public Color titleTextColour;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color bodyTextColour;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Color buttonTextColour;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Color textInputTextColour;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B08C", Offset = "0x83B08C")]
		public Color controllerNormal;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Color controllerHover;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Color controllerSelect;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Color controllerDisabled;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B0C4", Offset = "0x83B0C4")]
		public Mesh handleMesh;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Material handleMaterial;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Material handleSelectedMaterial;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B0FC", Offset = "0x83B0FC")]
		public Mesh controlPointMesh;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Material controlPointMaterial;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Material controlPointSelectedMaterial;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Material controlPointDeleteMaterial;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Material controlPointMergeMaterial;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B134", Offset = "0x83B134")]
		public Mesh cpCreatorMesh;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Material cpCreatorMaterial;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Material cpCreatorSelectedMaterial;

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xB2FFF0", Offset = "0xB2FFF0", VA = "0xB2FFF0")]
		public ColourScheme()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class ControllerPointerColourHook : MonoBehaviour
	{
		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InteractorDebugVisual pointerDebugVisual;

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xBBB1F8", Offset = "0xBBB1F8", VA = "0xBBB1F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xBBB30C", Offset = "0xBBB30C", VA = "0xBBB30C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xBBB310", Offset = "0xBBB310", VA = "0xBBB310")]
		private void UpdateColourScheme()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xBBB3F8", Offset = "0xBBB3F8", VA = "0xBBB3F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xBBB4E8", Offset = "0xBBB4E8", VA = "0xBBB4E8")]
		public ControllerPointerColourHook()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class HandleColourHook : MonoBehaviour
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFilter handleMesh;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer handleRenderer;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool currentlySelected;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material normalMaterial;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material selectedMaterial;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InteractableUnityEventWrapper interactableEvents;

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x1C259C0", Offset = "0x1C259C0", VA = "0x1C259C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x1C25B80", Offset = "0x1C25B80", VA = "0x1C25B80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x1C25C7C", Offset = "0x1C25C7C", VA = "0x1C25C7C")]
		private void SelectedHandle()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1C25CA0", Offset = "0x1C25CA0", VA = "0x1C25CA0")]
		private void UnselectedHandle()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1C25B84", Offset = "0x1C25B84", VA = "0x1C25B84")]
		private void UpdateColourScheme()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1C25CC4", Offset = "0x1C25CC4", VA = "0x1C25CC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x1C25DB4", Offset = "0x1C25DB4", VA = "0x1C25DB4")]
		public HandleColourHook()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class HighlightEventHandler : MonoBehaviour
	{
		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] injectionList;

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x1C27370", Offset = "0x1C27370", VA = "0x1C27370")]
		public void SetHighlight(string newHighlight)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1C274BC", Offset = "0x1C274BC", VA = "0x1C274BC")]
		public void RemoveHighlight(string targetHighlight)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1C27608", Offset = "0x1C27608", VA = "0x1C27608")]
		public void InjectHighlightList()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x1C27758", Offset = "0x1C27758", VA = "0x1C27758")]
		public HighlightEventHandler()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class HighlightHook : MonoBehaviour
	{
		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject highlightObject;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image[] highlightImages;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpriteRenderer[] highlightSpriteRenderers;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string highlightID;

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x1C27760", Offset = "0x1C27760", VA = "0x1C27760")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x1C27A5C", Offset = "0x1C27A5C", VA = "0x1C27A5C")]
		private void CheckHighlightState()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x1C27C4C", Offset = "0x1C27C4C", VA = "0x1C27C4C")]
		public void UpdateHighlightState(string[] incomingActiveHighlights)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x1C27C2C", Offset = "0x1C27C2C", VA = "0x1C27C2C")]
		private void ToggleHighlightObject(bool on)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1C1F1A8", Offset = "0x1C1F1A8", VA = "0x1C1F1A8")]
		public void SetHighlightID(string newID)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x1C27918", Offset = "0x1C27918", VA = "0x1C27918")]
		public void UpdateHighlightColour()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x1C27CEC", Offset = "0x1C27CEC", VA = "0x1C27CEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1C27E98", Offset = "0x1C27E98", VA = "0x1C27E98")]
		public HighlightHook()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class HighlightManager : MonoBehaviour
	{
		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<string[]> onHighlightChange;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<string> activeHighlights;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		protected string[] blankHighlightList;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83B17C", Offset = "0x83B17C")]
		private static HighlightManager <Instance>k__BackingField;

		[Token(Token = "0x170000FA")]
		public static HighlightManager Instance
		{
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0x1C27EA0", Offset = "0x1C27EA0", VA = "0x1C27EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841124", Offset = "0x841124")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x1C27EEC", Offset = "0x1C27EEC", VA = "0x1C27EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841134", Offset = "0x841134")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x1C27F3C", Offset = "0x1C27F3C", VA = "0x1C27F3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x1C273CC", Offset = "0x1C273CC", VA = "0x1C273CC")]
		public void SetHighlight(string newHighlight)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x1C27518", Offset = "0x1C27518", VA = "0x1C27518")]
		public void RemoveHighlight(string targetHighlight)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x1C27664", Offset = "0x1C27664", VA = "0x1C27664")]
		public void InjectHighlightList(string[] newHighlights)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1C28014", Offset = "0x1C28014", VA = "0x1C28014")]
		public void ClearAllHighlights()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x1C27AD0", Offset = "0x1C27AD0", VA = "0x1C27AD0")]
		public bool IsHighlighted(string id)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x1C280C4", Offset = "0x1C280C4", VA = "0x1C280C4")]
		public HighlightManager()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class InteractableColorVisualCanvas : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000217")]
		public class ColorState
		{
			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color Color;

			[Token(Token = "0x4000CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationCurve ColorCurve;

			[Token(Token = "0x4000CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float ColorTime;

			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x1BEF4D4", Offset = "0x1BEF4D4", VA = "0x1BEF4D4")]
			public ColorState()
			{
			}
		}

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "InterfaceAttribute", RVA = "0x83B18C", Offset = "0x83B18C")]
		private MonoBehaviour _interactableView;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image[] targetVisuals;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ColorState _normalColorState;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ColorState _hoverColorState;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ColorState _selectColorState;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ColorState _targetState;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color _currentColor;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color _startColor;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _timer;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IInteractableView InteractableView;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _colorShaderID;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected bool _started;

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xA18DB4", Offset = "0xA18DB4", VA = "0xA18DB4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xA18E08", Offset = "0xA18E08", VA = "0xA18E08", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xA18E84", Offset = "0xA18E84", VA = "0xA18E84", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xA18FB0", Offset = "0xA18FB0", VA = "0xA18FB0", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xA190DC", Offset = "0xA190DC", VA = "0xA190DC", Slot = "8")]
		protected virtual void UpdateVisual()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xA191C4", Offset = "0xA191C4", VA = "0xA191C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xA192D0", Offset = "0xA192D0", VA = "0xA192D0")]
		private void UpdateVisualState(InteractableStateChangeArgs args)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xA192DC", Offset = "0xA192DC", VA = "0xA192DC")]
		public void InjectAllInteractableColorVisual(IInteractableView interactableView, MaterialPropertyBlockEditor editor)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xA192E0", Offset = "0xA192E0", VA = "0xA192E0")]
		public void InjectInteractableView(IInteractableView interactableview)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xA19370", Offset = "0xA19370", VA = "0xA19370")]
		public void InjectOptionalNormalColorState(ColorState normalColorState)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xA19378", Offset = "0xA19378", VA = "0xA19378")]
		public void InjectOptionalHoverColorState(ColorState hoverColorState)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xA19380", Offset = "0xA19380", VA = "0xA19380")]
		public void InjectOptionalSelectColorState(ColorState selectColorState)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xA19388", Offset = "0xA19388", VA = "0xA19388")]
		public InteractableColorVisualCanvas()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class PalmUIController : MonoBehaviour
	{
		[Token(Token = "0x2000219")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836598", Offset = "0x836598")]
		private sealed class <RefreshWindow>d__145 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170000FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BDE")]
				[Address(RVA = "0x1BF3A60", Offset = "0x1BF3A60", VA = "0x1BF3A60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BE0")]
				[Address(RVA = "0x1BF3AA8", Offset = "0x1BF3AA8", VA = "0x1BF3AA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x1BF39A4", Offset = "0x1BF39A4", VA = "0x1BF39A4")]
			[DebuggerHidden]
			public <RefreshWindow>d__145(int <>1__state)
			{
			}

			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x1BF39D0", Offset = "0x1BF39D0", VA = "0x1BF39D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x1BF39D4", Offset = "0x1BF39D4", VA = "0x1BF39D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x1BF3A68", Offset = "0x1BF3A68", VA = "0x1BF3A68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200021A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8365A8", Offset = "0x8365A8")]
		private sealed class <UpdateWindowInFrame>d__150 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PalmUIController <>4__this;

			[Token(Token = "0x170000FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BE4")]
				[Address(RVA = "0x1BF3B84", Offset = "0x1BF3B84", VA = "0x1BF3B84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BE6")]
				[Address(RVA = "0x1BF3BCC", Offset = "0x1BF3BCC", VA = "0x1BF3BCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x1BF3AB0", Offset = "0x1BF3AB0", VA = "0x1BF3AB0")]
			[DebuggerHidden]
			public <UpdateWindowInFrame>d__150(int <>1__state)
			{
			}

			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x1BF3ADC", Offset = "0x1BF3ADC", VA = "0x1BF3ADC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x1BF3AE0", Offset = "0x1BF3AE0", VA = "0x1BF3AE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x1BF3B8C", Offset = "0x1BF3B8C", VA = "0x1BF3B8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject PalatteWindow;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject LeftHandPose;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject RightHandPose;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform OrientationAnchor;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 leftPalmPos;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 leftPalmRot;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 leftControllerPos;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 leftControllerRot;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 rightPalmPos;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 rightPalmRot;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 rightControllerPos;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 rightControllerRot;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject releaseHandle;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string activeWindow;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private UIManager uiManager;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B258", Offset = "0x83B258")]
		public GameObject[] enableInPlay;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject firstTimeWindow;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject firstTimeConfigWindow;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B290", Offset = "0x83B290")]
		public UIInteractabilityHandler uiInteractionHandler;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public PromptWindowHandler promptWindow;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B2C8", Offset = "0x83B2C8")]
		public TutorialDispatch tutorialDispatch;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject tutorialWindowObject;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TutorialWindowHandler tutorialUI;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string windowMessage;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject catSelectMessageWindow;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public TextMeshProUGUI catSelectMessageText;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject loadoutMessagePane;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public TextMeshProUGUI customLoadoutMessageText;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject[] endTutorialMessageButtons;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject[] tryOtherTutorialMessageButtons;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B300", Offset = "0x83B300")]
		public bool inListView;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private string curPaletteCat;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject listViewButton;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Image listViewDisplayImage;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Sprite listViewIcon;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Sprite gridViewIcon;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public GameObject catBackButton;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public GameObject catLeftButton;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public GameObject catRightButton;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public GameObject categorySelectWindow;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public UIRefresher catSelectLayoutGroup;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public UIRefresher objSelectLayoutGroup;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public RubeContainer[] whiteList;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public CategoryFilter curCategoryFilter;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private readonly CategoryFilter defaultCatFilter;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public CustomPaletteLoadout[] categoryContents;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public GameObject catButtonBalls;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public GameObject catButtonMovers;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public GameObject catButtonContainers;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public GameObject catButtonTracks;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public GameObject catButtonMechanical;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public GameObject catButtonMusical;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public GameObject catButtonBlocks;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public GameObject catButtonFurniture;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public GameObject catButtonMisc;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B338", Offset = "0x83B338")]
		public bool inCustomLoadout;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public GameObject loadoutWindow;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public GameObject gridOptionPrefab;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public GameObject listOptionPrefab;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public TextMeshProUGUI customLoadoutTitleText;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public Transform loadoutGridOptionGroup;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public Transform loadoutListOptionGroup;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B370", Offset = "0x83B370")]
		public GameObject deleteHoverPrompt;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public UIHoverDeleteHandler deleteHandler;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B3A8", Offset = "0x83B3A8")]
		public GameObject SystemWindow;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public SystemWindowHandler sysHandler;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public GameObject exitUIButton;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public GameObject bottomBar;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public GameObject hideHandlesPrompt;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B3E0", Offset = "0x83B3E0")]
		public GameObject swipeBar;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public Button[] carouselDots;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public Sprite carouselBlankImage;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public Sprite carouselHighlightImage;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B418", Offset = "0x83B418")]
		public ScrubberUIController palmScrubber;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public TextMeshProUGUI pausePhysicsButtonText;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public Image pausePhysicsButtonIcon;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public Sprite pauseIcon;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public Sprite playIcon;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public GameObject releaseButton;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public GameObject lockButton;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public GameObject[] ActiveOnPalette;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public GameObject[] ActiveOnSystem;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public GameObject[] ActiveOnTool;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B450", Offset = "0x83B450")]
		public ToolUI toolUI;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private string returnPaletteCat;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private string curSystemWindow;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private string curTutorialWindow;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private int curTutorialIndex;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		public bool hidActiveWindow;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public Action<string> onCategorySelect;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private int categoryIndex;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private int maxCategories;

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xBF43DC", Offset = "0xBF43DC", VA = "0xBF43DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xBF4430", Offset = "0xBF4430", VA = "0xBF4430")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xBF4434", Offset = "0xBF4434", VA = "0xBF4434")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xBF4498", Offset = "0xBF4498", VA = "0xBF4498")]
		public void ShowPrompt(PromptWindowConfig prompt)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xBF44E4", Offset = "0xBF44E4", VA = "0xBF44E4")]
		public void ChangeCategory(string cat)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xBF4F14", Offset = "0xBF4F14", VA = "0xBF4F14")]
		public void ChangeCategory(int catIndex)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xBF48D8", Offset = "0xBF48D8", VA = "0xBF48D8")]
		private void DisableCats()
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xBF491C", Offset = "0xBF491C", VA = "0xBF491C")]
		private void ToggleCategoryNavButtons(bool on)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xBF5074", Offset = "0xBF5074", VA = "0xBF5074")]
		public void HideActiveWindow()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xBF5810", Offset = "0xBF5810", VA = "0xBF5810")]
		public void ShowLastActiveWindow()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xBF5234", Offset = "0xBF5234", VA = "0xBF5234")]
		public void TogglePalatte(bool on)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xBF591C", Offset = "0xBF591C", VA = "0xBF591C")]
		public void TogglePalatte(bool on, string targetCategory)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xBF55D0", Offset = "0xBF55D0", VA = "0xBF55D0")]
		public void ToggleSystemMenu(bool on)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xBF5DCC", Offset = "0xBF5DCC", VA = "0xBF5DCC")]
		public void HidePalmMenu()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xBF6068", Offset = "0xBF6068", VA = "0xBF6068")]
		public void ToggleDeletePrompt(bool on)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xBF6088", Offset = "0xBF6088", VA = "0xBF6088")]
		public void ToggleTutorial(bool on, string destination = "system")
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xBF5C0C", Offset = "0xBF5C0C", VA = "0xBF5C0C")]
		public void ToggleTutorial(bool on)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xBF6338", Offset = "0xBF6338", VA = "0xBF6338")]
		public void ToggleListView()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xBF49B0", Offset = "0xBF49B0", VA = "0xBF49B0")]
		public void UpdateCategorySelectWindow()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xBF63EC", Offset = "0xBF63EC", VA = "0xBF63EC")]
		public void UpdateCarouselDotsFilter()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xBF6884", Offset = "0xBF6884", VA = "0xBF6884")]
		public void ShowFirstTimeWindow()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xBF69EC", Offset = "0xBF69EC", VA = "0xBF69EC")]
		public void ShowFirstTimeConfigWindow()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xBF6B54", Offset = "0xBF6B54", VA = "0xBF6B54")]
		public void NavFromFirstTimeWindow(string destination)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xBF6D78", Offset = "0xBF6D78", VA = "0xBF6D78")]
		public void CatNav_Left()
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xBF6DCC", Offset = "0xBF6DCC", VA = "0xBF6DCC")]
		public void CatNav_Right()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xBF6E2C", Offset = "0xBF6E2C", VA = "0xBF6E2C")]
		public void CatNav_Back()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xBF6E78", Offset = "0xBF6E78", VA = "0xBF6E78")]
		public void UnlockUI()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xBF6F24", Offset = "0xBF6F24", VA = "0xBF6F24")]
		public void LockUI()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xBF7010", Offset = "0xBF7010", VA = "0xBF7010")]
		public void UndoMachine()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xBF7070", Offset = "0xBF7070", VA = "0xBF7070")]
		public void SaveMachineState()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xBF70C8", Offset = "0xBF70C8", VA = "0xBF70C8")]
		public void GoToSave()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xBF712C", Offset = "0xBF712C", VA = "0xBF712C")]
		public void ResetMachine()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xBF7188", Offset = "0xBF7188", VA = "0xBF7188")]
		public void TogglePhysics()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xBF727C", Offset = "0xBF727C", VA = "0xBF727C")]
		public void UpdatePalmOffset(int handed = -1)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xBF752C", Offset = "0xBF752C", VA = "0xBF752C")]
		public void UpdateHeadOffset()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xBF758C", Offset = "0xBF758C", VA = "0xBF758C")]
		public void EnterPlay()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xBF4CB0", Offset = "0xBF4CB0", VA = "0xBF4CB0")]
		public void UpdateCarouselColour()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xBF5794", Offset = "0xBF5794", VA = "0xBF5794")]
		private void ToggleActiveOnSystem(bool on)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xBF5554", Offset = "0xBF5554", VA = "0xBF5554")]
		private void ToggleActiveOnPalette(bool on)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xBF7628", Offset = "0xBF7628", VA = "0xBF7628")]
		public void ToggleActiveOnTool(bool on)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xBF7744", Offset = "0xBF7744", VA = "0xBF7744")]
		public void ShowHandPose(bool leftHand)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xBF5F5C", Offset = "0xBF5F5C", VA = "0xBF5F5C")]
		public void HideHandPose()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xBF785C", Offset = "0xBF785C", VA = "0xBF785C")]
		public void ToggleReleaseHandle(bool on)
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xBF7988", Offset = "0xBF7988", VA = "0xBF7988")]
		private void UpdateSimButton()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xBF7B8C", Offset = "0xBF7B8C", VA = "0xBF7B8C")]
		public void GrabUI()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xBF7BAC", Offset = "0xBF7BAC", VA = "0xBF7BAC")]
		public void ReleaseUI()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xBF4D94", Offset = "0xBF4D94", VA = "0xBF4D94")]
		public void HandleHideHandlesMode()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xBF7BC8", Offset = "0xBF7BC8", VA = "0xBF7BC8")]
		public void DisableHideHandlesButton()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xBF7BFC", Offset = "0xBF7BFC", VA = "0xBF7BFC")]
		public void StartTutorial(string targetTutorial)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xBF7CC8", Offset = "0xBF7CC8", VA = "0xBF7CC8")]
		public void SetPalleteMessage(string message = "")
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xBF7D80", Offset = "0xBF7D80", VA = "0xBF7D80")]
		public void ClearMessageButtons()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xBF7E44", Offset = "0xBF7E44", VA = "0xBF7E44")]
		public void ToggleChangeTutorialMessageButton()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xBF7EE0", Offset = "0xBF7EE0", VA = "0xBF7EE0")]
		public void ToggleEndTutorialMessageButton()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xBF7F7C", Offset = "0xBF7F7C", VA = "0xBF7F7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841144", Offset = "0x841144")]
		private IEnumerator RefreshWindow(RectTransform targetWindow)
		{
			return null;
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xBF4C10", Offset = "0xBF4C10", VA = "0xBF4C10")]
		public void LoadCategoryContents(string targetCat)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xBF7FD8", Offset = "0xBF7FD8", VA = "0xBF7FD8")]
		public void LoadLoadout(CustomPaletteLoadout targetLoadout, bool custom = false)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xBF878C", Offset = "0xBF878C", VA = "0xBF878C")]
		public void SetPaletteWhitelist([System.Runtime.InteropServices.Optional] RubeContainer[] newWhiteList, bool updateWindow = true)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xBF8890", Offset = "0xBF8890", VA = "0xBF8890")]
		public void SetPaletteCatFilter([System.Runtime.InteropServices.Optional] CategoryFilter newFilter)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xBF8824", Offset = "0xBF8824", VA = "0xBF8824")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8411A4", Offset = "0x8411A4")]
		public IEnumerator UpdateWindowInFrame()
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xBF88A8", Offset = "0xBF88A8", VA = "0xBF88A8")]
		public void EndCustomLoadout()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xBF88F8", Offset = "0xBF88F8", VA = "0xBF88F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xBF88FC", Offset = "0xBF88FC", VA = "0xBF88FC")]
		public PalmUIController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021B")]
	public class CustomPaletteLoadout
	{
		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string loadoutName;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string titleText;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RubeContainer[] customLoadout;

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xBBD6E0", Offset = "0xBBD6E0", VA = "0xBBD6E0")]
		public CustomPaletteLoadout()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public class CategoryFilter
	{
		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool balls;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool movers;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool containers;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool tracks;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool mechanical;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool musical;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool blocks;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool furniture;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool misc;

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xB2C318", Offset = "0xB2C318", VA = "0xB2C318")]
		public bool IsCategoryAvailable(string targetCat)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xB2C5D0", Offset = "0xB2C5D0", VA = "0xB2C5D0")]
		public bool IsCategoryAvailable(int targetCat)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xB2C648", Offset = "0xB2C648", VA = "0xB2C648")]
		public CategoryFilter()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class PassthroughSliders : MonoBehaviour
	{
		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider EdgeAlphaSlider;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider BrightnessSlider;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider ContrastSlider;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider PosterizedSlider;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool pendingReadValues;

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x9989A4", Offset = "0x9989A4", VA = "0x9989A4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x998C00", Offset = "0x998C00", VA = "0x998C00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x998C08", Offset = "0x998C08", VA = "0x998C08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x9989A8", Offset = "0x9989A8", VA = "0x9989A8")]
		public void ReadCurrentSliderValues()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x998C18", Offset = "0x998C18", VA = "0x998C18")]
		public PassthroughSliders()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class GrabUIGridOption : PreviewGrabUIOption
	{
		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI nameText;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HighlightHook mHighlightHook;

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x1C1F08C", Offset = "0x1C1F08C", VA = "0x1C1F08C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x1C1F0E0", Offset = "0x1C1F0E0", VA = "0x1C1F0E0")]
		private new void Start()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x1C1F0E8", Offset = "0x1C1F0E8", VA = "0x1C1F0E8", Slot = "5")]
		public override void UpdateInfo()
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x1C1F1B0", Offset = "0x1C1F1B0", VA = "0x1C1F1B0", Slot = "6")]
		public override void SetObjectReference(RubeContainer targetObj)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x1C1F1B8", Offset = "0x1C1F1B8", VA = "0x1C1F1B8")]
		public GrabUIGridOption()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class GrabUIListOption : PreviewGrabUIOption
	{
		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI nameText;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI descriptionText;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B488", Offset = "0x83B488")]
		public GameObject physicsFlag;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject levelableFlag;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject levelingFlag;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject breakableFlag;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject scalableFlag;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject snappableFlag;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject snapSurfaceFlag;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private HighlightHook mHighlightHook;

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1C1F1C0", Offset = "0x1C1F1C0", VA = "0x1C1F1C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1C1F214", Offset = "0x1C1F214", VA = "0x1C1F214", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1C1F218", Offset = "0x1C1F218", VA = "0x1C1F218")]
		private void ClearFlags()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1C1F2C0", Offset = "0x1C1F2C0", VA = "0x1C1F2C0", Slot = "5")]
		public override void UpdateInfo()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x1C1F4A8", Offset = "0x1C1F4A8", VA = "0x1C1F4A8", Slot = "6")]
		public override void SetObjectReference(RubeContainer targetObj)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1C1F4B0", Offset = "0x1C1F4B0", VA = "0x1C1F4B0")]
		public GrabUIListOption()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class PreviewCuller : MonoBehaviour
	{
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x9A2464", Offset = "0x9A2464", VA = "0x9A2464")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x9A2524", Offset = "0x9A2524", VA = "0x9A2524")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x9A25E4", Offset = "0x9A25E4", VA = "0x9A25E4")]
		public PreviewCuller()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class PreviewGrabUIOption : MonoBehaviour
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isLoaded;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RubeContainer rubeReference;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform previewFollowAnchor;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isCulled;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RubeObject targetObject;

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x9A25EC", Offset = "0x9A25EC", VA = "0x9A25EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x9A2750", Offset = "0x9A2750", VA = "0x9A2750", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x9A2754", Offset = "0x9A2754", VA = "0x9A2754", Slot = "5")]
		public virtual void UpdateInfo()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x9A2758", Offset = "0x9A2758", VA = "0x9A2758", Slot = "6")]
		public virtual void SetObjectReference(RubeContainer targetObj)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x9A2768", Offset = "0x9A2768", VA = "0x9A2768", Slot = "7")]
		public virtual void CullPreview(bool cull)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x9A2774", Offset = "0x9A2774", VA = "0x9A2774", Slot = "8")]
		public virtual void CreateNewPreview()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x9A27F0", Offset = "0x9A27F0", VA = "0x9A27F0", Slot = "9")]
		public virtual void EnablePreview()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x9A28C8", Offset = "0x9A28C8", VA = "0x9A28C8", Slot = "10")]
		public virtual void DisablePreview()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x9A2900", Offset = "0x9A2900", VA = "0x9A2900")]
		public bool IsPreviewObject(RubeObject testObj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x9A2978", Offset = "0x9A2978", VA = "0x9A2978", Slot = "11")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x9A2A2C", Offset = "0x9A2A2C", VA = "0x9A2A2C", Slot = "12")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x9A2A4C", Offset = "0x9A2A4C", VA = "0x9A2A4C", Slot = "13")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x9A2A60", Offset = "0x9A2A60", VA = "0x9A2A60")]
		public PreviewGrabUIOption()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class RubePreviewHandler : MonoBehaviour
	{
		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer[] meshRenderers;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PreviewGrabUIOption mPreview;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TouchHandGrabInteractable mInteractable;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform anchorTransform;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool previewActive;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool followAnchor;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool cullPreview;

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xB0DD6C", Offset = "0xB0DD6C", VA = "0xB0DD6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xB0DEA0", Offset = "0xB0DEA0", VA = "0xB0DEA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xB0E0D0", Offset = "0xB0E0D0", VA = "0xB0E0D0")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xB0E130", Offset = "0xB0E130", VA = "0xB0E130")]
		public void SetPreview(PreviewGrabUIOption p)
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xB0E150", Offset = "0xB0E150", VA = "0xB0E150")]
		public void HandlePreview(PointerArgs args)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xB0DFE4", Offset = "0xB0DFE4", VA = "0xB0DFE4")]
		public void ShowPreview()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xB0DEFC", Offset = "0xB0DEFC", VA = "0xB0DEFC")]
		public void HidePreview()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xB0E154", Offset = "0xB0E154", VA = "0xB0E154")]
		public void ToggleFollowAnchor(bool on)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xB0E160", Offset = "0xB0E160", VA = "0xB0E160")]
		public RubePreviewHandler()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class PromptWindowConfig
	{
		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BodyText;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PromptButtonConfig[] ButtonConfigs;

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x9A2F80", Offset = "0x9A2F80", VA = "0x9A2F80")]
		public static PromptWindowConfig SingleButton(string bodyText, string buttonText, [System.Runtime.InteropServices.Optional] Action action)
		{
			return null;
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x9A30A0", Offset = "0x9A30A0", VA = "0x9A30A0")]
		public static PromptWindowConfig ConfirmCancel(string bodyText, Action confirmAction)
		{
			return null;
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x9A3120", Offset = "0x9A3120", VA = "0x9A3120")]
		public static PromptWindowConfig TwoButton(string bodyText, string button1Text, string button2Text, Action button1Action, Action button2Action)
		{
			return null;
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x9A3098", Offset = "0x9A3098", VA = "0x9A3098")]
		public PromptWindowConfig()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class PromptButtonConfig
	{
		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ButtonText;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action ButtonAction;

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x9A2DB0", Offset = "0x9A2DB0", VA = "0x9A2DB0")]
		public PromptButtonConfig(string text, Action action)
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class PromptWindowHandler : MonoBehaviour
	{
		[Token(Token = "0x2000226")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8365B8", Offset = "0x8365B8")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PromptButtonConfig buttonConfig;

			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PromptWindowHandler <>4__this;

			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x1BF4230", Offset = "0x1BF4230", VA = "0x1BF4230")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x1BF4238", Offset = "0x1BF4238", VA = "0x1BF4238")]
			internal void <Show>b__0()
			{
			}
		}

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected GameObject PromptButtonPrefab;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform ButtonBar;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected RubeButton[] Buttons;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI promptText;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83B4F0", Offset = "0x83B4F0")]
		private bool <Complete>k__BackingField;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83B500", Offset = "0x83B500")]
		private Action <CompleteAction>k__BackingField;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83B510", Offset = "0x83B510")]
		private bool <Active>k__BackingField;

		[Token(Token = "0x170000FF")]
		public bool Complete
		{
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x9A3288", Offset = "0x9A3288", VA = "0x9A3288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8412A4", Offset = "0x8412A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x9A3290", Offset = "0x9A3290", VA = "0x9A3290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8412B4", Offset = "0x8412B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public Action CompleteAction
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x9A329C", Offset = "0x9A329C", VA = "0x9A329C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8412C4", Offset = "0x8412C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0x9A32A4", Offset = "0x9A32A4", VA = "0x9A32A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8412D4", Offset = "0x8412D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public bool Active
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x9A32AC", Offset = "0x9A32AC", VA = "0x9A32AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8412E4", Offset = "0x8412E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0x9A32B4", Offset = "0x9A32B4", VA = "0x9A32B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8412F4", Offset = "0x8412F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x9A32C0", Offset = "0x9A32C0", VA = "0x9A32C0")]
		public void Show(PromptWindowConfig config)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x9A3544", Offset = "0x9A3544", VA = "0x9A3544")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x9A3660", Offset = "0x9A3660", VA = "0x9A3660")]
		protected void SetComplete(Action completeAction)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x9A3670", Offset = "0x9A3670", VA = "0x9A3670")]
		public PromptWindowHandler()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class PromptHandler : MonoBehaviour
	{
		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UIManager uiManager;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<bool> PromptResponse;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B520", Offset = "0x83B520")]
		public Text promptText;

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x9A2DE8", Offset = "0x9A2DE8", VA = "0x9A2DE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x9A2E3C", Offset = "0x9A2E3C", VA = "0x9A2E3C")]
		public void Prompt(string message)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x9A2E90", Offset = "0x9A2E90", VA = "0x9A2E90")]
		public void RespondNo()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x9A2F04", Offset = "0x9A2F04", VA = "0x9A2F04")]
		public void RespondYes()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x9A2F78", Offset = "0x9A2F78", VA = "0x9A2F78")]
		public PromptHandler()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class ResetMachineButtonHook : MonoBehaviour
	{
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x9A9A54", Offset = "0x9A9A54", VA = "0x9A9A54")]
		public void ResetMachine()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x9A9AB0", Offset = "0x9A9AB0", VA = "0x9A9AB0")]
		public ResetMachineButtonHook()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class RoomEditButtonHook : ButtonHook
	{
		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text statusText;

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1BFD774", Offset = "0x1BFD774", VA = "0x1BFD774", Slot = "4")]
		protected override void OnClick()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1BFD82C", Offset = "0x1BFD82C", VA = "0x1BFD82C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x1BFDB5C", Offset = "0x1BFDB5C", VA = "0x1BFDB5C")]
		public RoomEditButtonHook()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class RubeButton : MonoBehaviour
	{
		[Token(Token = "0x200022B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8365C8", Offset = "0x8365C8")]
		private sealed class <RhythmicInteractabilityCheck>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RubeButton <>4__this;

			[Token(Token = "0x17000102")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C48")]
				[Address(RVA = "0x1BF53B8", Offset = "0x1BF53B8", VA = "0x1BF53B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000103")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C4A")]
				[Address(RVA = "0x1BF5400", Offset = "0x1BF5400", VA = "0x1BF5400", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x1BF5200", Offset = "0x1BF5200", VA = "0x1BF5200")]
			[DebuggerHidden]
			public <RhythmicInteractabilityCheck>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x1BF522C", Offset = "0x1BF522C", VA = "0x1BF522C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x1BF5230", Offset = "0x1BF5230", VA = "0x1BF5230", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x1BF53C0", Offset = "0x1BF53C0", VA = "0x1BF53C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool onCanvas;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI buttonText;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image buttonIcon;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B558", Offset = "0x83B558")]
		private InteractableUnityEventWrapper interactableEventWrapper;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PokeInteractable pokeInteractable;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B590", Offset = "0x83B590")]
		private bool invokeOnUpdate;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool queueInvoke;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float buttonCooldown;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float cdTank;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject disabledGraphic;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B5C8", Offset = "0x83B5C8")]
		public bool useRhythmicInteractabilityCheck;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B600", Offset = "0x83B600")]
		public UnityEvent OnSelect;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnUnselect;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Button buttonScript;

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1C0A08C", Offset = "0x1C0A08C", VA = "0x1C0A08C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x1C0A180", Offset = "0x1C0A180", VA = "0x1C0A180")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x1C0A270", Offset = "0x1C0A270", VA = "0x1C0A270")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x1C0A5F8", Offset = "0x1C0A5F8", VA = "0x1C0A5F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x1C0A7D8", Offset = "0x1C0A7D8", VA = "0x1C0A7D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x1C0AA20", Offset = "0x1C0AA20", VA = "0x1C0AA20")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x1C0A844", Offset = "0x1C0A844", VA = "0x1C0A844")]
		private void InvokeClick()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x1C0A498", Offset = "0x1C0A498", VA = "0x1C0A498")]
		private void StartCooldown()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x1C0A6F8", Offset = "0x1C0A6F8", VA = "0x1C0A6F8")]
		private void EndCooldown()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1C0AB60", Offset = "0x1C0AB60", VA = "0x1C0AB60")]
		public void Reset3DButton()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1C0AB64", Offset = "0x1C0AB64", VA = "0x1C0AB64")]
		public void Show()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1C0AB8C", Offset = "0x1C0AB8C", VA = "0x1C0AB8C")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1C0ABB4", Offset = "0x1C0ABB4", VA = "0x1C0ABB4")]
		public bool IsShowing()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1C0ABD8", Offset = "0x1C0ABD8", VA = "0x1C0ABD8")]
		public void SetButtonText(string newText)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1C0AC84", Offset = "0x1C0AC84", VA = "0x1C0AC84")]
		public void SetButtonIcon(Sprite newIcon)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1C0A17C", Offset = "0x1C0A17C", VA = "0x1C0A17C")]
		public void SetColourScheme()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1C0A58C", Offset = "0x1C0A58C", VA = "0x1C0A58C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841304", Offset = "0x841304")]
		public IEnumerator RhythmicInteractabilityCheck()
		{
			return null;
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x1C0AA38", Offset = "0x1C0AA38", VA = "0x1C0AA38")]
		public void CheckInteractability()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1C0AD28", Offset = "0x1C0AD28", VA = "0x1C0AD28")]
		public void ToggleInteractability(bool on)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1C0AF3C", Offset = "0x1C0AF3C", VA = "0x1C0AF3C")]
		public RubeButton()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1C0AF44", Offset = "0x1C0AF44", VA = "0x1C0AF44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841364", Offset = "0x841364")]
		private void <OnEnable>b__16_0()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1C0AF5C", Offset = "0x1C0AF5C", VA = "0x1C0AF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841374", Offset = "0x841374")]
		private void <OnEnable>b__16_1()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class RubeToggleHelper : MonoBehaviour
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform toggleObject;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image baseImage;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool toggleOffDullsColour;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isToggled;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isDisabled;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color disabledColour;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color offColour;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color onColour;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Image toggleImage;

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xB112E4", Offset = "0xB112E4", VA = "0xB112E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xB11364", Offset = "0xB11364", VA = "0xB11364")]
		public void SetDisabled(bool on)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xB0A338", Offset = "0xB0A338", VA = "0xB0A338")]
		public void SetToggle(bool on)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xB113D4", Offset = "0xB113D4", VA = "0xB113D4")]
		public RubeToggleHelper()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class ScrubberUIController : MonoBehaviour
	{
		[Token(Token = "0x200022E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8365D8", Offset = "0x8365D8")]
		private sealed class <UndoInFrame>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000104")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C5C")]
				[Address(RVA = "0x1BF7810", Offset = "0x1BF7810", VA = "0x1BF7810", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000105")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C5E")]
				[Address(RVA = "0x1BF7858", Offset = "0x1BF7858", VA = "0x1BF7858", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x1BF7708", Offset = "0x1BF7708", VA = "0x1BF7708")]
			[DebuggerHidden]
			public <UndoInFrame>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x1BF7734", Offset = "0x1BF7734", VA = "0x1BF7734", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x1BF7738", Offset = "0x1BF7738", VA = "0x1BF7738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x1BF7818", Offset = "0x1BF7818", VA = "0x1BF7818", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UIManager uiManager;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onPalette;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool leftHand;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject scrubberWindow;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI pausePhysicsButtonText;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image pausePhysicsButtonIcon;

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xB14198", Offset = "0xB14198", VA = "0xB14198")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xB14664", Offset = "0xB14664", VA = "0xB14664")]
		public void ShowPalmMenu()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xB14974", Offset = "0xB14974", VA = "0xB14974")]
		public void TogglePhysics()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xB149CC", Offset = "0xB149CC", VA = "0xB149CC")]
		public void UndoMachine()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xB14A80", Offset = "0xB14A80", VA = "0xB14A80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8413D4", Offset = "0x8413D4")]
		private IEnumerator UndoInFrame()
		{
			return null;
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xB14ADC", Offset = "0xB14ADC", VA = "0xB14ADC")]
		public void ResetMachine()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xB143F4", Offset = "0xB143F4", VA = "0xB143F4")]
		public void UpdateSimButton()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xB145F8", Offset = "0xB145F8", VA = "0xB145F8")]
		public void HandleInputChange(bool handTracking)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xB14B38", Offset = "0xB14B38", VA = "0xB14B38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xB14B3C", Offset = "0xB14B3C", VA = "0xB14B3C")]
		public ScrubberUIController()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class SpawnCountHelper : MonoBehaviour
	{
		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text countIndicator;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpawnToPalmUI spawner;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int spawnCount;

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xC20974", Offset = "0xC20974", VA = "0xC20974")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xC209C8", Offset = "0xC209C8", VA = "0xC209C8")]
		public void SpawnIntoUI(string constructName)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xC20B10", Offset = "0xC20B10", VA = "0xC20B10")]
		public void IncreaseCount()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xC20B94", Offset = "0xC20B94", VA = "0xC20B94")]
		public void DecreaseCount()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xC20C20", Offset = "0xC20C20", VA = "0xC20C20")]
		public SpawnCountHelper()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class SpawnToPalmUI : MonoBehaviour
	{
		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform antennaSpawnPoint;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float multiSpawnOffsetDistance;

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xC20E54", Offset = "0xC20E54", VA = "0xC20E54")]
		public void SpawnIntoUI(string constructName)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xC209E8", Offset = "0xC209E8", VA = "0xC209E8")]
		public void SpawnIntoUI(string constructName, int count = 1)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xC20EF4", Offset = "0xC20EF4", VA = "0xC20EF4")]
		public SpawnToPalmUI()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class SwipeDragHandler : MonoBehaviour, IDragHandler, IEventSystemHandler, IEndDragHandler
	{
		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PalmUIController palmUI;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float swipeSuccessThreshold;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool adaptToHorVertSwitch;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool invertPositionOnSuccessfulSwipe;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScrollRect mScroll;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PokeInteractable mPokeInteract;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dragging;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector2 dragStartPos;

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xC258D4", Offset = "0xC258D4", VA = "0xC258D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xC2594C", Offset = "0xC2594C", VA = "0xC2594C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xC25950", Offset = "0xC25950", VA = "0xC25950", Slot = "4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xC259D0", Offset = "0xC259D0", VA = "0xC259D0", Slot = "5")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xC25B74", Offset = "0xC25B74", VA = "0xC25B74")]
		public SwipeDragHandler()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class SystemWindowHandler : MonoBehaviour
	{
		[Token(Token = "0x2000233")]
		private enum InputEnum
		{
			[Token(Token = "0x4000DAE")]
			ChangeWindow,
			[Token(Token = "0x4000DAF")]
			ShowPrompt,
			[Token(Token = "0x4000DB0")]
			SysNavBack,
			[Token(Token = "0x4000DB1")]
			ToSave,
			[Token(Token = "0x4000DB2")]
			NewMachine,
			[Token(Token = "0x4000DB3")]
			LoadMachine,
			[Token(Token = "0x4000DB4")]
			SubmitSave,
			[Token(Token = "0x4000DB5")]
			ManageSaves,
			[Token(Token = "0x4000DB6")]
			Continue,
			[Token(Token = "0x4000DB7")]
			RoomEdit,
			[Token(Token = "0x4000DB8")]
			QuitGame
		}

		[Token(Token = "0x2000234")]
		private class ButtonInput
		{
			[Token(Token = "0x4000DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly InputEnum Message;

			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly string Payload;

			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0x1BF79F8", Offset = "0x1BF79F8", VA = "0x1BF79F8")]
			public ButtonInput(InputEnum message, string payload)
			{
			}
		}

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UIManager uiManager;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public string curWindow;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B648", Offset = "0x83B648")]
		public GameObject sysBackButton;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject sysMainWindow;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B680", Offset = "0x83B680")]
		public GameObject ContinueButton;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject ContinueButtonSpacer;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string continueFileName;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject LoadButton;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject LoadButtonSpacer;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject loadMachineWindow;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform loadMachineList;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject loadButtonPrefab;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string targetLoadName;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B6B8", Offset = "0x83B6B8")]
		public GameObject SaveButton;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject SaveButtonSpacer;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject saveMachineWindow;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 saveWindowOffsetLeft;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 saveWindowOffsetRight;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public InputField saveTextDisplay;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string saveNameText;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B6F0", Offset = "0x83B6F0")]
		public GameObject ErrorDisplay;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject ErrorDisplaySpacer;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B728", Offset = "0x83B728")]
		public GameObject optionsWindow;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject manageSavesWindow;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject manageSavesButton;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public GameObject manageSavesSpacer;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public ManageSaveButtonHook targetManageSave;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Transform manageMachineList;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject manageSaveButtonPrefab;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject passthroughWindow;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject configureRoomWindow;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject creditsWindow;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject recordingWindow;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject uiPositioningWindow;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B760", Offset = "0x83B760")]
		public Slider musicSlider;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Slider uiVolumeSlider;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Slider sfxSlider;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public RubeToggleHelper dominantHandToggle;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public RubeToggleHelper oneHandToggle;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public TextMeshProUGUI versionNumberText;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public RubeToggleHelper recordingModeToggle;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public RubeToggleHelper handleVisibilityToggle;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public TextMeshProUGUI lrTiltText;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public TextMeshProUGUI fbTiltText;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public RubeToggleHelper toolPositionToggle;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public RubeToggleHelper toolOrientationToggle;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public TextMeshProUGUI lrPosText;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public TextMeshProUGUI udPosText;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public TextMeshProUGUI fbPosText;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B798", Offset = "0x83B798")]
		public Material defaultBackdrop;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Material livingRoomBackdrop;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private GroupBus uiBus;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private GroupBus sfxBus;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private List<string> _savedMachineList;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private List<ButtonInput> _pendingInputs;

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xC25E20", Offset = "0xC25E20", VA = "0xC25E20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xC25E74", Offset = "0xC25E74", VA = "0xC25E74")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xC268FC", Offset = "0xC268FC", VA = "0xC268FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xC26900", Offset = "0xC26900", VA = "0xC26900")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xC27884", Offset = "0xC27884", VA = "0xC27884")]
		private void QueueInput(InputEnum message, [System.Runtime.InteropServices.Optional] string payload)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xC262B8", Offset = "0xC262B8", VA = "0xC262B8")]
		private void DoChangeWindow(string cat)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xC27504", Offset = "0xC27504", VA = "0xC27504")]
		public void DoNewMachine()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xC2763C", Offset = "0xC2763C", VA = "0xC2763C")]
		private void DoLoadMachine()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xC277E4", Offset = "0xC277E4", VA = "0xC277E4")]
		private void DoSaveMachine()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xC28FEC", Offset = "0xC28FEC", VA = "0xC28FEC")]
		private void DoDelete()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xC29118", Offset = "0xC29118", VA = "0xC29118")]
		private void DoQuitGame()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xC27920", Offset = "0xC27920", VA = "0xC27920")]
		private void DisableWindows()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xC27A0C", Offset = "0xC27A0C", VA = "0xC27A0C")]
		public void ToggleSysNavButtons(bool on)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xC25F40", Offset = "0xC25F40", VA = "0xC25F40")]
		private void InitializePrompts()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xC274E8", Offset = "0xC274E8", VA = "0xC274E8")]
		private void ShowConfirmOrCancelPrompt(string bodyText, Action confirmAction)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xC274CC", Offset = "0xC274CC", VA = "0xC274CC")]
		private void ShowPrompt(string prompt)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xC2910C", Offset = "0xC2910C", VA = "0xC2910C")]
		public void ChangeWindow(string cat)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xC2922C", Offset = "0xC2922C", VA = "0xC2922C")]
		public void SysNav_Back()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xC2926C", Offset = "0xC2926C", VA = "0xC2926C")]
		public void ToSavePromptButton()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xC29278", Offset = "0xC29278", VA = "0xC29278")]
		public void NewMachineButton()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xC29284", Offset = "0xC29284", VA = "0xC29284")]
		public void LoadMachinebutton(string loadName)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xC29290", Offset = "0xC29290", VA = "0xC29290")]
		public void SubmitSaveButton()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xC2929C", Offset = "0xC2929C", VA = "0xC2929C")]
		public void ManageSavesButton()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xC292A8", Offset = "0xC292A8", VA = "0xC292A8")]
		public void ContinueMachine()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xC292B4", Offset = "0xC292B4", VA = "0xC292B4")]
		public void RoomEdit()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xC292C0", Offset = "0xC292C0", VA = "0xC292C0")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xC292CC", Offset = "0xC292CC", VA = "0xC292CC")]
		public void Passthrough_EdgeAlpha(float sliderValue)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xC29564", Offset = "0xC29564", VA = "0xC29564")]
		public void Passthrough_Brightness(float sliderValue)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xC29620", Offset = "0xC29620", VA = "0xC29620")]
		public void Passthrough_Contrast(float sliderValue)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xC296DC", Offset = "0xC296DC", VA = "0xC296DC")]
		public void Passthrough_Polarized(float sliderValue)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xC29388", Offset = "0xC29388", VA = "0xC29388")]
		public void SavePassthroughSettings()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xC29798", Offset = "0xC29798", VA = "0xC29798")]
		public void Passthrough_Theme(string themeName)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xC29854", Offset = "0xC29854", VA = "0xC29854")]
		public void RoomTheme(string themeName)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xC29918", Offset = "0xC29918", VA = "0xC29918")]
		public void Audio_Music(float sliderValue)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xC29984", Offset = "0xC29984", VA = "0xC29984")]
		public void Audio_UI(float sliderValue)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xC299A0", Offset = "0xC299A0", VA = "0xC299A0")]
		public void Audio_SFX(float sliderValue)
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xC299BC", Offset = "0xC299BC", VA = "0xC299BC")]
		public void SaveVolumeSettings()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xC29AA0", Offset = "0xC29AA0", VA = "0xC29AA0")]
		public void Graphics_Gamma(float sliderValue)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xC29B08", Offset = "0xC29B08", VA = "0xC29B08")]
		public void Tilt_Left()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xC29B98", Offset = "0xC29B98", VA = "0xC29B98")]
		public void Tilt_Right()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xC29C28", Offset = "0xC29C28", VA = "0xC29C28")]
		public void Tilt_Back()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xC29CB8", Offset = "0xC29CB8", VA = "0xC29CB8")]
		public void Tilt_Forward()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xC29D48", Offset = "0xC29D48", VA = "0xC29D48")]
		public void TrackingPos_Left()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xC29DCC", Offset = "0xC29DCC", VA = "0xC29DCC")]
		public void TrackingPos_Right()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xC29E50", Offset = "0xC29E50", VA = "0xC29E50")]
		public void TrackingPos_Up()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xC29ED4", Offset = "0xC29ED4", VA = "0xC29ED4")]
		public void TrackingPos_Down()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xC29F58", Offset = "0xC29F58", VA = "0xC29F58")]
		public void TrackingPos_Towards()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xC29FDC", Offset = "0xC29FDC", VA = "0xC29FDC")]
		public void TrackingPos_Away()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xC2A060", Offset = "0xC2A060", VA = "0xC2A060")]
		public void ToggleHandedness()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xC2A0C4", Offset = "0xC2A0C4", VA = "0xC2A0C4")]
		public void ToggleOneHandedness()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xC2A128", Offset = "0xC2A128", VA = "0xC2A128")]
		public void ToggleToolPosition()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xC2A234", Offset = "0xC2A234", VA = "0xC2A234")]
		public void ToggleToolOrientation()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xC2A340", Offset = "0xC2A340", VA = "0xC2A340")]
		public void ToggleRecordingMode()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xC2A3FC", Offset = "0xC2A3FC", VA = "0xC2A3FC")]
		public void ToggleGlobalHandleVisibility()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xC2A5CC", Offset = "0xC2A5CC", VA = "0xC2A5CC")]
		public void SetRecordingBackdrop(string targetBackdrop)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xC282CC", Offset = "0xC282CC", VA = "0xC282CC")]
		public void UpdateOptionsWindow()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xC289B4", Offset = "0xC289B4", VA = "0xC289B4")]
		public void UpdateRecordWindow()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xC28B78", Offset = "0xC28B78", VA = "0xC28B78")]
		public void UpdatePositioningWindow()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xC27A2C", Offset = "0xC27A2C", VA = "0xC27A2C")]
		private void UpdateMainMenu()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xC28460", Offset = "0xC28460", VA = "0xC28460")]
		private void PopulateManageMenu()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xC27D78", Offset = "0xC27D78", VA = "0xC27D78")]
		private void PopulateLoadMenu()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xC2A684", Offset = "0xC2A684", VA = "0xC2A684")]
		public void KeyboardInput(string key)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xC2A704", Offset = "0xC2A704", VA = "0xC2A704")]
		public void KeyboardBackspace()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xC291C0", Offset = "0xC291C0", VA = "0xC291C0")]
		private void ResetKeyboard()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xC2A758", Offset = "0xC2A758", VA = "0xC2A758")]
		public void ClearKeyboard()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xC2A7B4", Offset = "0xC2A7B4", VA = "0xC2A7B4")]
		public void UpdateSaveWindowOffset(int handed)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xC2A80C", Offset = "0xC2A80C", VA = "0xC2A80C")]
		public void ToggleAnchorVisiblity()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xC2A8C4", Offset = "0xC2A8C4", VA = "0xC2A8C4")]
		public SystemWindowHandler()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class ToolSelectButton : MonoBehaviour
	{
		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RubeToolData toolData;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text title;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text description;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image displayImage;

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xC2F314", Offset = "0xC2F314", VA = "0xC2F314")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xC2F394", Offset = "0xC2F394", VA = "0xC2F394")]
		public void EquipTool()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xC2F398", Offset = "0xC2F398", VA = "0xC2F398")]
		public ToolSelectButton()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class ToolSelectUIOption : MonoBehaviour
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI toolNameText;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI toolDescriptionText;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform toolAnchor;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RubeTool tool;

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xC2F3A0", Offset = "0xC2F3A0", VA = "0xC2F3A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xC2F404", Offset = "0xC2F404", VA = "0xC2F404")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xC2F528", Offset = "0xC2F528", VA = "0xC2F528")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xC2F57C", Offset = "0xC2F57C", VA = "0xC2F57C")]
		public ToolSelectUIOption()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class EncyclopediaDispatcher : MonoBehaviour
	{
		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B7D0", Offset = "0x83B7D0")]
		public EncyclopediaChapter[] chapters;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EncyclopediaChapter currentChapter;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int slideIndex;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TutorialWindowHandler tutWindow;

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1C146E0", Offset = "0x1C146E0", VA = "0x1C146E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x1C14734", Offset = "0x1C14734", VA = "0x1C14734")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1C14868", Offset = "0x1C14868", VA = "0x1C14868")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1C1486C", Offset = "0x1C1486C", VA = "0x1C1486C")]
		public void ResetDispatcher()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1C149A0", Offset = "0x1C149A0", VA = "0x1C149A0")]
		public void ResumeDispatcher()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1C14B2C", Offset = "0x1C14B2C", VA = "0x1C14B2C")]
		public void JumpToSlide(string chapSlideCommand)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1C149CC", Offset = "0x1C149CC", VA = "0x1C149CC")]
		public void LoadChapter(EncyclopediaChapter targetChapter)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1C14AB4", Offset = "0x1C14AB4", VA = "0x1C14AB4")]
		public void ChangeCurentSlide(int index)
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1C14F84", Offset = "0x1C14F84", VA = "0x1C14F84")]
		public void Nav_Previous()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1C14FD4", Offset = "0x1C14FD4", VA = "0x1C14FD4")]
		public void Nav_Next()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1C147B8", Offset = "0x1C147B8", VA = "0x1C147B8")]
		private void CheckNavAvailability()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x1C14F30", Offset = "0x1C14F30", VA = "0x1C14F30")]
		private void ShowNewSlide()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1C14E50", Offset = "0x1C14E50", VA = "0x1C14E50")]
		private void UpdateCarousel()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1C14890", Offset = "0x1C14890", VA = "0x1C14890")]
		public void ClearEncyclopedia()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1C14DD8", Offset = "0x1C14DD8", VA = "0x1C14DD8")]
		public void ClearCurrentSlides()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x1C1504C", Offset = "0x1C1504C", VA = "0x1C1504C")]
		public EncyclopediaDispatcher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000238")]
	public class EncyclopediaChapter
	{
		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string chapterName;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] TutorialSlides;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button[] CarouselIcons;

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1C146D8", Offset = "0x1C146D8", VA = "0x1C146D8")]
		public EncyclopediaChapter()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class SwipeDragTutorialHandler : MonoBehaviour, IDragHandler, IEventSystemHandler, IEndDragHandler
	{
		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EncyclopediaDispatcher encyclopediaDispatcher;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float swipeSuccessThreshold;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool adaptToHorVertSwitch;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScrollRect mScroll;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PokeInteractable mPokeInteract;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dragging;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector2 dragStartPos;

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xC25B84", Offset = "0xC25B84", VA = "0xC25B84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xC25C20", Offset = "0xC25C20", VA = "0xC25C20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xC25C24", Offset = "0xC25C24", VA = "0xC25C24", Slot = "4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xC25CA4", Offset = "0xC25CA4", VA = "0xC25CA4", Slot = "5")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xC25E10", Offset = "0xC25E10", VA = "0xC25E10")]
		public SwipeDragTutorialHandler()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class BounceAmplifyTracker : TutorialTracker
	{
		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RubeContainer[] validTrigger;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RubeContainer[] validOther;

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xB212A8", Offset = "0xB212A8", VA = "0xB212A8", Slot = "4")]
		public override void ActivateTracker()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xB213AC", Offset = "0xB213AC", VA = "0xB213AC", Slot = "5")]
		public override void DeActivateTracker()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xB214B0", Offset = "0xB214B0", VA = "0xB214B0")]
		private void ProcessBounceAmplifyEvent(RubeObject trigger, RubeObject other)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xB215D0", Offset = "0xB215D0", VA = "0xB215D0")]
		public BounceAmplifyTracker()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class CategorySelectTracker : TutorialTracker
	{
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] validCategoriesSelectedList;

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xB2C660", Offset = "0xB2C660", VA = "0xB2C660", Slot = "4")]
		public override void ActivateTracker()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xB2C76C", Offset = "0xB2C76C", VA = "0xB2C76C", Slot = "5")]
		public override void DeActivateTracker()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xB2C878", Offset = "0xB2C878", VA = "0xB2C878")]
		private void ProcessCategorySelectEvent(string categorySelected)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xB2C910", Offset = "0xB2C910", VA = "0xB2C910")]
		public CategorySelectTracker()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class DeleteTracker : TutorialTracker
	{
		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RubeContainer targetDeleteObject;

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xBC0F9C", Offset = "0xBC0F9C", VA = "0xBC0F9C", Slot = "4")]
		public override void ActivateTracker()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xBC10A0", Offset = "0xBC10A0", VA = "0xBC10A0", Slot = "5")]
		public override void DeActivateTracker()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xBC11A4", Offset = "0xBC11A4", VA = "0xBC11A4")]
		private void ProcessDeleteEvent(string assetName)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xBC11F0", Offset = "0xBC11F0", VA = "0xBC11F0")]
		public DeleteTracker()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class MachineStateTracker : TutorialTracker
	{
		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool checkReset;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool checkPlay;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool checkPause;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool checkUndo;

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xA1F2AC", Offset = "0xA1F2AC", VA = "0xA1F2AC", Slot = "4")]
		public override void ActivateTracker()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xA1F3B0", Offset = "0xA1F3B0", VA = "0xA1F3B0", Slot = "5")]
		public override void DeActivateTracker()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xA1F4B4", Offset = "0xA1F4B4", VA = "0xA1F4B4")]
		private void ProcessStateChangeEvent(string state)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xA1F5EC", Offset = "0xA1F5EC", VA = "0xA1F5EC")]
		public MachineStateTracker()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class ObjectCreateTracker : TutorialTracker
	{
		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RubeContainer[] validObjectCreateList;

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xB8BF3C", Offset = "0xB8BF3C", VA = "0xB8BF3C", Slot = "4")]
		public override void ActivateTracker()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xB8C040", Offset = "0xB8C040", VA = "0xB8C040", Slot = "5")]
		public override void DeActivateTracker()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xB8C144", Offset = "0xB8C144", VA = "0xB8C144")]
		private void ProcessCreateEvent(RubeContainer createdObj)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xB8C1DC", Offset = "0xB8C1DC", VA = "0xB8C1DC")]
		public ObjectCreateTracker()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class ProximityTriggerTracker : TutorialTracker
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RubeContainer[] validTrigger;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RubeContainer[] validOther;

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x9A3678", Offset = "0x9A3678", VA = "0x9A3678", Slot = "4")]
		public override void ActivateTracker()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x9A377C", Offset = "0x9A377C", VA = "0x9A377C", Slot = "5")]
		public override void DeActivateTracker()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x9A3880", Offset = "0x9A3880", VA = "0x9A3880")]
		private void ProcessProximityEvent(RubeObject trigger, RubeObject other)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x9A39A0", Offset = "0x9A39A0", VA = "0x9A39A0")]
		public ProximityTriggerTracker()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class TrackExtendTracker : TutorialTracker
	{
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xDA6974", Offset = "0xDA6974", VA = "0xDA6974", Slot = "4")]
		public override void ActivateTracker()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xDA6A64", Offset = "0xDA6A64", VA = "0xDA6A64", Slot = "5")]
		public override void DeActivateTracker()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xDA6B54", Offset = "0xDA6B54", VA = "0xDA6B54")]
		private void ProcessTrackExtendEvent()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xDA6B98", Offset = "0xDA6B98", VA = "0xDA6B98")]
		public TrackExtendTracker()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class TutorialDispatch : MonoBehaviour
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialProgressor[] tutorials;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string currentTutorial;

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xDAB8D0", Offset = "0xDAB8D0", VA = "0xDAB8D0")]
		public void SetUp()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xDABA14", Offset = "0xDABA14", VA = "0xDABA14")]
		public void StartTutorial(string targetTutorial)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xDABBAC", Offset = "0xDABBAC", VA = "0xDABBAC")]
		public void EndTutorial()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xDABFA8", Offset = "0xDABFA8", VA = "0xDABFA8")]
		public void ClearTutorialMessageButtons()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xDAC008", Offset = "0xDAC008", VA = "0xDAC008")]
		public void ToggleChangeTutorialMessageButton()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xDAC068", Offset = "0xDAC068", VA = "0xDAC068")]
		public void ToggleEndTutorialMessageButton()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xDAC0C8", Offset = "0xDAC0C8", VA = "0xDAC0C8")]
		public void RestoreHighlights()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xDAC1D8", Offset = "0xDAC1D8", VA = "0xDAC1D8")]
		public TutorialDispatch()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class TutorialProgressor : MonoBehaviour
	{
		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int stepIndex;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialStep curStep;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialStep[] steps;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onTutorialComplete;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlaySoundResult currentVO;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float voRepeatTime;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float voRepeatTank;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string repeatVOSoundGroup;

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xDAB938", Offset = "0xDAB938", VA = "0xDAB938")]
		public void SetUp()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xDAC1E0", Offset = "0xDAC1E0", VA = "0xDAC1E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xDABCF4", Offset = "0xDABCF4", VA = "0xDABCF4")]
		public void StartTutorial()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xDAC6E0", Offset = "0xDAC6E0", VA = "0xDAC6E0")]
		public void ProgressStep()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xDAC9DC", Offset = "0xDAC9DC", VA = "0xDAC9DC")]
		public void BackStep()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xDAC7CC", Offset = "0xDAC7CC", VA = "0xDAC7CC")]
		public void DoStep(TutorialStep step)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xDAC9E0", Offset = "0xDAC9E0", VA = "0xDAC9E0")]
		public void CheckStepProgress()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xDAC358", Offset = "0xDAC358", VA = "0xDAC358")]
		private void ResetTutorial()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xDABDB8", Offset = "0xDABDB8", VA = "0xDABDB8")]
		public void EndTutorial()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xDAC15C", Offset = "0xDAC15C", VA = "0xDAC15C")]
		public void RestoreHighlights()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xDACA84", Offset = "0xDACA84", VA = "0xDACA84")]
		public TutorialProgressor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000243")]
	public class TutorialStep
	{
		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B808", Offset = "0x83B808")]
		public string stepMessage;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SoundGroup]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B840", Offset = "0x83B840")]
		public string mainVODialogue;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SoundGroup]
		public string repeatVODialogue;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeUntilFirstRepeat;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float repeatTime;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B89C", Offset = "0x83B89C")]
		public RubeContainer[] whiteList;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public CategoryFilter catFilter;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] UIHighlightList;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B8E4", Offset = "0x83B8E4")]
		public TutorialTracker[] trackers;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B91C", Offset = "0x83B91C")]
		public UnityEvent onStepStart;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onStepEnd;

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xDACA8C", Offset = "0xDACA8C", VA = "0xDACA8C")]
		public TutorialStep()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class TutorialTracker : MonoBehaviour
	{
		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isComplete;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onTrackerComplete;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TutorialProgressor tutorialProgressor;

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xDACA9C", Offset = "0xDACA9C", VA = "0xDACA9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xDACAF0", Offset = "0xDACAF0", VA = "0xDACAF0", Slot = "4")]
		public virtual void ActivateTracker()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xDACAF4", Offset = "0xDACAF4", VA = "0xDACAF4", Slot = "5")]
		public virtual void DeActivateTracker()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xDA6B58", Offset = "0xDA6B58", VA = "0xDA6B58")]
		public void CompleteTracking()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xDACA7C", Offset = "0xDACA7C", VA = "0xDACA7C")]
		public void ResetTracker()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xDACAF8", Offset = "0xDACAF8", VA = "0xDACAF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xDACB04", Offset = "0xDACB04", VA = "0xDACB04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xDA6BA0", Offset = "0xDA6BA0", VA = "0xDA6BA0")]
		public TutorialTracker()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class TutorialWindowHandler : MonoBehaviour
	{
		[Token(Token = "0x2000246")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8365E8", Offset = "0x8365E8")]
		private sealed class <PromptInputChangeForTutorial>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialWindowHandler <>4__this;

			[Token(Token = "0x17000106")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D19")]
				[Address(RVA = "0x1BF9364", Offset = "0x1BF9364", VA = "0x1BF9364", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000107")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D1B")]
				[Address(RVA = "0x1BF93AC", Offset = "0x1BF93AC", VA = "0x1BF93AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x1BF8F34", Offset = "0x1BF8F34", VA = "0x1BF8F34")]
			[DebuggerHidden]
			public <PromptInputChangeForTutorial>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x1BF8F60", Offset = "0x1BF8F60", VA = "0x1BF8F60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x1BF8F64", Offset = "0x1BF8F64", VA = "0x1BF8F64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x1BF936C", Offset = "0x1BF936C", VA = "0x1BF936C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject mainWindow;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B954", Offset = "0x83B954")]
		public GameObject encyclopediaWindow;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B98C", Offset = "0x83B98C")]
		public GameObject PreviousButton;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject NextButton;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ExitButton;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string curWindow;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string targetTut;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B9C4", Offset = "0x83B9C4")]
		public Sprite carouselBlankImage;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite carouselHighlightImage;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int slideIndex;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83B9FC", Offset = "0x83B9FC")]
		public GameObject bottomBar;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool queueExitTut;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string exitDestination;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool queueStartTut;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EncyclopediaDispatcher dispatcher;

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xDACB10", Offset = "0xDACB10", VA = "0xDACB10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xDACB64", Offset = "0xDACB64", VA = "0xDACB64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xDACC14", Offset = "0xDACC14", VA = "0xDACC14")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xDACDB0", Offset = "0xDACDB0", VA = "0xDACDB0")]
		public void ExitTutorial()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xDACE30", Offset = "0xDACE30", VA = "0xDACE30")]
		public void ExitTutorialInstant()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xDACF00", Offset = "0xDACF00", VA = "0xDACF00")]
		public void ExitTutorial(string destination)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xDACF54", Offset = "0xDACF54", VA = "0xDACF54")]
		public void PlayTutorial(string selectedTut)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xDAD244", Offset = "0xDAD244", VA = "0xDAD244")]
		public void PromptInputChangeInDelay()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xDAD270", Offset = "0xDAD270", VA = "0xDAD270")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841484", Offset = "0x841484")]
		public IEnumerator PromptInputChangeForTutorial()
		{
			return null;
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xDAD2DC", Offset = "0xDAD2DC", VA = "0xDAD2DC")]
		public void ApprovePlayTutorial()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xDACCAC", Offset = "0xDACCAC", VA = "0xDACCAC")]
		public void DoPlayTutorial()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xDAD2E8", Offset = "0xDAD2E8", VA = "0xDAD2E8")]
		public void ResumeTutorial(string resumeWindow, int index)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xDAD3A8", Offset = "0xDAD3A8", VA = "0xDAD3A8")]
		public void ReturnToMain()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xDAD468", Offset = "0xDAD468", VA = "0xDAD468")]
		public void ShowEncyclopedia()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xDACBE4", Offset = "0xDACBE4", VA = "0xDACBE4")]
		public void ResetTutorial()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xDAD528", Offset = "0xDAD528", VA = "0xDAD528")]
		public TutorialWindowHandler()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class UIHoverDeleteHandler : MonoBehaviour
	{
		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PalmUIController palmUI;

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xDADE2C", Offset = "0xDADE2C", VA = "0xDADE2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xDADE8C", Offset = "0xDADE8C", VA = "0xDADE8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xDADE90", Offset = "0xDADE90", VA = "0xDADE90")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xDADF74", Offset = "0xDADF74", VA = "0xDADF74")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xDAE030", Offset = "0xDAE030", VA = "0xDAE030")]
		public UIHoverDeleteHandler()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class UIInteractabilityHandler : MonoBehaviour
	{
		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool currentInteractability;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RubeButton[] buttonList;

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xDAE038", Offset = "0xDAE038", VA = "0xDAE038")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xDAE03C", Offset = "0xDAE03C", VA = "0xDAE03C")]
		public void ToggleInteractivity(bool on)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xDAE23C", Offset = "0xDAE23C", VA = "0xDAE23C")]
		public UIInteractabilityHandler()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class UIManager : MonoBehaviour
	{
		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BA34", Offset = "0x83BA34")]
		public ScrubberUIController scrubberLeft;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScrubberUIController scrubberRight;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BA6C", Offset = "0x83BA6C")]
		public bool menuOpen;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool menuReleased;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool menuGrabbed;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool menuHeadTracking;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool menuInLeftHand;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool isPrompting;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject PalmCanvasPrefab;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PalmUIController palmWindow;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FollowTransformWithDampening followAnchor;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<PreviewGrabUIOption> palateButtonList;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, PromptWindowConfig> _promptConfigs;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BAA4", Offset = "0x83BAA4")]
		public float lrTilt;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float fbTilt;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lrPos;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float udPos;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float fbPos;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool isInitialized;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BADC", Offset = "0x83BADC")]
		private static UIManager <Instance>k__BackingField;

		[Token(Token = "0x17000108")]
		public static UIManager Instance
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0xDAE24C", Offset = "0xDAE24C", VA = "0xDAE24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841534", Offset = "0x841534")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0xDAE298", Offset = "0xDAE298", VA = "0xDAE298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841544", Offset = "0x841544")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xDAE2E8", Offset = "0xDAE2E8", VA = "0xDAE2E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xDAE3C0", Offset = "0xDAE3C0", VA = "0xDAE3C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xDAE3C4", Offset = "0xDAE3C4", VA = "0xDAE3C4")]
		public void Init()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xDAE504", Offset = "0xDAE504", VA = "0xDAE504")]
		public void SetUp()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xDAE79C", Offset = "0xDAE79C", VA = "0xDAE79C")]
		public void RegisterPrompt(string promptName, PromptWindowConfig promptConfig)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xDAE8A4", Offset = "0xDAE8A4", VA = "0xDAE8A4")]
		public void ShowPrompt(string promptName)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xDAD204", Offset = "0xDAD204", VA = "0xDAD204")]
		public void ShowConfirmOrCancelPrompt(string bodyText, Action confirmAction)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xDAE9AC", Offset = "0xDAE9AC", VA = "0xDAE9AC")]
		public void ShowPrompt(PromptWindowConfig promptConfig)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xDAE9C8", Offset = "0xDAE9C8", VA = "0xDAE9C8")]
		public void OpenUI(bool onlyOpen = false)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xDAF4FC", Offset = "0xDAF4FC", VA = "0xDAF4FC")]
		public void UITrackPlayer()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xDAF5EC", Offset = "0xDAF5EC", VA = "0xDAF5EC")]
		public void SetPalmMenu(string position)
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xDAEF94", Offset = "0xDAEF94", VA = "0xDAEF94")]
		public void ShowMenuInHand(int dominantHand = -1)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xDAF6DC", Offset = "0xDAF6DC", VA = "0xDAF6DC")]
		public void TogglePalmMenu(int handed = -1)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xDAF7C8", Offset = "0xDAF7C8", VA = "0xDAF7C8")]
		public void ShowPalmMenu(int handed = -1)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xDAFC44", Offset = "0xDAFC44", VA = "0xDAFC44")]
		public void HidePalmMenu()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xDAE634", Offset = "0xDAE634", VA = "0xDAE634")]
		public void EndHidePalmMenu()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xDAF408", Offset = "0xDAF408", VA = "0xDAF408")]
		public void UpdatePalmUI()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xDAEBB4", Offset = "0xDAEBB4", VA = "0xDAEBB4")]
		public void UnlockUI()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xDAED78", Offset = "0xDAED78", VA = "0xDAED78")]
		public void UITrackHead()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xDAFC6C", Offset = "0xDAFC6C", VA = "0xDAFC6C")]
		public void RegisterPalateButton(PreviewGrabUIOption button)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xDAFD04", Offset = "0xDAFD04", VA = "0xDAFD04")]
		public void SaveTilt()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xDAFDF4", Offset = "0xDAFDF4", VA = "0xDAFDF4")]
		public void UpdateUITilt()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xDAFE54", Offset = "0xDAFE54", VA = "0xDAFE54")]
		public Vector3 GetTiltRotation(string controllerType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xDAFED4", Offset = "0xDAFED4", VA = "0xDAFED4")]
		public Vector3 GetHeadTrackingOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xDAFEE0", Offset = "0xDAFEE0", VA = "0xDAFEE0")]
		public void HandleInputChange(bool handTracking)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xDAFEF4", Offset = "0xDAFEF4", VA = "0xDAFEF4")]
		public UIManager()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class UIRefresher : MonoBehaviour
	{
		[Token(Token = "0x200024B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8365F8", Offset = "0x8365F8")]
		private sealed class <DoRefreshWindow>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIRefresher <>4__this;

			[Token(Token = "0x17000109")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D47")]
				[Address(RVA = "0x1BF97A0", Offset = "0x1BF97A0", VA = "0x1BF97A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D49")]
				[Address(RVA = "0x1BF97E8", Offset = "0x1BF97E8", VA = "0x1BF97E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x1BF9528", Offset = "0x1BF9528", VA = "0x1BF9528")]
			[DebuggerHidden]
			public <DoRefreshWindow>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x1BF9554", Offset = "0x1BF9554", VA = "0x1BF9554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x1BF9558", Offset = "0x1BF9558", VA = "0x1BF9558", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x1BF97A8", Offset = "0x1BF97A8", VA = "0x1BF97A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xDB043C", Offset = "0xDB043C", VA = "0xDB043C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xDB04D4", Offset = "0xDB04D4", VA = "0xDB04D4")]
		public void RefreshWindow()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xDB0468", Offset = "0xDB0468", VA = "0xDB0468")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841554", Offset = "0x841554")]
		private IEnumerator DoRefreshWindow()
		{
			return null;
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xDB052C", Offset = "0xDB052C", VA = "0xDB052C")]
		public UIRefresher()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class UndoMachineButtonHook : MonoBehaviour
	{
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xDB0B20", Offset = "0xDB0B20", VA = "0xDB0B20")]
		public void UndoMachine()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xDB0B80", Offset = "0xDB0B80", VA = "0xDB0B80")]
		public UndoMachineButtonHook()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class ArticulationCollider : MonoBehaviour
	{
		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider col;

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xB1E698", Offset = "0xB1E698", VA = "0xB1E698")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xB1E6EC", Offset = "0xB1E6EC", VA = "0xB1E6EC")]
		public void ToggleCollider(bool on)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xB1E70C", Offset = "0xB1E70C", VA = "0xB1E70C")]
		public ArticulationCollider()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class ControllerIconDisplayHandler : MonoBehaviour
	{
		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isLeftController;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject primaryOneIcon;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject primaryTwoIcon;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject secondaryOneIcon;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject secondaryTwoIcon;

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xBB8184", Offset = "0xBB8184", VA = "0xBB8184")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xBB8288", Offset = "0xBB8288", VA = "0xBB8288")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xBB828C", Offset = "0xBB828C", VA = "0xBB828C")]
		public void HandleDominantHandChange()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xBB82EC", Offset = "0xBB82EC", VA = "0xBB82EC")]
		public void HandleDominantHandChange(bool leftHanded)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xBB83B4", Offset = "0xBB83B4", VA = "0xBB83B4")]
		public ControllerIconDisplayHandler()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class DebugLogTrigger : MonoBehaviour
	{
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xBBD6E8", Offset = "0xBBD6E8", VA = "0xBBD6E8")]
		public void Log(string message)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xBBD74C", Offset = "0xBBD74C", VA = "0xBBD74C")]
		public DebugLogTrigger()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public enum SoundEventAction
	{
		[Token(Token = "0x4000E27")]
		nothing,
		[Token(Token = "0x4000E28")]
		pause,
		[Token(Token = "0x4000E29")]
		stop
	}
	[Token(Token = "0x2000251")]
	public class FirstTimeConfigWindowUtility : MonoBehaviour
	{
		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float CountdownTime;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SeeYouMessagePopupTime;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ShutDownMessage;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI countdownText;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject SeeYouSoonPane;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float countdownTank;

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1C164F0", Offset = "0x1C164F0", VA = "0x1C164F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1C1652C", Offset = "0x1C1652C", VA = "0x1C1652C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1C16758", Offset = "0x1C16758", VA = "0x1C16758")]
		public FirstTimeConfigWindowUtility()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class FollowTransformWithDampening : MonoBehaviour
	{
		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float smoothTimePosition;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float smoothTimeRotation;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 velocity;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 rotVelocity;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool lockToYRotation;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool instantRepositionOnStart;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool repositionedOnStart;

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x1C194D8", Offset = "0x1C194D8", VA = "0x1C194D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x1C194DC", Offset = "0x1C194DC", VA = "0x1C194DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x1C19828", Offset = "0x1C19828", VA = "0x1C19828")]
		public void InstantReposition()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x1C19AC8", Offset = "0x1C19AC8", VA = "0x1C19AC8")]
		public Quaternion SmoothDampQuaternion(Quaternion current, Quaternion target, ref Vector3 currentVelocity, float smoothTime)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1C19BAC", Offset = "0x1C19BAC", VA = "0x1C19BAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1C19BB4", Offset = "0x1C19BB4", VA = "0x1C19BB4")]
		public FollowTransformWithDampening()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class HandObscuredCheck : MonoBehaviour
	{
		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool handObscured;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BAEC", Offset = "0x83BAEC")]
		public bool ShowRayGizmo;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask rayLayer;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform playerPoint;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterController controller;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform handPoint;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 rayStartPoint;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool triggerStayed;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool inTrigger;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool rayCollided;

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1C24DD8", Offset = "0x1C24DD8", VA = "0x1C24DD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1C24EB4", Offset = "0x1C24EB4", VA = "0x1C24EB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1C24EB8", Offset = "0x1C24EB8", VA = "0x1C24EB8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1C250EC", Offset = "0x1C250EC", VA = "0x1C250EC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x1C24ED0", Offset = "0x1C24ED0", VA = "0x1C24ED0")]
		private void CheckRayObscure()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1C25130", Offset = "0x1C25130", VA = "0x1C25130")]
		private void ShowRay()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1C25230", Offset = "0x1C25230", VA = "0x1C25230")]
		public bool DiscernObscured()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x1C2525C", Offset = "0x1C2525C", VA = "0x1C2525C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x1C25344", Offset = "0x1C25344", VA = "0x1C25344")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1C25448", Offset = "0x1C25448", VA = "0x1C25448")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x1C25534", Offset = "0x1C25534", VA = "0x1C25534")]
		public HandObscuredCheck()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class HandUnlockHelper : MonoBehaviour
	{
		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Collider> grabbableColliders;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TouchHandGrabInteractable mInteractable;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractableUnityEventWrapper mInteractableWrapper;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float grabCD;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float grabCDTank;

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x1C25634", Offset = "0x1C25634", VA = "0x1C25634")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1C25714", Offset = "0x1C25714", VA = "0x1C25714")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x1C25764", Offset = "0x1C25764", VA = "0x1C25764")]
		public void EnterGrabCooldown()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x1C25760", Offset = "0x1C25760", VA = "0x1C25760")]
		public void ExitGrabCooldown()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1C25770", Offset = "0x1C25770", VA = "0x1C25770")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x1C2580C", Offset = "0x1C2580C", VA = "0x1C2580C")]
		public HandUnlockHelper()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class InputChangeHandler : MonoBehaviour
	{
		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inHandTrackingMode;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableUnityEventWrapper interactableEvents;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TouchHandGrabInteractable mTouchInteractable;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabInteractable mGrabInteractable;

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xA17EF0", Offset = "0xA17EF0", VA = "0xA17EF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xA1824C", Offset = "0xA1824C", VA = "0xA1824C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xA18084", Offset = "0xA18084", VA = "0xA18084")]
		public void HandleInputChange(bool handTracking)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xA18304", Offset = "0xA18304", VA = "0xA18304")]
		public InputChangeHandler()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class InputIconHighlighter : MonoBehaviour
	{
		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OVRInput.Controller targetController;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OVRInput.Button targetInput;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteRenderer targetIcon;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color highlightColor;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color defaultColor;

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xA1830C", Offset = "0xA1830C", VA = "0xA1830C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xA18310", Offset = "0xA18310", VA = "0xA18310")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xA183F8", Offset = "0xA183F8", VA = "0xA183F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xA18420", Offset = "0xA18420", VA = "0xA18420")]
		public InputIconHighlighter()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class OnlyOnDevHider : MonoBehaviour
	{
		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xB8E7D0", Offset = "0xB8E7D0", VA = "0xB8E7D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xB8E860", Offset = "0xB8E860", VA = "0xB8E860")]
		public OnlyOnDevHider()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class PlayPauseIconChanger : MonoBehaviour
	{
		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject playIcon;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject pauseIcon;

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x99B294", Offset = "0x99B294", VA = "0x99B294")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x99B398", Offset = "0x99B398", VA = "0x99B398")]
		private void ProcessIconChange(string machineEvent)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x99B480", Offset = "0x99B480", VA = "0x99B480")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x99B484", Offset = "0x99B484", VA = "0x99B484")]
		private void SetIcon()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x99B5CC", Offset = "0x99B5CC", VA = "0x99B5CC")]
		public PlayPauseIconChanger()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class QuadraticDragHelper : MonoBehaviour
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float dragFactor;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x9A39A8", Offset = "0x9A39A8", VA = "0x9A39A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x9A39FC", Offset = "0x9A39FC", VA = "0x9A39FC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x9A3AC0", Offset = "0x9A3AC0", VA = "0x9A3AC0")]
		public QuadraticDragHelper()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class SetRotationOnStart : MonoBehaviour
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localEulers;

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xB15488", Offset = "0xB15488", VA = "0xB15488")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xB154C0", Offset = "0xB154C0", VA = "0xB154C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xB154C4", Offset = "0xB154C4", VA = "0xB154C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xB154C8", Offset = "0xB154C8", VA = "0xB154C8")]
		public SetRotationOnStart()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class SpawnIntoGrabbingHand : MonoBehaviour
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject grabbablePrefab;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UIButton mButton;

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xC20C30", Offset = "0xC20C30", VA = "0xC20C30")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xC20C84", Offset = "0xC20C84", VA = "0xC20C84")]
		public void SpawnIntoHand(Handedness hand, Transform startingPoint)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xC20E4C", Offset = "0xC20E4C", VA = "0xC20E4C")]
		public SpawnIntoGrabbingHand()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class ToggleHandCapsules : MonoBehaviour
	{
		[Token(Token = "0x200025D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836608", Offset = "0x836608")]
		private sealed class <HandleCooldown>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ToggleHandCapsules <>4__this;

			[Token(Token = "0x1700010B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D96")]
				[Address(RVA = "0x1BF8744", Offset = "0x1BF8744", VA = "0x1BF8744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D98")]
				[Address(RVA = "0x1BF878C", Offset = "0x1BF878C", VA = "0x1BF878C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D93")]
			[Address(RVA = "0x1BF83B4", Offset = "0x1BF83B4", VA = "0x1BF83B4")]
			[DebuggerHidden]
			public <HandleCooldown>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x1BF83E0", Offset = "0x1BF83E0", VA = "0x1BF83E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x1BF83E4", Offset = "0x1BF83E4", VA = "0x1BF83E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x1BF874C", Offset = "0x1BF874C", VA = "0x1BF874C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int activeLayerInt;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int inactiveLayerInt;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HandPhysicsCapsules _capsuleScript;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool leftHand;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isDisabled;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BB24", Offset = "0x83BB24")]
		public bool instantCD;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float cooldownDuration;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int cooldownLayer;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float cooldownTank;

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xC2DD24", Offset = "0xC2DD24", VA = "0xC2DD24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xC2DD7C", Offset = "0xC2DD7C", VA = "0xC2DD7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xC2E20C", Offset = "0xC2E20C", VA = "0xC2E20C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xC2DE44", Offset = "0xC2DE44", VA = "0xC2DE44")]
		public void ToggleCapsules(bool toggleOn)
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xC2E558", Offset = "0xC2E558", VA = "0xC2E558")]
		public void CooldownCapsules()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xC2E898", Offset = "0xC2E898", VA = "0xC2E898")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841604", Offset = "0x841604")]
		private IEnumerator HandleCooldown()
		{
			return null;
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xC2E5A0", Offset = "0xC2E5A0", VA = "0xC2E5A0")]
		private void InstantCooldown()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xC2E268", Offset = "0xC2E268", VA = "0xC2E268")]
		private void EndCooldown()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xC2E904", Offset = "0xC2E904", VA = "0xC2E904")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xC2EA4C", Offset = "0xC2EA4C", VA = "0xC2EA4C")]
		public ToggleHandCapsules()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class ToggleInteractionHook : MonoBehaviour
	{
		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool leftHand;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isDisabled;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject HandInteractors;

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xC2EA78", Offset = "0xC2EA78", VA = "0xC2EA78")]
		public void ToggleInteractors(bool on)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xC2EA98", Offset = "0xC2EA98", VA = "0xC2EA98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xC2EB6C", Offset = "0xC2EB6C", VA = "0xC2EB6C")]
		public ToggleInteractionHook()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class TouchInteractorEventWrapper : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836618", Offset = "0x836618")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__6_0;

			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x1BF87F4", Offset = "0x1BF87F4", VA = "0x1BF87F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x1BF87FC", Offset = "0x1BF87FC", VA = "0x1BF87FC")]
			internal void <.ctor>b__6_0()
			{
			}
		}

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TouchHandGrabInteractor touchInteractor;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action OnRelease;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnReleaseEvent;

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xDA1380", Offset = "0xDA1380", VA = "0xDA1380")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xDA13D4", Offset = "0xDA13D4", VA = "0xDA13D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xDA13D8", Offset = "0xDA13D8", VA = "0xDA13D8")]
		private void HandleOnRelease()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xDA1414", Offset = "0xDA1414", VA = "0xDA1414")]
		public TouchInteractorEventWrapper()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class BreakableHandler : RubeComponent
	{
		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] breakableObjects;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VisualEffect[] vfx;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RubeObject mRubeObj;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Collider> rubeColliders;

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xB21EDC", Offset = "0xB21EDC", VA = "0xB21EDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xB21F40", Offset = "0xB21F40", VA = "0xB21F40")]
		public void Break()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xB22084", Offset = "0xB22084", VA = "0xB22084", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xB2212C", Offset = "0xB2212C", VA = "0xB2212C")]
		public BreakableHandler()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class RubeDelayTrigger : RubeTrigger
	{
		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float delayTime;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool inDelay;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float delayTank;

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x1C0BB2C", Offset = "0x1C0BB2C", VA = "0x1C0BB2C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x1C0BB98", Offset = "0x1C0BB98", VA = "0x1C0BB98", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x1C0BBA4", Offset = "0x1C0BBA4", VA = "0x1C0BBA4", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x1C0BBAC", Offset = "0x1C0BBAC", VA = "0x1C0BBAC", Slot = "19")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1C0BBCC", Offset = "0x1C0BBCC", VA = "0x1C0BBCC")]
		private void DelayTrigger()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1C0BBE0", Offset = "0x1C0BBE0", VA = "0x1C0BBE0")]
		public RubeDelayTrigger()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class RubeImpactTrigger : RubeTrigger
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask layerMask;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BB5C", Offset = "0x83BB5C")]
		public float minImpactEnergyThreshold;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool ignoreMass;

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1C0E968", Offset = "0x1C0E968", VA = "0x1C0E968", Slot = "19")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x1C0E970", Offset = "0x1C0E970", VA = "0x1C0E970")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1C0EA40", Offset = "0x1C0EA40", VA = "0x1C0EA40")]
		public float KineticEnergy(Rigidbody rb)
		{
			return default(float);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x1C0EAEC", Offset = "0x1C0EAEC", VA = "0x1C0EAEC")]
		public RubeImpactTrigger()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class RubeParticleTrigger : RubeTrigger
	{
		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VisualEffect[] vfx;

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xB0DA10", Offset = "0xB0DA10", VA = "0xB0DA10", Slot = "19")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xB0DAB8", Offset = "0xB0DAB8", VA = "0xB0DAB8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xB0DB18", Offset = "0xB0DB18", VA = "0xB0DB18")]
		public RubeParticleTrigger()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class RubeProximityTrigger : RubeTrigger
	{
		[Token(Token = "0x2000266")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836628", Offset = "0x836628")]
		private sealed class <ResetTrigger>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RubeProximityTrigger <>4__this;

			[Token(Token = "0x1700010D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DBF")]
				[Address(RVA = "0x1BF705C", Offset = "0x1BF705C", VA = "0x1BF705C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DC1")]
				[Address(RVA = "0x1BF70A4", Offset = "0x1BF70A4", VA = "0x1BF70A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x1BF6F80", Offset = "0x1BF6F80", VA = "0x1BF6F80")]
			[DebuggerHidden]
			public <ResetTrigger>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x1BF6FAC", Offset = "0x1BF6FAC", VA = "0x1BF6FAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x1BF6FB0", Offset = "0x1BF6FB0", VA = "0x1BF6FB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0x1BF7064", Offset = "0x1BF7064", VA = "0x1BF7064", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool onlyUniqueCollides;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool triggerWhileProximity;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<RubeObject> rubeList;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RubeDomino> dominoList;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider triggerVolume;

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xB0E170", Offset = "0xB0E170", VA = "0xB0E170")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xB0E1C4", Offset = "0xB0E1C4", VA = "0xB0E1C4", Slot = "19")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xB0E1C8", Offset = "0xB0E1C8", VA = "0xB0E1C8", Slot = "20")]
		public override void UnTrigger()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xB0E270", Offset = "0xB0E270", VA = "0xB0E270", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xB0E328", Offset = "0xB0E328", VA = "0xB0E328")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8416B4", Offset = "0x8416B4")]
		private IEnumerator ResetTrigger()
		{
			return null;
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xB0E394", Offset = "0xB0E394", VA = "0xB0E394")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xB0E828", Offset = "0xB0E828", VA = "0xB0E828")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xB0EB90", Offset = "0xB0EB90", VA = "0xB0EB90")]
		public RubeProximityTrigger()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class RubeTrigger : RubeComponent
	{
		[Token(Token = "0x2000268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836638", Offset = "0x836638")]
		private sealed class <DelayResume>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RubeTrigger <>4__this;

			[Token(Token = "0x1700010F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DD0")]
				[Address(RVA = "0x1BF76B8", Offset = "0x1BF76B8", VA = "0x1BF76B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000110")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DD2")]
				[Address(RVA = "0x1BF7700", Offset = "0x1BF7700", VA = "0x1BF7700", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x1BF759C", Offset = "0x1BF759C", VA = "0x1BF759C")]
			[DebuggerHidden]
			public <DelayResume>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x1BF75C8", Offset = "0x1BF75C8", VA = "0x1BF75C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x1BF75CC", Offset = "0x1BF75CC", VA = "0x1BF75CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x1BF76C0", Offset = "0x1BF76C0", VA = "0x1BF76C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool isSimulating;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		protected bool isGrabbed;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		protected bool holdOnResume;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		protected bool skipHold;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnTrigger;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnUnTrigger;

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xB0DA90", Offset = "0xB0DA90", VA = "0xB0DA90", Slot = "19")]
		public virtual void Trigger()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xB0E254", Offset = "0xB0E254", VA = "0xB0E254", Slot = "20")]
		public virtual void UnTrigger()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xB12E78", Offset = "0xB12E78", VA = "0xB12E78", Slot = "14")]
		public override void ActAsObject()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xB12E7C", Offset = "0xB12E7C", VA = "0xB12E7C")]
		public void AssessSimState()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xB12F08", Offset = "0xB12F08", VA = "0xB12F08", Slot = "11")]
		public override void OnStartSimulation()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xB12FC0", Offset = "0xB12FC0", VA = "0xB12FC0", Slot = "12")]
		public override void OnStopSimulation()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xB12FDC", Offset = "0xB12FDC", VA = "0xB12FDC", Slot = "9")]
		public override void OnParentGrabbed()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xB12FE8", Offset = "0xB12FE8", VA = "0xB12FE8", Slot = "10")]
		public override void OnParentReleased()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xB0E31C", Offset = "0xB0E31C", VA = "0xB0E31C", Slot = "7")]
		public override void ResetSimulation()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xB12F54", Offset = "0xB12F54", VA = "0xB12F54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841764", Offset = "0x841764")]
		private IEnumerator DelayResume()
		{
			return null;
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xB0DB28", Offset = "0xB0DB28", VA = "0xB0DB28")]
		public RubeTrigger()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class RubeVolumeTrigger : RubeTrigger
	{
		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask layerMask;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float volumeTriggerThreshold;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float curInternalVolume;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RubeObject> objList;

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xB1315C", Offset = "0xB1315C", VA = "0xB1315C", Slot = "19")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xB13160", Offset = "0xB13160", VA = "0xB13160")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xB13330", Offset = "0xB13330", VA = "0xB13330")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xB13308", Offset = "0xB13308", VA = "0xB13308")]
		private void AddVolume(float volume)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xB13468", Offset = "0xB13468", VA = "0xB13468")]
		private void RemoveVolume(float volume)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xB13480", Offset = "0xB13480", VA = "0xB13480")]
		public RubeVolumeTrigger()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public static class Utils
	{
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xDA47E4", Offset = "0xDA47E4", VA = "0xDA47E4")]
		public static Pose RelativeOffset(Vector3 toPosition, Quaternion toRotation, Vector3 fromPosition, Quaternion fromRotation)
		{
			return default(Pose);
		}
	}
}
namespace ControllerSelection
{
	[Token(Token = "0x200026B")]
	public class OVRInputHelpers
	{
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xB82DBC", Offset = "0xB82DBC", VA = "0xB82DBC")]
		public static Ray GetSelectionRay(OVRInput.Controller activeController, Transform trackingSpace)
		{
			return default(Ray);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xB8314C", Offset = "0xB8314C", VA = "0xB8314C")]
		public static Transform FindTrackingSpace()
		{
			return null;
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xB8350C", Offset = "0xB8350C", VA = "0xB8350C")]
		public static OVRInput.Controller GetControllerForButton(OVRInput.Button joyPadClickButton, OVRInput.Controller oldController)
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xB8363C", Offset = "0xB8363C", VA = "0xB8363C")]
		public OVRInputHelpers()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class OVRInputModule : PointerInputModule
	{
		[Token(Token = "0x200026D")]
		public delegate void RayHitDelegate(Vector3 hitPosition, Vector3 hitNormal);

		[Token(Token = "0x200026E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x836648", Offset = "0x836648")]
		public enum InputMode
		{
			[Token(Token = "0x4000EA6")]
			Mouse,
			[Token(Token = "0x4000EA7")]
			Buttons
		}

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BB94", Offset = "0x83BB94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BB94", Offset = "0x83BB94")]
		public Transform trackingSpace;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BBF4", Offset = "0x83BBF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BBF4", Offset = "0x83BBF4")]
		public OVRInput.Button joyPadClickButton;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BC54", Offset = "0x83BC54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BC54", Offset = "0x83BC54")]
		public bool performSphereCastForGazepointer;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BCB4", Offset = "0x83BCB4")]
		public bool matchNormalOnPhysicsColliders;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BCEC", Offset = "0x83BCEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BCEC", Offset = "0x83BCEC")]
		public bool useLeftStickScroll;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BD4C", Offset = "0x83BD4C")]
		public float leftStickDeadZone;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BD84", Offset = "0x83BD84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BD84", Offset = "0x83BD84")]
		public bool useSwipeScroll;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BDE4", Offset = "0x83BDE4")]
		public float minSwipeMovement;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BE1C", Offset = "0x83BE1C")]
		public float swipeScrollScale;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public OVRInput.Controller activeController;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RayHitDelegate OnSelectionRayHit;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 swipeStartPos;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 unusedSwipe;

		[NonSerialized]
		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public OVRRaycaster activeGraphicRaycaster;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BE64", Offset = "0x83BE64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BE64", Offset = "0x83BE64")]
		public float angleDragThreshold;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_NextAction;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector2 m_LastMousePosition;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 m_MousePosition;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BEC4", Offset = "0x83BEC4")]
		private string m_HorizontalAxis;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_AllowActivationOnMobileDevice;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Dictionary<int, OVRRayPointerEventData> m_VRRayPointerData;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly MouseState m_MouseState;

		[Token(Token = "0x17000111")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x842D3C", Offset = "0x842D3C")]
		public InputMode inputMode
		{
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0xB83AC8", Offset = "0xB83AC8", VA = "0xB83AC8")]
			get
			{
				return default(InputMode);
			}
		}

		[Token(Token = "0x17000112")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0xB83AD0", Offset = "0xB83AD0", VA = "0xB83AD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0xB83AD8", Offset = "0xB83AD8", VA = "0xB83AD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0xB83AE4", Offset = "0xB83AE4", VA = "0xB83AE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0xB83AEC", Offset = "0xB83AEC", VA = "0xB83AEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public string horizontalAxis
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0xB83AF4", Offset = "0xB83AF4", VA = "0xB83AF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0xB83AFC", Offset = "0xB83AFC", VA = "0xB83AFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public string verticalAxis
		{
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0xB83B04", Offset = "0xB83B04", VA = "0xB83B04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0xB83B0C", Offset = "0xB83B0C", VA = "0xB83B0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public string submitButton
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0xB83B14", Offset = "0xB83B14", VA = "0xB83B14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xB83B1C", Offset = "0xB83B1C", VA = "0xB83B1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public string cancelButton
		{
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0xB83B24", Offset = "0xB83B24", VA = "0xB83B24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0xB83B2C", Offset = "0xB83B2C", VA = "0xB83B2C")]
			set
			{
			}
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xB83644", Offset = "0xB83644", VA = "0xB83644", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xB83718", Offset = "0xB83718", VA = "0xB83718", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xB837E0", Offset = "0xB837E0", VA = "0xB837E0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xB838A8", Offset = "0xB838A8", VA = "0xB838A8")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xB83970", Offset = "0xB83970", VA = "0xB83970")]
		protected OVRInputModule()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xB83ABC", Offset = "0xB83ABC", VA = "0xB83ABC")]
		protected void Reset()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xB83B34", Offset = "0xB83B34", VA = "0xB83B34", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xB83B74", Offset = "0xB83B74", VA = "0xB83B74", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xB83B8C", Offset = "0xB83B8C", VA = "0xB83B8C", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xB83C80", Offset = "0xB83C80", VA = "0xB83C80", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xB83D60", Offset = "0xB83D60", VA = "0xB83D60", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xB84060", Offset = "0xB84060", VA = "0xB84060")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xB84288", Offset = "0xB84288", VA = "0xB84288")]
		private bool AllowMoveEventProcessing(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xB842E8", Offset = "0xB842E8", VA = "0xB842E8")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xB8438C", Offset = "0xB8438C", VA = "0xB8438C")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xB84548", Offset = "0xB84548", VA = "0xB84548")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xB846AC", Offset = "0xB846AC", VA = "0xB846AC")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xB84D84", Offset = "0xB84D84", VA = "0xB84D84")]
		private void ProcessMouseEvent(MouseState mouseData)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xB8504C", Offset = "0xB8504C", VA = "0xB8504C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xB84FFC", Offset = "0xB84FFC", VA = "0xB84FFC")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xB8561C", Offset = "0xB8561C", VA = "0xB8561C")]
		protected void CopyFromTo(OVRRayPointerEventData from, OVRRayPointerEventData to)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xB85690", Offset = "0xB85690", VA = "0xB85690")]
		protected new void CopyFromTo(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xB856EC", Offset = "0xB856EC", VA = "0xB856EC")]
		protected bool GetPointerData(int id, out OVRRayPointerEventData data, bool create)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xB83D88", Offset = "0xB83D88", VA = "0xB83D88")]
		protected new void ClearSelection()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xB857EC", Offset = "0xB857EC", VA = "0xB857EC")]
		private static Vector3 GetRectTransformNormal(RectTransform rectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xB850B0", Offset = "0xB850B0", VA = "0xB850B0")]
		protected MouseState GetGazePointerData()
		{
			return null;
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xB85B68", Offset = "0xB85B68", VA = "0xB85B68")]
		protected MouseState GetCanvasPointerData()
		{
			return null;
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xB85EE4", Offset = "0xB85EE4", VA = "0xB85EE4")]
		private bool ShouldStartDrag(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xB8558C", Offset = "0xB8558C", VA = "0xB8558C")]
		private static bool IsPointerMoving(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xB86090", Offset = "0xB86090", VA = "0xB86090", Slot = "29")]
		protected override void ProcessDrag(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xB85A60", Offset = "0xB85A60", VA = "0xB85A60")]
		protected PointerEventData.FramePressState GetGazeButtonState()
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xB8590C", Offset = "0xB8590C", VA = "0xB8590C")]
		protected Vector2 GetExtraScrollDelta()
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x836684", Offset = "0x836684")]
	public class OVRPhysicsRaycaster : BaseRaycaster
	{
		[Serializable]
		[Token(Token = "0x2000270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8366E4", Offset = "0x8366E4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__12_0;

			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<RaycastHit> <>9__13_0;

			[Token(Token = "0x6000E19")]
			[Address(RVA = "0x1BF2030", Offset = "0x1BF2030", VA = "0x1BF2030")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x1BF2038", Offset = "0x1BF2038", VA = "0x1BF2038")]
			internal int <Raycast>b__12_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}

			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x1BF207C", Offset = "0x1BF207C", VA = "0x1BF207C")]
			internal int <Spherecast>b__13_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000EA8")]
		protected const int kNoEventMaskSet = -1;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected LayerMask m_EventMask;

		[Token(Token = "0x17000118")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xB88ED0", Offset = "0xB88ED0", VA = "0xB88ED0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		public virtual int depth
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xB88F2C", Offset = "0xB88F2C", VA = "0xB88F2C", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700011A")]
		public int finalEventMask
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xB89000", Offset = "0xB89000", VA = "0xB89000")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700011B")]
		public LayerMask eventMask
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xB890D0", Offset = "0xB890D0", VA = "0xB890D0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xB890D8", Offset = "0xB890D8", VA = "0xB890D8")]
			set
			{
			}
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xB88E9C", Offset = "0xB88E9C", VA = "0xB88E9C")]
		protected OVRPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xB890E0", Offset = "0xB890E0", VA = "0xB890E0", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xB894E8", Offset = "0xB894E8", VA = "0xB894E8")]
		public void Spherecast(PointerEventData eventData, List<RaycastResult> resultAppendList, float radius)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xB85A0C", Offset = "0xB85A0C", VA = "0xB85A0C")]
		public Vector2 GetScreenPos(Vector3 worldPosition)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000271")]
	public class OVRRawRaycaster : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000272")]
		public struct DraggingData
		{
			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform transform;

			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 origin;

			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 direction;
		}

		[Serializable]
		[Token(Token = "0x2000273")]
		public class HoverCallback : UnityEvent<Transform>
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x1BF210C", Offset = "0x1BF210C", VA = "0x1BF210C")]
			public HoverCallback()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000274")]
		public class SelectionCallback : UnityEvent<Transform>
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x1BF2158", Offset = "0x1BF2158", VA = "0x1BF2158")]
			public SelectionCallback()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000275")]
		public class DraggingCallback : UnityEvent<DraggingData>
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x1BF20C0", Offset = "0x1BF20C0", VA = "0x1BF20C0")]
			public DraggingCallback()
			{
			}
		}

		[Token(Token = "0x2000276")]
		public enum InteractionStatus
		{
			[Token(Token = "0x4000EC4")]
			Pressed,
			[Token(Token = "0x4000EC5")]
			Released
		}

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BF70", Offset = "0x83BF70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BF70", Offset = "0x83BF70")]
		public Transform trackingSpace;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83BFD0", Offset = "0x83BFD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83BFD0", Offset = "0x83BFD0")]
		public OVRInput.Button primaryButton;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83C030", Offset = "0x83C030")]
		public OVRInput.Button secondaryButton;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83C068", Offset = "0x83C068")]
		public LayerMask excludeLayers;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83C0A0", Offset = "0x83C0A0")]
		public float raycastDistance;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83C0D8", Offset = "0x83C0D8")]
		public HoverCallback onHoverEnter;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HoverCallback onHoverExit;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HoverCallback onHover;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83C110", Offset = "0x83C110")]
		public SelectionCallback onPrimaryPressed;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SelectionCallback onSecondaryPressed;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83C148", Offset = "0x83C148")]
		public SelectionCallback onPrimaryReleased;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SelectionCallback onSecondaryReleased;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83C180", Offset = "0x83C180")]
		public DraggingCallback onPrimaryDragging;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public DraggingCallback onSecondaryDraging;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Transform lastHit;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform triggerDown;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Transform padDown;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public OVRInput.Controller activeController;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public InteractionStatus interactionStatus;

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xB898F8", Offset = "0xB898F8", VA = "0xB898F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xB899C0", Offset = "0xB899C0", VA = "0xB899C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xB89A7C", Offset = "0xB89A7C", VA = "0xB89A7C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xB89B38", Offset = "0xB89B38", VA = "0xB89B38")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xB89C00", Offset = "0xB89C00", VA = "0xB89C00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xB89CB0", Offset = "0xB89CB0", VA = "0xB89CB0")]
		private void UpdateHover(Ray pointer)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xB89EE4", Offset = "0xB89EE4", VA = "0xB89EE4")]
		private void UpdateControllerInteractionStatus(Ray pointer)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xB8A288", Offset = "0xB8A288", VA = "0xB8A288")]
		private void UpdateMouseInteractionStatus()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xB8A414", Offset = "0xB8A414", VA = "0xB8A414")]
		public OVRRawRaycaster()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class OVRRayPointerEventData : PointerEventData
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Ray worldSpaceRay;

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xB857E4", Offset = "0xB857E4", VA = "0xB857E4")]
		public OVRRayPointerEventData(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xB8A438", Offset = "0xB8A438", VA = "0xB8A438", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8366F4", Offset = "0x8366F4")]
	public class OVRRaycaster : GraphicRaycaster, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x2000279")]
		private struct RaycastHit
		{
			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic graphic;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 worldPos;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool fromMouse;
		}

		[Serializable]
		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836754", Offset = "0x836754")]
		private sealed class <>c
		{
			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__12_0;

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x1BF2204", Offset = "0x1BF2204", VA = "0x1BF2204")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x1BF220C", Offset = "0x1BF220C", VA = "0x1BF220C")]
			internal int <GraphicRaycast>b__12_0(RaycastHit g1, RaycastHit g2)
			{
				return default(int);
			}
		}

		[NonSerialized]
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool warnedAboutCamera;

		[NonSerialized]
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<RaycastHit> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<RaycastHit> s_SortedGraphics;

		[Token(Token = "0x1700011C")]
		private Canvas canvas
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xB8A840", Offset = "0xB8A840", VA = "0xB8A840")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0xB8A8E0", Offset = "0xB8A8E0", VA = "0xB8A8E0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xB8A79C", Offset = "0xB8A79C", VA = "0xB8A79C")]
		protected OVRRaycaster()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xB8ABDC", Offset = "0xB8ABDC", VA = "0xB8ABDC")]
		private void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList, Ray ray, bool checkForBlocking)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xB8B754", Offset = "0xB8B754", VA = "0xB8B754", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xB85EE0", Offset = "0xB85EE0", VA = "0xB85EE0")]
		public void RaycastPointer(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xB8B16C", Offset = "0xB8B16C", VA = "0xB8B16C")]
		private void GraphicRaycast(Canvas canvas, Ray ray, List<RaycastHit> results)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xB859C8", Offset = "0xB859C8", VA = "0xB859C8")]
		public Vector2 GetScreenPosition(RaycastResult raycastResult)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xB8B814", Offset = "0xB8B814", VA = "0xB8B814")]
		private static bool RayIntersectsRectTransform(RectTransform rectTransform, Ray ray, out Vector3 worldPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xB8BAB8", Offset = "0xB8BAB8", VA = "0xB8BAB8")]
		public bool IsFocussed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xB8BBF8", Offset = "0xB8BBF8", VA = "0xB8BBF8", Slot = "22")]
		public void OnPointerEnter(PointerEventData e)
		{
		}
	}
}
namespace PathCreation.Examples
{
	[Token(Token = "0x200027B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x836764", Offset = "0x836764")]
	public class GeneratePathExample : MonoBehaviour
	{
		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool closedLoop;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] waypoints;

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x1C1EBCC", Offset = "0x1C1EBCC", VA = "0x1C1EBCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x1C1EC8C", Offset = "0x1C1EC8C", VA = "0x1C1EC8C")]
		public GeneratePathExample()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class PathFollower : MonoBehaviour
	{
		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathCreator pathCreator;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndOfPathInstruction endOfPathInstruction;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distanceTravelled;

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x999634", Offset = "0x999634", VA = "0x999634")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x99971C", Offset = "0x99971C", VA = "0x99971C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x999850", Offset = "0x999850", VA = "0x999850")]
		private void OnPathChanged()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x9998B0", Offset = "0x9998B0", VA = "0x9998B0")]
		public PathFollower()
		{
		}
	}
	[Token(Token = "0x200027D")]
	[ExecuteInEditMode]
	public class PathPlacer : PathSceneTool
	{
		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject prefab;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject holder;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float spacing;

		[Token(Token = "0x4000ED9")]
		private const float minSpacing = 0.1f;

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x9998C0", Offset = "0x9998C0", VA = "0x9998C0")]
		private void Generate()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x999ADC", Offset = "0x999ADC", VA = "0x999ADC")]
		private void DestroyObjects()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x999BB4", Offset = "0x999BB4", VA = "0x999BB4", Slot = "5")]
		protected override void PathUpdated()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x999C38", Offset = "0x999C38", VA = "0x999C38")]
		public PathPlacer()
		{
		}
	}
	[Token(Token = "0x200027E")]
	[ExecuteInEditMode]
	public abstract class PathSceneTool : MonoBehaviour
	{
		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PathCreator pathCreator;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoUpdate;

		[Token(Token = "0x1700011E")]
		protected VertexPath path
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x999DA0", Offset = "0x999DA0", VA = "0x999DA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000010")]
		public event Action onDestroyed
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x999C60", Offset = "0x999C60", VA = "0x999C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841814", Offset = "0x841814")]
			add
			{
			}
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x999D00", Offset = "0x999D00", VA = "0x999D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841824", Offset = "0x841824")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x999DBC", Offset = "0x999DBC", VA = "0x999DBC")]
		public void TriggerUpdate()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x999DC8", Offset = "0x999DC8", VA = "0x999DC8", Slot = "4")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000E48")]
		protected abstract void PathUpdated();

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x999C50", Offset = "0x999C50", VA = "0x999C50")]
		protected PathSceneTool()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class PathSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathCreator pathPrefab;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PathFollower followerPrefab;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] spawnPoints;

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x999DDC", Offset = "0x999DDC", VA = "0x999DDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x999F80", Offset = "0x999F80", VA = "0x999F80")]
		public PathSpawner()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class RoadMeshCreator : PathSceneTool
	{
		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83C1D8", Offset = "0x83C1D8")]
		public float roadWidth;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83C210", Offset = "0x83C210")]
		public float thickness;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool flattenSurface;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83C228", Offset = "0x83C228")]
		public Material roadMaterial;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material undersideMaterial;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float textureTiling;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private GameObject meshHolder;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh mesh;

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x9A9BD0", Offset = "0x9A9BD0", VA = "0x9A9BD0", Slot = "5")]
		protected override void PathUpdated()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x9AA134", Offset = "0x9AA134", VA = "0x9AA134")]
		private void CreateRoadMesh()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x9A9C64", Offset = "0x9A9C64", VA = "0x9A9C64")]
		private void AssignMeshComponents()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x9A9F6C", Offset = "0x9A9F6C", VA = "0x9A9F6C")]
		private void AssignMaterials()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x9AAAB0", Offset = "0x9AAAB0", VA = "0x9AAAB0")]
		public RoadMeshCreator()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000281")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700011F")]
		public bool Highlight
		{
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0xB2F7BC", Offset = "0xB2F7BC", VA = "0xB2F7BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xB2F7C4", Offset = "0xB2F7C4", VA = "0xB2F7C4")]
			set
			{
			}
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xB2F7D0", Offset = "0xB2F7D0", VA = "0xB2F7D0")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xB2F998", Offset = "0xB2F998", VA = "0xB2F998", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xB2F9C0", Offset = "0xB2F9C0", VA = "0xB2F9C0", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xB2F9E8", Offset = "0xB2F9E8", VA = "0xB2F9E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xB2F898", Offset = "0xB2F898", VA = "0xB2F898")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xB2FC80", Offset = "0xB2FC80", VA = "0xB2FC80")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000120")]
		public bool InRange
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0xBC3964", Offset = "0xBC3964", VA = "0xBC3964")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0xBC396C", Offset = "0xBC396C", VA = "0xBC396C")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public bool Targeted
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0xBC3AE8", Offset = "0xBC3AE8", VA = "0xBC3AE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0xBC3AF0", Offset = "0xBC3AF0", VA = "0xBC3AF0")]
			set
			{
			}
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xBC3AFC", Offset = "0xBC3AFC", VA = "0xBC3AFC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xBC3978", Offset = "0xBC3978", VA = "0xBC3978")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xBC3C2C", Offset = "0xBC3C2C", VA = "0xBC3C2C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8367E4", Offset = "0x8367E4")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000122")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0xBC3C34", Offset = "0xBC3C34", VA = "0xBC3C34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0xBC3C3C", Offset = "0xBC3C3C", VA = "0xBC3C3C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xBC3C58", Offset = "0xBC3C58", VA = "0xBC3C58", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xBC3E88", Offset = "0xBC3E88", VA = "0xBC3E88", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xBC4748", Offset = "0xBC4748", VA = "0xBC4748", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xBC4BC0", Offset = "0xBC4BC0", VA = "0xBC4BC0", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xBC4E80", Offset = "0xBC4E80", VA = "0xBC4E80")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xBC40DC", Offset = "0xBC40DC", VA = "0xBC40DC")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xBC4F70", Offset = "0xBC4F70", VA = "0xBC4F70")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xBC536C", Offset = "0xBC536C", VA = "0xBC536C", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xBC5384", Offset = "0xBC5384", VA = "0xBC5384", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xBC538C", Offset = "0xBC538C", VA = "0xBC538C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x1C1EE5C", Offset = "0x1C1EE5C", VA = "0x1C1EE5C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x1C1EF14", Offset = "0x1C1EF14", VA = "0x1C1EF14")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x1C1EFCC", Offset = "0x1C1EFCC", VA = "0x1C1EFCC")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000286")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000F0C")]
			Disabled,
			[Token(Token = "0x4000F0D")]
			Enabled,
			[Token(Token = "0x4000F0E")]
			Targeted
		}

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x1C1F4B8", Offset = "0x1C1F4B8", VA = "0x1C1F4B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x1C1F51C", Offset = "0x1C1F51C", VA = "0x1C1F51C")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x1C1F5B8", Offset = "0x1C1F5B8", VA = "0x1C1F5B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x1C1F600", Offset = "0x1C1F600", VA = "0x1C1F600")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x999F88", Offset = "0x999F88", VA = "0x999F88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x99A0E0", Offset = "0x99A0E0", VA = "0x99A0E0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x99A0EC", Offset = "0x99A0EC", VA = "0x99A0EC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x99A0F8", Offset = "0x99A0F8", VA = "0x99A0F8")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xB204D8", Offset = "0xB204D8", VA = "0xB204D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xB2052C", Offset = "0xB2052C", VA = "0xB2052C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xB20898", Offset = "0xB20898", VA = "0xB20898")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xB2099C", Offset = "0xB2099C", VA = "0xB2099C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xB20530", Offset = "0xB20530", VA = "0xB20530")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xB20AA0", Offset = "0xB20AA0", VA = "0xB20AA0")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200028A")]
		public enum ContactTest
		{
			[Token(Token = "0x4000F21")]
			PerpenTest,
			[Token(Token = "0x4000F22")]
			BackwardsPress
		}

		[Token(Token = "0x4000F12")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000F13")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C3C8", Offset = "0x83C3C8")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000123")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0xB22ED4", Offset = "0xB22ED4", VA = "0xB22ED4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000124")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0xB22EDC", Offset = "0xB22EDC", VA = "0xB22EDC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000125")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0xB22EE8", Offset = "0xB22EE8", VA = "0xB22EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841834", Offset = "0x841834")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0xB22EF0", Offset = "0xB22EF0", VA = "0xB22EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841844", Offset = "0x841844")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xB22EF8", Offset = "0xB22EF8", VA = "0xB22EF8", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xB22FE4", Offset = "0xB22FE4", VA = "0xB22FE4")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xB231E4", Offset = "0xB231E4", VA = "0xB231E4", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xB23798", Offset = "0xB23798", VA = "0xB23798")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xB23844", Offset = "0xB23844", VA = "0xB23844")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xB236B0", Offset = "0xB236B0", VA = "0xB236B0")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xB2394C", Offset = "0xB2394C", VA = "0xB2394C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xB239D0", Offset = "0xB239D0", VA = "0xB239D0")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xB23A5C", Offset = "0xB23A5C", VA = "0xB23A5C")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C3E8", Offset = "0x83C3E8")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C3F8", Offset = "0x83C3F8")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000126")]
		public Collider Collider
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0xB24098", Offset = "0xB24098", VA = "0xB24098", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841854", Offset = "0x841854")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xB240A0", Offset = "0xB240A0", VA = "0xB240A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841864", Offset = "0x841864")]
			private set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xB240A8", Offset = "0xB240A8", VA = "0xB240A8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841874", Offset = "0x841874")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xB240B0", Offset = "0xB240B0", VA = "0xB240B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841884", Offset = "0x841884")]
			private set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xB240B8", Offset = "0xB240B8", VA = "0xB240B8", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xB24108", Offset = "0xB24108", VA = "0xB24108")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xB2418C", Offset = "0xB2418C", VA = "0xB2418C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000129")]
		Collider Collider
		{
			[Token(Token = "0x6000E92")]
			get;
		}

		[Token(Token = "0x1700012A")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000E93")]
			get;
		}

		[Token(Token = "0x1700012B")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000E94")]
			get;
		}
	}
	[Token(Token = "0x200028D")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xB23144", Offset = "0xB23144", VA = "0xB23144")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200028E")]
	public enum InteractionType
	{
		[Token(Token = "0x4000F2B")]
		Enter,
		[Token(Token = "0x4000F2C")]
		Stay,
		[Token(Token = "0x4000F2D")]
		Exit
	}
	[Token(Token = "0x200028F")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000290")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000F3F")]
			Mesh,
			[Token(Token = "0x4000F40")]
			Skeleton,
			[Token(Token = "0x4000F41")]
			Both
		}

		[Token(Token = "0x2000291")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836844", Offset = "0x836844")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000137")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EB7")]
				[Address(RVA = "0x1BEF364", Offset = "0x1BEF364", VA = "0x1BEF364", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000138")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EB9")]
				[Address(RVA = "0x1BEF3AC", Offset = "0x1BEF3AC", VA = "0x1BEF3AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x1BEF104", Offset = "0x1BEF104", VA = "0x1BEF104")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x1BEF130", Offset = "0x1BEF130", VA = "0x1BEF130", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x1BEF134", Offset = "0x1BEF134", VA = "0x1BEF134", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x1BEF36C", Offset = "0x1BEF36C", VA = "0x1BEF36C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F2E")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C428", Offset = "0x83C428")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700012C")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x1C15E5C", Offset = "0x1C15E5C", VA = "0x1C15E5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x1C26170", Offset = "0x1C26170", VA = "0x1C26170")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x1C261D8", Offset = "0x1C261D8", VA = "0x1C261D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x1C26210", Offset = "0x1C26210", VA = "0x1C26210")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x1C26278", Offset = "0x1C26278", VA = "0x1C26278")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x1C262B0", Offset = "0x1C262B0", VA = "0x1C262B0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x1C26318", Offset = "0x1C26318", VA = "0x1C26318")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x1C26350", Offset = "0x1C26350", VA = "0x1C26350")]
			private set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x1C263B8", Offset = "0x1C263B8", VA = "0x1C263B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x1C263F0", Offset = "0x1C263F0", VA = "0x1C263F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x1C15E28", Offset = "0x1C15E28", VA = "0x1C15E28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x1C26458", Offset = "0x1C26458", VA = "0x1C26458")]
			private set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x1C264BC", Offset = "0x1C264BC", VA = "0x1C264BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x1C264F0", Offset = "0x1C264F0", VA = "0x1C264F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x1C26554", Offset = "0x1C26554", VA = "0x1C26554")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x1C26588", Offset = "0x1C26588", VA = "0x1C26588")]
			private set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x1C265EC", Offset = "0x1C265EC", VA = "0x1C265EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x1C26620", Offset = "0x1C26620", VA = "0x1C26620")]
			private set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x1C26684", Offset = "0x1C26684", VA = "0x1C26684")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x1C266B8", Offset = "0x1C266B8", VA = "0x1C266B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x1C2671C", Offset = "0x1C2671C", VA = "0x1C2671C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841894", Offset = "0x841894")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x1C26768", Offset = "0x1C26768", VA = "0x1C26768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8418A4", Offset = "0x8418A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x1C267B8", Offset = "0x1C267B8", VA = "0x1C267B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x1C26B60", Offset = "0x1C26B60", VA = "0x1C26B60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x1C26AF4", Offset = "0x1C26AF4", VA = "0x1C26AF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8418B4", Offset = "0x8418B4")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x1C26BE8", Offset = "0x1C26BE8", VA = "0x1C26BE8")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1C26CCC", Offset = "0x1C26CCC", VA = "0x1C26CCC")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x1C26EAC", Offset = "0x1C26EAC", VA = "0x1C26EAC")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1C15C9C", Offset = "0x1C15C9C", VA = "0x1C15C9C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1C270E8", Offset = "0x1C270E8", VA = "0x1C270E8")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000293")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x1BEF488", Offset = "0x1BEF488", VA = "0x1BEF488")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000139")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0xA185E0", Offset = "0xA185E0", VA = "0xA185E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0xA185E8", Offset = "0xA185E8", VA = "0xA185E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0xA185F0", Offset = "0xA185F0", VA = "0xA185F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0xA185F8", Offset = "0xA185F8", VA = "0xA185F8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0xA18600", Offset = "0xA18600", VA = "0xA18600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841964", Offset = "0x841964")]
			add
			{
			}
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0xA186A0", Offset = "0xA186A0", VA = "0xA186A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841974", Offset = "0x841974")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0xA187B0", Offset = "0xA187B0", VA = "0xA187B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841984", Offset = "0x841984")]
			add
			{
			}
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0xA18850", Offset = "0xA18850", VA = "0xA18850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841994", Offset = "0x841994")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0xA18960", Offset = "0xA18960", VA = "0xA18960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8419A4", Offset = "0x8419A4")]
			add
			{
			}
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0xA18A00", Offset = "0xA18A00", VA = "0xA18A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8419B4", Offset = "0x8419B4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xA18740", Offset = "0xA18740", VA = "0xA18740", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xA188F0", Offset = "0xA188F0", VA = "0xA188F0", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xA18AA0", Offset = "0xA18AA0", VA = "0xA18AA0", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000EC7")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xA18B10", Offset = "0xA18B10", VA = "0xA18B10", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xA18C3C", Offset = "0xA18C3C", VA = "0xA18C3C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xA18D68", Offset = "0xA18D68", VA = "0xA18D68")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000F4D")]
		None,
		[Token(Token = "0x4000F4E")]
		Proximity,
		[Token(Token = "0x4000F4F")]
		Contact,
		[Token(Token = "0x4000F50")]
		Action
	}
	[Token(Token = "0x2000295")]
	public enum InteractableState
	{
		[Token(Token = "0x4000F52")]
		Default,
		[Token(Token = "0x4000F53")]
		ProximityState,
		[Token(Token = "0x4000F54")]
		ContactState,
		[Token(Token = "0x4000F55")]
		ActionState
	}
	[Token(Token = "0x2000296")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xA19484", Offset = "0xA19484", VA = "0xA19484")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700013D")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0xA19390", Offset = "0xA19390", VA = "0xA19390")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xA18B70", Offset = "0xA18B70", VA = "0xA18B70")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xA18C9C", Offset = "0xA18C9C", VA = "0xA18C9C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xA193F4", Offset = "0xA193F4", VA = "0xA193F4")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000299")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836854", Offset = "0x836854")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700013E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EDA")]
				[Address(RVA = "0x1BEF9CC", Offset = "0x1BEF9CC", VA = "0x1BEF9CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EDC")]
				[Address(RVA = "0x1BEFA14", Offset = "0x1BEFA14", VA = "0x1BEFA14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x1BEF530", Offset = "0x1BEF530", VA = "0x1BEF530")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x1BEF55C", Offset = "0x1BEF55C", VA = "0x1BEF55C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x1BEF5CC", Offset = "0x1BEF5CC", VA = "0x1BEF5CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x1BEF578", Offset = "0x1BEF578", VA = "0x1BEF578")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x1BEF9D4", Offset = "0x1BEF9D4", VA = "0x1BEF9D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xA1A170", Offset = "0xA1A170", VA = "0xA1A170")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xA1A1EC", Offset = "0xA1A1EC", VA = "0xA1A1EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8419C4", Offset = "0x8419C4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xA1A274", Offset = "0xA1A274", VA = "0xA1A274")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xA1A35C", Offset = "0xA1A35C", VA = "0xA1A35C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000140")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0xA1A364", Offset = "0xA1A364", VA = "0xA1A364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xA1A4E0", Offset = "0xA1A4E0", VA = "0xA1A4E0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xA1A588", Offset = "0xA1A588", VA = "0xA1A588")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xA1A630", Offset = "0xA1A630", VA = "0xA1A630")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xA1A8F8", Offset = "0xA1A8F8", VA = "0xA1A8F8")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xA1A940", Offset = "0xA1A940", VA = "0xA1A940")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xA1ABD4", Offset = "0xA1ABD4", VA = "0xA1ABD4")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xA1AD20", Offset = "0xA1AD20", VA = "0xA1AD20")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200029C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836864", Offset = "0x836864")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000145")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EF6")]
				[Address(RVA = "0x1BEC1A4", Offset = "0x1BEC1A4", VA = "0x1BEC1A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000146")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EF8")]
				[Address(RVA = "0x1BEC1EC", Offset = "0x1BEC1EC", VA = "0x1BEC1EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x1BEBD90", Offset = "0x1BEBD90", VA = "0x1BEBD90")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x1BEBDBC", Offset = "0x1BEBDBC", VA = "0x1BEBDBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x1BEBDC0", Offset = "0x1BEBDC0", VA = "0x1BEBDC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x1BEC1AC", Offset = "0x1BEC1AC", VA = "0x1BEC1AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F6E")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000141")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x1C15878", Offset = "0x1C15878", VA = "0x1C15878", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000142")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x1C15880", Offset = "0x1C15880", VA = "0x1C15880", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000143")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x1C15888", Offset = "0x1C15888", VA = "0x1C15888", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000144")]
		public override bool EnableState
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x1C15890", Offset = "0x1C15890", VA = "0x1C15890", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x1C158BC", Offset = "0x1C158BC", VA = "0x1C158BC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x1C158F8", Offset = "0x1C158F8", VA = "0x1C158F8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x1C15998", Offset = "0x1C15998", VA = "0x1C15998")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841A74", Offset = "0x841A74")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x1C15A04", Offset = "0x1C15A04", VA = "0x1C15A04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x1C15E94", Offset = "0x1C15E94", VA = "0x1C15E94")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1C16020", Offset = "0x1C16020", VA = "0x1C16020")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1C16114", Offset = "0x1C16114", VA = "0x1C16114", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x1C1640C", Offset = "0x1C1640C", VA = "0x1C1640C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1C16410", Offset = "0x1C16410", VA = "0x1C16410", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1C16414", Offset = "0x1C16414", VA = "0x1C16414")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C4B8", Offset = "0x83C4B8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C4C8", Offset = "0x83C4C8")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C4D8", Offset = "0x83C4D8")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000147")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x1C1642C", Offset = "0x1C1642C", VA = "0x1C1642C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841B24", Offset = "0x841B24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x1C16434", Offset = "0x1C16434", VA = "0x1C16434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841B34", Offset = "0x841B34")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public bool EnableState
		{
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x1C1643C", Offset = "0x1C1643C", VA = "0x1C1643C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x1C16458", Offset = "0x1C16458", VA = "0x1C16458", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x1C16478", Offset = "0x1C16478", VA = "0x1C16478", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841B44", Offset = "0x841B44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x1C16480", Offset = "0x1C16480", VA = "0x1C16480", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841B54", Offset = "0x841B54")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public float SphereRadius
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x1C1648C", Offset = "0x1C1648C", VA = "0x1C1648C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841B64", Offset = "0x841B64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x1C16494", Offset = "0x1C16494", VA = "0x1C16494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841B74", Offset = "0x841B74")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1C1649C", Offset = "0x1C1649C", VA = "0x1C1649C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x1C164E4", Offset = "0x1C164E4", VA = "0x1C164E4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x1C164E8", Offset = "0x1C164E8", VA = "0x1C164E8")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200029E")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000F81")]
		None = 0,
		[Token(Token = "0x4000F82")]
		Ray = 1,
		[Token(Token = "0x4000F83")]
		Poke = 4,
		[Token(Token = "0x4000F84")]
		All = -1
	}
	[Token(Token = "0x200029F")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000F86")]
		Inactive,
		[Token(Token = "0x4000F87")]
		PrimaryInputDown,
		[Token(Token = "0x4000F88")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000F89")]
		PrimaryInputUp
	}
	[Token(Token = "0x20002A0")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xA18D70", Offset = "0xA18D70", VA = "0xA18D70")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C4E8", Offset = "0x83C4E8")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C4F8", Offset = "0x83C4F8")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C508", Offset = "0x83C508")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700014B")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0xA19524", Offset = "0xA19524", VA = "0xA19524")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0xA1952C", Offset = "0xA1952C", VA = "0xA1952C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841B84", Offset = "0x841B84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0xA19534", Offset = "0xA19534", VA = "0xA19534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841B94", Offset = "0x841B94")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000F08")]
			get;
		}

		[Token(Token = "0x1700014E")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000F09")]
			get;
		}

		[Token(Token = "0x1700014F")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000F0A")]
			get;
		}

		[Token(Token = "0x17000150")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0xA19540", Offset = "0xA19540", VA = "0xA19540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841BA4", Offset = "0x841BA4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0xA1954C", Offset = "0xA1954C", VA = "0xA1954C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841BB4", Offset = "0x841BB4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0xA19558", Offset = "0xA19558", VA = "0xA19558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841BC4", Offset = "0x841BC4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0xA19564", Offset = "0xA19564", VA = "0xA19564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841BD4", Offset = "0x841BD4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000F13")]
			get;
			[Token(Token = "0x6000F14")]
			set;
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xA19570", Offset = "0xA19570", VA = "0xA19570")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000F10")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000F11")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000F12")]
		public abstract void DeFocus();

		[Token(Token = "0x6000F15")]
		public abstract void Initialize();

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xA19578", Offset = "0xA19578", VA = "0xA19578")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xA195C4", Offset = "0xA195C4", VA = "0xA195C4")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xA19618", Offset = "0xA19618", VA = "0xA19618", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xA198AC", Offset = "0xA198AC", VA = "0xA198AC", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xA1A028", Offset = "0xA1A028", VA = "0xA1A028")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000153")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000F1B")]
			get;
		}

		[Token(Token = "0x17000154")]
		bool EnableState
		{
			[Token(Token = "0x6000F1D")]
			get;
			[Token(Token = "0x6000F1E")]
			set;
		}

		[Token(Token = "0x17000155")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000F1F")]
			get;
			[Token(Token = "0x6000F20")]
			set;
		}

		[Token(Token = "0x6000F1C")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20002A3")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002A4")]
		private enum PinchState
		{
			[Token(Token = "0x4000F9A")]
			None,
			[Token(Token = "0x4000F9B")]
			PinchDown,
			[Token(Token = "0x4000F9C")]
			PinchStay,
			[Token(Token = "0x4000F9D")]
			PinchUp
		}

		[Token(Token = "0x4000F96")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000156")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x99A134", Offset = "0x99A134", VA = "0x99A134")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000157")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x99A1BC", Offset = "0x99A1BC", VA = "0x99A1BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000158")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x99A244", Offset = "0x99A244", VA = "0x99A244")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x99A2CC", Offset = "0x99A2CC", VA = "0x99A2CC")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x99A2F8", Offset = "0x99A2F8", VA = "0x99A2F8")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000F9E")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000F9F")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000FA0")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000FA1")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000FA2")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83C528", Offset = "0x83C528")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000159")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x9A57B8", Offset = "0x9A57B8", VA = "0x9A57B8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700015A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x9A57C0", Offset = "0x9A57C0", VA = "0x9A57C0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700015B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x9A5828", Offset = "0x9A5828", VA = "0x9A5828", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015C")]
		public override bool EnableState
		{
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x9A5830", Offset = "0x9A5830", VA = "0x9A5830", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x9A5874", Offset = "0x9A5874", VA = "0x9A5874", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x9A58E8", Offset = "0x9A58E8", VA = "0x9A58E8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x9A5948", Offset = "0x9A5948", VA = "0x9A5948")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x9A59EC", Offset = "0x9A59EC", VA = "0x9A59EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x9A5CA4", Offset = "0x9A5CA4", VA = "0x9A5CA4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x9A5D2C", Offset = "0x9A5D2C", VA = "0x9A5D2C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x9A60D4", Offset = "0x9A60D4", VA = "0x9A60D4")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x9A61E4", Offset = "0x9A61E4", VA = "0x9A61E4")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x9A6308", Offset = "0x9A6308", VA = "0x9A6308")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x9A660C", Offset = "0x9A660C", VA = "0x9A660C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x9A69A0", Offset = "0x9A69A0", VA = "0x9A69A0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x9A6A70", Offset = "0x9A6A70", VA = "0x9A6A70", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x9A6AA4", Offset = "0x9A6AA4", VA = "0x9A6AA4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000FAE")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000FAF")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C59C", Offset = "0x83C59C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700015D")]
		public bool EnableState
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x9A5858", Offset = "0x9A5858", VA = "0x9A5858", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x9A5890", Offset = "0x9A5890", VA = "0x9A5890", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x9A6B74", Offset = "0x9A6B74", VA = "0x9A6B74", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x9A5C68", Offset = "0x9A5C68", VA = "0x9A5C68", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x9A6DB8", Offset = "0x9A6DB8", VA = "0x9A6DB8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841BE4", Offset = "0x841BE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x9A6DC0", Offset = "0x9A6DC0", VA = "0x9A6DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841BF4", Offset = "0x841BF4")]
			set
			{
			}
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x9A6B7C", Offset = "0x9A6B7C", VA = "0x9A6B7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x9A69D4", Offset = "0x9A69D4", VA = "0x9A69D4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x9A6DC8", Offset = "0x9A6DC8", VA = "0x9A6DC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x9A703C", Offset = "0x9A703C", VA = "0x9A703C")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x9A712C", Offset = "0x9A712C", VA = "0x9A712C")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000160")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0xBC53AC", Offset = "0xBC53AC", VA = "0xBC53AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0xBC53B4", Offset = "0xBC53B4", VA = "0xBC53B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0xBC543C", Offset = "0xBC543C", VA = "0xBC543C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0xBC5444", Offset = "0xBC5444", VA = "0xBC5444")]
			set
			{
			}
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xBC54B0", Offset = "0xBC54B0", VA = "0xBC54B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xBC5764", Offset = "0xBC5764", VA = "0xBC5764")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xBC5774", Offset = "0xBC5774", VA = "0xBC5774")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xBC5784", Offset = "0xBC5784", VA = "0xBC5784")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xBB7F44", Offset = "0xBB7F44", VA = "0xBB7F44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xBB7F48", Offset = "0xBB7F48", VA = "0xBB7F48")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xBB7F80", Offset = "0xBB7F80", VA = "0xBB7F80")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xBB7FB8", Offset = "0xBB7FB8", VA = "0xBB7FB8")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xBB7FF0", Offset = "0xBB7FF0", VA = "0xBB7FF0")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xBB8028", Offset = "0xBB8028", VA = "0xBB8028")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xBB8060", Offset = "0xBB8060", VA = "0xBB8060")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xBB8098", Offset = "0xBB8098", VA = "0xBB8098")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xBB810C", Offset = "0xBB810C", VA = "0xBB810C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xBB817C", Offset = "0xBB817C", VA = "0xBB817C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xBBB4F0", Offset = "0xBBB4F0", VA = "0xBBB4F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xBBB4F4", Offset = "0xBBB4F4", VA = "0xBBB4F4")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xBB8140", Offset = "0xBB8140", VA = "0xBB8140")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xBBB534", Offset = "0xBBB534", VA = "0xBBB534")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836884", Offset = "0x836884")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000162")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F60")]
				[Address(RVA = "0x1BF3DB0", Offset = "0x1BF3DB0", VA = "0x1BF3DB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000163")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F62")]
				[Address(RVA = "0x1BF3DF8", Offset = "0x1BF3DF8", VA = "0x1BF3DF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1BF3BD4", Offset = "0x1BF3BD4", VA = "0x1BF3BD4")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x1BF3C00", Offset = "0x1BF3C00", VA = "0x1BF3C00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x1BF3C04", Offset = "0x1BF3C04", VA = "0x1BF3C04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x1BF3DB8", Offset = "0x1BF3DB8", VA = "0x1BF3DB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FBF")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000FC0")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xBF89C0", Offset = "0xBF89C0", VA = "0xBF89C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xBF8A60", Offset = "0xBF8A60", VA = "0xBF8A60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xBF8C94", Offset = "0xBF8C94", VA = "0xBF8C94")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xBF8C28", Offset = "0xBF8C28", VA = "0xBF8C28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841C04", Offset = "0x841C04")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xBF8CE0", Offset = "0xBF8CE0", VA = "0xBF8CE0")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002AD")]
		public enum SelectionState
		{
			[Token(Token = "0x4000FD6")]
			Off,
			[Token(Token = "0x4000FD7")]
			Selected,
			[Token(Token = "0x4000FD8")]
			Highlighted
		}

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000164")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0xB14B44", Offset = "0xB14B44", VA = "0xB14B44")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0xB14B4C", Offset = "0xB14B4C", VA = "0xB14B4C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xB14CD0", Offset = "0xB14CD0", VA = "0xB14CD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xB14E98", Offset = "0xB14E98", VA = "0xB14E98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xB14BD4", Offset = "0xB14BD4", VA = "0xB14BD4")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xB14F84", Offset = "0xB14F84", VA = "0xB14F84")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002AF")]
		public enum SegmentType
		{
			[Token(Token = "0x4000FE7")]
			Straight,
			[Token(Token = "0x4000FE8")]
			LeftTurn,
			[Token(Token = "0x4000FE9")]
			RightTurn,
			[Token(Token = "0x4000FEA")]
			Switch
		}

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000FDF")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000FE0")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C67C", Offset = "0x83C67C")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000165")]
		public float StartDistance
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0xDA7BAC", Offset = "0xDA7BAC", VA = "0xDA7BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841CB4", Offset = "0x841CB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0xDA7BB4", Offset = "0xDA7BB4", VA = "0xDA7BB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841CC4", Offset = "0x841CC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public float GridSize
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0xDA7BBC", Offset = "0xDA7BBC", VA = "0xDA7BBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0xDA7BC4", Offset = "0xDA7BC4", VA = "0xDA7BC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public int SubDivCount
		{
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0xDA7BCC", Offset = "0xDA7BCC", VA = "0xDA7BCC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0xDA7BD4", Offset = "0xDA7BD4", VA = "0xDA7BD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public SegmentType Type
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0xDA7BDC", Offset = "0xDA7BDC", VA = "0xDA7BDC")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000169")]
		public Pose EndPose
		{
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0xDA7BE4", Offset = "0xDA7BE4", VA = "0xDA7BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		public float Radius
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0xDA7F40", Offset = "0xDA7F40", VA = "0xDA7F40")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016B")]
		public float SegmentLength
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0xDA7C4C", Offset = "0xDA7C4C", VA = "0xDA7C4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xDA7F50", Offset = "0xDA7F50", VA = "0xDA7F50")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xDA7F68", Offset = "0xDA7F68", VA = "0xDA7F68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xDA7C8C", Offset = "0xDA7C8C", VA = "0xDA7C8C")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xDA7F6C", Offset = "0xDA7F6C", VA = "0xDA7F6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xDA7F70", Offset = "0xDA7F70", VA = "0xDA7F70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xDA7FD8", Offset = "0xDA7FD8", VA = "0xDA7FD8")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xDA88A0", Offset = "0xDA88A0", VA = "0xDA88A0")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xDA8B2C", Offset = "0xDA8B2C", VA = "0xDA8B2C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836894", Offset = "0x836894")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700016C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F8A")]
				[Address(RVA = "0x1BF8994", Offset = "0x1BF8994", VA = "0x1BF8994", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F8C")]
				[Address(RVA = "0x1BF89DC", Offset = "0x1BF89DC", VA = "0x1BF89DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x1BF8800", Offset = "0x1BF8800", VA = "0x1BF8800")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x1BF882C", Offset = "0x1BF882C", VA = "0x1BF882C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x1BF8830", Offset = "0x1BF8830", VA = "0x1BF8830", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x1BF899C", Offset = "0x1BF899C", VA = "0x1BF899C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FEB")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000FEC")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xDA9870", Offset = "0xDA9870", VA = "0xDA9870")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xDA9918", Offset = "0xDA9918", VA = "0xDA9918")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xDA99C8", Offset = "0xDA99C8", VA = "0xDA99C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xDA9B40", Offset = "0xDA9B40", VA = "0xDA9B40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xDA9D08", Offset = "0xDA9D08", VA = "0xDA9D08")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xDA9DF0", Offset = "0xDA9DF0", VA = "0xDA9DF0")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xDA9FF4", Offset = "0xDA9FF4", VA = "0xDA9FF4")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xDA9F04", Offset = "0xDA9F04", VA = "0xDA9F04")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xDA9F18", Offset = "0xDA9F18", VA = "0xDA9F18")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xDAA04C", Offset = "0xDAA04C", VA = "0xDAA04C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841CD4", Offset = "0x841CD4")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xDAA0B8", Offset = "0xDAA0B8", VA = "0xDAA0B8")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700016E")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0xDAA168", Offset = "0xDAA168", VA = "0xDAA168")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xDAA178", Offset = "0xDAA178", VA = "0xDAA178", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xDAA180", Offset = "0xDAA180", VA = "0xDAA180", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xDAA4C4", Offset = "0xDAA4C4", VA = "0xDAA4C4")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001004")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001005")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C77C", Offset = "0x83C77C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700016F")]
		public float Distance
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xDAA5BC", Offset = "0xDAA5BC", VA = "0xDAA5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841D84", Offset = "0x841D84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xDAA5C4", Offset = "0xDAA5C4", VA = "0xDAA5C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841D94", Offset = "0x841D94")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public float Scale
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xDAA5CC", Offset = "0xDAA5CC", VA = "0xDAA5CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xDAA5D4", Offset = "0xDAA5D4", VA = "0xDAA5D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xDAA17C", Offset = "0xDAA17C", VA = "0xDAA17C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xDAA5DC", Offset = "0xDAA5DC", VA = "0xDAA5DC")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xDAA1C8", Offset = "0xDAA1C8", VA = "0xDAA1C8")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xDAA3EC", Offset = "0xDAA3EC", VA = "0xDAA3EC")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000F99")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xDAA530", Offset = "0xDAA530", VA = "0xDAA530")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8368A4", Offset = "0x8368A4")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x400101C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x400101D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000171")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FA8")]
				[Address(RVA = "0x1BF8C3C", Offset = "0x1BF8C3C", VA = "0x1BF8C3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000172")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FAA")]
				[Address(RVA = "0x1BF8C84", Offset = "0x1BF8C84", VA = "0x1BF8C84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x1BF89E4", Offset = "0x1BF89E4", VA = "0x1BF89E4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x1BF8A10", Offset = "0x1BF8A10", VA = "0x1BF8A10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x1BF8A14", Offset = "0x1BF8A14", VA = "0x1BF8A14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x1BF8C44", Offset = "0x1BF8C44", VA = "0x1BF8C44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xDAA77C", Offset = "0xDAA77C", VA = "0xDAA77C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xDAA7C8", Offset = "0xDAA7C8", VA = "0xDAA7C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xDAA8D0", Offset = "0xDAA8D0", VA = "0xDAA8D0")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xDAAA30", Offset = "0xDAAA30", VA = "0xDAAA30")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xDAA92C", Offset = "0xDAA92C", VA = "0xDAA92C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xDAAB0C", Offset = "0xDAAB0C", VA = "0xDAAB0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841DA4", Offset = "0x841DA4")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xDAAB88", Offset = "0xDAAB88", VA = "0xDAAB88")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xDAAC34", Offset = "0xDAAC34", VA = "0xDAAC34")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xDAAC94", Offset = "0xDAAC94", VA = "0xDAAC94")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20002B7")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001042")]
			Start,
			[Token(Token = "0x4001043")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001044")]
			Stop
		}

		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8368B4", Offset = "0x8368B4")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000173")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FBD")]
				[Address(RVA = "0x1BF8EE4", Offset = "0x1BF8EE4", VA = "0x1BF8EE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000174")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FBF")]
				[Address(RVA = "0x1BF8F2C", Offset = "0x1BF8F2C", VA = "0x1BF8F2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x1BF8C8C", Offset = "0x1BF8C8C", VA = "0x1BF8C8C")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x1BF8CB8", Offset = "0x1BF8CB8", VA = "0x1BF8CB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x1BF8CBC", Offset = "0x1BF8CBC", VA = "0x1BF8CBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x1BF8EEC", Offset = "0x1BF8EEC", VA = "0x1BF8EEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001024")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001025")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001026")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001027")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83C7DC", Offset = "0x83C7DC")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xDAACF0", Offset = "0xDAACF0", VA = "0xDAACF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xDAAE44", Offset = "0xDAAE44", VA = "0xDAAE44")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xDAAE50", Offset = "0xDAAE50", VA = "0xDAAE50", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xDAAFA0", Offset = "0xDAAFA0", VA = "0xDAAFA0")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xDAADC4", Offset = "0xDAADC4", VA = "0xDAADC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841E54", Offset = "0x841E54")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xDAAFEC", Offset = "0xDAAFEC", VA = "0xDAAFEC")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xDAAF3C", Offset = "0xDAAF3C", VA = "0xDAAF3C")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xDAB208", Offset = "0xDAB208", VA = "0xDAB208")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xDAB344", Offset = "0xDAB344", VA = "0xDAB344")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xDAB274", Offset = "0xDAB274", VA = "0xDAB274")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xDAB3B0", Offset = "0xDAB3B0", VA = "0xDAB3B0")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xDAB3D0", Offset = "0xDAB3D0", VA = "0xDAB3D0")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xDAB45C", Offset = "0xDAB45C", VA = "0xDAB45C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xDAB514", Offset = "0xDAB514", VA = "0xDAB514")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xDAB524", Offset = "0xDAB524", VA = "0xDAB524")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000175")]
		public float TrackLength
		{
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0xDAB58C", Offset = "0xDAB58C", VA = "0xDAB58C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0xDAB594", Offset = "0xDAB594", VA = "0xDAB594")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xDAB59C", Offset = "0xDAB59C", VA = "0xDAB59C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xDAA65C", Offset = "0xDAA65C", VA = "0xDAA65C")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xDAB5A0", Offset = "0xDAB5A0", VA = "0xDAB5A0")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xDAB7A0", Offset = "0xDAB7A0", VA = "0xDAB7A0")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xDAB89C", Offset = "0xDAB89C", VA = "0xDAB89C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class Pose
	{
		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x9A13CC", Offset = "0x9A13CC", VA = "0x9A13CC")]
		public Pose()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x9A1410", Offset = "0x9A1410", VA = "0x9A1410")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20002BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8368C4", Offset = "0x8368C4")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000177")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FD5")]
				[Address(RVA = "0x1BF9E78", Offset = "0x1BF9E78", VA = "0x1BF9E78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000178")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FD7")]
				[Address(RVA = "0x1BF9EC0", Offset = "0x1BF9EC0", VA = "0x1BF9EC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x1BF9CD0", Offset = "0x1BF9CD0", VA = "0x1BF9CD0")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x1BF9CFC", Offset = "0x1BF9CFC", VA = "0x1BF9CFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x1BF9D00", Offset = "0x1BF9D00", VA = "0x1BF9D00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x1BF9E80", Offset = "0x1BF9E80", VA = "0x1BF9E80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8368D4", Offset = "0x8368D4")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400106B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400106C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400106D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000179")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FDB")]
				[Address(RVA = "0x1BF9FC4", Offset = "0x1BF9FC4", VA = "0x1BF9FC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FDD")]
				[Address(RVA = "0x1BFA00C", Offset = "0x1BFA00C", VA = "0x1BFA00C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x1BF9EC8", Offset = "0x1BF9EC8", VA = "0x1BF9EC8")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x1BF9EF4", Offset = "0x1BF9EF4", VA = "0x1BF9EF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x1BF9EF8", Offset = "0x1BF9EF8", VA = "0x1BF9EF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x1BF9FCC", Offset = "0x1BF9FCC", VA = "0x1BF9FCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001057")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C9C4", Offset = "0x83C9C4")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000176")]
		public bool IsMoving
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0xDB2B70", Offset = "0xDB2B70", VA = "0xDB2B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841F04", Offset = "0x841F04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0xDB2B78", Offset = "0xDB2B78", VA = "0xDB2B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841F14", Offset = "0x841F14")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xDB2B84", Offset = "0xDB2B84", VA = "0xDB2B84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xDB2BC0", Offset = "0xDB2BC0", VA = "0xDB2BC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xDB2CA4", Offset = "0xDB2CA4", VA = "0xDB2CA4")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xDB2D0C", Offset = "0xDB2D0C", VA = "0xDB2D0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841F24", Offset = "0x841F24")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xDB2D88", Offset = "0xDB2D88", VA = "0xDB2D88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x841F84", Offset = "0x841F84")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xDB2E18", Offset = "0xDB2E18", VA = "0xDB2E18")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xDB2E84", Offset = "0xDB2E84", VA = "0xDB2E84")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xDB2E8C", Offset = "0xDB2E8C", VA = "0xDB2E8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xDB2EF0", Offset = "0xDB2EF0", VA = "0xDB2EF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xDB2FD4", Offset = "0xDB2FD4", VA = "0xDB2FD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xDB310C", Offset = "0xDB310C", VA = "0xDB310C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xDB3188", Offset = "0xDB3188", VA = "0xDB3188")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xDB3264", Offset = "0xDB3264", VA = "0xDB3264")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001074")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001075")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001076")]
		EUDT_None,
		[Token(Token = "0x4001077")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20002C0")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8368E4", Offset = "0x8368E4")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700017B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF7")]
				[Address(RVA = "0x1BF1F80", Offset = "0x1BF1F80", VA = "0x1BF1F80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FF9")]
				[Address(RVA = "0x1BF1FC8", Offset = "0x1BF1FC8", VA = "0x1BF1FC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x1BF1D6C", Offset = "0x1BF1D6C", VA = "0x1BF1D6C")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0x1BF1D98", Offset = "0x1BF1D98", VA = "0x1BF1D98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x1BF1D9C", Offset = "0x1BF1D9C", VA = "0x1BF1D9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x1BF1F88", Offset = "0x1BF1F88", VA = "0x1BF1F88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001079")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400107A")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400107B")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83CA04", Offset = "0x83CA04")]
		public GameObject mainCamera;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83CA3C", Offset = "0x83CA3C")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xB87A88", Offset = "0xB87A88", VA = "0xB87A88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xB882C0", Offset = "0xB882C0", VA = "0xB882C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xB88408", Offset = "0xB88408", VA = "0xB88408")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xB88538", Offset = "0xB88538", VA = "0xB88538")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xB88668", Offset = "0xB88668", VA = "0xB88668")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xB883DC", Offset = "0xB883DC", VA = "0xB883DC")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xB88748", Offset = "0xB88748", VA = "0xB88748")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x842084", Offset = "0x842084")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xB887B4", Offset = "0xB887B4", VA = "0xB887B4")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xB87ED8", Offset = "0xB87ED8", VA = "0xB87ED8")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xB88908", Offset = "0xB88908", VA = "0xB88908")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xB887E8", Offset = "0xB887E8", VA = "0xB887E8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xB88C20", Offset = "0xB88C20", VA = "0xB88C20")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xB88D10", Offset = "0xB88D10", VA = "0xB88D10")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xB88D94", Offset = "0xB88D94", VA = "0xB88D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8420E4", Offset = "0x8420E4")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xB88DEC", Offset = "0xB88DEC", VA = "0xB88DEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8420F4", Offset = "0x8420F4")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xB88E44", Offset = "0xB88E44", VA = "0xB88E44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842104", Offset = "0x842104")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8368F4", Offset = "0x8368F4")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836954", Offset = "0x836954")]
		private sealed class <>c
		{
			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001007")]
			[Address(RVA = "0x1BEEF30", Offset = "0x1BEEF30", VA = "0x1BEEF30")]
			public <>c()
			{
			}

			[Token(Token = "0x6001008")]
			[Address(RVA = "0x1BEEF38", Offset = "0x1BEEF38", VA = "0x1BEEF38")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001093")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001094")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001095")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001096")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001097")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001098")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001099")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400109A")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400109B")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400109C")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400109D")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x1C1F608", Offset = "0x1C1F608", VA = "0x1C1F608")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x1C1F65C", Offset = "0x1C1F65C", VA = "0x1C1F65C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x1C1FB34", Offset = "0x1C1FB34", VA = "0x1C1FB34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x1C1FC8C", Offset = "0x1C1FC8C", VA = "0x1C1FC8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x1C1FDF0", Offset = "0x1C1FDF0", VA = "0x1C1FDF0")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x1C200F8", Offset = "0x1C200F8", VA = "0x1C200F8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x1C201F0", Offset = "0x1C201F0", VA = "0x1C201F0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x1C20350", Offset = "0x1C20350", VA = "0x1C20350")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x1C1FE88", Offset = "0x1C1FE88", VA = "0x1C1FE88")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x1C1FEDC", Offset = "0x1C1FEDC", VA = "0x1C1FEDC")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x1C1F9D8", Offset = "0x1C1F9D8", VA = "0x1C1F9D8")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x1C2048C", Offset = "0x1C2048C", VA = "0x1C2048C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public enum HandPoseId
	{
		[Token(Token = "0x40010B2")]
		Default,
		[Token(Token = "0x40010B3")]
		Generic,
		[Token(Token = "0x40010B4")]
		PingPongBall,
		[Token(Token = "0x40010B5")]
		Controller
	}
	[Token(Token = "0x20002C5")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700017D")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x1C2553C", Offset = "0x1C2553C", VA = "0x1C2553C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017E")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0x1C25544", Offset = "0x1C25544", VA = "0x1C25544")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017F")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x1C2554C", Offset = "0x1C2554C", VA = "0x1C2554C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x1C25554", Offset = "0x1C25554", VA = "0x1C25554")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xDA0BE4", Offset = "0xDA0BE4", VA = "0xDA0BE4")]
		private void Update()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xDA0F38", Offset = "0xDA0F38", VA = "0xDA0F38")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xDA0F94", Offset = "0xDA0F94", VA = "0xDA0F94")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xDA0FD8", Offset = "0xDA0FD8", VA = "0xDA0FD8")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20002C7")]
	public static class AvatarLogger
	{
		[Token(Token = "0x40010BC")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x40010BD")]
		public const string Tab = "    ";

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xB1FAD4", Offset = "0xB1FAD4", VA = "0xB1FAD4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x842164", Offset = "0x842164")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x842164", Offset = "0x842164")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xB1FB64", Offset = "0xB1FB64", VA = "0xB1FB64")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8421C4", Offset = "0x8421C4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8421C4", Offset = "0x8421C4")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xB1FC04", Offset = "0xB1FC04", VA = "0xB1FC04")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x842224", Offset = "0x842224")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x842224", Offset = "0x842224")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xB1FC94", Offset = "0xB1FC94", VA = "0xB1FC94")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x842284", Offset = "0x842284")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x842284", Offset = "0x842284")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xB1FD24", Offset = "0xB1FD24", VA = "0xB1FD24")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8422E4", Offset = "0x8422E4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8422E4", Offset = "0x8422E4")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class CAPI
	{
		[Token(Token = "0x20002C9")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20002CA")]
		public enum Result
		{
			[Token(Token = "0x40010C9")]
			Success = 0,
			[Token(Token = "0x40010CA")]
			Failure = -1000,
			[Token(Token = "0x40010CB")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40010CC")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40010CD")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40010CE")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40010CF")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x40010D0")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x40010D1")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20002CB")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x1BEA398", Offset = "0x1BEA398", VA = "0x1BEA398")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x40010BE")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x40010C6")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001016")]
		[Address(RVA = "0xB241F8", Offset = "0xB241F8", VA = "0xB241F8")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xB24288", Offset = "0xB24288", VA = "0xB24288")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xB244A0", Offset = "0xB244A0", VA = "0xB244A0")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001019")]
		[Address(RVA = "0xB24588", Offset = "0xB24588", VA = "0xB24588")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x600101A")]
		[Address(RVA = "0xB245F8", Offset = "0xB245F8", VA = "0xB245F8")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x600101B")]
		[Address(RVA = "0xB2466C", Offset = "0xB2466C", VA = "0xB2466C")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xB246EC", Offset = "0xB246EC", VA = "0xB246EC")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x600101D")]
		[Address(RVA = "0xB24830", Offset = "0xB24830", VA = "0xB24830")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xB248B0", Offset = "0xB248B0", VA = "0xB248B0")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x600101F")]
		[Address(RVA = "0xB249F4", Offset = "0xB249F4", VA = "0xB249F4")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001020")]
		[Address(RVA = "0xB24A74", Offset = "0xB24A74", VA = "0xB24A74")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001021")]
		[Address(RVA = "0xB24AF4", Offset = "0xB24AF4", VA = "0xB24AF4")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001022")]
		[Address(RVA = "0xB24B74", Offset = "0xB24B74", VA = "0xB24B74")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001023")]
		[Address(RVA = "0xB24BF4", Offset = "0xB24BF4", VA = "0xB24BF4")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001024")]
		[Address(RVA = "0xB24C84", Offset = "0xB24C84", VA = "0xB24C84")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001025")]
		[Address(RVA = "0xB24D14", Offset = "0xB24D14", VA = "0xB24D14")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001026")]
		[Address(RVA = "0xB24DA4", Offset = "0xB24DA4", VA = "0xB24DA4")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001027")]
		[Address(RVA = "0xB24E24", Offset = "0xB24E24", VA = "0xB24E24")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001028")]
		[Address(RVA = "0xB24EA4", Offset = "0xB24EA4", VA = "0xB24EA4")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001029")]
		[Address(RVA = "0xB24F34", Offset = "0xB24F34", VA = "0xB24F34")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x600102A")]
		[Address(RVA = "0xB24FC4", Offset = "0xB24FC4", VA = "0xB24FC4")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x600102B")]
		[Address(RVA = "0xB25054", Offset = "0xB25054", VA = "0xB25054")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600102C")]
		[Address(RVA = "0xB250D4", Offset = "0xB250D4", VA = "0xB250D4")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xB25174", Offset = "0xB25174", VA = "0xB25174")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600102E")]
		[Address(RVA = "0xB251F0", Offset = "0xB251F0", VA = "0xB251F0")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x600102F")]
		[Address(RVA = "0xB25290", Offset = "0xB25290", VA = "0xB25290")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001030")]
		[Address(RVA = "0xB25350", Offset = "0xB25350", VA = "0xB25350")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001031")]
		[Address(RVA = "0xB25420", Offset = "0xB25420", VA = "0xB25420")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001032")]
		[Address(RVA = "0xB254B0", Offset = "0xB254B0", VA = "0xB254B0")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001033")]
		[Address(RVA = "0xB25540", Offset = "0xB25540", VA = "0xB25540")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001034")]
		[Address(RVA = "0xB255D0", Offset = "0xB255D0", VA = "0xB255D0")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001035")]
		[Address(RVA = "0xB25660", Offset = "0xB25660", VA = "0xB25660")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001036")]
		[Address(RVA = "0xB256F0", Offset = "0xB256F0", VA = "0xB256F0")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xB25770", Offset = "0xB25770", VA = "0xB25770")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xB2588C", Offset = "0xB2588C", VA = "0xB2588C")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001039")]
		[Address(RVA = "0xB257FC", Offset = "0xB257FC", VA = "0xB257FC")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xB25AA0", Offset = "0xB25AA0", VA = "0xB25AA0")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600103B")]
		[Address(RVA = "0xB25C10", Offset = "0xB25C10", VA = "0xB25C10")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x600103C")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xB25C90", Offset = "0xB25C90", VA = "0xB25C90")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600103E")]
		[Address(RVA = "0xB25F38", Offset = "0xB25F38", VA = "0xB25F38")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xB25FB8", Offset = "0xB25FB8", VA = "0xB25FB8")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001040")]
		[Address(RVA = "0xB26128", Offset = "0xB26128", VA = "0xB26128")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xB261A8", Offset = "0xB261A8", VA = "0xB261A8")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001042")]
		[Address(RVA = "0xB26318", Offset = "0xB26318", VA = "0xB26318")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xB26398", Offset = "0xB26398", VA = "0xB26398")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001044")]
		[Address(RVA = "0xB26508", Offset = "0xB26508", VA = "0xB26508")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xB26588", Offset = "0xB26588", VA = "0xB26588")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001046")]
		[Address(RVA = "0xB266F8", Offset = "0xB266F8", VA = "0xB266F8")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001047")]
		[Address(RVA = "0xB26778", Offset = "0xB26778", VA = "0xB26778")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001048")]
		[Address(RVA = "0xB267F8", Offset = "0xB267F8", VA = "0xB267F8")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001049")]
		[Address(RVA = "0xB26890", Offset = "0xB26890", VA = "0xB26890")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xB26910", Offset = "0xB26910", VA = "0xB26910")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xB26AE8", Offset = "0xB26AE8", VA = "0xB26AE8")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x600104C")]
		[Address(RVA = "0xB26C40", Offset = "0xB26C40", VA = "0xB26C40")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600104D")]
		[Address(RVA = "0xB26A68", Offset = "0xB26A68", VA = "0xB26A68")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600104E")]
		[Address(RVA = "0xB26CC0", Offset = "0xB26CC0", VA = "0xB26CC0")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600104F")]
		[Address(RVA = "0xB26D40", Offset = "0xB26D40", VA = "0xB26D40")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001050")]
		[Address(RVA = "0xB26DD0", Offset = "0xB26DD0", VA = "0xB26DD0")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001051")]
		[Address(RVA = "0xB26E50", Offset = "0xB26E50", VA = "0xB26E50")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001052")]
		[Address(RVA = "0xB26EE0", Offset = "0xB26EE0", VA = "0xB26EE0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001053")]
		[Address(RVA = "0xB26F60", Offset = "0xB26F60", VA = "0xB26F60")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xB26FE0", Offset = "0xB26FE0", VA = "0xB26FE0")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001055")]
		[Address(RVA = "0xB2726C", Offset = "0xB2726C", VA = "0xB2726C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xB272FC", Offset = "0xB272FC", VA = "0xB272FC")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001057")]
		[Address(RVA = "0xB2752C", Offset = "0xB2752C", VA = "0xB2752C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xB275C4", Offset = "0xB275C4", VA = "0xB275C4")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001059")]
		[Address(RVA = "0xB27714", Offset = "0xB27714", VA = "0xB27714")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600105A")]
		[Address(RVA = "0xB27794", Offset = "0xB27794", VA = "0xB27794")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xB27814", Offset = "0xB27814", VA = "0xB27814")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x600105C")]
		[Address(RVA = "0xB27968", Offset = "0xB27968", VA = "0xB27968")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xB279E8", Offset = "0xB279E8", VA = "0xB279E8")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x600105E")]
		[Address(RVA = "0xB27B3C", Offset = "0xB27B3C", VA = "0xB27B3C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600105F")]
		[Address(RVA = "0xB27BBC", Offset = "0xB27BBC", VA = "0xB27BBC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001060")]
		[Address(RVA = "0xB27C4C", Offset = "0xB27C4C", VA = "0xB27C4C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001061")]
		[Address(RVA = "0xB27CDC", Offset = "0xB27CDC", VA = "0xB27CDC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001062")]
		[Address(RVA = "0xB27D6C", Offset = "0xB27D6C", VA = "0xB27D6C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001063")]
		[Address(RVA = "0xB27DEC", Offset = "0xB27DEC", VA = "0xB27DEC")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001064")]
		[Address(RVA = "0xB27E74", Offset = "0xB27E74", VA = "0xB27E74")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001065")]
		[Address(RVA = "0xB27EFC", Offset = "0xB27EFC", VA = "0xB27EFC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001066")]
		[Address(RVA = "0xB27F7C", Offset = "0xB27F7C", VA = "0xB27F7C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001067")]
		[Address(RVA = "0xB27FFC", Offset = "0xB27FFC", VA = "0xB27FFC")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001068")]
		[Address(RVA = "0xB280B0", Offset = "0xB280B0", VA = "0xB280B0")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001069")]
		[Address(RVA = "0xB28140", Offset = "0xB28140", VA = "0xB28140")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600106A")]
		[Address(RVA = "0xB281D0", Offset = "0xB281D0", VA = "0xB281D0")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600106B")]
		[Address(RVA = "0xB28250", Offset = "0xB28250", VA = "0xB28250")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600106C")]
		[Address(RVA = "0xB282D0", Offset = "0xB282D0", VA = "0xB282D0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600106D")]
		[Address(RVA = "0xB28350", Offset = "0xB28350", VA = "0xB28350")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600106E")]
		[Address(RVA = "0xB283E8", Offset = "0xB283E8", VA = "0xB283E8")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x600106F")]
		[Address(RVA = "0xB28478", Offset = "0xB28478", VA = "0xB28478")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001070")]
		[Address(RVA = "0xB28508", Offset = "0xB28508", VA = "0xB28508")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001071")]
		[Address(RVA = "0xB28598", Offset = "0xB28598", VA = "0xB28598")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001072")]
		[Address(RVA = "0xB28630", Offset = "0xB28630", VA = "0xB28630")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001073")]
		[Address(RVA = "0xB286C8", Offset = "0xB286C8", VA = "0xB286C8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001074")]
		[Address(RVA = "0xB28748", Offset = "0xB28748", VA = "0xB28748")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xB287C8", Offset = "0xB287C8", VA = "0xB287C8")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001076")]
		[Address(RVA = "0xB2891C", Offset = "0xB2891C", VA = "0xB2891C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xB2899C", Offset = "0xB2899C", VA = "0xB2899C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001078")]
		[Address(RVA = "0xB28AF0", Offset = "0xB28AF0", VA = "0xB28AF0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xB28B70", Offset = "0xB28B70", VA = "0xB28B70")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600107A")]
		[Address(RVA = "0xB28CAC", Offset = "0xB28CAC", VA = "0xB28CAC")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xB28D2C", Offset = "0xB28D2C", VA = "0xB28D2C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xB28F00", Offset = "0xB28F00", VA = "0xB28F00")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600107D")]
		[Address(RVA = "0xB291E0", Offset = "0xB291E0", VA = "0xB291E0")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600107E")]
		[Address(RVA = "0xB28E80", Offset = "0xB28E80", VA = "0xB28E80")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600107F")]
		[Address(RVA = "0xB29270", Offset = "0xB29270", VA = "0xB29270")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001080")]
		[Address(RVA = "0xB292F0", Offset = "0xB292F0", VA = "0xB292F0")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001081")]
		[Address(RVA = "0xB29380", Offset = "0xB29380", VA = "0xB29380")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001082")]
		[Address(RVA = "0xB29410", Offset = "0xB29410", VA = "0xB29410")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001083")]
		[Address(RVA = "0xB294A0", Offset = "0xB294A0", VA = "0xB294A0")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001084")]
		[Address(RVA = "0xB29540", Offset = "0xB29540", VA = "0xB29540")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001085")]
		[Address(RVA = "0xB295E0", Offset = "0xB295E0", VA = "0xB295E0")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001086")]
		[Address(RVA = "0xB29680", Offset = "0xB29680", VA = "0xB29680")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001087")]
		[Address(RVA = "0xB29700", Offset = "0xB29700", VA = "0xB29700")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001088")]
		[Address(RVA = "0xB29780", Offset = "0xB29780", VA = "0xB29780")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001089")]
		[Address(RVA = "0xB29800", Offset = "0xB29800", VA = "0xB29800")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600108A")]
		[Address(RVA = "0xB29880", Offset = "0xB29880", VA = "0xB29880")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600108B")]
		[Address(RVA = "0xB29900", Offset = "0xB29900", VA = "0xB29900")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600108C")]
		[Address(RVA = "0xB29A28", Offset = "0xB29A28", VA = "0xB29A28")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600108D")]
		[Address(RVA = "0xB29AC0", Offset = "0xB29AC0", VA = "0xB29AC0")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xB29B40", Offset = "0xB29B40", VA = "0xB29B40")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xB29BA0", Offset = "0xB29BA0", VA = "0xB29BA0")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001090")]
		[Address(RVA = "0xB29CE8", Offset = "0xB29CE8", VA = "0xB29CE8")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xB29D78", Offset = "0xB29D78", VA = "0xB29D78")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001092")]
		[Address(RVA = "0xB29ED0", Offset = "0xB29ED0", VA = "0xB29ED0")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001093")]
		[Address(RVA = "0xB29F60", Offset = "0xB29F60", VA = "0xB29F60")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xB2A000", Offset = "0xB2A000", VA = "0xB2A000")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001095")]
		[Address(RVA = "0xB2A3D0", Offset = "0xB2A3D0", VA = "0xB2A3D0")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001096")]
		[Address(RVA = "0xB2A450", Offset = "0xB2A450", VA = "0xB2A450")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xB2A4E8", Offset = "0xB2A4E8", VA = "0xB2A4E8")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001098")]
		[Address(RVA = "0xB2AD48", Offset = "0xB2AD48", VA = "0xB2AD48")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001099")]
		[Address(RVA = "0xB2ADC8", Offset = "0xB2ADC8", VA = "0xB2ADC8")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xB24194", Offset = "0xB24194", VA = "0xB24194")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x842344", Offset = "0x842344")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600109B")]
		[Address(RVA = "0xB2AE60", Offset = "0xB2AE60", VA = "0xB2AE60")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x600109C")]
		[Address(RVA = "0xB2AEE4", Offset = "0xB2AEE4", VA = "0xB2AEE4")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x600109D")]
		[Address(RVA = "0xB2AF64", Offset = "0xB2AF64", VA = "0xB2AF64")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600109E")]
		[Address(RVA = "0xB2AFE4", Offset = "0xB2AFE4", VA = "0xB2AFE4")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xB2B064", Offset = "0xB2B064", VA = "0xB2B064")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xB2BA28", Offset = "0xB2BA28", VA = "0xB2BA28")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xB2BAA8", Offset = "0xB2BAA8", VA = "0xB2BAA8")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xB2BEC8", Offset = "0xB2BEC8", VA = "0xB2BEC8")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xB2BE30", Offset = "0xB2BE30", VA = "0xB2BE30")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xB2BF3C", Offset = "0xB2BF3C", VA = "0xB2BF3C")]
		public CAPI()
		{
		}
	}
}
namespace Impact
{
	[Token(Token = "0x20002CC")]
	public struct ImpactCollisionWrapper : IImpactCollisionWrapper<ImpactContactPoint>
	{
		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CAF4", Offset = "0x83CAF4")]
		private int <ContactCount>k__BackingField;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CB04", Offset = "0x83CB04")]
		private PhysicsType <PhysicsType>k__BackingField;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Collision source3D;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Collision2D source2D;

		[Token(Token = "0x17000180")]
		public int ContactCount
		{
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xA0F038", Offset = "0xA0F038", VA = "0xA0F038", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8423A4", Offset = "0x8423A4")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xA0F040", Offset = "0xA0F040", VA = "0xA0F040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8423DC", Offset = "0x8423DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0xA0F048", Offset = "0xA0F048", VA = "0xA0F048", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8423EC", Offset = "0x8423EC")]
			readonly get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0xA0F050", Offset = "0xA0F050", VA = "0xA0F050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842424", Offset = "0x842424")]
			private set
			{
			}
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xA0ED58", Offset = "0xA0ED58", VA = "0xA0ED58")]
		public ImpactCollisionWrapper(Collision collision3D)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xA0EC18", Offset = "0xA0EC18", VA = "0xA0EC18")]
		public ImpactCollisionWrapper(Collision2D collision2D)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xA0F058", Offset = "0xA0F058", VA = "0xA0F058", Slot = "6")]
		public ImpactContactPoint GetContact(int index)
		{
			return default(ImpactContactPoint);
		}
	}
	[Token(Token = "0x20002CD")]
	public struct ImpactContactPoint : IImpactContactPoint
	{
		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CB14", Offset = "0x83CB14")]
		private Vector3 <Point>k__BackingField;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CB24", Offset = "0x83CB24")]
		private Vector3 <Normal>k__BackingField;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CB34", Offset = "0x83CB34")]
		private GameObject <ThisObject>k__BackingField;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CB44", Offset = "0x83CB44")]
		private GameObject <OtherObject>k__BackingField;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CB54", Offset = "0x83CB54")]
		private PhysicsType <PhysicsType>k__BackingField;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CB64", Offset = "0x83CB64")]
		private int <ThisPhysicsMaterialID>k__BackingField;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CB74", Offset = "0x83CB74")]
		private int <OtherPhysicsMaterialID>k__BackingField;

		[Token(Token = "0x17000182")]
		public Vector3 Point
		{
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0xA0F468", Offset = "0xA0F468", VA = "0xA0F468", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842434", Offset = "0x842434")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xA0F474", Offset = "0xA0F474", VA = "0xA0F474", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84246C", Offset = "0x84246C")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public Vector3 Normal
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xA0F480", Offset = "0xA0F480", VA = "0xA0F480", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84247C", Offset = "0x84247C")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xA0F48C", Offset = "0xA0F48C", VA = "0xA0F48C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8424B4", Offset = "0x8424B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public GameObject ThisObject
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xA0F498", Offset = "0xA0F498", VA = "0xA0F498", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8424C4", Offset = "0x8424C4")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xA0F4A0", Offset = "0xA0F4A0", VA = "0xA0F4A0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8424FC", Offset = "0x8424FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public GameObject OtherObject
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0xA0F4A8", Offset = "0xA0F4A8", VA = "0xA0F4A8", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84250C", Offset = "0x84250C")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xA0F4B0", Offset = "0xA0F4B0", VA = "0xA0F4B0", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842544", Offset = "0x842544")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0xA0F4B8", Offset = "0xA0F4B8", VA = "0xA0F4B8", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842554", Offset = "0x842554")]
			readonly get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xA0F4C0", Offset = "0xA0F4C0", VA = "0xA0F4C0", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84258C", Offset = "0x84258C")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public int ThisPhysicsMaterialID
		{
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0xA0F4C8", Offset = "0xA0F4C8", VA = "0xA0F4C8", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84259C", Offset = "0x84259C")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xA0F4D0", Offset = "0xA0F4D0", VA = "0xA0F4D0", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8425D4", Offset = "0x8425D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public int OtherPhysicsMaterialID
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0xA0F4D8", Offset = "0xA0F4D8", VA = "0xA0F4D8", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8425E4", Offset = "0x8425E4")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0xA0F4E0", Offset = "0xA0F4E0", VA = "0xA0F4E0", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84261C", Offset = "0x84261C")]
			set
			{
			}
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xA0F4E8", Offset = "0xA0F4E8", VA = "0xA0F4E8")]
		public ImpactContactPoint(IImpactContactPoint original)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xA0F11C", Offset = "0xA0F11C", VA = "0xA0F11C")]
		public ImpactContactPoint(ContactPoint contact3D)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xA0F2BC", Offset = "0xA0F2BC", VA = "0xA0F2BC")]
		public ImpactContactPoint(ContactPoint2D contact2D)
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public struct ImpactMaterialComposition
	{
		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IImpactMaterial Material;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float CompositionValue;

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xA12368", Offset = "0xA12368", VA = "0xA12368")]
		public ImpactMaterialComposition(IImpactMaterial material, float compositionValue)
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public struct ImpactCollisionSingleContactWrapper : IImpactCollisionWrapper<ImpactContactPoint>
	{
		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CB84", Offset = "0x83CB84")]
		private PhysicsType <PhysicsType>k__BackingField;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ImpactContactPoint contactPoint;

		[Token(Token = "0x17000189")]
		public int ContactCount
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0xA0EA94", Offset = "0xA0EA94", VA = "0xA0EA94", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018A")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0xA0EA9C", Offset = "0xA0EA9C", VA = "0xA0EA9C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84262C", Offset = "0x84262C")]
			readonly get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0xA0EAA4", Offset = "0xA0EAA4", VA = "0xA0EAA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842664", Offset = "0x842664")]
			private set
			{
			}
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xA0EAAC", Offset = "0xA0EAAC", VA = "0xA0EAAC")]
		public ImpactCollisionSingleContactWrapper(ImpactContactPoint contactPoint, PhysicsType physicsType)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xA0EAD0", Offset = "0xA0EAD0", VA = "0xA0EAD0", Slot = "6")]
		public ImpactContactPoint GetContact(int index)
		{
			return default(ImpactContactPoint);
		}
	}
	[Token(Token = "0x20002D0")]
	public class ImpactRigidbodyWrapper
	{
		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CB94", Offset = "0x83CB94")]
		private PhysicsType <PhysicsType>k__BackingField;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CBA4", Offset = "0x83CBA4")]
		private Rigidbody <Rigidbody3D>k__BackingField;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CBB4", Offset = "0x83CBB4")]
		private Rigidbody2D <Rigidbody2D>k__BackingField;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CBC4", Offset = "0x83CBC4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CBD4", Offset = "0x83CBD4")]
		private Vector3 <AngularVelocity>k__BackingField;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CBE4", Offset = "0x83CBE4")]
		private Vector3 <WorldCenterOfMass>k__BackingField;

		[Token(Token = "0x1700018B")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xA15D68", Offset = "0xA15D68", VA = "0xA15D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842674", Offset = "0x842674")]
			get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0xA15D70", Offset = "0xA15D70", VA = "0xA15D70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842684", Offset = "0x842684")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public Rigidbody Rigidbody3D
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0xA15D78", Offset = "0xA15D78", VA = "0xA15D78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842694", Offset = "0x842694")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0xA15D80", Offset = "0xA15D80", VA = "0xA15D80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8426A4", Offset = "0x8426A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public Rigidbody2D Rigidbody2D
		{
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0xA15D88", Offset = "0xA15D88", VA = "0xA15D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8426B4", Offset = "0x8426B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0xA15D90", Offset = "0xA15D90", VA = "0xA15D90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8426C4", Offset = "0x8426C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0xA15D98", Offset = "0xA15D98", VA = "0xA15D98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8426D4", Offset = "0x8426D4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xA15DA4", Offset = "0xA15DA4", VA = "0xA15DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8426E4", Offset = "0x8426E4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public Vector3 AngularVelocity
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0xA15DB0", Offset = "0xA15DB0", VA = "0xA15DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8426F4", Offset = "0x8426F4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0xA15DBC", Offset = "0xA15DBC", VA = "0xA15DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842704", Offset = "0x842704")]
			private set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public Vector3 WorldCenterOfMass
		{
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0xA15DC8", Offset = "0xA15DC8", VA = "0xA15DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842714", Offset = "0x842714")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0xA15DD4", Offset = "0xA15DD4", VA = "0xA15DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842724", Offset = "0x842724")]
			private set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public Vector3 CurrentVelocity
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0xA15DE0", Offset = "0xA15DE0", VA = "0xA15DE0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000192")]
		public Vector3 CurrentAngularVelocity
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xA15EA4", Offset = "0xA15EA4", VA = "0xA15EA4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000193")]
		public Vector3 CurrentWorldCenterOfMass
		{
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0xA12E74", Offset = "0xA12E74", VA = "0xA12E74")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xA12838", Offset = "0xA12838", VA = "0xA12838")]
		public ImpactRigidbodyWrapper(GameObject gameObject)
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xA15F70", Offset = "0xA15F70", VA = "0xA15F70")]
		public ImpactRigidbodyWrapper(Rigidbody rigidbody3D)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xA15FA0", Offset = "0xA15FA0", VA = "0xA15FA0")]
		public ImpactRigidbodyWrapper(Rigidbody2D rigidbody2D)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xA12A0C", Offset = "0xA12A0C", VA = "0xA12A0C")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xA12B20", Offset = "0xA12B20", VA = "0xA12B20")]
		public VelocityData GetVelocityData(Vector3 point)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xA12D00", Offset = "0xA12D00", VA = "0xA12D00")]
		public VelocityData GetCurrentVelocityData(Vector3 point)
		{
			return default(VelocityData);
		}
	}
	[Serializable]
	[Token(Token = "0x20002D1")]
	public struct ImpactTag
	{
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _value;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private ImpactTagLibraryBase _tagLibrary;

		[Token(Token = "0x17000194")]
		public int Value
		{
			[Token(Token = "0x60010DF")]
			[Address(RVA = "0xA16958", Offset = "0xA16958", VA = "0xA16958")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0xA16960", Offset = "0xA16960", VA = "0xA16960")]
			set
			{
			}
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xA16968", Offset = "0xA16968", VA = "0xA16968")]
		public ImpactTag(int tagValue, ImpactTagLibraryBase tagLibrary)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xA16974", Offset = "0xA16974", VA = "0xA16974")]
		public ImpactTagMask GetTagMask()
		{
			return default(ImpactTagMask);
		}
	}
	[Serializable]
	[Token(Token = "0x20002D2")]
	public struct ImpactTagMask
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _value;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private ImpactTagLibraryBase _tagLibrary;

		[Token(Token = "0x17000195")]
		public int Value
		{
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0xA16B94", Offset = "0xA16B94", VA = "0xA16B94")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0xA16B9C", Offset = "0xA16B9C", VA = "0xA16B9C")]
			set
			{
			}
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xA16988", Offset = "0xA16988", VA = "0xA16988")]
		public ImpactTagMask(int maskValue, ImpactTagLibraryBase tagLibrary)
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public struct InteractionData : IInteractionData
	{
		[Token(Token = "0x40010EC")]
		public const int InteractionTypeCollision = 0;

		[Token(Token = "0x40010ED")]
		public const int InteractionTypeSlide = 1;

		[Token(Token = "0x40010EE")]
		public const int InteractionTypeRoll = 2;

		[Token(Token = "0x40010EF")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x83CC34", Offset = "0x83CC34")]
		public const int InteractionTypeSimple = 3;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CC6C", Offset = "0x83CC6C")]
		private int <InteractionType>k__BackingField;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CC7C", Offset = "0x83CC7C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CC8C", Offset = "0x83CC8C")]
		private Vector3 <Point>k__BackingField;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CC9C", Offset = "0x83CC9C")]
		private Vector3 <Normal>k__BackingField;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CCAC", Offset = "0x83CCAC")]
		private ImpactTagMask? <TagMask>k__BackingField;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CCBC", Offset = "0x83CCBC")]
		private float <CompositionValue>k__BackingField;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CCCC", Offset = "0x83CCCC")]
		private int? <PriorityOverride>k__BackingField;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CCDC", Offset = "0x83CCDC")]
		private GameObject <ThisObject>k__BackingField;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CCEC", Offset = "0x83CCEC")]
		private GameObject <OtherObject>k__BackingField;

		[Token(Token = "0x17000196")]
		public int InteractionType
		{
			[Token(Token = "0x60010E6")]
			[Address(RVA = "0xA1ADE8", Offset = "0xA1ADE8", VA = "0xA1ADE8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842734", Offset = "0x842734")]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0xA1ADF0", Offset = "0xA1ADF0", VA = "0xA1ADF0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84276C", Offset = "0x84276C")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xA1ADF8", Offset = "0xA1ADF8", VA = "0xA1ADF8", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84277C", Offset = "0x84277C")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0xA1AE04", Offset = "0xA1AE04", VA = "0xA1AE04", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8427B4", Offset = "0x8427B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public Vector3 Point
		{
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0xA1AE10", Offset = "0xA1AE10", VA = "0xA1AE10", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8427C4", Offset = "0x8427C4")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010EB")]
			[Address(RVA = "0xA1AE1C", Offset = "0xA1AE1C", VA = "0xA1AE1C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8427FC", Offset = "0x8427FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public Vector3 Normal
		{
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0xA1AE28", Offset = "0xA1AE28", VA = "0xA1AE28", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84280C", Offset = "0x84280C")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0xA1AE34", Offset = "0xA1AE34", VA = "0xA1AE34", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842844", Offset = "0x842844")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public ImpactTagMask? TagMask
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0xA1AE40", Offset = "0xA1AE40", VA = "0xA1AE40", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842854", Offset = "0x842854")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x60010EF")]
			[Address(RVA = "0xA1AE54", Offset = "0xA1AE54", VA = "0xA1AE54", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84288C", Offset = "0x84288C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public float CompositionValue
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0xA1AE68", Offset = "0xA1AE68", VA = "0xA1AE68", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84289C", Offset = "0x84289C")]
			readonly get
			{
				return default(float);
			}
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0xA1AE70", Offset = "0xA1AE70", VA = "0xA1AE70", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8428D4", Offset = "0x8428D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public int? PriorityOverride
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0xA1AE78", Offset = "0xA1AE78", VA = "0xA1AE78", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8428E4", Offset = "0x8428E4")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0xA1AE80", Offset = "0xA1AE80", VA = "0xA1AE80", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84291C", Offset = "0x84291C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public GameObject ThisObject
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0xA1AE88", Offset = "0xA1AE88", VA = "0xA1AE88", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84292C", Offset = "0x84292C")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0xA1AE90", Offset = "0xA1AE90", VA = "0xA1AE90", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842964", Offset = "0x842964")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public GameObject OtherObject
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0xA1AE98", Offset = "0xA1AE98", VA = "0xA1AE98", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842974", Offset = "0x842974")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xA1AEA0", Offset = "0xA1AEA0", VA = "0xA1AEA0", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8429AC", Offset = "0x8429AC")]
			set
			{
			}
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xA1AEA8", Offset = "0xA1AEA8", VA = "0xA1AEA8", Slot = "22")]
		public IInteractionData Clone()
		{
			return null;
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xA1AF3C", Offset = "0xA1AF3C", VA = "0xA1AF3C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002D4")]
	public static class InteractionDataUtilities
	{
		[Token(Token = "0x60010FA")]
		public static InteractionData ToInteractionData<T>(T original) where T : IInteractionData
		{
			return default(InteractionData);
		}
	}
	[Token(Token = "0x20002D5")]
	public interface IImpactCollisionWrapper<T> where T : IImpactContactPoint
	{
		[Token(Token = "0x1700019F")]
		int ContactCount
		{
			[Token(Token = "0x60010FB")]
			get;
		}

		[Token(Token = "0x170001A0")]
		PhysicsType PhysicsType
		{
			[Token(Token = "0x60010FC")]
			get;
		}

		[Token(Token = "0x60010FD")]
		T GetContact(int index);
	}
	[Token(Token = "0x20002D6")]
	public interface IImpactContactPoint
	{
		[Token(Token = "0x170001A1")]
		Vector3 Point
		{
			[Token(Token = "0x60010FE")]
			get;
			[Token(Token = "0x60010FF")]
			set;
		}

		[Token(Token = "0x170001A2")]
		Vector3 Normal
		{
			[Token(Token = "0x6001100")]
			get;
			[Token(Token = "0x6001101")]
			set;
		}

		[Token(Token = "0x170001A3")]
		GameObject ThisObject
		{
			[Token(Token = "0x6001102")]
			get;
			[Token(Token = "0x6001103")]
			set;
		}

		[Token(Token = "0x170001A4")]
		GameObject OtherObject
		{
			[Token(Token = "0x6001104")]
			get;
			[Token(Token = "0x6001105")]
			set;
		}

		[Token(Token = "0x170001A5")]
		PhysicsType PhysicsType
		{
			[Token(Token = "0x6001106")]
			get;
			[Token(Token = "0x6001107")]
			set;
		}

		[Token(Token = "0x170001A6")]
		int ThisPhysicsMaterialID
		{
			[Token(Token = "0x6001108")]
			get;
			[Token(Token = "0x6001109")]
			set;
		}

		[Token(Token = "0x170001A7")]
		int OtherPhysicsMaterialID
		{
			[Token(Token = "0x600110A")]
			get;
			[Token(Token = "0x600110B")]
			set;
		}
	}
	[Token(Token = "0x20002D7")]
	public interface IInteractionData
	{
		[Token(Token = "0x170001A8")]
		int InteractionType
		{
			[Token(Token = "0x600110C")]
			get;
			[Token(Token = "0x600110D")]
			set;
		}

		[Token(Token = "0x170001A9")]
		Vector3 Velocity
		{
			[Token(Token = "0x600110E")]
			get;
			[Token(Token = "0x600110F")]
			set;
		}

		[Token(Token = "0x170001AA")]
		Vector3 Point
		{
			[Token(Token = "0x6001110")]
			get;
			[Token(Token = "0x6001111")]
			set;
		}

		[Token(Token = "0x170001AB")]
		Vector3 Normal
		{
			[Token(Token = "0x6001112")]
			get;
			[Token(Token = "0x6001113")]
			set;
		}

		[Token(Token = "0x170001AC")]
		ImpactTagMask? TagMask
		{
			[Token(Token = "0x6001114")]
			get;
			[Token(Token = "0x6001115")]
			set;
		}

		[Token(Token = "0x170001AD")]
		float CompositionValue
		{
			[Token(Token = "0x6001116")]
			get;
			[Token(Token = "0x6001117")]
			set;
		}

		[Token(Token = "0x170001AE")]
		int? PriorityOverride
		{
			[Token(Token = "0x6001118")]
			get;
			[Token(Token = "0x6001119")]
			set;
		}

		[Token(Token = "0x170001AF")]
		GameObject ThisObject
		{
			[Token(Token = "0x600111A")]
			get;
			[Token(Token = "0x600111B")]
			set;
		}

		[Token(Token = "0x170001B0")]
		GameObject OtherObject
		{
			[Token(Token = "0x600111C")]
			get;
			[Token(Token = "0x600111D")]
			set;
		}

		[Token(Token = "0x600111E")]
		IInteractionData Clone();
	}
	[Token(Token = "0x20002D8")]
	public enum PhysicsType
	{
		[Token(Token = "0x40010FA")]
		Physics3D,
		[Token(Token = "0x40010FB")]
		Physics2D,
		[Token(Token = "0x40010FC")]
		Unknown
	}
	[Token(Token = "0x20002D9")]
	public struct VelocityData
	{
		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 LinearVelocity;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 TangentialVelocity;

		[Token(Token = "0x170001B1")]
		public Vector3 TotalPointVelocity
		{
			[Token(Token = "0x600111F")]
			[Address(RVA = "0xDB0D08", Offset = "0xDB0D08", VA = "0xDB0D08")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xDB0D28", Offset = "0xDB0D28", VA = "0xDB0D28")]
		public VelocityData(Vector3 linearVelocity, Vector3 tangentialVelocity)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xDB0D38", Offset = "0xDB0D38", VA = "0xDB0D38", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002DA")]
	public static class ImpactDebugger
	{
		[Token(Token = "0x6001122")]
		public static void LogInteraction<T>(T obj) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xA0F7B8", Offset = "0xA0F7B8", VA = "0xA0F7B8")]
		public static string InteractionTypeToString(int interactionType)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836964", Offset = "0x836964")]
	public class ImpactManager : MonoBehaviour
	{
		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _physicsInteractionsLimit;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _interactionResultBufferSize;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _activeContinuousInteractions;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _materialCompositionBufferSize;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _usePhysicMaterialMapping;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _setAsActiveInstance;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<ImpactPhysicMaterialMapping> _physicMaterialMap;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<ImpactPhysicsMaterial2DMapping> _physicsMaterial2DMap;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, IImpactMaterial> materialMapDictionary;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, ClassPool> interactionResultPools;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int physicsInteractionsCounter;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IContinuousInteractionResult[] activeContinuousInteractionResults;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HashSet<long> activeContinuousInteractionKeys;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int currentActiveContinuousInteractionCount;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CD8C", Offset = "0x83CD8C")]
		private IInteractionResult[] <InteractionResultBuffer>k__BackingField;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CD9C", Offset = "0x83CD9C")]
		private ImpactMaterialComposition[] <MaterialCompositionBuffer>k__BackingField;

		[Token(Token = "0x170001B2")]
		public IInteractionResult[] InteractionResultBuffer
		{
			[Token(Token = "0x6001124")]
			[Address(RVA = "0xA107BC", Offset = "0xA107BC", VA = "0xA107BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8429BC", Offset = "0x8429BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001125")]
			[Address(RVA = "0xA107C4", Offset = "0xA107C4", VA = "0xA107C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8429CC", Offset = "0x8429CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public ImpactMaterialComposition[] MaterialCompositionBuffer
		{
			[Token(Token = "0x6001126")]
			[Address(RVA = "0xA107CC", Offset = "0xA107CC", VA = "0xA107CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8429DC", Offset = "0x8429DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001127")]
			[Address(RVA = "0xA107D4", Offset = "0xA107D4", VA = "0xA107D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8429EC", Offset = "0x8429EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public bool UseMaterialMapping
		{
			[Token(Token = "0x6001128")]
			[Address(RVA = "0xA107DC", Offset = "0xA107DC", VA = "0xA107DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001129")]
			[Address(RVA = "0xA107E4", Offset = "0xA107E4", VA = "0xA107E4")]
			set
			{
			}
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xA107F0", Offset = "0xA107F0", VA = "0xA107F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xA10D20", Offset = "0xA10D20", VA = "0xA10D20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xA10EC8", Offset = "0xA10EC8", VA = "0xA10EC8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xA108C8", Offset = "0xA108C8", VA = "0xA108C8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xA11178", Offset = "0xA11178", VA = "0xA11178")]
		public bool HasReachedPhysicsInteractionsLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xA1119C", Offset = "0xA1119C", VA = "0xA1119C")]
		public void IncrementPhysicsInteractionsLimit()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xA111AC", Offset = "0xA111AC", VA = "0xA111AC")]
		public bool HasReachedContinuousInteractionLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xA111C0", Offset = "0xA111C0", VA = "0xA111C0")]
		public bool TryGetImpactMaterialFromMapping(Collider collider, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xA112C0", Offset = "0xA112C0", VA = "0xA112C0")]
		public bool TryGetImpactMaterialFromMapping(Collider2D collider2d, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xA113C0", Offset = "0xA113C0", VA = "0xA113C0")]
		public bool TryGetImpactMaterialFromMapping(int physicsMaterialInstanceId, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6001134")]
		public void ProcessInteraction<T>(T interactionData, IImpactMaterial impactMaterial, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001135")]
		public void ProcessContinuousInteraction<T>(T interactionData, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001136")]
		public void ProcessContinuousInteraction<T>(T interactionData, IImpactMaterial material, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xA1144C", Offset = "0xA1144C", VA = "0xA1144C")]
		public void AddOrUpdateContinuousInteractionResult(IImpactObject impactObject, IContinuousInteractionResult result)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xA119CC", Offset = "0xA119CC", VA = "0xA119CC")]
		public bool HasActiveContinuousInteractionWithKey(long key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xA1161C", Offset = "0xA1161C", VA = "0xA1161C")]
		private IContinuousInteractionResult findContinuousInteractionResult(long key)
		{
			return null;
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xA11758", Offset = "0xA11758", VA = "0xA11758")]
		private void addContinuousInteractionResult(IImpactObject impactObject, IContinuousInteractionResult continuousInteractionResult)
		{
		}

		[Token(Token = "0x600113B")]
		public ClassPool CreateInteractionResultPool<T>(string key) where T : class, IPoolable, new()
		{
			return null;
		}

		[Token(Token = "0x600113C")]
		public bool TryGetInteractionResultFromPool<T>(string key, out T obj) where T : class, IPoolable, new()
		{
			return default(bool);
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xA11A30", Offset = "0xA11A30", VA = "0xA11A30")]
		public ImpactManager()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public static class ImpactManagerInstance
	{
		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ImpactManager instance;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool hasInstance;

		[Token(Token = "0x170001B5")]
		public static IInteractionResult[] InteractionResultBuffer
		{
			[Token(Token = "0x600113E")]
			[Address(RVA = "0xA11B04", Offset = "0xA11B04", VA = "0xA11B04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public static ImpactMaterialComposition[] MaterialCompositionBuffer
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0xA11C08", Offset = "0xA11C08", VA = "0xA11C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public static bool UseMaterialMapping
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0xA11C2C", Offset = "0xA11C2C", VA = "0xA11C2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001144")]
			[Address(RVA = "0xA11C50", Offset = "0xA11C50", VA = "0xA11C50")]
			set
			{
			}
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xA10820", Offset = "0xA10820", VA = "0xA10820")]
		public static void SetInstance(ImpactManager inst)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xA11B28", Offset = "0xA11B28", VA = "0xA11B28")]
		public static ImpactManager GetInstance(bool createIfNull = true)
		{
			return null;
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xA10E18", Offset = "0xA10E18", VA = "0xA10E18")]
		public static void ClearInstance(ImpactManager inst)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xA0EBAC", Offset = "0xA0EBAC", VA = "0xA0EBAC")]
		public static bool HasReachedPhysicsInteractionsLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xA0EBEC", Offset = "0xA0EBEC", VA = "0xA0EBEC")]
		public static void IncrementPhysicsInteractionsLimit()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xA11C84", Offset = "0xA11C84", VA = "0xA11C84")]
		public static bool HasReachedContinuousInteractionLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xA11CB4", Offset = "0xA11CB4", VA = "0xA11CB4")]
		public static bool HasActiveContinuousInteractionWithKey(long key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xA11CE4", Offset = "0xA11CE4", VA = "0xA11CE4")]
		public static bool TryGetImpactMaterialFromMapping(Collider collider, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xA11D1C", Offset = "0xA11D1C", VA = "0xA11D1C")]
		public static bool TryGetImpactMaterialFromMapping(Collider2D collider2d, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xA11D54", Offset = "0xA11D54", VA = "0xA11D54")]
		public static bool TryGetImpactMaterialFromMapping(int physicsMaterialInstanceId, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x600114C")]
		public static void ProcessInteraction<T>(T interactionData, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x600114D")]
		public static void ProcessInteraction<T>(T interactionData, IImpactMaterial impactMaterial, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x600114E")]
		public static void ProcessContinuousInteraction<T>(T interactionData, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x600114F")]
		public static void ProcessContinuousInteraction<T>(T interactionData, IImpactMaterial material, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xA11D8C", Offset = "0xA11D8C", VA = "0xA11D8C")]
		public static void AddOrUpdateContinuousInteractionResult(IImpactObject impactObject, IContinuousInteractionResult result)
		{
		}

		[Token(Token = "0x6001151")]
		public static void CreateInteractionResultPool<T>(string key) where T : class, IPoolable, new()
		{
		}

		[Token(Token = "0x6001152")]
		public static bool TryGetInteractionResultFromPool<T>(string key, out T obj) where T : class, IPoolable, new()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20002DD")]
	public class ImpactPhysicMaterialMapping
	{
		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicMaterial PhysicMaterial;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImpactMaterialBase ImpactMaterial;

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xA15818", Offset = "0xA15818", VA = "0xA15818")]
		public ImpactPhysicMaterialMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DE")]
	public class ImpactPhysicsMaterial2DMapping
	{
		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicsMaterial2D PhysicsMaterial2D;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImpactMaterialBase ImpactMaterial;

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xA15820", Offset = "0xA15820", VA = "0xA15820")]
		public ImpactPhysicsMaterial2DMapping()
		{
		}
	}
}
namespace Impact.Integration.MasterAudio
{
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x83699C", Offset = "0x83699C")]
	public class MasterAudioInteraction : ImpactInteractionBase
	{
		[Token(Token = "0x20002E0")]
		public enum CollisionSoundGroupSelectionMode
		{
			[Token(Token = "0x4001122")]
			Velocity,
			[Token(Token = "0x4001123")]
			Random
		}

		[Serializable]
		[Token(Token = "0x20002E1")]
		public struct CollisionSoundGroup
		{
			[Token(Token = "0x4001124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SoundGroup]
			public string SoundGroup;
		}

		[Token(Token = "0x4001116")]
		private const string interactionResultPoolKey = "MasterAudioInteractionResult";

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Range _velocityRange;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Range _randomPitchRange;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _scaleVolumeWithVelocity;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve _velocityVolumeScaleCurve;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _collisionNormalInfluence;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _slideVelocityPitchMultiplier;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CollisionSoundGroupSelectionMode _collisionSoundGroupSelectionMode;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<CollisionSoundGroup> _collisionSoundGroups;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[SoundGroup]
		private string _slideSoundGroup;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[SoundGroup]
		private string _rollSoundGroup;

		[Token(Token = "0x170001B8")]
		public Range VelocityRange
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0xA1F7FC", Offset = "0xA1F7FC", VA = "0xA1F7FC")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6001156")]
			[Address(RVA = "0xA1F804", Offset = "0xA1F804", VA = "0xA1F804")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public Range RandomPitchRange
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0xA1F80C", Offset = "0xA1F80C", VA = "0xA1F80C")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6001158")]
			[Address(RVA = "0xA1F814", Offset = "0xA1F814", VA = "0xA1F814")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public bool ScaleVolumeWithVelocity
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0xA1F81C", Offset = "0xA1F81C", VA = "0xA1F81C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600115A")]
			[Address(RVA = "0xA1F824", Offset = "0xA1F824", VA = "0xA1F824")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public AnimationCurve VelocityVolumeScaleCurve
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0xA1F830", Offset = "0xA1F830", VA = "0xA1F830")]
			get
			{
				return null;
			}
			[Token(Token = "0x600115C")]
			[Address(RVA = "0xA1F838", Offset = "0xA1F838", VA = "0xA1F838")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public float CollisionNormalInfluence
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0xA1F840", Offset = "0xA1F840", VA = "0xA1F840")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600115E")]
			[Address(RVA = "0xA1F848", Offset = "0xA1F848", VA = "0xA1F848")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public float SlideVelocityPitchMultiplier
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0xA1F850", Offset = "0xA1F850", VA = "0xA1F850")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001160")]
			[Address(RVA = "0xA1F858", Offset = "0xA1F858", VA = "0xA1F858")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public CollisionSoundGroupSelectionMode CollisionSoundGroupMode
		{
			[Token(Token = "0x6001161")]
			[Address(RVA = "0xA1F860", Offset = "0xA1F860", VA = "0xA1F860")]
			get
			{
				return default(CollisionSoundGroupSelectionMode);
			}
			[Token(Token = "0x6001162")]
			[Address(RVA = "0xA1F868", Offset = "0xA1F868", VA = "0xA1F868")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public List<CollisionSoundGroup> CollisionSoundGroups
		{
			[Token(Token = "0x6001163")]
			[Address(RVA = "0xA1F870", Offset = "0xA1F870", VA = "0xA1F870")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public string SlideSoundGroup
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0xA1F878", Offset = "0xA1F878", VA = "0xA1F878")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001165")]
			[Address(RVA = "0xA1F880", Offset = "0xA1F880", VA = "0xA1F880")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public string RollSoundGroup
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0xA1F888", Offset = "0xA1F888", VA = "0xA1F888")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001167")]
			[Address(RVA = "0xA1F890", Offset = "0xA1F890", VA = "0xA1F890")]
			set
			{
			}
		}

		[Token(Token = "0x6001168")]
		public override IInteractionResult GetInteractionResult<T>(T interactionData)
		{
			return null;
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xA1F898", Offset = "0xA1F898", VA = "0xA1F898")]
		public float UpdatePitch(float originalPitch, Vector3 velocity)
		{
			return default(float);
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xA1F8E8", Offset = "0xA1F8E8", VA = "0xA1F8E8")]
		private float getVolumeScale(float normalizedIntensity)
		{
			return default(float);
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xA1F914", Offset = "0xA1F914", VA = "0xA1F914")]
		private string getSoundGroup(int interactionType, float normalizedIntensity)
		{
			return null;
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xA1F954", Offset = "0xA1F954", VA = "0xA1F954")]
		private CollisionSoundGroup getCollisionSoundGroup(float normalizedIntensity)
		{
			return default(CollisionSoundGroup);
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xA1FA38", Offset = "0xA1FA38", VA = "0xA1FA38")]
		private CollisionSoundGroup getRandomCollisionSoundGroup()
		{
			return default(CollisionSoundGroup);
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xA1FAD4", Offset = "0xA1FAD4", VA = "0xA1FAD4", Slot = "7")]
		public override void Preload()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xA1FB30", Offset = "0xA1FB30", VA = "0xA1FB30")]
		public MasterAudioInteraction()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class MasterAudioInteractionResult : IContinuousInteractionResult, IInteractionResult, IDisposable, IPoolable
	{
		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CEAC", Offset = "0x83CEAC")]
		private InteractionData <OriginalData>k__BackingField;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CEBC", Offset = "0x83CEBC")]
		private long <Key>k__BackingField;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string SoundGroup;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float VolumeScale;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float Pitch;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MasterAudioInteraction Interaction;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IImpactObject parent;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float targetVolumeScale;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float currentVolumeScale;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float targetPitch;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float currentPitch;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PlaySoundResult playSoundResult;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool isAvailable;

		[Token(Token = "0x170001C2")]
		public InteractionData OriginalData
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0xA1FC30", Offset = "0xA1FC30", VA = "0xA1FC30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8429FC", Offset = "0x8429FC")]
			get
			{
				return default(InteractionData);
			}
			[Token(Token = "0x6001171")]
			[Address(RVA = "0xA1FC40", Offset = "0xA1FC40", VA = "0xA1FC40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842A0C", Offset = "0x842A0C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public long Key
		{
			[Token(Token = "0x6001172")]
			[Address(RVA = "0xA1FC5C", Offset = "0xA1FC5C", VA = "0xA1FC5C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842A1C", Offset = "0x842A1C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001173")]
			[Address(RVA = "0xA1FC64", Offset = "0xA1FC64", VA = "0xA1FC64", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842A2C", Offset = "0x842A2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public bool IsValid
		{
			[Token(Token = "0x6001174")]
			[Address(RVA = "0xA1FC6C", Offset = "0xA1FC6C", VA = "0xA1FC6C", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C5")]
		public bool IsAlive
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0xA1FCA4", Offset = "0xA1FCA4", VA = "0xA1FCA4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xA1FCC8", Offset = "0xA1FCC8", VA = "0xA1FCC8", Slot = "10")]
		public void Process(IImpactObject parent)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xA1FF58", Offset = "0xA1FF58", VA = "0xA1FF58", Slot = "7")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xA20060", Offset = "0xA20060", VA = "0xA20060", Slot = "8")]
		public void KeepAlive(IInteractionResult newResult)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xA1FEA8", Offset = "0xA1FEA8", VA = "0xA1FEA8", Slot = "11")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xA201B8", Offset = "0xA201B8", VA = "0xA201B8", Slot = "12")]
		public void Retrieve()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xA201AC", Offset = "0xA201AC", VA = "0xA201AC", Slot = "13")]
		public void MakeAvailable()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xA201C0", Offset = "0xA201C0", VA = "0xA201C0", Slot = "14")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xA201C8", Offset = "0xA201C8", VA = "0xA201C8")]
		public MasterAudioInteractionResult()
		{
		}
	}
}
namespace Impact.Utility
{
	[Token(Token = "0x20002E3")]
	public static class Extensions
	{
		[Token(Token = "0x600117E")]
		[Address(RVA = "0x1C15564", Offset = "0x1C15564", VA = "0x1C15564")]
		public static int SetBit(this int bitmask, int pos)
		{
			return default(int);
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x1C15574", Offset = "0x1C15574", VA = "0x1C15574")]
		public static int UnsetBit(this int bitmask, int pos)
		{
			return default(int);
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x1C15584", Offset = "0x1C15584", VA = "0x1C15584")]
		public static bool IsBitSet(this int bitmask, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001181")]
		public static T GetOrAddComponent<T>(this GameObject gameObject, bool checkParents) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001182")]
		public static int IndexOf<T>(this T[] array, Predicate<T> predicate)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002E4")]
	public static class PhysicsUtilities
	{
		[Token(Token = "0x6001183")]
		[Address(RVA = "0x99A100", Offset = "0x99A100", VA = "0x99A100")]
		public static Vector3 CalculateTangentialVelocity(Vector3 point, Vector3 angularVelocity, Vector3 centerOfRotation)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20002E5")]
	public struct Range
	{
		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Min;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Max;

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x9A56B4", Offset = "0x9A56B4", VA = "0x9A56B4")]
		public Range(float min, float max)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x9A56BC", Offset = "0x9A56BC", VA = "0x9A56BC")]
		public bool IsInRange(float f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x9A56E0", Offset = "0x9A56E0", VA = "0x9A56E0")]
		public float Clamp(float f)
		{
			return default(float);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x9A56EC", Offset = "0x9A56EC", VA = "0x9A56EC")]
		public float RandomInRange()
		{
			return default(float);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x9A56F8", Offset = "0x9A56F8", VA = "0x9A56F8")]
		public int RandomInRangeInteger()
		{
			return default(int);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x9A5738", Offset = "0x9A5738", VA = "0x9A5738")]
		public float Lerp(float t)
		{
			return default(float);
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x9A574C", Offset = "0x9A574C", VA = "0x9A574C")]
		public float Normalize(float val)
		{
			return default(float);
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x9A5798", Offset = "0x9A5798", VA = "0x9A5798")]
		public float NormalizeUnclamped(float val)
		{
			return default(float);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x9A57AC", Offset = "0x9A57AC", VA = "0x9A57AC")]
		public float Distance()
		{
			return default(float);
		}
	}
}
namespace Impact.Utility.ObjectPool
{
	[Token(Token = "0x20002E6")]
	public class ClassPool
	{
		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<IPoolable> pooledObjects;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int lastAvailable;

		[Token(Token = "0x600118D")]
		public T GetObject<T>() where T : class, IPoolable, new()
		{
			return null;
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xB2E368", Offset = "0xB2E368", VA = "0xB2E368")]
		public ClassPool()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public interface IPoolable
	{
		[Token(Token = "0x600118F")]
		void Retrieve();

		[Token(Token = "0x6001190")]
		void MakeAvailable();

		[Token(Token = "0x6001191")]
		bool IsAvailable();
	}
	[Token(Token = "0x20002E8")]
	public class ObjectPool<T> : MonoBehaviour where T : PooledObject
	{
		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected int _poolSize;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected ObjectPoolFallbackMode _fallbackMode;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] pooledObjects;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int lastAvailable;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CEEC", Offset = "0x83CEEC")]
		private T <Template>k__BackingField;

		[Token(Token = "0x170001C6")]
		public T Template
		{
			[Token(Token = "0x6001192")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842A8C", Offset = "0x842A8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001193")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842A9C", Offset = "0x842A9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public int PoolSize
		{
			[Token(Token = "0x6001194")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001195")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public ObjectPoolFallbackMode FallbackMode
		{
			[Token(Token = "0x6001196")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x6001197")]
			set
			{
			}
		}

		[Token(Token = "0x6001198")]
		public virtual void Initialize(int poolSize, ObjectPoolFallbackMode fallbackMode)
		{
		}

		[Token(Token = "0x6001199")]
		protected virtual T createPooledObjectInstance(int index)
		{
			return null;
		}

		[Token(Token = "0x600119A")]
		public virtual bool GetObject(int priority, out T result)
		{
			return default(bool);
		}

		[Token(Token = "0x600119B")]
		public void ReturnAllObjectsToPool()
		{
		}

		[Token(Token = "0x600119C")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600119D")]
		public ObjectPool()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public enum ObjectPoolFallbackMode
	{
		[Token(Token = "0x400113C")]
		None,
		[Token(Token = "0x400113D")]
		LowerPriority,
		[Token(Token = "0x400113E")]
		Oldest
	}
	[Token(Token = "0x20002EA")]
	public class ObjectPoolGroup<TPool, TTemplate> where TPool : ObjectPool<TTemplate> where TTemplate : PooledObject
	{
		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<TPool> pools;

		[Token(Token = "0x600119E")]
		public bool GetOrCreatePool(TTemplate template, int poolSize, ObjectPoolFallbackMode objectPoolFallbackMode, out TPool result)
		{
			return default(bool);
		}

		[Token(Token = "0x600119F")]
		public bool GetPool(TTemplate template, out TPool result)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A0")]
		public bool CreatePool(TTemplate template, int poolSize, ObjectPoolFallbackMode objectPoolFallbackMode, out TPool result)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A1")]
		public void Add(TPool pool)
		{
		}

		[Token(Token = "0x60011A2")]
		public void Remove(TPool pool)
		{
		}

		[Token(Token = "0x60011A3")]
		public void ReturnAllObjectsToPools()
		{
		}

		[Token(Token = "0x60011A4")]
		public ObjectPoolGroup()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class PooledObject : MonoBehaviour
	{
		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CEFC", Offset = "0x83CEFC")]
		private Transform <OriginalParent>k__BackingField;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CF0C", Offset = "0x83CF0C")]
		private int <LastRetrievedFrame>k__BackingField;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CF1C", Offset = "0x83CF1C")]
		private int <Priority>k__BackingField;

		[Token(Token = "0x170001C9")]
		public Transform OriginalParent
		{
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x9A0300", Offset = "0x9A0300", VA = "0x9A0300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842AAC", Offset = "0x842AAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x9A0308", Offset = "0x9A0308", VA = "0x9A0308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842ABC", Offset = "0x842ABC")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public int LastRetrievedFrame
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x9A0310", Offset = "0x9A0310", VA = "0x9A0310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842ACC", Offset = "0x842ACC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x9A0318", Offset = "0x9A0318", VA = "0x9A0318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842ADC", Offset = "0x842ADC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public int Priority
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x9A0320", Offset = "0x9A0320", VA = "0x9A0320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842AEC", Offset = "0x842AEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x9A0328", Offset = "0x9A0328", VA = "0x9A0328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842AFC", Offset = "0x842AFC")]
			private set
			{
			}
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x9A0330", Offset = "0x9A0330", VA = "0x9A0330", Slot = "4")]
		public virtual void Retrieve(int priority)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x9A0378", Offset = "0x9A0378", VA = "0x9A0378", Slot = "5")]
		public virtual void MakeAvailable()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x9A03D4", Offset = "0x9A03D4", VA = "0x9A03D4", Slot = "6")]
		public virtual bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x9A0404", Offset = "0x9A0404", VA = "0x9A0404")]
		public PooledObject()
		{
		}
	}
}
namespace Impact.Triggers
{
	[Token(Token = "0x20002EC")]
	public static class ImpactRaycastTrigger
	{
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xA15828", Offset = "0xA15828", VA = "0xA15828")]
		public static void Trigger(ImpactTagMask tagMask, RaycastHit hit, Vector3 velocity, GameObject fromObject, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x60011B0")]
		public static void Trigger<T>(T interactionData, RaycastHit hit, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xA15960", Offset = "0xA15960", VA = "0xA15960")]
		public static void Trigger2D(ImpactTagMask tagMask, RaycastHit2D hit, Vector3 velocity, GameObject fromObject, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x60011B2")]
		public static void Trigger2D<T>(T interactionData, RaycastHit2D hit, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x60011B3")]
		public static void Trigger<T>(T interactionData, IImpactObject otherObject, int otherObjectPhysicsMaterialID, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xA15A98", Offset = "0xA15A98", VA = "0xA15A98")]
		public static void Trigger(IImpactObject impactObject, RaycastHit hit, Vector3 velocity, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x60011B5")]
		public static void Trigger<T>(T interactionData, RaycastHit hit, IImpactObject impactObject, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xA15C00", Offset = "0xA15C00", VA = "0xA15C00")]
		public static void Trigger2D(IImpactObject impactObject, RaycastHit2D hit, Vector3 velocity, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x60011B7")]
		public static void Trigger2D<T>(T interactionData, RaycastHit2D hit, IImpactObject impactObject, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x60011B8")]
		public static void Trigger<T>(T interactionData, IImpactObject sourceObject, IImpactObject otherObject, int otherObjectPhysicsMaterialID, bool useMaterialComposition) where T : IInteractionData
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public abstract class ImpactTriggerBase<TCollision, TContact> : MonoBehaviour where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _enabled;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ImpactObjectBase _target;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _useMaterialComposition;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ImpactTriggerContactMode _contactMode;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _highPriority;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hasMainTarget;

		[Token(Token = "0x170001CC")]
		public bool Enabled
		{
			[Token(Token = "0x60011BB")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public ImpactObjectBase MainTarget
		{
			[Token(Token = "0x60011BD")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BE")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public bool UseMaterialComposition
		{
			[Token(Token = "0x60011BF")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public ImpactTriggerContactMode ContactMode
		{
			[Token(Token = "0x60011C1")]
			get
			{
				return default(ImpactTriggerContactMode);
			}
			[Token(Token = "0x60011C2")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public bool HighPriority
		{
			[Token(Token = "0x60011C3")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C4")]
			set
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<InteractionData, IImpactObject> OnTriggered
		{
			[Token(Token = "0x60011B9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842B0C", Offset = "0x842B0C")]
			add
			{
			}
			[Token(Token = "0x60011BA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842B1C", Offset = "0x842B1C")]
			remove
			{
			}
		}

		[Token(Token = "0x60011C5")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011C6")]
		private void Reset()
		{
		}

		[Token(Token = "0x60011C7")]
		protected IImpactObject getImpactObject(GameObject collider)
		{
			return null;
		}

		[Token(Token = "0x60011C8")]
		protected void processCollision(TCollision collision)
		{
		}

		[Token(Token = "0x60011C9")]
		protected void processCollisionSingleContact(TCollision collision)
		{
		}

		[Token(Token = "0x60011CA")]
		protected void processCollisionSingleAveragedContact(TCollision collision)
		{
		}

		[Token(Token = "0x60011CB")]
		protected void processCollisionMultipleContacts(TCollision collision)
		{
		}

		[Token(Token = "0x60011CC")]
		protected void processCollisionContact(TCollision collision, TContact contactPoint)
		{
		}

		[Token(Token = "0x60011CD")]
		protected ImpactTagMask? getOtherObjectTagMask(IImpactObject impactObject, Vector3 point, int otherPhysicsMaterialID, bool hasOtherObject)
		{
			return null;
		}

		[Token(Token = "0x60011CE")]
		protected virtual void buildInteractionData(IImpactObject target, TCollision collision, TContact contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float compositionValue)
		{
		}

		[Token(Token = "0x60011CF")]
		protected void invokeTriggeredEvent(InteractionData interactionData, IImpactObject impactObject)
		{
		}

		[Token(Token = "0x60011D0")]
		protected ImpactTriggerBase()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public enum ImpactTriggerContactMode
	{
		[Token(Token = "0x400114B")]
		Single,
		[Token(Token = "0x400114C")]
		SingleAverage,
		[Token(Token = "0x400114D")]
		Multiple
	}
	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8369FC", Offset = "0x8369FC")]
	public class ImpactCollisionTrigger2D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xA0EAF0", Offset = "0xA0EAF0", VA = "0xA0EAF0")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xA0EC54", Offset = "0xA0EC54", VA = "0xA0EC54")]
		public ImpactCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836A38", Offset = "0x836A38")]
	public class ImpactCollisionTriggerWithCooldown2D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float cooldown;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastCollisionTime;

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xA0EDDC", Offset = "0xA0EDDC", VA = "0xA0EDDC")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xA0EEC0", Offset = "0xA0EEC0", VA = "0xA0EEC0")]
		public ImpactCollisionTriggerWithCooldown2D()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836A74", Offset = "0x836A74")]
	public class ImpactOnTriggerEnter2D : ImpactCollisionTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xA135A0", Offset = "0xA135A0", VA = "0xA135A0")]
		private void OnTriggerEnter2D(Collider2D collider)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xA1374C", Offset = "0xA1374C", VA = "0xA1374C")]
		public ImpactOnTriggerEnter2D()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836AB0", Offset = "0x836AB0")]
	public class ImpactOnTriggerStay2D : ImpactSlideAndRollTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xA1398C", Offset = "0xA1398C", VA = "0xA1398C")]
		private void OnTriggerStay2D(Collider2D collider)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xA13B58", Offset = "0xA13B58", VA = "0xA13B58")]
		public ImpactOnTriggerStay2D()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836AEC", Offset = "0x836AEC")]
	public class ImpactSimpleCollisionTrigger2D : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xA15FD4", Offset = "0xA15FD4", VA = "0xA15FD4")]
		private void OnCollisionEnter2D()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xA16184", Offset = "0xA16184", VA = "0xA16184")]
		public ImpactSimpleCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836B28", Offset = "0x836B28")]
	public class ImpactSlideAndRollTrigger2D : ImpactSlideAndRollTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xA163CC", Offset = "0xA163CC", VA = "0xA163CC")]
		private void OnCollisionStay2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xA16488", Offset = "0xA16488", VA = "0xA16488")]
		public ImpactSlideAndRollTrigger2D()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836B64", Offset = "0x836B64")]
	public class ImpactSpeculativeCollisionTrigger2D : ImpactSpeculativeCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xA165D8", Offset = "0xA165D8", VA = "0xA165D8")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xA16694", Offset = "0xA16694", VA = "0xA16694")]
		private void OnCollisionStay2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xA16750", Offset = "0xA16750", VA = "0xA16750")]
		public ImpactSpeculativeCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836BA0", Offset = "0x836BA0")]
	public class ImpactVelocityCollisionTrigger2D : ImpactVelocityCollisionTriggerBase
	{
		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xA17A4C", Offset = "0xA17A4C", VA = "0xA17A4C")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xA17B08", Offset = "0xA17B08", VA = "0xA17B08")]
		public ImpactVelocityCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836BDC", Offset = "0x836BDC")]
	public class ImpactCollisionTrigger3D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xA0ECA0", Offset = "0xA0ECA0", VA = "0xA0ECA0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xA0ED90", Offset = "0xA0ED90", VA = "0xA0ED90")]
		public ImpactCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836C18", Offset = "0x836C18")]
	public class ImpactCollisionTriggerWithCooldown3D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float cooldown;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastCollisionTime;

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xA0EF0C", Offset = "0xA0EF0C", VA = "0xA0EF0C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xA0EFEC", Offset = "0xA0EFEC", VA = "0xA0EFEC")]
		public ImpactCollisionTriggerWithCooldown3D()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836C54", Offset = "0x836C54")]
	public class ImpactOnTriggerEnter3D : ImpactCollisionTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xA13798", Offset = "0xA13798", VA = "0xA13798")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xA13940", Offset = "0xA13940", VA = "0xA13940")]
		public ImpactOnTriggerEnter3D()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836C90", Offset = "0x836C90")]
	public class ImpactOnTriggerStay3D : ImpactSlideAndRollTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xA13BA4", Offset = "0xA13BA4", VA = "0xA13BA4")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xA13D70", Offset = "0xA13D70", VA = "0xA13D70")]
		public ImpactOnTriggerStay3D()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836CCC", Offset = "0x836CCC")]
	public class ImpactSimpleCollisionTrigger3D : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xA161D0", Offset = "0xA161D0", VA = "0xA161D0")]
		private void OnCollisionEnter()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xA16380", Offset = "0xA16380", VA = "0xA16380")]
		public ImpactSimpleCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836D08", Offset = "0x836D08")]
	public class ImpactSlideAndRollTrigger3D : ImpactSlideAndRollTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xA164D4", Offset = "0xA164D4", VA = "0xA164D4")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xA1658C", Offset = "0xA1658C", VA = "0xA1658C")]
		public ImpactSlideAndRollTrigger3D()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836D44", Offset = "0x836D44")]
	public class ImpactSpeculativeCollisionTrigger3D : ImpactSpeculativeCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xA1679C", Offset = "0xA1679C", VA = "0xA1679C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xA16854", Offset = "0xA16854", VA = "0xA16854")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xA1690C", Offset = "0xA1690C", VA = "0xA1690C")]
		public ImpactSpeculativeCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836D80", Offset = "0x836D80")]
	public class ImpactVelocityCollisionTrigger3D : ImpactVelocityCollisionTriggerBase
	{
		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xA17B60", Offset = "0xA17B60", VA = "0xA17B60")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xA17C18", Offset = "0xA17C18", VA = "0xA17C18")]
		public ImpactVelocityCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public abstract class ImpactCollisionTriggerBase<TCollision, TContact> : ImpactTriggerBase<TCollision, TContact> where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Token(Token = "0x60011F3")]
		protected override void buildInteractionData(IImpactObject target, TCollision collision, TContact contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float CompositionValue)
		{
		}

		[Token(Token = "0x60011F4")]
		protected ImpactCollisionTriggerBase()
		{
		}
	}
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836DBC", Offset = "0x836DBC")]
	public class ImpactParticleCollisionTrigger : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem _particles;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xA13DBC", Offset = "0xA13DBC", VA = "0xA13DBC")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xA13F60", Offset = "0xA13F60", VA = "0xA13F60")]
		private void processParticleCollision(ParticleCollisionEvent particleCollisionEvent, GameObject onParticleCollisionObject, bool isParticleSystem)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xA14B9C", Offset = "0xA14B9C", VA = "0xA14B9C")]
		private int getPhysicsMaterialID(Component colliderComponent)
		{
			return default(int);
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xA14DA0", Offset = "0xA14DA0", VA = "0xA14DA0")]
		public ImpactParticleCollisionTrigger()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public enum SlideMode
	{
		[Token(Token = "0x4001155")]
		Normal,
		[Token(Token = "0x4001156")]
		None
	}
	[Token(Token = "0x2000302")]
	public enum RollMode
	{
		[Token(Token = "0x4001158")]
		Normal,
		[Token(Token = "0x4001159")]
		None
	}
	[Token(Token = "0x2000303")]
	public abstract class ImpactSlideAndRollTriggerBase<TCollision, TContact> : ImpactTriggerBase<TCollision, TContact> where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SlideMode _slideMode;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RollMode _rollMode;

		[Token(Token = "0x170001D1")]
		public SlideMode SlideMode
		{
			[Token(Token = "0x60011F9")]
			get
			{
				return default(SlideMode);
			}
			[Token(Token = "0x60011FA")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public RollMode RollMode
		{
			[Token(Token = "0x60011FB")]
			get
			{
				return default(RollMode);
			}
			[Token(Token = "0x60011FC")]
			set
			{
			}
		}

		[Token(Token = "0x60011FD")]
		protected override void buildInteractionData(IImpactObject target, TCollision collision, TContact contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float compositionValue)
		{
		}

		[Token(Token = "0x60011FE")]
		protected ImpactSlideAndRollTriggerBase()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public abstract class ImpactSpeculativeCollisionTriggerBase<TCollision, TContact> : ImpactCollisionTriggerBase<TCollision, TContact> where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Serializable]
		[Token(Token = "0x2000305")]
		private struct SpeculativeCollisionContact : IEquatable<SpeculativeCollisionContact>
		{
			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Lifetime;

			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 RelativeContactPoint;

			[Token(Token = "0x170001D6")]
			public bool IsAlive
			{
				[Token(Token = "0x6001208")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001209")]
			public bool Equals(SpeculativeCollisionContact other)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000306")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x836DF4", Offset = "0x836DF4")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SpeculativeCollisionContact c;

			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImpactSpeculativeCollisionTriggerBase<TCollision, TContact> <>4__this;

			[Token(Token = "0x600120A")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600120B")]
			internal bool <processSpeculativeCollision>b__0(SpeculativeCollisionContact e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _maxCollisionsPerFrame;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _contactPointComparisonThreshold;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _contactPointLifetime;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<SpeculativeCollisionContact> continousCollisionContacts;

		[Token(Token = "0x170001D3")]
		public int MaxCollisionsPerFrame
		{
			[Token(Token = "0x60011FF")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001200")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public float ContactPointComparisonThreshold
		{
			[Token(Token = "0x6001201")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001202")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public int ContactPointLifetime
		{
			[Token(Token = "0x6001203")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001204")]
			set
			{
			}
		}

		[Token(Token = "0x6001205")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001206")]
		protected void processSpeculativeCollision(TCollision collision)
		{
		}

		[Token(Token = "0x6001207")]
		protected ImpactSpeculativeCollisionTriggerBase()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public abstract class ImpactVelocityCollisionTriggerBase : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _velocityChangeInfluence;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ImpactRigidbodyWrapper rigidbodyWrapper;

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xA17C1C", Offset = "0xA17C1C", VA = "0xA17C1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xA17C94", Offset = "0xA17C94", VA = "0xA17C94", Slot = "4")]
		protected override void buildInteractionData(IImpactObject target, ImpactCollisionWrapper collision, ImpactContactPoint contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float CompositionValue)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xA17B0C", Offset = "0xA17B0C", VA = "0xA17B0C")]
		protected ImpactVelocityCollisionTriggerBase()
		{
		}
	}
}
namespace Impact.TagLibrary
{
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x836E04", Offset = "0x836E04")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x836E04", Offset = "0x836E04")]
	public class ImpactTagLibrary : ImpactTagLibraryBase
	{
		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] _tagNames;

		[Token(Token = "0x170001D7")]
		public override string Item
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0xA16994", Offset = "0xA16994", VA = "0xA16994", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001210")]
			[Address(RVA = "0xA169D0", Offset = "0xA169D0", VA = "0xA169D0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xA16A48", Offset = "0xA16A48", VA = "0xA16A48")]
		public ImpactTagLibrary()
		{
		}
	}
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x836E7C", Offset = "0x836E7C")]
	public abstract class ImpactTagLibraryBase : ScriptableObject, IImpactTagLibrary
	{
		[Token(Token = "0x170001D8")]
		public abstract string Item
		{
			[Token(Token = "0x6001212")]
			get;
			[Token(Token = "0x6001213")]
			set;
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xA16AA4", Offset = "0xA16AA4", VA = "0xA16AA4")]
		protected ImpactTagLibraryBase()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public static class ImpactTagLibraryConstants
	{
		[Token(Token = "0x4001167")]
		public const int TagCount = 32;

		[Token(Token = "0x4001168")]
		public const string TagLibraryNotFoundErrorMessage = "Assign an Impact Tag Library to see tag names.";
	}
	[Token(Token = "0x200030B")]
	public static class ImpactTagLibraryExtensions
	{
		[Token(Token = "0x6001215")]
		[Address(RVA = "0xA16AAC", Offset = "0xA16AAC", VA = "0xA16AAC")]
		public static int IndexOf(this IImpactTagLibrary tagLibrary, string tagName)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x836EC4", Offset = "0x836EC4")]
	public interface IImpactTagLibrary
	{
		[Token(Token = "0x170001D9")]
		string Item
		{
			[Token(Token = "0x6001216")]
			get;
			[Token(Token = "0x6001217")]
			set;
		}
	}
}
namespace Impact.Objects
{
	[Token(Token = "0x200030D")]
	public abstract class ImpactObjectBase : MonoBehaviour, IImpactObject
	{
		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected int _priority;

		[Token(Token = "0x170001DA")]
		public int Priority
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0xA126A0", Offset = "0xA126A0", VA = "0xA126A0", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001219")]
			[Address(RVA = "0xA126A8", Offset = "0xA126A8", VA = "0xA126A8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public GameObject GameObject
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0xA126B0", Offset = "0xA126B0", VA = "0xA126B0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xA126B8", Offset = "0xA126B8", VA = "0xA126B8", Slot = "11")]
		public virtual VelocityData GetVelocityDataAtPoint(Vector3 point)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xA126C4", Offset = "0xA126C4", VA = "0xA126C4", Slot = "12")]
		public virtual Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600121D")]
		public abstract int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results);

		[Token(Token = "0x600121E")]
		public abstract IImpactMaterial GetPrimaryMaterial(Vector3 point);

		[Token(Token = "0x600121F")]
		public abstract IImpactMaterial GetPrimaryMaterial();

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xA12710", Offset = "0xA12710", VA = "0xA12710")]
		protected ImpactObjectBase()
		{
		}
	}
	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836EFC", Offset = "0x836EFC")]
	public class ImpactObjectRigidbody : ImpactObjectSingleMaterial
	{
		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D03C", Offset = "0x83D03C")]
		private ImpactRigidbodyWrapper <Rigidbody>k__BackingField;

		[Token(Token = "0x170001DC")]
		public ImpactRigidbodyWrapper Rigidbody
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0xA12718", Offset = "0xA12718", VA = "0xA12718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842B3C", Offset = "0x842B3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001222")]
			[Address(RVA = "0xA12720", Offset = "0xA12720", VA = "0xA12720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842B4C", Offset = "0x842B4C")]
			set
			{
			}
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xA12728", Offset = "0xA12728", VA = "0xA12728", Slot = "16")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xA129F4", Offset = "0xA129F4", VA = "0xA129F4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xA12AD8", Offset = "0xA12AD8", VA = "0xA12AD8", Slot = "11")]
		public override VelocityData GetVelocityDataAtPoint(Vector3 contactPoint)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xA12BA0", Offset = "0xA12BA0", VA = "0xA12BA0", Slot = "12")]
		public override Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xA12C18", Offset = "0xA12C18", VA = "0xA12C18")]
		public ImpactObjectRigidbody()
		{
		}
	}
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836F38", Offset = "0x836F38")]
	public class ImpactObjectRigidbodyCheap : ImpactObjectSingleMaterial
	{
		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D04C", Offset = "0x83D04C")]
		private ImpactRigidbodyWrapper <Rigidbody>k__BackingField;

		[Token(Token = "0x170001DD")]
		public ImpactRigidbodyWrapper Rigidbody
		{
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xA12C28", Offset = "0xA12C28", VA = "0xA12C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842B5C", Offset = "0x842B5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001229")]
			[Address(RVA = "0xA12C30", Offset = "0xA12C30", VA = "0xA12C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842B6C", Offset = "0x842B6C")]
			set
			{
			}
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xA12C38", Offset = "0xA12C38", VA = "0xA12C38", Slot = "16")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xA12CB8", Offset = "0xA12CB8", VA = "0xA12CB8", Slot = "11")]
		public override VelocityData GetVelocityDataAtPoint(Vector3 contactPoint)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xA12DD0", Offset = "0xA12DD0", VA = "0xA12DD0", Slot = "12")]
		public override Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xA12F38", Offset = "0xA12F38", VA = "0xA12F38")]
		public ImpactObjectRigidbodyCheap()
		{
		}
	}
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836F74", Offset = "0x836F74")]
	public class ImpactObjectRigidbodyChild : ImpactObjectSingleMaterial
	{
		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ImpactObjectRigidbody parent;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hasParent;

		[Token(Token = "0x170001DE")]
		public ImpactObjectRigidbody Parent
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0xA12F40", Offset = "0xA12F40", VA = "0xA12F40")]
			get
			{
				return null;
			}
			[Token(Token = "0x600122F")]
			[Address(RVA = "0xA12F48", Offset = "0xA12F48", VA = "0xA12F48")]
			set
			{
			}
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xA12FCC", Offset = "0xA12FCC", VA = "0xA12FCC", Slot = "16")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xA12FF0", Offset = "0xA12FF0", VA = "0xA12FF0")]
		public void RefreshParent()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xA13048", Offset = "0xA13048", VA = "0xA13048", Slot = "11")]
		public override VelocityData GetVelocityDataAtPoint(Vector3 contactPoint)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xA1318C", Offset = "0xA1318C", VA = "0xA1318C", Slot = "12")]
		public override Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xA132B8", Offset = "0xA132B8", VA = "0xA132B8")]
		public ImpactObjectRigidbodyChild()
		{
		}
	}
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836FB0", Offset = "0x836FB0")]
	public class ImpactObjectSingleMaterial : ImpactObjectBase
	{
		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactMaterialBase _material;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ImpactMaterialComposition[] cachedMaterialTypeComposition;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasMaterial;

		[Token(Token = "0x170001DF")]
		public ImpactMaterialBase Material
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xA132C0", Offset = "0xA132C0", VA = "0xA132C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xA132C8", Offset = "0xA132C8", VA = "0xA132C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xA127A8", Offset = "0xA127A8", VA = "0xA127A8", Slot = "16")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xA13364", Offset = "0xA13364", VA = "0xA13364", Slot = "13")]
		public override int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results)
		{
			return default(int);
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xA134B8", Offset = "0xA134B8", VA = "0xA134B8", Slot = "14")]
		public override IImpactMaterial GetPrimaryMaterial(Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xA134C8", Offset = "0xA134C8", VA = "0xA134C8", Slot = "15")]
		public override IImpactMaterial GetPrimaryMaterial()
		{
			return null;
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xA12C20", Offset = "0xA12C20", VA = "0xA12C20")]
		public ImpactObjectSingleMaterial()
		{
		}
	}
	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x836FEC", Offset = "0x836FEC")]
	public class ImpactTerrain : ImpactObjectBase
	{
		[Token(Token = "0x2000313")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x837028", Offset = "0x837028")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IImpactMaterial m;

			[Token(Token = "0x6001249")]
			[Address(RVA = "0x1BEF470", Offset = "0x1BEF470", VA = "0x1BEF470")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x600124A")]
			[Address(RVA = "0x1BEF478", Offset = "0x1BEF478", VA = "0x1BEF478")]
			internal bool <GetMaterialCompositionNonAlloc>b__1(ImpactMaterialComposition p)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x837038", Offset = "0x837038")]
		private sealed class <>c
		{
			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<ImpactMaterialComposition> <>9__16_0;

			[Token(Token = "0x600124C")]
			[Address(RVA = "0x1BEF438", Offset = "0x1BEF438", VA = "0x1BEF438")]
			public <>c()
			{
			}

			[Token(Token = "0x600124D")]
			[Address(RVA = "0x1BEF440", Offset = "0x1BEF440", VA = "0x1BEF440")]
			internal int <GetMaterialCompositionNonAlloc>b__16_0(ImpactMaterialComposition a, ImpactMaterialComposition b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Terrain _terrain;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<ImpactMaterialBase> _terrainMaterials;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[,,] cachedAlphamaps;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ImpactMaterialComposition[] compositionBuffer;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hasTerrain;

		[Token(Token = "0x170001E0")]
		public Terrain Terrain
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xA16BA4", Offset = "0xA16BA4", VA = "0xA16BA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xA16BAC", Offset = "0xA16BAC", VA = "0xA16BAC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public TerrainData TerrainData
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0xA16C30", Offset = "0xA16C30", VA = "0xA16C30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		public List<ImpactMaterialBase> TerrainMaterials
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0xA16CC4", Offset = "0xA16CC4", VA = "0xA16CC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xA16CCC", Offset = "0xA16CCC", VA = "0xA16CCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xA16ECC", Offset = "0xA16ECC", VA = "0xA16ECC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xA16D48", Offset = "0xA16D48", VA = "0xA16D48")]
		public void RefreshCachedAlphamaps()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xA16F24", Offset = "0xA16F24", VA = "0xA16F24")]
		public void SyncTerrainLayersAndMaterialsList()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xA17100", Offset = "0xA17100", VA = "0xA17100", Slot = "13")]
		public override int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results)
		{
			return default(int);
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xA17770", Offset = "0xA17770", VA = "0xA17770", Slot = "14")]
		public override IImpactMaterial GetPrimaryMaterial(Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xA17964", Offset = "0xA17964", VA = "0xA17964", Slot = "15")]
		public override IImpactMaterial GetPrimaryMaterial()
		{
			return null;
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xA17638", Offset = "0xA17638", VA = "0xA17638")]
		private Vector2Int getAlphamapIndicesAtPoint(Vector3 point)
		{
			return default(Vector2Int);
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xA179D4", Offset = "0xA179D4", VA = "0xA179D4")]
		public ImpactTerrain()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public interface IImpactObject
	{
		[Token(Token = "0x170001E3")]
		int Priority
		{
			[Token(Token = "0x600124E")]
			get;
		}

		[Token(Token = "0x170001E4")]
		GameObject GameObject
		{
			[Token(Token = "0x600124F")]
			get;
		}

		[Token(Token = "0x6001250")]
		int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results);

		[Token(Token = "0x6001251")]
		IImpactMaterial GetPrimaryMaterial(Vector3 point);

		[Token(Token = "0x6001252")]
		IImpactMaterial GetPrimaryMaterial();

		[Token(Token = "0x6001253")]
		VelocityData GetVelocityDataAtPoint(Vector3 contactPoint);

		[Token(Token = "0x6001254")]
		Vector3 GetContactPointRelativePosition(Vector3 point);
	}
}
namespace Impact.Materials
{
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x837048", Offset = "0x837048")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x837048", Offset = "0x837048")]
	public class ImpactMaterial : ImpactMaterialBase
	{
		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<ImpactMaterialInteractionSet> _interactionSets;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ImpactTagMask _fallbackTagMask;

		[Token(Token = "0x170001E5")]
		public ImpactTagMask FallbackTagMask
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xA11DC4", Offset = "0xA11DC4", VA = "0xA11DC4")]
			get
			{
				return default(ImpactTagMask);
			}
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xA11DD0", Offset = "0xA11DD0", VA = "0xA11DD0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public int InteractionSetCount
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0xA12008", Offset = "0xA12008", VA = "0xA12008")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E7")]
		public ImpactMaterialInteractionSet Item
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xA12054", Offset = "0xA12054", VA = "0xA12054")]
			get
			{
				return null;
			}
			[Token(Token = "0x600125C")]
			[Address(RVA = "0xA120C8", Offset = "0xA120C8", VA = "0xA120C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001257")]
		public override int GetInteractionResultsNonAlloc<T>(T interactionData, IInteractionResult[] results)
		{
			return default(int);
		}

		[Token(Token = "0x6001258")]
		private void populateCollisionResultsForInteractionSet<T>(T interactionData, ImpactMaterialInteractionSet interactionSet, ImpactTagMask tagMask, IInteractionResult[] results, ref int count) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xA11DD8", Offset = "0xA11DD8", VA = "0xA11DD8", Slot = "8")]
		public override void Preload()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xA12134", Offset = "0xA12134", VA = "0xA12134")]
		public void AddInteractionSet(ImpactMaterialInteractionSet item)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xA12198", Offset = "0xA12198", VA = "0xA12198")]
		public void RemoveInteractionSet(int index)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xA121FC", Offset = "0xA121FC", VA = "0xA121FC")]
		public void ClearInteractionSets()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xA12250", Offset = "0xA12250", VA = "0xA12250")]
		public ImpactMaterial()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public abstract class ImpactMaterialBase : ScriptableObject, IImpactMaterial
	{
		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ImpactTagLibraryBase _tagLibrary;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactTagMask _materialTagsMask;

		[Token(Token = "0x170001E8")]
		public ImpactTagLibraryBase TagLibrary
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0xA122D0", Offset = "0xA122D0", VA = "0xA122D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xA122D8", Offset = "0xA122D8", VA = "0xA122D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public ImpactTagMask MaterialTagsMask
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xA122E0", Offset = "0xA122E0", VA = "0xA122E0", Slot = "4")]
			get
			{
				return default(ImpactTagMask);
			}
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xA122EC", Offset = "0xA122EC", VA = "0xA122EC")]
			set
			{
			}
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xA122F4", Offset = "0xA122F4", VA = "0xA122F4")]
		public ImpactMaterialComposition[] GetSingleMaterialComposition()
		{
			return null;
		}

		[Token(Token = "0x6001266")]
		public abstract int GetInteractionResultsNonAlloc<T>(T interactionData, IInteractionResult[] results) where T : IInteractionData;

		[Token(Token = "0x6001267")]
		public abstract void Preload();

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xA122C8", Offset = "0xA122C8", VA = "0xA122C8")]
		protected ImpactMaterialBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8370C0", Offset = "0x8370C0")]
	public class ImpactMaterialInteractionSet
	{
		[Serializable]
		[Token(Token = "0x2000319")]
		public struct TagMaskFilter
		{
			[Token(Token = "0x4001181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImpactTagMask TagMask;

			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool ExactMatch;

			[Token(Token = "0x6001277")]
			[Address(RVA = "0x1BEF3B4", Offset = "0x1BEF3B4", VA = "0x1BEF3B4")]
			public bool CompareTagMask(ImpactTagMask tagMask)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TagMaskFilter _includeTagsFilter;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TagMaskFilter _excludeTagsFilter;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<ImpactInteractionBase> _interactions;

		[Token(Token = "0x170001EA")]
		public string Name
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0xA12374", Offset = "0xA12374", VA = "0xA12374")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126A")]
			[Address(RVA = "0xA1237C", Offset = "0xA1237C", VA = "0xA1237C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public TagMaskFilter IncludeTagsFilter
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0xA12384", Offset = "0xA12384", VA = "0xA12384")]
			get
			{
				return default(TagMaskFilter);
			}
			[Token(Token = "0x600126C")]
			[Address(RVA = "0xA12398", Offset = "0xA12398", VA = "0xA12398")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public TagMaskFilter ExcludeTagsFilter
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0xA123AC", Offset = "0xA123AC", VA = "0xA123AC")]
			get
			{
				return default(TagMaskFilter);
			}
			[Token(Token = "0x600126E")]
			[Address(RVA = "0xA123C0", Offset = "0xA123C0", VA = "0xA123C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public int InteractionCount
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0xA123D4", Offset = "0xA123D4", VA = "0xA123D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EE")]
		public ImpactInteractionBase Item
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0xA12420", Offset = "0xA12420", VA = "0xA12420")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001271")]
			[Address(RVA = "0xA12494", Offset = "0xA12494", VA = "0xA12494")]
			set
			{
			}
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xA12500", Offset = "0xA12500", VA = "0xA12500")]
		public bool CompareTagMaskFilters(ImpactTagMask tagMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xA11EEC", Offset = "0xA11EEC", VA = "0xA11EEC")]
		public void Preload()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xA12560", Offset = "0xA12560", VA = "0xA12560")]
		public void AddInteraction(ImpactInteractionBase impactInteraction)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xA125C4", Offset = "0xA125C4", VA = "0xA125C4")]
		public void RemoveInteraction(int index)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xA12628", Offset = "0xA12628", VA = "0xA12628")]
		public ImpactMaterialInteractionSet()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public interface IImpactMaterial
	{
		[Token(Token = "0x170001EF")]
		ImpactTagMask MaterialTagsMask
		{
			[Token(Token = "0x6001278")]
			get;
		}

		[Token(Token = "0x6001279")]
		int GetInteractionResultsNonAlloc<T>(T data, IInteractionResult[] results) where T : IInteractionData;

		[Token(Token = "0x600127A")]
		void Preload();
	}
}
namespace Impact.Interactions
{
	[Token(Token = "0x200031B")]
	public enum InteractionIntervalType
	{
		[Token(Token = "0x4001184")]
		Time,
		[Token(Token = "0x4001185")]
		Distance
	}
	[Token(Token = "0x200031C")]
	public abstract class ImpactInteractionBase : ScriptableObject, IImpactInteraction
	{
		[Token(Token = "0x600127B")]
		public abstract IInteractionResult GetInteractionResult<T>(T interactionData) where T : IInteractionData;

		[Token(Token = "0x600127C")]
		public abstract void Preload();

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xA0E4E0", Offset = "0xA0E4E0", VA = "0xA0E4E0")]
		protected ImpactInteractionBase()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public static class ImpactInteractionUtilities
	{
		[Token(Token = "0x600127E")]
		public static float GetCollisionIntensity<T>(T interactionData, float collisionNormalInfluence) where T : IInteractionData
		{
			return default(float);
		}

		[Token(Token = "0x600127F")]
		public static bool GetKeyAndValidate<T>(T interactionData, ImpactInteractionBase interaction, out long key) where T : IInteractionData
		{
			return default(bool);
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xA107A0", Offset = "0xA107A0", VA = "0xA107A0")]
		private static long cantorPairing(long k1, long k2)
		{
			return default(long);
		}
	}
	[Token(Token = "0x200031E")]
	public interface IImpactInteraction
	{
		[Token(Token = "0x6001281")]
		IInteractionResult GetInteractionResult<T>(T interactionData) where T : IInteractionData;

		[Token(Token = "0x6001282")]
		void Preload();
	}
	[Token(Token = "0x200031F")]
	public interface IInteractionResult : IDisposable
	{
		[Token(Token = "0x170001F0")]
		bool IsValid
		{
			[Token(Token = "0x6001283")]
			get;
		}

		[Token(Token = "0x6001284")]
		void Process(IImpactObject parent);
	}
	[Token(Token = "0x2000320")]
	public interface IContinuousInteractionResult : IInteractionResult, IDisposable
	{
		[Token(Token = "0x170001F1")]
		long Key
		{
			[Token(Token = "0x6001285")]
			get;
			[Token(Token = "0x6001286")]
			set;
		}

		[Token(Token = "0x170001F2")]
		bool IsAlive
		{
			[Token(Token = "0x6001287")]
			get;
		}

		[Token(Token = "0x6001288")]
		void FixedUpdate();

		[Token(Token = "0x6001289")]
		void KeepAlive(IInteractionResult newResult);
	}
	[Token(Token = "0x2000321")]
	public static class InteractionResultExtensions
	{
		[Token(Token = "0x600128A")]
		[Address(RVA = "0xA1B280", Offset = "0xA1B280", VA = "0xA1B280")]
		public static int GetPriority(int? priorityOverride, IImpactObject obj)
		{
			return default(int);
		}
	}
}
namespace Impact.Interactions.Particles
{
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8370F8", Offset = "0x8370F8")]
	public class ImpactParticleInteraction : ImpactInteractionBase
	{
		[Token(Token = "0x4001186")]
		private const string interactionResultPoolKey = "ParticleInteractionResult";

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _minimumVelocity;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _collisionNormalInfluence;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactParticlesBase _particlePrefab;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _isParticleLooped;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Range _emissionInterval;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private InteractionIntervalType _emissionIntervalType;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _emitOnCollision;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool _emitOnSlide;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		private bool _emitOnRoll;

		[Token(Token = "0x170001F3")]
		public float MinimumVelocity
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0xA14E2C", Offset = "0xA14E2C", VA = "0xA14E2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600128C")]
			[Address(RVA = "0xA14E34", Offset = "0xA14E34", VA = "0xA14E34")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public float CollisionNormalInfluence
		{
			[Token(Token = "0x600128D")]
			[Address(RVA = "0xA14E3C", Offset = "0xA14E3C", VA = "0xA14E3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600128E")]
			[Address(RVA = "0xA14E44", Offset = "0xA14E44", VA = "0xA14E44")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public ImpactParticlesBase ParticlePrefab
		{
			[Token(Token = "0x600128F")]
			[Address(RVA = "0xA14E4C", Offset = "0xA14E4C", VA = "0xA14E4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001290")]
			[Address(RVA = "0xA14E54", Offset = "0xA14E54", VA = "0xA14E54")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public bool IsParticleLooped
		{
			[Token(Token = "0x6001291")]
			[Address(RVA = "0xA14E5C", Offset = "0xA14E5C", VA = "0xA14E5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001292")]
			[Address(RVA = "0xA14E64", Offset = "0xA14E64", VA = "0xA14E64")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public Range EmissionInterval
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0xA14E70", Offset = "0xA14E70", VA = "0xA14E70")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6001294")]
			[Address(RVA = "0xA14E78", Offset = "0xA14E78", VA = "0xA14E78")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public InteractionIntervalType EmissionIntervalType
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0xA14E80", Offset = "0xA14E80", VA = "0xA14E80")]
			get
			{
				return default(InteractionIntervalType);
			}
			[Token(Token = "0x6001296")]
			[Address(RVA = "0xA14E88", Offset = "0xA14E88", VA = "0xA14E88")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public bool EmitOnCollision
		{
			[Token(Token = "0x6001297")]
			[Address(RVA = "0xA14E90", Offset = "0xA14E90", VA = "0xA14E90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001298")]
			[Address(RVA = "0xA14E98", Offset = "0xA14E98", VA = "0xA14E98")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public bool EmitOnSlide
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0xA14EA4", Offset = "0xA14EA4", VA = "0xA14EA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600129A")]
			[Address(RVA = "0xA14EAC", Offset = "0xA14EAC", VA = "0xA14EAC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public bool EmitOnRoll
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0xA14EB8", Offset = "0xA14EB8", VA = "0xA14EB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600129C")]
			[Address(RVA = "0xA14EC0", Offset = "0xA14EC0", VA = "0xA14EC0")]
			set
			{
			}
		}

		[Token(Token = "0x600129D")]
		public override IInteractionResult GetInteractionResult<T>(T interactionData)
		{
			return null;
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xA14ECC", Offset = "0xA14ECC", VA = "0xA14ECC")]
		private bool shouldEmit(int collisionParameterType)
		{
			return default(bool);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xA14F08", Offset = "0xA14F08", VA = "0xA14F08", Slot = "7")]
		public override void Preload()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xA15074", Offset = "0xA15074", VA = "0xA15074")]
		public ImpactParticleInteraction()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class ImpactParticlePool : Impact.Utility.ObjectPool.ObjectPool<ImpactParticlesBase>
	{
		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectPoolGroup<ImpactParticlePool, ImpactParticlesBase> poolGroup;

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xA14FA0", Offset = "0xA14FA0", VA = "0xA14FA0")]
		public static void PreloadPoolForParticle(ImpactParticlesBase template)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xA150D8", Offset = "0xA150D8", VA = "0xA150D8")]
		public static ImpactParticlesBase EmitParticles(ParticleInteractionResult interactionResult, Vector3 point, Vector3 normal, int priority)
		{
			return null;
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xA152B0", Offset = "0xA152B0", VA = "0xA152B0", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xA1535C", Offset = "0xA1535C", VA = "0xA1535C")]
		public ImpactParticlePool()
		{
		}
	}
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x83714C", Offset = "0x83714C")]
	public class ImpactParticles : ImpactParticlesBase
	{
		[Token(Token = "0x2000325")]
		public enum ParticleRotationMode
		{
			[Token(Token = "0x4001197")]
			AlignToNormal,
			[Token(Token = "0x4001198")]
			AlignToVelocity,
			[Token(Token = "0x4001199")]
			AlignToNormalAndVelocity,
			[Token(Token = "0x400119A")]
			NoRotation
		}

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleRotationMode _rotationMode;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private AlignmentAxis _axis;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ObjectPoolFallbackMode _poolFallbackMode;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem[] particles;

		[Token(Token = "0x170001FC")]
		public ParticleRotationMode RotationMode
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0xA15430", Offset = "0xA15430", VA = "0xA15430")]
			get
			{
				return default(ParticleRotationMode);
			}
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0xA15438", Offset = "0xA15438", VA = "0xA15438")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public AlignmentAxis Axis
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0xA15440", Offset = "0xA15440", VA = "0xA15440")]
			get
			{
				return default(AlignmentAxis);
			}
			[Token(Token = "0x60012A9")]
			[Address(RVA = "0xA15448", Offset = "0xA15448", VA = "0xA15448")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public override int PoolSize
		{
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0xA15450", Offset = "0xA15450", VA = "0xA15450", Slot = "7")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0xA15458", Offset = "0xA15458", VA = "0xA15458", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public override ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0xA15460", Offset = "0xA15460", VA = "0xA15460", Slot = "9")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0xA15468", Offset = "0xA15468", VA = "0xA15468", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xA15470", Offset = "0xA15470", VA = "0xA15470")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xA154C4", Offset = "0xA154C4", VA = "0xA154C4", Slot = "11")]
		public override void EmitParticles(ParticleInteractionResult interactionResult, Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xA1558C", Offset = "0xA1558C", VA = "0xA1558C", Slot = "12")]
		public override void UpdateTransform(Vector3 point, Vector3 normal, Vector3 velocity)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xA156DC", Offset = "0xA156DC", VA = "0xA156DC", Slot = "13")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xA15748", Offset = "0xA15748", VA = "0xA15748")]
		private void Update()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xA157F4", Offset = "0xA157F4", VA = "0xA157F4")]
		public ImpactParticles()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public abstract class ImpactParticlesBase : PooledObject
	{
		[Token(Token = "0x17000200")]
		public abstract int PoolSize
		{
			[Token(Token = "0x60012B4")]
			get;
			[Token(Token = "0x60012B5")]
			set;
		}

		[Token(Token = "0x17000201")]
		public abstract ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x60012B6")]
			get;
			[Token(Token = "0x60012B7")]
			set;
		}

		[Token(Token = "0x60012B8")]
		public abstract void EmitParticles(ParticleInteractionResult interactionResult, Vector3 point, Vector3 normal);

		[Token(Token = "0x60012B9")]
		public abstract void UpdateTransform(Vector3 point, Vector3 normal, Vector3 velocity);

		[Token(Token = "0x60012BA")]
		public abstract void Stop();

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xA15810", Offset = "0xA15810", VA = "0xA15810")]
		protected ImpactParticlesBase()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class ParticleInteractionResult : IContinuousInteractionResult, IInteractionResult, IDisposable, IPoolable
	{
		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D1EC", Offset = "0x83D1EC")]
		private InteractionData <OriginalData>k__BackingField;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ImpactParticlesBase ParticlesTemplate;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool IsParticleLooped;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Range EmissionInterval;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public InteractionIntervalType EmissionIntervalType;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D1FC", Offset = "0x83D1FC")]
		private long <Key>k__BackingField;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D20C", Offset = "0x83D20C")]
		private bool <IsAlive>k__BackingField;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D21C", Offset = "0x83D21C")]
		private ImpactParticlesBase <Particles>k__BackingField;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float intervalCounter;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float currentEmissionIntervalTarget;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 previousEmissionPosition;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IImpactObject parent;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isAvailable;

		[Token(Token = "0x17000202")]
		public InteractionData OriginalData
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0xBF8EC4", Offset = "0xBF8EC4", VA = "0xBF8EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842B9C", Offset = "0x842B9C")]
			get
			{
				return default(InteractionData);
			}
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0xBF8ED4", Offset = "0xBF8ED4", VA = "0xBF8ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842BAC", Offset = "0x842BAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public long Key
		{
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0xBF8EF0", Offset = "0xBF8EF0", VA = "0xBF8EF0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842BBC", Offset = "0x842BBC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0xBF8EF8", Offset = "0xBF8EF8", VA = "0xBF8EF8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842BCC", Offset = "0x842BCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public bool IsValid
		{
			[Token(Token = "0x60012C2")]
			[Address(RVA = "0xBF8F00", Offset = "0xBF8F00", VA = "0xBF8F00", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000205")]
		public bool IsAlive
		{
			[Token(Token = "0x60012C3")]
			[Address(RVA = "0xBF8F6C", Offset = "0xBF8F6C", VA = "0xBF8F6C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842BDC", Offset = "0x842BDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xBF8F74", Offset = "0xBF8F74", VA = "0xBF8F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842BEC", Offset = "0x842BEC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public ImpactParticlesBase Particles
		{
			[Token(Token = "0x60012C5")]
			[Address(RVA = "0xBF8F80", Offset = "0xBF8F80", VA = "0xBF8F80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842BFC", Offset = "0x842BFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0xBF8F88", Offset = "0xBF8F88", VA = "0xBF8F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842C0C", Offset = "0x842C0C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000015")]
		public static event Action<ParticleInteractionResult> OnInteractionProcessed
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0xBF8D4C", Offset = "0xBF8D4C", VA = "0xBF8D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842B7C", Offset = "0x842B7C")]
			add
			{
			}
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0xBF8E08", Offset = "0xBF8E08", VA = "0xBF8E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842B8C", Offset = "0x842B8C")]
			remove
			{
			}
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xBF8F90", Offset = "0xBF8F90", VA = "0xBF8F90", Slot = "10")]
		public void Process(IImpactObject parent)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xBF9190", Offset = "0xBF9190", VA = "0xBF9190", Slot = "7")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xBF9198", Offset = "0xBF9198", VA = "0xBF9198", Slot = "8")]
		public void KeepAlive(IInteractionResult newResult)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xBF90E8", Offset = "0xBF90E8", VA = "0xBF90E8", Slot = "11")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xBF9434", Offset = "0xBF9434", VA = "0xBF9434", Slot = "12")]
		public void Retrieve()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xBF9428", Offset = "0xBF9428", VA = "0xBF9428", Slot = "13")]
		public void MakeAvailable()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xBF943C", Offset = "0xBF943C", VA = "0xBF943C", Slot = "14")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xBF9444", Offset = "0xBF9444", VA = "0xBF9444")]
		public ParticleInteractionResult()
		{
		}
	}
}
namespace Impact.Interactions.Decals
{
	[Token(Token = "0x2000328")]
	public class DecalInteractionResult : IContinuousInteractionResult, IInteractionResult, IDisposable, IPoolable
	{
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D23C", Offset = "0x83D23C")]
		private InteractionData <OriginalData>k__BackingField;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ImpactDecalBase DecalTemplate;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Range CreationInterval;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionIntervalType CreationIntervalType;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D24C", Offset = "0x83D24C")]
		private long <Key>k__BackingField;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D25C", Offset = "0x83D25C")]
		private bool <IsAlive>k__BackingField;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D26C", Offset = "0x83D26C")]
		private ImpactDecalBase <Decal>k__BackingField;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float intervalCounter;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float currentCreationIntervalTarget;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 previousCreationPosition;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IImpactObject parent;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isAvailable;

		[Token(Token = "0x17000207")]
		public InteractionData OriginalData
		{
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0xBC0B24", Offset = "0xBC0B24", VA = "0xBC0B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842C3C", Offset = "0x842C3C")]
			get
			{
				return default(InteractionData);
			}
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xBC0B34", Offset = "0xBC0B34", VA = "0xBC0B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842C4C", Offset = "0x842C4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public long Key
		{
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0xBC0B50", Offset = "0xBC0B50", VA = "0xBC0B50", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842C5C", Offset = "0x842C5C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0xBC0B58", Offset = "0xBC0B58", VA = "0xBC0B58", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842C6C", Offset = "0x842C6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public bool IsValid
		{
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0xBC0B60", Offset = "0xBC0B60", VA = "0xBC0B60", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020A")]
		public bool IsAlive
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0xBC0BCC", Offset = "0xBC0BCC", VA = "0xBC0BCC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842C7C", Offset = "0x842C7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012D7")]
			[Address(RVA = "0xBC0BD4", Offset = "0xBC0BD4", VA = "0xBC0BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842C8C", Offset = "0x842C8C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public ImpactDecalBase Decal
		{
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xBC0BE0", Offset = "0xBC0BE0", VA = "0xBC0BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842C9C", Offset = "0x842C9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xBC0BE8", Offset = "0xBC0BE8", VA = "0xBC0BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842CAC", Offset = "0x842CAC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event Action<DecalInteractionResult> OnInteractionProcessed
		{
			[Token(Token = "0x60012CF")]
			[Address(RVA = "0xBC09AC", Offset = "0xBC09AC", VA = "0xBC09AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842C1C", Offset = "0x842C1C")]
			add
			{
			}
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0xBC0A68", Offset = "0xBC0A68", VA = "0xBC0A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842C2C", Offset = "0x842C2C")]
			remove
			{
			}
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xBC0BF0", Offset = "0xBC0BF0", VA = "0xBC0BF0", Slot = "10")]
		public void Process(IImpactObject parent)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xBC0D40", Offset = "0xBC0D40", VA = "0xBC0D40", Slot = "7")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xBC0D48", Offset = "0xBC0D48", VA = "0xBC0D48", Slot = "8")]
		public void KeepAlive(IInteractionResult newResult)
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xBC0D2C", Offset = "0xBC0D2C", VA = "0xBC0D2C", Slot = "11")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xBC0F7C", Offset = "0xBC0F7C", VA = "0xBC0F7C", Slot = "12")]
		public void Retrieve()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xBC0F70", Offset = "0xBC0F70", VA = "0xBC0F70", Slot = "13")]
		public void MakeAvailable()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xBC0F84", Offset = "0xBC0F84", VA = "0xBC0F84", Slot = "14")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xBC0F8C", Offset = "0xBC0F8C", VA = "0xBC0F8C")]
		public DecalInteractionResult()
		{
		}
	}
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x837184", Offset = "0x837184")]
	public class ImpactDecal : ImpactDecalBase
	{
		[Token(Token = "0x200032A")]
		public enum DecalRotationMode
		{
			[Token(Token = "0x40011BE")]
			AlignToNormalRandom,
			[Token(Token = "0x40011BF")]
			AlignToNormalAndVelocity,
			[Token(Token = "0x40011C0")]
			AlignToNormalOnly
		}

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _decalDistance;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private DecalRotationMode _rotationMode;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AlignmentAxis _axis;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _parentToObject;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private ObjectPoolFallbackMode _poolFallbackMode;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ImpactDecalManager parentObject;

		[Token(Token = "0x1700020C")]
		public override int PoolSize
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0xA0F854", Offset = "0xA0F854", VA = "0xA0F854", Slot = "7")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0xA0F85C", Offset = "0xA0F85C", VA = "0xA0F85C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public override ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0xA0F864", Offset = "0xA0F864", VA = "0xA0F864", Slot = "9")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0xA0F86C", Offset = "0xA0F86C", VA = "0xA0F86C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public float DecalDistance
		{
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0xA0F874", Offset = "0xA0F874", VA = "0xA0F874")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0xA0F87C", Offset = "0xA0F87C", VA = "0xA0F87C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public DecalRotationMode RotationMode
		{
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0xA0F884", Offset = "0xA0F884", VA = "0xA0F884")]
			get
			{
				return default(DecalRotationMode);
			}
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0xA0F88C", Offset = "0xA0F88C", VA = "0xA0F88C")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public AlignmentAxis Axis
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0xA0F894", Offset = "0xA0F894", VA = "0xA0F894")]
			get
			{
				return default(AlignmentAxis);
			}
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0xA0F89C", Offset = "0xA0F89C", VA = "0xA0F89C")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public bool ParentToObject
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0xA0F8A4", Offset = "0xA0F8A4", VA = "0xA0F8A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0xA0F8AC", Offset = "0xA0F8AC", VA = "0xA0F8AC")]
			set
			{
			}
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xA0F8B8", Offset = "0xA0F8B8", VA = "0xA0F8B8", Slot = "11")]
		public override void SetupDecal(DecalInteractionResult interactionResult, Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xA0FB08", Offset = "0xA0FB08", VA = "0xA0FB08")]
		private void rotateRandom()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xA0FBEC", Offset = "0xA0FBEC", VA = "0xA0FBEC", Slot = "4")]
		public override void Retrieve(int priority)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xA0FCF0", Offset = "0xA0FCF0", VA = "0xA0FCF0", Slot = "5")]
		public override void MakeAvailable()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xA0FD80", Offset = "0xA0FD80", VA = "0xA0FD80")]
		public ImpactDecal()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public abstract class ImpactDecalBase : PooledObject
	{
		[Token(Token = "0x17000212")]
		public abstract int PoolSize
		{
			[Token(Token = "0x60012F3")]
			get;
			[Token(Token = "0x60012F4")]
			set;
		}

		[Token(Token = "0x17000213")]
		public abstract ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x60012F5")]
			get;
			[Token(Token = "0x60012F6")]
			set;
		}

		[Token(Token = "0x60012F7")]
		public abstract void SetupDecal(DecalInteractionResult interactionResult, Vector3 point, Vector3 normal);

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xA0FDA8", Offset = "0xA0FDA8", VA = "0xA0FDA8")]
		protected ImpactDecalBase()
		{
		}
	}
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8371BC", Offset = "0x8371BC")]
	public class ImpactDecalInteraction : ImpactInteractionBase
	{
		[Token(Token = "0x40011C1")]
		private const string interactionResultPoolKey = "DecalInteractionResult";

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _minimumVelocity;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _collisionNormalInfluence;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactDecalBase _decalPrefab;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Range _creationInterval;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InteractionIntervalType _creationIntervalType;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _createOnCollision;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool _createOnSlide;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		private bool _createOnRoll;

		[Token(Token = "0x17000214")]
		public float MinimumVelocity
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0xA0FDB0", Offset = "0xA0FDB0", VA = "0xA0FDB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0xA0FDB8", Offset = "0xA0FDB8", VA = "0xA0FDB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public float CollisionNormalInfluence
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0xA0FDC0", Offset = "0xA0FDC0", VA = "0xA0FDC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0xA0FDC8", Offset = "0xA0FDC8", VA = "0xA0FDC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public ImpactDecalBase DecalPrefab
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0xA0FDD0", Offset = "0xA0FDD0", VA = "0xA0FDD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0xA0FDD8", Offset = "0xA0FDD8", VA = "0xA0FDD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public Range CreationInterval
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0xA0FDE0", Offset = "0xA0FDE0", VA = "0xA0FDE0")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6001300")]
			[Address(RVA = "0xA0FDE8", Offset = "0xA0FDE8", VA = "0xA0FDE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public InteractionIntervalType CreationIntervalType
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0xA0FDF0", Offset = "0xA0FDF0", VA = "0xA0FDF0")]
			get
			{
				return default(InteractionIntervalType);
			}
			[Token(Token = "0x6001302")]
			[Address(RVA = "0xA0FDF8", Offset = "0xA0FDF8", VA = "0xA0FDF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public bool CreateOnCollision
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0xA0FE00", Offset = "0xA0FE00", VA = "0xA0FE00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001304")]
			[Address(RVA = "0xA0FE08", Offset = "0xA0FE08", VA = "0xA0FE08")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public bool CreateOnSlide
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0xA0FE14", Offset = "0xA0FE14", VA = "0xA0FE14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001306")]
			[Address(RVA = "0xA0FE1C", Offset = "0xA0FE1C", VA = "0xA0FE1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public bool CreateOnRoll
		{
			[Token(Token = "0x6001307")]
			[Address(RVA = "0xA0FE28", Offset = "0xA0FE28", VA = "0xA0FE28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001308")]
			[Address(RVA = "0xA0FE30", Offset = "0xA0FE30", VA = "0xA0FE30")]
			set
			{
			}
		}

		[Token(Token = "0x6001309")]
		public override IInteractionResult GetInteractionResult<T>(T interactionData)
		{
			return null;
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xA0FE3C", Offset = "0xA0FE3C", VA = "0xA0FE3C")]
		private bool shouldEmit(int collisionParameterType)
		{
			return default(bool);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xA0FE78", Offset = "0xA0FE78", VA = "0xA0FE78", Slot = "7")]
		public override void Preload()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xA0FFE4", Offset = "0xA0FFE4", VA = "0xA0FFE4")]
		public ImpactDecalInteraction()
		{
		}
	}
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x837210", Offset = "0x837210")]
	public class ImpactDecalManager : MonoBehaviour
	{
		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool suppressDestroyEvent;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ImpactDecalBase> attachedDecals;

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xA0FB88", Offset = "0xA0FB88", VA = "0xA0FB88")]
		public void AddDecal(ImpactDecalBase impactDecal)
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xA0FC8C", Offset = "0xA0FC8C", VA = "0xA0FC8C")]
		public void RemoveDecal(ImpactDecalBase impactDecal)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xA10044", Offset = "0xA10044", VA = "0xA10044")]
		public void ReleaseAllDecals()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xA100D8", Offset = "0xA100D8", VA = "0xA100D8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xA100E4", Offset = "0xA100E4", VA = "0xA100E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xA100F4", Offset = "0xA100F4", VA = "0xA100F4")]
		public ImpactDecalManager()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class ImpactDecalPool : Impact.Utility.ObjectPool.ObjectPool<ImpactDecalBase>
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectPoolGroup<ImpactDecalPool, ImpactDecalBase> poolGroup;

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xA0FF10", Offset = "0xA0FF10", VA = "0xA0FF10")]
		public static void PreloadPoolForDecal(ImpactDecalBase template)
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xA1016C", Offset = "0xA1016C", VA = "0xA1016C")]
		public static ImpactDecalBase CreateDecal(DecalInteractionResult collisionResult, Vector3 point, Vector3 normal)
		{
			return null;
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xA10334", Offset = "0xA10334", VA = "0xA10334")]
		public static void ReturnAllDecalsToPools()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xA103B8", Offset = "0xA103B8", VA = "0xA103B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xA10474", Offset = "0xA10474", VA = "0xA10474", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xA105B0", Offset = "0xA105B0", VA = "0xA105B0")]
		private void sceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xA106CC", Offset = "0xA106CC", VA = "0xA106CC")]
		public ImpactDecalPool()
		{
		}
	}
}
namespace Impact.Interactions.Audio
{
	[Token(Token = "0x200032F")]
	public class AudioInteractionResult : IContinuousInteractionResult, IInteractionResult, IDisposable, IPoolable
	{
		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D36C", Offset = "0x83D36C")]
		private InteractionData <OriginalData>k__BackingField;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D37C", Offset = "0x83D37C")]
		private long <Key>k__BackingField;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ImpactAudioSourceBase AudioSourceTemplate;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip AudioClip;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool LoopAudio;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float Volume;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float Pitch;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ImpactAudioInteraction Interaction;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D38C", Offset = "0x83D38C")]
		private ImpactAudioSourceBase <AudioSource>k__BackingField;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float targetVolume;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float currentVolume;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float targetPitch;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float currentPitch;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IImpactObject parent;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isAvailable;

		[Token(Token = "0x1700021C")]
		public InteractionData OriginalData
		{
			[Token(Token = "0x600131D")]
			[Address(RVA = "0xB1E88C", Offset = "0xB1E88C", VA = "0xB1E88C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842CDC", Offset = "0x842CDC")]
			get
			{
				return default(InteractionData);
			}
			[Token(Token = "0x600131E")]
			[Address(RVA = "0xB1E89C", Offset = "0xB1E89C", VA = "0xB1E89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842CEC", Offset = "0x842CEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public long Key
		{
			[Token(Token = "0x600131F")]
			[Address(RVA = "0xB1E8B8", Offset = "0xB1E8B8", VA = "0xB1E8B8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842CFC", Offset = "0x842CFC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001320")]
			[Address(RVA = "0xB1E8C0", Offset = "0xB1E8C0", VA = "0xB1E8C0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842D0C", Offset = "0x842D0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public bool IsValid
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0xB1E8C8", Offset = "0xB1E8C8", VA = "0xB1E8C8", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021F")]
		public bool IsAlive
		{
			[Token(Token = "0x6001322")]
			[Address(RVA = "0xB1E994", Offset = "0xB1E994", VA = "0xB1E994", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000220")]
		public ImpactAudioSourceBase AudioSource
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0xB1EA28", Offset = "0xB1EA28", VA = "0xB1EA28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842D1C", Offset = "0x842D1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001324")]
			[Address(RVA = "0xB1EA30", Offset = "0xB1EA30", VA = "0xB1EA30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842D2C", Offset = "0x842D2C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000017")]
		public static event Action<AudioInteractionResult> OnInteractionProcessed
		{
			[Token(Token = "0x600131B")]
			[Address(RVA = "0xB1E714", Offset = "0xB1E714", VA = "0xB1E714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842CBC", Offset = "0x842CBC")]
			add
			{
			}
			[Token(Token = "0x600131C")]
			[Address(RVA = "0xB1E7D0", Offset = "0xB1E7D0", VA = "0xB1E7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842CCC", Offset = "0x842CCC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xB1EA38", Offset = "0xB1EA38", VA = "0xB1EA38", Slot = "10")]
		public void Process(IImpactObject parent)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xB1EC60", Offset = "0xB1EC60", VA = "0xB1EC60", Slot = "7")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xB1ED34", Offset = "0xB1ED34", VA = "0xB1ED34", Slot = "8")]
		public void KeepAlive(IInteractionResult newResult)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xB1EBB0", Offset = "0xB1EBB0", VA = "0xB1EBB0", Slot = "11")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xB1EE60", Offset = "0xB1EE60", VA = "0xB1EE60", Slot = "12")]
		public void Retrieve()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xB1EE54", Offset = "0xB1EE54", VA = "0xB1EE54", Slot = "13")]
		public void MakeAvailable()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xB1EE68", Offset = "0xB1EE68", VA = "0xB1EE68", Slot = "14")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xB1EE70", Offset = "0xB1EE70", VA = "0xB1EE70")]
		public AudioInteractionResult()
		{
		}
	}
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x837248", Offset = "0x837248")]
	public class ImpactAudioInteraction : ImpactInteractionBase
	{
		[Token(Token = "0x2000331")]
		public enum CollisionAudioClipSelectionMode
		{
			[Token(Token = "0x40011EB")]
			Velocity,
			[Token(Token = "0x40011EC")]
			Random
		}

		[Token(Token = "0x40011DD")]
		private const string interactionResultPoolKey = "AudioInteractionResult";

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Range _velocityRange;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Range _randomPitchRange;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Range _randomVolumeRange;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _scaleVolumeWithVelocity;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve _velocityVolumeScaleCurve;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _collisionNormalInfluence;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _slideVelocityPitchMultiplier;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ImpactAudioSourceBase _audioSourceTemplate;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CollisionAudioClipSelectionMode _collisionAudioSelectionMode;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<AudioClip> _collisionAudioClips;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip _slideAudioClip;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip _rollAudioClip;

		[Token(Token = "0x17000221")]
		public Range VelocityRange
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0xA0DF04", Offset = "0xA0DF04", VA = "0xA0DF04")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x600132E")]
			[Address(RVA = "0xA0DF0C", Offset = "0xA0DF0C", VA = "0xA0DF0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public Range RandomPitchRange
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0xA0DF14", Offset = "0xA0DF14", VA = "0xA0DF14")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6001330")]
			[Address(RVA = "0xA0DF1C", Offset = "0xA0DF1C", VA = "0xA0DF1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public Range RandomVolumeRange
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0xA0DF24", Offset = "0xA0DF24", VA = "0xA0DF24")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6001332")]
			[Address(RVA = "0xA0DF2C", Offset = "0xA0DF2C", VA = "0xA0DF2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public bool ScaleVolumeWithVelocity
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0xA0DF34", Offset = "0xA0DF34", VA = "0xA0DF34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001334")]
			[Address(RVA = "0xA0DF3C", Offset = "0xA0DF3C", VA = "0xA0DF3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public AnimationCurve VelocityVolumeScaleCurve
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0xA0DF48", Offset = "0xA0DF48", VA = "0xA0DF48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001336")]
			[Address(RVA = "0xA0DF50", Offset = "0xA0DF50", VA = "0xA0DF50")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public float CollisionNormalInfluence
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0xA0DF58", Offset = "0xA0DF58", VA = "0xA0DF58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001338")]
			[Address(RVA = "0xA0DF60", Offset = "0xA0DF60", VA = "0xA0DF60")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public float SlideVelocityPitchMultiplier
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0xA0DF68", Offset = "0xA0DF68", VA = "0xA0DF68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600133A")]
			[Address(RVA = "0xA0DF70", Offset = "0xA0DF70", VA = "0xA0DF70")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public CollisionAudioClipSelectionMode CollisionAudioSelectionMode
		{
			[Token(Token = "0x600133B")]
			[Address(RVA = "0xA0DF78", Offset = "0xA0DF78", VA = "0xA0DF78")]
			get
			{
				return default(CollisionAudioClipSelectionMode);
			}
			[Token(Token = "0x600133C")]
			[Address(RVA = "0xA0DF80", Offset = "0xA0DF80", VA = "0xA0DF80")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public ImpactAudioSourceBase AudioSourceTemplate
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0xA0DF88", Offset = "0xA0DF88", VA = "0xA0DF88")]
			get
			{
				return null;
			}
			[Token(Token = "0x600133E")]
			[Address(RVA = "0xA0DF90", Offset = "0xA0DF90", VA = "0xA0DF90")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public List<AudioClip> CollisionAudioClips
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0xA0DF98", Offset = "0xA0DF98", VA = "0xA0DF98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public AudioClip SlideAudioClip
		{
			[Token(Token = "0x6001340")]
			[Address(RVA = "0xA0DFA0", Offset = "0xA0DFA0", VA = "0xA0DFA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001341")]
			[Address(RVA = "0xA0DFA8", Offset = "0xA0DFA8", VA = "0xA0DFA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public AudioClip RollAudioClip
		{
			[Token(Token = "0x6001342")]
			[Address(RVA = "0xA0DFB0", Offset = "0xA0DFB0", VA = "0xA0DFB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001343")]
			[Address(RVA = "0xA0DFB8", Offset = "0xA0DFB8", VA = "0xA0DFB8")]
			set
			{
			}
		}

		[Token(Token = "0x6001344")]
		public override IInteractionResult GetInteractionResult<T>(T interactionData)
		{
			return null;
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xA0DFC0", Offset = "0xA0DFC0", VA = "0xA0DFC0")]
		public float UpdatePitch(float originalPitch, Vector3 velocity)
		{
			return default(float);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xA0E010", Offset = "0xA0E010", VA = "0xA0E010")]
		private float getVolume(float normalizedIntensity)
		{
			return default(float);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xA0E090", Offset = "0xA0E090", VA = "0xA0E090")]
		private AudioClip getAudioClip(int interactionType, float normalizedIntensity)
		{
			return null;
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xA0E0C0", Offset = "0xA0E0C0", VA = "0xA0E0C0")]
		private AudioClip getCollisionAudioClip(float normalizedIntensity)
		{
			return null;
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xA0E1AC", Offset = "0xA0E1AC", VA = "0xA0E1AC")]
		private AudioClip getRandomCollisionAudioClip()
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xA0E248", Offset = "0xA0E248", VA = "0xA0E248", Slot = "7")]
		public override void Preload()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xA0E3B4", Offset = "0xA0E3B4", VA = "0xA0E3B4")]
		public ImpactAudioInteraction()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class ImpactAudioPool : Impact.Utility.ObjectPool.ObjectPool<ImpactAudioSourceBase>
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectPoolGroup<ImpactAudioPool, ImpactAudioSourceBase> poolGroup;

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xA0E2E0", Offset = "0xA0E2E0", VA = "0xA0E2E0")]
		public static void PreloadPoolForAudioSource(ImpactAudioSourceBase template)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xA0E4E8", Offset = "0xA0E4E8", VA = "0xA0E4E8")]
		public static ImpactAudioSourceBase PlayAudio(AudioInteractionResult interactionResult, Vector3 point, int priority)
		{
			return null;
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xA0E69C", Offset = "0xA0E69C", VA = "0xA0E69C", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xA0E748", Offset = "0xA0E748", VA = "0xA0E748")]
		public ImpactAudioPool()
		{
		}
	}
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x83729C", Offset = "0x83729C")]
	public class ImpactAudioSource : ImpactAudioSourceBase
	{
		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ObjectPoolFallbackMode _poolFallbackMode;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float baseVolume;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float basePitch;

		[Token(Token = "0x1700022D")]
		public override int PoolSize
		{
			[Token(Token = "0x6001351")]
			[Address(RVA = "0xA0E81C", Offset = "0xA0E81C", VA = "0xA0E81C", Slot = "7")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001352")]
			[Address(RVA = "0xA0E824", Offset = "0xA0E824", VA = "0xA0E824", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public override ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x6001353")]
			[Address(RVA = "0xA0E82C", Offset = "0xA0E82C", VA = "0xA0E82C", Slot = "9")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x6001354")]
			[Address(RVA = "0xA0E834", Offset = "0xA0E834", VA = "0xA0E834", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xA0E83C", Offset = "0xA0E83C", VA = "0xA0E83C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xA0E890", Offset = "0xA0E890", VA = "0xA0E890")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xA0E8D8", Offset = "0xA0E8D8", VA = "0xA0E8D8", Slot = "11")]
		public override void PlayAudio(AudioInteractionResult interactionResult, Vector3 point)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xA0E9A8", Offset = "0xA0E9A8", VA = "0xA0E9A8", Slot = "12")]
		public override void UpdateAudio(float volume, float pitch)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xA0EA00", Offset = "0xA0EA00", VA = "0xA0EA00", Slot = "13")]
		public override void StopAudio()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xA0EA1C", Offset = "0xA0EA1C", VA = "0xA0EA1C")]
		private void Update()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xA0EA78", Offset = "0xA0EA78", VA = "0xA0EA78")]
		public ImpactAudioSource()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public abstract class ImpactAudioSourceBase : PooledObject
	{
		[Token(Token = "0x1700022F")]
		public abstract int PoolSize
		{
			[Token(Token = "0x600135C")]
			get;
			[Token(Token = "0x600135D")]
			set;
		}

		[Token(Token = "0x17000230")]
		public abstract ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x600135E")]
			get;
			[Token(Token = "0x600135F")]
			set;
		}

		[Token(Token = "0x6001360")]
		public abstract void PlayAudio(AudioInteractionResult interactionResult, Vector3 point);

		[Token(Token = "0x6001361")]
		public abstract void UpdateAudio(float volume, float pitch);

		[Token(Token = "0x6001362")]
		public abstract void StopAudio();

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xA0EA8C", Offset = "0xA0EA8C", VA = "0xA0EA8C")]
		protected ImpactAudioSourceBase()
		{
		}
	}
}
namespace Impact.Data
{
	[Token(Token = "0x2000335")]
	public enum AlignmentAxis
	{
		[Token(Token = "0x40011F4")]
		ZDown,
		[Token(Token = "0x40011F5")]
		ZUp,
		[Token(Token = "0x40011F6")]
		YDown,
		[Token(Token = "0x40011F7")]
		YUp
	}
	[Token(Token = "0x2000336")]
	public static class AlignmentAxisUtilities
	{
		[Token(Token = "0x6001364")]
		[Address(RVA = "0xB1B03C", Offset = "0xB1B03C", VA = "0xB1B03C")]
		public static Quaternion GetRotationForAlignment(AlignmentAxis alignment, Vector3 normal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xB1B13C", Offset = "0xB1B13C", VA = "0xB1B13C")]
		public static Quaternion GetVelocityRotation(AlignmentAxis alignment, Vector3 normal, Vector3 velocity)
		{
			return default(Quaternion);
		}
	}
}
namespace Impact.Demo
{
	[Token(Token = "0x2000337")]
	public class DemoButton : MonoBehaviour
	{
		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onPressed;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onHeld;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource pressedAudio;

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xBC11F8", Offset = "0xBC11F8", VA = "0xBC11F8")]
		public void Press()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xBC1234", Offset = "0xBC1234", VA = "0xBC1234")]
		public void Hold()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xBC1250", Offset = "0xBC1250", VA = "0xBC1250")]
		public DemoButton()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class DemoCharacterController : MonoBehaviour
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody characterRigidbody;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D4CC", Offset = "0x83D4CC")]
		private float moveSpeed;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float jumpForce;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sprintMultiplier;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float sneakMultiplier;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float movementSmoothing;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D558", Offset = "0x83D558")]
		private Transform cameraTransform;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraSmoothing;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D5C4", Offset = "0x83D5C4")]
		[SerializeField]
		private float pickedUpDrag;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float pickupHoldForce;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float throwForce;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D630", Offset = "0x83D630")]
		private ImpactTag footstepLeftTag;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ImpactTag footstepRightTag;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float footstepInterval;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 footOffset;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D6AC", Offset = "0x83D6AC")]
		private ImpactTag bulletTag;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float bulletForce;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector2 targetCharacterRotation;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector2 smoothedCharacterRotation;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector2 smoothedCharacterRotationV;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 targetMovement;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 smoothedMovement;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 smoothedMovementV;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool isSneaking;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool isGrounded;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 previousPosition;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float distanceTravelled;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Rigidbody pickedUpObject;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float pickupDistance;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int foot;

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xBC1258", Offset = "0xBC1258", VA = "0xBC1258")]
		private void Awake()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xBC1264", Offset = "0xBC1264", VA = "0xBC1264")]
		private void Update()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xBC1CF4", Offset = "0xBC1CF4", VA = "0xBC1CF4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xBC1F50", Offset = "0xBC1F50", VA = "0xBC1F50")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xBC2000", Offset = "0xBC2000", VA = "0xBC2000")]
		private void triggerFootstep()
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xBC1640", Offset = "0xBC1640", VA = "0xBC1640")]
		private void triggerWeapon()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xBC19E4", Offset = "0xBC19E4", VA = "0xBC19E4")]
		private bool pickupObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xBC1E0C", Offset = "0xBC1E0C", VA = "0xBC1E0C")]
		private void updatePickedUpObject()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xBC18EC", Offset = "0xBC18EC", VA = "0xBC18EC")]
		private void dropObject(float force)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xBC1B7C", Offset = "0xBC1B7C", VA = "0xBC1B7C")]
		private bool pressButton(bool hold)
		{
			return default(bool);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xBC14F8", Offset = "0xBC14F8", VA = "0xBC14F8")]
		private Vector3 getMovementInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xBC1D7C", Offset = "0xBC1D7C", VA = "0xBC1D7C")]
		private void updateGrounded()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xBC2270", Offset = "0xBC2270", VA = "0xBC2270")]
		public DemoCharacterController()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class DemoParticleController : MonoBehaviour
	{
		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem particles;

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xBC37C0", Offset = "0xBC37C0", VA = "0xBC37C0")]
		public void ToggleParticles()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xBC3818", Offset = "0xBC3818", VA = "0xBC3818")]
		public DemoParticleController()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class DemoSlideAndRollSeesaw : MonoBehaviour
	{
		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody seesawRigidbody;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Rigidbody rollerRigidbody;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float torque;

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xBC3820", Offset = "0xBC3820", VA = "0xBC3820")]
		public void TiltLeft()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xBC389C", Offset = "0xBC389C", VA = "0xBC389C")]
		public void TiltRight()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xBC391C", Offset = "0xBC391C", VA = "0xBC391C")]
		public void ToggleRollerFrozen()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xBC395C", Offset = "0xBC395C", VA = "0xBC395C")]
		public DemoSlideAndRollSeesaw()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class UncapAngularVelocity : MonoBehaviour
	{
		[Token(Token = "0x600137C")]
		[Address(RVA = "0xDB0AB4", Offset = "0xDB0AB4", VA = "0xDB0AB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xDB0B18", Offset = "0xDB0B18", VA = "0xDB0B18")]
		public UncapAngularVelocity()
		{
		}
	}
}
namespace FlatKit
{
	[Token(Token = "0x200033C")]
	public class UvScroller : MonoBehaviour
	{
		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material targetMaterial;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedX;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speedY;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 offset;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 initOffset;

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xDB0B88", Offset = "0xDB0B88", VA = "0xDB0B88")]
		private void Start()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xDB0BD0", Offset = "0xDB0BD0", VA = "0xDB0BD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xDB0BF4", Offset = "0xDB0BF4", VA = "0xDB0BF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xDB0C6C", Offset = "0xDB0C6C", VA = "0xDB0C6C")]
		public UvScroller()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class FlatKitFog : ScriptableRendererFeature
	{
		[Token(Token = "0x200033E")]
		private class EffectPass : ScriptableRenderPass
		{
			[Token(Token = "0x4001236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly ProfilingSampler _profilingSampler;

			[Token(Token = "0x4001237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private RTHandle _destination;

			[Token(Token = "0x4001238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private readonly Material _effectMaterial;

			[Token(Token = "0x4001239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private RenderTargetHandle _temporaryColorTexture;

			[Token(Token = "0x600138B")]
			[Address(RVA = "0x1BECA24", Offset = "0x1BECA24", VA = "0x1BECA24")]
			public EffectPass(Material effectMaterial)
			{
			}

			[Token(Token = "0x600138C")]
			[Address(RVA = "0x1BECAB4", Offset = "0x1BECAB4", VA = "0x1BECAB4")]
			public void Setup([System.Runtime.InteropServices.Optional] RTHandle destination)
			{
			}

			[Token(Token = "0x600138D")]
			[Address(RVA = "0x1BECAC4", Offset = "0x1BECAC4", VA = "0x1BECAC4", Slot = "9")]
			public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
			{
			}

			[Token(Token = "0x600138E")]
			[Address(RVA = "0x1BECDF8", Offset = "0x1BECDF8", VA = "0x1BECDF8", Slot = "7")]
			public override void OnCameraCleanup(CommandBuffer cmd)
			{
			}
		}

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D748", Offset = "0x83D748")]
		public FogSettings settings;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _material;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EffectPass _effectPass;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D _lutDepth;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D _lutHeight;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string ShaderName;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int DistanceLut;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int Near;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int Far;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int UseDistanceFog;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int UseDistanceFogOnSky;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int DistanceFogIntensity;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int HeightLut;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int LowWorldY;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly int HighWorldY;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly int UseHeightFog;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly int UseHeightFogOnSky;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static readonly int HeightFogIntensity;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly int DistanceHeightBlend;

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x1C17C50", Offset = "0x1C17C50", VA = "0x1C17C50", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x1C17F2C", Offset = "0x1C17F2C", VA = "0x1C17F2C", Slot = "6")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x1C18034", Offset = "0x1C18034", VA = "0x1C18034", Slot = "7")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x1C17D78", Offset = "0x1C17D78", VA = "0x1C17D78")]
		private void InitMaterial()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x1C1809C", Offset = "0x1C1809C", VA = "0x1C1809C")]
		private void UpdateShader()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x1C18410", Offset = "0x1C18410", VA = "0x1C18410")]
		private void UpdateDistanceLut()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x1C1860C", Offset = "0x1C1860C", VA = "0x1C1860C")]
		private void UpdateHeightLut()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x1C18808", Offset = "0x1C18808", VA = "0x1C18808")]
		public FlatKitFog()
		{
		}
	}
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8372D4", Offset = "0x8372D4")]
	public class FogSettings : ScriptableObject
	{
		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D780", Offset = "0x83D780")]
		public bool useDistance;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient distanceGradient;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float near;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float far;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83D7B8", Offset = "0x83D7B8")]
		public float distanceFogIntensity;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool useDistanceFogOnSky;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83D7D0", Offset = "0x83D7D0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D7D0", Offset = "0x83D7D0")]
		public bool useHeight;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Gradient heightGradient;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float low;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float high;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83D81C", Offset = "0x83D81C")]
		public float heightFogIntensity;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool useHeightFogOnSky;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83D834", Offset = "0x83D834")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D834", Offset = "0x83D834")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83D834", Offset = "0x83D834")]
		public float distanceHeightBlend;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D898", Offset = "0x83D898")]
		public RenderPassEvent renderEvent;

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x1C193C8", Offset = "0x1C193C8", VA = "0x1C193C8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x1C194A4", Offset = "0x1C194A4", VA = "0x1C194A4")]
		public FogSettings()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class FlatKitOutline : ScriptableRendererFeature
	{
		[Token(Token = "0x2000341")]
		private class OutlinePass : ScriptableRenderPass
		{
			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private RTHandle _destination;

			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private readonly ProfilingSampler _profilingSampler;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private readonly Material _outlineMaterial;

			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private RenderTargetHandle _temporaryColorTexture;

			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private bool _usingTemporaryRT;

			[Token(Token = "0x6001397")]
			[Address(RVA = "0x1BECE1C", Offset = "0x1BECE1C", VA = "0x1BECE1C")]
			public OutlinePass(Material outlineMaterial)
			{
			}

			[Token(Token = "0x6001398")]
			[Address(RVA = "0x1BECEAC", Offset = "0x1BECEAC", VA = "0x1BECEAC")]
			public void Setup(OutlineSettings settings, [System.Runtime.InteropServices.Optional] RTHandle destination)
			{
			}

			[Token(Token = "0x6001399")]
			[Address(RVA = "0x1BECEE4", Offset = "0x1BECEE4", VA = "0x1BECEE4", Slot = "9")]
			public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
			{
			}

			[Token(Token = "0x600139A")]
			[Address(RVA = "0x1BED228", Offset = "0x1BED228", VA = "0x1BED228", Slot = "7")]
			public override void OnCameraCleanup(CommandBuffer cmd)
			{
			}
		}

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D8D0", Offset = "0x83D8D0")]
		public OutlineSettings settings;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _material;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OutlinePass _outlinePass;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTargetHandle _outlineTexture;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string ShaderName;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int EdgeColor;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int Thickness;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int DepthThresholdMin;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int DepthThresholdMax;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int NormalThresholdMin;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int NormalThresholdMax;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int ColorThresholdMin;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int ColorThresholdMax;

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x1C18AB0", Offset = "0x1C18AB0", VA = "0x1C18AB0", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x1C18DAC", Offset = "0x1C18DAC", VA = "0x1C18DAC", Slot = "6")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x1C18BF8", Offset = "0x1C18BF8", VA = "0x1C18BF8")]
		private void InitMaterial()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x1C18EB8", Offset = "0x1C18EB8", VA = "0x1C18EB8")]
		private void UpdateShader()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x1C191FC", Offset = "0x1C191FC", VA = "0x1C191FC")]
		public FlatKitOutline()
		{
		}
	}
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x837320", Offset = "0x837320")]
	public class OutlineSettings : ScriptableObject
	{
		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color edgeColor;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83D908", Offset = "0x83D908")]
		public int thickness;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D920", Offset = "0x83D920")]
		public bool resolutionInvariant;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83D958", Offset = "0x83D958")]
		public bool useDepth;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool useNormals;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool useColor;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D968", Offset = "0x83D968")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83D968", Offset = "0x83D968")]
		public float minDepthThreshold;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxDepthThreshold;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83D9B8", Offset = "0x83D9B8")]
		public float minNormalsThreshold;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxNormalsThreshold;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83D9C8", Offset = "0x83D9C8")]
		public float minColorThreshold;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxColorThreshold;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83D9D8", Offset = "0x83D9D8")]
		public RenderPassEvent renderEvent;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83D9E8", Offset = "0x83D9E8")]
		public bool outlineOnly;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xB8EF74", Offset = "0xB8EF74", VA = "0xB8EF74")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xB8F09C", Offset = "0xB8F09C", VA = "0xB8F09C")]
		public OutlineSettings()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class Buoyancy : MonoBehaviour
	{
		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D9FC", Offset = "0x83D9FC")]
		public Transform water;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83DA34", Offset = "0x83DA34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83DA34", Offset = "0x83DA34")]
		public float size;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83DA80", Offset = "0x83DA80")]
		public float amplitude;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83DAB8", Offset = "0x83DAB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83DAB8", Offset = "0x83DAB8")]
		public Material overrideWaterMaterial;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material _material;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _speed;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _amplitude;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _frequency;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _direction;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _originalPosition;

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xB226F0", Offset = "0xB226F0", VA = "0xB226F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xB22884", Offset = "0xB22884", VA = "0xB22884")]
		private void Update()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xB22B24", Offset = "0xB22B24", VA = "0xB22B24")]
		private Vector2 GradientNoiseDir(Vector2 p)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xB22BF8", Offset = "0xB22BF8", VA = "0xB22BF8")]
		private float GradientNoise(Vector2 p)
		{
			return default(float);
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xB22A20", Offset = "0xB22A20", VA = "0xB22A20")]
		private Vector3 GetNormalWS(Vector3 positionOS)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xB22DD4", Offset = "0xB22DD4", VA = "0xB22DD4")]
		private float SineWave(Vector3 positionOS, float offset)
		{
			return default(float);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xB22960", Offset = "0xB22960", VA = "0xB22960")]
		private float GetHeightOS(Vector3 positionOS)
		{
			return default(float);
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xB22EC4", Offset = "0xB22EC4", VA = "0xB22EC4")]
		public Buoyancy()
		{
		}
	}
}
namespace Dustyroom
{
	[Token(Token = "0x2000344")]
	public class LinearMotion : MonoBehaviour
	{
		[Token(Token = "0x2000345")]
		public enum TranslationMode
		{
			[Token(Token = "0x400127C")]
			Off,
			[Token(Token = "0x400127D")]
			XAxis,
			[Token(Token = "0x400127E")]
			YAxis,
			[Token(Token = "0x400127F")]
			ZAxis,
			[Token(Token = "0x4001280")]
			Vector
		}

		[Token(Token = "0x2000346")]
		public enum RotationMode
		{
			[Token(Token = "0x4001282")]
			Off,
			[Token(Token = "0x4001283")]
			XAxis,
			[Token(Token = "0x4001284")]
			YAxis,
			[Token(Token = "0x4001285")]
			ZAxis,
			[Token(Token = "0x4001286")]
			Vector
		}

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TranslationMode translationMode;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 translationVector;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float translationSpeed;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public RotationMode rotationMode;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 rotationAxis;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float rotationSpeed;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool useLocalCoordinate;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float translationAcceleration;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rotationAcceleration;

		[Token(Token = "0x17000231")]
		private Vector3 TranslationVector
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xA1C520", Offset = "0xA1C520", VA = "0xA1C520")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000232")]
		private Vector3 RotationVector
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0xA1C5C4", Offset = "0xA1C5C4", VA = "0xA1C5C4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xA1C668", Offset = "0xA1C668", VA = "0xA1C668")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xA1C870", Offset = "0xA1C870", VA = "0xA1C870")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xA1C890", Offset = "0xA1C890", VA = "0xA1C890")]
		public LinearMotion()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class OrbitMotion : MonoBehaviour
	{
		[Token(Token = "0x2000348")]
		public enum TargetMode
		{
			[Token(Token = "0x40012A1")]
			Transform,
			[Token(Token = "0x40012A2")]
			Position
		}

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetMode targetMode;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetTransform;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool followTargetTransform;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 targetOffset;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 targetPosition;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83DB04", Offset = "0x83DB04")]
		public float distanceHorizontal;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float distanceVertical;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float xSpeed;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float ySpeed;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float damping;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83DB14", Offset = "0x83DB14")]
		public bool clampAngle;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float yMinLimit;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float yMaxLimit;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83DB24", Offset = "0x83DB24")]
		public bool allowZoom;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float distanceMin;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float distanceMax;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _x;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _y;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83DB34", Offset = "0x83DB34")]
		public bool autoMovement;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float autoSpeedX;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float autoSpeedY;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float autoSpeedDistance;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83DB44", Offset = "0x83DB44")]
		public bool interactive;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _lastMoveTime;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public float timeSinceLastMove;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xB8E868", Offset = "0xB8E868", VA = "0xB8E868")]
		private void Start()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xB8EA10", Offset = "0xB8EA10", VA = "0xB8EA10")]
		private void Update()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xB8EEBC", Offset = "0xB8EEBC", VA = "0xB8EEBC")]
		private static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xB8EEEC", Offset = "0xB8EEEC", VA = "0xB8EEEC")]
		public OrbitMotion()
		{
		}
	}
}
