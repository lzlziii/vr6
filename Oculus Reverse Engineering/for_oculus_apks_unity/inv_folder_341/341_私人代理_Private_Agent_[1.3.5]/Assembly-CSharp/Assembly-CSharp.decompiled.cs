using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ArmSelector : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmBase.LR lr;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool? lastGrip;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> arms;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ArmSelector otherHand;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip soundGun;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip soundKatana;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x83E198", Offset = "0x83E198", VA = "0x83E198")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x83E28C", Offset = "0x83E28C", VA = "0x83E28C")]
	private GameObject GetArm()
	{
		return null;
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x83E394", Offset = "0x83E394", VA = "0x83E394")]
	private void Update()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x83E484", Offset = "0x83E484", VA = "0x83E484")]
	public void Drop()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x83E5DC", Offset = "0x83E5DC", VA = "0x83E5DC")]
	public GameObject setArm(string name)
	{
		return null;
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x83EA08", Offset = "0x83EA08", VA = "0x83EA08")]
	public ArmSelector()
	{
	}
}
[Token(Token = "0x2000003")]
public class AudioMix : MonoBehaviour
{
	[Token(Token = "0x20001F8")]
	public enum STATE
	{
		[Token(Token = "0x4000BC4")]
		SOUND1,
		[Token(Token = "0x4000BC5")]
		SOUND2,
		[Token(Token = "0x4000BC6")]
		MUTE
	}

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public STATE state;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float vol;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float volSpeed;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixPart part1;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixPart part2;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x83EA10", Offset = "0x83EA10", VA = "0x83EA10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x83EA14", Offset = "0x83EA14", VA = "0x83EA14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x83EA8C", Offset = "0x83EA8C", VA = "0x83EA8C")]
	public AudioMix()
	{
	}
}
[Token(Token = "0x2000004")]
public class AudioMixEx : MonoBehaviour
{
	[Token(Token = "0x20001F9")]
	public enum STATE_EX
	{
		[Token(Token = "0x4000BC8")]
		SOUND1,
		[Token(Token = "0x4000BC9")]
		SOUND2,
		[Token(Token = "0x4000BCA")]
		SOUND3,
		[Token(Token = "0x4000BCB")]
		MUTE
	}

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public STATE_EX state;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float vol;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float volSpeed;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixPart part1;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixPart part2;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioMixPart part3;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x83EAA0", Offset = "0x83EAA0", VA = "0x83EAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x83EAA4", Offset = "0x83EAA4", VA = "0x83EAA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x83EB5C", Offset = "0x83EB5C", VA = "0x83EB5C")]
	public AudioMixEx()
	{
	}
}
[Token(Token = "0x2000005")]
public class AudioMixPart : MonoBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float volSpeed;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float vol;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x83EB70", Offset = "0x83EB70", VA = "0x83EB70")]
	private void Start()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x83EBC8", Offset = "0x83EBC8", VA = "0x83EBC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x83EDEC", Offset = "0x83EDEC", VA = "0x83EDEC")]
	public AudioMixPart()
	{
	}
}
[Token(Token = "0x2000006")]
public class BeamHit : MonoBehaviour
{
	[Token(Token = "0x6000010")]
	[Address(RVA = "0x83EE08", Offset = "0x83EE08", VA = "0x83EE08")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x83EEC8", Offset = "0x83EEC8", VA = "0x83EEC8")]
	public BeamHit()
	{
	}
}
[Token(Token = "0x2000007")]
public class BoardFrontCheck : MonoBehaviour
{
	[Token(Token = "0x20001FA")]
	public enum BOARD
	{
		[Token(Token = "0x4000BCD")]
		CONTINUE,
		[Token(Token = "0x4000BCE")]
		NEWGAME
	}

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform door;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cont;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform newgame;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x83F5E4", Offset = "0x83F5E4", VA = "0x83F5E4")]
	public BOARD CurrentSelect()
	{
		return default(BOARD);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x83F724", Offset = "0x83F724", VA = "0x83F724")]
	public BoardFrontCheck()
	{
	}
}
[Token(Token = "0x2000008")]
public class BoardInDoor : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject board;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x83F72C", Offset = "0x83F72C", VA = "0x83F72C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x83F7C8", Offset = "0x83F7C8", VA = "0x83F7C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x83F7CC", Offset = "0x83F7CC", VA = "0x83F7CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x83F7D0", Offset = "0x83F7D0", VA = "0x83F7D0")]
	public BoardInDoor()
	{
	}
}
[Token(Token = "0x2000009")]
public class BombDelete : BulletMovePlayer
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int count;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x83F7D8", Offset = "0x83F7D8", VA = "0x83F7D8", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x83F8A8", Offset = "0x83F8A8", VA = "0x83F8A8")]
	public BombDelete()
	{
	}
}
[Token(Token = "0x200000A")]
public class BombObject : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hp;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject effect;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bomb;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x83F8E8", Offset = "0x83F8E8", VA = "0x83F8E8", Slot = "4")]
	protected virtual bool EnterWork(GameObject other)
	{
		return default(bool);
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x83FDA8", Offset = "0x83FDA8", VA = "0x83FDA8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x83FDE8", Offset = "0x83FDE8", VA = "0x83FDE8")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x83FE28", Offset = "0x83FE28", VA = "0x83FE28")]
	public BombObject()
	{
	}
}
[Token(Token = "0x200000B")]
public class BombObjectAppear : MonoBehaviour
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerMove playerMove;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x83FE30", Offset = "0x83FE30", VA = "0x83FE30")]
	private void Start()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x83FEA0", Offset = "0x83FEA0", VA = "0x83FEA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x83FFFC", Offset = "0x83FFFC", VA = "0x83FFFC")]
	public BombObjectAppear()
	{
	}
}
[Token(Token = "0x200000C")]
public class BossAct : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anime;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animeMeca;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject effect;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool kicked;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject box;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool run;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool appearComplete;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject jimaku1;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject jimaku2;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject jimaku3;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int jimakuTimer;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int jimakuPhase;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool startRot;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PlayerMove playerMove;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip voice1;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip voice2;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip voice3;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioSource audioSource;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float rotSpeed;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x840004", Offset = "0x840004", VA = "0x840004")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x8400A8", Offset = "0x8400A8", VA = "0x8400A8")]
	public void KickBox()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x840114", Offset = "0x840114", VA = "0x840114")]
	public void AppearComp()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x840138", Offset = "0x840138", VA = "0x840138")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x8406B8", Offset = "0x8406B8", VA = "0x8406B8")]
	public BossAct()
	{
	}
}
[Token(Token = "0x200000D")]
public class BossAct2 : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anime;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerMove playerMove;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject jimaku1;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject jimaku2;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int jimakuTimer;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int jimakuPhase;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string state;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool run;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject target;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem effect1;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem effect2;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeToChange;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject robo;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip voice1;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip voice2;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource audioSource;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x8406C0", Offset = "0x8406C0", VA = "0x8406C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x8407A0", Offset = "0x8407A0", VA = "0x8407A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x840CD0", Offset = "0x840CD0", VA = "0x840CD0")]
	public void startRun()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x840CDC", Offset = "0x840CDC", VA = "0x840CDC")]
	public void ef1()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x840DD8", Offset = "0x840DD8", VA = "0x840DD8")]
	public void ef2()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x840ED4", Offset = "0x840ED4", VA = "0x840ED4")]
	public BossAct2()
	{
	}
}
[Token(Token = "0x200000E")]
public class BossAct3 : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject boscon;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x840EDC", Offset = "0x840EDC", VA = "0x840EDC")]
	public void DestroyBoscon()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x840F48", Offset = "0x840F48", VA = "0x840F48")]
	public BossAct3()
	{
	}
}
[Token(Token = "0x200000F")]
public class BossStarter : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool started;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator boss;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerMove playerMove;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x840F50", Offset = "0x840F50", VA = "0x840F50")]
	private void Start()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x840FC4", Offset = "0x840FC4", VA = "0x840FC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x841040", Offset = "0x841040", VA = "0x841040")]
	public BossStarter()
	{
	}
}
[Token(Token = "0x2000010")]
public class BulletMove : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isPlayerBullet;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int power;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool rush;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int disappearCount;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int disappearCountBase;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool needDesappear;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip dstry;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x8416FC", Offset = "0x8416FC", VA = "0x8416FC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x841700", Offset = "0x841700", VA = "0x841700")]
	public void DestroySound()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x841804", Offset = "0x841804", VA = "0x841804", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x841974", Offset = "0x841974", VA = "0x841974", Slot = "6")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x841978", Offset = "0x841978", VA = "0x841978", Slot = "7")]
	protected virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x84197C", Offset = "0x84197C", VA = "0x84197C")]
	public BulletMove()
	{
	}
}
[Token(Token = "0x2000011")]
public class BulletMoveEnemy : BulletMove
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material gold;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material red;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer render;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject effect;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x84199C", Offset = "0x84199C", VA = "0x84199C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x8419A8", Offset = "0x8419A8", VA = "0x8419A8", Slot = "7")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x8419E8", Offset = "0x8419E8", VA = "0x8419E8", Slot = "8")]
	protected virtual void EnterWork(GameObject other)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x841AE4", Offset = "0x841AE4", VA = "0x841AE4", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x841E80", Offset = "0x841E80", VA = "0x841E80")]
	public BulletMoveEnemy()
	{
	}
}
[Token(Token = "0x2000012")]
public class BulletMoveEnemy2 : BulletMoveEnemy
{
	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject hitWall;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool bound;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip sound2;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x841EA0", Offset = "0x841EA0", VA = "0x841EA0", Slot = "8")]
	protected override void EnterWork(GameObject other)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x8421EC", Offset = "0x8421EC", VA = "0x8421EC")]
	public BulletMoveEnemy2()
	{
	}
}
[Token(Token = "0x2000013")]
public class BulletMoveGrenade : BulletMovePlayer
{
	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject bomb;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x84220C", Offset = "0x84220C", VA = "0x84220C", Slot = "7")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x83FC9C", Offset = "0x83FC9C", VA = "0x83FC9C")]
	public void MakeBomb()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x8422DC", Offset = "0x8422DC", VA = "0x8422DC")]
	public BulletMoveGrenade()
	{
	}
}
[Token(Token = "0x2000014")]
public class BulletMovePlayer : BulletMove
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hitPos;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject markChecker;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x8422FC", Offset = "0x8422FC", VA = "0x8422FC", Slot = "7")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x8425F8", Offset = "0x8425F8", VA = "0x8425F8", Slot = "6")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x83F8C8", Offset = "0x83F8C8", VA = "0x83F8C8")]
	public BulletMovePlayer()
	{
	}
}
[Token(Token = "0x2000015")]
public class BulletMoveShuriken : BulletMoveEnemy
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float rotSpeed;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float rotX;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float rotY;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float rotZ;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x842750", Offset = "0x842750", VA = "0x842750")]
	public void setRandomRot()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x8427D0", Offset = "0x8427D0", VA = "0x8427D0", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x8428B0", Offset = "0x8428B0", VA = "0x8428B0")]
	public BulletMoveShuriken()
	{
	}
}
[Token(Token = "0x2000016")]
public class ChaseHand : MonoBehaviour
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hand;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x849A10", Offset = "0x849A10", VA = "0x849A10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x849A5C", Offset = "0x849A5C", VA = "0x849A5C")]
	public ChaseHand()
	{
	}
}
[Token(Token = "0x2000017")]
public class CocktailDrunk : MonoBehaviour
{
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject before;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject after;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x849A64", Offset = "0x849A64", VA = "0x849A64")]
	private void Start()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x849A88", Offset = "0x849A88", VA = "0x849A88")]
	private void Update()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x849B04", Offset = "0x849B04", VA = "0x849B04")]
	public CocktailDrunk()
	{
	}
}
[Token(Token = "0x2000018")]
public class ConnectRope : MonoBehaviour
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform conn;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x849B60", Offset = "0x849B60", VA = "0x849B60")]
	private void Start()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x849B64", Offset = "0x849B64", VA = "0x849B64")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x849BBC", Offset = "0x849BBC", VA = "0x849BBC")]
	public ConnectRope()
	{
	}
}
[Token(Token = "0x2000019")]
public class ConnectSpring : MonoBehaviour
{
	[Token(Token = "0x600004F")]
	[Address(RVA = "0x849BC4", Offset = "0x849BC4", VA = "0x849BC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x849C6C", Offset = "0x849C6C", VA = "0x849C6C")]
	private Transform Connect(Transform target)
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x849D30", Offset = "0x849D30", VA = "0x849D30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x849D34", Offset = "0x849D34", VA = "0x849D34")]
	public ConnectSpring()
	{
	}
}
[Token(Token = "0x200001A")]
public class ControllerAnime : MonoBehaviour
{
	[Token(Token = "0x20001FB")]
	public enum WAY
	{
		[Token(Token = "0x4000BD0")]
		VERTICAL,
		[Token(Token = "0x4000BD1")]
		HORIZONTAL
	}

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WAY way;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int phase;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int count;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int CHANGE_TIMING;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Sprite> vertical;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Sprite> horizontal;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x849D3C", Offset = "0x849D3C", VA = "0x849D3C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x849D44", Offset = "0x849D44", VA = "0x849D44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x849E40", Offset = "0x849E40", VA = "0x849E40")]
	public ControllerAnime()
	{
	}
}
[Token(Token = "0x200001B")]
public class ControllerSimulator : MonoBehaviour
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gripRight;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool gripLeft;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool triggerRight;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool triggerLeft;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool a;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool b;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool x;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool y;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool start;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool lastMenu;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float gripLimit;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x849E50", Offset = "0x849E50", VA = "0x849E50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x849E54", Offset = "0x849E54", VA = "0x849E54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x849F48", Offset = "0x849F48", VA = "0x849F48")]
	public bool gRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x849FEC", Offset = "0x849FEC", VA = "0x849FEC")]
	public bool gLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x84A090", Offset = "0x84A090", VA = "0x84A090")]
	public bool tRight()
	{
		return default(bool);
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x84A118", Offset = "0x84A118", VA = "0x84A118")]
	public bool tLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x84A1A0", Offset = "0x84A1A0", VA = "0x84A1A0")]
	public bool A()
	{
		return default(bool);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x84A228", Offset = "0x84A228", VA = "0x84A228")]
	public bool B()
	{
		return default(bool);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x84A304", Offset = "0x84A304", VA = "0x84A304")]
	public bool X()
	{
		return default(bool);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x84A38C", Offset = "0x84A38C", VA = "0x84A38C")]
	public bool Y()
	{
		return default(bool);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x84A468", Offset = "0x84A468", VA = "0x84A468")]
	public bool menu()
	{
		return default(bool);
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x84A4F0", Offset = "0x84A4F0", VA = "0x84A4F0")]
	private static ControllerSimulator getSim()
	{
		return null;
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x83E468", Offset = "0x83E468", VA = "0x83E468")]
	public static bool GetRightGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x83E44C", Offset = "0x83E44C", VA = "0x83E44C")]
	public static bool GetLeftGrip()
	{
		return default(bool);
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x84A610", Offset = "0x84A610", VA = "0x84A610")]
	public static bool GetRightTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x84A62C", Offset = "0x84A62C", VA = "0x84A62C")]
	public static bool GetLeftTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x84A648", Offset = "0x84A648", VA = "0x84A648")]
	public static bool GetA()
	{
		return default(bool);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x84A664", Offset = "0x84A664", VA = "0x84A664")]
	public static bool GetB()
	{
		return default(bool);
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x84A680", Offset = "0x84A680", VA = "0x84A680")]
	public static bool GetX()
	{
		return default(bool);
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x84A69C", Offset = "0x84A69C", VA = "0x84A69C")]
	public static bool GetY()
	{
		return default(bool);
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x84A6B8", Offset = "0x84A6B8", VA = "0x84A6B8")]
	public ControllerSimulator()
	{
	}
}
[Token(Token = "0x200001C")]
public class DamageLight : MonoBehaviour
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light l;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x84A6CC", Offset = "0x84A6CC", VA = "0x84A6CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x84A724", Offset = "0x84A724", VA = "0x84A724")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x84A78C", Offset = "0x84A78C", VA = "0x84A78C")]
	public void Damage()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x84A7AC", Offset = "0x84A7AC", VA = "0x84A7AC")]
	public DamageLight()
	{
	}
}
[Token(Token = "0x200001D")]
public class DeCart : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool moving;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x84A810", Offset = "0x84A810", VA = "0x84A810")]
	private void Start()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x84A814", Offset = "0x84A814", VA = "0x84A814")]
	private void Update()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x84A8E4", Offset = "0x84A8E4", VA = "0x84A8E4")]
	public DeCart()
	{
	}
}
[Token(Token = "0x200001E")]
public class DoorOpen : MonoBehaviour
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject door;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x84D980", Offset = "0x84D980", VA = "0x84D980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x84D984", Offset = "0x84D984", VA = "0x84D984")]
	private void Update()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x84DAF4", Offset = "0x84DAF4", VA = "0x84DAF4")]
	public DoorOpen()
	{
	}
}
[Token(Token = "0x200001F")]
public class DoorOpener : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject doorR;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject doorL;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool init;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float moveOfs;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x84DAFC", Offset = "0x84DAFC", VA = "0x84DAFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x84DBC8", Offset = "0x84DBC8", VA = "0x84DBC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x84DDF0", Offset = "0x84DDF0", VA = "0x84DDF0")]
	public DoorOpener()
	{
	}
}
[Token(Token = "0x2000020")]
public class Drink : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrueEndingController ending;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool didCheers;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x84DDF8", Offset = "0x84DDF8", VA = "0x84DDF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x84DE00", Offset = "0x84DE00", VA = "0x84DE00")]
	private void Update()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x84DE04", Offset = "0x84DE04", VA = "0x84DE04")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x84DF4C", Offset = "0x84DF4C", VA = "0x84DF4C")]
	public Drink()
	{
	}
}
[Token(Token = "0x2000021")]
public class DropSound : MonoBehaviour
{
	[Token(Token = "0x600007C")]
	[Address(RVA = "0x84DF54", Offset = "0x84DF54", VA = "0x84DF54")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x84DFB4", Offset = "0x84DFB4", VA = "0x84DFB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x84DFB8", Offset = "0x84DFB8", VA = "0x84DFB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x84DFBC", Offset = "0x84DFBC", VA = "0x84DFBC")]
	public DropSound()
	{
	}
}
[Token(Token = "0x2000022")]
public class Ending1 : MonoBehaviour
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyScriptSmith sms;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x84DFCC", Offset = "0x84DFCC", VA = "0x84DFCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x84DFE8", Offset = "0x84DFE8", VA = "0x84DFE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x84DFEC", Offset = "0x84DFEC", VA = "0x84DFEC")]
	public Ending1()
	{
	}
}
[Token(Token = "0x2000023")]
public class EnemyBulletHolder : MonoBehaviour
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bullet;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bullet2;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject missile;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ebHolder;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ebShuriken;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x84DFF4", Offset = "0x84DFF4", VA = "0x84DFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x84E0F0", Offset = "0x84E0F0", VA = "0x84E0F0")]
	public static GameObject getHolder()
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x84E13C", Offset = "0x84E13C", VA = "0x84E13C")]
	public static GameObject getBullet()
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x84E19C", Offset = "0x84E19C", VA = "0x84E19C")]
	public static GameObject getBullet2()
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x84E1FC", Offset = "0x84E1FC", VA = "0x84E1FC")]
	public static GameObject getMissile()
	{
		return null;
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x84E25C", Offset = "0x84E25C", VA = "0x84E25C")]
	public static GameObject getShuriken()
	{
		return null;
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x84E2BC", Offset = "0x84E2BC", VA = "0x84E2BC")]
	public EnemyBulletHolder()
	{
	}
}
[Token(Token = "0x2000024")]
public class EnemyHit : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyScriptBase esb;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isHeadshot;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject effect;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scale;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audioSource;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip gunSound;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip slashSound;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip beatSound;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x84E2C4", Offset = "0x84E2C4", VA = "0x84E2C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x84E384", Offset = "0x84E384", VA = "0x84E384")]
	public void ShootPosAct(GameObject other)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x84E48C", Offset = "0x84E48C", VA = "0x84E48C")]
	public bool Damage(int power, bool headshot, GameObject other)
	{
		return default(bool);
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x84E558", Offset = "0x84E558", VA = "0x84E558", Slot = "4")]
	protected virtual bool EnterWork(GameObject other)
	{
		return default(bool);
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x84E9A0", Offset = "0x84E9A0", VA = "0x84E9A0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x84E9E0", Offset = "0x84E9E0", VA = "0x84E9E0")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x84EA20", Offset = "0x84EA20", VA = "0x84EA20")]
	public EnemyHit()
	{
	}
}
[Token(Token = "0x2000025")]
public class EnemyHitMissile : EnemyHit
{
	[Token(Token = "0x6000091")]
	[Address(RVA = "0x84EA30", Offset = "0x84EA30", VA = "0x84EA30", Slot = "4")]
	protected override bool EnterWork(GameObject other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x84EBD0", Offset = "0x84EBD0", VA = "0x84EBD0")]
	public EnemyHitMissile()
	{
	}
}
[Token(Token = "0x2000026")]
public class DamageVoices : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip damageS1;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip damageS2;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip damageS3;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x84A7B4", Offset = "0x84A7B4", VA = "0x84A7B4")]
	public AudioClip GetVoice()
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x84A808", Offset = "0x84A808", VA = "0x84A808")]
	public DamageVoices()
	{
	}
}
[Token(Token = "0x2000027")]
public class EnemyScriptArmy : EnemyScriptBase
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int act;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float speed;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform muzzleH;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform muzzleR;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool shootingR;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int shootInterval;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int shootIntervalCount;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject dmy;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x84EBE0", Offset = "0x84EBE0", VA = "0x84EBE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x84EC94", Offset = "0x84EC94", VA = "0x84EC94", Slot = "4")]
	public override bool Damage(int dmg, bool headshot, GameObject dmgItem)
	{
		return default(bool);
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x84EEE0", Offset = "0x84EEE0", VA = "0x84EEE0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x84F150", Offset = "0x84F150", VA = "0x84F150")]
	public void SetDisappearFlg()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x84F260", Offset = "0x84F260", VA = "0x84F260", Slot = "10")]
	public override void StopAndShoot()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x84F378", Offset = "0x84F378", VA = "0x84F378", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x84F8E0", Offset = "0x84F8E0", VA = "0x84F8E0")]
	public void StartShootR()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x84F8EC", Offset = "0x84F8EC", VA = "0x84F8EC")]
	public void StopShootR()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x84F8F4", Offset = "0x84F8F4", VA = "0x84F8F4", Slot = "6")]
	public override void DoShoot()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x84F94C", Offset = "0x84F94C", VA = "0x84F94C", Slot = "11")]
	public virtual void DoShootR()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x84FBEC", Offset = "0x84FBEC", VA = "0x84FBEC")]
	public EnemyScriptArmy()
	{
	}
}
[Token(Token = "0x2000028")]
public class EnemyScriptBase : MonoBehaviour
{
	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetPos;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hp;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Animator anime;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float rotSpeed;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string state;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform muzzle;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SkinnedMeshRenderer render;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float dif;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem ps;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected List<GameObject> dmgList;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool onGround;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public DamageLight dl;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected AudioSource audioSource;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject dmgVoices;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x84FC1C", Offset = "0x84FC1C", VA = "0x84FC1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x84FCD8", Offset = "0x84FCD8", VA = "0x84FCD8")]
	public void DamageVoice()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x84FDBC", Offset = "0x84FDBC", VA = "0x84FDBC")]
	public void PlayVoice(AudioClip s)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x84ED58", Offset = "0x84ED58", VA = "0x84ED58", Slot = "4")]
	public virtual bool Damage(int dmg, bool headshot, GameObject dmgItem)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x84F0CC", Offset = "0x84F0CC", VA = "0x84F0CC", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x84FEB0", Offset = "0x84FEB0", VA = "0x84FEB0")]
	private void SetHit(Transform tf)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x84F714", Offset = "0x84F714", VA = "0x84F714")]
	protected Vector3 checkGround()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x84F938", Offset = "0x84F938", VA = "0x84F938", Slot = "6")]
	public virtual void DoShoot()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x84FFA8", Offset = "0x84FFA8", VA = "0x84FFA8", Slot = "7")]
	public virtual void DoShoot(Transform mzl, ParticleSystem p, Vector3 aim)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x850298", Offset = "0x850298", VA = "0x850298", Slot = "8")]
	public virtual void DoShoot(Transform mzl, ParticleSystem p)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x84F664", Offset = "0x84F664", VA = "0x84F664", Slot = "9")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x85032C", Offset = "0x85032C", VA = "0x85032C", Slot = "10")]
	public virtual void StopAndShoot()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x84F668", Offset = "0x84F668", VA = "0x84F668")]
	protected void LookatTarget(Transform target)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x84FC0C", Offset = "0x84FC0C", VA = "0x84FC0C")]
	public EnemyScriptBase()
	{
	}
}
[Token(Token = "0x2000029")]
public class EnemyScriptDrone : EnemyScriptBase
{
	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EnemyScriptMech mech;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rect rect;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool startAttack;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int timer;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float heightMax;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float heightinx;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject beam;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject body;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float speed;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 tPos;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject dieEffect;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x850330", Offset = "0x850330", VA = "0x850330", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x850390", Offset = "0x850390", VA = "0x850390", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x850818", Offset = "0x850818", VA = "0x850818")]
	private void setTpos()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x8508D4", Offset = "0x8508D4", VA = "0x8508D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x850AD8", Offset = "0x850AD8", VA = "0x850AD8")]
	public EnemyScriptDrone()
	{
	}
}
[Token(Token = "0x200002A")]
public class EnemyScriptGunship : EnemyScriptBase
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform plr;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform muzzleMiddle;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform muzzleLeft;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform muzzleRight;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform muzzleMissileLeft;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform muzzleMissileRight;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int counter;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool appear;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject smokes;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 MAX;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 MIN;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3? idealPos;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject BombEffect;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioMix audioMix;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 aim;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x850AFC", Offset = "0x850AFC", VA = "0x850AFC", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x850B78", Offset = "0x850B78", VA = "0x850B78")]
	private void randomMove()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x850E80", Offset = "0x850E80", VA = "0x850E80", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x851428", Offset = "0x851428", VA = "0x851428")]
	public void DoShootMissile(Transform mzl)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x851600", Offset = "0x851600", VA = "0x851600")]
	public EnemyScriptGunship()
	{
	}
}
[Token(Token = "0x200002B")]
public class EnemyScriptMech : EnemyScriptBase
{
	[Token(Token = "0x20001FC")]
	private enum LOOK
	{
		[Token(Token = "0x4000BD3")]
		FRONT,
		[Token(Token = "0x4000BD4")]
		PLAYER
	}

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float rotateSpeed;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform head;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform frontChecker;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform frontCheckerBase;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool jump;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject droneBase;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<GameObject> drones;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform bitPos1;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform bitPos2;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject boss2;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioMixEx audioMix;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject playerEye;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LOOK look;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool act;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Rect rect;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector2 jumppos;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float moveSpeed;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int waitTimer;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int waitTimerMax;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<Transform> muzzles;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int shootInterval;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int shootWorkTimer;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int shootWaitSec;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int shootWaitSecMax;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool nextdrone;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public ParticleSystem jumpEffect;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public ParticleSystem dieEffect;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float ypos;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool isJumpUp;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float idealRotY;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float shoot2ofs;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int shootPhase;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x8516A0", Offset = "0x8516A0", VA = "0x8516A0", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x851764", Offset = "0x851764", VA = "0x851764")]
	private void DeleteAllCollider()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x851790", Offset = "0x851790", VA = "0x851790")]
	private void DeleteAllColliderSub(Transform t)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x851894", Offset = "0x851894", VA = "0x851894", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x85245C", Offset = "0x85245C", VA = "0x85245C")]
	public void StartAct()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x8524C4", Offset = "0x8524C4", VA = "0x8524C4")]
	public void JumpDown()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x8524CC", Offset = "0x8524CC", VA = "0x8524CC")]
	public void JumpStart()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x8524DC", Offset = "0x8524DC", VA = "0x8524DC")]
	public void JumpEnd()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x852500", Offset = "0x852500", VA = "0x852500")]
	public void JumpComp()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x852738", Offset = "0x852738", VA = "0x852738")]
	public void ResetWaitTimer()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x850A70", Offset = "0x850A70", VA = "0x850A70")]
	public void DestroyDrone(GameObject d)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x8525BC", Offset = "0x8525BC", VA = "0x8525BC")]
	private void ShootDrone()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x851F34", Offset = "0x851F34", VA = "0x851F34")]
	private void Shoot1()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x851F98", Offset = "0x851F98", VA = "0x851F98")]
	private void Shoot2()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x852084", Offset = "0x852084", VA = "0x852084")]
	private void Shoot1Work()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x852274", Offset = "0x852274", VA = "0x852274")]
	private void Shoot2Work()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x852A14", Offset = "0x852A14", VA = "0x852A14")]
	private void DoShoot2(Transform mzl, ParticleSystem p)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x851CBC", Offset = "0x851CBC", VA = "0x851CBC")]
	private void JumpWork()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x851E34", Offset = "0x851E34", VA = "0x851E34")]
	private void setJumpPos()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x852004", Offset = "0x852004", VA = "0x852004")]
	private void setJumpPos(Vector2 pos)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x852BA4", Offset = "0x852BA4", VA = "0x852BA4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x852790", Offset = "0x852790", VA = "0x852790")]
	private bool LookatPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x852838", Offset = "0x852838", VA = "0x852838")]
	private bool LookatPos(Vector3 target)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x852804", Offset = "0x852804", VA = "0x852804")]
	private bool LookatFoward()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x852C70", Offset = "0x852C70", VA = "0x852C70")]
	public EnemyScriptMech()
	{
	}
}
[Token(Token = "0x200002C")]
public class EnemyScriptMob : EnemyScriptBase
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int ShootPattern;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float speed;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int damageCount;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x852CA4", Offset = "0x852CA4", VA = "0x852CA4", Slot = "4")]
	public override bool Damage(int dmg, bool headshot, GameObject dmgItem)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x852DC4", Offset = "0x852DC4", VA = "0x852DC4", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x852EAC", Offset = "0x852EAC", VA = "0x852EAC")]
	public void SetDisappearFlg()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x852FBC", Offset = "0x852FBC", VA = "0x852FBC")]
	public void ResetDamage()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x852FC4", Offset = "0x852FC4", VA = "0x852FC4", Slot = "10")]
	public override void StopAndShoot()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x8530D0", Offset = "0x8530D0", VA = "0x8530D0", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x853344", Offset = "0x853344", VA = "0x853344")]
	public EnemyScriptMob()
	{
	}
}
[Token(Token = "0x200002D")]
public class EnemyScriptNinja : EnemyScriptBase
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int AttackType;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int MovePattern;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float speed;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isFalling;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int damageCount;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float shurikenRotate;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject katana;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool damaging;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject katanaHit;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource audioKatana;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource audioShuriken;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x85335C", Offset = "0x85335C", VA = "0x85335C", Slot = "4")]
	public override bool Damage(int dmg, bool headshot, GameObject dmgItem)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x85348C", Offset = "0x85348C", VA = "0x85348C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x8536A0", Offset = "0x8536A0", VA = "0x8536A0")]
	public void SetDisappearFlg()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x8537B0", Offset = "0x8537B0", VA = "0x8537B0")]
	public void ResetDamage()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x8537B8", Offset = "0x8537B8", VA = "0x8537B8", Slot = "10")]
	public override void StopAndShoot()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x8538A4", Offset = "0x8538A4", VA = "0x8538A4", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x853EB0", Offset = "0x853EB0", VA = "0x853EB0")]
	public void StartDamaging()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x853EEC", Offset = "0x853EEC", VA = "0x853EEC")]
	public void EndDamaging()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x853EF4", Offset = "0x853EF4", VA = "0x853EF4")]
	public void ActiveKatana()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x853FC0", Offset = "0x853FC0", VA = "0x853FC0")]
	public void DeActiveKatana()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x853FE0", Offset = "0x853FE0", VA = "0x853FE0")]
	public void IsFallingReset()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x853FE8", Offset = "0x853FE8", VA = "0x853FE8")]
	public void DoShootShuriken()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x8543E4", Offset = "0x8543E4", VA = "0x8543E4")]
	public EnemyScriptNinja()
	{
	}
}
[Token(Token = "0x200002E")]
public class EnemyScriptRobot : EnemyScriptBase
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] beams;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject rocket;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] boosters;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject knuckle;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject mzlR;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject mzlL;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int tempDamage;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool jumping;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool bulletMzl;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int walk;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int dashSpeed;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject pl;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ParticleSystem land;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int nextActTimer;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject[] bombEff;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform[] bombEffPos;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector2 jumppos;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float moveSpeed;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject boss3;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool JumpBack;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Rect rect;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioMixEx audioMix;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioSource dash1;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioSource dash2;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AudioSource landS;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x6E56A4", Offset = "0x6E56A4", VA = "0x6E56A4")]
	public void JumpBackStart()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x6E56B0", Offset = "0x6E56B0", VA = "0x6E56B0")]
	public void JumpBackEnd()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x6E570C", Offset = "0x6E570C", VA = "0x6E570C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x6E57B4", Offset = "0x6E57B4", VA = "0x6E57B4")]
	public void StartBGM()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x6E57D4", Offset = "0x6E57D4", VA = "0x6E57D4", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x6E5AF0", Offset = "0x6E5AF0", VA = "0x6E5AF0")]
	private void setJumpPos()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x6E5E6C", Offset = "0x6E5E6C", VA = "0x6E5E6C", Slot = "4")]
	public override bool Damage(int dmg, bool headshot, GameObject dmgItem)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x6E61A0", Offset = "0x6E61A0", VA = "0x6E61A0")]
	public void ShootBeam()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x6E629C", Offset = "0x6E629C", VA = "0x6E629C")]
	public void StopBeam()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x6E6310", Offset = "0x6E6310", VA = "0x6E6310")]
	public void DispRocket()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x6E6330", Offset = "0x6E6330", VA = "0x6E6330")]
	public void HideRocket()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x6E6444", Offset = "0x6E6444", VA = "0x6E6444")]
	public void DashSound()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x6E6460", Offset = "0x6E6460", VA = "0x6E6460")]
	public void ShootBullet()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x6E6534", Offset = "0x6E6534", VA = "0x6E6534")]
	public void boosterStart()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x6E6664", Offset = "0x6E6664", VA = "0x6E6664")]
	public void boosterStop()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x6E6734", Offset = "0x6E6734", VA = "0x6E6734")]
	public void JumpStart()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x6E6740", Offset = "0x6E6740", VA = "0x6E6740")]
	public void JumpEnd()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x6E6150", Offset = "0x6E6150", VA = "0x6E6150")]
	public void StopAllEffect()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x6E5DF4", Offset = "0x6E5DF4", VA = "0x6E5DF4")]
	public void StopDash()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x6E5BEC", Offset = "0x6E5BEC", VA = "0x6E5BEC")]
	private void LookatPlayer()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x6E663C", Offset = "0x6E663C", VA = "0x6E663C")]
	public void dash()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x6E6780", Offset = "0x6E6780", VA = "0x6E6780")]
	public void foward()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x6E678C", Offset = "0x6E678C", VA = "0x6E678C")]
	public void backward()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x6E672C", Offset = "0x6E672C", VA = "0x6E672C")]
	public void stopwalk()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x6E56F0", Offset = "0x6E56F0", VA = "0x6E56F0")]
	public void LandEff()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x6E6798", Offset = "0x6E6798", VA = "0x6E6798")]
	public void atk2jump()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x6E67D8", Offset = "0x6E67D8", VA = "0x6E67D8")]
	public void dieEffect1()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x6E68C4", Offset = "0x6E68C4", VA = "0x6E68C4")]
	public void dieEffect2()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x6E69B4", Offset = "0x6E69B4", VA = "0x6E69B4")]
	public void dieEffect3()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x6E6AA8", Offset = "0x6E6AA8", VA = "0x6E6AA8")]
	public void dieEffect4()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x6E5CA4", Offset = "0x6E5CA4", VA = "0x6E5CA4")]
	private void JumpWork()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x6E6C4C", Offset = "0x6E6C4C", VA = "0x6E6C4C")]
	public EnemyScriptRobot()
	{
	}
}
[Token(Token = "0x200002F")]
public class EnemyScriptSamurai : EnemyScriptBase
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int tempDamage;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int timerNext;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool jumpmove;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject warpEffect;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject katanaHit;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool startAct;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int cleared;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform plr;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float speed;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool appearComplete;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject jimaku1;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject jimaku2;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int jimakuTimer;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int jimakuPhase;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float baseDist;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private PlayerMove playerMove;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip voice1;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip voice2;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioMix audioMix;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip metalS;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioClip metalWS;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioClip warpS;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioClip attackS1;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioClip attackS2;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject hajikiEffect;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioSource hajikiSound;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool isDown;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x6E6C68", Offset = "0x6E6C68", VA = "0x6E6C68", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x6E77D4", Offset = "0x6E77D4", VA = "0x6E77D4")]
	public void setStateAttack()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x6E7824", Offset = "0x6E7824", VA = "0x6E7824", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x6E78E8", Offset = "0x6E78E8", VA = "0x6E78E8")]
	public void Appeared()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x6E78F4", Offset = "0x6E78F4", VA = "0x6E78F4")]
	public void JumpMoveStart()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x6E7900", Offset = "0x6E7900", VA = "0x6E7900")]
	public void JumpMoveEnd()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x6E7908", Offset = "0x6E7908", VA = "0x6E7908")]
	public void SetState(string s)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x6E7910", Offset = "0x6E7910", VA = "0x6E7910")]
	public void Hajiki()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x6E7770", Offset = "0x6E7770", VA = "0x6E7770")]
	public void ResetTimer()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x6E7A30", Offset = "0x6E7A30", VA = "0x6E7A30")]
	public void AttackOn()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x6E7A10", Offset = "0x6E7A10", VA = "0x6E7A10")]
	public void AttackOff()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x6E7A50", Offset = "0x6E7A50", VA = "0x6E7A50")]
	private void warp()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x6E7BE0", Offset = "0x6E7BE0", VA = "0x6E7BE0")]
	private void DamageAnime()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x6E7C8C", Offset = "0x6E7C8C", VA = "0x6E7C8C", Slot = "4")]
	public override bool Damage(int dmg, bool headshot, GameObject dmgItem)
	{
		return default(bool);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x6E7F2C", Offset = "0x6E7F2C", VA = "0x6E7F2C")]
	public EnemyScriptSamurai()
	{
	}
}
[Token(Token = "0x2000030")]
public class EnemyScriptSmith : EnemyScriptBase
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject jimaku1;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject jimaku2;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int jimakuTimer;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int jimakuPhase;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float speed;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject hand;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform shootPos1;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform shootPos2;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject samurai;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int kind;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool jumping;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip voice1;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip voice2;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private new AudioSource audioSource;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int jimakuInterval;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject player;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x6E8298", Offset = "0x6E8298", VA = "0x6E8298")]
	public void startWalk()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x6E830C", Offset = "0x6E830C", VA = "0x6E830C")]
	public void SamuraiAppear()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x6E832C", Offset = "0x6E832C", VA = "0x6E832C")]
	public void JumpStart()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x6E8338", Offset = "0x6E8338", VA = "0x6E8338")]
	public void JumpEnd()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x6E83D4", Offset = "0x6E83D4", VA = "0x6E83D4", Slot = "10")]
	public override void StopAndShoot()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x6E84F8", Offset = "0x6E84F8", VA = "0x6E84F8", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x6E8624", Offset = "0x6E8624", VA = "0x6E8624", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x6E8A7C", Offset = "0x6E8A7C", VA = "0x6E8A7C")]
	public EnemyScriptSmith()
	{
	}
}
[Token(Token = "0x2000031")]
public class EnemyScriptSmithDemo : MonoBehaviour
{
	[Token(Token = "0x600011C")]
	[Address(RVA = "0x6E8A94", Offset = "0x6E8A94", VA = "0x6E8A94")]
	private void Start()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x6E8A98", Offset = "0x6E8A98", VA = "0x6E8A98")]
	private void Update()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x6E8A9C", Offset = "0x6E8A9C", VA = "0x6E8A9C")]
	public EnemyScriptSmithDemo()
	{
	}
}
[Token(Token = "0x2000032")]
public class EnemyScriptSmithFight : EnemyScriptBase
{
	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int nextActTimer;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int tempDamage;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool rolling;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float xposDefault;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float RolloutPos;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int shootIntervalCount;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool shoot1mzl;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool shoot1;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool suki;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject intermission;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform mzlL;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform mzlR;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float rollSpeed;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int rollWay;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public EnemyScriptSamuraiBuddy samurai;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject samuraiEffect;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform guardPos;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool dieCounterStart;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int dieCounter;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject player;

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x6E8AA4", Offset = "0x6E8AA4", VA = "0x6E8AA4", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x6E8ADC", Offset = "0x6E8ADC", VA = "0x6E8ADC")]
	public void SetState(string st)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x6E8AE4", Offset = "0x6E8AE4", VA = "0x6E8AE4")]
	public void ShowSamurai()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x6E8AFC", Offset = "0x6E8AFC", VA = "0x6E8AFC")]
	public void IntermissionActivate()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x6E8B08", Offset = "0x6E8B08", VA = "0x6E8B08")]
	public void LookPlayerStart()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x6E8BA0", Offset = "0x6E8BA0", VA = "0x6E8BA0")]
	public void LookPlayerEnd()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x6E8C0C", Offset = "0x6E8C0C", VA = "0x6E8C0C", Slot = "4")]
	public override bool Damage(int dmg, bool headshot, GameObject dmgItem)
	{
		return default(bool);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x6E8FB4", Offset = "0x6E8FB4", VA = "0x6E8FB4")]
	public void RollBackEnd()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x6E90B4", Offset = "0x6E90B4", VA = "0x6E90B4")]
	public void SetRollWay(int way)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x6E90BC", Offset = "0x6E90BC", VA = "0x6E90BC")]
	public void StartRoll()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x6E90C8", Offset = "0x6E90C8", VA = "0x6E90C8")]
	public void EndRoll()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x6E9144", Offset = "0x6E9144", VA = "0x6E9144")]
	public void Shoot1Start()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x6E9154", Offset = "0x6E9154", VA = "0x6E9154")]
	public void Shoot1End()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x6E915C", Offset = "0x6E915C", VA = "0x6E915C")]
	public void Shoot2(int m)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x6E91F8", Offset = "0x6E91F8", VA = "0x6E91F8")]
	public void Shoot3()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x6E92C4", Offset = "0x6E92C4", VA = "0x6E92C4")]
	public void Guard()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x6E93AC", Offset = "0x6E93AC", VA = "0x6E93AC")]
	public void sukiStart()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x6E93B8", Offset = "0x6E93B8", VA = "0x6E93B8")]
	public void sukiEnd()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x6E90D0", Offset = "0x6E90D0", VA = "0x6E90D0")]
	public void SetDefaultPos()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x6E93C0", Offset = "0x6E93C0", VA = "0x6E93C0", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x6E96B8", Offset = "0x6E96B8", VA = "0x6E96B8", Slot = "11")]
	public virtual void DoShoot2(Transform mzl, ParticleSystem p)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x6E997C", Offset = "0x6E997C", VA = "0x6E997C")]
	public EnemyScriptSmithFight()
	{
	}
}
[Token(Token = "0x2000033")]
public class EnemyScruptSmith : MonoBehaviour
{
	[Token(Token = "0x6000135")]
	[Address(RVA = "0x6E9990", Offset = "0x6E9990", VA = "0x6E9990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x6E9994", Offset = "0x6E9994", VA = "0x6E9994")]
	private void Update()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x6E9998", Offset = "0x6E9998", VA = "0x6E9998")]
	public EnemyScruptSmith()
	{
	}
}
[Token(Token = "0x2000034")]
public class EnemyScruptSmithRun : EnemyScriptBase
{
	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float speed;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int smithPhase;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x6E99A0", Offset = "0x6E99A0", VA = "0x6E99A0", Slot = "4")]
	public override bool Damage(int dmg, bool headshot, GameObject dmgItem)
	{
		return default(bool);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x6E9A74", Offset = "0x6E9A74", VA = "0x6E9A74", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x6E9BD4", Offset = "0x6E9BD4", VA = "0x6E9BD4", Slot = "10")]
	public override void StopAndShoot()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x6E9C50", Offset = "0x6E9C50", VA = "0x6E9C50")]
	public void SetDisappearFlg()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x6E9D44", Offset = "0x6E9D44", VA = "0x6E9D44", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x6E9F48", Offset = "0x6E9F48", VA = "0x6E9F48")]
	public EnemyScruptSmithRun()
	{
	}
}
[Token(Token = "0x2000035")]
public class EnemyScriptSamuraiBuddy : EnemyScriptBase
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EnemyScriptSmithFight smithDmg;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PlayerDamageWorkMain plrDmg;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject damageEffect;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject efPos;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool atkAble;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x6E7F44", Offset = "0x6E7F44", VA = "0x6E7F44")]
	public void GiveDamage()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x6E8088", Offset = "0x6E8088", VA = "0x6E8088")]
	public void Appear()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x6E80F8", Offset = "0x6E80F8", VA = "0x6E80F8")]
	public void SetState(string s)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x6E8100", Offset = "0x6E8100", VA = "0x6E8100")]
	public void Away()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x6E8160", Offset = "0x6E8160", VA = "0x6E8160", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x6E8268", Offset = "0x6E8268", VA = "0x6E8268", Slot = "4")]
	public override bool Damage(int dmg, bool headshot, GameObject dmgItem)
	{
		return default(bool);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x6E8290", Offset = "0x6E8290", VA = "0x6E8290")]
	public EnemyScriptSamuraiBuddy()
	{
	}
}
[Token(Token = "0x2000036")]
public class EnemyShootPosScript : MonoBehaviour
{
	[Token(Token = "0x6000145")]
	[Address(RVA = "0x6E9F58", Offset = "0x6E9F58", VA = "0x6E9F58")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x6EA028", Offset = "0x6EA028", VA = "0x6EA028")]
	public EnemyShootPosScript()
	{
	}
}
[Token(Token = "0x2000037")]
public class EquipDetailMenu : MenuControl
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform weapons;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> armList;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject center;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject left;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject right;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int num;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string currentArm;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string arm1;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string arm2;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string arm3;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string arm4;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int currentIndex;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GunMenuScriptStatic gunmenu;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int move;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	protected float MiddleThumbZ;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text slot;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x6EA030", Offset = "0x6EA030", VA = "0x6EA030", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x6EA304", Offset = "0x6EA304", VA = "0x6EA304")]
	private void setThreeArms()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x6EA420", Offset = "0x6EA420", VA = "0x6EA420")]
	private void setPosInitToMove()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x6EA5DC", Offset = "0x6EA5DC", VA = "0x6EA5DC", Slot = "9")]
	protected override void StickLeftWork()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x6EA610", Offset = "0x6EA610", VA = "0x6EA610", Slot = "10")]
	protected override void StickRightWork()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x6EA644", Offset = "0x6EA644", VA = "0x6EA644", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x6EAA4C", Offset = "0x6EAA4C", VA = "0x6EAA4C", Slot = "12")]
	protected override void ButtonLeft()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x6EACB8", Offset = "0x6EACB8", VA = "0x6EACB8")]
	public EquipDetailMenu()
	{
	}
}
[Token(Token = "0x2000038")]
public class EquipMainMenu : MenuControl
{
	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Image> btn;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected float TopThumbZ;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected float MiddleThumbZ;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected float BottomThumbZ;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite unselectedImageNum;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite selectedImageNum;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite pushedImageNum;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GunMenuScriptStatic gunMenu;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x6EACC8", Offset = "0x6EACC8", VA = "0x6EACC8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x6EACD0", Offset = "0x6EACD0", VA = "0x6EACD0", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x6EAD28", Offset = "0x6EAD28", VA = "0x6EAD28", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x6EAE78", Offset = "0x6EAE78", VA = "0x6EAE78", Slot = "7")]
	protected override void StickUpWork()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x6EAEDC", Offset = "0x6EAEDC", VA = "0x6EAEDC", Slot = "8")]
	protected override void StickDownWork()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x6EAF30", Offset = "0x6EAF30", VA = "0x6EAF30", Slot = "9")]
	protected override void StickLeftWork()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x6EAF88", Offset = "0x6EAF88", VA = "0x6EAF88", Slot = "10")]
	protected override void StickRightWork()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x6EAFE0", Offset = "0x6EAFE0", VA = "0x6EAFE0", Slot = "11")]
	protected override void ButtonPushed()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x6EB0A8", Offset = "0x6EB0A8", VA = "0x6EB0A8", Slot = "12")]
	protected override void ButtonLeft()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x6EB18C", Offset = "0x6EB18C", VA = "0x6EB18C")]
	public EquipMainMenu()
	{
	}
}
[Token(Token = "0x2000039")]
public class EraseMeshCol : MonoBehaviour
{
	[Token(Token = "0x6000159")]
	[Address(RVA = "0x6EB1A8", Offset = "0x6EB1A8", VA = "0x6EB1A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x6EB1AC", Offset = "0x6EB1AC", VA = "0x6EB1AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x6EB2F4", Offset = "0x6EB2F4", VA = "0x6EB2F4")]
	public EraseMeshCol()
	{
	}
}
[Token(Token = "0x200003A")]
public class EyelidScript : MonoBehaviour
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string nextScene;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rot;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int wait;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool moving;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject renderObj;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isClosing;

	[Token(Token = "0x14000001")]
	public event EventHandler CloseComplete
	{
		[Token(Token = "0x600015C")]
		[Address(RVA = "0x6EB590", Offset = "0x6EB590", VA = "0x6EB590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E10E0", Offset = "0x4E10E0")]
		add
		{
		}
		[Token(Token = "0x600015D")]
		[Address(RVA = "0x6EB634", Offset = "0x6EB634", VA = "0x6EB634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E10F0", Offset = "0x4E10F0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event EventHandler OpenComplete
	{
		[Token(Token = "0x600015E")]
		[Address(RVA = "0x6EB6D8", Offset = "0x6EB6D8", VA = "0x6EB6D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1100", Offset = "0x4E1100")]
		add
		{
		}
		[Token(Token = "0x600015F")]
		[Address(RVA = "0x6EB77C", Offset = "0x6EB77C", VA = "0x6EB77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1110", Offset = "0x4E1110")]
		remove
		{
		}
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x6EB820", Offset = "0x6EB820", VA = "0x6EB820")]
	public void startmove(string next)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x6EB864", Offset = "0x6EB864", VA = "0x6EB864")]
	public void openEye()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x6EB874", Offset = "0x6EB874", VA = "0x6EB874")]
	private void Start()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x6EB8A0", Offset = "0x6EB8A0", VA = "0x6EB8A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x6EBA8C", Offset = "0x6EBA8C", VA = "0x6EBA8C")]
	public EyelidScript()
	{
	}
}
[Token(Token = "0x200003B")]
public class CharacterShootEXAMPLE : MonoBehaviour
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool shoot;

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x849824", Offset = "0x849824", VA = "0x849824")]
	public void Start()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x849884", Offset = "0x849884", VA = "0x849884")]
	public void Update()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x8498D0", Offset = "0x8498D0", VA = "0x8498D0")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x849A08", Offset = "0x849A08", VA = "0x849A08")]
	public CharacterShootEXAMPLE()
	{
	}
}
[Token(Token = "0x200003C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4DB4E4", Offset = "0x4DB4E4")]
public class FraggedChild : MonoBehaviour
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int forceMax;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int forceMin;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool fragged;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 sPos;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion sRot;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 sScale;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FraggedController fragControl;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float hitPoints;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool stickyFrag;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	[HideInInspector]
	public bool connected;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	[HideInInspector]
	public bool released;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool checkToggle;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rigidbody cacheRB;

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x6EBDD4", Offset = "0x6EBDD4", VA = "0x6EBDD4")]
	public void Damage(float damage)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x6EC51C", Offset = "0x6EC51C", VA = "0x6EC51C")]
	public void Start()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x6EC714", Offset = "0x6EC714", VA = "0x6EC714")]
	public void checkConnections()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x6EC990", Offset = "0x6EC990", VA = "0x6EC990")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x6ECC8C", Offset = "0x6ECC8C", VA = "0x6ECC8C")]
	public void addForce(int fMin, int fMax)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x6EBE24", Offset = "0x6EBE24", VA = "0x6EBE24")]
	public void fragMe(float hitFor)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x6ED374", Offset = "0x6ED374", VA = "0x6ED374")]
	public void SpeedCheck()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x6ED444", Offset = "0x6ED444", VA = "0x6ED444")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x6ED52C", Offset = "0x6ED52C", VA = "0x6ED52C")]
	public void resetMe()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x6ED6C4", Offset = "0x6ED6C4", VA = "0x6ED6C4")]
	public FraggedChild()
	{
	}
}
[Token(Token = "0x200003D")]
public class FraggedController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBE18", Offset = "0x4DBE18")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<MeshFilter, float> <>9__36_0;

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x6EEF48", Offset = "0x6EEF48", VA = "0x6EEF48")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x6EEF50", Offset = "0x6EEF50", VA = "0x6EEF50")]
		internal float <FindSticky>b__36_0(MeshFilter x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC250", Offset = "0x4DC250")]
	public bool fragEnabled;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int forceMax;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int forceMin;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fragOffScale;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int rotateOnHit;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fragMass;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float hitPointDecrease;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float limitFragmentSpeed;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool fragAllOnDamage;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC288", Offset = "0x4DC288")]
	public int collidefragMagnitude;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask collideMask;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC2C0", Offset = "0x4DC2C0")]
	public Vector2 fragEmitMinMax;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC2F8", Offset = "0x4DC2F8")]
	public int stickyTop;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int stickyBottom;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int connectedFragments;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float connectOverlapSphere;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public LayerMask stickyMask;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC330", Offset = "0x4DC330")]
	public LayerMask disableMask;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float disableDelay;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool combineFrags;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int combineMeshesDelay;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Transform startMesh;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public ParticleSystem fragParticles;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public ParticleSystem dustParticles;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public int reCounter;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public GameObject combinedFrags;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public MeshFilter[] meshFilters;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Transform fragments;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC3D8", Offset = "0x4DC3D8")]
	public Material[] fragMaterials;

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x6ED6E0", Offset = "0x6ED6E0", VA = "0x6ED6E0")]
	public void ResetFrags()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x6EDB80", Offset = "0x6EDB80", VA = "0x6EDB80")]
	public void Start()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x6EEAF4", Offset = "0x6EEAF4", VA = "0x6EEAF4")]
	public void ChangeMaterials()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x6EEBC8", Offset = "0x6EEBC8", VA = "0x6EEBC8")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x6EECD8", Offset = "0x6EECD8", VA = "0x6EECD8")]
	public int Compare(float first, float second)
	{
		return default(int);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x6EC458", Offset = "0x6EC458", VA = "0x6EC458")]
	public void FragAll()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x6ED1B8", Offset = "0x6ED1B8", VA = "0x6ED1B8")]
	public void checkConnections()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x6EDD6C", Offset = "0x6EDD6C", VA = "0x6EDD6C")]
	public void FindSticky()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x6EED00", Offset = "0x6EED00", VA = "0x6EED00")]
	public int Contains(ArrayList l, string n)
	{
		return default(int);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x6ECE14", Offset = "0x6ECE14", VA = "0x6ECE14")]
	public void EnableRenderers()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x6EDF50", Offset = "0x6EDF50", VA = "0x6EDF50")]
	public void CombineFrags()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x6ED084", Offset = "0x6ED084", VA = "0x6ED084")]
	public void ReleaseFrags(bool editor)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x6EDA60", Offset = "0x6EDA60", VA = "0x6EDA60")]
	public void reCombine()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x6EEE34", Offset = "0x6EEE34", VA = "0x6EEE34")]
	public FraggedController()
	{
	}
}
[Token(Token = "0x200003E")]
public class GUIResetEXAMPLE : MonoBehaviour
{
	[Token(Token = "0x6000181")]
	[Address(RVA = "0x6EF004", Offset = "0x6EF004", VA = "0x6EF004")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x6EF0F4", Offset = "0x6EF0F4", VA = "0x6EF0F4")]
	public void ResetAll()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x6EF1FC", Offset = "0x6EF1FC", VA = "0x6EF1FC")]
	public GUIResetEXAMPLE()
	{
	}
}
[Token(Token = "0x200003F")]
public class FukidasiShow : MonoBehaviour
{
	[Token(Token = "0x6000184")]
	[Address(RVA = "0x6EEF84", Offset = "0x6EEF84", VA = "0x6EEF84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x6EEF88", Offset = "0x6EEF88", VA = "0x6EEF88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x6EEFFC", Offset = "0x6EEFFC", VA = "0x6EEFFC")]
	public FukidasiShow()
	{
	}
}
[Token(Token = "0x2000040")]
public class GameoverScript : MonoBehaviour
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EyelidScript eyelid;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material hide;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int phase;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int timer;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x6EF204", Offset = "0x6EF204", VA = "0x6EF204")]
	private void Start()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x6EF260", Offset = "0x6EF260", VA = "0x6EF260")]
	private void Update()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x6EF378", Offset = "0x6EF378", VA = "0x6EF378")]
	public GameoverScript()
	{
	}
}
[Token(Token = "0x2000041")]
public class MaterialChanger : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001FE")]
	public class Materials
	{
		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material MainBody;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material MagAndReloderOrChamber;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material Parts;

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x7DBF3C", Offset = "0x7DBF3C", VA = "0x7DBF3C")]
		public Materials()
		{
		}
	}

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DC410", Offset = "0x4DC410")]
	public int DisertEgalTextureIndex;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Materials> DisertEgalMaterials;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform DisertEgal;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform DEMAINBODY;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform DERELODER;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform DEPART;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform DEPART2;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform DEPART3;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform DEPART4;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform MAG;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DC428", Offset = "0x4DC428")]
	public int GlockG22TexturesIndex;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Materials> GlockG22Materials;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform GlockG22;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform GMainBody;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform GPART;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform GPART2;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform GRELODER;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform GMAG;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform GPART3;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform GPART4;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DC440", Offset = "0x4DC440")]
	public int SAndW357TextureIndex;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Materials> SAndW357Materials;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform SAndW357;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform SMAINBODY;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform SCHAMBER;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform SPART;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform SPART2;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform SPART3;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Transform SPART4;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform SPART5;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DC458", Offset = "0x4DC458")]
	public int SAndW500TextureIndex;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<Materials> SAndW500Materials;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Transform SAndW500;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Transform SWMAINBODY;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Transform SWCHAMBER;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Transform SWPART;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform SWPART2;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform SWPART3;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Transform SWPART4;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform SWPART5;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x7D94AC", Offset = "0x7D94AC", VA = "0x7D94AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x7D9A30", Offset = "0x7D9A30", VA = "0x7D9A30")]
	private void Update()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x7DBE60", Offset = "0x7DBE60", VA = "0x7DBE60")]
	public MaterialChanger()
	{
	}
}
[Token(Token = "0x2000042")]
public class GunMenuScript : MonoBehaviour
{
	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject menu;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool? lastB;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool? lastY;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> buttonPos;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform cameraPos;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerMove pm;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> infos;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x6F0188", Offset = "0x6F0188", VA = "0x6F0188", Slot = "4")]
	public virtual void initMenu()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x6F0254", Offset = "0x6F0254", VA = "0x6F0254")]
	private void UpdateIconState(WeaponIconEnable icon)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x6F0380", Offset = "0x6F0380", VA = "0x6F0380", Slot = "5")]
	protected virtual GameObject makeButton(string name, int index)
	{
		return null;
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x6F0684", Offset = "0x6F0684", VA = "0x6F0684", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x6F06DC", Offset = "0x6F06DC", VA = "0x6F06DC")]
	private void move()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x6F078C", Offset = "0x6F078C", VA = "0x6F078C", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x6F0B90", Offset = "0x6F0B90", VA = "0x6F0B90")]
	public GunMenuScript()
	{
	}
}
[Token(Token = "0x2000043")]
public class GunMenuScriptStatic : GunMenuScript
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material normal1;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material normal2;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material selected1;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material selected2;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int selectedIndex;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool setColorFlg;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x6F0B98", Offset = "0x6F0B98", VA = "0x6F0B98", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x6F0BD0", Offset = "0x6F0BD0", VA = "0x6F0BD0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x6F0BFC", Offset = "0x6F0BFC", VA = "0x6F0BFC", Slot = "4")]
	public override void initMenu()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x6EA410", Offset = "0x6EA410", VA = "0x6EA410")]
	public void setColor(int index)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x6EAD1C", Offset = "0x6EAD1C", VA = "0x6EAD1C")]
	public void setColor()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x6F0BC8", Offset = "0x6F0BC8", VA = "0x6F0BC8")]
	private void setColorWork()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x6F0C24", Offset = "0x6F0C24", VA = "0x6F0C24")]
	private void setColorWork(int index)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x6F0DF8", Offset = "0x6F0DF8", VA = "0x6F0DF8", Slot = "5")]
	protected override GameObject makeButton(string name, int index)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x6F0EBC", Offset = "0x6F0EBC", VA = "0x6F0EBC")]
	public GunMenuScriptStatic()
	{
	}
}
[Token(Token = "0x2000044")]
public class HandController : MonoBehaviour
{
	[Token(Token = "0x20001FF")]
	public enum LR
	{
		[Token(Token = "0x4000BDB")]
		RIGHT,
		[Token(Token = "0x4000BDC")]
		LEFT
	}

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LR lr;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rSode;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rWatch;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lSode;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lWatch;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hand;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject grip;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject phone;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject cocktail;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public IntermissionHold watch;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public IntermissionHold phoneTable;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public IntermissionHold cocktailTable;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MenuMaster mm;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string fixHand;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x6F0EC4", Offset = "0x6F0EC4", VA = "0x6F0EC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x6F0FB4", Offset = "0x6F0FB4", VA = "0x6F0FB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x6F1588", Offset = "0x6F1588", VA = "0x6F1588")]
	public HandController()
	{
	}
}
[Token(Token = "0x2000045")]
public class HandControllerTitle : MonoBehaviour
{
	[Token(Token = "0x2000200")]
	public enum LR
	{
		[Token(Token = "0x4000BDE")]
		RIGHT,
		[Token(Token = "0x4000BDF")]
		LEFT
	}

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LR lr;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rSode;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rWatch;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lSode;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lWatch;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hand;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject grip;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject board;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject boardDoor;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HandEnterCheck handEnterCheck;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform boardBody;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform parm;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform back;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform head;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TitleDoorOpen doorOpen;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BoardFrontCheck boardCheck;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x6F1590", Offset = "0x6F1590", VA = "0x6F1590")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x6F16D0", Offset = "0x6F16D0", VA = "0x6F16D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x6F1AA0", Offset = "0x6F1AA0", VA = "0x6F1AA0")]
	private bool checkParm()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x6F1BCC", Offset = "0x6F1BCC", VA = "0x6F1BCC")]
	public HandControllerTitle()
	{
	}
}
[Token(Token = "0x2000046")]
public class HandEnterCheck : MonoBehaviour
{
	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject watch;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject board;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject knob;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool touchWatch;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool touchBoard;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool touchKnob;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public HandControllerTitle.LR lr;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x6F1BD4", Offset = "0x6F1BD4", VA = "0x6F1BD4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x6F1C88", Offset = "0x6F1C88", VA = "0x6F1C88")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x6F1D30", Offset = "0x6F1D30", VA = "0x6F1D30")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x6F1D34", Offset = "0x6F1D34", VA = "0x6F1D34")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x6F1D38", Offset = "0x6F1D38", VA = "0x6F1D38")]
	public HandEnterCheck()
	{
	}
}
[Token(Token = "0x2000047")]
public class HandTrigger : MonoBehaviour
{
	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShootGatling gatling;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enterGatling;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool gripHand;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ArmSelector selector;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject menu;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool? lastGlip;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string gunName;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WeaponIconEnable wae;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EyelidScript eyelid;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x6F1D40", Offset = "0x6F1D40", VA = "0x6F1D40")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x6F1ED4", Offset = "0x6F1ED4", VA = "0x6F1ED4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x6F1F84", Offset = "0x6F1F84", VA = "0x6F1F84")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x6F1F88", Offset = "0x6F1F88", VA = "0x6F1F88")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x6F2210", Offset = "0x6F2210", VA = "0x6F2210")]
	public HandTrigger()
	{
	}
}
[Token(Token = "0x2000048")]
public class RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x6E1870", Offset = "0x6E1870", VA = "0x6E1870")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x6E18C8", Offset = "0x6E18C8", VA = "0x6E18C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x6E19B8", Offset = "0x6E19B8", VA = "0x6E19B8")]
	public RealtimeReflection()
	{
	}
}
[Token(Token = "0x2000049")]
public class RealtimeReflection1 : MonoBehaviour
{
	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x6E19C0", Offset = "0x6E19C0", VA = "0x6E19C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x6E1A18", Offset = "0x6E1A18", VA = "0x6E1A18")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x6E1B0C", Offset = "0x6E1B0C", VA = "0x6E1B0C")]
	public RealtimeReflection1()
	{
	}
}
[Token(Token = "0x200004A")]
public class IM_Init : MonoBehaviour
{
	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x6F2CD4", Offset = "0x6F2CD4", VA = "0x6F2CD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x6F2CF8", Offset = "0x6F2CF8", VA = "0x6F2CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x6F2CFC", Offset = "0x6F2CFC", VA = "0x6F2CFC")]
	public IM_Init()
	{
	}
}
[Token(Token = "0x200004B")]
public class InfoGatling : MonoBehaviour
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fukidashi;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture> tex;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentMat;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int timer;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject player;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x6F2D04", Offset = "0x6F2D04", VA = "0x6F2D04")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x6F2E38", Offset = "0x6F2E38", VA = "0x6F2E38")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x6F2FD8", Offset = "0x6F2FD8", VA = "0x6F2FD8")]
	public InfoGatling()
	{
	}
}
[Token(Token = "0x200004C")]
public class InfoWinchester : MonoBehaviour
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fukidashi;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture> tex;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentMat;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int timer;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject player;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x6F2FE0", Offset = "0x6F2FE0", VA = "0x6F2FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x6F3114", Offset = "0x6F3114", VA = "0x6F3114")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x6F32B4", Offset = "0x6F32B4", VA = "0x6F32B4")]
	public InfoWinchester()
	{
	}
}
[Token(Token = "0x200004D")]
public class IntermissionHold : MonoBehaviour
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string opt;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool touchingLeft;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool touchingRight;

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x6F3320", Offset = "0x6F3320", VA = "0x6F3320")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x6F33FC", Offset = "0x6F33FC", VA = "0x6F33FC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x6F34D4", Offset = "0x6F34D4", VA = "0x6F34D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x6F34D8", Offset = "0x6F34D8", VA = "0x6F34D8")]
	public IntermissionHold()
	{
	}
}
[Token(Token = "0x200004E")]
public class IntermissionSamurai : MonoBehaviour
{
	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string kind;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> samurais;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x6F34E0", Offset = "0x6F34E0", VA = "0x6F34E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x6F354C", Offset = "0x6F354C", VA = "0x6F354C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x6F367C", Offset = "0x6F367C", VA = "0x6F367C")]
	public IntermissionSamurai()
	{
	}
}
[Token(Token = "0x200004F")]
public class IntroPhone : MonoBehaviour
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fukidashi;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture> tex;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentMat;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int timer;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject player;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material matOk;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material matSelect;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x6F3684", Offset = "0x6F3684", VA = "0x6F3684")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x6F3834", Offset = "0x6F3834", VA = "0x6F3834")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x6F3A98", Offset = "0x6F3A98", VA = "0x6F3A98")]
	public IntroPhone()
	{
	}
}
[Token(Token = "0x2000050")]
public class IntroTextChange : MonoBehaviour
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Text> texts;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int selected;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int count;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool changing;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x6F3AA0", Offset = "0x6F3AA0", VA = "0x6F3AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x6F3E5C", Offset = "0x6F3E5C", VA = "0x6F3E5C")]
	public IntroTextChange()
	{
	}
}
[Token(Token = "0x2000051")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBE28", Offset = "0x4DBE28")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x843D30", Offset = "0x843D30", VA = "0x843D30")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x843D38", Offset = "0x843D38", VA = "0x843D38")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBE38", Offset = "0x4DBE38")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x170000D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x843EEC", Offset = "0x843EEC", VA = "0x843EEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x843F54", Offset = "0x843F54", VA = "0x843F54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x843C30", Offset = "0x843C30", VA = "0x843C30")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x843D8C", Offset = "0x843D8C", VA = "0x843D8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x843D90", Offset = "0x843D90", VA = "0x843D90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x843EF4", Offset = "0x843EF4", VA = "0x843EF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x4DC470", Offset = "0x4DC470")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x4DC470", Offset = "0x4DC470")]
	public Image slowMoBtn;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x4DC4A8", Offset = "0x4DC4A8")]
	public Text EffectLabel;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x842F14", Offset = "0x842F14", VA = "0x842F14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x843264", Offset = "0x843264", VA = "0x843264")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x843904", Offset = "0x843904", VA = "0x843904")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x8439E4", Offset = "0x8439E4", VA = "0x8439E4")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x843AEC", Offset = "0x843AEC", VA = "0x843AEC")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x843BB8", Offset = "0x843BB8", VA = "0x843BB8")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x843BBC", Offset = "0x843BBC", VA = "0x843BBC")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x843134", Offset = "0x843134", VA = "0x843134")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x843730", Offset = "0x843730", VA = "0x843730")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x843BC0", Offset = "0x843BC0", VA = "0x843BC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1120", Offset = "0x4E1120")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x84357C", Offset = "0x84357C", VA = "0x84357C")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x8435B4", Offset = "0x8435B4", VA = "0x8435B4")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x8435E8", Offset = "0x8435E8", VA = "0x8435E8")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x843C5C", Offset = "0x843C5C", VA = "0x843C5C")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x2000052")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 baseDir;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x8440A4", Offset = "0x8440A4", VA = "0x8440A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x844208", Offset = "0x844208", VA = "0x844208")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x844384", Offset = "0x844384", VA = "0x844384")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x2000053")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x842D18", Offset = "0x842D18", VA = "0x842D18")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x842DD8", Offset = "0x842DD8", VA = "0x842DD8")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x2000054")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DB51C", Offset = "0x4DB51C")]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loop;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float addIntensity;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minIntensity;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float baseIntensity;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x844814", Offset = "0x844814", VA = "0x844814")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x84487C", Offset = "0x84487C", VA = "0x84487C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x844890", Offset = "0x844890", VA = "0x844890")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x844960", Offset = "0x844960", VA = "0x844960")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000055")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DB580", Offset = "0x4DB580")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x842DE8", Offset = "0x842DE8", VA = "0x842DE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x842DF4", Offset = "0x842DF4", VA = "0x842DF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x842F04", Offset = "0x842F04", VA = "0x842F04")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x2000056")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x843F5C", Offset = "0x843F5C", VA = "0x843F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x844010", Offset = "0x844010", VA = "0x844010")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000057")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x844414", Offset = "0x844414", VA = "0x844414")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x84455C", Offset = "0x84455C", VA = "0x84455C")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x2000058")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x8445C0", Offset = "0x8445C0", VA = "0x8445C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x84469C", Offset = "0x84469C", VA = "0x84469C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x844784", Offset = "0x844784", VA = "0x844784")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x2000059")]
public class WFX_Demo : MonoBehaviour
{
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBE48", Offset = "0x4DBE48")]
	private sealed class <RandomSpawnsCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_Demo <>4__this;

		[Token(Token = "0x170000D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0x902E04", Offset = "0x902E04", VA = "0x902E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0x902E6C", Offset = "0x902E6C", VA = "0x902E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x901FD8", Offset = "0x901FD8", VA = "0x901FD8")]
		[DebuggerHidden]
		public <RandomSpawnsCoroutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x902B58", Offset = "0x902B58", VA = "0x902B58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x902B5C", Offset = "0x902B5C", VA = "0x902B5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x902E0C", Offset = "0x902E0C", VA = "0x902E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSpeed;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool orderedSpawns;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float step;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float order;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject walls;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bulletholes;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] ParticleExamples;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIndex;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string randomSpawnsDelay;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool randomSpawns;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool slowMo;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool rotateCam;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material wood;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material concrete;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material metal;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material checker;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material woodWall;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material concreteWall;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material metalWall;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material checkerWall;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string groundTextureStr;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<string> groundTextures;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject m4;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m4fps;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool rotate_m4;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x900D98", Offset = "0x900D98", VA = "0x900D98")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x900F58", Offset = "0x900F58", VA = "0x900F58")]
	public GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x9011B0", Offset = "0x9011B0", VA = "0x9011B0")]
	private void SetActiveCrossVersions(GameObject obj, bool active)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x901260", Offset = "0x901260", VA = "0x901260")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x901F68", Offset = "0x901F68", VA = "0x901F68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1184", Offset = "0x4E1184")]
	private IEnumerator RandomSpawnsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x902004", Offset = "0x902004", VA = "0x902004")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x901E14", Offset = "0x901E14", VA = "0x901E14")]
	private void prevTexture()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x901EC4", Offset = "0x901EC4", VA = "0x901EC4")]
	private void nextTexture()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x9021DC", Offset = "0x9021DC", VA = "0x9021DC")]
	private void selectMaterial()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x901DA8", Offset = "0x901DA8", VA = "0x901DA8")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x901DE0", Offset = "0x901DE0", VA = "0x901DE0")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x902500", Offset = "0x902500", VA = "0x902500")]
	private void showHideStuff()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x902990", Offset = "0x902990", VA = "0x902990")]
	public WFX_Demo()
	{
	}
}
[Token(Token = "0x200005A")]
public class WFX_Demo_DeleteAfterDelay : MonoBehaviour
{
	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x902E74", Offset = "0x902E74", VA = "0x902E74")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x902F24", Offset = "0x902F24", VA = "0x902F24")]
	public WFX_Demo_DeleteAfterDelay()
	{
	}
}
[Token(Token = "0x200005B")]
public class WFX_Demo_New : MonoBehaviour
{
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBE58", Offset = "0x4DBE58")]
	private sealed class <CheckForDeletedParticles>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_Demo_New <>4__this;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0xE950E4", Offset = "0xE950E4", VA = "0xE950E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0xE9514C", Offset = "0xE9514C", VA = "0xE9514C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xE94F58", Offset = "0xE94F58", VA = "0xE94F58")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xE94F84", Offset = "0xE94F84", VA = "0xE94F84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xE94F88", Offset = "0xE94F88", VA = "0xE94F88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xE950EC", Offset = "0xE950EC", VA = "0xE950EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x4DC4B8", Offset = "0x4DC4B8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x4DC4B8", Offset = "0x4DC4B8")]
	public Image slowMoBtn;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x4DC4F0", Offset = "0x4DC4F0")]
	public Text EffectLabel;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] AdditionalEffects;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ground;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject walls;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject bulletholes;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m4;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject m4fps;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material wood;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material concrete;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material metal;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material checker;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material woodWall;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material concreteWall;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material metalWall;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material checkerWall;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string groundTextureStr;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<string> groundTextures;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int exampleIndex;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool slowMo;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x902F34", Offset = "0x902F34", VA = "0x902F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x903200", Offset = "0x903200", VA = "0x903200")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x903ABC", Offset = "0x903ABC", VA = "0x903ABC")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x903B9C", Offset = "0x903B9C", VA = "0x903B9C")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x903CA4", Offset = "0x903CA4", VA = "0x903CA4")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x903D70", Offset = "0x903D70", VA = "0x903D70")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x903D74", Offset = "0x903D74", VA = "0x903D74")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x9030D0", Offset = "0x9030D0", VA = "0x9030D0")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x903730", Offset = "0x903730", VA = "0x903730")]
	public GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x903D78", Offset = "0x903D78", VA = "0x903D78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E11E8", Offset = "0x4E11E8")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x903548", Offset = "0x903548", VA = "0x903548")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x903598", Offset = "0x903598", VA = "0x903598")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x9035E8", Offset = "0x9035E8", VA = "0x9035E8")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x904340", Offset = "0x904340", VA = "0x904340")]
	private void prevTexture()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x904744", Offset = "0x904744", VA = "0x904744")]
	private void nextTexture()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x9043F0", Offset = "0x9043F0", VA = "0x9043F0")]
	private void selectMaterial()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x903DE8", Offset = "0x903DE8", VA = "0x903DE8")]
	private void showHideStuff()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x9047E8", Offset = "0x9047E8", VA = "0x9047E8")]
	public WFX_Demo_New()
	{
	}
}
[Token(Token = "0x200005C")]
public class WFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xE95154", Offset = "0xE95154", VA = "0xE95154")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xE95208", Offset = "0xE95208", VA = "0xE95208")]
	public WFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x200005D")]
public class WFX_Demo_Wall : MonoBehaviour
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WFX_Demo_New demo;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xE9529C", Offset = "0xE9529C", VA = "0xE9529C")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xE9547C", Offset = "0xE9547C", VA = "0xE9547C")]
	public WFX_Demo_Wall()
	{
	}
}
[Token(Token = "0x200005E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DB5E4", Offset = "0x4DB5E4")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBE68", Offset = "0x4DBE68")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x170000D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x842CA8", Offset = "0x842CA8", VA = "0x842CA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0x842D10", Offset = "0x842D10", VA = "0x842D10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x842AF8", Offset = "0x842AF8", VA = "0x842AF8")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x842B2C", Offset = "0x842B2C", VA = "0x842B2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x842B30", Offset = "0x842B30", VA = "0x842B30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x842CB0", Offset = "0x842CB0", VA = "0x842CB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x842A34", Offset = "0x842A34", VA = "0x842A34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x842A88", Offset = "0x842A88", VA = "0x842A88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E124C", Offset = "0x4E124C")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x842B24", Offset = "0x842B24", VA = "0x842B24")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x200005F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DB648", Offset = "0x4DB648")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x844970", Offset = "0x844970", VA = "0x844970")]
	private void Start()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x8449D8", Offset = "0x8449D8", VA = "0x8449D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x844A5C", Offset = "0x844A5C", VA = "0x844A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x844BFC", Offset = "0x844BFC", VA = "0x844BFC")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000060")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DB6AC", Offset = "0x4DB6AC")]
public class WFX_BulletHoleDecal : MonoBehaviour
{
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBE78", Offset = "0x4DBE78")]
	private sealed class <holeUpdate>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_BulletHoleDecal <>4__this;

		[Token(Token = "0x170000D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x900D28", Offset = "0x900D28", VA = "0x900D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x900D90", Offset = "0x900D90", VA = "0x900D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x900A8C", Offset = "0x900A8C", VA = "0x900A8C")]
		[DebuggerHidden]
		public <holeUpdate>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x900BFC", Offset = "0x900BFC", VA = "0x900BFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x900C00", Offset = "0x900C00", VA = "0x900C00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x900D30", Offset = "0x900D30", VA = "0x900D30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2[] quadUVs;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifetime;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeoutpercent;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 frames;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomRotation;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool deactivate;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float life;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeout;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color color;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float orgAlpha;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x900700", Offset = "0x900700", VA = "0x900700")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x900788", Offset = "0x900788", VA = "0x900788")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x900A1C", Offset = "0x900A1C", VA = "0x900A1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E12B0", Offset = "0x4E12B0")]
	private IEnumerator holeUpdate()
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x900AB8", Offset = "0x900AB8", VA = "0x900AB8")]
	public WFX_BulletHoleDecal()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DB710", Offset = "0x4DB710")]
public class WFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBE88", Offset = "0x4DBE88")]
	private sealed class <Flicker>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_LightFlicker <>4__this;

		[Token(Token = "0x170000DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0xE9569C", Offset = "0xE9569C", VA = "0xE9569C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xE95704", Offset = "0xE95704", VA = "0xE95704", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xE95550", Offset = "0xE95550", VA = "0xE95550")]
		[DebuggerHidden]
		public <Flicker>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xE95590", Offset = "0xE95590", VA = "0xE95590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xE95594", Offset = "0xE95594", VA = "0xE95594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xE956A4", Offset = "0xE956A4", VA = "0xE956A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xE95484", Offset = "0xE95484", VA = "0xE95484")]
	private void Start()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xE954E0", Offset = "0xE954E0", VA = "0xE954E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1314", Offset = "0x4E1314")]
	private IEnumerator Flicker()
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xE9557C", Offset = "0xE9557C", VA = "0xE9557C")]
	public WFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000062")]
public class CFX_SpawnSystem : MonoBehaviour
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CFX_SpawnSystem instance;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToPreload;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] objectsToPreloadTimes;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideObjectsInHierarchy;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool spawnAsChildren;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool onlyGetInactiveObjects;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool instantiateIfNeeded;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool allObjectsLoaded;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<GameObject>> instantiatedObjects;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> poolCursors;

	[Token(Token = "0x17000001")]
	public static bool AllObjectsLoaded
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x8459A8", Offset = "0x8459A8", VA = "0x8459A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x844C0C", Offset = "0x844C0C", VA = "0x844C0C")]
	public static GameObject GetNextObject(GameObject sourceObj, bool activateObject = true)
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x8452D4", Offset = "0x8452D4", VA = "0x8452D4")]
	public static void PreloadObject(GameObject sourceObj, int poolSize = 1)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x8455EC", Offset = "0x8455EC", VA = "0x8455EC")]
	public static void UnloadObjects(GameObject sourceObj)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x845344", Offset = "0x845344", VA = "0x845344")]
	private void addObjectToPool(GameObject sourceObject, int number)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x84564C", Offset = "0x84564C", VA = "0x84564C")]
	private void removeObjectsFromPool(GameObject sourceObject)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x845190", Offset = "0x845190", VA = "0x845190")]
	private void increasePoolCursor(int uniqueId)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x845A04", Offset = "0x845A04", VA = "0x845A04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x845AEC", Offset = "0x845AEC", VA = "0x845AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x845B78", Offset = "0x845B78", VA = "0x845B78")]
	public CFX_SpawnSystem()
	{
	}
}
[Token(Token = "0x2000063")]
public class JukeBoxController : MonoBehaviour
{
	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AudioClip> usualMusics;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip ending1;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip ending2;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentClip;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float idealVolume;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer musicby;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material maou;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material mus;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material otolog;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject endroll;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text txt;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x6F3E64", Offset = "0x6F3E64", VA = "0x6F3E64")]
	private void Start()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x6F4134", Offset = "0x6F4134", VA = "0x6F4134")]
	public bool IsPlayingEnding()
	{
		return default(bool);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x6F41B0", Offset = "0x6F41B0", VA = "0x6F41B0")]
	public void SetVolume(float volume)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x6F41B8", Offset = "0x6F41B8", VA = "0x6F41B8")]
	public AudioClip GetCurrentAudioClip()
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x6F3F48", Offset = "0x6F3F48", VA = "0x6F3F48")]
	public void PlayMusic(int endKind)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x6F437C", Offset = "0x6F437C", VA = "0x6F437C")]
	private void Update()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x6F4208", Offset = "0x6F4208", VA = "0x6F4208")]
	private void SetRandomClip()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x6F44E0", Offset = "0x6F44E0", VA = "0x6F44E0")]
	public JukeBoxController()
	{
	}
}
[Token(Token = "0x2000064")]
public class KatanaVsKatana : MonoBehaviour
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyScriptSamurai samurai;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem effect;

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x6F44E8", Offset = "0x6F44E8", VA = "0x6F44E8")]
	private void EnterWork(GameObject other)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x6F45FC", Offset = "0x6F45FC", VA = "0x6F45FC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x6F4634", Offset = "0x6F4634", VA = "0x6F4634")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x6F466C", Offset = "0x6F466C", VA = "0x6F466C")]
	public KatanaVsKatana()
	{
	}
}
[Token(Token = "0x2000065")]
public class KickSound : MonoBehaviour
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip kk;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip lnd;

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x6F4674", Offset = "0x6F4674", VA = "0x6F4674")]
	private void Start()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x6F4678", Offset = "0x6F4678", VA = "0x6F4678")]
	private void Update()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x6F467C", Offset = "0x6F467C", VA = "0x6F467C")]
	public void Land()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x6F4798", Offset = "0x6F4798", VA = "0x6F4798")]
	public void Kick()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x6F4684", Offset = "0x6F4684", VA = "0x6F4684")]
	private void MakeSound(AudioClip clip)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x6F47A0", Offset = "0x6F47A0", VA = "0x6F47A0")]
	public KickSound()
	{
	}
}
[Token(Token = "0x2000066")]
public class LangSelect : MonoBehaviour
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject jp;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject en;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ch;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ko;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ru;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject it;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject du;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject sw;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject sp;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject dn;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ge;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject tr;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject fr;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> list;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x6F4D24", Offset = "0x6F4D24", VA = "0x6F4D24")]
	private void Update()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x6F4EAC", Offset = "0x6F4EAC", VA = "0x6F4EAC")]
	private void Act(GameObject obj)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x6F5194", Offset = "0x6F5194", VA = "0x6F5194")]
	public LangSelect()
	{
	}
}
[Token(Token = "0x2000067")]
public class LockScale : MonoBehaviour
{
	[Token(Token = "0x600023E")]
	[Address(RVA = "0x6F6194", Offset = "0x6F6194", VA = "0x6F6194")]
	public void big()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x6F6230", Offset = "0x6F6230", VA = "0x6F6230")]
	private void Start()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x6F6234", Offset = "0x6F6234", VA = "0x6F6234")]
	private void Update()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x6F6314", Offset = "0x6F6314", VA = "0x6F6314")]
	public LockScale()
	{
	}
}
[Token(Token = "0x2000068")]
public class LockShow : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int stage;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x6F631C", Offset = "0x6F631C", VA = "0x6F631C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x6F637C", Offset = "0x6F637C", VA = "0x6F637C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x6F6380", Offset = "0x6F6380", VA = "0x6F6380")]
	public LockShow()
	{
	}
}
[Token(Token = "0x2000069")]
public class LoocatPlayer : MonoBehaviour
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform player;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x6F966C", Offset = "0x6F966C", VA = "0x6F966C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x6F9670", Offset = "0x6F9670", VA = "0x6F9670")]
	private void Update()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x6F96A4", Offset = "0x6F96A4", VA = "0x6F96A4")]
	public LoocatPlayer()
	{
	}
}
[Token(Token = "0x200006A")]
public class MainMenuControl : MenuControl
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Image> btn;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected float TopThumbZ;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected float MiddleThumbZ;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected float BottomThumbZ;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool startPushed;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EyelidScript eyelid;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TVShows tv;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x6F96AC", Offset = "0x6F96AC", VA = "0x6F96AC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x6F96D4", Offset = "0x6F96D4", VA = "0x6F96D4", Slot = "7")]
	protected override void StickUpWork()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x6F96F0", Offset = "0x6F96F0", VA = "0x6F96F0", Slot = "8")]
	protected override void StickDownWork()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x6F9710", Offset = "0x6F9710", VA = "0x6F9710", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x6F9898", Offset = "0x6F9898", VA = "0x6F9898", Slot = "11")]
	protected override void ButtonPushed()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x6F991C", Offset = "0x6F991C", VA = "0x6F991C", Slot = "12")]
	protected override void ButtonLeft()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x6F9A2C", Offset = "0x6F9A2C", VA = "0x6F9A2C")]
	public MainMenuControl()
	{
	}
}
[Token(Token = "0x200006B")]
public class MarkChecker : MonoBehaviour
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int count;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hitPos;

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x7D8F98", Offset = "0x7D8F98", VA = "0x7D8F98")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x7D9294", Offset = "0x7D9294", VA = "0x7D9294")]
	private void Start()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x7D929C", Offset = "0x7D929C", VA = "0x7D929C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x7D9338", Offset = "0x7D9338", VA = "0x7D9338")]
	public MarkChecker()
	{
	}
}
[Token(Token = "0x200006C")]
public class MasterScript : MonoBehaviour
{
	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmSelector left;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArmSelector right;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool? lastLeft;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool? lastRight;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject o;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x7D9340", Offset = "0x7D9340", VA = "0x7D9340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x7D9348", Offset = "0x7D9348", VA = "0x7D9348")]
	private void Update()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x7D94A4", Offset = "0x7D94A4", VA = "0x7D94A4")]
	public MasterScript()
	{
	}
}
[Token(Token = "0x200006D")]
public class ExampleWheelController : MonoBehaviour
{
	[Token(Token = "0x2000208")]
	private static class Uniforms
	{
		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x6EB2FC", Offset = "0x6EB2FC", VA = "0x6EB2FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x6EB368", Offset = "0x6EB368", VA = "0x6EB368")]
	private void Update()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x6EB524", Offset = "0x6EB524", VA = "0x6EB524")]
	public ExampleWheelController()
	{
	}
}
[Token(Token = "0x200006E")]
public class CameraFollow : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform mechTransform;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform pelvis;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 offset;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x845E2C", Offset = "0x845E2C", VA = "0x845E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x845F50", Offset = "0x845F50", VA = "0x845F50")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x8460AC", Offset = "0x8460AC", VA = "0x8460AC")]
	public CameraFollow()
	{
	}
}
[Token(Token = "0x200006F")]
public class FootSteps : MonoBehaviour
{
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip audioFootStep;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource ASFootStep;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x6EBD48", Offset = "0x6EBD48", VA = "0x6EBD48")]
	private void Start()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x6EBDB0", Offset = "0x6EBDB0", VA = "0x6EBDB0")]
	private void FootStep()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x6EBDCC", Offset = "0x6EBDCC", VA = "0x6EBDCC")]
	public FootSteps()
	{
	}
}
[Token(Token = "0x2000070")]
public class MechHit : MonoBehaviour
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip AudioExplosion;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int walkCycleCounter;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rootMotionOffsetWalk;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource ASource;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x7DBF44", Offset = "0x7DBF44", VA = "0x7DBF44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x7DBFB4", Offset = "0x7DBFB4", VA = "0x7DBFB4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x7DC060", Offset = "0x7DC060", VA = "0x7DC060")]
	private void EndOfWalk()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x7DC14C", Offset = "0x7DC14C", VA = "0x7DC14C")]
	public MechHit()
	{
	}
}
[Token(Token = "0x2000071")]
public class MechShoot : MonoBehaviour
{
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBE98", Offset = "0x4DBE98")]
	private sealed class <FadoutBigCanon01>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechShoot <>4__this;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <c>5__2;

		[Token(Token = "0x170000DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x7DCBCC", Offset = "0x7DCBCC", VA = "0x7DCBCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0x7DCC34", Offset = "0x7DCC34", VA = "0x7DCC34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x7DC50C", Offset = "0x7DC50C", VA = "0x7DC50C")]
		[DebuggerHidden]
		public <FadoutBigCanon01>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x7DCA88", Offset = "0x7DCA88", VA = "0x7DCA88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x7DCA8C", Offset = "0x7DCA8C", VA = "0x7DCA8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x7DCBD4", Offset = "0x7DCBD4", VA = "0x7DCBD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBEA8", Offset = "0x4DBEA8")]
	private sealed class <FadoutBigCanon02>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechShoot <>4__this;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <c>5__2;

		[Token(Token = "0x170000DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x7DCD80", Offset = "0x7DCD80", VA = "0x7DCD80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x7DCDE8", Offset = "0x7DCDE8", VA = "0x7DCDE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x7DC6CC", Offset = "0x7DC6CC", VA = "0x7DC6CC")]
		[DebuggerHidden]
		public <FadoutBigCanon02>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x7DCC3C", Offset = "0x7DCC3C", VA = "0x7DCC3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x7DCC40", Offset = "0x7DCC40", VA = "0x7DCC40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x7DCD88", Offset = "0x7DCD88", VA = "0x7DCD88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBEB8", Offset = "0x4DBEB8")]
	private sealed class <FadoutSmallCanon01>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechShoot <>4__this;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <c>5__2;

		[Token(Token = "0x170000E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0x7DCF34", Offset = "0x7DCF34", VA = "0x7DCF34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0x7DCF9C", Offset = "0x7DCF9C", VA = "0x7DCF9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x7DC88C", Offset = "0x7DC88C", VA = "0x7DC88C")]
		[DebuggerHidden]
		public <FadoutSmallCanon01>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x7DCDF0", Offset = "0x7DCDF0", VA = "0x7DCDF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x7DCDF4", Offset = "0x7DCDF4", VA = "0x7DCDF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x7DCF3C", Offset = "0x7DCF3C", VA = "0x7DCF3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBEC8", Offset = "0x4DBEC8")]
	private sealed class <FadoutSmallCanon02>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechShoot <>4__this;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <c>5__2;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x7DD0E8", Offset = "0x7DD0E8", VA = "0x7DD0E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x7DD150", Offset = "0x7DD150", VA = "0x7DD150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x7DCA4C", Offset = "0x7DCA4C", VA = "0x7DCA4C")]
		[DebuggerHidden]
		public <FadoutSmallCanon02>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x7DCFA4", Offset = "0x7DCFA4", VA = "0x7DCFA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x7DCFA8", Offset = "0x7DCFA8", VA = "0x7DCFA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x7DD0F0", Offset = "0x7DD0F0", VA = "0x7DD0F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer BigCanon01L;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer BigCanon01R;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer BigCanon02L;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer BigCanon02R;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer SmallCanon01L;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LineRenderer SmallCanon01R;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LineRenderer SmallCanon02L;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LineRenderer SmallCanon02R;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip audioBigCanon;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip audioSmallCanon;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator animator;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform body;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int direction;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float counter;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float rot;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float shooterCounter;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource audioSource;

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x7DC160", Offset = "0x7DC160", VA = "0x7DC160")]
	private void Start()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x7DC1FC", Offset = "0x7DC1FC", VA = "0x7DC1FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x7DC378", Offset = "0x7DC378", VA = "0x7DC378")]
	private void ShootBigCanonA()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x7DC49C", Offset = "0x7DC49C", VA = "0x7DC49C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1378", Offset = "0x4E1378")]
	private IEnumerator FadoutBigCanon01()
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x7DC538", Offset = "0x7DC538", VA = "0x7DC538")]
	private void ShootBigCanonB()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x7DC65C", Offset = "0x7DC65C", VA = "0x7DC65C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E13DC", Offset = "0x4E13DC")]
	private IEnumerator FadoutBigCanon02()
	{
		return null;
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x7DC6F8", Offset = "0x7DC6F8", VA = "0x7DC6F8")]
	private void ShootSmallCanonA()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x7DC81C", Offset = "0x7DC81C", VA = "0x7DC81C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1440", Offset = "0x4E1440")]
	private IEnumerator FadoutSmallCanon01()
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x7DC8B8", Offset = "0x7DC8B8", VA = "0x7DC8B8")]
	private void ShootSmallCanonB()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x7DC9DC", Offset = "0x7DC9DC", VA = "0x7DC9DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E14A4", Offset = "0x4E14A4")]
	private IEnumerator FadoutSmallCanon02()
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x7DCA78", Offset = "0x7DCA78", VA = "0x7DCA78")]
	public MechShoot()
	{
	}
}
[Token(Token = "0x2000072")]
public class MechWalk : MonoBehaviour
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int walkCycleCounter;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float rootMotionOffsetWalk;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rootMotionOffsetRun;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float startDelayCounter;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x7DD158", Offset = "0x7DD158", VA = "0x7DD158")]
	private void Start()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x7DD1C0", Offset = "0x7DD1C0", VA = "0x7DD1C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x7DD228", Offset = "0x7DD228", VA = "0x7DD228")]
	private void EndOfWalk()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x7DD2F0", Offset = "0x7DD2F0", VA = "0x7DD2F0")]
	private void EndOfRun()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x7DD3B8", Offset = "0x7DD3B8", VA = "0x7DD3B8")]
	private void EndOfRunJump()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x7DD470", Offset = "0x7DD470", VA = "0x7DD470")]
	public MechWalk()
	{
	}
}
[Token(Token = "0x2000073")]
public class Shoot : MonoBehaviour
{
	[Token(Token = "0x6000274")]
	[Address(RVA = "0x6FABEC", Offset = "0x6FABEC", VA = "0x6FABEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x6FABF0", Offset = "0x6FABF0", VA = "0x6FABF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x6FABF4", Offset = "0x6FABF4", VA = "0x6FABF4")]
	public Shoot()
	{
	}
}
[Token(Token = "0x2000074")]
public class MeckSound : MonoBehaviour
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip wk;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip jmp;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip lnd;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x7DD484", Offset = "0x7DD484", VA = "0x7DD484")]
	public void Jump()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x7DD5A0", Offset = "0x7DD5A0", VA = "0x7DD5A0")]
	public void Wake()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x7DD5A8", Offset = "0x7DD5A8", VA = "0x7DD5A8")]
	public void Land()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x7DD48C", Offset = "0x7DD48C", VA = "0x7DD48C")]
	private void MakeSound(AudioClip clip)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x7DD5B0", Offset = "0x7DD5B0", VA = "0x7DD5B0")]
	public MeckSound()
	{
	}
}
[Token(Token = "0x2000075")]
public class MeeleeHit : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeeleeBase meelee;

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x7DED70", Offset = "0x7DED70", VA = "0x7DED70")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x7DEE28", Offset = "0x7DEE28", VA = "0x7DEE28")]
	private void Start()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x7DEE2C", Offset = "0x7DEE2C", VA = "0x7DEE2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x7DEE30", Offset = "0x7DEE30", VA = "0x7DEE30")]
	public MeeleeHit()
	{
	}
}
[Token(Token = "0x2000076")]
public class MenuControl : MonoBehaviour
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite unselectedImage;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite selectedImage;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite pushedImage;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int selectedIndex;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool inputed;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	protected bool bButton;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool pushed;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float UnpushThumbY;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float PushThumbY;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform thumb1;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform thumb2;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform thumb1_2;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform thumb2_2;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool Inputable;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool enable;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MenuMaster menuMaster;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x7DEE38", Offset = "0x7DEE38", VA = "0x7DEE38")]
	public void ThumbIdeal1(float ideal)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x7DEF28", Offset = "0x7DEF28", VA = "0x7DEF28")]
	public void ThumbIdeal2()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x7DEF30", Offset = "0x7DEF30", VA = "0x7DEF30")]
	public void ThumbIdeal2(bool sw)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x7DF03C", Offset = "0x7DF03C", VA = "0x7DF03C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x7DF048", Offset = "0x7DF048", VA = "0x7DF048", Slot = "5")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x7DF108", Offset = "0x7DF108", VA = "0x7DF108", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x7DF504", Offset = "0x7DF504", VA = "0x7DF504")]
	private Vector3 getRot(Vector3 c, Vector3 i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x7DF594", Offset = "0x7DF594", VA = "0x7DF594")]
	private float getRotF(float c, float i)
	{
		return default(float);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x7DF62C", Offset = "0x7DF62C", VA = "0x7DF62C", Slot = "7")]
	protected virtual void StickUpWork()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x7DF630", Offset = "0x7DF630", VA = "0x7DF630", Slot = "8")]
	protected virtual void StickDownWork()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x7DF634", Offset = "0x7DF634", VA = "0x7DF634", Slot = "9")]
	protected virtual void StickLeftWork()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x7DF638", Offset = "0x7DF638", VA = "0x7DF638", Slot = "10")]
	protected virtual void StickRightWork()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x7DF63C", Offset = "0x7DF63C", VA = "0x7DF63C", Slot = "11")]
	protected virtual void ButtonPushed()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x7DF640", Offset = "0x7DF640", VA = "0x7DF640", Slot = "12")]
	protected virtual void ButtonLeft()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x7DF644", Offset = "0x7DF644", VA = "0x7DF644")]
	public MenuControl()
	{
	}
}
[Token(Token = "0x2000077")]
public class MenuMaster : MonoBehaviour
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MenuControl mainMenu;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MenuControl equipMain;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MenuControl equipDetail;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MenuControl stageSelect;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool controlable;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x7DF658", Offset = "0x7DF658", VA = "0x7DF658")]
	private void Start()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x7DF6E8", Offset = "0x7DF6E8", VA = "0x7DF6E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x7DF6EC", Offset = "0x7DF6EC", VA = "0x7DF6EC")]
	public MenuMaster()
	{
	}
}
[Token(Token = "0x2000078")]
public class MenuRotateGun : MonoBehaviour
{
	[Token(Token = "0x6000292")]
	[Address(RVA = "0x7DF6F4", Offset = "0x7DF6F4", VA = "0x7DF6F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x7DF6F8", Offset = "0x7DF6F8", VA = "0x7DF6F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x7DF728", Offset = "0x7DF728", VA = "0x7DF728")]
	public MenuRotateGun()
	{
	}
}
[Token(Token = "0x2000079")]
public class MissileHit : MonoBehaviour
{
	[Token(Token = "0x6000295")]
	[Address(RVA = "0x7DF730", Offset = "0x7DF730", VA = "0x7DF730")]
	private void Start()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x7DF734", Offset = "0x7DF734", VA = "0x7DF734")]
	private void Update()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x7DF738", Offset = "0x7DF738", VA = "0x7DF738")]
	protected void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x7DF778", Offset = "0x7DF778", VA = "0x7DF778", Slot = "4")]
	protected virtual void EnterWork(GameObject other)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x7DF86C", Offset = "0x7DF86C", VA = "0x7DF86C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x7DF904", Offset = "0x7DF904", VA = "0x7DF904")]
	public MissileHit()
	{
	}
}
[Token(Token = "0x200007A")]
public class MissileMove : EnemyScriptBase
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool looking;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject explosion;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float moveSpeedA;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x7DF90C", Offset = "0x7DF90C", VA = "0x7DF90C", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x7DF938", Offset = "0x7DF938", VA = "0x7DF938", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x7DFB30", Offset = "0x7DFB30", VA = "0x7DFB30", Slot = "4")]
	public override bool Damage(int dmg, bool headshot, GameObject dmgItem)
	{
		return default(bool);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x7DFC04", Offset = "0x7DFC04", VA = "0x7DFC04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x7DFCCC", Offset = "0x7DFCCC", VA = "0x7DFCCC")]
	public MissileMove()
	{
	}
}
[Token(Token = "0x200007B")]
public class RotateMC1 : MonoBehaviour
{
	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x6E3B8C", Offset = "0x6E3B8C", VA = "0x6E3B8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x6E3B90", Offset = "0x6E3B90", VA = "0x6E3B90")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x6E3C7C", Offset = "0x6E3C7C", VA = "0x6E3C7C")]
	public RotateMC1()
	{
	}
}
[Token(Token = "0x200007C")]
public class MoveMarker : MonoBehaviour
{
	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int wave;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool rotateOnly;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool isLastMarker;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x7E0014", Offset = "0x7E0014", VA = "0x7E0014")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x7E0078", Offset = "0x7E0078", VA = "0x7E0078")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x7E0180", Offset = "0x7E0180", VA = "0x7E0180")]
	public MoveMarker()
	{
	}
}
[Token(Token = "0x200007D")]
public class MoveScene : MonoBehaviour
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string scene;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x7E0188", Offset = "0x7E0188", VA = "0x7E0188")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x7E01E4", Offset = "0x7E01E4", VA = "0x7E01E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x7E01E8", Offset = "0x7E01E8", VA = "0x7E01E8")]
	public MoveScene()
	{
	}
}
[Token(Token = "0x200007E")]
public class MovingDisp : MonoBehaviour
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject disp1;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject disp2;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform slide1;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform slide2;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject disp;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int timer;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool currentColor;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x7E2FB4", Offset = "0x7E2FB4", VA = "0x7E2FB4")]
	public void SetMoving(bool m)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x7E2FD4", Offset = "0x7E2FD4", VA = "0x7E2FD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x7E2FD8", Offset = "0x7E2FD8", VA = "0x7E2FD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x7E31A4", Offset = "0x7E31A4", VA = "0x7E31A4")]
	public MovingDisp()
	{
	}
}
[Token(Token = "0x200007F")]
public class MusicVolumeController : MonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMix audioMix;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixEx audioMixEx;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x7E31AC", Offset = "0x7E31AC", VA = "0x7E31AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x7E32B4", Offset = "0x7E32B4", VA = "0x7E32B4")]
	public MusicVolumeController()
	{
	}
}
[Token(Token = "0x2000080")]
public class NextMissionUpdate : MonoBehaviour
{
	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int next;

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x7E3820", Offset = "0x7E3820", VA = "0x7E3820")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x7E38EC", Offset = "0x7E38EC", VA = "0x7E38EC")]
	public NextMissionUpdate()
	{
	}
}
[Token(Token = "0x2000081")]
public class ObjectLimit : MonoBehaviour
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int limit;

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x8E8204", Offset = "0x8E8204", VA = "0x8E8204")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x8E8208", Offset = "0x8E8208", VA = "0x8E8208")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x8E82D4", Offset = "0x8E82D4", VA = "0x8E82D4")]
	public ObjectLimit()
	{
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x4DB774", Offset = "0x4DB774")]
public class FastList<T>
{
	[Token(Token = "0x200020D")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBED8", Offset = "0x4DBED8")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000E4")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000BB0")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BB2")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAD")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000BAE")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BAF")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB1")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000002")]
	public int Count
	{
		[Token(Token = "0x60002B6")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002B7")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public T Item
	{
		[Token(Token = "0x60002B8")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60002B9")]
		set
		{
		}
	}

	[Token(Token = "0x60002B4")]
	public FastList()
	{
	}

	[Token(Token = "0x60002B5")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60002BA")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60002BB")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60002BC")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60002BD")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60002BE")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BF")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60002C0")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C1")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60002C2")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C3")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60002C4")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60002C5")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60002C7")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60002C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1508", Offset = "0x4E1508")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60002C9")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60002CA")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60002CB")]
	private void Trim()
	{
	}

	[Token(Token = "0x60002CC")]
	public void Clear()
	{
	}

	[Token(Token = "0x60002CD")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000083")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x6F32E8", Offset = "0x6F32E8", VA = "0x6F32E8")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000084")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x6F32BC", Offset = "0x6F32BC", VA = "0x6F32BC")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000085")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x6DC5DC", Offset = "0x6DC5DC", VA = "0x6DC5DC")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x6DC748", Offset = "0x6DC748", VA = "0x6DC748")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x6DCAEC", Offset = "0x6DCAEC", VA = "0x6DCAEC")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x6DCD44", Offset = "0x6DCD44", VA = "0x6DCD44", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x6DCD70", Offset = "0x6DCD70", VA = "0x6DCD70")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000086")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x6E1564", Offset = "0x6E1564", VA = "0x6E1564")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x6E15F0", Offset = "0x6E15F0", VA = "0x6E15F0")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x6E175C", Offset = "0x6E175C", VA = "0x6E175C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000087")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000004")]
	public bool IsVisible
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x6EF700", Offset = "0x6EF700", VA = "0x6EF700")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x6EF708", Offset = "0x6EF708", VA = "0x6EF708")]
		set
		{
		}
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x6EF830", Offset = "0x6EF830", VA = "0x6EF830")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x6EFA4C", Offset = "0x6EFA4C", VA = "0x6EFA4C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x6EFA54", Offset = "0x6EFA54", VA = "0x6EFA54")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000088")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200020F")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x6E2484", Offset = "0x6E2484", VA = "0x6E2484")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000210")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF314", Offset = "0x4DF314")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF32C", Offset = "0x4DF32C")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF344", Offset = "0x4DF344")]
		public float LatencyWeight;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF35C", Offset = "0x4DF35C")]
		public int MaxSamples;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x6E248C", Offset = "0x6E248C", VA = "0x6E248C")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x6E2624", Offset = "0x6E2624", VA = "0x6E2624")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x6E1B14", Offset = "0x6E1B14", VA = "0x6E1B14")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x6E1C38", Offset = "0x6E1C38", VA = "0x6E1C38")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x6E1FA8", Offset = "0x6E1FA8", VA = "0x6E1FA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x6E1F0C", Offset = "0x6E1F0C", VA = "0x6E1F0C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x6E2204", Offset = "0x6E2204", VA = "0x6E2204")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x6E2598", Offset = "0x6E2598", VA = "0x6E2598")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000089")]
public class P2PManager
{
	[Token(Token = "0x2000211")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000C14")]
		Update = 1
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x6DDCE4", Offset = "0x6DDCE4", VA = "0x6DDCE4")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x6DDDA4", Offset = "0x6DDDA4", VA = "0x6DDDA4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x6DDE88", Offset = "0x6DDE88", VA = "0x6DDE88")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x6DDF0C", Offset = "0x6DDF0C", VA = "0x6DDF0C")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x6DE068", Offset = "0x6DE068", VA = "0x6DE068")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x6DE318", Offset = "0x6DE318", VA = "0x6DE318")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x6DE70C", Offset = "0x6DE70C", VA = "0x6DE70C")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x6DE9B0", Offset = "0x6DE9B0", VA = "0x6DE9B0")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x6DE4DC", Offset = "0x6DE4DC", VA = "0x6DE4DC")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x6DE8E0", Offset = "0x6DE8E0", VA = "0x6DE8E0")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x6DE5C4", Offset = "0x6DE5C4", VA = "0x6DE5C4")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x6DEBC8", Offset = "0x6DEBC8", VA = "0x6DEBC8")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x6DE524", Offset = "0x6DE524", VA = "0x6DE524")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x6DE924", Offset = "0x6DE924", VA = "0x6DE924")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x6DE66C", Offset = "0x6DE66C", VA = "0x6DE66C")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x6DEC54", Offset = "0x6DEC54", VA = "0x6DEC54")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200008A")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x6DFFD0", Offset = "0x6DFFD0", VA = "0x6DFFD0", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x6E000C", Offset = "0x6E000C", VA = "0x6E000C", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x6E0044", Offset = "0x6E0044", VA = "0x6E0044", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x6E006C", Offset = "0x6E006C", VA = "0x6E006C")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x6E020C", Offset = "0x6E020C", VA = "0x6E020C")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x6E028C", Offset = "0x6E028C", VA = "0x6E028C")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x6E02E0", Offset = "0x6E02E0", VA = "0x6E02E0")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200008B")]
public class RemotePlayer
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x6E26AC", Offset = "0x6E26AC", VA = "0x6E26AC")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200008C")]
public class RoomManager
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x6E2A90", Offset = "0x6E2A90", VA = "0x6E2A90")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x6E2B5C", Offset = "0x6E2B5C", VA = "0x6E2B5C")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x6E2CBC", Offset = "0x6E2CBC", VA = "0x6E2CBC")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x6E2DCC", Offset = "0x6E2DCC", VA = "0x6E2DCC")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x6E2E80", Offset = "0x6E2E80", VA = "0x6E2E80")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x6E2FB4", Offset = "0x6E2FB4", VA = "0x6E2FB4")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x6E2CEC", Offset = "0x6E2CEC", VA = "0x6E2CEC")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x6E3040", Offset = "0x6E3040", VA = "0x6E3040")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x6E36EC", Offset = "0x6E36EC", VA = "0x6E36EC")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x6E39BC", Offset = "0x6E39BC", VA = "0x6E39BC")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x6E32E0", Offset = "0x6E32E0", VA = "0x6E32E0")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x200008D")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000212")]
	public enum State
	{
		[Token(Token = "0x4000C16")]
		INITIALIZING,
		[Token(Token = "0x4000C17")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000C18")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000C19")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000C1A")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000C1B")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000C1C")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000C1D")]
		SHUTDOWN
	}

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000005")]
	public static State CurrentState
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0x700C14", Offset = "0x700C14", VA = "0x700C14")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000006")]
	public static ulong MyID
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x700C88", Offset = "0x700C88", VA = "0x700C88")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000007")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x700D60", Offset = "0x700D60", VA = "0x700D60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x6FEEA0", Offset = "0x6FEEA0", VA = "0x6FEEA0", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x6FF22C", Offset = "0x6FF22C", VA = "0x6FF22C", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x6FF908", Offset = "0x6FF908", VA = "0x6FF908")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x6FFBD0", Offset = "0x6FFBD0", VA = "0x6FFBD0", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x6FFBD4", Offset = "0x6FFBD4", VA = "0x6FFBD4")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x6FFCC8", Offset = "0x6FFCC8", VA = "0x6FFCC8")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x7003BC", Offset = "0x7003BC", VA = "0x7003BC")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x700888", Offset = "0x700888", VA = "0x700888")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x700A54", Offset = "0x700A54", VA = "0x700A54")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x700BA4", Offset = "0x700BA4", VA = "0x700BA4")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x6FF52C", Offset = "0x6FF52C", VA = "0x6FF52C")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x6FFA64", Offset = "0x6FFA64", VA = "0x6FFA64")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x6FF5E0", Offset = "0x6FF5E0", VA = "0x6FF5E0")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x700E74", Offset = "0x700E74", VA = "0x700E74")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x700FF4", Offset = "0x700FF4", VA = "0x700FF4")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x7010DC", Offset = "0x7010DC", VA = "0x7010DC")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x701200", Offset = "0x701200", VA = "0x701200")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x7012D0", Offset = "0x7012D0", VA = "0x7012D0")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x6FFB14", Offset = "0x6FFB14", VA = "0x6FFB14")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x7016FC", Offset = "0x7016FC", VA = "0x7016FC")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x701788", Offset = "0x701788", VA = "0x701788")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x701520", Offset = "0x701520", VA = "0x701520")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x70195C", Offset = "0x70195C", VA = "0x70195C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x6FEE18", Offset = "0x6FEE18", VA = "0x6FEE18")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x4E156C", Offset = "0x4E156C")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x701A98", Offset = "0x701A98", VA = "0x701A98")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x701B60", Offset = "0x701B60", VA = "0x701B60")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200008E")]
public class VoipManager
{
	[Token(Token = "0x6000324")]
	[Address(RVA = "0x9000CC", Offset = "0x9000CC", VA = "0x9000CC")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x90018C", Offset = "0x90018C", VA = "0x90018C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x900270", Offset = "0x900270", VA = "0x900270")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x9002F4", Offset = "0x9002F4", VA = "0x9002F4")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x900450", Offset = "0x900450", VA = "0x900450")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200008F")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x6EF38C", Offset = "0x6EF38C", VA = "0x6EF38C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x6EF3FC", Offset = "0x6EF3FC", VA = "0x6EF3FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x6EF578", Offset = "0x6EF578", VA = "0x6EF578")]
	private void Update()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x6EF5DC", Offset = "0x6EF5DC", VA = "0x6EF5DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x6EF438", Offset = "0x6EF438", VA = "0x6EF438")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x6EF698", Offset = "0x6EF698", VA = "0x6EF698")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x6EF6F8", Offset = "0x6EF6F8", VA = "0x6EF6F8")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000090")]
public class AvatarLayer
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x83EE00", Offset = "0x83EE00", VA = "0x83EE00")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000091")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x6DECE0", Offset = "0x6DECE0", VA = "0x6DECE0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000092")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000213")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x6CFC44", Offset = "0x6CFC44", VA = "0x6CFC44")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000214")]
	public enum HandType
	{
		[Token(Token = "0x4000C20")]
		Right,
		[Token(Token = "0x4000C21")]
		Left,
		[Token(Token = "0x4000C22")]
		Max
	}

	[Token(Token = "0x2000215")]
	public enum HandJoint
	{
		[Token(Token = "0x4000C24")]
		HandBase,
		[Token(Token = "0x4000C25")]
		IndexBase,
		[Token(Token = "0x4000C26")]
		IndexTip,
		[Token(Token = "0x4000C27")]
		ThumbBase,
		[Token(Token = "0x4000C28")]
		ThumbTip,
		[Token(Token = "0x4000C29")]
		Max
	}

	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBEE8", Offset = "0x4DBEE8")]
	private sealed class <WaitForMouthAudioSource>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170000E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x6CFBD4", Offset = "0x6CFBD4", VA = "0x6CFBD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x6CFC3C", Offset = "0x6CFC3C", VA = "0x6CFC3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x6CFA18", Offset = "0x6CFA18", VA = "0x6CFA18")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x6CFA44", Offset = "0x6CFA44", VA = "0x6CFA44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x6CFA48", Offset = "0x6CFA48", VA = "0x6CFA48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x6CFBDC", Offset = "0x6CFBDC", VA = "0x6CFBDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC510", Offset = "0x4DC510")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC548", Offset = "0x4DC548")]
	public bool EnableBody;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC580", Offset = "0x4DC580")]
	public bool RecordPackets;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC5B8", Offset = "0x4DC5B8")]
	public bool StartWithControllers;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC5F0", Offset = "0x4DC5F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC5F0", Offset = "0x4DC5F0")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC660", Offset = "0x4DC660")]
	private bool CombineMeshes;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC698", Offset = "0x4DC698")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC6D0", Offset = "0x4DC6D0")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DC708", Offset = "0x4DC708")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC740", Offset = "0x4DC740")]
	public bool EnableLaughter;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float[] visemes;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AudioSource audioSource;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool showLeftController;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool showRightController;

	[Token(Token = "0x400039E")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40003A0")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40003A1")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40003A2")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40003A3")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40003A4")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float VoiceAmplitude;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x676504", Offset = "0x676504", VA = "0x676504")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x67686C", Offset = "0x67686C", VA = "0x67686C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x6768F8", Offset = "0x6768F8", VA = "0x6768F8")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x676964", Offset = "0x676964", VA = "0x676964")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x676A8C", Offset = "0x676A8C", VA = "0x676A8C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x676B70", Offset = "0x676B70", VA = "0x676B70")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x676C50", Offset = "0x676C50", VA = "0x676C50")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x676E38", Offset = "0x676E38", VA = "0x676E38")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x676F00", Offset = "0x676F00", VA = "0x676F00")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x676F84", Offset = "0x676F84", VA = "0x676F84")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x67706C", Offset = "0x67706C", VA = "0x67706C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x6770F8", Offset = "0x6770F8", VA = "0x6770F8")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x677214", Offset = "0x677214", VA = "0x677214")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x677274", Offset = "0x677274", VA = "0x677274")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000340")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x6776F8", Offset = "0x6776F8", VA = "0x6776F8")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x677A58", Offset = "0x677A58", VA = "0x677A58")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x677BBC", Offset = "0x677BBC", VA = "0x677BBC")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x677E84", Offset = "0x677E84", VA = "0x677E84")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x677F70", Offset = "0x677F70", VA = "0x677F70")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x678324", Offset = "0x678324", VA = "0x678324")]
	private void Start()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x678698", Offset = "0x678698", VA = "0x678698")]
	private void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x679040", Offset = "0x679040", VA = "0x679040")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x679094", Offset = "0x679094", VA = "0x679094")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x6781EC", Offset = "0x6781EC", VA = "0x6781EC")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x678288", Offset = "0x678288", VA = "0x678288")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x6790C4", Offset = "0x6790C4", VA = "0x6790C4")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x678A0C", Offset = "0x678A0C", VA = "0x678A0C")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x679310", Offset = "0x679310", VA = "0x679310")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x67912C", Offset = "0x67912C", VA = "0x67912C")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x6795AC", Offset = "0x6795AC", VA = "0x6795AC")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x6799B0", Offset = "0x6799B0", VA = "0x6799B0")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x679BE0", Offset = "0x679BE0", VA = "0x679BE0")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x679D20", Offset = "0x679D20", VA = "0x679D20")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x679ED8", Offset = "0x679ED8", VA = "0x679ED8")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x678B44", Offset = "0x678B44", VA = "0x678B44")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x679FB0", Offset = "0x679FB0", VA = "0x679FB0")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x678A1C", Offset = "0x678A1C", VA = "0x678A1C")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x679FB8", Offset = "0x679FB8", VA = "0x679FB8")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x67A564", Offset = "0x67A564", VA = "0x67A564")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x67AA24", Offset = "0x67AA24", VA = "0x67AA24")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x67AA9C", Offset = "0x67AA9C", VA = "0x67AA9C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x67AB18", Offset = "0x67AB18", VA = "0x67AB18")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x678EDC", Offset = "0x678EDC", VA = "0x678EDC")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x67A074", Offset = "0x67A074", VA = "0x67A074")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x67AD48", Offset = "0x67AD48", VA = "0x67AD48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E15D0", Offset = "0x4E15D0")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x67ADB8", Offset = "0x67ADB8", VA = "0x67ADB8")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x67ABEC", Offset = "0x67ABEC", VA = "0x67ABEC")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x67AE80", Offset = "0x67AE80", VA = "0x67AE80")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x67AE84", Offset = "0x67AE84", VA = "0x67AE84")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x67ABE8", Offset = "0x67ABE8", VA = "0x67ABE8")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x67AE88", Offset = "0x67AE88", VA = "0x67AE88")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000093")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x6CFCC0", Offset = "0x6CFCC0", VA = "0x6CFCC0")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000094")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x6CFD70", Offset = "0x6CFD70", VA = "0x6CFD70")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x6D1050", Offset = "0x6D1050", VA = "0x6D1050")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x6D0BF4", Offset = "0x6D0BF4", VA = "0x6D0BF4")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x6D0998", Offset = "0x6D0998", VA = "0x6D0998")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x6D0A68", Offset = "0x6D0A68", VA = "0x6D0A68")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x6D12B4", Offset = "0x6D12B4", VA = "0x6D12B4")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000095")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40003C1")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x6D1834", Offset = "0x6D1834", VA = "0x6D1834")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000096")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x6D1A9C", Offset = "0x6D1A9C", VA = "0x6D1A9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x6D1E9C", Offset = "0x6D1E9C", VA = "0x6D1E9C")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000097")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x6D1F98", Offset = "0x6D1F98", VA = "0x6D1F98")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x6D20F4", Offset = "0x6D20F4", VA = "0x6D20F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x6D2210", Offset = "0x6D2210", VA = "0x6D2210")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000098")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x6D2274", Offset = "0x6D2274", VA = "0x6D2274")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x6D1BB8", Offset = "0x6D1BB8", VA = "0x6D1BB8")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x6D2858", Offset = "0x6D2858", VA = "0x6D2858")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x6D28B8", Offset = "0x6D28B8", VA = "0x6D28B8")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x6D309C", Offset = "0x6D309C", VA = "0x6D309C")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x6D1F00", Offset = "0x6D1F00", VA = "0x6D1F00")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000099")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000217")]
	public enum PacketMode
	{
		[Token(Token = "0x4000C2E")]
		SDK,
		[Token(Token = "0x4000C2F")]
		Unity
	}

	[Token(Token = "0x2000218")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x6D476C", Offset = "0x6D476C", VA = "0x6D476C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000219")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x6D48C8", Offset = "0x6D48C8", VA = "0x6D48C8")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x6D4398", Offset = "0x6D4398", VA = "0x6D4398")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600037B")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x6D43A8", Offset = "0x6D43A8", VA = "0x6D43A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x6D4448", Offset = "0x6D4448", VA = "0x6D4448")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x6D46C0", Offset = "0x6D46C0", VA = "0x6D46C0")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x6D475C", Offset = "0x6D475C", VA = "0x6D475C")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200009A")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x6D4C80", Offset = "0x6D4C80", VA = "0x6D4C80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x6D4DDC", Offset = "0x6D4DDC", VA = "0x6D4DDC")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200009B")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x6D4E48", Offset = "0x6D4E48", VA = "0x6D4E48")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x6D4FB4", Offset = "0x6D4FB4", VA = "0x6D4FB4")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x6D5358", Offset = "0x6D5358", VA = "0x6D5358")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x6D5624", Offset = "0x6D5624", VA = "0x6D5624", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x6D5650", Offset = "0x6D5650", VA = "0x6D5650")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200009C")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200021A")]
	public enum TextureType
	{
		[Token(Token = "0x4000C40")]
		DiffuseTextures,
		[Token(Token = "0x4000C41")]
		NormalMaps,
		[Token(Token = "0x4000C42")]
		RoughnessMaps,
		[Token(Token = "0x4000C43")]
		Count
	}

	[Token(Token = "0x200021B")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200021C")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200021D")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200021E")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x6D7870", Offset = "0x6D7870", VA = "0x6D7870")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBEF8", Offset = "0x4DBEF8")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x6D8180", Offset = "0x6D8180", VA = "0x6D8180", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x6D81E8", Offset = "0x6D81E8", VA = "0x6D81E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x6D76D8", Offset = "0x6D76D8", VA = "0x6D76D8")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x6D7B08", Offset = "0x6D7B08", VA = "0x6D7B08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x6D7B0C", Offset = "0x6D7B0C", VA = "0x6D7B0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x6D8188", Offset = "0x6D8188", VA = "0x6D8188", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40003F5")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40003F6")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40003F7")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40003F8")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x6D5700", Offset = "0x6D5700", VA = "0x6D5700")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x6D5860", Offset = "0x6D5860", VA = "0x6D5860")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x6D5888", Offset = "0x6D5888", VA = "0x6D5888")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x6D5FA0", Offset = "0x6D5FA0", VA = "0x6D5FA0")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x6D6220", Offset = "0x6D6220", VA = "0x6D6220")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x6D591C", Offset = "0x6D591C", VA = "0x6D591C")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x6D6310", Offset = "0x6D6310", VA = "0x6D6310")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x6D5D1C", Offset = "0x6D5D1C", VA = "0x6D5D1C")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x6D6578", Offset = "0x6D6578", VA = "0x6D6578")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x6D67F0", Offset = "0x6D67F0", VA = "0x6D67F0")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x6D68EC", Offset = "0x6D68EC", VA = "0x6D68EC")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x6D6924", Offset = "0x6D6924", VA = "0x6D6924")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x6D5F24", Offset = "0x6D5F24", VA = "0x6D5F24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1634", Offset = "0x4E1634")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x6D7704", Offset = "0x6D7704", VA = "0x6D7704")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200009D")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000008")]
	public float Duration
	{
		[Token(Token = "0x6000396")]
		[Address(RVA = "0x6D81F0", Offset = "0x6D81F0", VA = "0x6D81F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000009")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000397")]
		[Address(RVA = "0x6D825C", Offset = "0x6D825C", VA = "0x6D825C")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x6D82E0", Offset = "0x6D82E0", VA = "0x6D82E0")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x6D83A4", Offset = "0x6D83A4", VA = "0x6D83A4")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x6D84E4", Offset = "0x6D84E4", VA = "0x6D84E4")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x6D85C0", Offset = "0x6D85C0", VA = "0x6D85C0")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x6D8690", Offset = "0x6D8690", VA = "0x6D8690")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x6D8898", Offset = "0x6D8898", VA = "0x6D8898")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x6D8AF0", Offset = "0x6D8AF0", VA = "0x6D8AF0")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200009E")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600039F")]
	[Address(RVA = "0x83F2D0", Offset = "0x83F2D0", VA = "0x83F2D0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x83F3E4", Offset = "0x83F3E4", VA = "0x83F3E4")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x83F590", Offset = "0x83F590", VA = "0x83F590")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x83F454", Offset = "0x83F454", VA = "0x83F454")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x83F4E8", Offset = "0x83F4E8", VA = "0x83F4E8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200009F")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x83EED0", Offset = "0x83EED0", VA = "0x83EED0")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x83F274", Offset = "0x83F274", VA = "0x83F274")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x83F070", Offset = "0x83F070", VA = "0x83F070")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x83F0E8", Offset = "0x83F0E8", VA = "0x83F0E8")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x83F184", Offset = "0x83F184", VA = "0x83F184")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20000A0")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000400")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000401")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x6D8CE0", Offset = "0x6D8CE0", VA = "0x6D8CE0")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x6D8D6C", Offset = "0x6D8D6C", VA = "0x6D8D6C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x6D8D88", Offset = "0x6D8D88", VA = "0x6D8D88")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x6D8F34", Offset = "0x6D8F34", VA = "0x6D8F34")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x6D90DC", Offset = "0x6D90DC", VA = "0x6D90DC")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20000A1")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x6D915C", Offset = "0x6D915C", VA = "0x6D915C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x6D9240", Offset = "0x6D9240", VA = "0x6D9240")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x6D9434", Offset = "0x6D9434", VA = "0x6D9434")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x6D97C8", Offset = "0x6D97C8", VA = "0x6D97C8")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x6D98C0", Offset = "0x6D98C0", VA = "0x6D98C0")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20000A2")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x400040A")]
	Body = 1,
	[Token(Token = "0x400040B")]
	Hands = 2,
	[Token(Token = "0x400040C")]
	Base = 4,
	[Token(Token = "0x400040D")]
	BodyTilt = 0x10,
	[Token(Token = "0x400040E")]
	Expressive = 0x20,
	[Token(Token = "0x400040F")]
	All = -1
}
[Token(Token = "0x20000A3")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000411")]
	AvatarSpecification,
	[Token(Token = "0x4000412")]
	AssetLoaded,
	[Token(Token = "0x4000413")]
	Count
}
[Token(Token = "0x20000A4")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20000A5")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20000A6")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000419")]
	Mesh,
	[Token(Token = "0x400041A")]
	Texture,
	[Token(Token = "0x400041B")]
	Pose,
	[Token(Token = "0x400041C")]
	Material,
	[Token(Token = "0x400041D")]
	CombinedMesh,
	[Token(Token = "0x400041E")]
	PBSMaterial,
	[Token(Token = "0x400041F")]
	FailedLoad,
	[Token(Token = "0x4000420")]
	Count
}
[Token(Token = "0x20000A7")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20000A8")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20000A9")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20000AA")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000AB")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000AC")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000455")]
	RGB24,
	[Token(Token = "0x4000456")]
	DXT1,
	[Token(Token = "0x4000457")]
	DXT5,
	[Token(Token = "0x4000458")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000459")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400045A")]
	Count
}
[Token(Token = "0x20000AD")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000AE")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000462")]
	SkinnedMeshRender,
	[Token(Token = "0x4000463")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000464")]
	ProjectorRender,
	[Token(Token = "0x4000465")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000466")]
	Count
}
[Token(Token = "0x20000AF")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000468")]
	Unknown,
	[Token(Token = "0x4000469")]
	Default,
	[Token(Token = "0x400046A")]
	Verbose,
	[Token(Token = "0x400046B")]
	Debug,
	[Token(Token = "0x400046C")]
	Info,
	[Token(Token = "0x400046D")]
	Warn,
	[Token(Token = "0x400046E")]
	Error,
	[Token(Token = "0x400046F")]
	Fatal,
	[Token(Token = "0x4000470")]
	Silent
}
[Token(Token = "0x20000B0")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000B1")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000475")]
	One = 1,
	[Token(Token = "0x4000476")]
	Two = 2,
	[Token(Token = "0x4000477")]
	Three = 4,
	[Token(Token = "0x4000478")]
	Joystick = 8
}
[Token(Token = "0x20000B2")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400047A")]
	One = 1,
	[Token(Token = "0x400047B")]
	Two = 2,
	[Token(Token = "0x400047C")]
	Joystick = 4,
	[Token(Token = "0x400047D")]
	ThumbRest = 8,
	[Token(Token = "0x400047E")]
	Index = 0x10,
	[Token(Token = "0x400047F")]
	Pointing = 0x40,
	[Token(Token = "0x4000480")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000B3")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000B4")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000B5")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000B6")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000B7")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000B8")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000B9")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000BA")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000BB")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40004A0")]
	Add,
	[Token(Token = "0x40004A1")]
	Multiply,
	[Token(Token = "0x40004A2")]
	Count
}
[Token(Token = "0x20000BC")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40004A4")]
	Color,
	[Token(Token = "0x40004A5")]
	Texture,
	[Token(Token = "0x40004A6")]
	TextureSingleChannel,
	[Token(Token = "0x40004A7")]
	Parallax,
	[Token(Token = "0x40004A8")]
	Count
}
[Token(Token = "0x20000BD")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40004AA")]
	None,
	[Token(Token = "0x40004AB")]
	Positional,
	[Token(Token = "0x40004AC")]
	ViewReflection,
	[Token(Token = "0x40004AD")]
	Fresnel,
	[Token(Token = "0x40004AE")]
	Pulse,
	[Token(Token = "0x40004AF")]
	Count
}
[Token(Token = "0x20000BE")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40004B1")]
	Touch,
	[Token(Token = "0x40004B2")]
	Malibu,
	[Token(Token = "0x40004B3")]
	Go,
	[Token(Token = "0x40004B4")]
	Quest,
	[Token(Token = "0x40004B5")]
	Count
}
[Token(Token = "0x20000BF")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40004B7")]
	Lowest = 1,
	[Token(Token = "0x40004B8")]
	Medium = 3,
	[Token(Token = "0x40004B9")]
	Highest = 5
}
[Token(Token = "0x20000C0")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40004BB")]
	Unknown = -1,
	[Token(Token = "0x40004BC")]
	One,
	[Token(Token = "0x40004BD")]
	Two
}
[Token(Token = "0x20000C1")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xE97FA8", Offset = "0xE97FA8", VA = "0xE97FA8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x55A5FC", Offset = "0x55A5FC", VA = "0x55A5FC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x55A604", Offset = "0x55A604", VA = "0x55A604", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000C2")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xE982DC", Offset = "0xE982DC", VA = "0xE982DC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x55A83C", Offset = "0x55A83C", VA = "0x55A83C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x55A844", Offset = "0x55A844", VA = "0x55A844", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000C3")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xE97650", Offset = "0xE97650", VA = "0xE97650")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x55A344", Offset = "0x55A344", VA = "0x55A344", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x55A34C", Offset = "0x55A34C", VA = "0x55A34C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000C4")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xE98808", Offset = "0xE98808", VA = "0xE98808")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x55B0C4", Offset = "0x55B0C4", VA = "0x55B0C4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x55B0CC", Offset = "0x55B0CC", VA = "0x55B0CC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000C5")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x6CFCC8", Offset = "0x6CFCC8", VA = "0x6CFCC8")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000C6")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000C7")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40004F2")]
	FirstPerson = 1,
	[Token(Token = "0x40004F3")]
	ThirdPerson = 2,
	[Token(Token = "0x40004F4")]
	SelfOccluding = 4
}
[Token(Token = "0x20000C8")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000C9")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000CA")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000CB")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000CC")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x400050A")]
	Default,
	[Token(Token = "0x400050B")]
	GripSphere,
	[Token(Token = "0x400050C")]
	GripCube,
	[Token(Token = "0x400050D")]
	Count
}
[Token(Token = "0x20000CD")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400050F")]
	Body,
	[Token(Token = "0x4000510")]
	Clothing,
	[Token(Token = "0x4000511")]
	Eyewear,
	[Token(Token = "0x4000512")]
	Hair,
	[Token(Token = "0x4000513")]
	Beard,
	[Token(Token = "0x4000514")]
	Count
}
[Token(Token = "0x20000CE")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000CF")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000D0")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000D1")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000D2")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400051E")]
	AvatarHead,
	[Token(Token = "0x400051F")]
	AvatarHand,
	[Token(Token = "0x4000520")]
	Object,
	[Token(Token = "0x4000521")]
	ObjectStatic,
	[Token(Token = "0x4000522")]
	Count
}
[Token(Token = "0x20000D3")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000D4")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000D5")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000D6")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000D7")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400052E")]
	Point,
	[Token(Token = "0x400052F")]
	Direction,
	[Token(Token = "0x4000530")]
	Spot,
	[Token(Token = "0x4000531")]
	Count
}
[Token(Token = "0x20000D8")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000D9")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000DA")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000DB")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000DC")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000547")]
	None = 0u,
	[Token(Token = "0x4000548")]
	GazeTarget = 1u,
	[Token(Token = "0x4000549")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000DD")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000DE")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000DF")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000E0")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000E1")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000E2")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000220")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x53DFA8", Offset = "0x53DFA8", VA = "0x53DFA8")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400055E")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000A")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x6D3130", Offset = "0x6D3130", VA = "0x6D3130")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x6D98D0", Offset = "0x6D98D0", VA = "0x6D98D0")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x6D9B1C", Offset = "0x6D9B1C", VA = "0x6D9B1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x6D9B90", Offset = "0x6D9B90", VA = "0x6D9B90")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x6DA3D4", Offset = "0x6DA3D4", VA = "0x6DA3D4")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x6DA42C", Offset = "0x6DA42C", VA = "0x6DA42C")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x6DA484", Offset = "0x6DA484", VA = "0x6DA484")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x6DA4EC", Offset = "0x6DA4EC", VA = "0x6DA4EC")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x6DA554", Offset = "0x6DA554", VA = "0x6DA554")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x6DA20C", Offset = "0x6DA20C", VA = "0x6DA20C")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x6DA634", Offset = "0x6DA634", VA = "0x6DA634")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x6DA750", Offset = "0x6DA750", VA = "0x6DA750")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x6D32C0", Offset = "0x6D32C0", VA = "0x6D32C0")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x6DA830", Offset = "0x6DA830", VA = "0x6DA830")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x6D9AD0", Offset = "0x6D9AD0", VA = "0x6D9AD0")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x6D6000", Offset = "0x6D6000", VA = "0x6D6000")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x6DA908", Offset = "0x6DA908", VA = "0x6DA908")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000E3")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000B")]
	public static string AppID
	{
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x6DA8C8", Offset = "0x6DA8C8", VA = "0x6DA8C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x6DAA60", Offset = "0x6DAA60", VA = "0x6DAA60")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static string MobileAppID
	{
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x6DA8E8", Offset = "0x6DA8E8", VA = "0x6DA8E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x6DAA8C", Offset = "0x6DAA8C", VA = "0x6DAA8C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x6DA94C", Offset = "0x6DA94C", VA = "0x6DA94C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x6DAAB8", Offset = "0x6DAAB8", VA = "0x6DAAB8")]
		set
		{
		}
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x6DAB0C", Offset = "0x6DAB0C", VA = "0x6DAB0C")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000E4")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x6DC1E8", Offset = "0x6DC1E8", VA = "0x6DC1E8")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x6D227C", Offset = "0x6D227C", VA = "0x6D227C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x6DC32C", Offset = "0x6DC32C", VA = "0x6DC32C")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x6DC48C", Offset = "0x6DC48C", VA = "0x6DC48C")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000E5")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x6DC49C", Offset = "0x6DC49C", VA = "0x6DC49C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x6D24A4", Offset = "0x6D24A4", VA = "0x6D24A4")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x6DC5CC", Offset = "0x6DC5CC", VA = "0x6DC5CC")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000E6")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400056D")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400056E")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400056F")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x6DAB64", Offset = "0x6DAB64", VA = "0x6DAB64")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x6D263C", Offset = "0x6D263C", VA = "0x6D263C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x6DB9A4", Offset = "0x6DB9A4", VA = "0x6DB9A4")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x6DB138", Offset = "0x6DB138", VA = "0x6DB138")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x6DAF08", Offset = "0x6DAF08", VA = "0x6DAF08")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x6DB01C", Offset = "0x6DB01C", VA = "0x6DB01C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x6DC1D8", Offset = "0x6DC1D8", VA = "0x6DC1D8")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000E7")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000221")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000222")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x53E010", Offset = "0x53E010", VA = "0x53E010")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000223")]
	public struct TextureSet
	{
		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x53E098", Offset = "0x53E098", VA = "0x53E098")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000224")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBF08", Offset = "0x4DBF08")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0x6DDAAC", Offset = "0x6DDAAC", VA = "0x6DDAAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0x6DDB14", Offset = "0x6DDB14", VA = "0x6DDB14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x6DD448", Offset = "0x6DD448", VA = "0x6DD448")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x6DD5B0", Offset = "0x6DD5B0", VA = "0x6DD5B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x6DD5B4", Offset = "0x6DD5B4", VA = "0x6DD5B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x6DDAB4", Offset = "0x6DDAB4", VA = "0x6DDAB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000573")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000574")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000577")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000578")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000579")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x400057A")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x400057B")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x400057C")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400057D")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x6DCE30", Offset = "0x6DCE30", VA = "0x6DCE30")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x6DD18C", Offset = "0x6DD18C", VA = "0x6DD18C")]
	public void Update()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x6D8130", Offset = "0x6D8130", VA = "0x6D8130")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x6D63F4", Offset = "0x6D63F4", VA = "0x6D63F4")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x6DD304", Offset = "0x6DD304", VA = "0x6DD304")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x6D6084", Offset = "0x6D6084", VA = "0x6D6084")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x6D6268", Offset = "0x6D6268", VA = "0x6D6268")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x6DD3B4", Offset = "0x6DD3B4", VA = "0x6DD3B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1738", Offset = "0x4E1738")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x6DA5E8", Offset = "0x6DA5E8", VA = "0x6DA5E8")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x6DD474", Offset = "0x6DD474", VA = "0x6DD474")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000E8")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x6DDB1C", Offset = "0x6DDB1C", VA = "0x6DDB1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x6DDC78", Offset = "0x6DDC78", VA = "0x6DDC78")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000E9")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000406")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x84DFC4", Offset = "0x84DFC4", VA = "0x84DFC4")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20000EA")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC798", Offset = "0x4DC798")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC7D0", Offset = "0x4DC7D0")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC808", Offset = "0x4DC808")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x6F5A30", Offset = "0x6F5A30", VA = "0x6F5A30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x6F5A34", Offset = "0x6F5A34", VA = "0x6F5A34")]
	private void Update()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x6F5AB4", Offset = "0x6F5AB4", VA = "0x6F5AB4")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x6F5CA0", Offset = "0x6F5CA0", VA = "0x6F5CA0")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20000EB")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x6F5CD0", Offset = "0x6F5CD0", VA = "0x6F5CD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x6F5DD4", Offset = "0x6F5DD4", VA = "0x6F5DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x6F5EA8", Offset = "0x6F5EA8", VA = "0x6F5EA8")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x6F6134", Offset = "0x6F6134", VA = "0x6F6134")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x6F6184", Offset = "0x6F6184", VA = "0x6F6184")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20000EC")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700000E")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x8E2228", Offset = "0x8E2228", VA = "0x8E2228")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x8E24E0", Offset = "0x8E24E0", VA = "0x8E24E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x8E261C", Offset = "0x8E261C", VA = "0x8E261C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x8E2550", Offset = "0x8E2550", VA = "0x8E2550")]
	public void Init()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x8E0440", Offset = "0x8E0440", VA = "0x8E0440")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x8E27A4", Offset = "0x8E27A4", VA = "0x8E27A4")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x8E03D8", Offset = "0x8E03D8", VA = "0x8E03D8")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x8E04C0", Offset = "0x8E04C0", VA = "0x8E04C0")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x8E26B4", Offset = "0x8E26B4", VA = "0x8E26B4")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x8E2844", Offset = "0x8E2844", VA = "0x8E2844")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x8E2880", Offset = "0x8E2880", VA = "0x8E2880")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x8E2A74", Offset = "0x8E2A74", VA = "0x8E2A74")]
	private void Prune()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x8E2890", Offset = "0x8E2890", VA = "0x8E2890")]
	private void Display()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x8E2B24", Offset = "0x8E2B24", VA = "0x8E2B24")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20000ED")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x8E2C08", Offset = "0x8E2C08", VA = "0x8E2C08")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20000EE")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000225")]
	public enum TouchEvent
	{
		[Token(Token = "0x4000C76")]
		SingleTap,
		[Token(Token = "0x4000C77")]
		DoubleTap,
		[Token(Token = "0x4000C78")]
		Left,
		[Token(Token = "0x4000C79")]
		Right,
		[Token(Token = "0x4000C7A")]
		Up,
		[Token(Token = "0x4000C7B")]
		Down
	}

	[Token(Token = "0x2000226")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x8DF054", Offset = "0x8DF054", VA = "0x8DF054")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x8E7C54", Offset = "0x8E7C54", VA = "0x8E7C54")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x8E7F74", Offset = "0x8E7F74", VA = "0x8E7F74")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x8E7DC4", Offset = "0x8E7DC4", VA = "0x8E7DC4")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x8DFF34", Offset = "0x8DFF34", VA = "0x8DFF34")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20000EF")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000427")]
	[Address(RVA = "0x8E8024", Offset = "0x8E8024", VA = "0x8E8024")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x8E80A0", Offset = "0x8E80A0", VA = "0x8E80A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x8E8138", Offset = "0x8E8138", VA = "0x8E8138")]
	private void Update()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x8E8194", Offset = "0x8E8194", VA = "0x8E8194")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x8E81F8", Offset = "0x8E81F8", VA = "0x8E81F8")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x8E81FC", Offset = "0x8E81FC", VA = "0x8E81FC")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20000F0")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000227")]
	public enum Result
	{
		[Token(Token = "0x4000C7D")]
		Success = 0,
		[Token(Token = "0x4000C7E")]
		Unknown = -2200,
		[Token(Token = "0x4000C7F")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4000C80")]
		InvalidParam = -2202,
		[Token(Token = "0x4000C81")]
		BadSampleRate = -2203,
		[Token(Token = "0x4000C82")]
		MissingDLL = -2204,
		[Token(Token = "0x4000C83")]
		BadVersion = -2205,
		[Token(Token = "0x4000C84")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000228")]
	public enum AudioDataType
	{
		[Token(Token = "0x4000C86")]
		S16_Mono,
		[Token(Token = "0x4000C87")]
		S16_Stereo,
		[Token(Token = "0x4000C88")]
		F32_Mono,
		[Token(Token = "0x4000C89")]
		F32_Stereo
	}

	[Token(Token = "0x2000229")]
	public enum Viseme
	{
		[Token(Token = "0x4000C8B")]
		sil,
		[Token(Token = "0x4000C8C")]
		PP,
		[Token(Token = "0x4000C8D")]
		FF,
		[Token(Token = "0x4000C8E")]
		TH,
		[Token(Token = "0x4000C8F")]
		DD,
		[Token(Token = "0x4000C90")]
		kk,
		[Token(Token = "0x4000C91")]
		CH,
		[Token(Token = "0x4000C92")]
		SS,
		[Token(Token = "0x4000C93")]
		nn,
		[Token(Token = "0x4000C94")]
		RR,
		[Token(Token = "0x4000C95")]
		aa,
		[Token(Token = "0x4000C96")]
		E,
		[Token(Token = "0x4000C97")]
		ih,
		[Token(Token = "0x4000C98")]
		oh,
		[Token(Token = "0x4000C99")]
		ou
	}

	[Token(Token = "0x200022A")]
	public enum Signals
	{
		[Token(Token = "0x4000C9B")]
		VisemeOn,
		[Token(Token = "0x4000C9C")]
		VisemeOff,
		[Token(Token = "0x4000C9D")]
		VisemeAmount,
		[Token(Token = "0x4000C9E")]
		VisemeSmoothing,
		[Token(Token = "0x4000C9F")]
		LaughterAmount
	}

	[Token(Token = "0x200022B")]
	public enum ContextProviders
	{
		[Token(Token = "0x4000CA1")]
		Original,
		[Token(Token = "0x4000CA2")]
		Enhanced,
		[Token(Token = "0x4000CA3")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x200022C")]
	public class Frame
	{
		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x8DFC9C", Offset = "0x8DFC9C", VA = "0x8DFC9C")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x8DFCF4", Offset = "0x8DFCF4", VA = "0x8DFCF4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x8DFD84", Offset = "0x8DFD84", VA = "0x8DFD84")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000597")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x600042D")]
	[Address(RVA = "0x8DE624", Offset = "0x8DE624", VA = "0x8DE624")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x600042E")]
	[Address(RVA = "0x8DE6B4", Offset = "0x8DE6B4", VA = "0x8DE6B4")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x600042F")]
	[Address(RVA = "0x8DE724", Offset = "0x8DE724", VA = "0x8DE724")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000430")]
	[Address(RVA = "0x8DE7B8", Offset = "0x8DE7B8", VA = "0x8DE7B8")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000431")]
	[Address(RVA = "0x8DE860", Offset = "0x8DE860", VA = "0x8DE860")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000432")]
	[Address(RVA = "0x8DE92C", Offset = "0x8DE92C", VA = "0x8DE92C")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000433")]
	[Address(RVA = "0x8DE9AC", Offset = "0x8DE9AC", VA = "0x8DE9AC")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000434")]
	[Address(RVA = "0x8DEA2C", Offset = "0x8DEA2C", VA = "0x8DEA2C")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000435")]
	[Address(RVA = "0x8DEAD4", Offset = "0x8DEAD4", VA = "0x8DEAD4")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x8DEBDC", Offset = "0x8DEBDC", VA = "0x8DEBDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x8DF058", Offset = "0x8DF058", VA = "0x8DF058")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x8DEF1C", Offset = "0x8DEF1C", VA = "0x8DEF1C")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x8DF138", Offset = "0x8DF138", VA = "0x8DF138")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x8DF24C", Offset = "0x8DF24C", VA = "0x8DF24C")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x8DF2BC", Offset = "0x8DF2BC", VA = "0x8DF2BC")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x8DF324", Offset = "0x8DF324", VA = "0x8DF324")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x8DF448", Offset = "0x8DF448", VA = "0x8DF448")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x8DF580", Offset = "0x8DF580", VA = "0x8DF580")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x8DF660", Offset = "0x8DF660", VA = "0x8DF660")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x8DF740", Offset = "0x8DF740", VA = "0x8DF740")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x8DF844", Offset = "0x8DF844", VA = "0x8DF844")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x8DF9E8", Offset = "0x8DF9E8", VA = "0x8DF9E8")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x8DFB84", Offset = "0x8DFB84", VA = "0x8DFB84")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20000F1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DB81C", Offset = "0x4DB81C")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC840", Offset = "0x4DC840")]
	public bool enableKeyboardInput;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC878", Offset = "0x4DC878")]
	public bool enableTouchInput;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC8B0", Offset = "0x4DC8B0")]
	public bool audioLoopback;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC8E8", Offset = "0x4DC8E8")]
	public KeyCode loopbackKey;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC920", Offset = "0x4DC920")]
	public bool showVisemes;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC958", Offset = "0x4DC958")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC990", Offset = "0x4DC990")]
	public bool skipAudioSource;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DC9C8", Offset = "0x4DC9C8")]
	public float gain;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x8DFE0C", Offset = "0x8DFE0C", VA = "0x8DFE0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x8DFFF4", Offset = "0x8DFFF4", VA = "0x8DFFF4")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x8E0540", Offset = "0x8E0540", VA = "0x8E0540")]
	private void Update()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x8E07EC", Offset = "0x8E07EC", VA = "0x8E07EC")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x8E0850", Offset = "0x8E0850", VA = "0x8E0850")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x8E08BC", Offset = "0x8E08BC", VA = "0x8E08BC")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x8E0A60", Offset = "0x8E0A60", VA = "0x8E0A60")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x8E0C04", Offset = "0x8E0C04", VA = "0x8E0C04")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x8E0D38", Offset = "0x8E0D38", VA = "0x8E0D38")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x8E0584", Offset = "0x8E0584", VA = "0x8E0584")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x8E0304", Offset = "0x8E0304", VA = "0x8E0304")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x8E0D48", Offset = "0x8E0D48", VA = "0x8E0D48")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x8E0E74", Offset = "0x8E0E74", VA = "0x8E0E74")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20000F2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DB880", Offset = "0x4DB880")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCA00", Offset = "0x4DCA00")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCA38", Offset = "0x4DCA38")]
	public bool enableAcceleration;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700000F")]
	public int Smoothing
	{
		[Token(Token = "0x6000453")]
		[Address(RVA = "0x8E0FF4", Offset = "0x8E0FF4", VA = "0x8E0FF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000452")]
		[Address(RVA = "0x8E0F08", Offset = "0x8E0F08", VA = "0x8E0F08")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public uint Context
	{
		[Token(Token = "0x6000454")]
		[Address(RVA = "0x8E0FFC", Offset = "0x8E0FFC", VA = "0x8E0FFC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000011")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x8E1004", Offset = "0x8E1004", VA = "0x8E1004")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x8E100C", Offset = "0x8E100C", VA = "0x8E100C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x8E11A4", Offset = "0x8E11A4", VA = "0x8E11A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x8E12C8", Offset = "0x8E12C8", VA = "0x8E12C8")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x8E12D0", Offset = "0x8E12D0", VA = "0x8E12D0")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x8E13C4", Offset = "0x8E13C4", VA = "0x8E13C4")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x8E148C", Offset = "0x8E148C", VA = "0x8E148C")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x8E0E98", Offset = "0x8E0E98", VA = "0x8E0E98")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20000F3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DB8E4", Offset = "0x4DB8E4")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCA70", Offset = "0x4DCA70")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x8E1504", Offset = "0x8E1504", VA = "0x8E1504")]
	private void Update()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x8E1674", Offset = "0x8E1674", VA = "0x8E1674")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20000F4")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCAA8", Offset = "0x4DCAA8")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCAE0", Offset = "0x4DCAE0")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCB18", Offset = "0x4DCB18")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCB50", Offset = "0x4DCB50")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCB88", Offset = "0x4DCB88")]
	public KeyCode laughterKey;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCBC0", Offset = "0x4DCBC0")]
	public int laughterBlendTarget;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DCBF8", Offset = "0x4DCBF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCBF8", Offset = "0x4DCBF8")]
	public float laughterThreshold;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DCC4C", Offset = "0x4DCC4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCC4C", Offset = "0x4DCC4C")]
	public float laughterMultiplier;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DCCA0", Offset = "0x4DCCA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCCA0", Offset = "0x4DCCA0")]
	public int smoothAmount;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x8E1678", Offset = "0x8E1678", VA = "0x8E1678")]
	private void Start()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x8E17BC", Offset = "0x8E17BC", VA = "0x8E17BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x8E1A6C", Offset = "0x8E1A6C", VA = "0x8E1A6C")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x8E18C8", Offset = "0x8E18C8", VA = "0x8E18C8")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x8E197C", Offset = "0x8E197C", VA = "0x8E197C")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x8E1B3C", Offset = "0x8E1B3C", VA = "0x8E1B3C")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x8E1C00", Offset = "0x8E1C00", VA = "0x8E1C00")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x8E1C68", Offset = "0x8E1C68", VA = "0x8E1C68")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20000F5")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCCF8", Offset = "0x4DCCF8")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x4DCCF8", Offset = "0x4DCCF8")]
	public Texture[] Textures;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DCE74", Offset = "0x4DCE74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCE74", Offset = "0x4DCE74")]
	public int smoothAmount;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x8E1D60", Offset = "0x8E1D60", VA = "0x8E1D60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x8E1EB4", Offset = "0x8E1EB4", VA = "0x8E1EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x8E2058", Offset = "0x8E2058", VA = "0x8E2058")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x8E217C", Offset = "0x8E217C", VA = "0x8E217C")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F6")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x8E15D0", Offset = "0x8E15D0", VA = "0x8E15D0")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x8E2B98", Offset = "0x8E2B98", VA = "0x8E2B98")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20000F7")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200022D")]
	public delegate void OnClick();

	[Token(Token = "0x200022E")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200022F")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000230")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBF18", Offset = "0x4DBF18")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x84B940", Offset = "0x84B940", VA = "0x84B940")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x84C2E0", Offset = "0x84C2E0", VA = "0x84C2E0")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBF28", Offset = "0x4DBF28")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x84BBB4", Offset = "0x84BBB4", VA = "0x84BBB4")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x84C504", Offset = "0x84C504", VA = "0x84C504")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBF38", Offset = "0x4DBF38")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x84BDCC", Offset = "0x84BDCC", VA = "0x84BDCC")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x84C788", Offset = "0x84C788", VA = "0x84C788")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBF48", Offset = "0x4DBF48")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x84BF60", Offset = "0x84BF60", VA = "0x84BF60")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x84CB60", Offset = "0x84CB60", VA = "0x84CB60")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBF58", Offset = "0x4DBF58")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x84C1B8", Offset = "0x84C1B8", VA = "0x84C1B8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x84CB80", Offset = "0x84CB80", VA = "0x84CB80")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40005BE")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40005BF")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40005C0")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40005CD")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40005CE")]
	private const float marginH = 16f;

	[Token(Token = "0x40005CF")]
	private const float marginV = 16f;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x84A8EC", Offset = "0x84A8EC", VA = "0x84A8EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x84ACF0", Offset = "0x84ACF0", VA = "0x84ACF0")]
	public void Show()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x84B2BC", Offset = "0x84B2BC", VA = "0x84B2BC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x84B068", Offset = "0x84B068", VA = "0x84B068")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x84B464", Offset = "0x84B464", VA = "0x84B464")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x84B718", Offset = "0x84B718", VA = "0x84B718")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x84B948", Offset = "0x84B948", VA = "0x84B948")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x84BA2C", Offset = "0x84BA2C", VA = "0x84BA2C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x84BBBC", Offset = "0x84BBBC", VA = "0x84BBBC")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x84BC58", Offset = "0x84BC58", VA = "0x84BC58")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x84BDD4", Offset = "0x84BDD4", VA = "0x84BDD4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x84BF68", Offset = "0x84BF68", VA = "0x84BF68")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x84C1C0", Offset = "0x84C1C0", VA = "0x84C1C0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x84C270", Offset = "0x84C270", VA = "0x84C270")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000F8")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x6F2218", Offset = "0x6F2218", VA = "0x6F2218")]
	private void Start()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x6F22A0", Offset = "0x6F22A0", VA = "0x6F22A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x6F2368", Offset = "0x6F2368", VA = "0x6F2368")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x6F23A4", Offset = "0x6F23A4", VA = "0x6F23A4")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000F9")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000236")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000CB1")]
		On,
		[Token(Token = "0x4000CB2")]
		Off,
		[Token(Token = "0x4000CB3")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000012")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000480")]
		[Address(RVA = "0x6F51E0", Offset = "0x6F51E0", VA = "0x6F51E0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600047F")]
		[Address(RVA = "0x6F519C", Offset = "0x6F519C", VA = "0x6F519C")]
		set
		{
		}
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x6F51E8", Offset = "0x6F51E8", VA = "0x6F51E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x6F5240", Offset = "0x6F5240", VA = "0x6F5240")]
	private void Start()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x6F5358", Offset = "0x6F5358", VA = "0x6F5358", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x6F5374", Offset = "0x6F5374", VA = "0x6F5374", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x6F53C8", Offset = "0x6F53C8", VA = "0x6F53C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x6F5624", Offset = "0x6F5624", VA = "0x6F5624")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x6F5738", Offset = "0x6F5738", VA = "0x6F5738")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x6F57CC", Offset = "0x6F57CC", VA = "0x6F57CC")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x6F589C", Offset = "0x6F589C", VA = "0x6F589C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x6F5954", Offset = "0x6F5954", VA = "0x6F5954")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x6F5A20", Offset = "0x6F5A20", VA = "0x6F5A20")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000FA")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x841048", Offset = "0x841048", VA = "0x841048")]
	private void Start()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x841254", Offset = "0x841254", VA = "0x841254")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x8416F4", Offset = "0x8416F4", VA = "0x8416F4")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x20000FB")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x6EFA68", Offset = "0x6EFA68", VA = "0x6EFA68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x6EFB9C", Offset = "0x6EFB9C", VA = "0x6EFB9C")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x6EFDEC", Offset = "0x6EFDEC", VA = "0x6EFDEC")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x20000FC")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000013")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000494")]
		[Address(RVA = "0x6EFE98", Offset = "0x6EFE98", VA = "0x6EFE98")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000003")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0x6EFAF8", Offset = "0x6EFAF8", VA = "0x6EFAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E179C", Offset = "0x4E179C")]
		add
		{
		}
		[Token(Token = "0x6000493")]
		[Address(RVA = "0x6EFDF4", Offset = "0x6EFDF4", VA = "0x6EFDF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E17AC", Offset = "0x4E17AC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x6EFEA4", Offset = "0x6EFEA4", VA = "0x6EFEA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x6EFFFC", Offset = "0x6EFFFC", VA = "0x6EFFFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x6F0170", Offset = "0x6F0170", VA = "0x6F0170")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x6F0178", Offset = "0x6F0178", VA = "0x6F0178")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x20000FD")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCF7C", Offset = "0x4DCF7C")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCFB4", Offset = "0x4DCFB4")]
	public bool EnableCollision;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DCFEC", Offset = "0x4DCFEC")]
	public float MaxFade;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD024", Offset = "0x4DD024")]
	public float FadeMinDistance;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD05C", Offset = "0x4DD05C")]
	public float FadeMaxDistance;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x8460B4", Offset = "0x8460B4", VA = "0x8460B4")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x84613C", Offset = "0x84613C", VA = "0x84613C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x8461AC", Offset = "0x8461AC", VA = "0x8461AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x8461B0", Offset = "0x8461B0", VA = "0x8461B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x8461D4", Offset = "0x8461D4", VA = "0x8461D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x8461F8", Offset = "0x8461F8", VA = "0x8461F8")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x20000FE")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x6F6388", Offset = "0x6F6388", VA = "0x6F6388")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x6F6434", Offset = "0x6F6434", VA = "0x6F6434")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000FF")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000237")]
	public enum States
	{
		[Token(Token = "0x4000CB5")]
		Ready,
		[Token(Token = "0x4000CB6")]
		Aim,
		[Token(Token = "0x4000CB7")]
		CancelAim,
		[Token(Token = "0x4000CB8")]
		PreTeleport,
		[Token(Token = "0x4000CB9")]
		CancelTeleport,
		[Token(Token = "0x4000CBA")]
		Teleporting,
		[Token(Token = "0x4000CBB")]
		PostTeleport
	}

	[Token(Token = "0x2000238")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000CBD")]
		None,
		[Token(Token = "0x4000CBE")]
		Aim,
		[Token(Token = "0x4000CBF")]
		PreTeleport,
		[Token(Token = "0x4000CC0")]
		Teleport
	}

	[Token(Token = "0x2000239")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000CC2")]
		Point,
		[Token(Token = "0x4000CC3")]
		Sphere,
		[Token(Token = "0x4000CC4")]
		Capsule
	}

	[Token(Token = "0x200023A")]
	public class AimData
	{
		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DF374", Offset = "0x4DF374")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000EC")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x6F95F8", Offset = "0x6F95F8", VA = "0x6F95F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E31C0", Offset = "0x4E31C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x6F9600", Offset = "0x6F9600", VA = "0x6F9600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E31D0", Offset = "0x4E31D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x6F9584", Offset = "0x6F9584", VA = "0x6F9584")]
		public AimData()
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x6F9608", Offset = "0x6F9608", VA = "0x6F9608")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBF68", Offset = "0x4DBF68")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x6F93D0", Offset = "0x6F93D0", VA = "0x6F93D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0x6F9438", Offset = "0x6F9438", VA = "0x6F9438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x6F78D4", Offset = "0x6F78D4", VA = "0x6F78D4")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x6F92E8", Offset = "0x6F92E8", VA = "0x6F92E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x6F92EC", Offset = "0x6F92EC", VA = "0x6F92EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x6F93D8", Offset = "0x6F93D8", VA = "0x6F93D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBF78", Offset = "0x4DBF78")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x6F8DB0", Offset = "0x6F8DB0", VA = "0x6F8DB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x6F8E18", Offset = "0x6F8E18", VA = "0x6F8E18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x6F7DBC", Offset = "0x6F7DBC", VA = "0x6F7DBC")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x6F8C78", Offset = "0x6F8C78", VA = "0x6F8C78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x6F8C7C", Offset = "0x6F8C7C", VA = "0x6F8C7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x6F8DB8", Offset = "0x6F8DB8", VA = "0x6F8DB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBF88", Offset = "0x4DBF88")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0x6F8EC4", Offset = "0x6F8EC4", VA = "0x6F8EC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0x6F8F2C", Offset = "0x6F8F2C", VA = "0x6F8F2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x6F7FA0", Offset = "0x6F7FA0", VA = "0x6F7FA0")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x6F8E20", Offset = "0x6F8E20", VA = "0x6F8E20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x6F8E24", Offset = "0x6F8E24", VA = "0x6F8E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x6F8ECC", Offset = "0x6F8ECC", VA = "0x6F8ECC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBF98", Offset = "0x4DBF98")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x6F9278", Offset = "0x6F9278", VA = "0x6F9278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x6F92E0", Offset = "0x6F92E0", VA = "0x6F92E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x6F8184", Offset = "0x6F8184", VA = "0x6F8184")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x6F91A0", Offset = "0x6F91A0", VA = "0x6F91A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x6F91A4", Offset = "0x6F91A4", VA = "0x6F91A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x6F9280", Offset = "0x6F9280", VA = "0x6F9280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBFA8", Offset = "0x4DBFA8")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x6F8FD8", Offset = "0x6F8FD8", VA = "0x6F8FD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x6F9040", Offset = "0x6F9040", VA = "0x6F9040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x6F8368", Offset = "0x6F8368", VA = "0x6F8368")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x6F8F34", Offset = "0x6F8F34", VA = "0x6F8F34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x6F8F38", Offset = "0x6F8F38", VA = "0x6F8F38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x6F8FE0", Offset = "0x6F8FE0", VA = "0x6F8FE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBFB8", Offset = "0x4DBFB8")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x6F9514", Offset = "0x6F9514", VA = "0x6F9514", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x6F957C", Offset = "0x6F957C", VA = "0x6F957C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x6F854C", Offset = "0x6F854C", VA = "0x6F854C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x6F9440", Offset = "0x6F9440", VA = "0x6F9440", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x6F9444", Offset = "0x6F9444", VA = "0x6F9444", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x6F951C", Offset = "0x6F951C", VA = "0x6F951C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBFC8", Offset = "0x4DBFC8")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x6F9130", Offset = "0x6F9130", VA = "0x6F9130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x6F9198", Offset = "0x6F9198", VA = "0x6F9198", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x6F8730", Offset = "0x6F8730", VA = "0x6F8730")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x6F9048", Offset = "0x6F9048", VA = "0x6F9048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x6F904C", Offset = "0x6F904C", VA = "0x6F904C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x6F9138", Offset = "0x6F9138", VA = "0x6F9138", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD094", Offset = "0x4DD094")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD0CC", Offset = "0x4DD0CC")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD104", Offset = "0x4DD104")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD13C", Offset = "0x4DD13C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD174", Offset = "0x4DD174")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD1AC", Offset = "0x4DD1AC")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD1E4", Offset = "0x4DD1E4")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD21C", Offset = "0x4DD21C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DD254", Offset = "0x4DD254")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD264", Offset = "0x4DD264")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD29C", Offset = "0x4DD29C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DD2E4", Offset = "0x4DD2E4")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD2F4", Offset = "0x4DD2F4")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD32C", Offset = "0x4DD32C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD364", Offset = "0x4DD364")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD39C", Offset = "0x4DD39C")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000014")]
	public States CurrentState
	{
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x6F6E18", Offset = "0x6F6E18", VA = "0x6F6E18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E17BC", Offset = "0x4E17BC")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x6F6E20", Offset = "0x6F6E20", VA = "0x6F6E20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E17CC", Offset = "0x4E17CC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x6F7050", Offset = "0x6F7050", VA = "0x6F7050")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000016")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x6F7078", Offset = "0x6F7078", VA = "0x6F7078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E17FC", Offset = "0x4E17FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x6F7080", Offset = "0x6F7080", VA = "0x6F7080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E180C", Offset = "0x4E180C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x6F6E28", Offset = "0x6F6E28", VA = "0x6F6E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E17DC", Offset = "0x4E17DC")]
		add
		{
		}
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x6F6ECC", Offset = "0x6F6ECC", VA = "0x6F6ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E17EC", Offset = "0x4E17EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x6F778C", Offset = "0x6F778C", VA = "0x6F778C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1854", Offset = "0x4E1854")]
		add
		{
		}
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x6F7830", Offset = "0x6F7830", VA = "0x6F7830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1864", Offset = "0x4E1864")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x6F7900", Offset = "0x6F7900", VA = "0x6F7900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E18D8", Offset = "0x4E18D8")]
		add
		{
		}
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x6F79A4", Offset = "0x6F79A4", VA = "0x6F79A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E18E8", Offset = "0x4E18E8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x6F7A48", Offset = "0x6F7A48", VA = "0x6F7A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E18F8", Offset = "0x4E18F8")]
		add
		{
		}
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x6F7AEC", Offset = "0x6F7AEC", VA = "0x6F7AEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1908", Offset = "0x4E1908")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x6F7C04", Offset = "0x6F7C04", VA = "0x6F7C04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1918", Offset = "0x4E1918")]
		add
		{
		}
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x6F7CA8", Offset = "0x6F7CA8", VA = "0x6F7CA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1928", Offset = "0x4E1928")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x6F7DE8", Offset = "0x6F7DE8", VA = "0x6F7DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E199C", Offset = "0x4E199C")]
		add
		{
		}
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x6F7E8C", Offset = "0x6F7E8C", VA = "0x6F7E8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E19AC", Offset = "0x4E19AC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x6F7FCC", Offset = "0x6F7FCC", VA = "0x6F7FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1A20", Offset = "0x4E1A20")]
		add
		{
		}
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x6F8070", Offset = "0x6F8070", VA = "0x6F8070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1A30", Offset = "0x4E1A30")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x6F81B0", Offset = "0x6F81B0", VA = "0x6F81B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1AA4", Offset = "0x4E1AA4")]
		add
		{
		}
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x6F8254", Offset = "0x6F8254", VA = "0x6F8254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1AB4", Offset = "0x4E1AB4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x6F8394", Offset = "0x6F8394", VA = "0x6F8394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1B28", Offset = "0x4E1B28")]
		add
		{
		}
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x6F8438", Offset = "0x6F8438", VA = "0x6F8438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1B38", Offset = "0x4E1B38")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x6F8578", Offset = "0x6F8578", VA = "0x6F8578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1BAC", Offset = "0x4E1BAC")]
		add
		{
		}
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x6F861C", Offset = "0x6F861C", VA = "0x6F861C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1BBC", Offset = "0x4E1BBC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x6F875C", Offset = "0x6F875C", VA = "0x6F875C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1C30", Offset = "0x4E1C30")]
		add
		{
		}
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x6F8800", Offset = "0x6F8800", VA = "0x6F8800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1C40", Offset = "0x4E1C40")]
		remove
		{
		}
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x6F6AE8", Offset = "0x6F6AE8", VA = "0x6F6AE8")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x6F6B0C", Offset = "0x6F6B0C", VA = "0x6F6B0C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x6F6F70", Offset = "0x6F6F70", VA = "0x6F6F70")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x6F7088", Offset = "0x6F7088", VA = "0x6F7088")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x6F73E0", Offset = "0x6F73E0", VA = "0x6F73E0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E181C", Offset = "0x4E181C")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x6F7498", Offset = "0x6F7498", VA = "0x6F7498")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x6F7560", Offset = "0x6F7560", VA = "0x6F7560")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x6F757C", Offset = "0x6F757C", VA = "0x6F757C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x6F7644", Offset = "0x6F7644", VA = "0x6F7644")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x6F7688", Offset = "0x6F7688", VA = "0x6F7688")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x6F76E4", Offset = "0x6F76E4", VA = "0x6F76E4", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x6F7784", Offset = "0x6F7784", VA = "0x6F7784", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x6F7714", Offset = "0x6F7714", VA = "0x6F7714")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1874", Offset = "0x4E1874")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x6F7B90", Offset = "0x6F7B90", VA = "0x6F7B90")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x6F7D4C", Offset = "0x6F7D4C", VA = "0x6F7D4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1938", Offset = "0x4E1938")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x6F7F30", Offset = "0x6F7F30", VA = "0x6F7F30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E19BC", Offset = "0x4E19BC")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x6F8114", Offset = "0x6F8114", VA = "0x6F8114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1A40", Offset = "0x4E1A40")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x6F82F8", Offset = "0x6F82F8", VA = "0x6F82F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1AC4", Offset = "0x4E1AC4")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x6F84DC", Offset = "0x6F84DC", VA = "0x6F84DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1B48", Offset = "0x4E1B48")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x6F86C0", Offset = "0x6F86C0", VA = "0x6F86C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1BCC", Offset = "0x4E1BCC")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x6F88A4", Offset = "0x6F88A4", VA = "0x6F88A4")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x6F89E8", Offset = "0x6F89E8", VA = "0x6F89E8")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x6F8A1C", Offset = "0x6F8A1C", VA = "0x6F8A1C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x6F8B3C", Offset = "0x6F8B3C", VA = "0x6F8B3C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x6F8C68", Offset = "0x6F8C68", VA = "0x6F8C68")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000100")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000F")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x6FE23C", Offset = "0x6FE23C", VA = "0x6FE23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1C50", Offset = "0x4E1C50")]
		add
		{
		}
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x6FE2E0", Offset = "0x6FE2E0", VA = "0x6FE2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1C60", Offset = "0x4E1C60")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x6FE384", Offset = "0x6FE384", VA = "0x6FE384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1C70", Offset = "0x4E1C70")]
		add
		{
		}
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x6FE428", Offset = "0x6FE428", VA = "0x6FE428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1C80", Offset = "0x4E1C80")]
		remove
		{
		}
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x6FE4CC", Offset = "0x6FE4CC", VA = "0x6FE4CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x6FE574", Offset = "0x6FE574", VA = "0x6FE574")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x6FE578", Offset = "0x6FE578", VA = "0x6FE578")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x6FE5EC", Offset = "0x6FE5EC", VA = "0x6FE5EC")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x6FE75C", Offset = "0x6FE75C", VA = "0x6FE75C")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x6FEA40", Offset = "0x6FEA40", VA = "0x6FEA40")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x6FEC30", Offset = "0x6FEC30", VA = "0x6FEC30")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000101")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x7035F8", Offset = "0x7035F8", VA = "0x7035F8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x70368C", Offset = "0x70368C", VA = "0x70368C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60004E2")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x70375C", Offset = "0x70375C", VA = "0x70375C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000102")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD494", Offset = "0x4DD494")]
	public float Range;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x70376C", Offset = "0x70376C", VA = "0x70376C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x7038C8", Offset = "0x7038C8", VA = "0x7038C8")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000103")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD4CC", Offset = "0x4DD4CC")]
	public float Range;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD504", Offset = "0x4DD504")]
	public float MinimumElevation;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD53C", Offset = "0x4DD53C")]
	public float Gravity;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD574", Offset = "0x4DD574")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DD574", Offset = "0x4DD574")]
	public float AimVelocity;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD5D0", Offset = "0x4DD5D0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DD5D0", Offset = "0x4DD5D0")]
	public float AimStep;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x7038D8", Offset = "0x7038D8", VA = "0x7038D8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x703B24", Offset = "0x703B24", VA = "0x703B24")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000104")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD628", Offset = "0x4DD628")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x703B38", Offset = "0x703B38", VA = "0x703B38")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x703C1C", Offset = "0x703C1C", VA = "0x703C1C")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x703C4C", Offset = "0x703C4C", VA = "0x703C4C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x703C7C", Offset = "0x703C7C", VA = "0x703C7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x703D1C", Offset = "0x703D1C", VA = "0x703D1C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x703D88", Offset = "0x703D88", VA = "0x703D88", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x703DF0", Offset = "0x703DF0", VA = "0x703DF0")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000105")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DD660", Offset = "0x4DD660")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD670", Offset = "0x4DD670")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD6A8", Offset = "0x4DD6A8")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD6E0", Offset = "0x4DD6E0")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000017")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x703F0C", Offset = "0x703F0C", VA = "0x703F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1C90", Offset = "0x4E1C90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x703F14", Offset = "0x703F14", VA = "0x703F14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1CA0", Offset = "0x4E1CA0")]
		private set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x7040C4", Offset = "0x7040C4", VA = "0x7040C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1CB0", Offset = "0x4E1CB0")]
		add
		{
		}
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x704168", Offset = "0x704168", VA = "0x704168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1CC0", Offset = "0x4E1CC0")]
		remove
		{
		}
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x703F20", Offset = "0x703F20", VA = "0x703F20")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x703FA8", Offset = "0x703FA8", VA = "0x703FA8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x704080", Offset = "0x704080", VA = "0x704080")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x7040C0", Offset = "0x7040C0", VA = "0x7040C0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x70420C", Offset = "0x70420C", VA = "0x70420C")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x704274", Offset = "0x704274", VA = "0x704274")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x704294", Offset = "0x704294", VA = "0x704294", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000106")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBFD8", Offset = "0x4DBFD8")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x704958", Offset = "0x704958", VA = "0x704958", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x7049C0", Offset = "0x7049C0", VA = "0x7049C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x7046A4", Offset = "0x7046A4", VA = "0x7046A4")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x7048C8", Offset = "0x7048C8", VA = "0x7048C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x7048CC", Offset = "0x7048CC", VA = "0x7048CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x704960", Offset = "0x704960", VA = "0x704960", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBFE8", Offset = "0x4DBFE8")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x704858", Offset = "0x704858", VA = "0x704858", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0x7048C0", Offset = "0x7048C0", VA = "0x7048C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x704740", Offset = "0x704740", VA = "0x704740")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x7047C4", Offset = "0x7047C4", VA = "0x7047C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x7047C8", Offset = "0x7047C8", VA = "0x7047C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x704860", Offset = "0x704860", VA = "0x704860", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x704474", Offset = "0x704474", VA = "0x704474")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x704520", Offset = "0x704520", VA = "0x704520", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x704578", Offset = "0x704578", VA = "0x704578", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x704634", Offset = "0x704634", VA = "0x704634")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1CD0", Offset = "0x4E1CD0")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x7046D0", Offset = "0x7046D0", VA = "0x7046D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1D34", Offset = "0x4E1D34")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004FF")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000500")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x70476C", Offset = "0x70476C", VA = "0x70476C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1D98", Offset = "0x4E1D98")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x704798", Offset = "0x704798", VA = "0x704798")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1DA8", Offset = "0x4E1DA8")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000107")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DD728", Offset = "0x4DD728")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD738", Offset = "0x4DD738")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD770", Offset = "0x4DD770")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD7A8", Offset = "0x4DD7A8")]
	public bool FastTeleport;

	[Token(Token = "0x17000018")]
	public Transform Pointer
	{
		[Token(Token = "0x6000503")]
		[Address(RVA = "0x7049C8", Offset = "0x7049C8", VA = "0x7049C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1DB8", Offset = "0x4E1DB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x7049D0", Offset = "0x7049D0", VA = "0x7049D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1DC8", Offset = "0x4E1DC8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x7049D8", Offset = "0x7049D8", VA = "0x7049D8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x704B34", Offset = "0x704B34", VA = "0x704B34", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x704BEC", Offset = "0x704BEC", VA = "0x704BEC")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000108")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000244")]
	public enum InputModes
	{
		[Token(Token = "0x4000CE6")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000CE7")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000CE8")]
		ThumbstickTeleport,
		[Token(Token = "0x4000CE9")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000245")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000CEB")]
		A,
		[Token(Token = "0x4000CEC")]
		B,
		[Token(Token = "0x4000CED")]
		LeftTrigger,
		[Token(Token = "0x4000CEE")]
		LeftThumbstick,
		[Token(Token = "0x4000CEF")]
		RightTrigger,
		[Token(Token = "0x4000CF0")]
		RightThumbstick,
		[Token(Token = "0x4000CF1")]
		X,
		[Token(Token = "0x4000CF2")]
		Y
	}

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD7E0", Offset = "0x4DD7E0")]
	public InputModes InputMode;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD818", Offset = "0x4DD818")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD850", Offset = "0x4DD850")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD888", Offset = "0x4DD888")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x704BF0", Offset = "0x704BF0", VA = "0x704BF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x704BF4", Offset = "0x704BF4", VA = "0x704BF4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x70503C", Offset = "0x70503C", VA = "0x70503C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x7050FC", Offset = "0x7050FC", VA = "0x7050FC")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000109")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000246")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000CF4")]
		HeadRelative,
		[Token(Token = "0x4000CF5")]
		ForwardFacing
	}

	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DBFF8", Offset = "0x4DBFF8")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0x70558C", Offset = "0x70558C", VA = "0x70558C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x7055F4", Offset = "0x7055F4", VA = "0x7055F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x705368", Offset = "0x705368", VA = "0x705368")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x7054E4", Offset = "0x7054E4", VA = "0x7054E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x7054E8", Offset = "0x7054E8", VA = "0x7054E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x705594", Offset = "0x705594", VA = "0x705594", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x7051A8", Offset = "0x7051A8", VA = "0x7051A8")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x70525C", Offset = "0x70525C", VA = "0x70525C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x705264", Offset = "0x705264", VA = "0x705264", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x7052B0", Offset = "0x7052B0", VA = "0x7052B0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x7052F8", Offset = "0x7052F8", VA = "0x7052F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1DD8", Offset = "0x4E1DD8")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000511")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000512")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x705394", Offset = "0x705394", VA = "0x705394")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x7054B8", Offset = "0x7054B8", VA = "0x7054B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1E3C", Offset = "0x4E1E3C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200010A")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000515")]
	[Address(RVA = "0x7055FC", Offset = "0x7055FC", VA = "0x7055FC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x705600", Offset = "0x705600", VA = "0x705600", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x70567C", Offset = "0x70567C", VA = "0x70567C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200010B")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD8C0", Offset = "0x4DD8C0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD8F8", Offset = "0x4DD8F8")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD930", Offset = "0x4DD930")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD968", Offset = "0x4DD968")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x705680", Offset = "0x705680", VA = "0x705680", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x7056F0", Offset = "0x7056F0", VA = "0x7056F0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x705B68", Offset = "0x705B68", VA = "0x705B68")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200010C")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD9A0", Offset = "0x4DD9A0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DD9D8", Offset = "0x4DD9D8")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DDA10", Offset = "0x4DDA10")]
	public float RotateStickThreshold;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x705B6C", Offset = "0x705B6C", VA = "0x705B6C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x705BB0", Offset = "0x705BB0", VA = "0x705BB0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x706020", Offset = "0x706020", VA = "0x706020")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200010D")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x706030", Offset = "0x706030", VA = "0x706030")]
	private void Start()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x706034", Offset = "0x706034", VA = "0x706034")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x70603C", Offset = "0x70603C", VA = "0x70603C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x706124", Offset = "0x706124", VA = "0x706124")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x70614C", Offset = "0x70614C", VA = "0x70614C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200010E")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DDA48", Offset = "0x4DDA48")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000019")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x706164", Offset = "0x706164", VA = "0x706164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1E4C", Offset = "0x4E1E4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x70616C", Offset = "0x70616C", VA = "0x70616C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1E5C", Offset = "0x4E1E5C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x703628", Offset = "0x703628", VA = "0x703628", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x703730", Offset = "0x703730", VA = "0x703730", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x706174", Offset = "0x706174", VA = "0x706174")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E1E6C", Offset = "0x4E1E6C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x703D7C", Offset = "0x703D7C", VA = "0x703D7C", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x703DE8", Offset = "0x703DE8", VA = "0x703DE8", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x703764", Offset = "0x703764", VA = "0x703764")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200010F")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC008", Offset = "0x4DC008")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0x7067C8", Offset = "0x7067C8", VA = "0x7067C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x706830", Offset = "0x706830", VA = "0x706830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x7063C4", Offset = "0x7063C4", VA = "0x7063C4")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x70655C", Offset = "0x70655C", VA = "0x70655C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x706560", Offset = "0x706560", VA = "0x706560", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x7067D0", Offset = "0x7067D0", VA = "0x7067D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DDA58", Offset = "0x4DDA58")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000668")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x70623C", Offset = "0x70623C", VA = "0x70623C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x706300", Offset = "0x706300", VA = "0x706300", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x70632C", Offset = "0x70632C", VA = "0x70632C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x706354", Offset = "0x706354", VA = "0x706354")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1EA4", Offset = "0x4E1EA4")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x7063F0", Offset = "0x7063F0", VA = "0x7063F0", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000530")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x70640C", Offset = "0x70640C", VA = "0x70640C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x706530", Offset = "0x706530", VA = "0x706530")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E1F08", Offset = "0x4E1F08")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000110")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x706838", Offset = "0x706838", VA = "0x706838")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x706898", Offset = "0x706898", VA = "0x706898", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x706A1C", Offset = "0x706A1C", VA = "0x706A1C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x706B0C", Offset = "0x706B0C", VA = "0x706B0C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E1F18", Offset = "0x4E1F18")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x706B10", Offset = "0x706B10", VA = "0x706B10")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000111")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DDA90", Offset = "0x4DDA90")]
	public float LOSOffset;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DDAC8", Offset = "0x4DDAC8")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x706B1C", Offset = "0x706B1C", VA = "0x706B1C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x706D4C", Offset = "0x706D4C", VA = "0x706D4C")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000112")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600053A")]
	[Address(RVA = "0x706D58", Offset = "0x706D58", VA = "0x706D58", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x706EDC", Offset = "0x706EDC", VA = "0x706EDC")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000113")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600053C")]
	[Address(RVA = "0x706EE0", Offset = "0x706EE0", VA = "0x706EE0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x706F78", Offset = "0x706F78", VA = "0x706F78", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600053E")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x70700C", Offset = "0x70700C", VA = "0x70700C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000114")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC018", Offset = "0x4DC018")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x707374", Offset = "0x707374", VA = "0x707374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0x7073DC", Offset = "0x7073DC", VA = "0x7073DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x7070B0", Offset = "0x7070B0", VA = "0x7070B0")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x707274", Offset = "0x707274", VA = "0x707274", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x707278", Offset = "0x707278", VA = "0x707278", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x70737C", Offset = "0x70737C", VA = "0x70737C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DDB00", Offset = "0x4DDB00")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DDB00", Offset = "0x4DDB00")]
	public float TransitionDuration;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DDB58", Offset = "0x4DDB58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DDB58", Offset = "0x4DDB58")]
	public float TeleportDelay;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DDBAC", Offset = "0x4DDBAC")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x707014", Offset = "0x707014", VA = "0x707014", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x707040", Offset = "0x707040", VA = "0x707040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1F50", Offset = "0x4E1F50")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x7070DC", Offset = "0x7070DC", VA = "0x7070DC")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000115")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000543")]
	[Address(RVA = "0x7073E4", Offset = "0x7073E4", VA = "0x7073E4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x707400", Offset = "0x707400", VA = "0x707400")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000116")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC028", Offset = "0x4DC028")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x70764C", Offset = "0x70764C", VA = "0x70764C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x7076B4", Offset = "0x7076B4", VA = "0x7076B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x7074A4", Offset = "0x7074A4", VA = "0x7074A4")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x707518", Offset = "0x707518", VA = "0x707518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x70751C", Offset = "0x70751C", VA = "0x70751C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x707654", Offset = "0x707654", VA = "0x707654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DDBE4", Offset = "0x4DDBE4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DDBE4", Offset = "0x4DDBE4")]
	public float TransitionDuration;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x707408", Offset = "0x707408", VA = "0x707408", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x707434", Offset = "0x707434", VA = "0x707434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E1FB4", Offset = "0x4E1FB4")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x7074D0", Offset = "0x7074D0", VA = "0x7074D0")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000117")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700001A")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000548")]
		[Address(RVA = "0x7E32BC", Offset = "0x7E32BC", VA = "0x7E32BC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001B")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000549")]
		[Address(RVA = "0x7E3578", Offset = "0x7E3578", VA = "0x7E3578")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001C")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600054A")]
		[Address(RVA = "0x7E043C", Offset = "0x7E043C", VA = "0x7E043C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001D")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600054B")]
		[Address(RVA = "0x7E165C", Offset = "0x7E165C", VA = "0x7E165C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001E")]
	public static long Duration
	{
		[Token(Token = "0x600054C")]
		[Address(RVA = "0x7E1840", Offset = "0x7E1840", VA = "0x7E1840")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700001F")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600054D")]
		[Address(RVA = "0x7E174C", Offset = "0x7E174C", VA = "0x7E174C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600054E")]
		[Address(RVA = "0x7E0E20", Offset = "0x7E0E20", VA = "0x7E0E20")]
		set
		{
		}
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x7E1EA0", Offset = "0x7E1EA0", VA = "0x7E1EA0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x7E1BE4", Offset = "0x7E1BE4", VA = "0x7E1BE4")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x7E0AB0", Offset = "0x7E0AB0", VA = "0x7E0AB0")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x7E0C34", Offset = "0x7E0C34", VA = "0x7E0C34")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x7E1A0C", Offset = "0x7E1A0C", VA = "0x7E1A0C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x7E2094", Offset = "0x7E2094", VA = "0x7E2094")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x7E14A0", Offset = "0x7E14A0", VA = "0x7E14A0")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000118")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000012")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000557")]
		[Address(RVA = "0x8428D0", Offset = "0x8428D0", VA = "0x8428D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2018", Offset = "0x4E2018")]
		add
		{
		}
		[Token(Token = "0x6000558")]
		[Address(RVA = "0x842974", Offset = "0x842974", VA = "0x842974")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2028", Offset = "0x4E2028")]
		remove
		{
		}
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x842A18", Offset = "0x842A18", VA = "0x842A18", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x842A2C", Offset = "0x842A2C", VA = "0x842A2C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000119")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200024B")]
	public enum ButtonType
	{
		[Token(Token = "0x4000D08")]
		Play,
		[Token(Token = "0x4000D09")]
		Pause,
		[Token(Token = "0x4000D0A")]
		FastForward,
		[Token(Token = "0x4000D0B")]
		Rewind,
		[Token(Token = "0x4000D0C")]
		SkipForward,
		[Token(Token = "0x4000D0D")]
		SkipBack,
		[Token(Token = "0x4000D0E")]
		Stop
	}

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000020")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0x7DD5B8", Offset = "0x7DD5B8", VA = "0x7DD5B8")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x7DD5C0", Offset = "0x7DD5C0", VA = "0x7DD5C0")]
		set
		{
		}
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x7DD5E4", Offset = "0x7DD5E4", VA = "0x7DD5E4", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x7DEAB0", Offset = "0x7DEAB0", VA = "0x7DEAB0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200011A")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200024C")]
	public enum VideoShape
	{
		[Token(Token = "0x4000D10")]
		_360,
		[Token(Token = "0x4000D11")]
		_180,
		[Token(Token = "0x4000D12")]
		Quad
	}

	[Token(Token = "0x200024D")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000D14")]
		Mono,
		[Token(Token = "0x4000D15")]
		TopBottom,
		[Token(Token = "0x4000D16")]
		LeftRight
	}

	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC038", Offset = "0x4DC038")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x7E235C", Offset = "0x7E235C", VA = "0x7E235C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x7E23C4", Offset = "0x7E23C4", VA = "0x7E23C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x7E07AC", Offset = "0x7E07AC", VA = "0x7E07AC")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x7E21D8", Offset = "0x7E21D8", VA = "0x7E21D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x7E21DC", Offset = "0x7E21DC", VA = "0x7E21DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x7E2364", Offset = "0x7E2364", VA = "0x7E2364", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC048", Offset = "0x4DC048")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x7E0A14", Offset = "0x7E0A14", VA = "0x7E0A14")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x7E1DCC", Offset = "0x7E1DCC", VA = "0x7E1DCC")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DDC6C", Offset = "0x4DDC6C")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DDC7C", Offset = "0x4DDC7C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DDC8C", Offset = "0x4DDC8C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000021")]
	public bool IsPlaying
	{
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x7E01F0", Offset = "0x7E01F0", VA = "0x7E01F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2038", Offset = "0x4E2038")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x7E01F8", Offset = "0x7E01F8", VA = "0x7E01F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2048", Offset = "0x4E2048")]
		private set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public long Duration
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x7E0204", Offset = "0x7E0204", VA = "0x7E0204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2058", Offset = "0x4E2058")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x7E020C", Offset = "0x7E020C", VA = "0x7E020C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2068", Offset = "0x4E2068")]
		private set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x7E0214", Offset = "0x7E0214", VA = "0x7E0214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2078", Offset = "0x4E2078")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x7E021C", Offset = "0x7E021C", VA = "0x7E021C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2088", Offset = "0x4E2088")]
		private set
		{
		}
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x7E0224", Offset = "0x7E0224", VA = "0x7E0224")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x7E04A4", Offset = "0x7E04A4", VA = "0x7E04A4")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x7E050C", Offset = "0x7E050C", VA = "0x7E050C")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x7E073C", Offset = "0x7E073C", VA = "0x7E073C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E2098", Offset = "0x4E2098")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x7E07D8", Offset = "0x7E07D8", VA = "0x7E07D8")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x7E0A1C", Offset = "0x7E0A1C", VA = "0x7E0A1C")]
	public void Play()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x7E0BA4", Offset = "0x7E0BA4", VA = "0x7E0BA4")]
	public void Pause()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x7E0D28", Offset = "0x7E0D28", VA = "0x7E0D28")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x7E0F60", Offset = "0x7E0F60", VA = "0x7E0F60")]
	private void Update()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x7E1934", Offset = "0x7E1934", VA = "0x7E1934")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x7E1B54", Offset = "0x7E1B54", VA = "0x7E1B54")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x7E1CD8", Offset = "0x7E1CD8", VA = "0x7E1CD8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x7E1DBC", Offset = "0x7E1DBC", VA = "0x7E1DBC")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200011B")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000250")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000D1E")]
		Playing,
		[Token(Token = "0x4000D1F")]
		Paused,
		[Token(Token = "0x4000D20")]
		Rewinding,
		[Token(Token = "0x4000D21")]
		FastForwarding
	}

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x7E23CC", Offset = "0x7E23CC", VA = "0x7E23CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x7E26C8", Offset = "0x7E26C8", VA = "0x7E26C8")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x7E28A4", Offset = "0x7E28A4", VA = "0x7E28A4")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x7E29D8", Offset = "0x7E29D8", VA = "0x7E29D8")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x7E2AE0", Offset = "0x7E2AE0", VA = "0x7E2AE0")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x7E29AC", Offset = "0x7E29AC", VA = "0x7E29AC")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x7E2BA8", Offset = "0x7E2BA8", VA = "0x7E2BA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x7E25BC", Offset = "0x7E25BC", VA = "0x7E25BC")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x7E2FA4", Offset = "0x7E2FA4", VA = "0x7E2FA4")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200011C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DB948", Offset = "0x4DB948")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000251")]
	private enum CubeFace
	{
		[Token(Token = "0x4000D23")]
		Right,
		[Token(Token = "0x4000D24")]
		Left,
		[Token(Token = "0x4000D25")]
		Top,
		[Token(Token = "0x4000D26")]
		Bottom,
		[Token(Token = "0x4000D27")]
		Front,
		[Token(Token = "0x4000D28")]
		Back,
		[Token(Token = "0x4000D29")]
		COUNT
	}

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x8E44C0", Offset = "0x8E44C0", VA = "0x8E44C0")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x8E4620", Offset = "0x8E4620", VA = "0x8E4620")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x8E47DC", Offset = "0x8E47DC", VA = "0x8E47DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x8E4CB4", Offset = "0x8E4CB4", VA = "0x8E4CB4")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x8E4F88", Offset = "0x8E4F88", VA = "0x8E4F88")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x8E61E4", Offset = "0x8E61E4", VA = "0x8E61E4")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x8E6244", Offset = "0x8E6244", VA = "0x8E6244")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x8E5308", Offset = "0x8E5308", VA = "0x8E5308")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x8E632C", Offset = "0x8E632C", VA = "0x8E632C")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x8E6518", Offset = "0x8E6518", VA = "0x8E6518")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x8E57C0", Offset = "0x8E57C0", VA = "0x8E57C0")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x8E5AE8", Offset = "0x8E5AE8", VA = "0x8E5AE8")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x8E5E40", Offset = "0x8E5E40", VA = "0x8E5E40")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x8E66CC", Offset = "0x8E66CC", VA = "0x8E66CC")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x200011D")]
public static class VectorUtil
{
	[Token(Token = "0x600058A")]
	[Address(RVA = "0x900038", Offset = "0x900038", VA = "0x900038")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200011E")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x84CF50", Offset = "0x84CF50", VA = "0x84CF50")]
	private void Start()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x84D320", Offset = "0x84D320", VA = "0x84D320")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x84D3D8", Offset = "0x84D3D8", VA = "0x84D3D8")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x84D5D8", Offset = "0x84D5D8", VA = "0x84D5D8")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x84D6C0", Offset = "0x84D6C0", VA = "0x84D6C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x84D79C", Offset = "0x84D79C", VA = "0x84D79C")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x84D808", Offset = "0x84D808", VA = "0x84D808")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x84D810", Offset = "0x84D810", VA = "0x84D810")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E210C", Offset = "0x4E210C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x84D86C", Offset = "0x84D86C", VA = "0x84D86C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E211C", Offset = "0x4E211C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x84D8C8", Offset = "0x84D8C8", VA = "0x84D8C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E212C", Offset = "0x4E212C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x84D924", Offset = "0x84D924", VA = "0x84D924")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E213C", Offset = "0x4E213C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200011F")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC058", Offset = "0x4DC058")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x6F27F8", Offset = "0x6F27F8", VA = "0x6F27F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x6F2860", Offset = "0x6F2860", VA = "0x6F2860", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x6F26A8", Offset = "0x6F26A8", VA = "0x6F26A8")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x6F26DC", Offset = "0x6F26DC", VA = "0x6F26DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x6F26E0", Offset = "0x6F26E0", VA = "0x6F26E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x6F2800", Offset = "0x6F2800", VA = "0x6F2800", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x6F23AC", Offset = "0x6F23AC", VA = "0x6F23AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x6F24AC", Offset = "0x6F24AC", VA = "0x6F24AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x6F243C", Offset = "0x6F243C", VA = "0x6F243C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E214C", Offset = "0x4E214C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x6F26D4", Offset = "0x6F26D4", VA = "0x6F26D4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000120")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DDCAC", Offset = "0x4DDCAC")]
	public int SubdivisionsU;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DDCC8", Offset = "0x4DDCC8")]
	public int SubdivisionsV;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x8464A4", Offset = "0x8464A4", VA = "0x8464A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x846F5C", Offset = "0x846F5C", VA = "0x846F5C")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000121")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000024")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600059C")]
		[Address(RVA = "0x6F643C", Offset = "0x6F643C", VA = "0x6F643C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x6F6494", Offset = "0x6F6494", VA = "0x6F6494")]
	public void Start()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x6F67D8", Offset = "0x6F67D8", VA = "0x6F67D8")]
	public void Update()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x6F68BC", Offset = "0x6F68BC", VA = "0x6F68BC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E21B0", Offset = "0x4E21B0")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60005A0")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60005A1")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60005A2")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60005A3")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60005A4")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60005A5")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60005A6")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60005A7")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x6F6924", Offset = "0x6F6924", VA = "0x6F6924")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x6F6960", Offset = "0x6F6960", VA = "0x6F6960")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x6F69D4", Offset = "0x6F69D4", VA = "0x6F69D4")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x6F6B30", Offset = "0x6F6B30", VA = "0x6F6B30")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x6F6C04", Offset = "0x6F6C04", VA = "0x6F6C04")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x6F66E4", Offset = "0x6F66E4", VA = "0x6F66E4")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x6F6CC4", Offset = "0x6F6CC4", VA = "0x6F6CC4")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x6F6D2C", Offset = "0x6F6D2C", VA = "0x6F6D2C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x6F6E10", Offset = "0x6F6E10", VA = "0x6F6E10")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000122")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DB9DC", Offset = "0x4DB9DC")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000253")]
	public enum DrawMode
	{
		[Token(Token = "0x4000D2E")]
		Opaque,
		[Token(Token = "0x4000D2F")]
		OpaqueWithClip,
		[Token(Token = "0x4000D30")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000D31")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000025")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x8E42A4", Offset = "0x8E42A4", VA = "0x8E42A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x8E4338", Offset = "0x8E4338", VA = "0x8E4338")]
		set
		{
		}
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x8E2C34", Offset = "0x8E2C34", VA = "0x8E2C34")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x8E38A4", Offset = "0x8E38A4", VA = "0x8E38A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x8E3928", Offset = "0x8E3928", VA = "0x8E3928")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x8E3A1C", Offset = "0x8E3A1C", VA = "0x8E3A1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x8E3B10", Offset = "0x8E3B10", VA = "0x8E3B10", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x8E3D14", Offset = "0x8E3D14", VA = "0x8E3D14")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x8E4408", Offset = "0x8E4408", VA = "0x8E4408")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000123")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC068", Offset = "0x4DC068")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x702D70", Offset = "0x702D70", VA = "0x702D70")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x702E60", Offset = "0x702E60", VA = "0x702E60")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x702BD0", Offset = "0x702BD0", VA = "0x702BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x702D78", Offset = "0x702D78", VA = "0x702D78")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x702E58", Offset = "0x702E58", VA = "0x702E58")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000124")]
public class CharacterMotorMovement
{
	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxForwardSpeed;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxSidewaysSpeed;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxBackwardsSpeed;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve slopeSpeedMultiplier;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxGroundAcceleration;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxAirAcceleration;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gravity;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxFallSpeed;

	[NonSerialized]
	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CollisionFlags collisionFlags;

	[NonSerialized]
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 velocity;

	[NonSerialized]
	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 frameVelocity;

	[NonSerialized]
	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 hitPoint;

	[NonSerialized]
	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 lastHitPoint;

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x849268", Offset = "0x849268", VA = "0x849268")]
	public CharacterMotorMovement()
	{
	}
}
[Token(Token = "0x2000125")]
public enum MovementTransferOnJump
{
	[Token(Token = "0x40006F8")]
	None,
	[Token(Token = "0x40006F9")]
	InitTransfer,
	[Token(Token = "0x40006FA")]
	PermaTransfer,
	[Token(Token = "0x40006FB")]
	PermaLocked
}
[Serializable]
[Token(Token = "0x2000126")]
public class CharacterMotorJumping
{
	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool enabled;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float baseHeight;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float extraHeight;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float perpAmount;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float steepPerpAmount;

	[NonSerialized]
	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool jumping;

	[NonSerialized]
	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool holdingJumpButton;

	[NonSerialized]
	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lastStartTime;

	[NonSerialized]
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lastButtonDownTime;

	[NonSerialized]
	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 jumpDir;

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x849490", Offset = "0x849490", VA = "0x849490")]
	public CharacterMotorJumping()
	{
	}
}
[Serializable]
[Token(Token = "0x2000127")]
public class CharacterMotorMovingPlatform
{
	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool enabled;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MovementTransferOnJump movementTransfer;

	[NonSerialized]
	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hitPlatform;

	[NonSerialized]
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform activePlatform;

	[NonSerialized]
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 activeLocalPoint;

	[NonSerialized]
	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 activeGlobalPoint;

	[NonSerialized]
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Quaternion activeLocalRotation;

	[NonSerialized]
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion activeGlobalRotation;

	[NonSerialized]
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Matrix4x4 lastMatrix;

	[NonSerialized]
	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 platformVelocity;

	[NonSerialized]
	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool newPlatform;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x84952C", Offset = "0x84952C", VA = "0x84952C")]
	public CharacterMotorMovingPlatform()
	{
	}
}
[Serializable]
[Token(Token = "0x2000128")]
public class CharacterMotorSliding
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool enabled;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float slidingSpeed;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sidewaysControl;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedControl;

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x849544", Offset = "0x849544", VA = "0x849544")]
	public CharacterMotorSliding()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DBA40", Offset = "0x4DBA40")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4DBA40", Offset = "0x4DBA40")]
public class CharacterMotor : MonoBehaviour
{
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC078", Offset = "0x4DC078")]
	private sealed class <SubtractNewPlatformVelocity>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterMotor <>4__this;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <platform>5__2;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x8497B4", Offset = "0x8497B4", VA = "0x8497B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x84981C", Offset = "0x84981C", VA = "0x84981C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x848E38", Offset = "0x848E38", VA = "0x848E38")]
		[DebuggerHidden]
		public <SubtractNewPlatformVelocity>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x84956C", Offset = "0x84956C", VA = "0x84956C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x849570", Offset = "0x849570", VA = "0x849570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x8497BC", Offset = "0x8497BC", VA = "0x8497BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canControl;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool useFixedUpdate;

	[NonSerialized]
	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 inputMoveDirection;

	[NonSerialized]
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool inputJump;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CharacterMotorMovement movement;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CharacterMotorJumping jumping;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CharacterMotorMovingPlatform movingPlatform;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CharacterMotorSliding sliding;

	[NonSerialized]
	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool grounded;

	[NonSerialized]
	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 groundNormal;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastGroundNormal;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform tr;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CharacterController controller;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x846F64", Offset = "0x846F64", VA = "0x846F64")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x846FCC", Offset = "0x846FCC", VA = "0x846FCC")]
	private void UpdateFunction()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x848604", Offset = "0x848604", VA = "0x848604")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x848834", Offset = "0x848834", VA = "0x848834")]
	public void Update()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x847B70", Offset = "0x847B70", VA = "0x847B70")]
	private Vector3 ApplyInputVelocityChange(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x847FF4", Offset = "0x847FF4", VA = "0x847FF4")]
	private Vector3 ApplyGravityAndJumping(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x848C0C", Offset = "0x848C0C", VA = "0x848C0C")]
	public void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x848594", Offset = "0x848594", VA = "0x848594")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E21E8", Offset = "0x4E21E8")]
	private IEnumerator SubtractNewPlatformVelocity()
	{
		return null;
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x8484D4", Offset = "0x8484D4", VA = "0x8484D4")]
	private bool MoveWithPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x8488E0", Offset = "0x8488E0", VA = "0x8488E0")]
	private Vector3 GetDesiredHorizontalVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x848A24", Offset = "0x848A24", VA = "0x848A24")]
	private Vector3 AdjustGroundVelocityToNormal(Vector3 hVelocity, Vector3 groundNormal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x84857C", Offset = "0x84857C", VA = "0x84857C")]
	private bool IsGroundedTest()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x848B3C", Offset = "0x848B3C", VA = "0x848B3C")]
	public float GetMaxAcceleration(bool grounded)
	{
		return default(float);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x848B68", Offset = "0x848B68", VA = "0x848B68")]
	public float CalculateJumpVerticalSpeed(float targetJumpHeight)
	{
		return default(float);
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x848FCC", Offset = "0x848FCC", VA = "0x848FCC")]
	public bool IsJumping()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x848FE8", Offset = "0x848FE8", VA = "0x848FE8")]
	public bool IsSliding()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x849018", Offset = "0x849018", VA = "0x849018")]
	public bool IsTouchingCeiling()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x849038", Offset = "0x849038", VA = "0x849038")]
	public bool IsGrounded()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x848844", Offset = "0x848844", VA = "0x848844")]
	public bool TooSteep()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x849040", Offset = "0x849040", VA = "0x849040")]
	public Vector3 GetDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x84904C", Offset = "0x84904C", VA = "0x84904C")]
	public void SetControllable(bool controllable)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x848E64", Offset = "0x848E64", VA = "0x848E64")]
	public float MaxSpeedInDirection(Vector3 desiredMovementDirection)
	{
		return default(float);
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x849058", Offset = "0x849058", VA = "0x849058")]
	public void SetVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x849118", Offset = "0x849118", VA = "0x849118")]
	public CharacterMotor()
	{
	}
}
[Token(Token = "0x200012A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DBAC8", Offset = "0x4DBAC8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4DBAC8", Offset = "0x4DBAC8")]
public class FPSInputController : MonoBehaviour
{
	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterMotor motor;

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x6EBA94", Offset = "0x6EBA94", VA = "0x6EBA94")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x6EBAEC", Offset = "0x6EBAEC", VA = "0x6EBAEC")]
	public void Update()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x6EBD40", Offset = "0x6EBD40", VA = "0x6EBD40")]
	public FPSInputController()
	{
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4DBB50", Offset = "0x4DBB50")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000256")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000D39")]
		MouseXAndY,
		[Token(Token = "0x4000D3A")]
		MouseX,
		[Token(Token = "0x4000D3B")]
		MouseY
	}

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x7DFCD4", Offset = "0x7DFCD4", VA = "0x7DFCD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x7DFF34", Offset = "0x7DFF34", VA = "0x7DFF34")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x7DFFF4", Offset = "0x7DFFF4", VA = "0x7DFFF4")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200012C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DBB88", Offset = "0x4DBB88")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4DBB88", Offset = "0x4DBB88")]
public class PlatformInputController : MonoBehaviour
{
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool autoRotate;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxRotationSpeed;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterMotor motor;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x6DF928", Offset = "0x6DF928", VA = "0x6DF928")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x6DF980", Offset = "0x6DF980", VA = "0x6DF980")]
	public void Update()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x6DFEF0", Offset = "0x6DFEF0", VA = "0x6DFEF0")]
	public Vector3 ProjectOntoPlane(Vector3 v, Vector3 normal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x6DFDE4", Offset = "0x6DFDE4", VA = "0x6DFDE4")]
	public Vector3 ConstantSlerp(Vector3 from, Vector3 to, float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x6DFFB8", Offset = "0x6DFFB8", VA = "0x6DFFB8")]
	public PlatformInputController()
	{
	}
}
[Token(Token = "0x200012D")]
public class ThirdPersonCamera : MonoBehaviour
{
	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraTransform;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _target;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float height;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float angularSmoothLag;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float angularMaxSpeed;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float heightSmoothLag;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float snapSmoothLag;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float snapMaxSpeed;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float clampHeadPositionScreenSpace;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lockCameraTimeout;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 headOffset;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 centerOffset;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float heightVelocity;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float angleVelocity;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool snap;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ThirdPersonController controller;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float targetHeight;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x7076C4", Offset = "0x7076C4", VA = "0x7076C4")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x707B08", Offset = "0x707B08", VA = "0x707B08")]
	public void DebugDrawStuff()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x707C3C", Offset = "0x707C3C", VA = "0x707C3C")]
	public float AngleDistance(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x707CE0", Offset = "0x707CE0", VA = "0x707CE0")]
	public void Apply(Transform dummyTarget, Vector3 dummyCenter)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x708500", Offset = "0x708500", VA = "0x708500")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x707A50", Offset = "0x707A50", VA = "0x707A50")]
	public void Cut(Transform dummyTarget, Vector3 dummyCenter)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x708148", Offset = "0x708148", VA = "0x708148")]
	public void SetUpRotation(Vector3 centerPos, Vector3 headPos)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x708578", Offset = "0x708578", VA = "0x708578")]
	public Vector3 GetCenterOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x708584", Offset = "0x708584", VA = "0x708584")]
	public ThirdPersonCamera()
	{
	}
}
[Token(Token = "0x200012E")]
public enum CharacterState
{
	[Token(Token = "0x4000741")]
	Idle,
	[Token(Token = "0x4000742")]
	Walking,
	[Token(Token = "0x4000743")]
	Trotting,
	[Token(Token = "0x4000744")]
	Running,
	[Token(Token = "0x4000745")]
	Jumping
}
[Token(Token = "0x200012F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DBC10", Offset = "0x4DBC10")]
public class ThirdPersonController : MonoBehaviour
{
	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationClip idleAnimation;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip walkAnimation;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip runAnimation;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip jumpPoseAnimation;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float walkMaxAnimationSpeed;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float trotMaxAnimationSpeed;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float runMaxAnimationSpeed;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float jumpAnimationSpeed;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float landAnimationSpeed;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animation _animation;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CharacterState _characterState;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float walkSpeed;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float trotSpeed;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float runSpeed;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float inAirControlAcceleration;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float jumpHeight;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float gravity;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float speedSmoothing;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float rotateSpeed;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float trotAfterSeconds;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool canJump;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float jumpRepeatTime;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float jumpTimeout;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float groundedTimeout;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lockCameraTimer;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 moveDirection;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float verticalSpeed;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float moveSpeed;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CollisionFlags collisionFlags;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool jumping;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool jumpingReachedApex;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	private bool movingBack;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	private bool isMoving;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float walkTimeStart;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float lastJumpButtonTime;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float lastJumpTime;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float lastJumpStartHeight;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 inAirVelocity;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float lastGroundedTime;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isControllable;

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x70863C", Offset = "0x70863C", VA = "0x70863C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x708914", Offset = "0x708914", VA = "0x708914")]
	public void UpdateSmoothedMovementDirection()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x708E80", Offset = "0x708E80", VA = "0x708E80")]
	public void ApplyJumping()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x708FE0", Offset = "0x708FE0", VA = "0x708FE0")]
	public void ApplyGravity()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x708F48", Offset = "0x708F48", VA = "0x708F48")]
	public float CalculateJumpVerticalSpeed(float targetJumpHeight)
	{
		return default(float);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x7090AC", Offset = "0x7090AC", VA = "0x7090AC")]
	public void DidJump()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x70910C", Offset = "0x70910C", VA = "0x70910C")]
	public void Update()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x7096D8", Offset = "0x7096D8", VA = "0x7096D8")]
	public void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x7096F4", Offset = "0x7096F4", VA = "0x7096F4")]
	public float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x7096FC", Offset = "0x7096FC", VA = "0x7096FC")]
	public bool IsJumping()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x708E74", Offset = "0x708E74", VA = "0x708E74")]
	public bool IsGrounded()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x709704", Offset = "0x709704", VA = "0x709704")]
	public Vector3 GetDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x709710", Offset = "0x709710", VA = "0x709710")]
	public bool IsMovingBackwards()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x709718", Offset = "0x709718", VA = "0x709718")]
	public float GetLockCameraTimer()
	{
		return default(float);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x709720", Offset = "0x709720", VA = "0x709720")]
	public bool IsMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x7097C8", Offset = "0x7097C8", VA = "0x7097C8")]
	public bool HasJumpReachedApex()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x7097D0", Offset = "0x7097D0", VA = "0x7097D0")]
	public bool IsGroundedWithTimeout()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x709804", Offset = "0x709804", VA = "0x709804")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x709868", Offset = "0x709868", VA = "0x709868")]
	public ThirdPersonController()
	{
	}
}
[Token(Token = "0x2000130")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000257")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000D3D")]
		Uninitialized = -1,
		[Token(Token = "0x4000D3E")]
		NotEnabled,
		[Token(Token = "0x4000D3F")]
		Success,
		[Token(Token = "0x4000D40")]
		StreamError,
		[Token(Token = "0x4000D41")]
		ProcessError,
		[Token(Token = "0x4000D42")]
		MaxStatValue
	}

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000026")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000601")]
		[Address(RVA = "0x7E38F4", Offset = "0x7E38F4", VA = "0x7E38F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000602")]
		[Address(RVA = "0x7E38FC", Offset = "0x7E38FC", VA = "0x7E38FC")]
		set
		{
		}
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x7E3908", Offset = "0x7E3908", VA = "0x7E3908")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x7E3B24", Offset = "0x7E3B24", VA = "0x7E3B24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x7E3D80", Offset = "0x7E3D80", VA = "0x7E3D80")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000131")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000258")]
	private enum Parameters
	{
		[Token(Token = "0x4000D44")]
		P_GAIN,
		[Token(Token = "0x4000D45")]
		P_USEINVSQR,
		[Token(Token = "0x4000D46")]
		P_NEAR,
		[Token(Token = "0x4000D47")]
		P_FAR,
		[Token(Token = "0x4000D48")]
		P_RADIUS,
		[Token(Token = "0x4000D49")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000D4A")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000D4B")]
		P_AMBISTAT,
		[Token(Token = "0x4000D4C")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000D4D")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000D4E")]
		P_SENDLEVEL,
		[Token(Token = "0x4000D4F")]
		P_NUM
	}

	[Token(Token = "0x4000773")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000027")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000609")]
		[Address(RVA = "0x7E3FDC", Offset = "0x7E3FDC", VA = "0x7E3FDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x7E3FE4", Offset = "0x7E3FE4", VA = "0x7E3FE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public float Gain
	{
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x7E3FF0", Offset = "0x7E3FF0", VA = "0x7E3FF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600060C")]
		[Address(RVA = "0x7E3FF8", Offset = "0x7E3FF8", VA = "0x7E3FF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x7E407C", Offset = "0x7E407C", VA = "0x7E407C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x7E4084", Offset = "0x7E4084", VA = "0x7E4084")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public float Near
	{
		[Token(Token = "0x600060F")]
		[Address(RVA = "0x7E4090", Offset = "0x7E4090", VA = "0x7E4090")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000610")]
		[Address(RVA = "0x7E4098", Offset = "0x7E4098", VA = "0x7E4098")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public float Far
	{
		[Token(Token = "0x6000611")]
		[Address(RVA = "0x7E4120", Offset = "0x7E4120", VA = "0x7E4120")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000612")]
		[Address(RVA = "0x7E4128", Offset = "0x7E4128", VA = "0x7E4128")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000613")]
		[Address(RVA = "0x7E41B0", Offset = "0x7E41B0", VA = "0x7E41B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000614")]
		[Address(RVA = "0x7E41B8", Offset = "0x7E41B8", VA = "0x7E41B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public float ReverbSend
	{
		[Token(Token = "0x6000615")]
		[Address(RVA = "0x7E4240", Offset = "0x7E4240", VA = "0x7E4240")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000616")]
		[Address(RVA = "0x7E4248", Offset = "0x7E4248", VA = "0x7E4248")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000617")]
		[Address(RVA = "0x7E42D0", Offset = "0x7E42D0", VA = "0x7E42D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000618")]
		[Address(RVA = "0x7E42D8", Offset = "0x7E42D8", VA = "0x7E42D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x7E3E04", Offset = "0x7E3E04", VA = "0x7E3E04")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x4E224C", Offset = "0x4E224C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000608")]
	[Address(RVA = "0x7E3EFC", Offset = "0x7E3EFC", VA = "0x7E3EFC")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x7E42E4", Offset = "0x7E42E4", VA = "0x7E42E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x7E4458", Offset = "0x7E4458", VA = "0x7E4458")]
	private void Start()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x7E445C", Offset = "0x7E445C", VA = "0x7E445C")]
	private void Update()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x7E4350", Offset = "0x7E4350", VA = "0x7E4350")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x7E4524", Offset = "0x7E4524", VA = "0x7E4524")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x7E4984", Offset = "0x7E4984", VA = "0x7E4984")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600061F")]
	[Address(RVA = "0x7E3E7C", Offset = "0x7E3E7C", VA = "0x7E3E7C")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x7E4A54", Offset = "0x7E4A54", VA = "0x7E4A54")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000132")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400077E")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000780")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x7E4A74", Offset = "0x7E4A74", VA = "0x7E4A74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x7E4A80", Offset = "0x7E4A80", VA = "0x7E4A80")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000624")]
	[Address(RVA = "0x7E4B38", Offset = "0x7E4B38", VA = "0x7E4B38")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000625")]
	[Address(RVA = "0x7E4AB8", Offset = "0x7E4AB8", VA = "0x7E4AB8")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x7E4BB8", Offset = "0x7E4BB8", VA = "0x7E4BB8")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000133")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000259")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200025A")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000787")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700002F")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000627")]
		[Address(RVA = "0x7E7634", Offset = "0x7E7634", VA = "0x7E7634")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public string filePath
	{
		[Token(Token = "0x6000628")]
		[Address(RVA = "0x7E76C0", Offset = "0x7E76C0", VA = "0x7E76C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x7E7738", Offset = "0x7E7738", VA = "0x7E7738")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x7E7880", Offset = "0x7E7880", VA = "0x7E7880")]
	private void Awake()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x7E7884", Offset = "0x7E7884", VA = "0x7E7884")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x7E7DE4", Offset = "0x7E7DE4", VA = "0x7E7DE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x7E817C", Offset = "0x7E817C", VA = "0x7E817C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x7E82D8", Offset = "0x7E82D8", VA = "0x7E82D8")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x7E89C0", Offset = "0x7E89C0", VA = "0x7E89C0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x7E89FC", Offset = "0x7E89FC", VA = "0x7E89FC")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x7EA21C", Offset = "0x7EA21C", VA = "0x7EA21C")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x7EA0F4", Offset = "0x7EA0F4", VA = "0x7EA0F4")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x7E7C1C", Offset = "0x7E7C1C", VA = "0x7E7C1C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x7E7A50", Offset = "0x7E7A50", VA = "0x7E7A50")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x7EA830", Offset = "0x7EA830", VA = "0x7EA830")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x7EAC6C", Offset = "0x7EAC6C", VA = "0x7EAC6C")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000134")]
internal class ONSPPropagation
{
	[Token(Token = "0x200025B")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000D56")]
		Int8,
		[Token(Token = "0x4000D57")]
		UInt8,
		[Token(Token = "0x4000D58")]
		Int16,
		[Token(Token = "0x4000D59")]
		UInt16,
		[Token(Token = "0x4000D5A")]
		Int32,
		[Token(Token = "0x4000D5B")]
		UInt32,
		[Token(Token = "0x4000D5C")]
		Int64,
		[Token(Token = "0x4000D5D")]
		UInt64,
		[Token(Token = "0x4000D5E")]
		Float16,
		[Token(Token = "0x4000D5F")]
		Float32,
		[Token(Token = "0x4000D60")]
		Float64
	}

	[Token(Token = "0x200025C")]
	public class ClientType
	{
		[Token(Token = "0x4000D61")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000D62")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000D63")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000D64")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000D65")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000D66")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000D67")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000D68")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000D69")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000D6A")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000D6B")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000D6C")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000D6D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000D6E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000D6F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x7E506C", Offset = "0x7E506C", VA = "0x7E506C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x200025D")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000C59")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000C5A")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000C5B")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000C5C")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000C5D")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000C5E")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000C5F")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000C60")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C61")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C62")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C63")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000C64")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000C65")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000C66")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000C67")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200025E")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000D70")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700010D")]
		private IntPtr context
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x7E5CDC", Offset = "0x7E5CDC", VA = "0x7E5CDC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x7E5D40", Offset = "0x7E5D40", VA = "0x7E5D40")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x7E5DD0", Offset = "0x7E5DD0", VA = "0x7E5DD0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x7E5E60", Offset = "0x7E5E60", VA = "0x7E5E60", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x7E5E84", Offset = "0x7E5E84", VA = "0x7E5E84")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x7E5F14", Offset = "0x7E5F14", VA = "0x7E5F14", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x7E5F38", Offset = "0x7E5F38", VA = "0x7E5F38")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x7E5FC4", Offset = "0x7E5FC4", VA = "0x7E5FC4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x7E5FE8", Offset = "0x7E5FE8", VA = "0x7E5FE8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x7E6068", Offset = "0x7E6068", VA = "0x7E6068", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x7E6070", Offset = "0x7E6070", VA = "0x7E6070")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x7E6190", Offset = "0x7E6190", VA = "0x7E6190", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x7E6288", Offset = "0x7E6288", VA = "0x7E6288")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x7E6320", Offset = "0x7E6320", VA = "0x7E6320", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x7E632C", Offset = "0x7E632C", VA = "0x7E632C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x7E6458", Offset = "0x7E6458", VA = "0x7E6458", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x7E6464", Offset = "0x7E6464", VA = "0x7E6464")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x7E6510", Offset = "0x7E6510", VA = "0x7E6510", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x7E651C", Offset = "0x7E651C", VA = "0x7E651C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x7E65C8", Offset = "0x7E65C8", VA = "0x7E65C8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x7E65D4", Offset = "0x7E65D4", VA = "0x7E65D4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x7E6680", Offset = "0x7E6680", VA = "0x7E6680", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x7E668C", Offset = "0x7E668C", VA = "0x7E668C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x7E6718", Offset = "0x7E6718", VA = "0x7E6718", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x7E673C", Offset = "0x7E673C", VA = "0x7E673C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x7E67BC", Offset = "0x7E67BC", VA = "0x7E67BC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x7E67C4", Offset = "0x7E67C4", VA = "0x7E67C4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x7E686C", Offset = "0x7E686C", VA = "0x7E686C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x7E6878", Offset = "0x7E6878", VA = "0x7E6878")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x7E6920", Offset = "0x7E6920", VA = "0x7E6920", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x7E6930", Offset = "0x7E6930", VA = "0x7E6930")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x7E69C0", Offset = "0x7E69C0", VA = "0x7E69C0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x7E5018", Offset = "0x7E5018", VA = "0x7E5018")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200025F")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000D72")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700010E")]
		private IntPtr context
		{
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x7E69CC", Offset = "0x7E69CC", VA = "0x7E69CC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x7E4E60", Offset = "0x7E4E60", VA = "0x7E4E60")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x7E6A30", Offset = "0x7E6A30", VA = "0x7E6A30")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x7E6AC0", Offset = "0x7E6AC0", VA = "0x7E6AC0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x7E6AE4", Offset = "0x7E6AE4", VA = "0x7E6AE4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x7E6B74", Offset = "0x7E6B74", VA = "0x7E6B74", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x7E6B98", Offset = "0x7E6B98", VA = "0x7E6B98")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x7E6C28", Offset = "0x7E6C28", VA = "0x7E6C28", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x7E6C4C", Offset = "0x7E6C4C", VA = "0x7E6C4C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x7E6CCC", Offset = "0x7E6CCC", VA = "0x7E6CCC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x7E6CD4", Offset = "0x7E6CD4", VA = "0x7E6CD4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x7E6DF4", Offset = "0x7E6DF4", VA = "0x7E6DF4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x7E6EEC", Offset = "0x7E6EEC", VA = "0x7E6EEC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x7E6F84", Offset = "0x7E6F84", VA = "0x7E6F84", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x7E6F90", Offset = "0x7E6F90", VA = "0x7E6F90")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x7E70BC", Offset = "0x7E70BC", VA = "0x7E70BC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x7E70C8", Offset = "0x7E70C8", VA = "0x7E70C8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x7E7174", Offset = "0x7E7174", VA = "0x7E7174", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x7E7180", Offset = "0x7E7180", VA = "0x7E7180")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x7E722C", Offset = "0x7E722C", VA = "0x7E722C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x7E7238", Offset = "0x7E7238", VA = "0x7E7238")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x7E72E4", Offset = "0x7E72E4", VA = "0x7E72E4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x7E72F0", Offset = "0x7E72F0", VA = "0x7E72F0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x7E7380", Offset = "0x7E7380", VA = "0x7E7380", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x7E73A4", Offset = "0x7E73A4", VA = "0x7E73A4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x7E7424", Offset = "0x7E7424", VA = "0x7E7424", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x7E742C", Offset = "0x7E742C", VA = "0x7E742C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x7E74D4", Offset = "0x7E74D4", VA = "0x7E74D4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x7E74E0", Offset = "0x7E74E0", VA = "0x7E74E0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x7E7588", Offset = "0x7E7588", VA = "0x7E7588", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x7E7598", Offset = "0x7E7598", VA = "0x7E7598")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x7E7628", Offset = "0x7E7628", VA = "0x7E7628", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x7E4EF0", Offset = "0x7E4EF0", VA = "0x7E4EF0")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000260")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000D74")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700010F")]
		private IntPtr context
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x7E5074", Offset = "0x7E5074", VA = "0x7E5074")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x7E4F3C", Offset = "0x7E4F3C", VA = "0x7E4F3C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x7E50D8", Offset = "0x7E50D8", VA = "0x7E50D8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x7E5168", Offset = "0x7E5168", VA = "0x7E5168", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x7E518C", Offset = "0x7E518C", VA = "0x7E518C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x7E521C", Offset = "0x7E521C", VA = "0x7E521C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x7E5240", Offset = "0x7E5240", VA = "0x7E5240")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x7E52D0", Offset = "0x7E52D0", VA = "0x7E52D0", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x7E52F4", Offset = "0x7E52F4", VA = "0x7E52F4")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x7E5374", Offset = "0x7E5374", VA = "0x7E5374", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x7E537C", Offset = "0x7E537C", VA = "0x7E537C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x7E549C", Offset = "0x7E549C", VA = "0x7E549C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x7E5594", Offset = "0x7E5594", VA = "0x7E5594")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x7E562C", Offset = "0x7E562C", VA = "0x7E562C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x7E5638", Offset = "0x7E5638", VA = "0x7E5638")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x7E5764", Offset = "0x7E5764", VA = "0x7E5764", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x7E5770", Offset = "0x7E5770", VA = "0x7E5770")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x7E581C", Offset = "0x7E581C", VA = "0x7E581C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x7E5828", Offset = "0x7E5828", VA = "0x7E5828")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x7E58D4", Offset = "0x7E58D4", VA = "0x7E58D4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x7E58E0", Offset = "0x7E58E0", VA = "0x7E58E0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x7E598C", Offset = "0x7E598C", VA = "0x7E598C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x7E5998", Offset = "0x7E5998", VA = "0x7E5998")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x7E5A28", Offset = "0x7E5A28", VA = "0x7E5A28", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x7E5A4C", Offset = "0x7E5A4C", VA = "0x7E5A4C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x7E5ACC", Offset = "0x7E5ACC", VA = "0x7E5ACC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x7E5AD4", Offset = "0x7E5AD4", VA = "0x7E5AD4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x7E5B7C", Offset = "0x7E5B7C", VA = "0x7E5B7C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x7E5B88", Offset = "0x7E5B88", VA = "0x7E5B88")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x7E5C30", Offset = "0x7E5C30", VA = "0x7E5C30", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x7E5C40", Offset = "0x7E5C40", VA = "0x7E5C40")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x7E5CD0", Offset = "0x7E5CD0", VA = "0x7E5CD0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x7E4FCC", Offset = "0x7E4FCC", VA = "0x7E4FCC")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000031")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000638")]
		[Address(RVA = "0x7E4BC8", Offset = "0x7E4BC8", VA = "0x7E4BC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x7E4C38", Offset = "0x7E4C38", VA = "0x7E4C38")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x7E5064", Offset = "0x7E5064", VA = "0x7E5064")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000135")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000261")]
	public enum Preset
	{
		[Token(Token = "0x4000D77")]
		Custom,
		[Token(Token = "0x4000D78")]
		AcousticTile,
		[Token(Token = "0x4000D79")]
		Brick,
		[Token(Token = "0x4000D7A")]
		BrickPainted,
		[Token(Token = "0x4000D7B")]
		Carpet,
		[Token(Token = "0x4000D7C")]
		CarpetHeavy,
		[Token(Token = "0x4000D7D")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000D7E")]
		CeramicTile,
		[Token(Token = "0x4000D7F")]
		Concrete,
		[Token(Token = "0x4000D80")]
		ConcreteRough,
		[Token(Token = "0x4000D81")]
		ConcreteBlock,
		[Token(Token = "0x4000D82")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000D83")]
		Curtain,
		[Token(Token = "0x4000D84")]
		Foliage,
		[Token(Token = "0x4000D85")]
		Glass,
		[Token(Token = "0x4000D86")]
		GlassHeavy,
		[Token(Token = "0x4000D87")]
		Grass,
		[Token(Token = "0x4000D88")]
		Gravel,
		[Token(Token = "0x4000D89")]
		GypsumBoard,
		[Token(Token = "0x4000D8A")]
		PlasterOnBrick,
		[Token(Token = "0x4000D8B")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000D8C")]
		Soil,
		[Token(Token = "0x4000D8D")]
		SoundProof,
		[Token(Token = "0x4000D8E")]
		Snow,
		[Token(Token = "0x4000D8F")]
		Steel,
		[Token(Token = "0x4000D90")]
		Water,
		[Token(Token = "0x4000D91")]
		WoodThin,
		[Token(Token = "0x4000D92")]
		WoodThick,
		[Token(Token = "0x4000D93")]
		WoodFloor,
		[Token(Token = "0x4000D94")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000262")]
	public sealed class Point
	{
		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x8D4984", Offset = "0x8D4984", VA = "0x8D4984")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x8D49BC", Offset = "0x8D49BC", VA = "0x8D49BC")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x8D4A2C", Offset = "0x8D4A2C", VA = "0x8D4A2C")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x4DC088", Offset = "0x4DC088")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC1E0", Offset = "0x4DC1E0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000D83")]
			[Address(RVA = "0x8D4EFC", Offset = "0x8D4EFC", VA = "0x8D4EFC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D84")]
			[Address(RVA = "0x8D4F04", Offset = "0x8D4F04", VA = "0x8D4F04")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x8D4F1C", Offset = "0x8D4F1C", VA = "0x8D4F1C")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000110")]
		public float Item
		{
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x8D4A64", Offset = "0x8D4A64", VA = "0x8D4A64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x8D4E20", Offset = "0x8D4E20", VA = "0x8D4E20")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DDDE4", Offset = "0x4DDDE4")]
	public Spectrum absorption;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DDE1C", Offset = "0x4DDE1C")]
	public Spectrum transmission;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DDE54", Offset = "0x4DDE54")]
	public Spectrum scattering;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000032")]
	public Preset preset
	{
		[Token(Token = "0x600063B")]
		[Address(RVA = "0x7EAD44", Offset = "0x7EAD44", VA = "0x7EAD44")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600063C")]
		[Address(RVA = "0x7EAD4C", Offset = "0x7EAD4C", VA = "0x7EAD4C")]
		set
		{
		}
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x7EAD74", Offset = "0x7EAD74", VA = "0x7EAD74")]
	private void Start()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x7EA6C4", Offset = "0x7EA6C4", VA = "0x7EA6C4")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x7EB358", Offset = "0x7EB358", VA = "0x7EB358")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x7EB35C", Offset = "0x7EB35C", VA = "0x7EB35C")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x7EAD78", Offset = "0x7EAD78", VA = "0x7EAD78")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x7E9F60", Offset = "0x7E9F60", VA = "0x7E9F60")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x7EB440", Offset = "0x7EB440", VA = "0x7EB440")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x7EB8E0", Offset = "0x7EB8E0", VA = "0x7EB8E0")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x7EBD84", Offset = "0x7EBD84", VA = "0x7EBD84")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x7EC224", Offset = "0x7EC224", VA = "0x7EC224")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x7EC6D8", Offset = "0x7EC6D8", VA = "0x7EC6D8")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x7ECB78", Offset = "0x7ECB78", VA = "0x7ECB78")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x7ED018", Offset = "0x7ED018", VA = "0x7ED018")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x7ED4C0", Offset = "0x7ED4C0", VA = "0x7ED4C0")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x7ED968", Offset = "0x7ED968", VA = "0x7ED968")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x7EDE14", Offset = "0x7EDE14", VA = "0x7EDE14")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x7EE2BC", Offset = "0x7EE2BC", VA = "0x7EE2BC")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x7EE76C", Offset = "0x7EE76C", VA = "0x7EE76C")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x7EEC0C", Offset = "0x7EEC0C", VA = "0x7EEC0C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x7EF0B8", Offset = "0x7EF0B8", VA = "0x7EF0B8")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x7EF548", Offset = "0x7EF548", VA = "0x7EF548")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x7EF9E4", Offset = "0x7EF9E4", VA = "0x7EF9E4")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x7EFD6C", Offset = "0x7EFD6C", VA = "0x7EFD6C")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x7F00EC", Offset = "0x7F00EC", VA = "0x7F00EC")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x7F059C", Offset = "0x7F059C", VA = "0x7F059C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x7F0A48", Offset = "0x7F0A48", VA = "0x7F0A48")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x7F0EEC", Offset = "0x7F0EEC", VA = "0x7F0EEC")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x7F1278", Offset = "0x7F1278", VA = "0x7F1278")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x7F13DC", Offset = "0x7F13DC", VA = "0x7F13DC")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x7F1758", Offset = "0x7F1758", VA = "0x7F1758")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x7F1BE8", Offset = "0x7F1BE8", VA = "0x7F1BE8")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x7F208C", Offset = "0x7F208C", VA = "0x7F208C")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x7F2524", Offset = "0x7F2524", VA = "0x7F2524")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x7F29C4", Offset = "0x7F29C4", VA = "0x7F29C4")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x7F2E6C", Offset = "0x7F2E6C", VA = "0x7F2E6C")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x7F3310", Offset = "0x7F3310", VA = "0x7F3310")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000136")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x8D4F34", Offset = "0x8D4F34", VA = "0x8D4F34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x8D5008", Offset = "0x8D5008", VA = "0x8D5008")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000137")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000033")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000663")]
		[Address(RVA = "0x8D55C4", Offset = "0x8D55C4", VA = "0x8D55C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x8D56D8", Offset = "0x8D56D8", VA = "0x8D56D8")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000138")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000792")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000665")]
	[Address(RVA = "0x8D56E8", Offset = "0x8D56E8", VA = "0x8D56E8")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x8D5780", Offset = "0x8D5780", VA = "0x8D5780")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x8D588C", Offset = "0x8D588C", VA = "0x8D588C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x8D5890", Offset = "0x8D5890", VA = "0x8D5890")]
	private void Update()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x8D5894", Offset = "0x8D5894", VA = "0x8D5894")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000139")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000264")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x40007A2")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40007A8")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x67427C", Offset = "0x67427C", VA = "0x67427C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x6742B4", Offset = "0x6742B4", VA = "0x6742B4")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x674484", Offset = "0x674484", VA = "0x674484")]
	private void Start()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x674534", Offset = "0x674534", VA = "0x674534")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x674628", Offset = "0x674628", VA = "0x674628")]
	private void Update()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x674F90", Offset = "0x674F90", VA = "0x674F90")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000670")]
	[Address(RVA = "0x674518", Offset = "0x674518", VA = "0x674518")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000671")]
	[Address(RVA = "0x674598", Offset = "0x674598", VA = "0x674598")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000672")]
	[Address(RVA = "0x674CF8", Offset = "0x674CF8", VA = "0x674CF8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000673")]
	[Address(RVA = "0x674D78", Offset = "0x674D78", VA = "0x674D78")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000674")]
	[Address(RVA = "0x674E00", Offset = "0x674E00", VA = "0x674E00")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000675")]
	[Address(RVA = "0x674E88", Offset = "0x674E88", VA = "0x674E88")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000676")]
	[Address(RVA = "0x674F08", Offset = "0x674F08", VA = "0x674F08")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000677")]
	[Address(RVA = "0x675DC8", Offset = "0x675DC8", VA = "0x675DC8")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000678")]
	[Address(RVA = "0x675E70", Offset = "0x675E70", VA = "0x675E70")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x675F18", Offset = "0x675F18", VA = "0x675F18")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x200013A")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x200013B")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x8D5018", Offset = "0x8D5018", VA = "0x8D5018")]
	private void Start()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x8D501C", Offset = "0x8D501C", VA = "0x8D501C")]
	private void Update()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x8D5020", Offset = "0x8D5020", VA = "0x8D5020")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x8D5188", Offset = "0x8D5188", VA = "0x8D5188")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x8D506C", Offset = "0x8D506C", VA = "0x8D506C")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x8D50FC", Offset = "0x8D50FC", VA = "0x8D50FC")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x8D51D4", Offset = "0x8D51D4", VA = "0x8D51D4")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x8D526C", Offset = "0x8D526C", VA = "0x8D526C")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x8D53D4", Offset = "0x8D53D4", VA = "0x8D53D4")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x8D553C", Offset = "0x8D553C", VA = "0x8D553C")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200013C")]
public class ParamData
{
	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[XmlIgnore]
	public int nodamage;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[XmlIgnore]
	public int life;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[XmlIgnore]
	public int smithDie3;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int smithDie1;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int smithDie2;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[XmlIgnore]
	public int currentSetEquip;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string arm1;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string arm2;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string arm3;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string arm4;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int gameoverCount;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int watch;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int samuraiRandom;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[XmlIgnore]
	public int juke;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int SelectableStage;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int nextStage;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int phone;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[XmlIgnore]
	public int isTrueEnding;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int intro;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int showfukidasshi;

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x6DECF4", Offset = "0x6DECF4", VA = "0x6DECF4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x6DEDA0", Offset = "0x6DEDA0", VA = "0x6DEDA0")]
	public ParamData()
	{
	}
}
[Token(Token = "0x200013D")]
public class ParameterManager : MonoBehaviour
{
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string password;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParamData data;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SystemLanguage lang;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x6DEDA8", Offset = "0x6DEDA8", VA = "0x6DEDA8")]
	public static ParamData Get()
	{
		return null;
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x6DEDC8", Offset = "0x6DEDC8", VA = "0x6DEDC8")]
	public static ParameterManager GetManager()
	{
		return null;
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x6DEFE4", Offset = "0x6DEFE4", VA = "0x6DEFE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x6DF060", Offset = "0x6DF060", VA = "0x6DF060")]
	public static void Save()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x6DF0E8", Offset = "0x6DF0E8", VA = "0x6DF0E8")]
	public static void Load()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x6DF07C", Offset = "0x6DF07C", VA = "0x6DF07C")]
	public void DoSave()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x6DEF20", Offset = "0x6DEF20", VA = "0x6DEF20")]
	public void DoLoad()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x6DF104", Offset = "0x6DF104", VA = "0x6DF104")]
	private string Serialize()
	{
		return null;
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x6DF690", Offset = "0x6DF690", VA = "0x6DF690")]
	private void Deserialize(string xml)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x6DF210", Offset = "0x6DF210", VA = "0x6DF210")]
	private string EncryptString(string sourceString)
	{
		return null;
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x6DF450", Offset = "0x6DF450", VA = "0x6DF450")]
	private string DecryptString(string sourceString)
	{
		return null;
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x6DF7B4", Offset = "0x6DF7B4", VA = "0x6DF7B4")]
	private void GenerateKeyFromPassword(string password, int keySize, out byte[] key, int blockSize, out byte[] iv)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x6DF8D0", Offset = "0x6DF8D0", VA = "0x6DF8D0")]
	public ParameterManager()
	{
	}
}
[Token(Token = "0x200013E")]
public class PlayerDamageWork : MonoBehaviour
{
	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerDamageWorkMain dmgMain;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnemyScriptRobot robo;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x6E0350", Offset = "0x6E0350", VA = "0x6E0350")]
	private void Start()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x6E0400", Offset = "0x6E0400", VA = "0x6E0400")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x6E0588", Offset = "0x6E0588", VA = "0x6E0588")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x6E0438", Offset = "0x6E0438", VA = "0x6E0438")]
	public void DamageWork(GameObject other)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x6E0684", Offset = "0x6E0684", VA = "0x6E0684")]
	public PlayerDamageWork()
	{
	}
}
[Token(Token = "0x200013F")]
public class PlayerDamageWorkMain : MonoBehaviour
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject effect;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material effectMat;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool nodamage;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int muteki;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int waitToIntermission;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EyelidScript eyelid;

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x6E068C", Offset = "0x6E068C", VA = "0x6E068C")]
	private void Start()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x6E0748", Offset = "0x6E0748", VA = "0x6E0748")]
	private void playHeartSound()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x6E05C0", Offset = "0x6E05C0", VA = "0x6E05C0")]
	public void Damage()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x6E0810", Offset = "0x6E0810", VA = "0x6E0810")]
	private void Update()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x6E0940", Offset = "0x6E0940", VA = "0x6E0940")]
	public PlayerDamageWorkMain()
	{
	}
}
[Token(Token = "0x2000140")]
public class PlayerMove : MonoBehaviour
{
	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform moveTargetList;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool mov;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int currentWave;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject wayChecker;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool rotating;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string tar;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float speedMove;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float speedRot;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool shootable;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EyelidScript eyelid;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public OVRManager ovrm;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerDamageWorkMain dmw;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MovingDisp moving;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject meter;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float baseDistance;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool movingLast;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material back;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float leastScale;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject goal;

	[Token(Token = "0x17000034")]
	public bool isMoving
	{
		[Token(Token = "0x600069F")]
		[Address(RVA = "0x6E0948", Offset = "0x6E0948", VA = "0x6E0948")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x6E0950", Offset = "0x6E0950", VA = "0x6E0950")]
		set
		{
		}
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x6E098C", Offset = "0x6E098C", VA = "0x6E098C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x6E0A68", Offset = "0x6E0A68", VA = "0x6E0A68")]
	private GameObject FindGoal()
	{
		return null;
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x6E0B74", Offset = "0x6E0B74", VA = "0x6E0B74")]
	private float calcDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x6E0D44", Offset = "0x6E0D44", VA = "0x6E0D44")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x6E12D4", Offset = "0x6E12D4", VA = "0x6E12D4")]
	protected bool LookatTarget(Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x6E1554", Offset = "0x6E1554", VA = "0x6E1554")]
	public PlayerMove()
	{
	}
}
[Token(Token = "0x2000141")]
public class RandomSamurai : MonoBehaviour
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject endingSamurai;

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x6E1764", Offset = "0x6E1764", VA = "0x6E1764")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x6E1768", Offset = "0x6E1768", VA = "0x6E1768")]
	public void SetSamurai()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x6E1864", Offset = "0x6E1864", VA = "0x6E1864")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x6E1868", Offset = "0x6E1868", VA = "0x6E1868")]
	public RandomSamurai()
	{
	}
}
[Token(Token = "0x2000142")]
public class RemoveEffect : MonoBehaviour
{
	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int count;

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x6E26B4", Offset = "0x6E26B4", VA = "0x6E26B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x6E26B8", Offset = "0x6E26B8", VA = "0x6E26B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x6E2770", Offset = "0x6E2770", VA = "0x6E2770")]
	public RemoveEffect()
	{
	}
}
[Token(Token = "0x2000143")]
public class RemoveMovePoints : MonoBehaviour
{
	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x6E2780", Offset = "0x6E2780", VA = "0x6E2780")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x6E2784", Offset = "0x6E2784", VA = "0x6E2784")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x6E2788", Offset = "0x6E2788", VA = "0x6E2788")]
	public RemoveMovePoints()
	{
	}
}
[Token(Token = "0x2000144")]
public class RiftUp : MonoBehaviour
{
	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x6E2790", Offset = "0x6E2790", VA = "0x6E2790")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x6E2834", Offset = "0x6E2834", VA = "0x6E2834")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x6E2978", Offset = "0x6E2978", VA = "0x6E2978")]
	public RiftUp()
	{
	}
}
[Token(Token = "0x2000145")]
public class RobotStopper : MonoBehaviour
{
	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyScriptRobot robot;

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x6E2980", Offset = "0x6E2980", VA = "0x6E2980")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x6E2A50", Offset = "0x6E2A50", VA = "0x6E2A50")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x6E29B8", Offset = "0x6E29B8", VA = "0x6E29B8")]
	private void EnterWork(GameObject obj)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x6E2A88", Offset = "0x6E2A88", VA = "0x6E2A88")]
	public RobotStopper()
	{
	}
}
[Token(Token = "0x2000146")]
public class RopeFix : MonoBehaviour
{
	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pinpos;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject pin;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject door;

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x6E3A38", Offset = "0x6E3A38", VA = "0x6E3A38")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x6E3B2C", Offset = "0x6E3B2C", VA = "0x6E3B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x6E3B84", Offset = "0x6E3B84", VA = "0x6E3B84")]
	public RopeFix()
	{
	}
}
[Token(Token = "0x2000147")]
public class SEP : MonoBehaviour
{
	[Token(Token = "0x2000265")]
	public enum SE
	{

	}

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> sound;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x6E3DE8", Offset = "0x6E3DE8", VA = "0x6E3DE8")]
	public static void Play(SE se, GameObject obj)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x6E3EF4", Offset = "0x6E3EF4", VA = "0x6E3EF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x6E3EF8", Offset = "0x6E3EF8", VA = "0x6E3EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x6E3FA8", Offset = "0x6E3FA8", VA = "0x6E3FA8")]
	public SEP()
	{
	}
}
[Token(Token = "0x2000148")]
public class SamuraiTalkScript : MonoBehaviour
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> jimaku;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int jimakuTimer;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int jimakuPhase;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentJimaku;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool talk;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EyelidScript eye;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool end;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource asSamurai;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource asSmith;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource asCurrent;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<AudioClip> voices;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int jimakuInterval;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem effect;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource effectSound;

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x6E3FB0", Offset = "0x6E3FB0", VA = "0x6E3FB0")]
	public void ShowEffect()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x6E3FEC", Offset = "0x6E3FEC", VA = "0x6E3FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x6E4018", Offset = "0x6E4018", VA = "0x6E4018")]
	private void setJimaku(int num)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x6E4134", Offset = "0x6E4134", VA = "0x6E4134")]
	public void startTalk()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x6E4140", Offset = "0x6E4140", VA = "0x6E4140")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x6E4370", Offset = "0x6E4370", VA = "0x6E4370")]
	public SamuraiTalkScript()
	{
	}
}
[Token(Token = "0x2000149")]
public class Samurai_drink : MonoBehaviour
{
	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int count;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int next;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator anime;

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x6E4380", Offset = "0x6E4380", VA = "0x6E4380")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x6E43F0", Offset = "0x6E43F0", VA = "0x6E43F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x6E4488", Offset = "0x6E4488", VA = "0x6E4488")]
	public Samurai_drink()
	{
	}
}
[Token(Token = "0x200014A")]
public class ScreenShot : MonoBehaviour
{
	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x6E4490", Offset = "0x6E4490", VA = "0x6E4490")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x6E44DC", Offset = "0x6E44DC", VA = "0x6E44DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x6E44E0", Offset = "0x6E44E0", VA = "0x6E44E0")]
	public ScreenShot()
	{
	}
}
[Token(Token = "0x200014B")]
public class ScrollEndroll : MonoBehaviour
{
	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject roll;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public JukeBoxController juke;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject thankyou;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x6E44E8", Offset = "0x6E44E8", VA = "0x6E44E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x6E44EC", Offset = "0x6E44EC", VA = "0x6E44EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x6E469C", Offset = "0x6E469C", VA = "0x6E469C")]
	public ScrollEndroll()
	{
	}
}
[Token(Token = "0x200014C")]
public class SetCenterOfMass : MonoBehaviour
{
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float center;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x6FAB44", Offset = "0x6FAB44", VA = "0x6FAB44")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x6FABE0", Offset = "0x6FABE0", VA = "0x6FABE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x6FABE4", Offset = "0x6FABE4", VA = "0x6FABE4")]
	public SetCenterOfMass()
	{
	}
}
[Token(Token = "0x200014D")]
public class ShowCocktail : MonoBehaviour
{
	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x6FE19C", Offset = "0x6FE19C", VA = "0x6FE19C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x6FE1F8", Offset = "0x6FE1F8", VA = "0x6FE1F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x6FE1FC", Offset = "0x6FE1FC", VA = "0x6FE1FC")]
	public ShowCocktail()
	{
	}
}
[Token(Token = "0x200014E")]
public class ShurikenRotate : MonoBehaviour
{
	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x6FE204", Offset = "0x6FE204", VA = "0x6FE204")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x6FE234", Offset = "0x6FE234", VA = "0x6FE234")]
	public ShurikenRotate()
	{
	}
}
[Token(Token = "0x200014F")]
public class SmithAppear : MonoBehaviour
{
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject jimaku1;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int jimakuTimer;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int jimakuPhase;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip voice1;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject light1;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject light2;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x6FEC50", Offset = "0x6FEC50", VA = "0x6FEC50")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x6FECC8", Offset = "0x6FECC8", VA = "0x6FECC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x6FECCC", Offset = "0x6FECCC", VA = "0x6FECCC")]
	private void Ending1()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x6FEE00", Offset = "0x6FEE00", VA = "0x6FEE00")]
	public SmithAppear()
	{
	}
}
[Token(Token = "0x2000150")]
public class SmithHand : MonoBehaviour
{
	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x6FEE08", Offset = "0x6FEE08", VA = "0x6FEE08")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x6FEE0C", Offset = "0x6FEE0C", VA = "0x6FEE0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x6FEE10", Offset = "0x6FEE10", VA = "0x6FEE10")]
	public SmithHand()
	{
	}
}
[Token(Token = "0x2000151")]
public class Stage3BlockSound : MonoBehaviour
{
	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x701EF8", Offset = "0x701EF8", VA = "0x701EF8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x701F58", Offset = "0x701F58", VA = "0x701F58")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x701F5C", Offset = "0x701F5C", VA = "0x701F5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x701F60", Offset = "0x701F60", VA = "0x701F60")]
	public Stage3BlockSound()
	{
	}
}
[Token(Token = "0x2000152")]
public class StageInfo : MonoBehaviour
{
	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x701F68", Offset = "0x701F68", VA = "0x701F68")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x701F6C", Offset = "0x701F6C", VA = "0x701F6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x701F70", Offset = "0x701F70", VA = "0x701F70")]
	public StageInfo()
	{
	}
}
[Token(Token = "0x2000153")]
public class StageMenu : MenuControl
{
	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> stageList;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform stages;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentIndex;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject center;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject left;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject right;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int move;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TVShows tv;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject lock2;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject lock3;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource boo1;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource boo2;

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x701F78", Offset = "0x701F78", VA = "0x701F78", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x7021A0", Offset = "0x7021A0", VA = "0x7021A0")]
	private void setThreeStages()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x7022AC", Offset = "0x7022AC", VA = "0x7022AC")]
	private void setPosInitToMove()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x702468", Offset = "0x702468", VA = "0x702468", Slot = "9")]
	protected override void StickLeftWork()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x70249C", Offset = "0x70249C", VA = "0x70249C", Slot = "10")]
	protected override void StickRightWork()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x7024D0", Offset = "0x7024D0", VA = "0x7024D0", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x7028D8", Offset = "0x7028D8", VA = "0x7028D8", Slot = "12")]
	protected override void ButtonLeft()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x702BC8", Offset = "0x702BC8", VA = "0x702BC8")]
	public StageMenu()
	{
	}
}
[Token(Token = "0x2000154")]
public class TVShows : MonoBehaviour
{
	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject imageBase;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject image1;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject image2;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject image3;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool showImage;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text text;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource audio;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform currentTalkObjects;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform currentTalkObjects1;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform currentTalkObjects2;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform currentTalkObjects3;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int currentIndex;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool introSaid;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool moveAfterMsg;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public EyelidScript eye;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool moving;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject star2;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject star3;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject endroll;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Font asianFont;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Font russianFont;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public JukeBoxController juke;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x702B34", Offset = "0x702B34", VA = "0x702B34")]
	public void StartTalk()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x702E7C", Offset = "0x702E7C", VA = "0x702E7C")]
	private void StartTalk(TextObject t)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x7030F0", Offset = "0x7030F0", VA = "0x7030F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x7031F4", Offset = "0x7031F4", VA = "0x7031F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x7035F0", Offset = "0x7035F0", VA = "0x7035F0")]
	public TVShows()
	{
	}
}
[Token(Token = "0x2000155")]
public class TextObject : MonoBehaviour
{
	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string textJp;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string textEn;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textCh;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string textKo;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string textRu;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string textIt;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string textDu;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string textSw;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string textSp;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string textDn;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string textGe;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string textTr;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string textFr;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip voice;

	[Token(Token = "0x17000035")]
	public string text
	{
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x702F68", Offset = "0x702F68", VA = "0x702F68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x7076BC", Offset = "0x7076BC", VA = "0x7076BC")]
	public TextObject()
	{
	}
}
[Token(Token = "0x2000156")]
public class TitleDoorOpen : MonoBehaviour
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EyelidScript eye;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool openingDoor;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource door;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool sounded;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool startMove;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoardFrontCheck boardCheck;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public JukeBoxController juke;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x709954", Offset = "0x709954", VA = "0x709954")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x7099B4", Offset = "0x7099B4", VA = "0x7099B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x709B0C", Offset = "0x709B0C", VA = "0x709B0C")]
	public TitleDoorOpen()
	{
	}
}
[Token(Token = "0x2000157")]
public class TitleSelect : MonoBehaviour
{
	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool touching;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x709B14", Offset = "0x709B14", VA = "0x709B14")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x709B20", Offset = "0x709B20", VA = "0x709B20")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x709B28", Offset = "0x709B28", VA = "0x709B28")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x709B2C", Offset = "0x709B2C", VA = "0x709B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x709B30", Offset = "0x709B30", VA = "0x709B30")]
	public TitleSelect()
	{
	}
}
[Token(Token = "0x2000158")]
public class ToEnding : MonoBehaviour
{
	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int late;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ending;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EyelidScript eye;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x709B38", Offset = "0x709B38", VA = "0x709B38")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x709B3C", Offset = "0x709B3C", VA = "0x709B3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x709BC0", Offset = "0x709BC0", VA = "0x709BC0")]
	public ToEnding()
	{
	}
}
[Token(Token = "0x2000159")]
public class ToIntermission : MonoBehaviour
{
	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EyelidScript eye;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int late;

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x709BC8", Offset = "0x709BC8", VA = "0x709BC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x709BCC", Offset = "0x709BCC", VA = "0x709BCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x709C44", Offset = "0x709C44", VA = "0x709C44")]
	public ToIntermission()
	{
	}
}
[Token(Token = "0x200015A")]
public class TraceDoorBoard : MonoBehaviour
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform boardDoor;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool reverse;

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x709C4C", Offset = "0x709C4C", VA = "0x709C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x709C50", Offset = "0x709C50", VA = "0x709C50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x709D00", Offset = "0x709D00", VA = "0x709D00")]
	public TraceDoorBoard()
	{
	}
}
[Token(Token = "0x200015B")]
public class TrueEndingController : MonoBehaviour
{
	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cocktail;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject phone;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject attashcase;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandController handL;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandController handR;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject samurai;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RandomSamurai samuraiRnd;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> jimaku;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<AudioClip> voice;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int jimakuTimer;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int jimakuPhase;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool jimaku4;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource audioSource;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool cheers;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EyelidScript eye;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Animator samuraiAnime;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject mouth;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool cheerReady;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public JukeBoxController jukebox;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject scroll;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int jimakuInterval;

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x709D08", Offset = "0x709D08", VA = "0x709D08")]
	private void SetTalk(int num)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x709E20", Offset = "0x709E20", VA = "0x709E20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x709FF8", Offset = "0x709FF8", VA = "0x709FF8")]
	private void Eye_OpenComplete(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x70A068", Offset = "0x70A068", VA = "0x70A068")]
	private void Eye_CloseComplete(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x70A16C", Offset = "0x70A16C", VA = "0x70A16C")]
	public void DoCheers()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x70A250", Offset = "0x70A250", VA = "0x70A250")]
	private void Update()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x70A40C", Offset = "0x70A40C", VA = "0x70A40C")]
	public TrueEndingController()
	{
	}
}
[Token(Token = "0x200015C")]
public class TutorialControl1 : MonoBehaviour
{
	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text txt;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Font fontEn;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Font fontJp;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int phase;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int countTimer;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int timerInterval;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string[] txtList;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool gripL;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool gripR;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool releaseL;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool releaseR;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool onTutorial;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> phones;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool eqChangeCompleted;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MenuMaster menumaster;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject mainmenu;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TutorialStart tutStart;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string eqBefore;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool toMainMenu;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject menuPlayer;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject battlePlayer;

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x70A5B0", Offset = "0x70A5B0", VA = "0x70A5B0")]
	public void init()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x70A610", Offset = "0x70A610", VA = "0x70A610")]
	private bool isJapanese()
	{
		return default(bool);
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x70A630", Offset = "0x70A630", VA = "0x70A630")]
	private void Start()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x70A674", Offset = "0x70A674", VA = "0x70A674")]
	private void SetTextJp()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x70AE5C", Offset = "0x70AE5C", VA = "0x70AE5C")]
	private void SetTextEn()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x70B110", Offset = "0x70B110", VA = "0x70B110")]
	private void Update()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x70B6A4", Offset = "0x70B6A4", VA = "0x70B6A4")]
	public TutorialControl1()
	{
	}
}
[Token(Token = "0x200015D")]
public class TutorialStart : MonoBehaviour
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject plr;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject phone;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject atashCase;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TutorialControl1 tut1;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 usualPos;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 usualRot;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 tutorialPos;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 tutorialRot;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 usualPhonePos;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 usualPhoneRot;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 tutorialPhonePos;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 tutorialPhoneRot;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 usualCasePos;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 usualCaseRot;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 tutorialCasePos;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 tutorialCaseRot;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public EyelidScript eyelid;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x70B6B4", Offset = "0x70B6B4", VA = "0x70B6B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x70B790", Offset = "0x70B790", VA = "0x70B790")]
	private void Start()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x70B858", Offset = "0x70B858", VA = "0x70B858")]
	private void Eyelid_OpenComplete(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x70B878", Offset = "0x70B878", VA = "0x70B878")]
	private void Eyelid_CloseComplete(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x70B8A8", Offset = "0x70B8A8", VA = "0x70B8A8")]
	public void setTutorialPos()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x70B54C", Offset = "0x70B54C", VA = "0x70B54C")]
	public void PhoneMove()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x70B5F8", Offset = "0x70B5F8", VA = "0x70B5F8")]
	public void PhoneUsual()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x70B90C", Offset = "0x70B90C", VA = "0x70B90C")]
	public void setUsualPos()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x70BA00", Offset = "0x70BA00", VA = "0x70BA00")]
	public TutorialStart()
	{
	}
}
[Token(Token = "0x200015E")]
public class WatchDispControl : MonoBehaviour
{
	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform heart;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text txt;

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xE9570C", Offset = "0xE9570C", VA = "0xE9570C")]
	private void Start()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xE95710", Offset = "0xE95710", VA = "0xE95710")]
	private void Update()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xE9580C", Offset = "0xE9580C", VA = "0xE9580C")]
	public WatchDispControl()
	{
	}
}
[Token(Token = "0x200015F")]
public class WatchInit : MonoBehaviour
{
	[Token(Token = "0x600071E")]
	[Address(RVA = "0xE95814", Offset = "0xE95814", VA = "0xE95814")]
	private void Start()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xE95818", Offset = "0xE95818", VA = "0xE95818")]
	private void Update()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xE9581C", Offset = "0xE9581C", VA = "0xE9581C")]
	public WatchInit()
	{
	}
}
[Token(Token = "0x2000160")]
public class WaveController : MonoBehaviour
{
	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerMove playerMove;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform playerMovePos;

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xE95824", Offset = "0xE95824", VA = "0xE95824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xE95934", Offset = "0xE95934", VA = "0xE95934")]
	private void DeleteEnemyBullets()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xE95C0C", Offset = "0xE95C0C", VA = "0xE95C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xE95E60", Offset = "0xE95E60", VA = "0xE95E60")]
	public WaveController()
	{
	}
}
[Token(Token = "0x2000161")]
public class WeaponIconEnable : MonoBehaviour
{
	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gauge;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gaugeMax;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float currentGauge;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useable;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material eMat1;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material eMat2;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material dMat1;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material dMat2;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer mesh;

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xE95FE4", Offset = "0xE95FE4", VA = "0xE95FE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xE96074", Offset = "0xE96074", VA = "0xE96074")]
	public void setMat(bool en)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xE96170", Offset = "0xE96170", VA = "0xE96170")]
	public void PickupItem()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xE96260", Offset = "0xE96260", VA = "0xE96260")]
	public WeaponIconEnable()
	{
	}
}
[Token(Token = "0x2000162")]
public class Turn_Move : MonoBehaviour
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TurnX;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int TurnY;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int TurnZ;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int MoveX;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int MoveY;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int MoveZ;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool World;

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x70A41C", Offset = "0x70A41C", VA = "0x70A41C")]
	private void Start()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x70A420", Offset = "0x70A420", VA = "0x70A420")]
	private void Update()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x70A5A8", Offset = "0x70A5A8", VA = "0x70A5A8")]
	public Turn_Move()
	{
	}
}
[Token(Token = "0x2000163")]
public class RotateRandom : MonoBehaviour
{
	[Token(Token = "0x600072C")]
	[Address(RVA = "0x6E3C84", Offset = "0x6E3C84", VA = "0x6E3C84")]
	private void Start()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x6E3DDC", Offset = "0x6E3DDC", VA = "0x6E3DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x6E3DE0", Offset = "0x6E3DE0", VA = "0x6E3DE0")]
	public RotateRandom()
	{
	}
}
[Token(Token = "0x2000164")]
public class delta_float : MonoBehaviour
{
	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 pos;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float theta;

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xE96F80", Offset = "0xE96F80", VA = "0xE96F80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xE96FBC", Offset = "0xE96FBC", VA = "0xE96FBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xE970D0", Offset = "0xE970D0", VA = "0xE970D0")]
	public delta_float()
	{
	}
}
[Token(Token = "0x2000165")]
public class ArmBase : MonoBehaviour
{
	[Token(Token = "0x2000266")]
	public enum LR
	{
		[Token(Token = "0x4000D9B")]
		RIGHT,
		[Token(Token = "0x4000D9C")]
		LEFT
	}

	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC0C0", Offset = "0x4DC0C0")]
	private sealed class <Vivration>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArmBase <>4__this;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private OVRInput.Controller <controller>5__2;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x83E128", Offset = "0x83E128", VA = "0x83E128", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x83E190", Offset = "0x83E190", VA = "0x83E190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x83DCB4", Offset = "0x83DCB4", VA = "0x83DCB4")]
		[DebuggerHidden]
		public <Vivration>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x83DFE8", Offset = "0x83DFE8", VA = "0x83DFE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x83DFEC", Offset = "0x83DFEC", VA = "0x83DFEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x83E130", Offset = "0x83E130", VA = "0x83E130", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LR lr;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int power;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> hands;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ThrowObject;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject sode;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject watch;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject watchBody;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool enableTwoHand;

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x83D980", Offset = "0x83D980", VA = "0x83D980")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x83D98C", Offset = "0x83D98C", VA = "0x83D98C", Slot = "4")]
	public virtual void changeWatch()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x83DBF8", Offset = "0x83DBF8", VA = "0x83DBF8", Slot = "5")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x83DC04", Offset = "0x83DC04", VA = "0x83DC04", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x83DC08", Offset = "0x83DC08", VA = "0x83DC08")]
	public void Vivrate(float time)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x83DC34", Offset = "0x83DC34", VA = "0x83DC34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E2260", Offset = "0x4E2260")]
	protected IEnumerator Vivration(float time)
	{
		return null;
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x83DCE0", Offset = "0x83DCE0", VA = "0x83DCE0", Slot = "7")]
	public virtual void Drop()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x83DFE0", Offset = "0x83DFE0", VA = "0x83DFE0")]
	public ArmBase()
	{
	}
}
[Token(Token = "0x2000166")]
public class GatlingGrip : MonoBehaviour
{
	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShootGatling gatling;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArmBase otherhand;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ArmBase.LR lr;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x6EF380", Offset = "0x6EF380", VA = "0x6EF380")]
	private void Update()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x6EF384", Offset = "0x6EF384", VA = "0x6EF384")]
	public GatlingGrip()
	{
	}
}
[Token(Token = "0x2000167")]
public class KnifeScript : MeeleeBase
{
	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool isUp;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rot;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool moving;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool debug_switch;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int phase;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject open;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject open2;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject up;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject down;

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x6F47A8", Offset = "0x6F47A8", VA = "0x6F47A8", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x6F4884", Offset = "0x6F4884", VA = "0x6F4884")]
	private void handSet(GameObject hand)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x6F4A30", Offset = "0x6F4A30", VA = "0x6F4A30", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x6F4D1C", Offset = "0x6F4D1C", VA = "0x6F4D1C")]
	public KnifeScript()
	{
	}
}
[Token(Token = "0x2000168")]
public class MeeleeBase : ArmBase
{
	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool attacking;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject effect;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource audioSource;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<AudioClip> slash;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool soundPlayed;

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x7DEB18", Offset = "0x7DEB18", VA = "0x7DEB18", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x7DEB98", Offset = "0x7DEB98", VA = "0x7DEB98", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x7DED68", Offset = "0x7DED68", VA = "0x7DED68")]
	public MeeleeBase()
	{
	}
}
[Token(Token = "0x2000169")]
public class ShootBase : ArmBase
{
	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem effect;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform muzzle;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject bullet;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool oneShot;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int interval;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animation anime;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float speed;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool rush;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int bulCount;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int bulMax;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform triggerFinger;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Vector3> triggerFingerRot;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform trigger;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<Vector3> triggerRot;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected bool onTrigger;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected int intervalCount;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool emurateKeyDown;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject otherhandBase;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float length;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public PlayerMove pm;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource audioClick;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource audioShot;

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x6FABFC", Offset = "0x6FABFC", VA = "0x6FABFC", Slot = "8")]
	public virtual void Shoot()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x6FAC14", Offset = "0x6FAC14", VA = "0x6FAC14", Slot = "9")]
	public virtual void ClickSound()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x6FACCC", Offset = "0x6FACCC", VA = "0x6FACCC", Slot = "10")]
	public virtual void ShootSound()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x6FAD84", Offset = "0x6FAD84", VA = "0x6FAD84", Slot = "11")]
	public virtual void Shoot(GameObject bul, int pow, float sp)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x6FB020", Offset = "0x6FB020", VA = "0x6FB020", Slot = "12")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x6FB024", Offset = "0x6FB024", VA = "0x6FB024", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x6FB054", Offset = "0x6FB054", VA = "0x6FB054")]
	public RaycastHit? checkHit()
	{
		return null;
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x6FB200", Offset = "0x6FB200", VA = "0x6FB200", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x6FB4F0", Offset = "0x6FB4F0", VA = "0x6FB4F0")]
	public ShootBase()
	{
	}
}
[Token(Token = "0x200016A")]
public class ShootDE : ShootHandGun
{
	[Token(Token = "0x2000268")]
	private enum SLIDE_STATUS
	{
		[Token(Token = "0x4000DA3")]
		STAY,
		[Token(Token = "0x4000DA4")]
		BACK,
		[Token(Token = "0x4000DA5")]
		FOWARD
	}

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform cart;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private SLIDE_STATUS slideStatus;

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x6FB500", Offset = "0x6FB500", VA = "0x6FB500", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x6FB5F8", Offset = "0x6FB5F8", VA = "0x6FB5F8", Slot = "8")]
	public override void Shoot()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x6FB640", Offset = "0x6FB640", VA = "0x6FB640", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x6FBB20", Offset = "0x6FBB20", VA = "0x6FBB20")]
	public ShootDE()
	{
	}
}
[Token(Token = "0x200016B")]
public class ShootGatling : ShootBase
{
	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform otherhand;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool gripped;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject dispHand;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject angle;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject otherSode;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject otherWatch;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject info;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Transform barrel;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioSource audioSource;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioClip startSound;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioClip rollSound;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AudioClip endSound;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public AudioClip clickSound;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AudioSource audioSource2;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool rollEnough;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x6FBB40", Offset = "0x6FBB40", VA = "0x6FBB40", Slot = "4")]
	public override void changeWatch()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x6FBDB8", Offset = "0x6FBDB8", VA = "0x6FBDB8", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x6FBE08", Offset = "0x6FBE08", VA = "0x6FBE08", Slot = "8")]
	public override void Shoot()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x6FBF6C", Offset = "0x6FBF6C", VA = "0x6FBF6C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x6FC468", Offset = "0x6FC468", VA = "0x6FC468")]
	private void rotateDown()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x6FC760", Offset = "0x6FC760", VA = "0x6FC760", Slot = "7")]
	public override void Drop()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x6FC808", Offset = "0x6FC808", VA = "0x6FC808")]
	public ShootGatling()
	{
	}
}
[Token(Token = "0x200016C")]
public class ShootHandGun : ShootBase
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform slide;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Vector3> slidePos;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject shell;

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x6FB548", Offset = "0x6FB548", VA = "0x6FB548", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x6FB980", Offset = "0x6FB980", VA = "0x6FB980", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x6FBB30", Offset = "0x6FBB30", VA = "0x6FBB30")]
	public ShootHandGun()
	{
	}
}
[Token(Token = "0x200016D")]
public class ShootM357 : ShootBase
{
	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform hammer;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int hammerState;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool hammerAuto;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	public bool hammerPulled;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEE")]
	public bool touching;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform Cylinder;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject cart;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<GameObject> cartPos;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool cartReleased;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float hrot;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x6FC818", Offset = "0x6FC818", VA = "0x6FC818", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x6FC9B8", Offset = "0x6FC9B8", VA = "0x6FC9B8", Slot = "8")]
	public override void Shoot()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x6FCA58", Offset = "0x6FCA58", VA = "0x6FCA58", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x6FD0DC", Offset = "0x6FD0DC", VA = "0x6FD0DC")]
	public ShootM357()
	{
	}
}
[Token(Token = "0x200016E")]
public class ShootPumpAction : ShootBase
{
	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool Reloaded;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject otherhand;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform pomp;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected bool foward;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<float> zpos;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject otherSode;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject otherWatch;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioSource slide;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioSource slideEnd;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x6FD0EC", Offset = "0x6FD0EC", VA = "0x6FD0EC", Slot = "4")]
	public override void changeWatch()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x6FD364", Offset = "0x6FD364", VA = "0x6FD364", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x6FD470", Offset = "0x6FD470", VA = "0x6FD470", Slot = "8")]
	public override void Shoot()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x6FD4BC", Offset = "0x6FD4BC", VA = "0x6FD4BC", Slot = "7")]
	public override void Drop()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x6FD4F4", Offset = "0x6FD4F4", VA = "0x6FD4F4", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x6FD830", Offset = "0x6FD830", VA = "0x6FD830")]
	public ShootPumpAction()
	{
	}
}
[Token(Token = "0x200016F")]
public class ShootShotGun : ShootPumpAction
{
	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public int bulletCount;

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x6FD840", Offset = "0x6FD840", VA = "0x6FD840", Slot = "8")]
	public override void Shoot()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x6FD950", Offset = "0x6FD950", VA = "0x6FD950")]
	private void ShootWork()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x6FDB5C", Offset = "0x6FDB5C", VA = "0x6FDB5C")]
	public ShootShotGun()
	{
	}
}
[Token(Token = "0x2000170")]
public class ShootWinchester : ShootBase
{
	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool Reloaded;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public bool Reloading;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform spin;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform body;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform thumb;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<Vector3> thumbRot;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int phase;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float currentRotBody;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float currentRotReva;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject bullet3;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject info;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioSource audioRoll;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioSource audioWeak;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AudioSource audioStrong;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float yAcc;

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x6FDB74", Offset = "0x6FDB74", VA = "0x6FDB74", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x6FDCB4", Offset = "0x6FDCB4", VA = "0x6FDCB4", Slot = "8")]
	public override void Shoot()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x6FDD34", Offset = "0x6FDD34", VA = "0x6FDD34")]
	public void ShootSoundRifle(AudioSource aud)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x6FDDE0", Offset = "0x6FDDE0", VA = "0x6FDDE0", Slot = "13")]
	public virtual void ShootRed()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x6FDDF4", Offset = "0x6FDDF4", VA = "0x6FDDF4", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x6FE18C", Offset = "0x6FE18C", VA = "0x6FE18C")]
	public ShootWinchester()
	{
	}
}
[Token(Token = "0x2000171")]
public class moonlight : MonoBehaviour
{
	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int count;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light lit;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EyelidScript eye;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xE970D8", Offset = "0xE970D8", VA = "0xE970D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xE97148", Offset = "0xE97148", VA = "0xE97148")]
	private void Update()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xE97210", Offset = "0xE97210", VA = "0xE97210")]
	public moonlight()
	{
	}
}
[Token(Token = "0x2000172")]
public class CameraController : MonoBehaviour
{
	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float offsetX;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float offsetZ;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumDistance;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float playerVelocity;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float movementX;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float movementZ;

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x845C48", Offset = "0x845C48", VA = "0x845C48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x845E10", Offset = "0x845E10", VA = "0x845E10")]
	public CameraController()
	{
	}
}
[Token(Token = "0x2000173")]
public class HiderInTime : MonoBehaviour
{
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC0D0", Offset = "0x4DC0D0")]
	private sealed class <ExecuteAfterTime>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HiderInTime <>4__this;

		[Token(Token = "0x17000113")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x6F2B08", Offset = "0x6F2B08", VA = "0x6F2B08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x6F2B70", Offset = "0x6F2B70", VA = "0x6F2B70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x6F28E8", Offset = "0x6F28E8", VA = "0x6F28E8")]
		[DebuggerHidden]
		public <ExecuteAfterTime>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x6F2A18", Offset = "0x6F2A18", VA = "0x6F2A18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x6F2A1C", Offset = "0x6F2A1C", VA = "0x6F2A1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x6F2B10", Offset = "0x6F2B10", VA = "0x6F2B10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x6F2868", Offset = "0x6F2868", VA = "0x6F2868")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E22C4", Offset = "0x4E22C4")]
	private IEnumerator ExecuteAfterTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x6F2914", Offset = "0x6F2914", VA = "0x6F2914")]
	public void hide(float t)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x6F29AC", Offset = "0x6F29AC", VA = "0x6F29AC")]
	public void restore()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x6F2A10", Offset = "0x6F2A10", VA = "0x6F2A10")]
	public HiderInTime()
	{
	}
}
[Token(Token = "0x2000174")]
public class HidingMachineBehaviour : StateMachineBehaviour
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float t;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string meshName;

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x6F2B78", Offset = "0x6F2B78", VA = "0x6F2B78", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x6F2C30", Offset = "0x6F2C30", VA = "0x6F2C30", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x6F2CCC", Offset = "0x6F2CCC", VA = "0x6F2CCC")]
	public HidingMachineBehaviour()
	{
	}
}
[Token(Token = "0x2000175")]
public class ScrollSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject withWeapon;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject noWeapon;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator anim;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x6FAA48", Offset = "0x6FAA48", VA = "0x6FAA48")]
	private void Start()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x6FAA4C", Offset = "0x6FAA4C", VA = "0x6FAA4C")]
	private void Update()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x6FAA50", Offset = "0x6FAA50", VA = "0x6FAA50")]
	public void OnSwitched(bool value)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x6FAB3C", Offset = "0x6FAB3C", VA = "0x6FAB3C")]
	public ScrollSwitcher()
	{
	}
}
[Token(Token = "0x2000176")]
public class UI_no_weapon : MonoBehaviour
{
	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x70BCD8", Offset = "0x70BCD8", VA = "0x70BCD8")]
	public void Idle01OnClick()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x70BD78", Offset = "0x70BD78", VA = "0x70BD78")]
	public void Idle02OnClick()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x70BE18", Offset = "0x70BE18", VA = "0x70BE18")]
	public void HelloFriendlyOnClick()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x70BE98", Offset = "0x70BE98", VA = "0x70BE98")]
	public void HelloNeutralOnClick()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x70BF14", Offset = "0x70BF14", VA = "0x70BF14")]
	public void HelloNegativeOnClick()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x70BF90", Offset = "0x70BF90", VA = "0x70BF90")]
	public void TalkFriendlyOnClick()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x70C010", Offset = "0x70C010", VA = "0x70C010")]
	public void TalkNeutralOnClick()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x70C08C", Offset = "0x70C08C", VA = "0x70C08C")]
	public void TalkNegativeOnClick()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x70C10C", Offset = "0x70C10C", VA = "0x70C10C")]
	public void TalkAgressiveOnClick()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x70C188", Offset = "0x70C188", VA = "0x70C188")]
	public void ListenFriendlyOnClick()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x70C208", Offset = "0x70C208", VA = "0x70C208")]
	public void ListenNeutralOnClick()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x70C284", Offset = "0x70C284", VA = "0x70C284")]
	public void ListenNegativeOnClick()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x70C300", Offset = "0x70C300", VA = "0x70C300")]
	public void PickUpFloorOnClick()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x70C380", Offset = "0x70C380", VA = "0x70C380")]
	public void PickUpStandOnClick()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x70C3FC", Offset = "0x70C3FC", VA = "0x70C3FC")]
	public void CraftOnClick()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x70C478", Offset = "0x70C478", VA = "0x70C478")]
	public void Hit01OnClick()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x70C4F8", Offset = "0x70C4F8", VA = "0x70C4F8")]
	public void Hit02OnClick()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x70C574", Offset = "0x70C574", VA = "0x70C574")]
	public void Hit03OnClick()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x70C5F0", Offset = "0x70C5F0", VA = "0x70C5F0")]
	public void Death01OnClick()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x70C670", Offset = "0x70C670", VA = "0x70C670")]
	public void Death02OnClick()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x70C6EC", Offset = "0x70C6EC", VA = "0x70C6EC")]
	public void Death03OnClick()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x70C768", Offset = "0x70C768", VA = "0x70C768")]
	public UI_no_weapon()
	{
	}
}
[Token(Token = "0x2000177")]
public class UI_sword : MonoBehaviour
{
	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x70C770", Offset = "0x70C770", VA = "0x70C770")]
	public void SwordIdleOnClick()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x70C7EC", Offset = "0x70C7EC", VA = "0x70C7EC")]
	public void SwordStrike01OnClick()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x70C868", Offset = "0x70C868", VA = "0x70C868")]
	public void SwordStrike02OnClick()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x70C8E4", Offset = "0x70C8E4", VA = "0x70C8E4")]
	public void SwordStrike03OnClick()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x70C960", Offset = "0x70C960", VA = "0x70C960")]
	public void SwordSpinningSlashOnClick()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x70C9DC", Offset = "0x70C9DC", VA = "0x70C9DC")]
	public void SwordStrikeDownOnClick()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x70CA58", Offset = "0x70CA58", VA = "0x70CA58")]
	public void SwordStrikeForwardOnClick()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x70CAD4", Offset = "0x70CAD4", VA = "0x70CAD4")]
	public void SwordGroundStrikeOnClick()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x70CB50", Offset = "0x70CB50", VA = "0x70CB50")]
	public void SwordHit01OnClick()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x70CBCC", Offset = "0x70CBCC", VA = "0x70CBCC")]
	public void SwordHit02OnClick()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x70CC48", Offset = "0x70CC48", VA = "0x70CC48")]
	public void SwordDeathOnClick()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x70CCA4", Offset = "0x70CCA4", VA = "0x70CCA4")]
	public UI_sword()
	{
	}
}
[Token(Token = "0x2000178")]
public class WeaponHide : MonoBehaviour
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private new string tag;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool turned;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SkinnedMeshRenderer renderer;

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xE95E68", Offset = "0xE95E68", VA = "0xE95E68")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xE95EC0", Offset = "0xE95EC0", VA = "0xE95EC0")]
	public bool isPlayingAnim(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xE95F34", Offset = "0xE95F34", VA = "0xE95F34")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xE95FD4", Offset = "0xE95FD4", VA = "0xE95FD4")]
	public WeaponHide()
	{
	}
}
[Token(Token = "0x2000179")]
public class WorldInteraction : MonoBehaviour
{
	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationClip clip;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool running;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool walkBackward;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool swordEquip;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool weaponHide;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float swordWalking;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3? touchPosition;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xE96268", Offset = "0xE96268", VA = "0xE96268")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xE962C0", Offset = "0xE962C0", VA = "0xE962C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xE964B8", Offset = "0xE964B8", VA = "0xE964B8")]
	private void HandleInteraction()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xE96600", Offset = "0xE96600", VA = "0xE96600")]
	private bool GetInteraction()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xE96860", Offset = "0xE96860", VA = "0xE96860")]
	public void OnRunToggled(bool run)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xE9686C", Offset = "0xE9686C", VA = "0xE9686C")]
	public void OnWalkbackwardToggled(bool walkback)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xE96878", Offset = "0xE96878", VA = "0xE96878")]
	public WorldInteraction()
	{
	}
}
[Token(Token = "0x200017A")]
public class samurai_billiyard : MonoBehaviour
{
	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anime;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int wait;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int next;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string state;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float speed;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public samurai_billiyard_Lead lead;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leadBase;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public samurai_billiyard_target center;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public samurai_billiyard_target temp;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public JukeBoxController juke;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject otherQue;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject otherQue2;

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xE98C78", Offset = "0xE98C78", VA = "0xE98C78")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xE98D14", Offset = "0xE98D14", VA = "0xE98D14")]
	public void Sound()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xE98D94", Offset = "0xE98D94", VA = "0xE98D94")]
	public void Look(Transform tgt)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xE98E14", Offset = "0xE98E14", VA = "0xE98E14")]
	public void resetState()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xE98E78", Offset = "0xE98E78", VA = "0xE98E78")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xE99308", Offset = "0xE99308", VA = "0xE99308")]
	public samurai_billiyard()
	{
	}
}
[Token(Token = "0x200017B")]
public class samurai_billiyard_Lead : MonoBehaviour
{
	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public samurai_billiyard_target targetPos;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool onLook;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float speed;

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xE9931C", Offset = "0xE9931C", VA = "0xE9931C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xE99320", Offset = "0xE99320", VA = "0xE99320")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xE99544", Offset = "0xE99544", VA = "0xE99544")]
	public samurai_billiyard_Lead()
	{
	}
}
[Token(Token = "0x200017C")]
public class samurai_billiyard_target : MonoBehaviour
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public samurai_billiyard_target nextTarget;

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xE99554", Offset = "0xE99554", VA = "0xE99554")]
	public samurai_billiyard_target()
	{
	}
}
[Token(Token = "0x200017D")]
public class samurai_game : MonoBehaviour
{
	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClip> sounds;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator anime;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int wait;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int next;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource aud;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public JukeBoxController juke;

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xE9955C", Offset = "0xE9955C", VA = "0xE9955C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xE995D8", Offset = "0xE995D8", VA = "0xE995D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xE996F8", Offset = "0xE996F8", VA = "0xE996F8")]
	public samurai_game()
	{
	}
}
[Token(Token = "0x200017E")]
public class traceBodyHit : MonoBehaviour
{
	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform head;

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xE99A08", Offset = "0xE99A08", VA = "0xE99A08")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xE99A0C", Offset = "0xE99A0C", VA = "0xE99A0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xE99A64", Offset = "0xE99A64", VA = "0xE99A64")]
	public traceBodyHit()
	{
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200017F")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000036")]
		public bool Highlight
		{
			[Token(Token = "0x60007BA")]
			[Address(RVA = "0x663EDC", Offset = "0x663EDC", VA = "0x663EDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0x663EE4", Offset = "0x663EE4", VA = "0x663EE4")]
			set
			{
			}
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x663EF0", Offset = "0x663EF0", VA = "0x663EF0")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x6640BC", Offset = "0x6640BC", VA = "0x6640BC", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x6640E4", Offset = "0x6640E4", VA = "0x6640E4", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x66410C", Offset = "0x66410C", VA = "0x66410C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x663FBC", Offset = "0x663FBC", VA = "0x663FBC")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x664360", Offset = "0x664360", VA = "0x664360")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000037")]
		public bool InRange
		{
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0x664AC8", Offset = "0x664AC8", VA = "0x664AC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007C4")]
			[Address(RVA = "0x664AD0", Offset = "0x664AD0", VA = "0x664AD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public bool Targeted
		{
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0x664C58", Offset = "0x664C58", VA = "0x664C58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007C6")]
			[Address(RVA = "0x664C60", Offset = "0x664C60", VA = "0x664C60")]
			set
			{
			}
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x664C6C", Offset = "0x664C6C", VA = "0x664C6C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x664ADC", Offset = "0x664ADC", VA = "0x664ADC")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x664E38", Offset = "0x664E38", VA = "0x664E38")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x664E7C", Offset = "0x664E7C", VA = "0x664E7C")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x664ED8", Offset = "0x664ED8", VA = "0x664ED8")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DBC74", Offset = "0x4DBC74")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000039")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0x664EE0", Offset = "0x664EE0", VA = "0x664EE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0x664EE8", Offset = "0x664EE8", VA = "0x664EE8")]
			set
			{
			}
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x664F04", Offset = "0x664F04", VA = "0x664F04", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x665090", Offset = "0x665090", VA = "0x665090", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x665A24", Offset = "0x665A24", VA = "0x665A24", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x665FE0", Offset = "0x665FE0", VA = "0x665FE0", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x6663C0", Offset = "0x6663C0", VA = "0x6663C0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x665358", Offset = "0x665358", VA = "0x665358")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x66649C", Offset = "0x66649C", VA = "0x66649C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x6668D4", Offset = "0x6668D4", VA = "0x6668D4", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x6668EC", Offset = "0x6668EC", VA = "0x6668EC", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x6668F4", Offset = "0x6668F4", VA = "0x6668F4")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x668334", Offset = "0x668334", VA = "0x668334")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x6683E4", Offset = "0x6683E4", VA = "0x6683E4")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x668490", Offset = "0x668490", VA = "0x668490")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x200026A")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000DAB")]
			Disabled,
			[Token(Token = "0x4000DAC")]
			Enabled,
			[Token(Token = "0x4000DAD")]
			Targeted
		}

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x668498", Offset = "0x668498", VA = "0x668498")]
		private void Start()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x664D9C", Offset = "0x664D9C", VA = "0x664D9C")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x668500", Offset = "0x668500", VA = "0x668500")]
		private void Update()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x668548", Offset = "0x668548", VA = "0x668548")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x66D38C", Offset = "0x66D38C", VA = "0x66D38C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x66D458", Offset = "0x66D458", VA = "0x66D458")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x66D464", Offset = "0x66D464", VA = "0x66D464")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x66D470", Offset = "0x66D470", VA = "0x66D470")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x6628F0", Offset = "0x6628F0", VA = "0x6628F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x662948", Offset = "0x662948", VA = "0x662948")]
		private void Update()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x662BEC", Offset = "0x662BEC", VA = "0x662BEC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x662CDC", Offset = "0x662CDC", VA = "0x662CDC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x66294C", Offset = "0x66294C", VA = "0x66294C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x662DCC", Offset = "0x662DCC", VA = "0x662DCC")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200026B")]
		public enum ContactTest
		{
			[Token(Token = "0x4000DAF")]
			PerpenTest,
			[Token(Token = "0x4000DB0")]
			BackwardsPress
		}

		[Token(Token = "0x4000955")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000956")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700003A")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x662E64", Offset = "0x662E64", VA = "0x662E64", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700003B")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0x662E6C", Offset = "0x662E6C", VA = "0x662E6C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x662E78", Offset = "0x662E78", VA = "0x662E78", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x662FC8", Offset = "0x662FC8", VA = "0x662FC8")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x6631CC", Offset = "0x6631CC", VA = "0x6631CC")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x66332C", Offset = "0x66332C", VA = "0x66332C")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x66348C", Offset = "0x66348C", VA = "0x66348C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x663950", Offset = "0x663950", VA = "0x663950")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x663ADC", Offset = "0x663ADC", VA = "0x663ADC")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x663BD0", Offset = "0x663BD0", VA = "0x663BD0")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x663CFC", Offset = "0x663CFC", VA = "0x663CFC")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE09C", Offset = "0x4DE09C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE0AC", Offset = "0x4DE0AC")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700003C")]
		public Collider Collider
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0x663DE8", Offset = "0x663DE8", VA = "0x663DE8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2328", Offset = "0x4E2328")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007F5")]
			[Address(RVA = "0x663DF0", Offset = "0x663DF0", VA = "0x663DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2338", Offset = "0x4E2338")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x663DF8", Offset = "0x663DF8", VA = "0x663DF8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2348", Offset = "0x4E2348")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0x663E00", Offset = "0x663E00", VA = "0x663E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2358", Offset = "0x4E2358")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0x663E08", Offset = "0x663E08", VA = "0x663E08", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x663E58", Offset = "0x663E58", VA = "0x663E58")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x663ED4", Offset = "0x663ED4", VA = "0x663ED4")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700003F")]
		Collider Collider
		{
			[Token(Token = "0x60007FB")]
			get;
		}

		[Token(Token = "0x17000040")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60007FC")]
			get;
		}

		[Token(Token = "0x17000041")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60007FD")]
			get;
		}
	}
	[Token(Token = "0x2000189")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x663128", Offset = "0x663128", VA = "0x663128")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200018A")]
	public enum InteractionType
	{
		[Token(Token = "0x400096A")]
		Enter,
		[Token(Token = "0x400096B")]
		Stay,
		[Token(Token = "0x400096C")]
		Exit
	}
	[Token(Token = "0x200018B")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200026C")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000DB2")]
			Mesh,
			[Token(Token = "0x4000DB3")]
			Skeleton,
			[Token(Token = "0x4000DB4")]
			Both
		}

		[Token(Token = "0x200026D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC0E0", Offset = "0x4DC0E0")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000115")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CE3")]
				[Address(RVA = "0x66943C", Offset = "0x66943C", VA = "0x66943C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000116")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CE5")]
				[Address(RVA = "0x6694A4", Offset = "0x6694A4", VA = "0x6694A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x668F30", Offset = "0x668F30", VA = "0x668F30")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x66921C", Offset = "0x66921C", VA = "0x66921C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x669220", Offset = "0x669220", VA = "0x669220", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x669444", Offset = "0x669444", VA = "0x669444", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400096D")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE0DC", Offset = "0x4DE0DC")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000042")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60007FF")]
			[Address(RVA = "0x667434", Offset = "0x667434", VA = "0x667434")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000800")]
			[Address(RVA = "0x668550", Offset = "0x668550", VA = "0x668550")]
			private set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000801")]
			[Address(RVA = "0x667FB8", Offset = "0x667FB8", VA = "0x667FB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000802")]
			[Address(RVA = "0x6685B8", Offset = "0x6685B8", VA = "0x6685B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000044")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000803")]
			[Address(RVA = "0x668620", Offset = "0x668620", VA = "0x668620")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000804")]
			[Address(RVA = "0x668658", Offset = "0x668658", VA = "0x668658")]
			private set
			{
			}
		}

		[Token(Token = "0x17000045")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000805")]
			[Address(RVA = "0x6686C0", Offset = "0x6686C0", VA = "0x6686C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000806")]
			[Address(RVA = "0x6686F8", Offset = "0x6686F8", VA = "0x6686F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0x668760", Offset = "0x668760", VA = "0x668760")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000808")]
			[Address(RVA = "0x668798", Offset = "0x668798", VA = "0x668798")]
			private set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0x667400", Offset = "0x667400", VA = "0x667400")]
			get
			{
				return null;
			}
			[Token(Token = "0x600080A")]
			[Address(RVA = "0x668800", Offset = "0x668800", VA = "0x668800")]
			private set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0x667F84", Offset = "0x667F84", VA = "0x667F84")]
			get
			{
				return null;
			}
			[Token(Token = "0x600080C")]
			[Address(RVA = "0x668864", Offset = "0x668864", VA = "0x668864")]
			private set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600080D")]
			[Address(RVA = "0x6688C8", Offset = "0x6688C8", VA = "0x6688C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600080E")]
			[Address(RVA = "0x6688FC", Offset = "0x6688FC", VA = "0x6688FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600080F")]
			[Address(RVA = "0x668960", Offset = "0x668960", VA = "0x668960")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000810")]
			[Address(RVA = "0x668994", Offset = "0x668994", VA = "0x668994")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000811")]
			[Address(RVA = "0x6689F8", Offset = "0x6689F8", VA = "0x6689F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000812")]
			[Address(RVA = "0x668A2C", Offset = "0x668A2C", VA = "0x668A2C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000813")]
			[Address(RVA = "0x668A90", Offset = "0x668A90", VA = "0x668A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2368", Offset = "0x4E2368")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000814")]
			[Address(RVA = "0x668AE0", Offset = "0x668AE0", VA = "0x668AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2378", Offset = "0x4E2378")]
			private set
			{
			}
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x668B34", Offset = "0x668B34", VA = "0x668B34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x668EA8", Offset = "0x668EA8", VA = "0x668EA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x668E38", Offset = "0x668E38", VA = "0x668E38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E2388", Offset = "0x4E2388")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x66491C", Offset = "0x66491C", VA = "0x66491C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x668F5C", Offset = "0x668F5C", VA = "0x668F5C")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x667FF0", Offset = "0x667FF0", VA = "0x667FF0")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x667270", Offset = "0x667270", VA = "0x667270")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x66913C", Offset = "0x66913C", VA = "0x66913C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200026E")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x669BF4", Offset = "0x669BF4", VA = "0x669BF4")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700004D")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600081D")]
			[Address(RVA = "0x6694AC", Offset = "0x6694AC", VA = "0x6694AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x6694B4", Offset = "0x6694B4", VA = "0x6694B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600081F")]
			[Address(RVA = "0x6694BC", Offset = "0x6694BC", VA = "0x6694BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000820")]
			[Address(RVA = "0x6694C4", Offset = "0x6694C4", VA = "0x6694C4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0x6694CC", Offset = "0x6694CC", VA = "0x6694CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E23EC", Offset = "0x4E23EC")]
			add
			{
			}
			[Token(Token = "0x6000822")]
			[Address(RVA = "0x669570", Offset = "0x669570", VA = "0x669570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E23FC", Offset = "0x4E23FC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000824")]
			[Address(RVA = "0x669688", Offset = "0x669688", VA = "0x669688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E240C", Offset = "0x4E240C")]
			add
			{
			}
			[Token(Token = "0x6000825")]
			[Address(RVA = "0x66972C", Offset = "0x66972C", VA = "0x66972C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E241C", Offset = "0x4E241C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000827")]
			[Address(RVA = "0x669844", Offset = "0x669844", VA = "0x669844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E242C", Offset = "0x4E242C")]
			add
			{
			}
			[Token(Token = "0x6000828")]
			[Address(RVA = "0x6698E8", Offset = "0x6698E8", VA = "0x6698E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E243C", Offset = "0x4E243C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x669614", Offset = "0x669614", VA = "0x669614", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x6697D0", Offset = "0x6697D0", VA = "0x6697D0", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x66998C", Offset = "0x66998C", VA = "0x66998C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600082A")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x662F64", Offset = "0x662F64", VA = "0x662F64", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x669AC8", Offset = "0x669AC8", VA = "0x669AC8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x663DE0", Offset = "0x663DE0", VA = "0x663DE0")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000985")]
		None,
		[Token(Token = "0x4000986")]
		Proximity,
		[Token(Token = "0x4000987")]
		Contact,
		[Token(Token = "0x4000988")]
		Action
	}
	[Token(Token = "0x200018E")]
	public enum InteractableState
	{
		[Token(Token = "0x400098A")]
		Default,
		[Token(Token = "0x400098B")]
		ProximityState,
		[Token(Token = "0x400098C")]
		ContactState,
		[Token(Token = "0x400098D")]
		ActionState
	}
	[Token(Token = "0x200018F")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x663A38", Offset = "0x663A38", VA = "0x663A38")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000051")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600082F")]
			[Address(RVA = "0x669C44", Offset = "0x669C44", VA = "0x669C44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x669A00", Offset = "0x669A00", VA = "0x669A00")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x669B2C", Offset = "0x669B2C", VA = "0x669B2C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x669CAC", Offset = "0x669CAC", VA = "0x669CAC")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200026F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC0F0", Offset = "0x4DC0F0")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000117")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CEB")]
				[Address(RVA = "0x66AD54", Offset = "0x66AD54", VA = "0x66AD54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000118")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CED")]
				[Address(RVA = "0x66ADBC", Offset = "0x66ADBC", VA = "0x66ADBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x66A818", Offset = "0x66A818", VA = "0x66A818")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x66A944", Offset = "0x66A944", VA = "0x66A944", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x66A9B8", Offset = "0x66A9B8", VA = "0x66A9B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x66A960", Offset = "0x66A960", VA = "0x66A960")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x66AD5C", Offset = "0x66AD5C", VA = "0x66AD5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x66A710", Offset = "0x66A710", VA = "0x66A710")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x66A78C", Offset = "0x66A78C", VA = "0x66A78C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E244C", Offset = "0x4E244C")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x66A844", Offset = "0x66A844", VA = "0x66A844")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x66A93C", Offset = "0x66A93C", VA = "0x66A93C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000052")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000838")]
			[Address(RVA = "0x666CAC", Offset = "0x666CAC", VA = "0x666CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x666E14", Offset = "0x666E14", VA = "0x666E14")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x66ADC4", Offset = "0x66ADC4", VA = "0x66ADC4")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x66AE70", Offset = "0x66AE70", VA = "0x66AE70")]
		private void Update()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x66B138", Offset = "0x66B138", VA = "0x66B138")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x66B180", Offset = "0x66B180", VA = "0x66B180")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x66B3D0", Offset = "0x66B3D0", VA = "0x66B3D0")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x66B4FC", Offset = "0x66B4FC", VA = "0x66B4FC")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC100", Offset = "0x4DC100")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000119")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CF1")]
				[Address(RVA = "0x668200", Offset = "0x668200", VA = "0x668200", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CF3")]
				[Address(RVA = "0x668268", Offset = "0x668268", VA = "0x668268", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x666F30", Offset = "0x666F30", VA = "0x666F30")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x667C1C", Offset = "0x667C1C", VA = "0x667C1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x667C20", Offset = "0x667C20", VA = "0x667C20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x668208", Offset = "0x668208", VA = "0x668208", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400099D")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000053")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0x666B90", Offset = "0x666B90", VA = "0x666B90", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000054")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000841")]
			[Address(RVA = "0x666B98", Offset = "0x666B98", VA = "0x666B98", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000055")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x666BA0", Offset = "0x666BA0", VA = "0x666BA0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000056")]
		public override bool EnableState
		{
			[Token(Token = "0x6000843")]
			[Address(RVA = "0x666BA8", Offset = "0x666BA8", VA = "0x666BA8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x666BD4", Offset = "0x666BD4", VA = "0x666BD4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x666C10", Offset = "0x666C10", VA = "0x666C10", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x666EC0", Offset = "0x666EC0", VA = "0x666EC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E24B0", Offset = "0x4E24B0")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x666F5C", Offset = "0x666F5C", VA = "0x666F5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x66746C", Offset = "0x66746C", VA = "0x66746C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x6676E4", Offset = "0x6676E4", VA = "0x6676E4")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x667824", Offset = "0x667824", VA = "0x667824", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x667AF0", Offset = "0x667AF0", VA = "0x667AF0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x667AF4", Offset = "0x667AF4", VA = "0x667AF4", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x667AF8", Offset = "0x667AF8", VA = "0x667AF8")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE16C", Offset = "0x4DE16C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE17C", Offset = "0x4DE17C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE18C", Offset = "0x4DE18C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000057")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0x668270", Offset = "0x668270", VA = "0x668270", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2514", Offset = "0x4E2514")]
			get
			{
				return null;
			}
			[Token(Token = "0x600084F")]
			[Address(RVA = "0x668278", Offset = "0x668278", VA = "0x668278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2524", Offset = "0x4E2524")]
			set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public bool EnableState
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x668280", Offset = "0x668280", VA = "0x668280", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x66829C", Offset = "0x66829C", VA = "0x66829C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0x6682BC", Offset = "0x6682BC", VA = "0x6682BC", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2534", Offset = "0x4E2534")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000853")]
			[Address(RVA = "0x6682C4", Offset = "0x6682C4", VA = "0x6682C4", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2544", Offset = "0x4E2544")]
			set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public float SphereRadius
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0x6682D0", Offset = "0x6682D0", VA = "0x6682D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2554", Offset = "0x4E2554")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000855")]
			[Address(RVA = "0x6682D8", Offset = "0x6682D8", VA = "0x6682D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2564", Offset = "0x4E2564")]
			private set
			{
			}
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x6682E0", Offset = "0x6682E0", VA = "0x6682E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x668328", Offset = "0x668328", VA = "0x668328", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x66832C", Offset = "0x66832C", VA = "0x66832C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000195")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40009AD")]
		None = 0,
		[Token(Token = "0x40009AE")]
		Ray = 1,
		[Token(Token = "0x40009AF")]
		Poke = 4,
		[Token(Token = "0x40009B0")]
		All = -1
	}
	[Token(Token = "0x2000196")]
	public enum ToolInputState
	{
		[Token(Token = "0x40009B2")]
		Inactive,
		[Token(Token = "0x40009B3")]
		PrimaryInputDown,
		[Token(Token = "0x40009B4")]
		PrimaryInputDownStay,
		[Token(Token = "0x40009B5")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000197")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x667AAC", Offset = "0x667AAC", VA = "0x667AAC")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000198")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE19C", Offset = "0x4DE19C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE1AC", Offset = "0x4DE1AC")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE1BC", Offset = "0x4DE1BC")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700005B")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x663CF4", Offset = "0x663CF4", VA = "0x663CF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600085B")]
			[Address(RVA = "0x669D28", Offset = "0x669D28", VA = "0x669D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2574", Offset = "0x4E2574")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x669D30", Offset = "0x669D30", VA = "0x669D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2584", Offset = "0x4E2584")]
			set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600085D")]
			get;
		}

		[Token(Token = "0x1700005E")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600085E")]
			get;
		}

		[Token(Token = "0x1700005F")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600085F")]
			get;
		}

		[Token(Token = "0x17000060")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0x669D3C", Offset = "0x669D3C", VA = "0x669D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2594", Offset = "0x4E2594")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000861")]
			[Address(RVA = "0x669D48", Offset = "0x669D48", VA = "0x669D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E25A4", Offset = "0x4E25A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0x669D54", Offset = "0x669D54", VA = "0x669D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E25B4", Offset = "0x4E25B4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000863")]
			[Address(RVA = "0x669D60", Offset = "0x669D60", VA = "0x669D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E25C4", Offset = "0x4E25C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000868")]
			get;
			[Token(Token = "0x6000869")]
			set;
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x669D6C", Offset = "0x669D6C", VA = "0x669D6C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000865")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000866")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000867")]
		public abstract void DeFocus();

		[Token(Token = "0x600086A")]
		public abstract void Initialize();

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x669D74", Offset = "0x669D74", VA = "0x669D74")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x669DC4", Offset = "0x669DC4", VA = "0x669DC4")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x669E1C", Offset = "0x669E1C", VA = "0x669E1C", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x66A060", Offset = "0x66A060", VA = "0x66A060", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x667B0C", Offset = "0x667B0C", VA = "0x667B0C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000063")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000870")]
			get;
		}

		[Token(Token = "0x17000064")]
		bool EnableState
		{
			[Token(Token = "0x6000872")]
			get;
			[Token(Token = "0x6000873")]
			set;
		}

		[Token(Token = "0x17000065")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000874")]
			get;
			[Token(Token = "0x6000875")]
			set;
		}

		[Token(Token = "0x6000871")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200019A")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000271")]
		private enum PinchState
		{
			[Token(Token = "0x4000DC5")]
			None,
			[Token(Token = "0x4000DC6")]
			PinchDown,
			[Token(Token = "0x4000DC7")]
			PinchStay,
			[Token(Token = "0x4000DC8")]
			PinchUp
		}

		[Token(Token = "0x40009C2")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000066")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0x66D478", Offset = "0x66D478", VA = "0x66D478")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000067")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000877")]
			[Address(RVA = "0x66D504", Offset = "0x66D504", VA = "0x66D504")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000068")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0x66D590", Offset = "0x66D590", VA = "0x66D590")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x66D61C", Offset = "0x66D61C", VA = "0x66D61C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x66D648", Offset = "0x66D648", VA = "0x66D648")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40009C5")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40009C6")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40009C7")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40009C8")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40009C9")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DE1DC", Offset = "0x4DE1DC")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000069")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0x66D8E8", Offset = "0x66D8E8", VA = "0x66D8E8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700006A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600087C")]
			[Address(RVA = "0x66D8F0", Offset = "0x66D8F0", VA = "0x66D8F0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700006B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x66D958", Offset = "0x66D958", VA = "0x66D958", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006C")]
		public override bool EnableState
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0x66D960", Offset = "0x66D960", VA = "0x66D960", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600087F")]
			[Address(RVA = "0x66D9A4", Offset = "0x66D9A4", VA = "0x66D9A4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x66DA18", Offset = "0x66DA18", VA = "0x66DA18", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x66DA70", Offset = "0x66DA70", VA = "0x66DA70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x66DB0C", Offset = "0x66DB0C", VA = "0x66DB0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x66DE0C", Offset = "0x66DE0C", VA = "0x66DE0C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x66DF08", Offset = "0x66DF08", VA = "0x66DF08", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x66E26C", Offset = "0x66E26C", VA = "0x66E26C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x66E410", Offset = "0x66E410", VA = "0x66E410")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x66E538", Offset = "0x66E538", VA = "0x66E538")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x66E870", Offset = "0x66E870", VA = "0x66E870")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x66EC80", Offset = "0x66EC80", VA = "0x66EC80", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x66ED54", Offset = "0x66ED54", VA = "0x66ED54", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x66ED88", Offset = "0x66ED88", VA = "0x66ED88")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40009D5")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40009D6")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE250", Offset = "0x4DE250")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700006D")]
		public bool EnableState
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0x66D988", Offset = "0x66D988", VA = "0x66D988", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x66D9C0", Offset = "0x66D9C0", VA = "0x66D9C0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x66EE40", Offset = "0x66EE40", VA = "0x66EE40", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x66DDD0", Offset = "0x66DDD0", VA = "0x66DDD0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0x66F070", Offset = "0x66F070", VA = "0x66F070", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E25D4", Offset = "0x4E25D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000892")]
			[Address(RVA = "0x66F078", Offset = "0x66F078", VA = "0x66F078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E25E4", Offset = "0x4E25E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x66EE48", Offset = "0x66EE48", VA = "0x66EE48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x66ECB4", Offset = "0x66ECB4", VA = "0x66ECB4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x66F080", Offset = "0x66F080", VA = "0x66F080")]
		private void Update()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x66F3AC", Offset = "0x66F3AC", VA = "0x66F3AC")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x66F59C", Offset = "0x66F59C", VA = "0x66F59C")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000070")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000897")]
			[Address(RVA = "0x666914", Offset = "0x666914", VA = "0x666914")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000898")]
			[Address(RVA = "0x66691C", Offset = "0x66691C", VA = "0x66691C")]
			set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000899")]
			[Address(RVA = "0x6669A4", Offset = "0x6669A4", VA = "0x6669A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600089A")]
			[Address(RVA = "0x6669AC", Offset = "0x6669AC", VA = "0x6669AC")]
			set
			{
			}
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x666A18", Offset = "0x666A18", VA = "0x666A18")]
		private void Start()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x666B68", Offset = "0x666B68", VA = "0x666B68")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x666B78", Offset = "0x666B78", VA = "0x666B78")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x666B88", Offset = "0x666B88", VA = "0x666B88")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x66444C", Offset = "0x66444C", VA = "0x66444C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x664450", Offset = "0x664450", VA = "0x664450")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x6644D0", Offset = "0x6644D0", VA = "0x6644D0")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x6645C0", Offset = "0x6645C0", VA = "0x6645C0")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x6646B0", Offset = "0x6646B0", VA = "0x6646B0")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x664770", Offset = "0x664770", VA = "0x664770")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x664860", Offset = "0x664860", VA = "0x664860")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x6648A8", Offset = "0x6648A8", VA = "0x6648A8")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x664A04", Offset = "0x664A04", VA = "0x664A04")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x664A74", Offset = "0x664A74", VA = "0x664A74")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x664A7C", Offset = "0x664A7C", VA = "0x664A7C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x664A80", Offset = "0x664A80", VA = "0x664A80")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x664A38", Offset = "0x664A38", VA = "0x664A38")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x664AC0", Offset = "0x664AC0", VA = "0x664AC0")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000272")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC110", Offset = "0x4DC110")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700011B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CF7")]
				[Address(RVA = "0x66D31C", Offset = "0x66D31C", VA = "0x66D31C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CF9")]
				[Address(RVA = "0x66D384", Offset = "0x66D384", VA = "0x66D384", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x66D050", Offset = "0x66D050", VA = "0x66D050")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x66D12C", Offset = "0x66D12C", VA = "0x66D12C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0x66D130", Offset = "0x66D130", VA = "0x66D130", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x66D324", Offset = "0x66D324", VA = "0x66D324", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E6")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40009E7")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x66CC68", Offset = "0x66CC68", VA = "0x66CC68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x66CD00", Offset = "0x66CD00", VA = "0x66CD00")]
		private void Update()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x66CF8C", Offset = "0x66CF8C", VA = "0x66CF8C")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x66CF1C", Offset = "0x66CF1C", VA = "0x66CF1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E25F4", Offset = "0x4E25F4")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x66D07C", Offset = "0x66D07C", VA = "0x66D07C")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000273")]
		public enum SelectionState
		{
			[Token(Token = "0x4000DD0")]
			Off,
			[Token(Token = "0x4000DD1")]
			Selected,
			[Token(Token = "0x4000DD2")]
			Highlighted
		}

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000072")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0x66F5FC", Offset = "0x66F5FC", VA = "0x66F5FC")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60008B3")]
			[Address(RVA = "0x66F604", Offset = "0x66F604", VA = "0x66F604")]
			set
			{
			}
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x66F78C", Offset = "0x66F78C", VA = "0x66F78C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x66F94C", Offset = "0x66F94C", VA = "0x66F94C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x66F68C", Offset = "0x66F68C", VA = "0x66F68C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x66FA3C", Offset = "0x66FA3C", VA = "0x66FA3C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000274")]
		public enum SegmentType
		{
			[Token(Token = "0x4000DD4")]
			Straight,
			[Token(Token = "0x4000DD5")]
			LeftTurn,
			[Token(Token = "0x4000DD6")]
			RightTurn,
			[Token(Token = "0x4000DD7")]
			Switch
		}

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40009FC")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40009FD")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE330", Offset = "0x4DE330")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000073")]
		public float StartDistance
		{
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0x66FAA8", Offset = "0x66FAA8", VA = "0x66FAA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2658", Offset = "0x4E2658")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0x66FAB0", Offset = "0x66FAB0", VA = "0x66FAB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2668", Offset = "0x4E2668")]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public float GridSize
		{
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0x66FAB8", Offset = "0x66FAB8", VA = "0x66FAB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008BC")]
			[Address(RVA = "0x66FAC0", Offset = "0x66FAC0", VA = "0x66FAC0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public int SubDivCount
		{
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0x66FAC8", Offset = "0x66FAC8", VA = "0x66FAC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008BE")]
			[Address(RVA = "0x66FAD0", Offset = "0x66FAD0", VA = "0x66FAD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public SegmentType Type
		{
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0x66FAD8", Offset = "0x66FAD8", VA = "0x66FAD8")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000077")]
		public Pose EndPose
		{
			[Token(Token = "0x60008C0")]
			[Address(RVA = "0x66FAE0", Offset = "0x66FAE0", VA = "0x66FAE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		public float Radius
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x66FF74", Offset = "0x66FF74", VA = "0x66FF74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000079")]
		public float SegmentLength
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0x66FB48", Offset = "0x66FB48", VA = "0x66FB48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x66FF84", Offset = "0x66FF84", VA = "0x66FF84")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x66FF9C", Offset = "0x66FF9C", VA = "0x66FF9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x66FB88", Offset = "0x66FB88", VA = "0x66FB88")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x66FFA0", Offset = "0x66FFA0", VA = "0x66FFA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x66FFA4", Offset = "0x66FFA4", VA = "0x66FFA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x670010", Offset = "0x670010", VA = "0x670010")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x670B98", Offset = "0x670B98", VA = "0x670B98")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x670EA4", Offset = "0x670EA4", VA = "0x670EA4")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000275")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC120", Offset = "0x4DC120")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700011D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CFD")]
				[Address(RVA = "0x671AAC", Offset = "0x671AAC", VA = "0x671AAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CFF")]
				[Address(RVA = "0x671B14", Offset = "0x671B14", VA = "0x671B14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0x671824", Offset = "0x671824", VA = "0x671824")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x671900", Offset = "0x671900", VA = "0x671900", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x671904", Offset = "0x671904", VA = "0x671904", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x671AB4", Offset = "0x671AB4", VA = "0x671AB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A03")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000A04")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x670F48", Offset = "0x670F48", VA = "0x670F48")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x670FF4", Offset = "0x670FF4", VA = "0x670FF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x6710A8", Offset = "0x6710A8", VA = "0x6710A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x6711D4", Offset = "0x6711D4", VA = "0x6711D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x671344", Offset = "0x671344", VA = "0x671344")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x6714E0", Offset = "0x6714E0", VA = "0x6714E0")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x67175C", Offset = "0x67175C", VA = "0x67175C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x6715F4", Offset = "0x6715F4", VA = "0x6715F4")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x671608", Offset = "0x671608", VA = "0x671608")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x6717B4", Offset = "0x6717B4", VA = "0x6717B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E2678", Offset = "0x4E2678")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x671850", Offset = "0x671850", VA = "0x671850")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700007A")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0x671B1C", Offset = "0x671B1C", VA = "0x671B1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x671B2C", Offset = "0x671B2C", VA = "0x671B2C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x671B34", Offset = "0x671B34", VA = "0x671B34", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x671FA0", Offset = "0x671FA0", VA = "0x671FA0")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000A17")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000A18")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE430", Offset = "0x4DE430")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700007B")]
		public float Distance
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x672098", Offset = "0x672098", VA = "0x672098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E26DC", Offset = "0x4E26DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x6720A0", Offset = "0x6720A0", VA = "0x6720A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E26EC", Offset = "0x4E26EC")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public float Scale
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x6720A8", Offset = "0x6720A8", VA = "0x6720A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0x6720B0", Offset = "0x6720B0", VA = "0x6720B0")]
			set
			{
			}
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x671B30", Offset = "0x671B30", VA = "0x671B30", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x6720B8", Offset = "0x6720B8", VA = "0x6720B8")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x671B7C", Offset = "0x671B7C", VA = "0x671B7C")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x671E54", Offset = "0x671E54", VA = "0x671E54")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60008E2")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x672010", Offset = "0x672010", VA = "0x672010")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000276")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC130", Offset = "0x4DC130")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700011F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D03")]
				[Address(RVA = "0x672A40", Offset = "0x672A40", VA = "0x672A40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000120")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D05")]
				[Address(RVA = "0x672AA8", Offset = "0x672AA8", VA = "0x672AA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x672684", Offset = "0x672684", VA = "0x672684")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x67281C", Offset = "0x67281C", VA = "0x67281C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x672820", Offset = "0x672820", VA = "0x672820", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x672A48", Offset = "0x672A48", VA = "0x672A48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x672288", Offset = "0x672288", VA = "0x672288")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x6722D4", Offset = "0x6722D4", VA = "0x6722D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x6723E0", Offset = "0x6723E0", VA = "0x6723E0")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x672528", Offset = "0x672528", VA = "0x672528")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x67243C", Offset = "0x67243C", VA = "0x67243C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x672604", Offset = "0x672604", VA = "0x672604")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E26FC", Offset = "0x4E26FC")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x6726B0", Offset = "0x6726B0", VA = "0x6726B0")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x67275C", Offset = "0x67275C", VA = "0x67275C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x6727BC", Offset = "0x6727BC", VA = "0x6727BC")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000277")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000DEA")]
			Start,
			[Token(Token = "0x4000DEB")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000DEC")]
			Stop
		}

		[Token(Token = "0x2000278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC140", Offset = "0x4DC140")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000121")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D09")]
				[Address(RVA = "0x6733CC", Offset = "0x6733CC", VA = "0x6733CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000122")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D0B")]
				[Address(RVA = "0x673434", Offset = "0x673434", VA = "0x673434", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D06")]
			[Address(RVA = "0x672D68", Offset = "0x672D68", VA = "0x672D68")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x6731AC", Offset = "0x6731AC", VA = "0x6731AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x6731B0", Offset = "0x6731B0", VA = "0x6731B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x6733D4", Offset = "0x6733D4", VA = "0x6733D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A2B")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000A2C")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000A2D")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000A2E")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DE490", Offset = "0x4DE490")]
		protected float _initialSpeed;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x672AB0", Offset = "0x672AB0", VA = "0x672AB0")]
		private void Start()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x672C08", Offset = "0x672C08", VA = "0x672C08")]
		private void Update()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x672C14", Offset = "0x672C14", VA = "0x672C14", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x664484", Offset = "0x664484", VA = "0x664484")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x672B84", Offset = "0x672B84", VA = "0x672B84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E2760", Offset = "0x4E2760")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x672D94", Offset = "0x672D94", VA = "0x672D94")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x672D04", Offset = "0x672D04", VA = "0x672D04")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x664504", Offset = "0x664504", VA = "0x664504")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x6645F4", Offset = "0x6645F4", VA = "0x6645F4")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x672FC8", Offset = "0x672FC8", VA = "0x672FC8")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x6730B8", Offset = "0x6730B8", VA = "0x6730B8")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x6646E4", Offset = "0x6646E4", VA = "0x6646E4")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x6647A4", Offset = "0x6647A4", VA = "0x6647A4")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x664898", Offset = "0x664898", VA = "0x664898")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x673140", Offset = "0x673140", VA = "0x673140")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700007D")]
		public float TrackLength
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0x67343C", Offset = "0x67343C", VA = "0x67343C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0x673444", Offset = "0x673444", VA = "0x673444")]
			private set
			{
			}
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x67344C", Offset = "0x67344C", VA = "0x67344C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x672138", Offset = "0x672138", VA = "0x672138")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x673450", Offset = "0x673450", VA = "0x673450")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x673648", Offset = "0x673648", VA = "0x673648")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x673764", Offset = "0x673764", VA = "0x673764")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class Pose
	{
		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x66D7CC", Offset = "0x66D7CC", VA = "0x66D7CC")]
		public Pose()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x66D878", Offset = "0x66D878", VA = "0x66D878")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000279")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC150", Offset = "0x4DC150")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000123")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D0F")]
				[Address(RVA = "0x673D48", Offset = "0x673D48", VA = "0x673D48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000124")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D11")]
				[Address(RVA = "0x673DB0", Offset = "0x673DB0", VA = "0x673DB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x673A0C", Offset = "0x673A0C", VA = "0x673A0C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x673B6C", Offset = "0x673B6C", VA = "0x673B6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x673B70", Offset = "0x673B70", VA = "0x673B70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x673D50", Offset = "0x673D50", VA = "0x673D50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC160", Offset = "0x4DC160")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000125")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D15")]
				[Address(RVA = "0x673E84", Offset = "0x673E84", VA = "0x673E84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000126")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D17")]
				[Address(RVA = "0x673EEC", Offset = "0x673EEC", VA = "0x673EEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x673ACC", Offset = "0x673ACC", VA = "0x673ACC")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x673DB8", Offset = "0x673DB8", VA = "0x673DB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x673DBC", Offset = "0x673DBC", VA = "0x673DBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x673E8C", Offset = "0x673E8C", VA = "0x673E8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A51")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DE678", Offset = "0x4DE678")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700007E")]
		public bool IsMoving
		{
			[Token(Token = "0x6000906")]
			[Address(RVA = "0x673780", Offset = "0x673780", VA = "0x673780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E27C4", Offset = "0x4E27C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000907")]
			[Address(RVA = "0x673788", Offset = "0x673788", VA = "0x673788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E27D4", Offset = "0x4E27D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x673794", Offset = "0x673794", VA = "0x673794")]
		private void Start()
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x6737D0", Offset = "0x6737D0", VA = "0x6737D0")]
		private void Update()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x673924", Offset = "0x673924", VA = "0x673924")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x67398C", Offset = "0x67398C", VA = "0x67398C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E27E4", Offset = "0x4E27E4")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x673A38", Offset = "0x673A38", VA = "0x673A38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E2848", Offset = "0x4E2848")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x673AF8", Offset = "0x673AF8", VA = "0x673AF8")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x673B64", Offset = "0x673B64", VA = "0x673B64")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x673EF4", Offset = "0x673EF4", VA = "0x673EF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x673F5C", Offset = "0x673F5C", VA = "0x673F5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x674014", Offset = "0x674014", VA = "0x674014")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x674114", Offset = "0x674114", VA = "0x674114")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x674190", Offset = "0x674190", VA = "0x674190")]
		private void Update()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x67426C", Offset = "0x67426C", VA = "0x67426C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000A62")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000A63")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000A64")]
		EUDT_None,
		[Token(Token = "0x4000A65")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20001AD")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200027B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC170", Offset = "0x4DC170")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000127")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D1B")]
				[Address(RVA = "0x66CBF8", Offset = "0x66CBF8", VA = "0x66CBF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000128")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D1D")]
				[Address(RVA = "0x66CC60", Offset = "0x66CC60", VA = "0x66CC60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x66C274", Offset = "0x66C274", VA = "0x66C274")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x66C9AC", Offset = "0x66C9AC", VA = "0x66C9AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x66C9B0", Offset = "0x66C9B0", VA = "0x66C9B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x66CC00", Offset = "0x66CC00", VA = "0x66CC00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000A67")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000A68")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000A69")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DE6B8", Offset = "0x4DE6B8")]
		public GameObject mainCamera;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4DE6F0", Offset = "0x4DE6F0")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x66B5BC", Offset = "0x66B5BC", VA = "0x66B5BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x66BD9C", Offset = "0x66BD9C", VA = "0x66BD9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x66BEDC", Offset = "0x66BEDC", VA = "0x66BEDC")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x66C004", Offset = "0x66C004", VA = "0x66C004")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x66C12C", Offset = "0x66C12C", VA = "0x66C12C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x66BEB0", Offset = "0x66BEB0", VA = "0x66BEB0")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x66C204", Offset = "0x66C204", VA = "0x66C204")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E28AC", Offset = "0x4E28AC")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x66C2A0", Offset = "0x66C2A0", VA = "0x66C2A0")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x66B928", Offset = "0x66B928", VA = "0x66B928")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x66C3C8", Offset = "0x66C3C8", VA = "0x66C3C8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x66C2D4", Offset = "0x66C2D4", VA = "0x66C2D4")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x66C764", Offset = "0x66C764", VA = "0x66C764")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x66C840", Offset = "0x66C840", VA = "0x66C840")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x66C8BC", Offset = "0x66C8BC", VA = "0x66C8BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2910", Offset = "0x4E2910")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x66C90C", Offset = "0x66C90C", VA = "0x66C90C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2920", Offset = "0x4E2920")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x66C95C", Offset = "0x66C95C", VA = "0x66C95C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2930", Offset = "0x4E2930")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DBCE8", Offset = "0x4DBCE8")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200027C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC180", Offset = "0x4DC180")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x8E78E4", Offset = "0x8E78E4", VA = "0x8E78E4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x8E78EC", Offset = "0x8E78EC", VA = "0x8E78EC")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A7E")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000A7F")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000A80")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000A81")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000A82")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000A83")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000A84")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000A85")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000A86")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000A87")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000A88")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x8E6B28", Offset = "0x8E6B28", VA = "0x8E6B28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x8E6B80", Offset = "0x8E6B80", VA = "0x8E6B80")]
		private void Start()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x8E6F88", Offset = "0x8E6F88", VA = "0x8E6F88")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x8E7054", Offset = "0x8E7054", VA = "0x8E7054")]
		private void Update()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x8E7160", Offset = "0x8E7160", VA = "0x8E7160")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x8E7498", Offset = "0x8E7498", VA = "0x8E7498")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x8E7600", Offset = "0x8E7600", VA = "0x8E7600")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x8E774C", Offset = "0x8E774C", VA = "0x8E774C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x8E71FC", Offset = "0x8E71FC", VA = "0x8E71FC")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x8E729C", Offset = "0x8E729C", VA = "0x8E729C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x8E6DDC", Offset = "0x8E6DDC", VA = "0x8E6DDC")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x8E7868", Offset = "0x8E7868", VA = "0x8E7868")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000A9B")]
		Default,
		[Token(Token = "0x4000A9C")]
		Generic,
		[Token(Token = "0x4000A9D")]
		PingPongBall,
		[Token(Token = "0x4000A9E")]
		Controller
	}
	[Token(Token = "0x20001B0")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700007F")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000931")]
			[Address(RVA = "0x8E7918", Offset = "0x8E7918", VA = "0x8E7918")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000080")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000932")]
			[Address(RVA = "0x8E7920", Offset = "0x8E7920", VA = "0x8E7920")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000081")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0x8E7928", Offset = "0x8E7928", VA = "0x8E7928")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x8E7930", Offset = "0x8E7930", VA = "0x8E7930")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x8E7938", Offset = "0x8E7938", VA = "0x8E7938")]
		private void Update()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x8E7BAC", Offset = "0x8E7BAC", VA = "0x8E7BAC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x8E7C08", Offset = "0x8E7C08", VA = "0x8E7C08")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x8E7C4C", Offset = "0x8E7C4C", VA = "0x8E7C4C")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20001B2")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000AA6")]
		TRIANGLES,
		[Token(Token = "0x4000AA7")]
		QUADS
	}
	[Token(Token = "0x20001B3")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000AA9")]
		ABSORPTION,
		[Token(Token = "0x4000AAA")]
		TRANSMISSION,
		[Token(Token = "0x4000AAB")]
		SCATTERING
	}
	[Token(Token = "0x20001B4")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20001B5")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000AB0")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000AB1")]
		public const string Tab = "    ";

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x8E82DC", Offset = "0x8E82DC", VA = "0x8E82DC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E2940", Offset = "0x4E2940")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E2940", Offset = "0x4E2940")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x8E8364", Offset = "0x8E8364", VA = "0x8E8364")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E29A0", Offset = "0x4E29A0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E29A0", Offset = "0x4E29A0")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x8E83FC", Offset = "0x8E83FC", VA = "0x8E83FC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E2A00", Offset = "0x4E2A00")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E2A00", Offset = "0x4E2A00")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x8E8484", Offset = "0x8E8484", VA = "0x8E8484")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E2A60", Offset = "0x4E2A60")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E2A60", Offset = "0x4E2A60")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x8E850C", Offset = "0x8E850C", VA = "0x8E850C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E2AC0", Offset = "0x4E2AC0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4E2AC0", Offset = "0x4E2AC0")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class CAPI
	{
		[Token(Token = "0x200027D")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x200027E")]
		public enum Result
		{
			[Token(Token = "0x4000E08")]
			Success = 0,
			[Token(Token = "0x4000E09")]
			Failure = -1000,
			[Token(Token = "0x4000E0A")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000E0B")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000E0C")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000E0D")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000E0E")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000E0F")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000E10")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x200027F")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x66279C", Offset = "0x66279C", VA = "0x66279C")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000AB2")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000ABA")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600093E")]
		[Address(RVA = "0x8E860C", Offset = "0x8E860C", VA = "0x8E860C")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x8E869C", Offset = "0x8E869C", VA = "0x8E869C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x8E8858", Offset = "0x8E8858", VA = "0x8E8858")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000941")]
		[Address(RVA = "0x8E8938", Offset = "0x8E8938", VA = "0x8E8938")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000942")]
		[Address(RVA = "0x8E89A8", Offset = "0x8E89A8", VA = "0x8E89A8")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000943")]
		[Address(RVA = "0x8E8A1C", Offset = "0x8E8A1C", VA = "0x8E8A1C")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x8E8A9C", Offset = "0x8E8A9C", VA = "0x8E8A9C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000945")]
		[Address(RVA = "0x8E8BB4", Offset = "0x8E8BB4", VA = "0x8E8BB4")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x8E8C34", Offset = "0x8E8C34", VA = "0x8E8C34")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000947")]
		[Address(RVA = "0x8E8D4C", Offset = "0x8E8D4C", VA = "0x8E8D4C")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x8E8DCC", Offset = "0x8E8DCC", VA = "0x8E8DCC")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000949")]
		[Address(RVA = "0x8E8E4C", Offset = "0x8E8E4C", VA = "0x8E8E4C")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600094A")]
		[Address(RVA = "0x8E8ECC", Offset = "0x8E8ECC", VA = "0x8E8ECC")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600094B")]
		[Address(RVA = "0x8E8F4C", Offset = "0x8E8F4C", VA = "0x8E8F4C")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x600094C")]
		[Address(RVA = "0x8E8FDC", Offset = "0x8E8FDC", VA = "0x8E8FDC")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600094D")]
		[Address(RVA = "0x8E906C", Offset = "0x8E906C", VA = "0x8E906C")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600094E")]
		[Address(RVA = "0x8E90FC", Offset = "0x8E90FC", VA = "0x8E90FC")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600094F")]
		[Address(RVA = "0x8E917C", Offset = "0x8E917C", VA = "0x8E917C")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000950")]
		[Address(RVA = "0x8E91FC", Offset = "0x8E91FC", VA = "0x8E91FC")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000951")]
		[Address(RVA = "0x8E928C", Offset = "0x8E928C", VA = "0x8E928C")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000952")]
		[Address(RVA = "0x8E931C", Offset = "0x8E931C", VA = "0x8E931C")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000953")]
		[Address(RVA = "0x8E93AC", Offset = "0x8E93AC", VA = "0x8E93AC")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000954")]
		[Address(RVA = "0x8E942C", Offset = "0x8E942C", VA = "0x8E942C")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x8E94CC", Offset = "0x8E94CC", VA = "0x8E94CC")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000956")]
		[Address(RVA = "0x8E954C", Offset = "0x8E954C", VA = "0x8E954C")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000957")]
		[Address(RVA = "0x8E95EC", Offset = "0x8E95EC", VA = "0x8E95EC")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000958")]
		[Address(RVA = "0x8E96AC", Offset = "0x8E96AC", VA = "0x8E96AC")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000959")]
		[Address(RVA = "0x8E977C", Offset = "0x8E977C", VA = "0x8E977C")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x600095A")]
		[Address(RVA = "0x8E980C", Offset = "0x8E980C", VA = "0x8E980C")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600095B")]
		[Address(RVA = "0x8E989C", Offset = "0x8E989C", VA = "0x8E989C")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600095C")]
		[Address(RVA = "0x8E992C", Offset = "0x8E992C", VA = "0x8E992C")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600095D")]
		[Address(RVA = "0x8E99BC", Offset = "0x8E99BC", VA = "0x8E99BC")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600095E")]
		[Address(RVA = "0x8E9A4C", Offset = "0x8E9A4C", VA = "0x8E9A4C")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x8E9ACC", Offset = "0x8E9ACC", VA = "0x8E9ACC")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x8E9BEC", Offset = "0x8E9BEC", VA = "0x8E9BEC")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000961")]
		[Address(RVA = "0x8E9B5C", Offset = "0x8E9B5C", VA = "0x8E9B5C")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x8E9DE0", Offset = "0x8E9DE0", VA = "0x8E9DE0")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000963")]
		[Address(RVA = "0x8E9F18", Offset = "0x8E9F18", VA = "0x8E9F18")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000964")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x8E9F98", Offset = "0x8E9F98", VA = "0x8E9F98")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000966")]
		[Address(RVA = "0x8EA208", Offset = "0x8EA208", VA = "0x8EA208")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x8EA288", Offset = "0x8EA288", VA = "0x8EA288")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000968")]
		[Address(RVA = "0x8EA3C0", Offset = "0x8EA3C0", VA = "0x8EA3C0")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x8EA440", Offset = "0x8EA440", VA = "0x8EA440")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600096A")]
		[Address(RVA = "0x8EA578", Offset = "0x8EA578", VA = "0x8EA578")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x8EA5F8", Offset = "0x8EA5F8", VA = "0x8EA5F8")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600096C")]
		[Address(RVA = "0x8EA730", Offset = "0x8EA730", VA = "0x8EA730")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x8EA7B0", Offset = "0x8EA7B0", VA = "0x8EA7B0")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600096E")]
		[Address(RVA = "0x8EA8E8", Offset = "0x8EA8E8", VA = "0x8EA8E8")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600096F")]
		[Address(RVA = "0x8EA968", Offset = "0x8EA968", VA = "0x8EA968")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000970")]
		[Address(RVA = "0x8EA9E8", Offset = "0x8EA9E8", VA = "0x8EA9E8")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000971")]
		[Address(RVA = "0x8EAA80", Offset = "0x8EAA80", VA = "0x8EAA80")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x8EAB00", Offset = "0x8EAB00", VA = "0x8EAB00")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x8EACAC", Offset = "0x8EACAC", VA = "0x8EACAC")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000974")]
		[Address(RVA = "0x8EADD8", Offset = "0x8EADD8", VA = "0x8EADD8")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000975")]
		[Address(RVA = "0x8EAC2C", Offset = "0x8EAC2C", VA = "0x8EAC2C")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000976")]
		[Address(RVA = "0x8EAE58", Offset = "0x8EAE58", VA = "0x8EAE58")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000977")]
		[Address(RVA = "0x8EAED8", Offset = "0x8EAED8", VA = "0x8EAED8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000978")]
		[Address(RVA = "0x8EAF68", Offset = "0x8EAF68", VA = "0x8EAF68")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000979")]
		[Address(RVA = "0x8EAFE8", Offset = "0x8EAFE8", VA = "0x8EAFE8")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600097A")]
		[Address(RVA = "0x8EB078", Offset = "0x8EB078", VA = "0x8EB078")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600097B")]
		[Address(RVA = "0x8EB0F8", Offset = "0x8EB0F8", VA = "0x8EB0F8")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x8EB178", Offset = "0x8EB178", VA = "0x8EB178")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600097D")]
		[Address(RVA = "0x8EB3B4", Offset = "0x8EB3B4", VA = "0x8EB3B4")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x8EB444", Offset = "0x8EB444", VA = "0x8EB444")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600097F")]
		[Address(RVA = "0x8EB630", Offset = "0x8EB630", VA = "0x8EB630")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x8EB6C8", Offset = "0x8EB6C8", VA = "0x8EB6C8")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000981")]
		[Address(RVA = "0x8EB7EC", Offset = "0x8EB7EC", VA = "0x8EB7EC")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000982")]
		[Address(RVA = "0x8EB86C", Offset = "0x8EB86C", VA = "0x8EB86C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x8EB8EC", Offset = "0x8EB8EC", VA = "0x8EB8EC")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000984")]
		[Address(RVA = "0x8EBA14", Offset = "0x8EBA14", VA = "0x8EBA14")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x8EBA94", Offset = "0x8EBA94", VA = "0x8EBA94")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000986")]
		[Address(RVA = "0x8EBBBC", Offset = "0x8EBBBC", VA = "0x8EBBBC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000987")]
		[Address(RVA = "0x8EBC3C", Offset = "0x8EBC3C", VA = "0x8EBC3C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x8EBCCC", Offset = "0x8EBCCC", VA = "0x8EBCCC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000989")]
		[Address(RVA = "0x8EBD5C", Offset = "0x8EBD5C", VA = "0x8EBD5C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098A")]
		[Address(RVA = "0x8EBDEC", Offset = "0x8EBDEC", VA = "0x8EBDEC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098B")]
		[Address(RVA = "0x8EBE6C", Offset = "0x8EBE6C", VA = "0x8EBE6C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098C")]
		[Address(RVA = "0x8EBEF4", Offset = "0x8EBEF4", VA = "0x8EBEF4")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098D")]
		[Address(RVA = "0x8EBF7C", Offset = "0x8EBF7C", VA = "0x8EBF7C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098E")]
		[Address(RVA = "0x8EBFFC", Offset = "0x8EBFFC", VA = "0x8EBFFC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600098F")]
		[Address(RVA = "0x8EC07C", Offset = "0x8EC07C", VA = "0x8EC07C")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000990")]
		[Address(RVA = "0x8EC130", Offset = "0x8EC130", VA = "0x8EC130")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000991")]
		[Address(RVA = "0x8EC1C0", Offset = "0x8EC1C0", VA = "0x8EC1C0")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000992")]
		[Address(RVA = "0x8EC250", Offset = "0x8EC250", VA = "0x8EC250")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000993")]
		[Address(RVA = "0x8EC2D0", Offset = "0x8EC2D0", VA = "0x8EC2D0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000994")]
		[Address(RVA = "0x8EC350", Offset = "0x8EC350", VA = "0x8EC350")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000995")]
		[Address(RVA = "0x8EC3D0", Offset = "0x8EC3D0", VA = "0x8EC3D0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000996")]
		[Address(RVA = "0x8EC468", Offset = "0x8EC468", VA = "0x8EC468")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000997")]
		[Address(RVA = "0x8EC4F8", Offset = "0x8EC4F8", VA = "0x8EC4F8")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000998")]
		[Address(RVA = "0x8EC588", Offset = "0x8EC588", VA = "0x8EC588")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000999")]
		[Address(RVA = "0x8EC618", Offset = "0x8EC618", VA = "0x8EC618")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600099A")]
		[Address(RVA = "0x8EC6B0", Offset = "0x8EC6B0", VA = "0x8EC6B0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600099B")]
		[Address(RVA = "0x8EC748", Offset = "0x8EC748", VA = "0x8EC748")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600099C")]
		[Address(RVA = "0x8EC7C8", Offset = "0x8EC7C8", VA = "0x8EC7C8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x8EC848", Offset = "0x8EC848", VA = "0x8EC848")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600099E")]
		[Address(RVA = "0x8EC970", Offset = "0x8EC970", VA = "0x8EC970")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x8EC9F0", Offset = "0x8EC9F0", VA = "0x8EC9F0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x8ECB18", Offset = "0x8ECB18", VA = "0x8ECB18")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x8ECB98", Offset = "0x8ECB98", VA = "0x8ECB98")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x8ECCC0", Offset = "0x8ECCC0", VA = "0x8ECCC0")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x8ECD40", Offset = "0x8ECD40", VA = "0x8ECD40")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x8ECEE8", Offset = "0x8ECEE8", VA = "0x8ECEE8")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x8ED184", Offset = "0x8ED184", VA = "0x8ED184")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x8ECE68", Offset = "0x8ECE68", VA = "0x8ECE68")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x8ED214", Offset = "0x8ED214", VA = "0x8ED214")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x8ED294", Offset = "0x8ED294", VA = "0x8ED294")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x8ED324", Offset = "0x8ED324", VA = "0x8ED324")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x8ED3B4", Offset = "0x8ED3B4", VA = "0x8ED3B4")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x8ED444", Offset = "0x8ED444", VA = "0x8ED444")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x8ED4E4", Offset = "0x8ED4E4", VA = "0x8ED4E4")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x8ED584", Offset = "0x8ED584", VA = "0x8ED584")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x8ED624", Offset = "0x8ED624", VA = "0x8ED624")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x8ED6A4", Offset = "0x8ED6A4", VA = "0x8ED6A4")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x8ED724", Offset = "0x8ED724", VA = "0x8ED724")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x8ED7A4", Offset = "0x8ED7A4", VA = "0x8ED7A4")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x8ED824", Offset = "0x8ED824", VA = "0x8ED824")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x8ED8A4", Offset = "0x8ED8A4", VA = "0x8ED8A4")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x8ED9CC", Offset = "0x8ED9CC", VA = "0x8ED9CC")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x8EDA64", Offset = "0x8EDA64", VA = "0x8EDA64")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x8EDAE4", Offset = "0x8EDAE4", VA = "0x8EDAE4")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x8EDB48", Offset = "0x8EDB48", VA = "0x8EDB48")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x8EDC64", Offset = "0x8EDC64", VA = "0x8EDC64")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x8EDCF4", Offset = "0x8EDCF4", VA = "0x8EDCF4")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x8EDE38", Offset = "0x8EDE38", VA = "0x8EDE38")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x8EDEC8", Offset = "0x8EDEC8", VA = "0x8EDEC8")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x8EDF68", Offset = "0x8EDF68", VA = "0x8EDF68")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x8EE300", Offset = "0x8EE300", VA = "0x8EE300")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x8EE380", Offset = "0x8EE380", VA = "0x8EE380")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x8EE418", Offset = "0x8EE418", VA = "0x8EE418")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x8EEBE0", Offset = "0x8EEBE0", VA = "0x8EEBE0")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x8EEC60", Offset = "0x8EEC60", VA = "0x8EEC60")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x8E85A4", Offset = "0x8E85A4", VA = "0x8E85A4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x4E2B20", Offset = "0x4E2B20")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x8EECF8", Offset = "0x8EECF8", VA = "0x8EECF8")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x8EED7C", Offset = "0x8EED7C", VA = "0x8EED7C")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x8EEDFC", Offset = "0x8EEDFC", VA = "0x8EEDFC")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x8EEE7C", Offset = "0x8EEE7C", VA = "0x8EEE7C")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x8EEEFC", Offset = "0x8EEEFC", VA = "0x8EEEFC")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x8EF8DC", Offset = "0x8EF8DC", VA = "0x8EF8DC")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x8EF95C", Offset = "0x8EF95C", VA = "0x8EF95C")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x8EFD48", Offset = "0x8EFD48", VA = "0x8EFD48")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x8EFCB8", Offset = "0x8EFCB8", VA = "0x8EFCB8")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x8EFDBC", Offset = "0x8EFDBC", VA = "0x8EFDBC")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20001B7")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x4DE7A8", Offset = "0x4DE7A8")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x8DE558", Offset = "0x8DE558", VA = "0x8DE558")]
		private void Start()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x8DE55C", Offset = "0x8DE55C", VA = "0x8DE55C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x8DE61C", Offset = "0x8DE61C", VA = "0x8DE61C")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DE7F4", Offset = "0x4DE7F4")]
		public bool autoRetrigger;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4DE82C", Offset = "0x4DE82C")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DE850", Offset = "0x4DE850")]
		public Transform[] playPositions;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x8D589C", Offset = "0x8D589C", VA = "0x8D589C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x8D5A20", Offset = "0x8D5A20", VA = "0x8D5A20")]
		private void Update()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x8D5BFC", Offset = "0x8D5BFC", VA = "0x8D5BFC")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x8D5A80", Offset = "0x8D5A80", VA = "0x8D5A80")]
		public void Play()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x8D5D3C", Offset = "0x8D5D3C", VA = "0x8D5D3C")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x8D5EB0", Offset = "0x8D5EB0", VA = "0x8D5EB0")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000AC9")]
		Default,
		[Token(Token = "0x4000ACA")]
		Preload,
		[Token(Token = "0x4000ACB")]
		ManualPreload
	}
	[Token(Token = "0x20001BA")]
	public enum Fade
	{
		[Token(Token = "0x4000ACD")]
		In,
		[Token(Token = "0x4000ACE")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20001BB")]
	public class SoundGroup
	{
		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DE888", Offset = "0x4DE888")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x8DE438", Offset = "0x8DE438", VA = "0x8DE438")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x8DE4CC", Offset = "0x8DE4CC", VA = "0x8DE4CC")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x8DCEA4", Offset = "0x8DCEA4", VA = "0x8DCEA4")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x8DCFE4", Offset = "0x8DCFE4", VA = "0x8DCFE4")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x8DDA9C", Offset = "0x8DDA9C", VA = "0x8DDA9C")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001BC")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000280")]
		public enum Fade
		{
			[Token(Token = "0x4000E13")]
			In,
			[Token(Token = "0x4000E14")]
			Out
		}

		[Token(Token = "0x2000281")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC190", Offset = "0x4DC190")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x8D9FC4", Offset = "0x8D9FC4", VA = "0x8D9FC4")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x8DC960", Offset = "0x8DC960", VA = "0x8DC960")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000282")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC1A0", Offset = "0x4DC1A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x8DC8C8", Offset = "0x8DC8C8", VA = "0x8DC8C8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x8DC8D0", Offset = "0x8DC8D0", VA = "0x8DC8D0")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DE8B4", Offset = "0x4DE8B4")]
		public bool makePersistent;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DE8EC", Offset = "0x4DE8EC")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DE924", Offset = "0x4DE924")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DE95C", Offset = "0x4DE95C")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DE994", Offset = "0x4DE994")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DE9CC", Offset = "0x4DE9CC")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEA04", Offset = "0x4DEA04")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEA3C", Offset = "0x4DEA3C")]
		public bool verboseLogging;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEA74", Offset = "0x4DEA74")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEAAC", Offset = "0x4DEAAC")]
		public float volumeSoundFX;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEAE4", Offset = "0x4DEAE4")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000082")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x8D5F70", Offset = "0x8D5F70", VA = "0x8D5F70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000083")]
		public static AudioManager Instance
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x8D6050", Offset = "0x8D6050", VA = "0x8D6050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		public static float NearFallOff
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x8D60B8", Offset = "0x8D60B8", VA = "0x8D60B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000085")]
		public static float FarFallOff
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0x8D612C", Offset = "0x8D612C", VA = "0x8D612C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000086")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x8D61A0", Offset = "0x8D61A0", VA = "0x8D61A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x8D6214", Offset = "0x8D6214", VA = "0x8D6214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x8D6288", Offset = "0x8D6288", VA = "0x8D6288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x8D7FD8", Offset = "0x8D7FD8", VA = "0x8D7FD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x8D62FC", Offset = "0x8D62FC", VA = "0x8D62FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x8D6524", Offset = "0x8D6524", VA = "0x8D6524")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x8D6300", Offset = "0x8D6300", VA = "0x8D6300")]
		private void Init()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x8D7150", Offset = "0x8D7150", VA = "0x8D7150")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x8D667C", Offset = "0x8D667C", VA = "0x8D667C")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x8D7774", Offset = "0x8D7774", VA = "0x8D7774")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x8D78F4", Offset = "0x8D78F4", VA = "0x8D78F4")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x8D7A90", Offset = "0x8D7A90", VA = "0x8D7A90")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x8D7B90", Offset = "0x8D7B90", VA = "0x8D7B90")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x8D7C20", Offset = "0x8D7C20", VA = "0x8D7C20")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x8D6AC8", Offset = "0x8D6AC8", VA = "0x8D6AC8")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x8D7154", Offset = "0x8D7154", VA = "0x8D7154")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x8D8258", Offset = "0x8D8258", VA = "0x8D8258")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x8D835C", Offset = "0x8D835C", VA = "0x8D835C")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x8D8464", Offset = "0x8D8464", VA = "0x8D8464")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x8D8120", Offset = "0x8D8120", VA = "0x8D8120")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x8D85D0", Offset = "0x8D85D0", VA = "0x8D85D0")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x8D8724", Offset = "0x8D8724", VA = "0x8D8724")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x8D88D4", Offset = "0x8D88D4", VA = "0x8D88D4")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x8D5C8C", Offset = "0x8D5C8C", VA = "0x8D5C8C")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x8D5E00", Offset = "0x8D5E00", VA = "0x8D5E00")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x8D8A80", Offset = "0x8D8A80", VA = "0x8D8A80")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x8D8B4C", Offset = "0x8D8B4C", VA = "0x8D8B4C")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x8D8BE0", Offset = "0x8D8BE0", VA = "0x8D8BE0")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x8D8CA4", Offset = "0x8D8CA4", VA = "0x8D8CA4")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x8D8D48", Offset = "0x8D8D48", VA = "0x8D8D48")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x8D8E28", Offset = "0x8D8E28", VA = "0x8D8E28")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x8D990C", Offset = "0x8D990C", VA = "0x8D990C")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x8D9FCC", Offset = "0x8D9FCC", VA = "0x8D9FCC")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x8DA1AC", Offset = "0x8DA1AC", VA = "0x8DA1AC")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x8DAEF0", Offset = "0x8DAEF0", VA = "0x8DAEF0")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x8D9030", Offset = "0x8D9030", VA = "0x8D9030")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x8DB010", Offset = "0x8DB010", VA = "0x8DB010")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x8DB0F4", Offset = "0x8DB0F4", VA = "0x8DB0F4")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x8DB1E4", Offset = "0x8DB1E4", VA = "0x8DB1E4")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x8DB59C", Offset = "0x8DB59C", VA = "0x8DB59C")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x8DB798", Offset = "0x8DB798", VA = "0x8DB798")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x8DB8B4", Offset = "0x8DB8B4", VA = "0x8DB8B4")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x8DBA7C", Offset = "0x8DBA7C", VA = "0x8DBA7C")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x8DBB54", Offset = "0x8DBB54", VA = "0x8DBB54")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x8DBC88", Offset = "0x8DBC88", VA = "0x8DBC88")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x8DC074", Offset = "0x8DC074", VA = "0x8DC074")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000AF6")]
		None = -1,
		[Token(Token = "0x4000AF7")]
		Reserved,
		[Token(Token = "0x4000AF8")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20001BE")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x8DCA5C", Offset = "0x8DCA5C", VA = "0x8DCA5C")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x8DCA00", Offset = "0x8DCA00", VA = "0x8DCA00")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000283")]
		public enum FadeState
		{
			[Token(Token = "0x4000E19")]
			Null,
			[Token(Token = "0x4000E1A")]
			FadingIn,
			[Token(Token = "0x4000E1B")]
			FadingOut,
			[Token(Token = "0x4000E1C")]
			Ducking
		}

		[Token(Token = "0x2000284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC1B0", Offset = "0x4DC1B0")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000129")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D2F")]
				[Address(RVA = "0x8DD4A8", Offset = "0x8DD4A8", VA = "0x8DD4A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D31")]
				[Address(RVA = "0x8DD510", Offset = "0x8DD510", VA = "0x8DD510", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x8DD188", Offset = "0x8DD188", VA = "0x8DD188")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x8DD3B8", Offset = "0x8DD3B8", VA = "0x8DD3B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x8DD3BC", Offset = "0x8DD3BC", VA = "0x8DD3BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x8DD4B0", Offset = "0x8DD4B0", VA = "0x8DD4B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000285")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC1C0", Offset = "0x4DC1C0")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x1700012B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D35")]
				[Address(RVA = "0x8DD95C", Offset = "0x8DD95C", VA = "0x8DD95C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D37")]
				[Address(RVA = "0x8DD9C4", Offset = "0x8DD9C4", VA = "0x8DD9C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x8DD348", Offset = "0x8DD348", VA = "0x8DD348")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x8DD7F0", Offset = "0x8DD7F0", VA = "0x8DD7F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x8DD7F4", Offset = "0x8DD7F4", VA = "0x8DD7F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x8DD964", Offset = "0x8DD964", VA = "0x8DD964", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000286")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DC1D0", Offset = "0x4DC1D0")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700012D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D3B")]
				[Address(RVA = "0x8DD780", Offset = "0x8DD780", VA = "0x8DD780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D3D")]
				[Address(RVA = "0x8DD7E8", Offset = "0x8DD7E8", VA = "0x8DD7E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x8DD374", Offset = "0x8DD374", VA = "0x8DD374")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x8DD518", Offset = "0x8DD518", VA = "0x8DD518", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x8DD51C", Offset = "0x8DD51C", VA = "0x8DD51C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x8DD788", Offset = "0x8DD788", VA = "0x8DD788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x1700008A")]
		public float volume
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x8DAED4", Offset = "0x8DAED4", VA = "0x8DAED4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0x8DCAFC", Offset = "0x8DCAFC", VA = "0x8DCAFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public float pitch
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x8DCB18", Offset = "0x8DCB18", VA = "0x8DCB18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0x8DCB34", Offset = "0x8DCB34", VA = "0x8DCB34")]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public AudioClip clip
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0x8DCB50", Offset = "0x8DCB50", VA = "0x8DCB50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0x8DCB6C", Offset = "0x8DCB6C", VA = "0x8DCB6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public float time
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0x8DCB88", Offset = "0x8DCB88", VA = "0x8DCB88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0x8D8E0C", Offset = "0x8D8E0C", VA = "0x8D8E0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public float length
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0x8DCBA4", Offset = "0x8DCBA4", VA = "0x8DCBA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008F")]
		public bool loop
		{
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0x8DCC5C", Offset = "0x8DCC5C", VA = "0x8DCC5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x8DCC78", Offset = "0x8DCC78", VA = "0x8DCC78")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public bool mute
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x8DCC98", Offset = "0x8DCC98", VA = "0x8DCC98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x8DCCB4", Offset = "0x8DCCB4", VA = "0x8DCCB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0x8DCCD4", Offset = "0x8DCCD4", VA = "0x8DCCD4")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x8DCCF0", Offset = "0x8DCCF0", VA = "0x8DCCF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public bool isPlaying
		{
			[Token(Token = "0x6000A20")]
			[Address(RVA = "0x8DCD0C", Offset = "0x8DCD0C", VA = "0x8DCD0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x8DCD28", Offset = "0x8DCD28", VA = "0x8DCD28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x8DAEC0", Offset = "0x8DAEC0", VA = "0x8DAEC0")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x8DCF34", Offset = "0x8DCF34", VA = "0x8DCF34")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x8DB1DC", Offset = "0x8DB1DC", VA = "0x8DB1DC")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x8DCF3C", Offset = "0x8DCF3C", VA = "0x8DCF3C")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x8DCF44", Offset = "0x8DCF44", VA = "0x8DCF44")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x8DB9D4", Offset = "0x8DB9D4", VA = "0x8DB9D4")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x8D81EC", Offset = "0x8D81EC", VA = "0x8D81EC")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x8DCF4C", Offset = "0x8DCF4C", VA = "0x8DCF4C")]
		public void Play()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x8DCFAC", Offset = "0x8DCFAC", VA = "0x8DCFAC")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x8D8040", Offset = "0x8D8040", VA = "0x8D8040")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x8DD074", Offset = "0x8DD074", VA = "0x8DD074")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x8DB4A0", Offset = "0x8DB4A0", VA = "0x8DB4A0")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x8DB6E0", Offset = "0x8DB6E0", VA = "0x8DB6E0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x8D8590", Offset = "0x8D8590", VA = "0x8D8590")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x8DD0CC", Offset = "0x8DD0CC", VA = "0x8DD0CC")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x8DD0F8", Offset = "0x8DD0F8", VA = "0x8DD0F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E2B84", Offset = "0x4E2B84")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x8DD1B4", Offset = "0x8DD1B4", VA = "0x8DD1B4")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x8D898C", Offset = "0x8D898C", VA = "0x8D898C")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x8D8A08", Offset = "0x8D8A08", VA = "0x8D8A08")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x8D883C", Offset = "0x8D883C", VA = "0x8D883C")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x8D8688", Offset = "0x8D8688", VA = "0x8D8688")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x8DD21C", Offset = "0x8DD21C", VA = "0x8DD21C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E2BE8", Offset = "0x4E2BE8")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x8DD2A0", Offset = "0x8DD2A0", VA = "0x8DD2A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4E2C4C", Offset = "0x4E2C4C")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x8DD3A0", Offset = "0x8DD3A0", VA = "0x8DD3A0")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000B0F")]
		Random,
		[Token(Token = "0x4000B10")]
		Sequential
	}
	[Token(Token = "0x20001C2")]
	public enum FreqHint
	{
		[Token(Token = "0x4000B12")]
		None,
		[Token(Token = "0x4000B13")]
		Wide,
		[Token(Token = "0x4000B14")]
		Narrow
	}
	[Token(Token = "0x20001C3")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000B16")]
		VeryLow = -2,
		[Token(Token = "0x4000B17")]
		Low,
		[Token(Token = "0x4000B18")]
		Default,
		[Token(Token = "0x4000B19")]
		High,
		[Token(Token = "0x4000B1A")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20001C4")]
	public class OSPProps
	{
		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEBCC", Offset = "0x4DEBCC")]
		public bool enableSpatialization;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEC04", Offset = "0x4DEC04")]
		public bool useFastOverride;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEC3C", Offset = "0x4DEC3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DEC3C", Offset = "0x4DEC3C")]
		public float gain;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEC90", Offset = "0x4DEC90")]
		public bool enableInvSquare;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DECC8", Offset = "0x4DECC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DECC8", Offset = "0x4DECC8")]
		public float volumetric;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DED20", Offset = "0x4DED20")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4DED20", Offset = "0x4DED20")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x8DCA6C", Offset = "0x8DCA6C", VA = "0x8DCA6C")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C5")]
	public class SoundFX
	{
		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DED80", Offset = "0x4DED80")]
		public string name;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEDB8", Offset = "0x4DEDB8")]
		public SoundFXNext playback;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEDF0", Offset = "0x4DEDF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DEDF0", Offset = "0x4DEDF0")]
		public float volume;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEE44", Offset = "0x4DEE44")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4DEE44", Offset = "0x4DEE44")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEEA0", Offset = "0x4DEEA0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4DEEA0", Offset = "0x4DEEA0")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEF00", Offset = "0x4DEF00")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEF38", Offset = "0x4DEF38")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEF70", Offset = "0x4DEF70")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DEFA8", Offset = "0x4DEFA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DEFA8", Offset = "0x4DEFA8")]
		public float spread;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF000", Offset = "0x4DF000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF000", Offset = "0x4DF000")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF054", Offset = "0x4DF054")]
		public SoundPriority priority;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF08C", Offset = "0x4DF08C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4DF08C", Offset = "0x4DF08C")]
		public Vector2 delay;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF0E8", Offset = "0x4DF0E8")]
		public bool looping;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF120", Offset = "0x4DF120")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000093")]
		public int Length
		{
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x8DD9CC", Offset = "0x8DD9CC", VA = "0x8DD9CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000094")]
		public bool IsValid
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x8DD9E8", Offset = "0x8DD9E8", VA = "0x8DD9E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000095")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x8DDA8C", Offset = "0x8DDA8C", VA = "0x8DDA8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0x8DDA94", Offset = "0x8DDA94", VA = "0x8DDA94")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x8DADC8", Offset = "0x8DADC8", VA = "0x8DADC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000097")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x8DADFC", Offset = "0x8DADFC", VA = "0x8DADFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x8DC37C", Offset = "0x8DC37C", VA = "0x8DC37C")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x8DACF8", Offset = "0x8DACF8", VA = "0x8DACF8")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x8DAE20", Offset = "0x8DAE20", VA = "0x8DAE20")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x8DADD4", Offset = "0x8DADD4", VA = "0x8DADD4")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x8DDABC", Offset = "0x8DDABC", VA = "0x8DDABC")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x8DAE14", Offset = "0x8DAE14", VA = "0x8DAE14")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x8DDBB8", Offset = "0x8DDBB8", VA = "0x8DDBB8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x8DDC94", Offset = "0x8DDC94", VA = "0x8DDC94")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x8DDDA8", Offset = "0x8DDDA8", VA = "0x8DDDA8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x8DDE34", Offset = "0x8DDE34", VA = "0x8DDE34")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x8DDEC8", Offset = "0x8DDEC8", VA = "0x8DDEC8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x8DDF54", Offset = "0x8DDF54", VA = "0x8DDF54")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x8DDFE0", Offset = "0x8DDFE0", VA = "0x8DDFE0")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C6")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000098")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x8DE058", Offset = "0x8DE058", VA = "0x8DE058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		public string name
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x8DE14C", Offset = "0x8DE14C", VA = "0x8DE14C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0x8DE154", Offset = "0x8DE154", VA = "0x8DE154")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public int Length
		{
			[Token(Token = "0x6000A52")]
			[Address(RVA = "0x8DE15C", Offset = "0x8DE15C", VA = "0x8DE15C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700009B")]
		public bool IsValid
		{
			[Token(Token = "0x6000A53")]
			[Address(RVA = "0x8DE1A0", Offset = "0x8DE1A0", VA = "0x8DE1A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x8DE088", Offset = "0x8DE088", VA = "0x8DE088")]
		private void Init()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x8DE1D8", Offset = "0x8DE1D8", VA = "0x8DE1D8")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x8DE210", Offset = "0x8DE210", VA = "0x8DE210")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x8DE250", Offset = "0x8DE250", VA = "0x8DE250")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x8D5C0C", Offset = "0x8D5C0C", VA = "0x8D5C0C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x8DE298", Offset = "0x8DE298", VA = "0x8DE298")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x8DE2D8", Offset = "0x8DE2D8", VA = "0x8DE2D8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x8DE328", Offset = "0x8DE328", VA = "0x8DE328")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x8DE360", Offset = "0x8DE360", VA = "0x8DE360")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x8DE3A0", Offset = "0x8DE3A0", VA = "0x8DE3A0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x8DE3D8", Offset = "0x8DE3D8", VA = "0x8DE3D8")]
		public SoundFXRef()
		{
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x20001C7")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x8F74D4", Offset = "0x8F74D4", VA = "0x8F74D4")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x8F839C", Offset = "0x8F839C", VA = "0x8F839C")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x8FF77C", Offset = "0x8FF77C", VA = "0x8FF77C")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x8FF7A8", Offset = "0x8FF7A8", VA = "0x8FF7A8")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x2000287")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x4000E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x4000E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x4000E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x2000288")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4000E43")]
			DepthTexture,
			[Token(Token = "0x4000E44")]
			DepthNormalsTexture,
			[Token(Token = "0x4000E45")]
			GBuffer
		}

		[Token(Token = "0x4000B3B")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x4000B3C")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x1700009C")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0x70CCAC", Offset = "0x70CCAC", VA = "0x70CCAC")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x1700009D")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x70CD58", Offset = "0x70CD58", VA = "0x70CD58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009E")]
		public override bool active
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0x70CDF0", Offset = "0x70CDF0", VA = "0x70CDF0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x70CE6C", Offset = "0x70CE6C", VA = "0x70CE6C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x70CEA8", Offset = "0x70CEA8", VA = "0x70CEA8", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x70CEF0", Offset = "0x70CEF0", VA = "0x70CEF0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x70CF54", Offset = "0x70CF54", VA = "0x70CF54", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x70D910", Offset = "0x70D910", VA = "0x70D910")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x2000289")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x4000B3E")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x1700009F")]
		public override bool active
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x70DE84", Offset = "0x70DE84", VA = "0x70DE84", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x70DF00", Offset = "0x70DF00", VA = "0x70DF00")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x70E970", Offset = "0x70E970", VA = "0x70E970")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x200028A")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x4000E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x200028B")]
		private enum Pass
		{
			[Token(Token = "0x4000E58")]
			Depth,
			[Token(Token = "0x4000E59")]
			Normals,
			[Token(Token = "0x4000E5A")]
			MovecOpacity,
			[Token(Token = "0x4000E5B")]
			MovecImaging,
			[Token(Token = "0x4000E5C")]
			MovecArrows
		}

		[Token(Token = "0x200028C")]
		private class ArrowArray
		{
			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DF384", Offset = "0x4DF384")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DF394", Offset = "0x4DF394")]
			private int <columnCount>k__BackingField;

			[Token(Token = "0x4000E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DF3A4", Offset = "0x4DF3A4")]
			private int <rowCount>k__BackingField;

			[Token(Token = "0x1700012F")]
			public Mesh mesh
			{
				[Token(Token = "0x6000D41")]
				[Address(RVA = "0x70FCF8", Offset = "0x70FCF8", VA = "0x70FCF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E3B90", Offset = "0x4E3B90")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000D42")]
				[Address(RVA = "0x70FD00", Offset = "0x70FD00", VA = "0x70FD00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E3BA0", Offset = "0x4E3BA0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000130")]
			public int columnCount
			{
				[Token(Token = "0x6000D43")]
				[Address(RVA = "0x70FD08", Offset = "0x70FD08", VA = "0x70FD08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E3BB0", Offset = "0x4E3BB0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000D44")]
				[Address(RVA = "0x70FD10", Offset = "0x70FD10", VA = "0x70FD10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E3BC0", Offset = "0x4E3BC0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000131")]
			public int rowCount
			{
				[Token(Token = "0x6000D45")]
				[Address(RVA = "0x70FD18", Offset = "0x70FD18", VA = "0x70FD18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E3BD0", Offset = "0x4E3BD0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000D46")]
				[Address(RVA = "0x70FD20", Offset = "0x70FD20", VA = "0x70FD20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E3BE0", Offset = "0x4E3BE0")]
				private set
				{
				}
			}

			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x70F828", Offset = "0x70F828", VA = "0x70F828")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x70F7FC", Offset = "0x70F7FC", VA = "0x70F7FC")]
			public void Release()
			{
			}

			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x70F7F4", Offset = "0x70F7F4", VA = "0x70F7F4")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x4000B41")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x170000A0")]
		public override bool active
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0x70ECC8", Offset = "0x70ECC8", VA = "0x70ECC8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x70ED5C", Offset = "0x70ED5C", VA = "0x70ED5C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x70EDCC", Offset = "0x70EDCC", VA = "0x70EDCC", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x70EE2C", Offset = "0x70EE2C", VA = "0x70EE2C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x70EE74", Offset = "0x70EE74", VA = "0x70EE74", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x70EF84", Offset = "0x70EF84", VA = "0x70EF84")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x70F09C", Offset = "0x70F09C", VA = "0x70F09C")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x70F160", Offset = "0x70F160", VA = "0x70F160")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x70F6FC", Offset = "0x70F6FC", VA = "0x70F6FC")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x70FC70", Offset = "0x70FC70", VA = "0x70FC70", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x70FCA8", Offset = "0x70FCA8", VA = "0x70FCA8")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x200028D")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x170000A1")]
		public override bool active
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x8F1084", Offset = "0x8F1084", VA = "0x8F1084", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x8F1100", Offset = "0x8F1100", VA = "0x8F1100", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x8F11C8", Offset = "0x8F11C8", VA = "0x8F11C8", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x8F1480", Offset = "0x8F1480", VA = "0x8F1480")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x200028E")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x4000E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x4000B44")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x4000B45")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x4000B46")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x170000A2")]
		public override bool active
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x8F159C", Offset = "0x8F159C", VA = "0x8F159C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x8F160C", Offset = "0x8F160C", VA = "0x8F160C")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x8F1638", Offset = "0x8F1638", VA = "0x8F1638")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x8F16F8", Offset = "0x8F16F8", VA = "0x8F16F8")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x8F17EC", Offset = "0x8F17EC", VA = "0x8F17EC")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x8F18E0", Offset = "0x8F18E0", VA = "0x8F18E0")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x8F19DC", Offset = "0x8F19DC", VA = "0x8F19DC")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x8F1A68", Offset = "0x8F1A68", VA = "0x8F1A68")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x8F1BE8", Offset = "0x8F1BE8", VA = "0x8F1BE8")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x8F1D18", Offset = "0x8F1D18", VA = "0x8F1D18")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x8F1DC0", Offset = "0x8F1DC0", VA = "0x8F1DC0")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x8F1E64", Offset = "0x8F1E64", VA = "0x8F1E64")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x8F1FCC", Offset = "0x8F1FCC", VA = "0x8F1FCC")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x8F2068", Offset = "0x8F2068", VA = "0x8F2068")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x8F2110", Offset = "0x8F2110", VA = "0x8F2110")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x8F2680", Offset = "0x8F2680", VA = "0x8F2680")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x8F272C", Offset = "0x8F272C", VA = "0x8F272C")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x8F315C", Offset = "0x8F315C", VA = "0x8F315C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x8F339C", Offset = "0x8F339C", VA = "0x8F339C")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x8F34E4", Offset = "0x8F34E4", VA = "0x8F34E4", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x8F3550", Offset = "0x8F3550", VA = "0x8F3550")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x200028F")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x4000B49")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x4000B4B")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x170000A3")]
		public override bool active
		{
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x8F44AC", Offset = "0x8F44AC", VA = "0x8F44AC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x8F452C", Offset = "0x8F452C", VA = "0x8F452C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x8F4534", Offset = "0x8F4534", VA = "0x8F4534")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x8F4600", Offset = "0x8F4600", VA = "0x8F4600")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x8F46AC", Offset = "0x8F46AC", VA = "0x8F46AC")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x8F478C", Offset = "0x8F478C", VA = "0x8F478C")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x8F47DC", Offset = "0x8F47DC", VA = "0x8F47DC")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x8F5224", Offset = "0x8F5224", VA = "0x8F5224", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x8F52AC", Offset = "0x8F52AC", VA = "0x8F52AC")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x2000290")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x4000E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x4000B4E")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x170000A4")]
		public override bool active
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0x8F5550", Offset = "0x8F5550", VA = "0x8F5550", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x8F55C0", Offset = "0x8F55C0", VA = "0x8F55C0", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x8F55C8", Offset = "0x8F55C8", VA = "0x8F55C8")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x8F571C", Offset = "0x8F571C", VA = "0x8F571C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x8F58F8", Offset = "0x8F58F8", VA = "0x8F58F8")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x2000291")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x4000B57")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x4000B58")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x4000B59")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x170000A5")]
		public override bool active
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x8F59F8", Offset = "0x8F59F8", VA = "0x8F59F8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x8F5A74", Offset = "0x8F5A74", VA = "0x8F5A74")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x8F5A80", Offset = "0x8F5A80", VA = "0x8F5A80", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x8F5A8C", Offset = "0x8F5A8C", VA = "0x8F5A8C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x8F5B84", Offset = "0x8F5B84", VA = "0x8F5B84")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x8F5CA8", Offset = "0x8F5CA8", VA = "0x8F5CA8")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x8F660C", Offset = "0x8F660C", VA = "0x8F660C")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x8F6788", Offset = "0x8F6788", VA = "0x8F6788")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x2000292")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x4000B5A")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x170000A6")]
		public override bool active
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x8F69FC", Offset = "0x8F69FC", VA = "0x8F69FC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x8F6AB4", Offset = "0x8F6AB4", VA = "0x8F6AB4", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x8F6AFC", Offset = "0x8F6AFC", VA = "0x8F6AFC", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x8F6B04", Offset = "0x8F6B04", VA = "0x8F6B04", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x8F6B0C", Offset = "0x8F6B0C", VA = "0x8F6B0C", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x8F6FBC", Offset = "0x8F6FBC", VA = "0x8F6FBC")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000293")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x170000A7")]
		public override bool active
		{
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x8F7124", Offset = "0x8F7124", VA = "0x8F7124", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x8F719C", Offset = "0x8F719C", VA = "0x8F719C")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x8F7400", Offset = "0x8F7400", VA = "0x8F7400")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x2000294")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x170000A8")]
		public override bool active
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x8F7500", Offset = "0x8F7500", VA = "0x8F7500", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x8F758C", Offset = "0x8F758C", VA = "0x8F758C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x8F75B4", Offset = "0x8F75B4", VA = "0x8F75B4", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x8F7974", Offset = "0x8F7974", VA = "0x8F7974")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x2000295")]
		private static class Uniforms
		{
			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x4000E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x4000EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x4000EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4000EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x4000EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x4000EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x4000EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x4000EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x4000EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x2000296")]
		private enum Pass
		{
			[Token(Token = "0x4000EAF")]
			VelocitySetup,
			[Token(Token = "0x4000EB0")]
			TileMax1,
			[Token(Token = "0x4000EB1")]
			TileMax2,
			[Token(Token = "0x4000EB2")]
			TileMaxV,
			[Token(Token = "0x4000EB3")]
			NeighborMax,
			[Token(Token = "0x4000EB4")]
			Reconstruction,
			[Token(Token = "0x4000EB5")]
			FrameCompression,
			[Token(Token = "0x4000EB6")]
			FrameBlendingChroma,
			[Token(Token = "0x4000EB7")]
			FrameBlendingRaw
		}

		[Token(Token = "0x2000297")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x4000EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x4000EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x8F8438", Offset = "0x8F8438", VA = "0x8F8438")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x8FA4D8", Offset = "0x8FA4D8", VA = "0x8FA4D8")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0x8F8620", Offset = "0x8F8620", VA = "0x8F8620")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x8F8D3C", Offset = "0x8F8D3C", VA = "0x8F8D3C")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x2000298")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x20002D0")]
			private struct Frame
			{
				[Token(Token = "0x4000FB7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x4000FB8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x4000FB9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x4000FBA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x6000D86")]
				[Address(RVA = "0x546C44", Offset = "0x546C44", VA = "0x546C44")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x6000D87")]
				[Address(RVA = "0x546C4C", Offset = "0x546C4C", VA = "0x546C4C")]
				public void Release()
				{
				}

				[Token(Token = "0x6000D88")]
				[Address(RVA = "0x546C54", Offset = "0x546C54", VA = "0x546C54")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x6000D89")]
				[Address(RVA = "0x546C88", Offset = "0x546C88", VA = "0x546C88")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x4000EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x4000EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x4000EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0x8F84E4", Offset = "0x8F84E4", VA = "0x8F84E4")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x8F869C", Offset = "0x8F869C", VA = "0x8F869C")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x8F9BEC", Offset = "0x8F9BEC", VA = "0x8F9BEC")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x8F968C", Offset = "0x8F968C", VA = "0x8F968C")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x8F9D88", Offset = "0x8F9D88", VA = "0x8F9D88")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x8F9DC0", Offset = "0x8F9DC0", VA = "0x8F9DC0")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x8FA37C", Offset = "0x8FA37C", VA = "0x8FA37C")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x170000A9")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x8F83D0", Offset = "0x8F83D0", VA = "0x8F83D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x8F847C", Offset = "0x8F847C", VA = "0x8F847C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public override bool active
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x8F855C", Offset = "0x8F855C", VA = "0x8F855C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x8F8628", Offset = "0x8F8628", VA = "0x8F8628", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x8F8670", Offset = "0x8F8670", VA = "0x8F8670")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x8F8724", Offset = "0x8F8724", VA = "0x8F8724", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x8F872C", Offset = "0x8F872C", VA = "0x8F872C", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x8F8734", Offset = "0x8F8734", VA = "0x8F8734", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x8F8740", Offset = "0x8F8740", VA = "0x8F8740", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x8F9D20", Offset = "0x8F9D20", VA = "0x8F9D20", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x8F9D30", Offset = "0x8F9D30", VA = "0x8F9D30")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x2000299")]
		private static class Uniforms
		{
			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x4000EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x200029A")]
		private enum PassIndex
		{
			[Token(Token = "0x4000EE2")]
			RayTraceStep,
			[Token(Token = "0x4000EE3")]
			CompositeFinal,
			[Token(Token = "0x4000EE4")]
			Blur,
			[Token(Token = "0x4000EE5")]
			CompositeSSR,
			[Token(Token = "0x4000EE6")]
			MinMipGeneration,
			[Token(Token = "0x4000EE7")]
			HitPointToReflections,
			[Token(Token = "0x4000EE8")]
			BilateralKeyPack,
			[Token(Token = "0x4000EE9")]
			BlitDepthAsCSZ,
			[Token(Token = "0x4000EEA")]
			PoissonBlur
		}

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x170000AC")]
		public override bool active
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x8FD3AC", Offset = "0x8FD3AC", VA = "0x8FD3AC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x8FD3A4", Offset = "0x8FD3A4", VA = "0x8FD3A4", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x8FD42C", Offset = "0x8FD42C", VA = "0x8FD42C", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x8FD554", Offset = "0x8FD554", VA = "0x8FD554", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x8FD59C", Offset = "0x8FD59C", VA = "0x8FD59C", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x8FD5A4", Offset = "0x8FD5A4", VA = "0x8FD5A4", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x8FAE9C", Offset = "0x8FAE9C", VA = "0x8FAE9C")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x200029B")]
		private static class Uniforms
		{
			[Token(Token = "0x4000EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x4000B64")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x4000B65")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DF158", Offset = "0x4DF158")]
		private Vector2 <jitterVector>k__BackingField;

		[Token(Token = "0x170000AD")]
		public override bool active
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x8FEDF0", Offset = "0x8FEDF0", VA = "0x8FEDF0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AE")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0x8FEE90", Offset = "0x8FEE90", VA = "0x8FEE90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2CB0", Offset = "0x4E2CB0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0x8FEE98", Offset = "0x8FEE98", VA = "0x8FEE98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2CC0", Offset = "0x4E2CC0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x8FEE88", Offset = "0x8FEE88", VA = "0x8FEE88", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x8FCE6C", Offset = "0x8FCE6C", VA = "0x8FCE6C")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x8FB8F4", Offset = "0x8FB8F4", VA = "0x8FB8F4")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x8FC404", Offset = "0x8FC404", VA = "0x8FC404")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x8FF5C0", Offset = "0x8FF5C0", VA = "0x8FF5C0")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x8FEEA0", Offset = "0x8FEEA0", VA = "0x8FEEA0")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x8FEF68", Offset = "0x8FEF68", VA = "0x8FEF68")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x8FF42C", Offset = "0x8FF42C", VA = "0x8FF42C")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x8FF604", Offset = "0x8FF604", VA = "0x8FF604", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x8FAF10", Offset = "0x8FAF10", VA = "0x8FAF10")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x200029C")]
		private static class Uniforms
		{
			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x170000AF")]
		public override bool active
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0x8FF7B0", Offset = "0x8FF7B0", VA = "0x8FF7B0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x8FF8E0", Offset = "0x8FF8E0", VA = "0x8FF8E0", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x8FCAD0", Offset = "0x8FCAD0", VA = "0x8FCAD0")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x8FAF80", Offset = "0x8FAF80", VA = "0x8FAF80")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x200029D")]
		private static class Uniforms
		{
			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x170000B0")]
		public override bool active
		{
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0x8FFAEC", Offset = "0x8FFAEC", VA = "0x8FFAEC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x8FFB5C", Offset = "0x8FFB5C", VA = "0x8FFB5C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x8FAFD0", Offset = "0x8FAFD0", VA = "0x8FAFD0")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DB")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x200029E")]
		public enum SampleCount
		{
			[Token(Token = "0x4000EF8")]
			Lowest = 3,
			[Token(Token = "0x4000EF9")]
			Low = 6,
			[Token(Token = "0x4000EFA")]
			Medium = 10,
			[Token(Token = "0x4000EFB")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x200029F")]
		public struct Settings
		{
			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF3B4", Offset = "0x4DF3B4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF3B4", Offset = "0x4DF3B4")]
			public float intensity;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x4DF408", Offset = "0x4DF408")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF408", Offset = "0x4DF408")]
			public float radius;

			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF45C", Offset = "0x4DF45C")]
			public SampleCount sampleCount;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF494", Offset = "0x4DF494")]
			public bool downsampling;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF4CC", Offset = "0x4DF4CC")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF504", Offset = "0x4DF504")]
			public bool ambientOnly;

			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF53C", Offset = "0x4DF53C")]
			public bool highPrecision;

			[Token(Token = "0x17000132")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D62")]
				[Address(RVA = "0x70DBCC", Offset = "0x70DBCC", VA = "0x70DBCC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000B1")]
		public Settings settings
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x70DBA0", Offset = "0x70DBA0", VA = "0x70DBA0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x70DBB0", Offset = "0x70DBB0", VA = "0x70DBB0")]
			set
			{
			}
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x70DBBC", Offset = "0x70DBBC", VA = "0x70DBBC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x70DBE4", Offset = "0x70DBE4", VA = "0x70DBE4")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DC")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x20002A0")]
		public enum Method
		{
			[Token(Token = "0x4000F04")]
			Fxaa,
			[Token(Token = "0x4000F05")]
			Taa
		}

		[Token(Token = "0x20002A1")]
		public enum FxaaPreset
		{
			[Token(Token = "0x4000F07")]
			ExtremePerformance,
			[Token(Token = "0x4000F08")]
			Performance,
			[Token(Token = "0x4000F09")]
			Default,
			[Token(Token = "0x4000F0A")]
			Quality,
			[Token(Token = "0x4000F0B")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x20002A2")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF574", Offset = "0x4DF574")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF574", Offset = "0x4DF574")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF5C8", Offset = "0x4DF5C8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF5C8", Offset = "0x4DF5C8")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF624", Offset = "0x4DF624")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF624", Offset = "0x4DF624")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x20002A3")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF67C", Offset = "0x4DF67C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF67C", Offset = "0x4DF67C")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF6D4", Offset = "0x4DF6D4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF6D4", Offset = "0x4DF6D4")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4000F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF728", Offset = "0x4DF728")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF728", Offset = "0x4DF728")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4000F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF77C", Offset = "0x4DF77C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF77C", Offset = "0x4DF77C")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4000F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x20002A4")]
		public struct FxaaSettings
		{
			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x17000133")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x6000D65")]
				[Address(RVA = "0x70DE5C", Offset = "0x70DE5C", VA = "0x70DE5C")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002A5")]
		public struct TaaSettings
		{
			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF7D8", Offset = "0x4DF7D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF7D8", Offset = "0x4DF7D8")]
			public float jitterSpread;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF830", Offset = "0x4DF830")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF830", Offset = "0x4DF830")]
			public float sharpen;

			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF884", Offset = "0x4DF884")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF884", Offset = "0x4DF884")]
			public float stationaryBlending;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF8DC", Offset = "0x4DF8DC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF8DC", Offset = "0x4DF8DC")]
			public float motionBlending;

			[Token(Token = "0x17000134")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x6000D66")]
				[Address(RVA = "0x70DE64", Offset = "0x70DE64", VA = "0x70DE64")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002A6")]
		public struct Settings
		{
			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x4000F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x17000135")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D67")]
				[Address(RVA = "0x70DC3C", Offset = "0x70DC3C", VA = "0x70DC3C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000B2")]
		public Settings settings
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0x70DBF8", Offset = "0x70DBF8", VA = "0x70DBF8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0x70DC0C", Offset = "0x70DC0C", VA = "0x70DC0C")]
			set
			{
			}
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x70DC20", Offset = "0x70DC20", VA = "0x70DC20", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x70DC58", Offset = "0x70DC58", VA = "0x70DC58")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DD")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20002A7")]
		public struct BloomSettings
		{
			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x4DF934", Offset = "0x4DF934")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF934", Offset = "0x4DF934")]
			public float intensity;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x4DF984", Offset = "0x4DF984")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF984", Offset = "0x4DF984")]
			public float threshold;

			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DF9D4", Offset = "0x4DF9D4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DF9D4", Offset = "0x4DF9D4")]
			public float softKnee;

			[Token(Token = "0x4000F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFA28", Offset = "0x4DFA28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFA28", Offset = "0x4DFA28")]
			public float radius;

			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFA7C", Offset = "0x4DFA7C")]
			public bool antiFlicker;

			[Token(Token = "0x17000136")]
			public float thresholdLinear
			{
				[Token(Token = "0x6000D69")]
				[Address(RVA = "0x53E2D0", Offset = "0x53E2D0", VA = "0x53E2D0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000D68")]
				[Address(RVA = "0x53E2C8", Offset = "0x53E2C8", VA = "0x53E2C8")]
				set
				{
				}
			}

			[Token(Token = "0x17000137")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x6000D6A")]
				[Address(RVA = "0x70ECA0", Offset = "0x70ECA0", VA = "0x70ECA0")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002A8")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFAB4", Offset = "0x4DFAB4")]
			public Texture texture;

			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x4DFAEC", Offset = "0x4DFAEC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFAEC", Offset = "0x4DFAEC")]
			public float intensity;

			[Token(Token = "0x17000138")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x6000D6B")]
				[Address(RVA = "0x70ECBC", Offset = "0x70ECBC", VA = "0x70ECBC")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002A9")]
		public struct Settings
		{
			[Token(Token = "0x4000F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x17000139")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D6C")]
				[Address(RVA = "0x70EBC8", Offset = "0x70EBC8", VA = "0x70EBC8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000B3")]
		public Settings settings
		{
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x70EB6C", Offset = "0x70EB6C", VA = "0x70EB6C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x70EB84", Offset = "0x70EB84", VA = "0x70EB84")]
			set
			{
			}
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x70EB9C", Offset = "0x70EB9C", VA = "0x70EB9C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x70EBF4", Offset = "0x70EBF4", VA = "0x70EBF4")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DE")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20002AA")]
		public struct DepthSettings
		{
			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFB3C", Offset = "0x4DFB3C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFB3C", Offset = "0x4DFB3C")]
			public float scale;

			[Token(Token = "0x1700013A")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x6000D6D")]
				[Address(RVA = "0x8F1060", Offset = "0x8F1060", VA = "0x8F1060")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002AB")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFB90", Offset = "0x4DFB90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFB90", Offset = "0x4DFB90")]
			public float sourceOpacity;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFBE4", Offset = "0x4DFBE4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFBE4", Offset = "0x4DFBE4")]
			public float motionImageOpacity;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x4DFC38", Offset = "0x4DFC38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFC38", Offset = "0x4DFC38")]
			public float motionImageAmplitude;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFC88", Offset = "0x4DFC88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFC88", Offset = "0x4DFC88")]
			public float motionVectorsOpacity;

			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFCDC", Offset = "0x4DFCDC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFCDC", Offset = "0x4DFCDC")]
			public int motionVectorsResolution;

			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x4DFD34", Offset = "0x4DFD34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFD34", Offset = "0x4DFD34")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x1700013B")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x6000D6E")]
				[Address(RVA = "0x8F1068", Offset = "0x8F1068", VA = "0x8F1068")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x20002AC")]
		public enum Mode
		{
			[Token(Token = "0x4000F2E")]
			None,
			[Token(Token = "0x4000F2F")]
			Depth,
			[Token(Token = "0x4000F30")]
			Normals,
			[Token(Token = "0x4000F31")]
			MotionVectors,
			[Token(Token = "0x4000F32")]
			AmbientOcclusion,
			[Token(Token = "0x4000F33")]
			EyeAdaptation,
			[Token(Token = "0x4000F34")]
			FocusPlane,
			[Token(Token = "0x4000F35")]
			PreGradingLog,
			[Token(Token = "0x4000F36")]
			LogLut,
			[Token(Token = "0x4000F37")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x20002AD")]
		public struct Settings
		{
			[Token(Token = "0x4000F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x4000F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x4000F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x1700013C")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D6F")]
				[Address(RVA = "0x8F1004", Offset = "0x8F1004", VA = "0x8F1004")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000B4")]
		public Settings settings
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x8F0F88", Offset = "0x8F0F88", VA = "0x8F0F88")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x8F0F98", Offset = "0x8F0F98", VA = "0x8F0F98")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public bool willInterrupt
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x8F0FA8", Offset = "0x8F0FA8", VA = "0x8F0FA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x8F0FDC", Offset = "0x8F0FDC", VA = "0x8F0FDC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x8F0FCC", Offset = "0x8F0FCC", VA = "0x8F0FCC")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x8F102C", Offset = "0x8F102C", VA = "0x8F102C")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DF")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20002AE")]
		public struct Settings
		{
			[Token(Token = "0x4000F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFD84", Offset = "0x4DFD84")]
			public Texture2D spectralTexture;

			[Token(Token = "0x4000F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFDBC", Offset = "0x4DFDBC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFDBC", Offset = "0x4DFDBC")]
			public float intensity;

			[Token(Token = "0x1700013D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D70")]
				[Address(RVA = "0x8F1578", Offset = "0x8F1578", VA = "0x8F1578")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000B6")]
		public Settings settings
		{
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x8F1554", Offset = "0x8F1554", VA = "0x8F1554")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x8F1560", Offset = "0x8F1560", VA = "0x8F1560")]
			set
			{
			}
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x8F1568", Offset = "0x8F1568", VA = "0x8F1568", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x8F1588", Offset = "0x8F1588", VA = "0x8F1588")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E0")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x20002AF")]
		public enum Tonemapper
		{
			[Token(Token = "0x4000F3E")]
			None,
			[Token(Token = "0x4000F3F")]
			ACES,
			[Token(Token = "0x4000F40")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x20002B0")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x4000F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFE10", Offset = "0x4DFE10")]
			public Tonemapper tonemapper;

			[Token(Token = "0x4000F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFE48", Offset = "0x4DFE48")]
			public float neutralBlackIn;

			[Token(Token = "0x4000F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFE68", Offset = "0x4DFE68")]
			public float neutralWhiteIn;

			[Token(Token = "0x4000F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFE80", Offset = "0x4DFE80")]
			public float neutralBlackOut;

			[Token(Token = "0x4000F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFEA0", Offset = "0x4DFEA0")]
			public float neutralWhiteOut;

			[Token(Token = "0x4000F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFEB8", Offset = "0x4DFEB8")]
			public float neutralWhiteLevel;

			[Token(Token = "0x4000F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFED4", Offset = "0x4DFED4")]
			public float neutralWhiteClip;

			[Token(Token = "0x1700013E")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x6000D71")]
				[Address(RVA = "0x8F4484", Offset = "0x8F4484", VA = "0x8F4484")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002B1")]
		public struct BasicSettings
		{
			[Token(Token = "0x4000F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFEEC", Offset = "0x4DFEEC")]
			public float postExposure;

			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFF24", Offset = "0x4DFF24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFF24", Offset = "0x4DFF24")]
			public float temperature;

			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFF80", Offset = "0x4DFF80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFF80", Offset = "0x4DFF80")]
			public float tint;

			[Token(Token = "0x4000F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4DFFDC", Offset = "0x4DFFDC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4DFFDC", Offset = "0x4DFFDC")]
			public float hueShift;

			[Token(Token = "0x4000F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0038", Offset = "0x4E0038")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0038", Offset = "0x4E0038")]
			public float saturation;

			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E008C", Offset = "0x4E008C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E008C", Offset = "0x4E008C")]
			public float contrast;

			[Token(Token = "0x1700013F")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x6000D72")]
				[Address(RVA = "0x8F3B14", Offset = "0x8F3B14", VA = "0x8F3B14")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002B2")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x17000140")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x6000D73")]
				[Address(RVA = "0x8F3B24", Offset = "0x8F3B24", VA = "0x8F3B24")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002B3")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x4E00F0", Offset = "0x4E00F0")]
			public Color slope;

			[Token(Token = "0x4000F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x4E0128", Offset = "0x4E0128")]
			public Color power;

			[Token(Token = "0x4000F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x4E0160", Offset = "0x4E0160")]
			public Color offset;

			[Token(Token = "0x17000141")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x6000D74")]
				[Address(RVA = "0x8F3C70", Offset = "0x8F3C70", VA = "0x8F3C70")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002B4")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x4000F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x4E0198", Offset = "0x4E0198")]
			public Color lift;

			[Token(Token = "0x4000F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x4E01D0", Offset = "0x4E01D0")]
			public Color gamma;

			[Token(Token = "0x4000F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x4E0208", Offset = "0x4E0208")]
			public Color gain;

			[Token(Token = "0x17000142")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x6000D75")]
				[Address(RVA = "0x8F3CFC", Offset = "0x8F3CFC", VA = "0x8F3CFC")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x20002B5")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4000F59")]
			Linear,
			[Token(Token = "0x4000F5A")]
			Log
		}

		[Serializable]
		[Token(Token = "0x20002B6")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x4000F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x4000F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x17000143")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6000D76")]
				[Address(RVA = "0x8F3BF4", Offset = "0x8F3BF4", VA = "0x8F3BF4")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002B7")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4000F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x4000F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x17000144")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6000D77")]
				[Address(RVA = "0x8F3D88", Offset = "0x8F3D88", VA = "0x8F3D88")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002B8")]
		public struct Settings
		{
			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x17000145")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D78")]
				[Address(RVA = "0x8F3998", Offset = "0x8F3998", VA = "0x8F3998")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DF1C8", Offset = "0x4DF1C8")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DF1D8", Offset = "0x4DF1D8")]
		private RenderTexture <bakedLut>k__BackingField;

		[Token(Token = "0x170000B7")]
		public Settings settings
		{
			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0x8F38E8", Offset = "0x8F38E8", VA = "0x8F38E8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x8F38F8", Offset = "0x8F38F8", VA = "0x8F38F8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public bool isDirty
		{
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0x8F392C", Offset = "0x8F392C", VA = "0x8F392C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2CD0", Offset = "0x4E2CD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x8F3934", Offset = "0x8F3934", VA = "0x8F3934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2CE0", Offset = "0x4E2CE0")]
			internal set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0x8F3940", Offset = "0x8F3940", VA = "0x8F3940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2CF0", Offset = "0x4E2CF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x8F3948", Offset = "0x8F3948", VA = "0x8F3948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2D00", Offset = "0x4E2D00")]
			internal set
			{
			}
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x8F3950", Offset = "0x8F3950", VA = "0x8F3950", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x8F3AC4", Offset = "0x8F3AC4", VA = "0x8F3AC4", Slot = "5")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x8F3AD0", Offset = "0x8F3AD0", VA = "0x8F3AD0")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E1")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x20002B9")]
		public enum KernelSize
		{
			[Token(Token = "0x4000F71")]
			Small,
			[Token(Token = "0x4000F72")]
			Medium,
			[Token(Token = "0x4000F73")]
			Large,
			[Token(Token = "0x4000F74")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x20002BA")]
		public struct Settings
		{
			[Token(Token = "0x4000F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x4E02B0", Offset = "0x4E02B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E02B0", Offset = "0x4E02B0")]
			public float focusDistance;

			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0304", Offset = "0x4E0304")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0304", Offset = "0x4E0304")]
			public float aperture;

			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0360", Offset = "0x4E0360")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0360", Offset = "0x4E0360")]
			public float focalLength;

			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E03B8", Offset = "0x4E03B8")]
			public bool useCameraFov;

			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E03F0", Offset = "0x4E03F0")]
			public KernelSize kernelSize;

			[Token(Token = "0x17000146")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D79")]
				[Address(RVA = "0x8F54F4", Offset = "0x8F54F4", VA = "0x8F54F4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000BA")]
		public Settings settings
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x8F54A0", Offset = "0x8F54A0", VA = "0x8F54A0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0x8F54B4", Offset = "0x8F54B4", VA = "0x8F54B4")]
			set
			{
			}
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x8F54C8", Offset = "0x8F54C8", VA = "0x8F54C8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x8F5520", Offset = "0x8F5520", VA = "0x8F5520")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E2")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20002BB")]
		public struct Settings
		{
			[Token(Token = "0x17000147")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D7A")]
				[Address(RVA = "0x8F59E4", Offset = "0x8F59E4", VA = "0x8F59E4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000BB")]
		public Settings settings
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x8F59CC", Offset = "0x8F59CC", VA = "0x8F59CC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x8F59D4", Offset = "0x8F59D4", VA = "0x8F59D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x8F59DC", Offset = "0x8F59DC", VA = "0x8F59DC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x8F59EC", Offset = "0x8F59EC", VA = "0x8F59EC")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E3")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x20002BC")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x4000F7B")]
			Progressive,
			[Token(Token = "0x4000F7C")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x20002BD")]
		public struct Settings
		{
			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0428", Offset = "0x4E0428")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0428", Offset = "0x4E0428")]
			public float lowPercent;

			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0480", Offset = "0x4E0480")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0480", Offset = "0x4E0480")]
			public float highPercent;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E04D8", Offset = "0x4E04D8")]
			public float minLuminance;

			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0510", Offset = "0x4E0510")]
			public float maxLuminance;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x4E0548", Offset = "0x4E0548")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0548", Offset = "0x4E0548")]
			public float keyValue;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0598", Offset = "0x4E0598")]
			public bool dynamicKeyValue;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E05D0", Offset = "0x4E05D0")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x4E0608", Offset = "0x4E0608")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0608", Offset = "0x4E0608")]
			public float speedUp;

			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x4E0658", Offset = "0x4E0658")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0658", Offset = "0x4E0658")]
			public float speedDown;

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E06A8", Offset = "0x4E06A8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E06A8", Offset = "0x4E06A8")]
			public int logMin;

			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E06FC", Offset = "0x4E06FC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E06FC", Offset = "0x4E06FC")]
			public int logMax;

			[Token(Token = "0x17000148")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D7B")]
				[Address(RVA = "0x8F6974", Offset = "0x8F6974", VA = "0x8F6974")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000BC")]
		public Settings settings
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0x8F68FC", Offset = "0x8F68FC", VA = "0x8F68FC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x8F6914", Offset = "0x8F6914", VA = "0x8F6914")]
			set
			{
			}
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x8F6934", Offset = "0x8F6934", VA = "0x8F6934", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x8F69B8", Offset = "0x8F69B8", VA = "0x8F69B8")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E4")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20002BE")]
		public struct Settings
		{
			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0750", Offset = "0x4E0750")]
			public bool excludeSkybox;

			[Token(Token = "0x17000149")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D7C")]
				[Address(RVA = "0x8F710C", Offset = "0x8F710C", VA = "0x8F710C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000BD")]
		public Settings settings
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0x8F70F0", Offset = "0x8F70F0", VA = "0x8F70F0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0x8F70F8", Offset = "0x8F70F8", VA = "0x8F70F8")]
			set
			{
			}
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x8F7100", Offset = "0x8F7100", VA = "0x8F7100", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x8F7114", Offset = "0x8F7114", VA = "0x8F7114")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E5")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20002BF")]
		public struct Settings
		{
			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0788", Offset = "0x4E0788")]
			public bool colored;

			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E07C0", Offset = "0x4E07C0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E07C0", Offset = "0x4E07C0")]
			public float intensity;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0814", Offset = "0x4E0814")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0814", Offset = "0x4E0814")]
			public float size;

			[Token(Token = "0x4000F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E086C", Offset = "0x4E086C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E086C", Offset = "0x4E086C")]
			public float luminanceContribution;

			[Token(Token = "0x1700014A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D7D")]
				[Address(RVA = "0x8F7AB4", Offset = "0x8F7AB4", VA = "0x8F7AB4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000BE")]
		public Settings settings
		{
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x8F7A88", Offset = "0x8F7A88", VA = "0x8F7A88")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0x8F7A98", Offset = "0x8F7A98", VA = "0x8F7A98")]
			set
			{
			}
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x8F7AA4", Offset = "0x8F7AA4", VA = "0x8F7AA4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x8F7ACC", Offset = "0x8F7ACC", VA = "0x8F7ACC")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E6")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20002C0")]
		public struct Settings
		{
			[Token(Token = "0x4000F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E08C0", Offset = "0x4E08C0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E08C0", Offset = "0x4E08C0")]
			public float shutterAngle;

			[Token(Token = "0x4000F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0918", Offset = "0x4E0918")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0918", Offset = "0x4E0918")]
			public int sampleCount;

			[Token(Token = "0x4000F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0970", Offset = "0x4E0970")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0970", Offset = "0x4E0970")]
			public float frameBlending;

			[Token(Token = "0x1700014B")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D7E")]
				[Address(RVA = "0x8FA8BC", Offset = "0x8FA8BC", VA = "0x8FA8BC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000BF")]
		public Settings settings
		{
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0x8FA88C", Offset = "0x8FA88C", VA = "0x8FA88C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0x8FA89C", Offset = "0x8FA89C", VA = "0x8FA89C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x8FA8A8", Offset = "0x8FA8A8", VA = "0x8FA8A8", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x8FA8CC", Offset = "0x8FA8CC", VA = "0x8FA8CC")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E7")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x20002C1")]
		public enum SSRResolution
		{
			[Token(Token = "0x4000F91")]
			High = 0,
			[Token(Token = "0x4000F92")]
			Low = 2
		}

		[Token(Token = "0x20002C2")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x4000F94")]
			PhysicallyBased,
			[Token(Token = "0x4000F95")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x20002C3")]
		public struct IntensitySettings
		{
			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E09C4", Offset = "0x4E09C4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E09C4", Offset = "0x4E09C4")]
			public float reflectionMultiplier;

			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0A18", Offset = "0x4E0A18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0A18", Offset = "0x4E0A18")]
			public float fadeDistance;

			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0A70", Offset = "0x4E0A70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0A70", Offset = "0x4E0A70")]
			public float fresnelFade;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0AC4", Offset = "0x4E0AC4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0AC4", Offset = "0x4E0AC4")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x20002C4")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0B1C", Offset = "0x4E0B1C")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0B54", Offset = "0x4E0B54")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0B8C", Offset = "0x4E0B8C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0B8C", Offset = "0x4E0B8C")]
			public float maxDistance;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0BE8", Offset = "0x4E0BE8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0BE8", Offset = "0x4E0BE8")]
			public int iterationCount;

			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0C40", Offset = "0x4E0C40")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0C40", Offset = "0x4E0C40")]
			public int stepSize;

			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0C94", Offset = "0x4E0C94")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0C94", Offset = "0x4E0C94")]
			public float widthModifier;

			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0CEC", Offset = "0x4E0CEC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0CEC", Offset = "0x4E0CEC")]
			public float reflectionBlur;

			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0D44", Offset = "0x4E0D44")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x20002C5")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0D7C", Offset = "0x4E0D7C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0D7C", Offset = "0x4E0D7C")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x20002C6")]
		public struct Settings
		{
			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x1700014C")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D7F")]
				[Address(RVA = "0x8FED9C", Offset = "0x8FED9C", VA = "0x8FED9C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000C0")]
		public Settings settings
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x8FED0C", Offset = "0x8FED0C", VA = "0x8FED0C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x8FED2C", Offset = "0x8FED2C", VA = "0x8FED2C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x8FED4C", Offset = "0x8FED4C", VA = "0x8FED4C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x8FD2E8", Offset = "0x8FD2E8", VA = "0x8FD2E8")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E8")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x20002C7")]
		public struct Settings
		{
			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0DD0", Offset = "0x4E0DD0")]
			public Texture2D lut;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0E08", Offset = "0x4E0E08")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0E08", Offset = "0x4E0E08")]
			public float contribution;

			[Token(Token = "0x1700014D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D80")]
				[Address(RVA = "0x8FFAE0", Offset = "0x8FFAE0", VA = "0x8FFAE0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000C1")]
		public Settings settings
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x8FFABC", Offset = "0x8FFABC", VA = "0x8FFABC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x8FFAC8", Offset = "0x8FFAC8", VA = "0x8FFAC8")]
			set
			{
			}
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x8FFAD0", Offset = "0x8FFAD0", VA = "0x8FFAD0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x8FD33C", Offset = "0x8FD33C", VA = "0x8FD33C")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E9")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x20002C8")]
		public enum Mode
		{
			[Token(Token = "0x4000FA9")]
			Classic,
			[Token(Token = "0x4000FAA")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x20002C9")]
		public struct Settings
		{
			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0E5C", Offset = "0x4E0E5C")]
			public Mode mode;

			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x4E0E94", Offset = "0x4E0E94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0E94", Offset = "0x4E0E94")]
			public Color color;

			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0EE4", Offset = "0x4E0EE4")]
			public Vector2 center;

			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0F1C", Offset = "0x4E0F1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0F1C", Offset = "0x4E0F1C")]
			public float intensity;

			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0F70", Offset = "0x4E0F70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0F70", Offset = "0x4E0F70")]
			public float smoothness;

			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E0FC8", Offset = "0x4E0FC8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E0FC8", Offset = "0x4E0FC8")]
			public float roundness;

			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E101C", Offset = "0x4E101C")]
			public Texture mask;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4E1054", Offset = "0x4E1054")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E1054", Offset = "0x4E1054")]
			public float opacity;

			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4E10A8", Offset = "0x4E10A8")]
			public bool rounded;

			[Token(Token = "0x1700014E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000D81")]
				[Address(RVA = "0x8FFF98", Offset = "0x8FFF98", VA = "0x8FFF98")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x170000C2")]
		public Settings settings
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0x8FFF0C", Offset = "0x8FFF0C", VA = "0x8FFF0C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0x8FFF2C", Offset = "0x8FFF2C", VA = "0x8FFF2C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x8FFF4C", Offset = "0x8FFF4C", VA = "0x8FFF4C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x8FD350", Offset = "0x8FD350", VA = "0x8FD350")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4DBD4C", Offset = "0x4DBD4C")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4DBD4C", Offset = "0x4DBD4C")]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x8FA8E4", Offset = "0x8FA8E4", VA = "0x8FA8E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x8FB020", Offset = "0x8FB020", VA = "0x8FB020")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x8FBBBC", Offset = "0x8FBBBC", VA = "0x8FBBBC")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x8FBCBC", Offset = "0x8FBCBC", VA = "0x8FBCBC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x8FBDE4", Offset = "0x8FBDE4", VA = "0x8FBDE4")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x8FC91C", Offset = "0x8FC91C", VA = "0x8FC91C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x8FCBFC", Offset = "0x8FCBFC", VA = "0x8FCBFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x8FCE14", Offset = "0x8FCE14", VA = "0x8FCE14")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x8FB644", Offset = "0x8FB644", VA = "0x8FB644")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x8FB524", Offset = "0x8FB524", VA = "0x8FB524")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x6000B27")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6000B28")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6000B29")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6000B2A")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6000B2B")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2C")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x8FCE78", Offset = "0x8FCE78", VA = "0x8FCE78")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x170000C3")]
		public abstract bool active
		{
			[Token(Token = "0x6000B2F")]
			get;
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x8FCF08", Offset = "0x8FCF08", VA = "0x8FCF08", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x8FCF10", Offset = "0x8FCF10", VA = "0x8FCF10", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x8FCF14", Offset = "0x8FCF14", VA = "0x8FCF14", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B32")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x8FCF18", Offset = "0x8FCF18", VA = "0x8FCF18")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DF278", Offset = "0x4DF278")]
		private T <model>k__BackingField;

		[Token(Token = "0x170000C4")]
		public T model
		{
			[Token(Token = "0x6000B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2D20", Offset = "0x4E2D20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2D30", Offset = "0x4E2D30")]
			internal set
			{
			}
		}

		[Token(Token = "0x6000B36")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x6000B37")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x6000B38")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6000B39")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x6000B3A")]
		public abstract string GetName();

		[Token(Token = "0x6000B3B")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x6000B3C")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6000B3D")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x6000B3E")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class PostProcessingContext
	{
		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4DF288", Offset = "0x4DF288")]
		private bool <interrupted>k__BackingField;

		[Token(Token = "0x170000C5")]
		public bool interrupted
		{
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0x8FCF20", Offset = "0x8FCF20", VA = "0x8FCF20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2D40", Offset = "0x4E2D40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B40")]
			[Address(RVA = "0x8FCF28", Offset = "0x8FCF28", VA = "0x8FCF28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4E2D50", Offset = "0x4E2D50")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0x8F6A88", Offset = "0x8F6A88", VA = "0x8F6A88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C7")]
		public bool isHdr
		{
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0x8F6FA0", Offset = "0x8F6FA0", VA = "0x8F6FA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C8")]
		public int width
		{
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0x8F4FD0", Offset = "0x8F4FD0", VA = "0x8F4FD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C9")]
		public int height
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0x8F4FEC", Offset = "0x8F4FEC", VA = "0x8F4FEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CA")]
		public Rect viewport
		{
			[Token(Token = "0x6000B47")]
			[Address(RVA = "0x8F34C8", Offset = "0x8F34C8", VA = "0x8F34C8")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x8F5218", Offset = "0x8F5218", VA = "0x8F5218")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x8FB514", Offset = "0x8FB514", VA = "0x8FB514")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x8FAE94", Offset = "0x8FAE94", VA = "0x8FAE94")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F0")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "GetSetAttribute", RVA = "0x4DF298", Offset = "0x4DF298")]
		private bool m_Enabled;

		[Token(Token = "0x170000CB")]
		public bool enabled
		{
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x8FCF34", Offset = "0x8FCF34", VA = "0x8FCF34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0x8FCF3C", Offset = "0x8FCF3C", VA = "0x8FCF3C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B4B")]
		public abstract void Reset();

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x8FCF58", Offset = "0x8FCF58", VA = "0x8FCF58", Slot = "5")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x8F1058", Offset = "0x8F1058", VA = "0x8F1058")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x8FCF5C", Offset = "0x8FCF5C", VA = "0x8FCF5C")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F2")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x8F387C", Offset = "0x8F387C", VA = "0x8F387C")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x8F2418", Offset = "0x8F2418", VA = "0x8F2418")]
		public void Cache()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x8F25F4", Offset = "0x8F25F4", VA = "0x8F25F4")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001F3")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x170000CC")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0x8F6F80", Offset = "0x8F6F80", VA = "0x8F6F80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CD")]
		public static bool supportsDX11
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0x8F7AE0", Offset = "0x8F7AE0", VA = "0x8F7AE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CE")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0x8F7B10", Offset = "0x8F7B10", VA = "0x8F7B10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		public static Mesh quad
		{
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0x8F7C48", Offset = "0x8F7C48", VA = "0x8F7C48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x8F7F84", Offset = "0x8F7F84", VA = "0x8F7F84")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x8F8088", Offset = "0x8F8088", VA = "0x8F8088")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x8F1128", Offset = "0x8F1128", VA = "0x8F1128")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x8F8224", Offset = "0x8F8224", VA = "0x8F8224")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x8F8274", Offset = "0x8F8274", VA = "0x8F8274")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x8F2F8C", Offset = "0x8F2F8C", VA = "0x8F2F8C")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x8F82E8", Offset = "0x8F82E8", VA = "0x8F82E8", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x8FAE20", Offset = "0x8FAE20", VA = "0x8FAE20")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x8FC2F4", Offset = "0x8FC2F4", VA = "0x8FC2F4")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x8F5008", Offset = "0x8F5008", VA = "0x8F5008")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x8F50EC", Offset = "0x8F50EC", VA = "0x8F50EC")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x8FC86C", Offset = "0x8FC86C", VA = "0x8FC86C")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x8FCE10", Offset = "0x8FCE10", VA = "0x8FCE10", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace Com.AllSkyFree
{
	[Token(Token = "0x20001F6")]
	public class AllSkyFreeMenu : MonoBehaviour
	{
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x849B0C", Offset = "0x849B0C", VA = "0x849B0C")]
		private static void Link()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x849B58", Offset = "0x849B58", VA = "0x849B58")]
		public AllSkyFreeMenu()
		{
		}
	}
}
