using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using Il2CppDummyDll;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using TMPro;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using VRGame.SimpleQuest;
using VRGame.Teleport;
using VRGame.Utilities;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class BezierRaycaster : ArcRaycaster
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D4C60", Offset = "0x2D4C60")]
	public float distance;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D4C94", Offset = "0x2D4C94")]
	public float dropHeight;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D4CC8", Offset = "0x2D4CC8")]
	public float controlHeight;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D4CFC", Offset = "0x2D4CFC")]
	public int segments;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4D30", Offset = "0x2D4D30")]
	private Vector3 <End>k__BackingField;

	[Token(Token = "0x17000001")]
	public Vector3 End
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0x36BAE4", Offset = "0x36BAE4", VA = "0x36BAE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0300", Offset = "0x2E0300")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000002")]
		[Address(RVA = "0x36BAF8", Offset = "0x36BAF8", VA = "0x36BAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0310", Offset = "0x2E0310")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public Vector3 Control
	{
		[Token(Token = "0x6000003")]
		[Address(RVA = "0x36BB04", Offset = "0x36BB04", VA = "0x36BB04")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x36BC60", Offset = "0x36BC60", VA = "0x36BC60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x36BEE8", Offset = "0x36BEE8", VA = "0x36BEE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x36C2A4", Offset = "0x36C2A4", VA = "0x36C2A4")]
	private Vector3 SampleCurve(Vector3 start, Vector3 end, Vector3 control, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x36C3DC", Offset = "0x36C3DC", VA = "0x36C3DC")]
	public BezierRaycaster()
	{
	}
}
[Token(Token = "0x2000003")]
public class BezierVisualizer : ArcVisualizer
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BezierRaycaster raycaster;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x36C40C", Offset = "0x36C40C", VA = "0x36C40C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x36C7DC", Offset = "0x36C7DC", VA = "0x36C7DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x36C9DC", Offset = "0x36C9DC", VA = "0x36C9DC")]
	private Vector3 SampleCurve(Vector3 start, Vector3 end, Vector3 control, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x36CB14", Offset = "0x36CB14", VA = "0x36CB14")]
	public BezierVisualizer()
	{
	}
}
[Token(Token = "0x2000004")]
public class GearVRPointer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001DA")]
	public class HoverCallback : UnityEvent<Transform>
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xD625C4", Offset = "0xD625C4", VA = "0xD625C4")]
		public HoverCallback()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001DB")]
	public class SelectionCallback : UnityEvent<Transform>
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xD62628", Offset = "0xD62628", VA = "0xD62628")]
		public SelectionCallback()
		{
		}
	}

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D4D40", Offset = "0x2D4D40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D4D40", Offset = "0x2D4D40")]
	public Transform leftHandAnchor;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D4DD8", Offset = "0x2D4DD8")]
	public Transform rightHandAnchor;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D4E38", Offset = "0x2D4E38")]
	public Transform centerEyeAnchor;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D4E98", Offset = "0x2D4E98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D4E98", Offset = "0x2D4E98")]
	public bool showSelectionRay;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D4F18", Offset = "0x2D4F18")]
	public float maxRayDistance;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D4F4C", Offset = "0x2D4F4C")]
	public LayerMask excludeLayers;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D4F9C", Offset = "0x2D4F9C")]
	public HoverCallback onHoverEnter;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public HoverCallback onHoverExit;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HoverCallback onHover;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D4FD8", Offset = "0x2D4FD8")]
	public SelectionCallback onTriggerSelect;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SelectionCallback onPadSelect;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public SelectionCallback onSelected;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Ray pointer;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Transform lastHit;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected Transform triggerDown;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Transform padDown;

	[Token(Token = "0x17000003")]
	public Ray Pointer
	{
		[Token(Token = "0x600000C")]
		[Address(RVA = "0xD612B8", Offset = "0xD612B8", VA = "0xD612B8")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x17000004")]
	public bool IsRayAvailable
	{
		[Token(Token = "0x600000D")]
		[Address(RVA = "0xD612D0", Offset = "0xD612D0", VA = "0xD612D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000005")]
	public OVRInput.Controller Controller
	{
		[Token(Token = "0x600000E")]
		[Address(RVA = "0xD61378", Offset = "0xD61378", VA = "0xD61378")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x17000006")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x600000F")]
		[Address(RVA = "0xD61400", Offset = "0xD61400", VA = "0xD61400")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xD61434", Offset = "0xD61434", VA = "0xD61434")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xD61998", Offset = "0xD61998", VA = "0xD61998")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xD624B0", Offset = "0xD624B0", VA = "0xD624B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xD625A8", Offset = "0xD625A8", VA = "0xD625A8")]
	public GearVRPointer()
	{
	}
}
[Token(Token = "0x2000005")]
public class LoadScene : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Scene scene;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x872C50", Offset = "0x872C50", VA = "0x872C50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x872C6C", Offset = "0x872C6C", VA = "0x872C6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x872D24", Offset = "0x872D24", VA = "0x872D24")]
	public void OnSelect(Transform t)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x872D7C", Offset = "0x872D7C", VA = "0x872D7C")]
	public LoadScene()
	{
	}
}
[Token(Token = "0x2000006")]
public class NoController : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected OVRInput.Controller left;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected OVRInput.Controller right;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected Canvas canvas;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_prevControllerConnected;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool m_prevControllerConnectedCached;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x873DF8", Offset = "0x873DF8", VA = "0x873DF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x873E60", Offset = "0x873E60", VA = "0x873E60")]
	private void Update()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x873F84", Offset = "0x873F84", VA = "0x873F84")]
	public NoController()
	{
	}
}
[Token(Token = "0x2000007")]
public class ParabolicRaycaster : ArcRaycaster
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5018", Offset = "0x2D5018")]
	public float velocity;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D504C", Offset = "0x2D504C")]
	public float acceleration;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5080", Offset = "0x2D5080")]
	public float additionalFlightTime;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D50B4", Offset = "0x2D50B4")]
	public int segments;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected List<Vector3> parabola;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D50E8", Offset = "0x2D50E8")]
	private float <HitTime>k__BackingField;

	[Token(Token = "0x17000007")]
	public float Angle
	{
		[Token(Token = "0x600001B")]
		[Address(RVA = "0x46E084", Offset = "0x46E084", VA = "0x46E084")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000008")]
	public Vector3 Velocity
	{
		[Token(Token = "0x600001C")]
		[Address(RVA = "0x46E140", Offset = "0x46E140", VA = "0x46E140")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000009")]
	public Vector3 Acceleration
	{
		[Token(Token = "0x600001D")]
		[Address(RVA = "0x46E1FC", Offset = "0x46E1FC", VA = "0x46E1FC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700000A")]
	public float FlightTime
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0x46E2CC", Offset = "0x46E2CC", VA = "0x46E2CC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000B")]
	public float FlightDistance
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0x46E394", Offset = "0x46E394", VA = "0x46E394")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000C")]
	public float HitTime
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0x46E458", Offset = "0x46E458", VA = "0x46E458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0320", Offset = "0x2E0320")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000021")]
		[Address(RVA = "0x46E460", Offset = "0x46E460", VA = "0x46E460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0330", Offset = "0x2E0330")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x46E468", Offset = "0x46E468", VA = "0x46E468")]
	public Vector3 SampleCurve(Vector3 p, Vector3 v, Vector3 a, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x46E4EC", Offset = "0x46E4EC", VA = "0x46E4EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x46E774", Offset = "0x46E774", VA = "0x46E774")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x46EC2C", Offset = "0x46EC2C", VA = "0x46EC2C")]
	public ParabolicRaycaster()
	{
	}
}
[Token(Token = "0x2000008")]
public class ParabolicVisualizer : ArcVisualizer
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected ParabolicRaycaster raycaster;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xD63F10", Offset = "0xD63F10", VA = "0xD63F10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xD642E0", Offset = "0xD642E0", VA = "0xD642E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xD64560", Offset = "0xD64560", VA = "0xD64560")]
	public ParabolicVisualizer()
	{
	}
}
[Token(Token = "0x2000009")]
public class ArcRaycaster : MonoBehaviour
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D50F8", Offset = "0x2D50F8")]
	public Transform trackingSpace;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5164", Offset = "0x2D5164")]
	public float surfaceAngle;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5198", Offset = "0x2D5198")]
	public LayerMask excludeLayers;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D51CC", Offset = "0x2D51CC")]
	private bool <MakingContact>k__BackingField;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D51DC", Offset = "0x2D51DC")]
	private Vector3 <Normal>k__BackingField;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D51EC", Offset = "0x2D51EC")]
	private Vector3 <HitPoint>k__BackingField;

	[Token(Token = "0x1700000D")]
	public Vector3 Up
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x3696F4", Offset = "0x3696F4", VA = "0x3696F4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700000E")]
	public Vector3 Right
	{
		[Token(Token = "0x600002A")]
		[Address(RVA = "0x369728", Offset = "0x369728", VA = "0x369728")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700000F")]
	public Vector3 Forward
	{
		[Token(Token = "0x600002B")]
		[Address(RVA = "0x36975C", Offset = "0x36975C", VA = "0x36975C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000010")]
	public Vector3 Start
	{
		[Token(Token = "0x600002C")]
		[Address(RVA = "0x369790", Offset = "0x369790", VA = "0x369790")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000011")]
	public bool MakingContact
	{
		[Token(Token = "0x600002D")]
		[Address(RVA = "0x3698D4", Offset = "0x3698D4", VA = "0x3698D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0340", Offset = "0x2E0340")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600002E")]
		[Address(RVA = "0x3698DC", Offset = "0x3698DC", VA = "0x3698DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0350", Offset = "0x2E0350")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public Vector3 Normal
	{
		[Token(Token = "0x600002F")]
		[Address(RVA = "0x3698E4", Offset = "0x3698E4", VA = "0x3698E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0360", Offset = "0x2E0360")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000030")]
		[Address(RVA = "0x3698F8", Offset = "0x3698F8", VA = "0x3698F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0370", Offset = "0x2E0370")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Vector3 HitPoint
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0x369904", Offset = "0x369904", VA = "0x369904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0380", Offset = "0x2E0380")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000032")]
		[Address(RVA = "0x369918", Offset = "0x369918", VA = "0x369918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0390", Offset = "0x2E0390")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public OVRInput.Controller Controller
	{
		[Token(Token = "0x6000033")]
		[Address(RVA = "0x369924", Offset = "0x369924", VA = "0x369924")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x17000015")]
	public Vector3 ControllerPosition
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x3697A0", Offset = "0x3697A0", VA = "0x3697A0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000016")]
	public Vector3 ControllerForward
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x3699F0", Offset = "0x3699F0", VA = "0x3699F0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000017")]
	public Vector3 ControllerUp
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0x369BE0", Offset = "0x369BE0", VA = "0x369BE0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000018")]
	public Vector3 ControllerRight
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x369DD0", Offset = "0x369DD0", VA = "0x369DD0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x369FC0", Offset = "0x369FC0", VA = "0x369FC0")]
	public ArcRaycaster()
	{
	}
}
[Token(Token = "0x200000A")]
public class ArcTeleporter : MonoBehaviour
{
	[Token(Token = "0x20001DC")]
	public enum UpDirection
	{
		[Token(Token = "0x400082E")]
		World,
		[Token(Token = "0x400082F")]
		TargetNormal
	}

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D51FC", Offset = "0x2D51FC")]
	public ArcRaycaster arcRaycaster;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5230", Offset = "0x2D5230")]
	public Transform objectToMove;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5264", Offset = "0x2D5264")]
	public float height;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5298", Offset = "0x2D5298")]
	public UpDirection teleportedUpAxis;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected bool lastTriggerState;

	[Token(Token = "0x17000019")]
	private OVRInput.Controller Controller
	{
		[Token(Token = "0x600003B")]
		[Address(RVA = "0x36A818", Offset = "0x36A818", VA = "0x36A818")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x1700001A")]
	private bool HasController
	{
		[Token(Token = "0x600003C")]
		[Address(RVA = "0x36A588", Offset = "0x36A588", VA = "0x36A588")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001B")]
	private Matrix4x4 ControllerToWorldMatrix
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0x36A8A0", Offset = "0x36A8A0", VA = "0x36A8A0")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700001C")]
	private Vector3 TouchpadDirection
	{
		[Token(Token = "0x600003E")]
		[Address(RVA = "0x36A610", Offset = "0x36A610", VA = "0x36A610")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x369FD4", Offset = "0x369FD4", VA = "0x369FD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x36A1A4", Offset = "0x36A1A4", VA = "0x36A1A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x36AC2C", Offset = "0x36AC2C", VA = "0x36AC2C")]
	public ArcTeleporter()
	{
	}
}
[Token(Token = "0x200000B")]
public class ArcVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D52CC", Offset = "0x2D52CC")]
	public ArcRaycaster arcRaycaster;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5300", Offset = "0x2D5300")]
	public LineRenderer arcRenderer;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5334", Offset = "0x2D5334")]
	public Transform contactIndicator;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5368", Offset = "0x2D5368")]
	public Transform directionIndicator;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D53C0", Offset = "0x2D53C0")]
	public int segments;

	[Token(Token = "0x1700001D")]
	private bool TouchpadTouched
	{
		[Token(Token = "0x6000042")]
		[Address(RVA = "0x36B434", Offset = "0x36B434", VA = "0x36B434")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001E")]
	private OVRInput.Controller Controller
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0x36B6C0", Offset = "0x36B6C0", VA = "0x36B6C0")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x1700001F")]
	private Matrix4x4 ControllerToWorldMatrix
	{
		[Token(Token = "0x6000044")]
		[Address(RVA = "0x36B748", Offset = "0x36B748", VA = "0x36B748")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x17000020")]
	private Vector3 TouchpadDirection
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0x36B4B8", Offset = "0x36B4B8", VA = "0x36B4B8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000021")]
	private bool HasController
	{
		[Token(Token = "0x6000046")]
		[Address(RVA = "0x36AE78", Offset = "0x36AE78", VA = "0x36AE78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x36AC40", Offset = "0x36AC40", VA = "0x36AC40")]
	protected bool EarlyOut()
	{
		return default(bool);
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x36AF00", Offset = "0x36AF00", VA = "0x36AF00")]
	protected void SetCurveVisuals()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x36BAD4", Offset = "0x36BAD4", VA = "0x36BAD4")]
	public ArcVisualizer()
	{
	}
}
[Token(Token = "0x200000C")]
public class TallRaycaster : ArcRaycaster
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D53F4", Offset = "0x2D53F4")]
	public float minControllerAngle;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5458", Offset = "0x2D5458")]
	public float maxControllerAngle;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D54BC", Offset = "0x2D54BC")]
	public float maxDistance;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5508", Offset = "0x2D5508")]
	public float minDistance;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5554", Offset = "0x2D5554")]
	public float castHeight;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D55B0", Offset = "0x2D55B0")]
	public float dropMultiplyer;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D55E4", Offset = "0x2D55E4")]
	public float extraCastLength;

	[Token(Token = "0x17000022")]
	public float MaxDistnce
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0xD80AFC", Offset = "0xD80AFC", VA = "0xD80AFC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000023")]
	private Ray HorizontalRay
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0xD80B04", Offset = "0xD80B04", VA = "0xD80B04")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x17000024")]
	public float HorizontalDistance
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0xD80C30", Offset = "0xD80C30", VA = "0xD80C30")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000025")]
	private Vector3 PointAlongHorizontalRay
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0xD80D8C", Offset = "0xD80D8C", VA = "0xD80D8C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000026")]
	private Vector3 CastPosition
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0xD80EE4", Offset = "0xD80EE4", VA = "0xD80EE4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000027")]
	private Ray CastRay
	{
		[Token(Token = "0x600004E")]
		[Address(RVA = "0xD80FEC", Offset = "0xD80FEC", VA = "0xD80FEC")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xD80874", Offset = "0xD80874", VA = "0xD80874")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xD81120", Offset = "0xD81120", VA = "0xD81120")]
	private void Update()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xD81460", Offset = "0xD81460", VA = "0xD81460")]
	public TallRaycaster()
	{
	}
}
[Token(Token = "0x200000D")]
public class TallVisualizer : ArcVisualizer
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5618", Offset = "0x2D5618")]
	public float shortControlHeight;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D564C", Offset = "0x2D564C")]
	public float longControlHeight;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected TallRaycaster raycaster;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xD814A0", Offset = "0xD814A0", VA = "0xD814A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xD81870", Offset = "0xD81870", VA = "0xD81870")]
	private void Update()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xD81A6C", Offset = "0xD81A6C", VA = "0xD81A6C")]
	private Vector3 SampleCurve(Vector3 start, Vector3 end, float time, float horizontalDistance, float maxDistance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xD81C9C", Offset = "0xD81C9C", VA = "0xD81C9C")]
	public TallVisualizer()
	{
	}
}
[Token(Token = "0x200000E")]
public class EnviroFogVolumeIntegration : MonoBehaviour
{
	[Token(Token = "0x6000055")]
	[Address(RVA = "0x3805C0", Offset = "0x3805C0", VA = "0x3805C0")]
	public EnviroFogVolumeIntegration()
	{
	}
}
[Token(Token = "0x200000F")]
public class EnviroLUXIntegration : MonoBehaviour
{
	[Token(Token = "0x6000056")]
	[Address(RVA = "0x38235C", Offset = "0x38235C", VA = "0x38235C")]
	public EnviroLUXIntegration()
	{
	}
}
[Token(Token = "0x2000010")]
public class EnviroMegaSplatIntegration : MonoBehaviour
{
	[Token(Token = "0x6000057")]
	[Address(RVA = "0x38504C", Offset = "0x38504C", VA = "0x38504C")]
	public EnviroMegaSplatIntegration()
	{
	}
}
[Token(Token = "0x2000011")]
public class EnviroMicroSplatIntegration : MonoBehaviour
{
	[Token(Token = "0x6000058")]
	[Address(RVA = "0x38552C", Offset = "0x38552C", VA = "0x38552C")]
	public EnviroMicroSplatIntegration()
	{
	}
}
[Token(Token = "0x2000012")]
public class EnviroMirrorPlayer : MonoBehaviour
{
	[Token(Token = "0x6000059")]
	[Address(RVA = "0x385534", Offset = "0x385534", VA = "0x385534")]
	public EnviroMirrorPlayer()
	{
	}
}
[Token(Token = "0x2000013")]
public class EnviroMirrorServer : MonoBehaviour
{
	[Token(Token = "0x600005A")]
	[Address(RVA = "0x38553C", Offset = "0x38553C", VA = "0x38553C")]
	public EnviroMirrorServer()
	{
	}
}
[Token(Token = "0x2000014")]
public class EnviroPhotonIntegration : MonoBehaviour
{
	[Token(Token = "0x600005B")]
	[Address(RVA = "0x38554C", Offset = "0x38554C", VA = "0x38554C")]
	public EnviroPhotonIntegration()
	{
	}
}
[Token(Token = "0x2000015")]
public class EnviroPhotonPlayerAssign : MonoBehaviour
{
	[Token(Token = "0x600005C")]
	[Address(RVA = "0x385554", Offset = "0x385554", VA = "0x385554")]
	public EnviroPhotonPlayerAssign()
	{
	}
}
[Token(Token = "0x2000016")]
public class EnviroRTPIntegration : MonoBehaviour
{
	[Token(Token = "0x600005D")]
	[Address(RVA = "0xD43848", Offset = "0xD43848", VA = "0xD43848")]
	public EnviroRTPIntegration()
	{
	}
}
[Token(Token = "0x2000017")]
public class EnviroUBERIntegration : MonoBehaviour
{
	[Token(Token = "0x600005E")]
	[Address(RVA = "0xD58CE8", Offset = "0xD58CE8", VA = "0xD58CE8")]
	public EnviroUBERIntegration()
	{
	}
}
[Token(Token = "0x2000018")]
public class EnviroUNetPlayer : MonoBehaviour
{
	[Token(Token = "0x600005F")]
	[Address(RVA = "0xD58CF0", Offset = "0xD58CF0", VA = "0xD58CF0")]
	public EnviroUNetPlayer()
	{
	}
}
[Token(Token = "0x2000019")]
public class EnviroUNetServer : MonoBehaviour
{
	[Token(Token = "0x6000060")]
	[Address(RVA = "0xD58CF8", Offset = "0xD58CF8", VA = "0xD58CF8")]
	public EnviroUNetServer()
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2D4208", Offset = "0x2D4208")]
public class EnviroVegetationStudioPro : MonoBehaviour
{
	[Token(Token = "0x6000061")]
	[Address(RVA = "0xD5ADD8", Offset = "0xD5ADD8", VA = "0xD5ADD8")]
	public EnviroVegetationStudioPro()
	{
	}
}
[Token(Token = "0x200001B")]
[ExecuteInEditMode]
[ImageEffectAllowedInSceneView]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2D425C", Offset = "0x2D425C")]
public class EnviroPostProcessing : MonoBehaviour
{
	[Token(Token = "0x20001DD")]
	public enum SunShaftsResolution
	{
		[Token(Token = "0x4000831")]
		Low,
		[Token(Token = "0x4000832")]
		Normal,
		[Token(Token = "0x4000833")]
		High
	}

	[Token(Token = "0x20001DE")]
	public enum ShaftsScreenBlendMode
	{
		[Token(Token = "0x4000835")]
		Screen,
		[Token(Token = "0x4000836")]
		Add
	}

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Camera cam;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public int radialBlurIterations;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Material sunShaftsMaterial;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material moonShaftsMaterial;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Material simpleSunClearMaterial;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material simpleMoonClearMaterial;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private RenderTexture tempTexture;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x38555C", Offset = "0x38555C", VA = "0x38555C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x385734", Offset = "0x385734", VA = "0x385734")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x385614", Offset = "0x385614", VA = "0x385614")]
	private void CreateMaterialsAndTextures()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x3857E8", Offset = "0x3857E8", VA = "0x3857E8")]
	private void CleanupMaterials()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x385A44", Offset = "0x385A44", VA = "0x385A44")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x3866E0", Offset = "0x3866E0", VA = "0x3866E0")]
	private void RenderLightShaft(RenderTexture source, RenderTexture destination, Material mat, Material clearMat, Transform lightSource, Color treshold, Color clr)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x3874B8", Offset = "0x3874B8", VA = "0x3874B8")]
	private void DrawBorder(RenderTexture dest, Material material)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x3878A0", Offset = "0x3878A0", VA = "0x3878A0")]
	public EnviroPostProcessing()
	{
	}
}
[Serializable]
[Token(Token = "0x200001C")]
public class EnviroSeasons
{
	[Token(Token = "0x20001DF")]
	public enum Seasons
	{
		[Token(Token = "0x4000838")]
		Spring,
		[Token(Token = "0x4000839")]
		Summer,
		[Token(Token = "0x400083A")]
		Autumn,
		[Token(Token = "0x400083B")]
		Winter
	}

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5690", Offset = "0x2D5690")]
	public bool calcSeasons;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D56C4", Offset = "0x2D56C4")]
	public Seasons currentSeasons;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Seasons lastSeason;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xD4A6CC", Offset = "0xD4A6CC", VA = "0xD4A6CC")]
	public EnviroSeasons()
	{
	}
}
[Serializable]
[Token(Token = "0x200001D")]
public class EnviroLightshafts
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5714", Offset = "0x2D5714")]
	public bool sunLightShafts;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5758", Offset = "0x2D5758")]
	public bool moonLightShafts;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x3827A8", Offset = "0x3827A8", VA = "0x3827A8")]
	public EnviroLightshafts()
	{
	}
}
[Serializable]
[Token(Token = "0x200001E")]
public class EnviroAudio
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D579C", Offset = "0x2D579C")]
	public GameObject SFXHolderPrefab;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D57D0", Offset = "0x2D57D0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D57D0", Offset = "0x2D57D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D57D0", Offset = "0x2D57D0")]
	public float ambientSFXVolume;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D587C", Offset = "0x2D587C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D587C", Offset = "0x2D587C")]
	public float weatherSFXVolume;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public EnviroAudioSource currentAmbientSource;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float ambientSFXVolumeMod;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float weatherSFXVolumeMod;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceWeather;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceWeather2;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceAmbient;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceAmbient2;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceThunder;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceZone;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x372404", Offset = "0x372404", VA = "0x372404")]
	public EnviroAudio()
	{
	}
}
[Serializable]
[Token(Token = "0x200001F")]
public class EnviroParticleCloud
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ParticleSystem layer1System;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material layer1Material;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystem layer2System;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Material layer2Material;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x385544", Offset = "0x385544", VA = "0x385544")]
	public EnviroParticleCloud()
	{
	}
}
[Serializable]
[Token(Token = "0x2000020")]
public class EnviroComponents
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5984", Offset = "0x2D5984")]
	public GameObject Sun;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D59C8", Offset = "0x2D59C8")]
	public GameObject Moon;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5A0C", Offset = "0x2D5A0C")]
	public Transform DirectLight;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5A40", Offset = "0x2D5A40")]
	public Transform AdditionalDirectLight;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5A74", Offset = "0x2D5A74")]
	public EnviroReflectionProbe GlobalReflectionProbe;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5ADC", Offset = "0x2D5ADC")]
	public WindZone windZone;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5B40", Offset = "0x2D5B40")]
	public EnviroLightning LightningGenerator;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5B94", Offset = "0x2D5B94")]
	public Transform satellites;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5BC8", Offset = "0x2D5BC8")]
	public Transform starsRotation;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5C28", Offset = "0x2D5C28")]
	public GameObject particleClouds;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x373DA4", Offset = "0x373DA4", VA = "0x373DA4")]
	public EnviroComponents()
	{
	}
}
[Serializable]
[Token(Token = "0x2000021")]
public class EnviroTime
{
	[Token(Token = "0x20001E0")]
	public enum TimeProgressMode
	{
		[Token(Token = "0x400083D")]
		None,
		[Token(Token = "0x400083E")]
		Simulated,
		[Token(Token = "0x400083F")]
		OneDay,
		[Token(Token = "0x4000840")]
		SystemTime
	}

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5C74", Offset = "0x2D5C74")]
	public TimeProgressMode ProgressTime;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5CA8", Offset = "0x2D5CA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D5CA8", Offset = "0x2D5CA8")]
	public int Seconds;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5CFC", Offset = "0x2D5CFC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D5CFC", Offset = "0x2D5CFC")]
	public int Minutes;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5D50", Offset = "0x2D5D50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D5D50", Offset = "0x2D5D50")]
	public int Hours;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5DB0", Offset = "0x2D5DB0")]
	public int Days;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5DF0", Offset = "0x2D5DF0")]
	public int Years;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x2D5E30", Offset = "0x2D5E30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5E30", Offset = "0x2D5E30")]
	public int DaysInYear;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5E94", Offset = "0x2D5E94")]
	public float DayLengthInMinutes;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5EE0", Offset = "0x2D5EE0")]
	public float NightLengthInMinutes;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D5F30", Offset = "0x2D5F30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5F30", Offset = "0x2D5F30")]
	public int utcOffset;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D5F9C", Offset = "0x2D5F9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D5F9C", Offset = "0x2D5F9C")]
	public float Latitude;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D6010", Offset = "0x2D6010")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6010", Offset = "0x2D6010")]
	public float Longitude;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float solarTime;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float lunarTime;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D60A0", Offset = "0x2D60A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D60A0", Offset = "0x2D60A0")]
	public float dayNightSwitch;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xD58700", Offset = "0xD58700", VA = "0xD58700")]
	public EnviroTime()
	{
	}
}
[Serializable]
[Token(Token = "0x2000022")]
public class EnviroInteriorZoneSettings
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public Color currentInteriorDirectLightMod;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Color currentInteriorAmbientLightMod;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Color currentInteriorAmbientEQLightMod;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Color currentInteriorAmbientGRLightMod;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Color currentInteriorSkyboxMod;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Color currentInteriorFogColorMod;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public float currentInteriorFogMod;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public float currentInteriorWeatherEffectMod;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public float currentInteriorZoneAudioVolume;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public float currentInteriorZoneAudioFadingSpeed;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x37F71C", Offset = "0x37F71C", VA = "0x37F71C")]
	public EnviroInteriorZoneSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000023")]
public class EnviroSatellite
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6198", Offset = "0x2D6198")]
	public string name;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D61CC", Offset = "0x2D61CC")]
	public GameObject prefab;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6200", Offset = "0x2D6200")]
	public float orbit;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D623C", Offset = "0x2D623C")]
	public float xRot;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6288", Offset = "0x2D6288")]
	public float yRot;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xD49F3C", Offset = "0xD49F3C", VA = "0xD49F3C")]
	public EnviroSatellite()
	{
	}
}
[Serializable]
[Token(Token = "0x2000024")]
public class EnviroWeather
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D62D4", Offset = "0x2D62D4")]
	public bool updateWeather;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<EnviroWeatherPreset> weatherPresets;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<EnviroWeatherPrefab> WeatherPrefabs;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D632C", Offset = "0x2D632C")]
	public List<EnviroZone> zones;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnviroWeatherPreset startWeatherPreset;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6390", Offset = "0x2D6390")]
	public EnviroZone currentActiveZone;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D63D8", Offset = "0x2D63D8")]
	public EnviroWeatherPrefab currentActiveWeatherPrefab;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public EnviroWeatherPreset currentActiveWeatherPreset;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public EnviroWeatherPrefab lastActiveWeatherPrefab;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public EnviroWeatherPreset lastActiveWeatherPreset;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject VFXHolder;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float wetness;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float curWetness;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float snowStrength;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float curSnowStrength;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public int thundersfx;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public EnviroAudioSource currentAudioSource;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public bool weatherFullyChanged;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float currentTemperature;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xD5AEE0", Offset = "0xD5AEE0", VA = "0xD5AEE0")]
	public EnviroWeather()
	{
	}
}
[Serializable]
[Token(Token = "0x2000025")]
public class EnviroFogging
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public float skyFogStart;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public float skyFogHeight;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public float skyFogIntensity;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public float skyFogStrength;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float scatteringStrenght;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float sunBlocking;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float moonIntensity;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x3805C8", Offset = "0x3805C8", VA = "0x3805C8")]
	public EnviroFogging()
	{
	}
}
[Token(Token = "0x2000026")]
public class EnviroCore : MonoBehaviour
{
	[Token(Token = "0x20001E1")]
	public enum EnviroStartMode
	{
		[Token(Token = "0x4000842")]
		Started,
		[Token(Token = "0x4000843")]
		Paused,
		[Token(Token = "0x4000844")]
		PausedButTimeProgress
	}

	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D48B0", Offset = "0x2D48B0")]
	private sealed class <PlayThunderRandom>d__123 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroCore <>4__this;

		[Token(Token = "0x170000D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x37FC64", Offset = "0x37FC64", VA = "0x37FC64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x37FCF4", Offset = "0x37FCF4", VA = "0x37FCF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x37B800", Offset = "0x37B800", VA = "0x37B800")]
		[DebuggerHidden]
		public <PlayThunderRandom>d__123(int <>1__state)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x37FA40", Offset = "0x37FA40", VA = "0x37FA40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x37FA44", Offset = "0x37FA44", VA = "0x37FA44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x37FC6C", Offset = "0x37FC6C", VA = "0x37FC6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D48C0", Offset = "0x2D48C0")]
	private sealed class <PlayLightningEffect>d__124 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroCore <>4__this;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x170000DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x37F9A8", Offset = "0x37F9A8", VA = "0x37F9A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x37FA38", Offset = "0x37FA38", VA = "0x37FA38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x37B8D8", Offset = "0x37B8D8", VA = "0x37B8D8")]
		[DebuggerHidden]
		public <PlayLightningEffect>d__124(int <>1__state)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x37F7A4", Offset = "0x37F7A4", VA = "0x37F7A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x37F7A8", Offset = "0x37F7A8", VA = "0x37F7A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x37F9B0", Offset = "0x37F9B0", VA = "0x37F9B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D652C", Offset = "0x2D652C")]
	public EnviroProfile profile;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public bool profileLoaded;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6570", Offset = "0x2D6570")]
	public GameObject Player;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D65A4", Offset = "0x2D65A4")]
	public Camera PlayerCamera;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D65D8", Offset = "0x2D65D8")]
	public bool AssignInRuntime;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D660C", Offset = "0x2D660C")]
	public string PlayerTag;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6648", Offset = "0x2D6648")]
	public string CameraTag;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D6684", Offset = "0x2D6684")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6684", Offset = "0x2D6684")]
	public bool HDR;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public EnviroStartMode startMode;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool started;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool serverMode;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public EnviroWeatherCloudsConfig cloudsConfig;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float thunder;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool isNight;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<GameObject> satellites;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public List<GameObject> satellitesRotation;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<EnviroVegetationInstance> EnviroVegetationInstances;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public EnviroLightSettings lightSettings;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public EnviroVolumeLightingSettings volumeLightSettings;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public EnviroSkySettings skySettings;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public EnviroReflectionSettings reflectionSettings;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public EnviroCloudSettings cloudsSettings;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public EnviroWeatherSettings weatherSettings;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public EnviroFogSettings fogSettings;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public EnviroLightShaftsSettings lightshaftsSettings;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public EnviroSeasonSettings seasonsSettings;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public EnviroAudioSettings audioSettings;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public EnviroSatellitesSettings satelliteSettings;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public EnviroQualitySettings qualitySettings;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public EnviroInteriorZoneSettings interiorZoneSettings;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public EnviroDistanceBlurSettings distanceBlurSettings;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public DateTime dateTime;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public float internalHour;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public float currentHour;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public float currentDay;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public float currentYear;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public double currentTimeInHours;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public float LST;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public float lastHourUpdate;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public float hourTime;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public Vector3 cloudAnim;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public Vector2 cloudAnimNonScaled;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public Vector2 cirrusAnim;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public float windIntensity;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[HideInInspector]
	public float shadowIntensityMod;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public bool interiorMode;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[HideInInspector]
	public EnviroInterior lastInteriorZone;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public bool updateFogDensity;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[HideInInspector]
	public Color customFogColor;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[HideInInspector]
	public float customFogIntensity;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public Color currentWeatherSkyMod;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public Color currentWeatherLightMod;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public Color currentWeatherFogMod;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D69AC", Offset = "0x2D69AC")]
	public float customMoonPhase;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public Light MainLight;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Light AdditionalLight;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public Transform MoonTransform;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Renderer MoonRenderer;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public Material MoonShader;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public float lastAmbientSkyUpdate;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public double lastRelfectionUpdate;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	public Vector3 lastRelfectionPositionUpdate;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[HideInInspector]
	public GameObject EffectsHolder;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ParticleSystem lightningEffect;

	[Token(Token = "0x40000DD")]
	public const float pi = (float)Math.PI;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Vector3 K;

	[Token(Token = "0x40000DF")]
	private const float n = 1.0003f;

	[Token(Token = "0x40000E0")]
	private const float N = 2.545E+25f;

	[Token(Token = "0x40000E1")]
	private const float pn = 0.035f;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public EnviroTime GameTime;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public EnviroAudio Audio;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public EnviroWeather Weather;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public EnviroSeasons Seasons;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public EnviroComponents Components;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public EnviroFogging Fog;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public EnviroLightshafts LightShafts;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public EnviroParticleCloud particleClouds;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[HideInInspector]
	public EnviroPostProcessing EnviroPostProcessing;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D6A34", Offset = "0x2D6A34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6A34", Offset = "0x2D6A34")]
	public int moonRenderingLayer;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6AB8", Offset = "0x2D6AB8")]
	public int satelliteRenderingLayer;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6AEC", Offset = "0x2D6AEC")]
	public bool setCameraClearFlags;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x373DAC", Offset = "0x373DAC", VA = "0x373DAC")]
	public void UpdateEnviroment()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x37410C", Offset = "0x37410C", VA = "0x37410C")]
	public void PlayAmbient(AudioClip sfx)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x374468", Offset = "0x374468", VA = "0x374468")]
	public void TryPlayAmbientSFX()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x374AEC", Offset = "0x374AEC", VA = "0x374AEC")]
	public void CreateWeatherEffectHolder(string name)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x374D98", Offset = "0x374D98", VA = "0x374D98")]
	public void CreateEffects(string name)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x375538", Offset = "0x375538", VA = "0x375538")]
	public Transform CreateDirectionalLight(bool additional)
	{
		return null;
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x375710", Offset = "0x375710", VA = "0x375710")]
	public Vector3 BetaRay(Vector3 waveLength)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x3758A0", Offset = "0x3758A0", VA = "0x3758A0")]
	public Vector3 BetaMie(float turbidity, Vector3 waveLength)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x3759CC", Offset = "0x3759CC", VA = "0x3759CC")]
	public Vector3 GetMieG(float g)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x375A30", Offset = "0x375A30", VA = "0x375A30")]
	public Vector3 GetMieGScene(float g)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x375A94", Offset = "0x375A94", VA = "0x375A94")]
	public void UpdateTime(int daysInYear)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x376320", Offset = "0x376320", VA = "0x376320")]
	public void SetInternalTime(int year, int dayOfYear, int hour, int minute, int seconds)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x375F68", Offset = "0x375F68", VA = "0x375F68")]
	public void SetGameTime()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x376198", Offset = "0x376198", VA = "0x376198")]
	public void SetTime(DateTime date)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x3763E8", Offset = "0x3763E8", VA = "0x3763E8")]
	public void ResetHourEventTimer()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x375EA0", Offset = "0x375EA0", VA = "0x375EA0")]
	public void SetTime(int year, int dayOfYear, int hour, int minute, int seconds)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x3763F4", Offset = "0x3763F4", VA = "0x3763F4")]
	public void SetInternalTimeOfDay(float inHours)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x3764D0", Offset = "0x3764D0", VA = "0x3764D0")]
	public string GetTimeStringWithSeconds()
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x3765F0", Offset = "0x3765F0", VA = "0x3765F0")]
	public string GetTimeString()
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x3766D0", Offset = "0x3766D0", VA = "0x3766D0")]
	public DateTime CreateSystemDate()
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x37677C", Offset = "0x37677C", VA = "0x37677C")]
	public float Remap(float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x3767B0", Offset = "0x3767B0", VA = "0x3767B0")]
	public Vector3 OrbitalToLocal(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x37687C", Offset = "0x37687C", VA = "0x37687C")]
	public void CalculateSunPosition(float d, float ecl, bool simpleMoon)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x376F64", Offset = "0x376F64", VA = "0x376F64")]
	public void CalculateMoonPosition(float d, float ecl)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x377478", Offset = "0x377478", VA = "0x377478")]
	public Vector3 UpdateSatellitePosition(float orbit, float orbit2, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x37777C", Offset = "0x37777C", VA = "0x37777C")]
	public void CalculateStarsPosition(float siderealTime)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x377A0C", Offset = "0x377A0C", VA = "0x377A0C")]
	public void UpdateSunAndMoonPosition()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x376F28", Offset = "0x376F28", VA = "0x376F28")]
	public float GetUniversalTimeOfDay()
	{
		return default(float);
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x377BBC", Offset = "0x377BBC", VA = "0x377BBC")]
	public float GetTimeOfDay()
	{
		return default(float);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x3762E8", Offset = "0x3762E8", VA = "0x3762E8")]
	public double GetInHours(float hours, float days, float years, int daysInYear)
	{
		return default(double);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x373F60", Offset = "0x373F60", VA = "0x373F60")]
	public void UpdateSeason()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x377BC4", Offset = "0x377BC4", VA = "0x377BC4")]
	public void ChangeSeason(EnviroSeasons.Seasons season)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x377C74", Offset = "0x377C74", VA = "0x377C74")]
	public void ApplyProfile(EnviroProfile p)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x37804C", Offset = "0x37804C", VA = "0x37804C")]
	public void SaveProfile()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x3783A4", Offset = "0x3783A4", VA = "0x3783A4")]
	public void UpdateReflections()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x378BE0", Offset = "0x378BE0", VA = "0x378BE0")]
	public void UpdateAmbientLight()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x3792D0", Offset = "0x3792D0", VA = "0x3792D0")]
	public void CalculateDirectLight()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x37A624", Offset = "0x37A624", VA = "0x37A624")]
	public void UpdateSceneView()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x37A858", Offset = "0x37A858", VA = "0x37A858")]
	public void UpdateWind(EnviroWeatherPreset preset)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x37B080", Offset = "0x37B080", VA = "0x37B080")]
	public int GetActiveWeatherID()
	{
		return default(int);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x37B1E8", Offset = "0x37B1E8", VA = "0x37B1E8")]
	public void UpdateWeatherVariables(EnviroWeatherPreset p)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x37B774", Offset = "0x37B774", VA = "0x37B774")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E03A0", Offset = "0x2E03A0")]
	public IEnumerator PlayThunderRandom()
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x37B820", Offset = "0x37B820", VA = "0x37B820")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0418", Offset = "0x2E0418")]
	public IEnumerator PlayLightningEffect(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x37B8F8", Offset = "0x37B8F8", VA = "0x37B8F8")]
	public void PlayLightning()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x37BC28", Offset = "0x37BC28", VA = "0x37BC28")]
	public void ForceWeatherUpdate()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x37BF68", Offset = "0x37BF68", VA = "0x37BF68")]
	public void CalcWeatherTransitionState()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x37C138", Offset = "0x37C138", VA = "0x37C138")]
	public void SetWeatherOverwrite(int weatherId)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x37C4B4", Offset = "0x37C4B4", VA = "0x37C4B4")]
	public void SetWeatherOverwrite(EnviroWeatherPreset preset)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x37C85C", Offset = "0x37C85C", VA = "0x37C85C")]
	public void ChangeWeather(int weatherId)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x37CB50", Offset = "0x37CB50", VA = "0x37CB50")]
	public void ChangeWeather(EnviroWeatherPreset preset)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x37CE68", Offset = "0x37CE68", VA = "0x37CE68")]
	public void ChangeWeather(string weatherName)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x37D120", Offset = "0x37D120", VA = "0x37D120")]
	public void UpdateAudioSource(EnviroWeatherPreset i)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x37D594", Offset = "0x37D594", VA = "0x37D594")]
	public void RegisterZone(EnviroZone zoneToAdd)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x37D628", Offset = "0x37D628", VA = "0x37D628")]
	public void EnterZone(EnviroZone zone)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x37D650", Offset = "0x37D650", VA = "0x37D650")]
	public void ExitZone()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x37D654", Offset = "0x37D654", VA = "0x37D654")]
	public void UpdateParticleClouds(bool active)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x37E140", Offset = "0x37E140", VA = "0x37E140")]
	public void CreateSatellite(int id)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x37E4C4", Offset = "0x37E4C4", VA = "0x37E4C4")]
	public void CheckSatellites()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x37E6DC", Offset = "0x37E6DC", VA = "0x37E6DC")]
	public void CalculateSatPositions(float siderealTime)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x37EBFC", Offset = "0x37EBFC", VA = "0x37EBFC")]
	public void SetCameraHDR(Camera cam, bool hdr)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x37EC30", Offset = "0x37EC30", VA = "0x37EC30")]
	public bool GetCameraHDR(Camera cam)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x37EC5C", Offset = "0x37EC5C", VA = "0x37EC5C")]
	private Quaternion LightLookAt(Quaternion inputRotation, Quaternion newRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x37ED58", Offset = "0x37ED58", VA = "0x37ED58")]
	public int RegisterMe(EnviroVegetationInstance me)
	{
		return default(int);
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x37EE08", Offset = "0x37EE08", VA = "0x37EE08")]
	public void Save()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x37EFF4", Offset = "0x37EFF4", VA = "0x37EFF4")]
	public void Load()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x37F170", Offset = "0x37F170", VA = "0x37F170")]
	public EnviroCore()
	{
	}
}
[Token(Token = "0x2000027")]
public class EnviroEvents : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E4")]
	public class EnviroActionEvent : UnityEvent
	{
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x380598", Offset = "0x380598", VA = "0x380598")]
		public EnviroActionEvent()
		{
		}
	}

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public EnviroActionEvent onHourPassedActions;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnviroActionEvent onDayPassedActions;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public EnviroActionEvent onYearPassedActions;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnviroActionEvent onWeatherChangedActions;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public EnviroActionEvent onSeasonChangedActions;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnviroActionEvent onNightActions;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public EnviroActionEvent onDayActions;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnviroActionEvent onZoneChangedActions;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x37FFA8", Offset = "0x37FFA8", VA = "0x37FFA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x380314", Offset = "0x380314", VA = "0x380314")]
	private void HourPassed()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x380340", Offset = "0x380340", VA = "0x380340")]
	private void DayPassed()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x38036C", Offset = "0x38036C", VA = "0x38036C")]
	private void YearPassed()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x380398", Offset = "0x380398", VA = "0x380398")]
	private void WeatherChanged()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x3803C4", Offset = "0x3803C4", VA = "0x3803C4")]
	private void SeasonsChanged()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x3803F0", Offset = "0x3803F0", VA = "0x3803F0")]
	private void NightTime()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x38041C", Offset = "0x38041C", VA = "0x38041C")]
	private void DayTime()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x380448", Offset = "0x380448", VA = "0x380448")]
	private void ZoneChanged()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x380474", Offset = "0x380474", VA = "0x380474")]
	public EnviroEvents()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x3805A0", Offset = "0x3805A0", VA = "0x3805A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0490", Offset = "0x2E0490")]
	private void <Start>b__9_0()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x3805A4", Offset = "0x3805A4", VA = "0x3805A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E04A0", Offset = "0x2E04A0")]
	private void <Start>b__9_1()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x3805A8", Offset = "0x3805A8", VA = "0x3805A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E04B0", Offset = "0x2E04B0")]
	private void <Start>b__9_2()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x3805AC", Offset = "0x3805AC", VA = "0x3805AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E04C0", Offset = "0x2E04C0")]
	private void <Start>b__9_3(EnviroWeatherPreset type)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x3805B0", Offset = "0x3805B0", VA = "0x3805B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E04D0", Offset = "0x2E04D0")]
	private void <Start>b__9_4(EnviroSeasons.Seasons season)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x3805B4", Offset = "0x3805B4", VA = "0x3805B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E04E0", Offset = "0x2E04E0")]
	private void <Start>b__9_5()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x3805B8", Offset = "0x3805B8", VA = "0x3805B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E04F0", Offset = "0x2E04F0")]
	private void <Start>b__9_6()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x3805BC", Offset = "0x3805BC", VA = "0x3805BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0500", Offset = "0x2E0500")]
	private void <Start>b__9_7(EnviroZone zone)
	{
	}
}
[Serializable]
[Token(Token = "0x2000028")]
public class EnviroQualitySettings
{
	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D6B4C", Offset = "0x2D6B4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6B4C", Offset = "0x2D6B4C")]
	public float GlobalParticleEmissionRates;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6BD0", Offset = "0x2D6BD0")]
	public float UpdateInterval;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xD43830", Offset = "0xD43830", VA = "0xD43830")]
	public EnviroQualitySettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000029")]
public class EnviroSatelliteVariables
{
	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6C04", Offset = "0x2D6C04")]
	public string name;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6C38", Offset = "0x2D6C38")]
	public GameObject prefab;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6C6C", Offset = "0x2D6C6C")]
	public float orbit_X;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6CA0", Offset = "0x2D6CA0")]
	public float orbit_Y;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6CD4", Offset = "0x2D6CD4")]
	public float speed;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xD49F44", Offset = "0xD49F44", VA = "0xD49F44")]
	public EnviroSatelliteVariables()
	{
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public class EnviroSeasonSettings
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D6D24", Offset = "0x2D6D24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6D24", Offset = "0x2D6D24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D6D24", Offset = "0x2D6D24")]
	public int SpringStart;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6DB8", Offset = "0x2D6DB8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D6DB8", Offset = "0x2D6DB8")]
	public int SpringEnd;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6E20", Offset = "0x2D6E20")]
	public AnimationCurve springBaseTemperature;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D6E68", Offset = "0x2D6E68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6E68", Offset = "0x2D6E68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D6E68", Offset = "0x2D6E68")]
	public int SummerStart;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6EFC", Offset = "0x2D6EFC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D6EFC", Offset = "0x2D6EFC")]
	public int SummerEnd;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6F64", Offset = "0x2D6F64")]
	public AnimationCurve summerBaseTemperature;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D6FAC", Offset = "0x2D6FAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D6FAC", Offset = "0x2D6FAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D6FAC", Offset = "0x2D6FAC")]
	public int AutumnStart;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7040", Offset = "0x2D7040")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D7040", Offset = "0x2D7040")]
	public int AutumnEnd;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D70A8", Offset = "0x2D70A8")]
	public AnimationCurve autumnBaseTemperature;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D70F0", Offset = "0x2D70F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D70F0", Offset = "0x2D70F0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D70F0", Offset = "0x2D70F0")]
	public int WinterStart;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7184", Offset = "0x2D7184")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D7184", Offset = "0x2D7184")]
	public int WinterEnd;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D71EC", Offset = "0x2D71EC")]
	public AnimationCurve winterBaseTemperature;

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xD4A5C8", Offset = "0xD4A5C8", VA = "0xD4A5C8")]
	public EnviroSeasonSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200002B")]
public class EnviroWeatherSettings
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D7234", Offset = "0x2D7234")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7234", Offset = "0x2D7234")]
	public bool useTag;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D729C", Offset = "0x2D729C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D729C", Offset = "0x2D729C")]
	public float wetnessAccumulationSpeed;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7348", Offset = "0x2D7348")]
	public float wetnessDryingSpeed;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D73B4", Offset = "0x2D73B4")]
	public float snowAccumulationSpeed;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D741C", Offset = "0x2D741C")]
	public float snowMeltingSpeed;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7484", Offset = "0x2D7484")]
	public float snowMeltingTresholdTemperature;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D74E4", Offset = "0x2D74E4")]
	public float cloudTransitionSpeed;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7518", Offset = "0x2D7518")]
	public float fogTransitionSpeed;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D754C", Offset = "0x2D754C")]
	public float windIntensityTransitionSpeed;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7580", Offset = "0x2D7580")]
	public float effectTransitionSpeed;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D75B4", Offset = "0x2D75B4")]
	public float audioTransitionSpeed;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D75E8", Offset = "0x2D75E8")]
	public GameObject lightningEffect;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D7628", Offset = "0x2D7628")]
	public float lightningRange;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D7648", Offset = "0x2D7648")]
	public float lightningHeight;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D7668", Offset = "0x2D7668")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7668", Offset = "0x2D7668")]
	public float temperatureChangingSpeed;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xD5B5E0", Offset = "0xD5B5E0", VA = "0xD5B5E0")]
	public EnviroWeatherSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
public class EnviroSkySettings
{
	[Token(Token = "0x20001E5")]
	public enum SunAndMoonCalc
	{
		[Token(Token = "0x400084D")]
		Simple,
		[Token(Token = "0x400084E")]
		Realistic
	}

	[Token(Token = "0x20001E6")]
	public enum MoonPhases
	{
		[Token(Token = "0x4000850")]
		Custom,
		[Token(Token = "0x4000851")]
		Realistic
	}

	[Token(Token = "0x20001E7")]
	public enum SkyboxModi
	{
		[Token(Token = "0x4000853")]
		Default,
		[Token(Token = "0x4000854")]
		Simple,
		[Token(Token = "0x4000855")]
		CustomSkybox,
		[Token(Token = "0x4000856")]
		CustomColor
	}

	[Token(Token = "0x20001E8")]
	public enum SkyboxModiLW
	{
		[Token(Token = "0x4000858")]
		Simple,
		[Token(Token = "0x4000859")]
		CustomSkybox,
		[Token(Token = "0x400085A")]
		CustomColor
	}

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D76F4", Offset = "0x2D76F4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D76F4", Offset = "0x2D76F4")]
	public SkyboxModi skyboxMode;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7758", Offset = "0x2D7758")]
	public SkyboxModiLW skyboxModeLW;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D778C", Offset = "0x2D778C")]
	public Material customSkyboxMaterial;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D77C0", Offset = "0x2D77C0")]
	public Color customSkyboxColor;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7828", Offset = "0x2D7828")]
	public bool blackGroundMode;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D7884", Offset = "0x2D7884")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7884", Offset = "0x2D7884")]
	public Vector3 waveLength;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D78E4", Offset = "0x2D78E4")]
	public float rayleigh;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7934", Offset = "0x2D7934")]
	public float turbidity;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7968", Offset = "0x2D7968")]
	public float mie;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D799C", Offset = "0x2D799C")]
	public float g;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D79D0", Offset = "0x2D79D0")]
	public AnimationCurve scatteringCurve;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7A04", Offset = "0x2D7A04")]
	public Gradient scatteringColor;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D7A38", Offset = "0x2D7A38")]
	public SunAndMoonCalc sunAndMoonPosition;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7A68", Offset = "0x2D7A68")]
	public float sunIntensity;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7AD0", Offset = "0x2D7AD0")]
	public float sunDiskScale;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7B18", Offset = "0x2D7B18")]
	public float sunDiskIntensity;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7B64", Offset = "0x2D7B64")]
	public Gradient sunDiskColor;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7B98", Offset = "0x2D7B98")]
	public Gradient simpleSkyColor;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7BE0", Offset = "0x2D7BE0")]
	public Gradient simpleHorizonColor;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7C2C", Offset = "0x2D7C2C")]
	public Gradient simpleSunColor;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7C74", Offset = "0x2D7C74")]
	public AnimationCurve simpleSunDiskSize;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D7CC4", Offset = "0x2D7CC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7CC4", Offset = "0x2D7CC4")]
	public bool renderMoon;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7D38", Offset = "0x2D7D38")]
	public MoonPhases moonPhaseMode;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7D9C", Offset = "0x2D7D9C")]
	public Texture moonTexture;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7DDC", Offset = "0x2D7DDC")]
	public Texture glowTexture;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7E24", Offset = "0x2D7E24")]
	public Color moonColor;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D7E68", Offset = "0x2D7E68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7E68", Offset = "0x2D7E68")]
	public float moonBrightness;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D7ECC", Offset = "0x2D7ECC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7ECC", Offset = "0x2D7ECC")]
	public float moonSize;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D7F2C", Offset = "0x2D7F2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7F2C", Offset = "0x2D7F2C")]
	public float glowSize;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7F9C", Offset = "0x2D7F9C")]
	public AnimationCurve moonGlow;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D7FDC", Offset = "0x2D7FDC")]
	public Color moonGlowColor;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8020", Offset = "0x2D8020")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D8020", Offset = "0x2D8020")]
	public float startMoonPhase;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D80A8", Offset = "0x2D80A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D80A8", Offset = "0x2D80A8")]
	public AnimationCurve skyLuminence;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8130", Offset = "0x2D8130")]
	public AnimationCurve skyColorPower;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D819C", Offset = "0x2D819C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D819C", Offset = "0x2D819C")]
	public float skyExposure;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D821C", Offset = "0x2D821C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D821C", Offset = "0x2D821C")]
	public Cubemap starsCubeMap;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8290", Offset = "0x2D8290")]
	public AnimationCurve starsIntensity;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D82E8", Offset = "0x2D82E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D82E8", Offset = "0x2D82E8")]
	public float starsTwinklingRate;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D834C", Offset = "0x2D834C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D834C", Offset = "0x2D834C")]
	public Cubemap galaxyCubeMap;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D83C0", Offset = "0x2D83C0")]
	public AnimationCurve galaxyIntensity;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D8418", Offset = "0x2D8418")]
	public bool dithering;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xD58530", Offset = "0xD58530", VA = "0xD58530")]
	public EnviroSkySettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200002D")]
public class EnviroSatellitesSettings
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8454", Offset = "0x2D8454")]
	public List<EnviroSatellite> additionalSatellites;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xD49F4C", Offset = "0xD49F4C", VA = "0xD49F4C")]
	public EnviroSatellitesSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class EnviroReflectionSettings
{
	[Token(Token = "0x20001E9")]
	public enum GlobalReflectionResolution
	{
		[Token(Token = "0x400085C")]
		R16,
		[Token(Token = "0x400085D")]
		R32,
		[Token(Token = "0x400085E")]
		R64,
		[Token(Token = "0x400085F")]
		R128,
		[Token(Token = "0x4000860")]
		R256,
		[Token(Token = "0x4000861")]
		R512,
		[Token(Token = "0x4000862")]
		R1024,
		[Token(Token = "0x4000863")]
		R2048
	}

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D8494", Offset = "0x2D8494")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8494", Offset = "0x2D8494")]
	public bool globalReflections;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D852C", Offset = "0x2D852C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D852C", Offset = "0x2D852C")]
	public bool globalReflectionCustomRendering;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D85A8", Offset = "0x2D85A8")]
	public bool globalReflectionUseFog;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D85DC", Offset = "0x2D85DC")]
	public bool globalReflectionTimeSlicing;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D8610", Offset = "0x2D8610")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8610", Offset = "0x2D8610")]
	public bool globalReflectionsUpdateOnGameTime;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D868C", Offset = "0x2D868C")]
	public bool globalReflectionsUpdateOnPosition;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D86C0", Offset = "0x2D86C0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D86C0", Offset = "0x2D86C0")]
	public float globalReflectionsIntensity;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8710", Offset = "0x2D8710")]
	public float globalReflectionsUpdateTreshhold;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D875C", Offset = "0x2D875C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D875C", Offset = "0x2D875C")]
	public float globalReflectionsScale;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D87B4", Offset = "0x2D87B4")]
	public GlobalReflectionResolution globalReflectionResolution;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8800", Offset = "0x2D8800")]
	public LayerMask globalReflectionLayers;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xD46DD4", Offset = "0xD46DD4", VA = "0xD46DD4")]
	public EnviroReflectionSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
public class EnviroLightSettings
{
	[Token(Token = "0x20001EA")]
	public enum LightingMode
	{
		[Token(Token = "0x4000865")]
		Single,
		[Token(Token = "0x4000866")]
		Dual
	}

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D8850", Offset = "0x2D8850")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8850", Offset = "0x2D8850")]
	public LightingMode directionalLightMode;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D88B0", Offset = "0x2D88B0")]
	public Gradient LightColor;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D88E4", Offset = "0x2D88E4")]
	public AnimationCurve directLightSunIntensity;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8948", Offset = "0x2D8948")]
	public AnimationCurve directLightMoonIntensity;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D89B0", Offset = "0x2D89B0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D89B0", Offset = "0x2D89B0")]
	public float lightIntensityTransitionSpeed;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8A38", Offset = "0x2D8A38")]
	public float lightIntensityToLumen;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8A6C", Offset = "0x2D8A6C")]
	public AnimationCurve shadowIntensity;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8ACC", Offset = "0x2D8ACC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D8ACC", Offset = "0x2D8ACC")]
	public float directLightAngleOffset;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D8B34", Offset = "0x2D8B34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8B34", Offset = "0x2D8B34")]
	public AmbientMode ambientMode;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8BA4", Offset = "0x2D8BA4")]
	public AnimationCurve ambientIntensity;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8C08", Offset = "0x2D8C08")]
	public Gradient ambientSkyColor;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8C6C", Offset = "0x2D8C6C")]
	public Gradient ambientEquatorColor;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8CD4", Offset = "0x2D8CD4")]
	public Gradient ambientGroundColor;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8D38", Offset = "0x2D8D38")]
	public bool stopRotationAtHigh;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D8D6C", Offset = "0x2D8D6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8D6C", Offset = "0x2D8D6C")]
	public float rotationStopHigh;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x37F524", Offset = "0x37F524", VA = "0x37F524")]
	public EnviroLightSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class EnviroDistanceBlurSettings
{
	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool antiFlicker;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public bool highQuality;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D8DBC", Offset = "0x2D8DBC")]
	public float radius;

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x37F788", Offset = "0x37F788", VA = "0x37F788")]
	public EnviroDistanceBlurSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000031")]
public class EnviroFogSettings
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D8DD8", Offset = "0x2D8DD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8DD8", Offset = "0x2D8DD8")]
	public FogMode Fogmode;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8E44", Offset = "0x2D8E44")]
	public bool useSimpleFog;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8EA4", Offset = "0x2D8EA4")]
	public bool useUnityFog;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D8EF4", Offset = "0x2D8EF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8EF4", Offset = "0x2D8EF4")]
	public bool distanceFog;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8F68", Offset = "0x2D8F68")]
	public bool useRadialDistance;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8FB0", Offset = "0x2D8FB0")]
	public float startDistance;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D8FFC", Offset = "0x2D8FFC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D8FFC", Offset = "0x2D8FFC")]
	public float distanceFogIntensity;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9068", Offset = "0x2D9068")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9068", Offset = "0x2D9068")]
	public float maximumFogDensity;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D90CC", Offset = "0x2D90CC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D90CC", Offset = "0x2D90CC")]
	public bool heightFog;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9140", Offset = "0x2D9140")]
	public float height;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D918C", Offset = "0x2D918C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D918C", Offset = "0x2D918C")]
	public float heightFogIntensity;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float heightDensity;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D9208", Offset = "0x2D9208")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9208", Offset = "0x2D9208")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9208", Offset = "0x2D9208")]
	public float noiseIntensity;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D92B0", Offset = "0x2D92B0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D92B0", Offset = "0x2D92B0")]
	public float noiseIntensityOffset;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9328", Offset = "0x2D9328")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9328", Offset = "0x2D9328")]
	public float noiseScale;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D939C", Offset = "0x2D939C")]
	public Vector2 noiseVelocity;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D93F8", Offset = "0x2D93F8")]
	public float mie;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D942C", Offset = "0x2D942C")]
	public float g;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D9460", Offset = "0x2D9460")]
	public bool dithering;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D949C", Offset = "0x2D949C")]
	public Gradient simpleFogColor;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float skyFogIntensity;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x37F610", Offset = "0x37F610", VA = "0x37F610")]
	public EnviroFogSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000032")]
public class EnviroVolumeLightingSettings
{
	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D94F4", Offset = "0x2D94F4")]
	public bool dirVolumeLighting;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D955C", Offset = "0x2D955C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D955C", Offset = "0x2D955C")]
	public int SampleCount;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D95B0", Offset = "0x2D95B0")]
	public AnimationCurve ScatteringCoef;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D95EC", Offset = "0x2D95EC")]
	public float ExtinctionCoef;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9608", Offset = "0x2D9608")]
	public float Anistropy;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MaxRayLength;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D9624", Offset = "0x2D9624")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9624", Offset = "0x2D9624")]
	public bool directLightNoise;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9688", Offset = "0x2D9688")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9688", Offset = "0x2D9688")]
	public float noiseIntensity;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D96F8", Offset = "0x2D96F8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D96F8", Offset = "0x2D96F8")]
	public float noiseIntensityOffset;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9770", Offset = "0x2D9770")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9770", Offset = "0x2D9770")]
	public float noiseScale;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D97E4", Offset = "0x2D97E4")]
	public Vector2 noiseVelocity;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xD5ADE0", Offset = "0xD5ADE0", VA = "0xD5ADE0")]
	public EnviroVolumeLightingSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000033")]
public class EnviroLightShaftsSettings
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D983C", Offset = "0x2D983C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D983C", Offset = "0x2D983C")]
	public EnviroPostProcessing.SunShaftsResolution resolution;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D98C8", Offset = "0x2D98C8")]
	public EnviroPostProcessing.ShaftsScreenBlendMode screenBlendMode;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D990C", Offset = "0x2D990C")]
	public bool useDepthTexture;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D9960", Offset = "0x2D9960")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9960", Offset = "0x2D9960")]
	public Gradient lightShaftsColorSun;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D99FC", Offset = "0x2D99FC")]
	public Gradient lightShaftsColorMoon;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9A60", Offset = "0x2D9A60")]
	public Gradient thresholdColorSun;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9A94", Offset = "0x2D9A94")]
	public Gradient thresholdColorMoon;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9AC8", Offset = "0x2D9AC8")]
	public float blurRadius;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9B10", Offset = "0x2D9B10")]
	public float intensity;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9B5C", Offset = "0x2D9B5C")]
	public float maxRadius;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x37F6E8", Offset = "0x37F6E8", VA = "0x37F6E8")]
	public EnviroLightShaftsSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000034")]
public class EnviroAudioSettings
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9BA4", Offset = "0x2D9BA4")]
	public List<AudioClip> ThunderSFX;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x372C1C", Offset = "0x372C1C", VA = "0x372C1C")]
	public EnviroAudioSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
public class EnviroCloudSettings
{
	[Token(Token = "0x20001EB")]
	public enum FlatCloudResolution
	{
		[Token(Token = "0x4000868")]
		R512,
		[Token(Token = "0x4000869")]
		R1024,
		[Token(Token = "0x400086A")]
		R2048,
		[Token(Token = "0x400086B")]
		R4096
	}

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9C00", Offset = "0x2D9C00")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9C00", Offset = "0x2D9C00")]
	public float cloudsWorldScale;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9C58", Offset = "0x2D9C58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9C58", Offset = "0x2D9C58")]
	public float cloudsHeightMod;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9CC0", Offset = "0x2D9CC0")]
	public bool depthBlending;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9D20", Offset = "0x2D9D20")]
	public bool bilateralUpsampling;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2D9D54", Offset = "0x2D9D54")]
	public bool useWindZoneDirection;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9D98", Offset = "0x2D9D98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9D98", Offset = "0x2D9D98")]
	public float cloudsTimeScale;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9E14", Offset = "0x2D9E14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9E14", Offset = "0x2D9E14")]
	public float cloudsWindIntensity;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9E84", Offset = "0x2D9E84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9E84", Offset = "0x2D9E84")]
	public float cloudsUpwardsWindIntensity;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9EFC", Offset = "0x2D9EFC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9EFC", Offset = "0x2D9EFC")]
	public float cirrusWindIntensity;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9F6C", Offset = "0x2D9F6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9F6C", Offset = "0x2D9F6C")]
	public float cloudsWindDirectionX;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2D9FE0", Offset = "0x2D9FE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2D9FE0", Offset = "0x2D9FE0")]
	public float cloudsWindDirectionY;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DA054", Offset = "0x2DA054")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA054", Offset = "0x2DA054")]
	public AnimationCurve attenuationClamp;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA0DC", Offset = "0x2DA0DC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DA0DC", Offset = "0x2DA0DC")]
	public float hgPhase;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DA148", Offset = "0x2DA148")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA148", Offset = "0x2DA148")]
	public float silverLiningIntensity;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA19C", Offset = "0x2DA19C")]
	public AnimationCurve silverLiningSpread;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA1D0", Offset = "0x2DA1D0")]
	public Gradient volumeCloudsColor;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA230", Offset = "0x2DA230")]
	public Gradient volumeCloudsMoonColor;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA288", Offset = "0x2DA288")]
	public Gradient volumeCloudsAmbientColor;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA2F4", Offset = "0x2DA2F4")]
	public AnimationCurve lightIntensity;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA35C", Offset = "0x2DA35C")]
	public AnimationCurve ambientLightIntensity;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DA3C4", Offset = "0x2DA3C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA3C4", Offset = "0x2DA3C4")]
	public bool tonemapping;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA438", Offset = "0x2DA438")]
	public float cloudsExposure;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA47C", Offset = "0x2DA47C")]
	public bool useHaltonRaymarchOffset;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA4B0", Offset = "0x2DA4B0")]
	public bool useLessSteps;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DA4E4", Offset = "0x2DA4E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA4E4", Offset = "0x2DA4E4")]
	public int weatherMapTiling;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA568", Offset = "0x2DA568")]
	public Texture2D customWeatherMap;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA59C", Offset = "0x2DA59C")]
	public Vector2 locationOffset;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DA5E4", Offset = "0x2DA5E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA5E4", Offset = "0x2DA5E4")]
	public float weatherAnimSpeedScale;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DA648", Offset = "0x2DA648")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DA648", Offset = "0x2DA648")]
	public float globalCloudCoverage;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA6A8", Offset = "0x2DA6A8")]
	public Texture cirrusCloudsTexture;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA6F0", Offset = "0x2DA6F0")]
	public Gradient cirrusCloudsColor;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DA724", Offset = "0x2DA724")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA724", Offset = "0x2DA724")]
	public float cirrusCloudsAltitude;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA77C", Offset = "0x2DA77C")]
	public Texture flatCloudsNoiseTexture;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA7CC", Offset = "0x2DA7CC")]
	public FlatCloudResolution flatCloudsResolution;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA828", Offset = "0x2DA828")]
	public Gradient flatCloudsColor;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA85C", Offset = "0x2DA85C")]
	public float flatCloudsScale;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DA8A8", Offset = "0x2DA8A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA8A8", Offset = "0x2DA8A8")]
	public int flatCloudsNoiseOctaves;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DA920", Offset = "0x2DA920")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA920", Offset = "0x2DA920")]
	public float flatCloudsAltitude;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DA978", Offset = "0x2DA978")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA978", Offset = "0x2DA978")]
	public float flatCloudsMorphingSpeed;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DA9EC", Offset = "0x2DA9EC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DA9EC", Offset = "0x2DA9EC")]
	public float shadowIntensity;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DAA60", Offset = "0x2DAA60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DAA60", Offset = "0x2DAA60")]
	public int shadowCookieSize;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public EnviroParticleClouds ParticleCloudsLayer1;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public EnviroParticleClouds ParticleCloudsLayer2;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x373A70", Offset = "0x373A70", VA = "0x373A70")]
	public EnviroCloudSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000036")]
public class EnviroParticleClouds
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DAACC", Offset = "0x2DAACC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DAACC", Offset = "0x2DAACC")]
	public float height;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DAB34", Offset = "0x2DAB34")]
	public Gradient particleCloudsColor;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x373D90", Offset = "0x373D90", VA = "0x373D90")]
	public EnviroParticleClouds()
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public class EnviroProfile : ScriptableObject
{
	[Token(Token = "0x20001EC")]
	public enum settingsMode
	{
		[Token(Token = "0x400086D")]
		Lighting,
		[Token(Token = "0x400086E")]
		Sky,
		[Token(Token = "0x400086F")]
		Reflections,
		[Token(Token = "0x4000870")]
		Weather,
		[Token(Token = "0x4000871")]
		Season,
		[Token(Token = "0x4000872")]
		Clouds,
		[Token(Token = "0x4000873")]
		Fog,
		[Token(Token = "0x4000874")]
		VolumeLighting,
		[Token(Token = "0x4000875")]
		Lightshafts,
		[Token(Token = "0x4000876")]
		DistanceBlur,
		[Token(Token = "0x4000877")]
		Aurora,
		[Token(Token = "0x4000878")]
		Satellites,
		[Token(Token = "0x4000879")]
		Audio,
		[Token(Token = "0x400087A")]
		Quality
	}

	[Token(Token = "0x20001ED")]
	public enum settingsModeLW
	{
		[Token(Token = "0x400087C")]
		Lighting,
		[Token(Token = "0x400087D")]
		Sky,
		[Token(Token = "0x400087E")]
		Reflections,
		[Token(Token = "0x400087F")]
		Weather,
		[Token(Token = "0x4000880")]
		Season,
		[Token(Token = "0x4000881")]
		Clouds,
		[Token(Token = "0x4000882")]
		Fog,
		[Token(Token = "0x4000883")]
		Lightshafts,
		[Token(Token = "0x4000884")]
		Satellites,
		[Token(Token = "0x4000885")]
		Audio,
		[Token(Token = "0x4000886")]
		Quality
	}

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string version;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnviroLightSettings lightSettings;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public EnviroReflectionSettings reflectionSettings;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnviroVolumeLightingSettings volumeLightSettings;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public EnviroDistanceBlurSettings distanceBlurSettings;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnviroSkySettings skySettings;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public EnviroCloudSettings cloudsSettings;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnviroWeatherSettings weatherSettings;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public EnviroFogSettings fogSettings;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnviroLightShaftsSettings lightshaftsSettings;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public EnviroSeasonSettings seasonsSettings;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EnviroAudioSettings audioSettings;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public EnviroSatellitesSettings satelliteSettings;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EnviroQualitySettings qualitySettings;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public settingsMode viewMode;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public settingsModeLW viewModeLW;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public bool showPlayerSetup;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[HideInInspector]
	public bool showRenderingSetup;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	[HideInInspector]
	public bool showComponentsSetup;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	[HideInInspector]
	public bool showTimeUI;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool showWeatherUI;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[HideInInspector]
	public bool showAudioUI;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[HideInInspector]
	public bool showEffectsUI;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	[HideInInspector]
	public bool modified;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x3878B0", Offset = "0x3878B0", VA = "0x3878B0")]
	public EnviroProfile()
	{
	}
}
[Token(Token = "0x2000038")]
public static class EnviroProfileCreation
{
	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x387B18", Offset = "0x387B18", VA = "0x387B18")]
	public static void SetupDefaults(EnviroProfile profile)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x387D98", Offset = "0x387D98", VA = "0x387D98")]
	public static bool UpdateProfile(EnviroProfile profile, string fromV, string toV)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x38D924", Offset = "0x38D924", VA = "0x38D924")]
	public static GameObject GetAssetPrefab(string name)
	{
		return null;
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x38E074", Offset = "0x38E074", VA = "0x38E074")]
	public static AudioClip GetAudioClip(string name)
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x38D914", Offset = "0x38D914", VA = "0x38D914")]
	public static Cubemap GetAssetCubemap(string name)
	{
		return null;
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x387D90", Offset = "0x387D90", VA = "0x387D90")]
	public static EnviroProfile GetDefaultProfile(string name)
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x38D91C", Offset = "0x38D91C", VA = "0x38D91C")]
	public static Texture GetAssetTexture(string name)
	{
		return null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x38E07C", Offset = "0x38E07C", VA = "0x38E07C")]
	public static Gradient CreateGradient(Color clr1, float time1, Color clr2, float time2)
	{
		return null;
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x38DCFC", Offset = "0x38DCFC", VA = "0x38DCFC")]
	public static Gradient CreateGradient(List<Color> clrs, List<float> times)
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x38D968", Offset = "0x38D968", VA = "0x38D968")]
	public static Gradient CreateGradient(List<Color> clrs, List<float> times, List<float> alpha, List<float> timesAlpha)
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x38D92C", Offset = "0x38D92C", VA = "0x38D92C")]
	public static Color GetColor(string hex)
	{
		return default(Color);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x38D8B4", Offset = "0x38D8B4", VA = "0x38D8B4")]
	public static Keyframe CreateKey(float value, float time)
	{
		return default(Keyframe);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x38DFF0", Offset = "0x38DFF0", VA = "0x38DFF0")]
	public static Keyframe CreateKey(float value, float time, float inTangent, float outTangent)
	{
		return default(Keyframe);
	}
}
[Token(Token = "0x2000039")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2D42F4", Offset = "0x2D42F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2D42F4", Offset = "0x2D42F4")]
[ExecuteInEditMode]
public class EnviroReflectionProbe : MonoBehaviour
{
	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D48D0", Offset = "0x2D48D0")]
	private sealed class <RefreshFirstTime>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroReflectionProbe <>4__this;

		[Token(Token = "0x170000DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0xD46528", Offset = "0xD46528", VA = "0xD46528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0xD465B8", Offset = "0xD465B8", VA = "0xD465B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xD4522C", Offset = "0xD4522C", VA = "0xD4522C")]
		[DebuggerHidden]
		public <RefreshFirstTime>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xD464BC", Offset = "0xD464BC", VA = "0xD464BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xD464C0", Offset = "0xD464C0", VA = "0xD464C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xD46530", Offset = "0xD46530", VA = "0xD46530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D48E0", Offset = "0x2D48E0")]
	private sealed class <HDRPWorkaround>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroReflectionProbe <>4__this;

		[Token(Token = "0x170000DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0xD46424", Offset = "0xD46424", VA = "0xD46424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0xD464B4", Offset = "0xD464B4", VA = "0xD464B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xD452D8", Offset = "0xD452D8", VA = "0xD452D8")]
		[DebuggerHidden]
		public <HDRPWorkaround>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xD462F4", Offset = "0xD462F4", VA = "0xD462F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xD462F8", Offset = "0xD462F8", VA = "0xD462F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xD4642C", Offset = "0xD4642C", VA = "0xD4642C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D48F0", Offset = "0x2D48F0")]
	private sealed class <RefreshInstant>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroReflectionProbe <>4__this;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public RenderTexture renderTex;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RenderTexture mirrorTex;

		[Token(Token = "0x170000E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0xD46898", Offset = "0xD46898", VA = "0xD46898", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0xD46928", Offset = "0xD46928", VA = "0xD46928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xD452F8", Offset = "0xD452F8", VA = "0xD452F8")]
		[DebuggerHidden]
		public <RefreshInstant>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xD465C0", Offset = "0xD465C0", VA = "0xD465C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xD465C4", Offset = "0xD465C4", VA = "0xD465C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xD468A0", Offset = "0xD468A0", VA = "0xD468A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4900", Offset = "0x2D4900")]
	private sealed class <RefreshOvertime>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroReflectionProbe <>4__this;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public RenderTexture renderTex;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RenderTexture mirrorTex;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int <face>5__2;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0xD46D3C", Offset = "0xD46D3C", VA = "0xD46D3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0xD46DCC", Offset = "0xD46DCC", VA = "0xD46DCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xD45318", Offset = "0xD45318", VA = "0xD45318")]
		[DebuggerHidden]
		public <RefreshOvertime>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xD46930", Offset = "0xD46930", VA = "0xD46930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xD46998", Offset = "0xD46998", VA = "0xD46998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xD46948", Offset = "0xD46948", VA = "0xD46948")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xD46D44", Offset = "0xD46D44", VA = "0xD46D44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool standalone;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool updateReflectionOnGameTime;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float reflectionsUpdateTreshhold;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool useTimeSlicing;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[HideInInspector]
	public bool rendering;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ReflectionProbe myProbe;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool customRendering;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera bakingCam;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool currentMode;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentRes;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private RenderTexture cubemap;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture finalCubemap;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private RenderTexture mirrorTexture;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture renderTexture;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private GameObject renderCamObj;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera renderCam;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Material mirror;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material bakeMat;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Material convolutionMat;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine refreshing;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool paused;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Quaternion[] orientations;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private double lastRelfectionUpdate;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xD43850", Offset = "0xD43850", VA = "0xD43850")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xD4470C", Offset = "0xD4470C", VA = "0xD4470C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xD447DC", Offset = "0xD447DC", VA = "0xD447DC")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xD442F0", Offset = "0xD442F0", VA = "0xD442F0")]
	private void CreateRenderCamera()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xD44A50", Offset = "0xD44A50", VA = "0xD44A50")]
	private void UpdateCameraSettings()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xD44B2C", Offset = "0xD44B2C", VA = "0xD44B2C")]
	private Camera CreateBakingCamera()
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xD43A34", Offset = "0xD43A34", VA = "0xD43A34")]
	private void CreateCubemap()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xD43D78", Offset = "0xD43D78", VA = "0xD43D78")]
	private void CreateTexturesAndMaterial()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xD44ED0", Offset = "0xD44ED0", VA = "0xD44ED0")]
	public void RefreshReflection(bool timeSlice = false)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xD44680", Offset = "0xD44680", VA = "0xD44680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0510", Offset = "0x2E0510")]
	private IEnumerator RefreshFirstTime()
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xD4524C", Offset = "0xD4524C", VA = "0xD4524C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0588", Offset = "0x2E0588")]
	private IEnumerator HDRPWorkaround()
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xD450AC", Offset = "0xD450AC", VA = "0xD450AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0600", Offset = "0x2E0600")]
	private IEnumerator RefreshInstant(RenderTexture renderTex, RenderTexture mirrorTex)
	{
		return null;
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xD4516C", Offset = "0xD4516C", VA = "0xD4516C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0678", Offset = "0x2E0678")]
	private IEnumerator RefreshOvertime(RenderTexture renderTex, RenderTexture mirrorTex)
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xD45338", Offset = "0xD45338", VA = "0xD45338")]
	private void ClearTextures()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xD453DC", Offset = "0xD453DC", VA = "0xD453DC")]
	private void ConvolutionCubemap()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xD45C14", Offset = "0xD45C14", VA = "0xD45C14")]
	private void UpdateStandaloneReflection()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xD45E58", Offset = "0xD45E58", VA = "0xD45E58")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xD45F44", Offset = "0xD45F44", VA = "0xD45F44")]
	public EnviroReflectionProbe()
	{
	}
}
[Token(Token = "0x200003A")]
public class EnviroSkyMgr : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F2")]
	public class EnviroBaking
	{
		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int resolution;

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xD56AE8", Offset = "0xD56AE8", VA = "0xD56AE8")]
		public EnviroBaking()
		{
		}
	}

	[Token(Token = "0x20001F3")]
	public enum EnviroSkyVersion
	{
		[Token(Token = "0x400089A")]
		None,
		[Token(Token = "0x400089B")]
		LW
	}

	[Token(Token = "0x20001F4")]
	public enum EnviroRenderPipeline
	{
		[Token(Token = "0x400089D")]
		Legacy,
		[Token(Token = "0x400089E")]
		LWRP
	}

	[Token(Token = "0x20001F5")]
	public delegate void HourPassed();

	[Token(Token = "0x20001F6")]
	public delegate void DayPassed();

	[Token(Token = "0x20001F7")]
	public delegate void YearPassed();

	[Token(Token = "0x20001F8")]
	public delegate void WeatherChanged(EnviroWeatherPreset weatherType);

	[Token(Token = "0x20001F9")]
	public delegate void ZoneWeatherChanged(EnviroWeatherPreset weatherType, EnviroZone zone);

	[Token(Token = "0x20001FA")]
	public delegate void SeasonChanged(EnviroSeasons.Seasons season);

	[Token(Token = "0x20001FB")]
	public delegate void isNightE();

	[Token(Token = "0x20001FC")]
	public delegate void isDay();

	[Token(Token = "0x20001FD")]
	public delegate void ZoneChanged(EnviroZone zone);

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EnviroSkyMgr _instance;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DAC28", Offset = "0x2DAC28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DAC28", Offset = "0x2DAC28")]
	public bool dontDestroy;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool showSetup;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool showInstances;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public bool showThirdParty;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool showUtilities;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool showThirdPartyShaders;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool showThirdPartyMisc;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool showThirdPartyNetwork;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool showUtiliies;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture cube;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public EnviroBaking skyBaking;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnviroRenderPipeline currentRenderPipeline;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public EnviroSkyVersion currentEnviroSkyVersion;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnviroSkyLite enviroLWInstance;

	[Token(Token = "0x17000028")]
	public static EnviroSkyMgr instance
	{
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xD45D18", Offset = "0xD45D18", VA = "0xD45D18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	public EnviroComponents Components
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0xD52944", Offset = "0xD52944", VA = "0xD52944")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000106")]
		[Address(RVA = "0xD5296C", Offset = "0xD5296C", VA = "0xD5296C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public EnviroTime Time
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0xD52998", Offset = "0xD52998", VA = "0xD52998")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000108")]
		[Address(RVA = "0xD529C0", Offset = "0xD529C0", VA = "0xD529C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public EnviroSeasons Seasons
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0xD529EC", Offset = "0xD529EC", VA = "0xD529EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600010A")]
		[Address(RVA = "0xD52A14", Offset = "0xD52A14", VA = "0xD52A14")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public EnviroSeasonSettings SeasonSettings
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0xD52A40", Offset = "0xD52A40", VA = "0xD52A40")]
		get
		{
			return null;
		}
		[Token(Token = "0x600010C")]
		[Address(RVA = "0xD52A68", Offset = "0xD52A68", VA = "0xD52A68")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public EnviroReflectionSettings ReflectionSettings
	{
		[Token(Token = "0x600010D")]
		[Address(RVA = "0xD52A94", Offset = "0xD52A94", VA = "0xD52A94")]
		get
		{
			return null;
		}
		[Token(Token = "0x600010E")]
		[Address(RVA = "0xD52ABC", Offset = "0xD52ABC", VA = "0xD52ABC")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public EnviroCloudSettings CloudSettings
	{
		[Token(Token = "0x600010F")]
		[Address(RVA = "0xD52AE8", Offset = "0xD52AE8", VA = "0xD52AE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000110")]
		[Address(RVA = "0xD52B10", Offset = "0xD52B10", VA = "0xD52B10")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public EnviroInteriorZoneSettings InteriorZoneSettings
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0xD52B3C", Offset = "0xD52B3C", VA = "0xD52B3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000112")]
		[Address(RVA = "0xD52B64", Offset = "0xD52B64", VA = "0xD52B64")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public EnviroAudio AudioSettings
	{
		[Token(Token = "0x6000113")]
		[Address(RVA = "0xD52B90", Offset = "0xD52B90", VA = "0xD52B90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000114")]
		[Address(RVA = "0xD52BB8", Offset = "0xD52BB8", VA = "0xD52BB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public EnviroWeatherCloudsConfig Clouds
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0xD52BE4", Offset = "0xD52BE4", VA = "0xD52BE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000116")]
		[Address(RVA = "0xD52C0C", Offset = "0xD52C0C", VA = "0xD52C0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public EnviroWeatherSettings WeatherSettings
	{
		[Token(Token = "0x6000117")]
		[Address(RVA = "0xD52C38", Offset = "0xD52C38", VA = "0xD52C38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000118")]
		[Address(RVA = "0xD52C60", Offset = "0xD52C60", VA = "0xD52C60")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public EnviroLightSettings LightSettings
	{
		[Token(Token = "0x6000119")]
		[Address(RVA = "0xD52C8C", Offset = "0xD52C8C", VA = "0xD52C8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600011A")]
		[Address(RVA = "0xD52CB4", Offset = "0xD52CB4", VA = "0xD52CB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public EnviroVolumeLightingSettings VolumeLightSettings
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0xD52CE0", Offset = "0xD52CE0", VA = "0xD52CE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600011C")]
		[Address(RVA = "0xD52D08", Offset = "0xD52D08", VA = "0xD52D08")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public EnviroLightShaftsSettings LightShaftsSettings
	{
		[Token(Token = "0x600011D")]
		[Address(RVA = "0xD52D34", Offset = "0xD52D34", VA = "0xD52D34")]
		get
		{
			return null;
		}
		[Token(Token = "0x600011E")]
		[Address(RVA = "0xD52D5C", Offset = "0xD52D5C", VA = "0xD52D5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public EnviroSkySettings SkySettings
	{
		[Token(Token = "0x600011F")]
		[Address(RVA = "0xD52D88", Offset = "0xD52D88", VA = "0xD52D88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000120")]
		[Address(RVA = "0xD52DB0", Offset = "0xD52DB0", VA = "0xD52DB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public EnviroFogSettings FogSettings
	{
		[Token(Token = "0x6000121")]
		[Address(RVA = "0xD52DDC", Offset = "0xD52DDC", VA = "0xD52DDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000122")]
		[Address(RVA = "0xD52E04", Offset = "0xD52E04", VA = "0xD52E04")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public GameObject Player
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0xD52E30", Offset = "0xD52E30", VA = "0xD52E30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0xD52E58", Offset = "0xD52E58", VA = "0xD52E58")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public Camera Camera
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0xD52E84", Offset = "0xD52E84", VA = "0xD52E84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000126")]
		[Address(RVA = "0xD52EAC", Offset = "0xD52EAC", VA = "0xD52EAC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public EnviroWeather Weather
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0xD531E8", Offset = "0xD531E8", VA = "0xD531E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000134")]
		[Address(RVA = "0xD53210", Offset = "0xD53210", VA = "0xD53210")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public float CustomFogIntensity
	{
		[Token(Token = "0x600013A")]
		[Address(RVA = "0xD53320", Offset = "0xD53320", VA = "0xD53320")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600013B")]
		[Address(RVA = "0xD53348", Offset = "0xD53348", VA = "0xD53348")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public Color CustomFogColor
	{
		[Token(Token = "0x600013C")]
		[Address(RVA = "0xD5337C", Offset = "0xD5337C", VA = "0xD5337C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600013D")]
		[Address(RVA = "0xD533B0", Offset = "0xD533B0", VA = "0xD533B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public bool UpdateFogIntensity
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0xD533F4", Offset = "0xD533F4", VA = "0xD533F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600013F")]
		[Address(RVA = "0xD5341C", Offset = "0xD5341C", VA = "0xD5341C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float ambientAudioVolume
	{
		[Token(Token = "0x6000167")]
		[Address(RVA = "0xD541CC", Offset = "0xD541CC", VA = "0xD541CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000168")]
		[Address(RVA = "0xD474FC", Offset = "0xD474FC", VA = "0xD474FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public float weatherAudioVolume
	{
		[Token(Token = "0x6000169")]
		[Address(RVA = "0xD54208", Offset = "0xD54208", VA = "0xD54208")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600016A")]
		[Address(RVA = "0xD47574", Offset = "0xD47574", VA = "0xD47574")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public float ambientAudioVolumeModifier
	{
		[Token(Token = "0x600016B")]
		[Address(RVA = "0xD54244", Offset = "0xD54244", VA = "0xD54244")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600016C")]
		[Address(RVA = "0xD54280", Offset = "0xD54280", VA = "0xD54280")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public float weatherAudioVolumeModifier
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0xD542CC", Offset = "0xD542CC", VA = "0xD542CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600016E")]
		[Address(RVA = "0xD54308", Offset = "0xD54308", VA = "0xD54308")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public float audioTransitionSpeed
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0xD54354", Offset = "0xD54354", VA = "0xD54354")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000170")]
		[Address(RVA = "0xD54390", Offset = "0xD54390", VA = "0xD54390")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public float interiorZoneAudioVolume
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0xD543DC", Offset = "0xD543DC", VA = "0xD543DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000172")]
		[Address(RVA = "0xD54418", Offset = "0xD54418", VA = "0xD54418")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public float interiorZoneAudioFadingSpeed
	{
		[Token(Token = "0x6000173")]
		[Address(RVA = "0xD54464", Offset = "0xD54464", VA = "0xD54464")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000174")]
		[Address(RVA = "0xD544A0", Offset = "0xD544A0", VA = "0xD544A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public bool useVolumeClouds
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0xD5461C", Offset = "0xD5461C", VA = "0xD5461C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600017C")]
		[Address(RVA = "0xD47644", Offset = "0xD47644", VA = "0xD47644")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public bool useAurora
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0xD54624", Offset = "0xD54624", VA = "0xD54624")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600017E")]
		[Address(RVA = "0xD5462C", Offset = "0xD5462C", VA = "0xD5462C")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public bool useVolumeLighting
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0xD54630", Offset = "0xD54630", VA = "0xD54630")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000180")]
		[Address(RVA = "0xD47668", Offset = "0xD47668", VA = "0xD47668")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public bool useFlatClouds
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0xD54638", Offset = "0xD54638", VA = "0xD54638")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0xD4768C", Offset = "0xD4768C", VA = "0xD4768C")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public bool useParticleClouds
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0xD54640", Offset = "0xD54640", VA = "0xD54640")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000184")]
		[Address(RVA = "0xD476D0", Offset = "0xD476D0", VA = "0xD476D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public bool useSunShafts
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0xD54668", Offset = "0xD54668", VA = "0xD54668")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000186")]
		[Address(RVA = "0xD47728", Offset = "0xD47728", VA = "0xD47728")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public bool useMoonShafts
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0xD546A4", Offset = "0xD546A4", VA = "0xD546A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000188")]
		[Address(RVA = "0xD47794", Offset = "0xD47794", VA = "0xD47794")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public bool useDistanceBlur
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0xD546E0", Offset = "0xD546E0", VA = "0xD546E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600018A")]
		[Address(RVA = "0xD546E8", Offset = "0xD546E8", VA = "0xD546E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public bool interiorMode
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xD569F0", Offset = "0xD569F0", VA = "0xD569F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xD56A18", Offset = "0xD56A18", VA = "0xD56A18")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public EnviroInterior lastInteriorZone
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xD56A44", Offset = "0xD56A44", VA = "0xD56A44")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xD56A6C", Offset = "0xD56A6C", VA = "0xD56A6C")]
		set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event HourPassed OnHourPassed
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0xD48A04", Offset = "0xD48A04", VA = "0xD48A04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E06F0", Offset = "0x2E06F0")]
		add
		{
		}
		[Token(Token = "0x600018C")]
		[Address(RVA = "0xD546EC", Offset = "0xD546EC", VA = "0xD546EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0700", Offset = "0x2E0700")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event DayPassed OnDayPassed
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0xD48AD0", Offset = "0xD48AD0", VA = "0xD48AD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0710", Offset = "0x2E0710")]
		add
		{
		}
		[Token(Token = "0x600018E")]
		[Address(RVA = "0xD547A4", Offset = "0xD547A4", VA = "0xD547A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0720", Offset = "0x2E0720")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event YearPassed OnYearPassed
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0xD48B9C", Offset = "0xD48B9C", VA = "0xD48B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0730", Offset = "0x2E0730")]
		add
		{
		}
		[Token(Token = "0x6000190")]
		[Address(RVA = "0xD5485C", Offset = "0xD5485C", VA = "0xD5485C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0740", Offset = "0x2E0740")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event WeatherChanged OnWeatherChanged
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0xD47260", Offset = "0xD47260", VA = "0xD47260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0750", Offset = "0x2E0750")]
		add
		{
		}
		[Token(Token = "0x6000192")]
		[Address(RVA = "0xD54914", Offset = "0xD54914", VA = "0xD54914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0760", Offset = "0x2E0760")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event ZoneWeatherChanged OnZoneWeatherChanged
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0xD549CC", Offset = "0xD549CC", VA = "0xD549CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0770", Offset = "0x2E0770")]
		add
		{
		}
		[Token(Token = "0x6000194")]
		[Address(RVA = "0xD54A84", Offset = "0xD54A84", VA = "0xD54A84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0780", Offset = "0x2E0780")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event SeasonChanged OnSeasonChanged
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0xD48938", Offset = "0xD48938", VA = "0xD48938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0790", Offset = "0x2E0790")]
		add
		{
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0xD54B3C", Offset = "0xD54B3C", VA = "0xD54B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E07A0", Offset = "0x2E07A0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event isNightE OnNightTime
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0xD54BF4", Offset = "0xD54BF4", VA = "0xD54BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E07B0", Offset = "0x2E07B0")]
		add
		{
		}
		[Token(Token = "0x6000198")]
		[Address(RVA = "0xD54CAC", Offset = "0xD54CAC", VA = "0xD54CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E07C0", Offset = "0x2E07C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event isDay OnDayTime
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0xD54D64", Offset = "0xD54D64", VA = "0xD54D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E07D0", Offset = "0x2E07D0")]
		add
		{
		}
		[Token(Token = "0x600019A")]
		[Address(RVA = "0xD54E1C", Offset = "0xD54E1C", VA = "0xD54E1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E07E0", Offset = "0x2E07E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event ZoneChanged OnZoneChanged
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0xD4886C", Offset = "0xD4886C", VA = "0xD4886C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E07F0", Offset = "0x2E07F0")]
		add
		{
		}
		[Token(Token = "0x600019C")]
		[Address(RVA = "0xD54ED4", Offset = "0xD54ED4", VA = "0xD54ED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0800", Offset = "0x2E0800")]
		remove
		{
		}
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xD51D90", Offset = "0xD51D90", VA = "0xD51D90")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xD51E44", Offset = "0xD51E44", VA = "0xD51E44")]
	public void ActivateLWInstance()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xD51F40", Offset = "0xD51F40", VA = "0xD51F40")]
	public void DeactivateLWInstance()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xD52040", Offset = "0xD52040", VA = "0xD52040")]
	public void DeleteHDInstance()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xD52044", Offset = "0xD52044", VA = "0xD52044")]
	public void DeleteLWInstance()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xD52280", Offset = "0xD52280", VA = "0xD52280")]
	public void SearchForEnviroInstances()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xD522E8", Offset = "0xD522E8", VA = "0xD522E8")]
	public void CreateEnviroLWInstance()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xD5265C", Offset = "0xD5265C", VA = "0xD5265C")]
	public void CreateEnviroLWMobileInstance()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xD525C0", Offset = "0xD525C0", VA = "0xD525C0")]
	private void DeactivateAllInstances()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xD525B8", Offset = "0xD525B8", VA = "0xD525B8")]
	public GameObject GetAssetPrefab(string name)
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xD5292C", Offset = "0xD5292C", VA = "0xD5292C")]
	public void ActivateLWRP()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xD52938", Offset = "0xD52938", VA = "0xD52938")]
	public void ActivateLegacyRP()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xD52ED8", Offset = "0xD52ED8", VA = "0xD52ED8")]
	public void AssignAndStart(GameObject Player, Camera cam)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xD52F1C", Offset = "0xD52F1C", VA = "0xD52F1C")]
	public void ChangeFocus(GameObject Player, Camera cam)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xD52F60", Offset = "0xD52F60", VA = "0xD52F60")]
	public void StartAsServer()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xD52FA4", Offset = "0xD52FA4", VA = "0xD52FA4")]
	public void ReInit()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xD52FD0", Offset = "0xD52FD0", VA = "0xD52FD0")]
	public void SetupSkybox()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xD52FFC", Offset = "0xD52FFC", VA = "0xD52FFC")]
	public bool IsNight()
	{
		return default(bool);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xD47D7C", Offset = "0xD47D7C", VA = "0xD47D7C")]
	public bool IsStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xD53024", Offset = "0xD53024", VA = "0xD53024")]
	public bool IsInterior()
	{
		return default(bool);
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xD5304C", Offset = "0xD5304C", VA = "0xD5304C")]
	public bool IsEnviroSkyAttached(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xD530FC", Offset = "0xD530FC", VA = "0xD530FC")]
	public bool IsDefaultZone(GameObject zone)
	{
		return default(bool);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xD531AC", Offset = "0xD531AC", VA = "0xD531AC")]
	public bool IsAutoWeatherUpdateActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xD47084", Offset = "0xD47084", VA = "0xD47084")]
	public bool IsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xD5323C", Offset = "0xD5323C", VA = "0xD5323C")]
	public bool GetUseWeatherTag()
	{
		return default(bool);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xD53278", Offset = "0xD53278", VA = "0xD53278")]
	public string GetEnviroSkyTag()
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xD532A8", Offset = "0xD532A8", VA = "0xD532A8")]
	public float GetSnowIntensity()
	{
		return default(float);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xD532E4", Offset = "0xD532E4", VA = "0xD532E4")]
	public float GetWetnessIntensity()
	{
		return default(float);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xD47EB0", Offset = "0xD47EB0", VA = "0xD47EB0")]
	public string GetCurrentTemperatureString()
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xD53448", Offset = "0xD53448", VA = "0xD53448")]
	public EnviroZone GetZoneByID(int id)
	{
		return null;
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xD534F0", Offset = "0xD534F0", VA = "0xD534F0")]
	public void RegisterZone(EnviroZone z)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xD53528", Offset = "0xD53528", VA = "0xD53528")]
	public float GetUniversalTimeOfDay()
	{
		return default(float);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xD47FDC", Offset = "0xD47FDC", VA = "0xD47FDC")]
	public float GetTimeOfDay()
	{
		return default(float);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xD45E2C", Offset = "0xD45E2C", VA = "0xD45E2C")]
	public double GetCurrentTimeInHours()
	{
		return default(double);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xD4A580", Offset = "0xD4A580", VA = "0xD4A580")]
	public EnviroSeasons.Seasons GetCurrentSeason()
	{
		return default(EnviroSeasons.Seasons);
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xD53594", Offset = "0xD53594", VA = "0xD53594")]
	public void SetYears(int year)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xD535D4", Offset = "0xD535D4", VA = "0xD535D4")]
	public void SetDays(int days)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xD53614", Offset = "0xD53614", VA = "0xD53614")]
	public void SetTime(DateTime date)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xD53660", Offset = "0xD53660", VA = "0xD53660")]
	public void SetTime(int year, int dayOfYear, int hour, int minute, int seconds)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xD536C4", Offset = "0xD536C4", VA = "0xD536C4")]
	public void ResetHourEventTimer()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xD47494", Offset = "0xD47494", VA = "0xD47494")]
	public void SetTimeOfDay(float timeOfDay)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xD47884", Offset = "0xD47884", VA = "0xD47884")]
	public void ChangeSeason(EnviroSeasons.Seasons s)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xD4793C", Offset = "0xD4793C", VA = "0xD4793C")]
	public void SetTimeProgress(EnviroTime.TimeProgressMode tpm)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xD536F4", Offset = "0xD536F4", VA = "0xD536F4")]
	public string GetTimeStringWithSeconds()
	{
		return null;
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xD47DA4", Offset = "0xD47DA4", VA = "0xD47DA4")]
	public string GetTimeString()
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xD53858", Offset = "0xD53858", VA = "0xD53858")]
	public int GetCurrentYear()
	{
		return default(int);
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xD53894", Offset = "0xD53894", VA = "0xD53894")]
	public int GetCurrentMonth()
	{
		return default(int);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xD53974", Offset = "0xD53974", VA = "0xD53974")]
	public DateTime GetDateAsDateTime()
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xD53B68", Offset = "0xD53B68", VA = "0xD53B68")]
	public int GetCurrentDay()
	{
		return default(int);
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xD53BA4", Offset = "0xD53BA4", VA = "0xD53BA4")]
	public int GetCurrentHour()
	{
		return default(int);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xD53BE0", Offset = "0xD53BE0", VA = "0xD53BE0")]
	public int GetCurrentMinute()
	{
		return default(int);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xD53C1C", Offset = "0xD53C1C", VA = "0xD53C1C")]
	public int GetCurrentSecond()
	{
		return default(int);
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xD53C58", Offset = "0xD53C58", VA = "0xD53C58")]
	public void ChangeWeatherInstant(int weatherId)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xD53C90", Offset = "0xD53C90", VA = "0xD53C90")]
	public void ChangeWeatherInstant(EnviroWeatherPreset preset)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xD475EC", Offset = "0xD475EC", VA = "0xD475EC")]
	public void ChangeWeather(int weatherId)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xD53CC8", Offset = "0xD53CC8", VA = "0xD53CC8")]
	public void ChangeWeather(EnviroWeatherPreset preset)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xD53D00", Offset = "0xD53D00", VA = "0xD53D00")]
	public void ChangeWeather(string Name)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xD53D38", Offset = "0xD53D38", VA = "0xD53D38")]
	public EnviroZone GetCurrentActiveZone()
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xD53D74", Offset = "0xD53D74", VA = "0xD53D74")]
	public void SetCurrentActiveZone(EnviroZone z)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xD53DB4", Offset = "0xD53DB4", VA = "0xD53DB4")]
	public void InstantWeatherChange(EnviroWeatherPreset preset, EnviroWeatherPrefab prefab)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xD53DF0", Offset = "0xD53DF0", VA = "0xD53DF0")]
	public void SetToZone(int z)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xD47B64", Offset = "0xD47B64", VA = "0xD47B64")]
	public EnviroWeatherPreset GetCurrentWeatherPreset()
	{
		return null;
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xD53ECC", Offset = "0xD53ECC", VA = "0xD53ECC")]
	public EnviroWeatherPreset GetStartWeatherPreset()
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xD482B0", Offset = "0xD482B0", VA = "0xD482B0")]
	public List<EnviroWeatherPreset> GetCurrentWeatherPresetList()
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xD53F08", Offset = "0xD53F08", VA = "0xD53F08")]
	public List<EnviroWeatherPrefab> GetCurrentWeatherPrefabList()
	{
		return null;
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xD53F44", Offset = "0xD53F44", VA = "0xD53F44")]
	public List<EnviroZone> GetZoneList()
	{
		return null;
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xD53F80", Offset = "0xD53F80", VA = "0xD53F80")]
	public void ChangeZoneWeather(int zoneId, int weatherId)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xD5418C", Offset = "0xD5418C", VA = "0xD5418C")]
	public void SetAutoWeatherUpdates(bool b)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xD544EC", Offset = "0xD544EC", VA = "0xD544EC")]
	public GameObject GetVFXHolder()
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xD54528", Offset = "0xD54528", VA = "0xD54528")]
	public void SetLightningFlashTrigger(float trigger)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xD50D54", Offset = "0xD50D54", VA = "0xD50D54")]
	public float GetEmissionRate(ParticleSystem system)
	{
		return default(float);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xD50DE0", Offset = "0xD50DE0", VA = "0xD50DE0")]
	public void SetEmissionRate(ParticleSystem sys, float emissionRate)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xD5455C", Offset = "0xD5455C", VA = "0xD5455C")]
	public void RegisterVegetationInstance(EnviroVegetationInstance v)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xD54594", Offset = "0xD54594", VA = "0xD54594")]
	public double GetInHours(float hours, float days, float years)
	{
		return default(double);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xD54F8C", Offset = "0xD54F8C", VA = "0xD54F8C", Slot = "4")]
	public virtual void NotifyHourPassed()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xD551E0", Offset = "0xD551E0", VA = "0xD551E0", Slot = "5")]
	public virtual void NotifyDayPassed()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xD55434", Offset = "0xD55434", VA = "0xD55434", Slot = "6")]
	public virtual void NotifyYearPassed()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xD55688", Offset = "0xD55688", VA = "0xD55688", Slot = "7")]
	public virtual void NotifyWeatherChanged(EnviroWeatherPreset type)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xD55A98", Offset = "0xD55A98", VA = "0xD55A98", Slot = "8")]
	public virtual void NotifyZoneWeatherChanged(EnviroWeatherPreset type, EnviroZone zone)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xD55EC0", Offset = "0xD55EC0", VA = "0xD55EC0", Slot = "9")]
	public virtual void NotifySeasonChanged(EnviroSeasons.Seasons season)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xD56138", Offset = "0xD56138", VA = "0xD56138", Slot = "10")]
	public virtual void NotifyIsNight()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xD5638C", Offset = "0xD5638C", VA = "0xD5638C", Slot = "11")]
	public virtual void NotifyIsDay()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xD565E0", Offset = "0xD565E0", VA = "0xD565E0", Slot = "12")]
	public virtual void NotifyZoneChanged(EnviroZone zone)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xD56A98", Offset = "0xD56A98", VA = "0xD56A98")]
	public EnviroSkyMgr()
	{
	}
}
[Serializable]
[Token(Token = "0x200003B")]
public class EnviroVegetationStage
{
	[Token(Token = "0x20001FE")]
	public enum GrowState
	{
		[Token(Token = "0x40008A0")]
		Grow,
		[Token(Token = "0x40008A1")]
		Stay
	}

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DAD18", Offset = "0x2DAD18")]
	public float minAgePercent;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GrowState growAction;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject GrowGameobjectSpring;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject GrowGameobjectSummer;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GrowGameobjectAutumn;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject GrowGameobjectWinter;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool billboard;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xD5ADD0", Offset = "0xD5ADD0", VA = "0xD5ADD0")]
	public EnviroVegetationStage()
	{
	}
}
[Serializable]
[Token(Token = "0x200003C")]
public class EnviroVegetationAge
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float maxAgeHours;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float maxAgeDays;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxAgeYears;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool randomStartAge;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startAgeinHours;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double birthdayInHours;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Loop;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int LoopFromGrowStage;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xD58D00", Offset = "0xD58D00", VA = "0xD58D00")]
	public EnviroVegetationAge()
	{
	}
}
[Serializable]
[Token(Token = "0x200003D")]
public class EnviroVegetationSeasons
{
	[Token(Token = "0x20001FF")]
	public enum SeasonAction
	{
		[Token(Token = "0x40008A3")]
		SpawnDeadPrefab,
		[Token(Token = "0x40008A4")]
		Deactivate,
		[Token(Token = "0x40008A5")]
		Destroy
	}

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SeasonAction seasonAction;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool GrowInSpring;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool GrowInSummer;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool GrowInAutumn;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public bool GrowInWinter;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xD5ADBC", Offset = "0xD5ADBC", VA = "0xD5ADBC")]
	public EnviroVegetationSeasons()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2D43B4", Offset = "0x2D43B4")]
public class EnviroVegetationInstance : MonoBehaviour
{
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4910", Offset = "0x2D4910")]
	private sealed class <BirthColliders>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroVegetationInstance <>4__this;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Collider[] <colliders>5__2;

		[Token(Token = "0x170000E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0xD5AD24", Offset = "0xD5AD24", VA = "0xD5AD24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0xD5ADB4", Offset = "0xD5ADB4", VA = "0xD5ADB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xD5A4A4", Offset = "0xD5A4A4", VA = "0xD5A4A4")]
		[DebuggerHidden]
		public <BirthColliders>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xD5AB20", Offset = "0xD5AB20", VA = "0xD5AB20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xD5AB24", Offset = "0xD5AB24", VA = "0xD5AB24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xD5AD2C", Offset = "0xD5AD2C", VA = "0xD5AD2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public int id;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnviroVegetationAge Age;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public EnviroVegetationSeasons Seasons;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EnviroVegetationStage> GrowStages;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 minScale;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 maxScale;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float GrowSpeedMod;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject DeadPrefab;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color GizmoColor;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float GizmoSize;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EnviroSeasons.Seasons currentSeason;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private double ageInHours;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private double maxAgeInHours;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentStage;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private GameObject currentVegetationObject;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool stay;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool reBirth;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool rescale;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	private bool canGrow;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool shrink;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xD58D28", Offset = "0xD58D28", VA = "0xD58D28")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xD58FDC", Offset = "0xD58FDC", VA = "0xD58FDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xD593B4", Offset = "0xD593B4", VA = "0xD593B4")]
	private void SetSeason()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xD597EC", Offset = "0xD597EC", VA = "0xD597EC")]
	public void KeepVariablesClear()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xD5997C", Offset = "0xD5997C", VA = "0xD5997C")]
	public void UpdateInstance()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xD59C0C", Offset = "0xD59C0C", VA = "0xD59C0C")]
	public void UpdateGrowth()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xD5A22C", Offset = "0xD5A22C", VA = "0xD5A22C")]
	private void DeadPrefabLoop()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xD5A418", Offset = "0xD5A418", VA = "0xD5A418")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0810", Offset = "0x2E0810")]
	private IEnumerator BirthColliders()
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xD59F1C", Offset = "0xD59F1C", VA = "0xD59F1C")]
	private void CalculateScale()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xD58F30", Offset = "0xD58F30", VA = "0xD58F30")]
	public void Birth(int stage, float startAge)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xD5A4C4", Offset = "0xD5A4C4", VA = "0xD5A4C4")]
	private void SeasonAction()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xD5A7AC", Offset = "0xD5A7AC", VA = "0xD5A7AC")]
	private void CheckSeason(bool update)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xD599CC", Offset = "0xD599CC", VA = "0xD599CC")]
	private void ShrinkAndDeactivate()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xD593E8", Offset = "0xD593E8", VA = "0xD593E8")]
	public void VegetationChange()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xD5A7F4", Offset = "0xD5A7F4", VA = "0xD5A7F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xD5A92C", Offset = "0xD5A92C", VA = "0xD5A92C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xD5A9CC", Offset = "0xD5A9CC", VA = "0xD5A9CC")]
	public EnviroVegetationInstance()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xD5AB1C", Offset = "0xD5AB1C", VA = "0xD5AB1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0888", Offset = "0x2E0888")]
	private void <Start>b__20_0(EnviroSeasons.Seasons season)
	{
	}
}
[Serializable]
[Token(Token = "0x200003F")]
public class EnviroWeatherPrefab : MonoBehaviour
{
	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public EnviroWeatherPreset weatherPreset;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public List<ParticleSystem> effectSystems;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public List<float> effectEmmisionRates;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xD5B068", Offset = "0xD5B068", VA = "0xD5B068")]
	public EnviroWeatherPrefab()
	{
	}
}
[Serializable]
[Token(Token = "0x2000040")]
public class EnviroWeatherCloudsConfig
{
	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DAD64", Offset = "0x2DAD64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DAD64", Offset = "0x2DAD64")]
	public float ambientSkyColorIntensity;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DADC8", Offset = "0x2DADC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DADC8", Offset = "0x2DADC8")]
	public float scatteringCoef;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DAE2C", Offset = "0x2DAE2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DAE2C", Offset = "0x2DAE2C")]
	public float edgeDarkness;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float baseErosionIntensity;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float detailErosionIntensity;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DAEAC", Offset = "0x2DAEAC")]
	public float density;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DAEF4", Offset = "0x2DAEF4")]
	public float lightStepModifier;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DAF38", Offset = "0x2DAF38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DAF38", Offset = "0x2DAF38")]
	public float coverage;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DAFAC", Offset = "0x2DAFAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DAFAC", Offset = "0x2DAFAC")]
	public float lightAbsorbtion;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB034", Offset = "0x2DB034")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB034", Offset = "0x2DB034")]
	public float coverageType;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB084", Offset = "0x2DB084")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB084", Offset = "0x2DB084")]
	public float raymarchingScale;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB0F0", Offset = "0x2DB0F0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB0F0", Offset = "0x2DB0F0")]
	public float cloudType;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB150", Offset = "0x2DB150")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB150", Offset = "0x2DB150")]
	public float cirrusAlpha;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB1AC", Offset = "0x2DB1AC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB1AC", Offset = "0x2DB1AC")]
	public float cirrusCoverage;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB20C", Offset = "0x2DB20C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB20C", Offset = "0x2DB20C")]
	public float cirrusColorPow;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB270", Offset = "0x2DB270")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB270", Offset = "0x2DB270")]
	public float flatAlpha;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB2CC", Offset = "0x2DB2CC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB2CC", Offset = "0x2DB2CC")]
	public float flatCoverage;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB32C", Offset = "0x2DB32C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB32C", Offset = "0x2DB32C")]
	public float flatSoftness;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB38C", Offset = "0x2DB38C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB38C", Offset = "0x2DB38C")]
	public float flatBrightness;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB3EC", Offset = "0x2DB3EC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB3EC", Offset = "0x2DB3EC")]
	public float flatColorPow;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB44C", Offset = "0x2DB44C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB44C", Offset = "0x2DB44C")]
	public float particleLayer1Alpha;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB49C", Offset = "0x2DB49C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB49C", Offset = "0x2DB49C")]
	public float particleLayer1Brightness;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB4EC", Offset = "0x2DB4EC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB4EC", Offset = "0x2DB4EC")]
	public float particleLayer1ColorPow;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB53C", Offset = "0x2DB53C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB53C", Offset = "0x2DB53C")]
	public float particleLayer2Alpha;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB58C", Offset = "0x2DB58C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB58C", Offset = "0x2DB58C")]
	public float particleLayer2Brightness;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB5DC", Offset = "0x2DB5DC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB5DC", Offset = "0x2DB5DC")]
	public float particleLayer2ColorPow;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB62C", Offset = "0x2DB62C")]
	public bool particleCloudsOverwrite;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xD5AFE0", Offset = "0xD5AFE0", VA = "0xD5AFE0")]
	public EnviroWeatherCloudsConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000041")]
public class EnviroWeatherEffects
{
	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject prefab;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 localPositionOffset;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 localRotationOffset;

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xD5B060", Offset = "0xD5B060", VA = "0xD5B060")]
	public EnviroWeatherEffects()
	{
	}
}
[Serializable]
[Token(Token = "0x2000042")]
public class EnviroWeatherPreset : ScriptableObject
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string version;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DB68C", Offset = "0x2DB68C")]
	public bool Spring;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB6C8", Offset = "0x2DB6C8")]
	public float possibiltyInSpring;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool Summer;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB6E4", Offset = "0x2DB6E4")]
	public float possibiltyInSummer;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool Autumn;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB700", Offset = "0x2DB700")]
	public float possibiltyInAutumn;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool winter;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB71C", Offset = "0x2DB71C")]
	public float possibiltyInWinter;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DB738", Offset = "0x2DB738")]
	public EnviroWeatherCloudsConfig cloudsConfig;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DB774", Offset = "0x2DB774")]
	public float fogStartDistance;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fogDistance;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DB7AC", Offset = "0x2DB7AC")]
	public float fogDensity;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB7E0", Offset = "0x2DB7E0")]
	public Gradient weatherSkyMod;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gradient weatherLightMod;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Gradient weatherFogMod;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB814", Offset = "0x2DB814")]
	public float volumeLightIntensity;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB82C", Offset = "0x2DB82C")]
	public float shadowIntensityMod;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB848", Offset = "0x2DB848")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB848", Offset = "0x2DB848")]
	public float heightFogDensity;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB8C8", Offset = "0x2DB8C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB8C8", Offset = "0x2DB8C8")]
	public float SkyFogHeight;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB93C", Offset = "0x2DB93C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB93C", Offset = "0x2DB93C")]
	public float skyFogStart;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DB9B4", Offset = "0x2DB9B4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DB9B4", Offset = "0x2DB9B4")]
	public float SkyFogIntensity;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DBA2C", Offset = "0x2DBA2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBA2C", Offset = "0x2DBA2C")]
	public float FogScatteringIntensity;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DBAA0", Offset = "0x2DBAA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBAA0", Offset = "0x2DBAA0")]
	public float fogSunBlocking;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DBB04", Offset = "0x2DBB04")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBB04", Offset = "0x2DBB04")]
	public float moonIntensity;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DBB68", Offset = "0x2DBB68")]
	public List<EnviroWeatherEffects> effectSystems;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DBBA8", Offset = "0x2DBBA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBBA8", Offset = "0x2DBBA8")]
	public float WindStrenght;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DBC20", Offset = "0x2DBC20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBC20", Offset = "0x2DBC20")]
	public float wetnessLevel;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DBC98", Offset = "0x2DBC98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBC98", Offset = "0x2DBC98")]
	public float snowLevel;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DBD0C", Offset = "0x2DBD0C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBD0C", Offset = "0x2DBD0C")]
	public float temperatureLevel;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBD64", Offset = "0x2DBD64")]
	public bool isLightningStorm;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DBDC0", Offset = "0x2DBDC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBDC0", Offset = "0x2DBDC0")]
	public float lightningInterval;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DBE10", Offset = "0x2DBE10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBE10", Offset = "0x2DBE10")]
	public AudioClip weatherSFX;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DBEA8", Offset = "0x2DBEA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBEA8", Offset = "0x2DBEA8")]
	public AudioClip SpringDayAmbient;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBF48", Offset = "0x2DBF48")]
	public AudioClip SpringNightAmbient;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DBFAC", Offset = "0x2DBFAC")]
	public AudioClip SummerDayAmbient;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC00C", Offset = "0x2DC00C")]
	public AudioClip SummerNightAmbient;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC070", Offset = "0x2DC070")]
	public AudioClip AutumnDayAmbient;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC0D0", Offset = "0x2DC0D0")]
	public AudioClip AutumnNightAmbient;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC134", Offset = "0x2DC134")]
	public AudioClip WinterDayAmbient;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC194", Offset = "0x2DC194")]
	public AudioClip WinterNightAmbient;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float blurDistance;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float blurIntensity;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float blurSkyIntensity;

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xD5B128", Offset = "0xD5B128", VA = "0xD5B128")]
	public EnviroWeatherPreset()
	{
	}
}
[Token(Token = "0x2000043")]
public class EnviroWeatherPresetCreation
{
	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xD5B244", Offset = "0xD5B244", VA = "0xD5B244")]
	public static GameObject GetAssetPrefab(string name)
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xD5B24C", Offset = "0xD5B24C", VA = "0xD5B24C")]
	public static Cubemap GetAssetCubemap(string name)
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xD5B254", Offset = "0xD5B254", VA = "0xD5B254")]
	public static Texture GetAssetTexture(string name)
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xD5B25C", Offset = "0xD5B25C", VA = "0xD5B25C")]
	public static Gradient CreateGradient()
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xD5B4B8", Offset = "0xD5B4B8", VA = "0xD5B4B8")]
	public static Color GetColor(string hex)
	{
		return default(Color);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xD5B4F4", Offset = "0xD5B4F4", VA = "0xD5B4F4")]
	public static Keyframe CreateKey(float value, float time)
	{
		return default(Keyframe);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xD5B554", Offset = "0xD5B554", VA = "0xD5B554")]
	public static Keyframe CreateKey(float value, float time, float inTangent, float outTangent)
	{
		return default(Keyframe);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xD5B5D8", Offset = "0xD5B5D8", VA = "0xD5B5D8")]
	public EnviroWeatherPresetCreation()
	{
	}
}
[Token(Token = "0x2000044")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2D4400", Offset = "0x2D4400")]
public class EnviroZone : MonoBehaviour
{
	[Token(Token = "0x2000201")]
	public enum WeatherUpdateMode
	{
		[Token(Token = "0x40008AB")]
		GameTimeHours,
		[Token(Token = "0x40008AC")]
		RealTimeMinutes
	}

	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4920", Offset = "0x2D4920")]
	private sealed class <CreateWeatherListLate>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroZone <>4__this;

		[Token(Token = "0x170000E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0xD5EA00", Offset = "0xD5EA00", VA = "0xD5EA00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0xD5EA90", Offset = "0xD5EA90", VA = "0xD5EA90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xD5DE68", Offset = "0xD5DE68", VA = "0xD5DE68")]
		[DebuggerHidden]
		public <CreateWeatherListLate>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xD5E914", Offset = "0xD5E914", VA = "0xD5E914", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xD5E918", Offset = "0xD5E918", VA = "0xD5E918", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xD5EA08", Offset = "0xD5EA08", VA = "0xD5EA08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC1F8", Offset = "0x2DC1F8")]
	public string zoneName;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC23C", Offset = "0x2DC23C")]
	public bool ExitToDefault;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<EnviroWeatherPrefab> zoneWeather;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EnviroWeatherPrefab> curPossibleZoneWeather;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DC270", Offset = "0x2DC270")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC270", Offset = "0x2DC270")]
	public List<EnviroWeatherPreset> zoneWeatherPresets;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC304", Offset = "0x2DC304")]
	public WeatherUpdateMode updateMode;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC36C", Offset = "0x2DC36C")]
	public float WeatherUpdateIntervall;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DC3A0", Offset = "0x2DC3A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC3A0", Offset = "0x2DC3A0")]
	public bool useMeshZone;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC434", Offset = "0x2DC434")]
	public Mesh zoneMesh;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC474", Offset = "0x2DC474")]
	public Vector3 zoneScale;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC4B8", Offset = "0x2DC4B8")]
	public Color zoneGizmoColor;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DC51C", Offset = "0x2DC51C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC51C", Offset = "0x2DC51C")]
	public EnviroWeatherPrefab currentActiveZoneWeatherPrefab;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EnviroWeatherPreset currentActiveZoneWeatherPreset;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public EnviroWeatherPrefab lastActiveZoneWeatherPrefab;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public EnviroWeatherPreset lastActiveZoneWeatherPreset;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private BoxCollider zoneCollider;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshCollider zoneMeshCollider;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private double nextUpdate;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float nextUpdateRealtime;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool init;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool isDefault;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xD5BA30", Offset = "0xD5BA30", VA = "0xD5BA30")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xD5BCE0", Offset = "0xD5BCE0", VA = "0xD5BCE0")]
	public void UpdateZoneScale()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xD5BEB8", Offset = "0xD5BEB8", VA = "0xD5BEB8")]
	public void CreateZoneWeatherTypeList()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xD5D2F4", Offset = "0xD5D2F4", VA = "0xD5D2F4")]
	private void BuildNewWeatherList()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xD5D748", Offset = "0xD5D748", VA = "0xD5D748")]
	private EnviroWeatherPrefab PossibiltyCheck()
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xD5DCF0", Offset = "0xD5DCF0", VA = "0xD5DCF0")]
	private void WeatherUpdate()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xD5DDDC", Offset = "0xD5DDDC", VA = "0xD5DDDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0898", Offset = "0x2E0898")]
	private IEnumerator CreateWeatherListLate()
	{
		return null;
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xD5DE88", Offset = "0xD5DE88", VA = "0xD5DE88")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xD5E2EC", Offset = "0xD5E2EC", VA = "0xD5E2EC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xD5E4AC", Offset = "0xD5E4AC", VA = "0xD5E4AC")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xD5E698", Offset = "0xD5E698", VA = "0xD5E698")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xD5E7DC", Offset = "0xD5E7DC", VA = "0xD5E7DC")]
	public EnviroZone()
	{
	}
}
[Token(Token = "0x2000045")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2D4440", Offset = "0x2D4440")]
public class EnviroAudioMixerSupport : MonoBehaviour
{
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4930", Offset = "0x2D4930")]
	private sealed class <Setup>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroAudioMixerSupport <>4__this;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x372B84", Offset = "0x372B84", VA = "0x372B84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x372C14", Offset = "0x372C14", VA = "0x372C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x3725A8", Offset = "0x3725A8", VA = "0x3725A8")]
		[DebuggerHidden]
		public <Setup>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x3725D0", Offset = "0x3725D0", VA = "0x3725D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x3725D4", Offset = "0x3725D4", VA = "0x3725D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x372B8C", Offset = "0x372B8C", VA = "0x372B8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DC5AC", Offset = "0x2DC5AC")]
	public AudioMixer audioMixer;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DC5E0", Offset = "0x2DC5E0")]
	public string ambientMixerGroup;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string weatherMixerGroup;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string thunderMixerGroup;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x37241C", Offset = "0x37241C", VA = "0x37241C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x37251C", Offset = "0x37251C", VA = "0x37251C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0910", Offset = "0x2E0910")]
	private IEnumerator Setup()
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x3725C8", Offset = "0x3725C8", VA = "0x3725C8")]
	public EnviroAudioMixerSupport()
	{
	}
}
[Token(Token = "0x2000046")]
public class EnviroAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000204")]
	public enum AudioSourceFunction
	{
		[Token(Token = "0x40008B4")]
		Weather1,
		[Token(Token = "0x40008B5")]
		Weather2,
		[Token(Token = "0x40008B6")]
		Ambient,
		[Token(Token = "0x40008B7")]
		Ambient2,
		[Token(Token = "0x40008B8")]
		Thunder,
		[Token(Token = "0x40008B9")]
		ZoneAmbient
	}

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioSourceFunction myFunction;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioSource audiosrc;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isFadingIn;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool isFadingOut;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float currentAmbientVolume;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float currentWeatherVolume;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float currentZoneVolume;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x372CA8", Offset = "0x372CA8", VA = "0x372CA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x372EAC", Offset = "0x372EAC", VA = "0x372EAC")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x372EB8", Offset = "0x372EB8", VA = "0x372EB8")]
	public void FadeIn(AudioClip clip)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x372F18", Offset = "0x372F18", VA = "0x372F18")]
	public void PlayOneShot(AudioClip clip)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x372F94", Offset = "0x372F94", VA = "0x372F94")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x373A68", Offset = "0x373A68", VA = "0x373A68")]
	public EnviroAudioSource()
	{
	}
}
[Token(Token = "0x2000047")]
public class EnviroDayNightSwitch : MonoBehaviour
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Light[] lightsArray;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x37FCFC", Offset = "0x37FCFC", VA = "0x37FCFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x37FE70", Offset = "0x37FE70", VA = "0x37FE70")]
	private void Activate()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x37FF04", Offset = "0x37FF04", VA = "0x37FF04")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x37FF98", Offset = "0x37FF98", VA = "0x37FF98")]
	public EnviroDayNightSwitch()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x37FFA0", Offset = "0x37FFA0", VA = "0x37FFA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0988", Offset = "0x2E0988")]
	private void <Start>b__1_0()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x37FFA4", Offset = "0x37FFA4", VA = "0x37FFA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0998", Offset = "0x2E0998")]
	private void <Start>b__1_1()
	{
	}
}
[Token(Token = "0x2000048")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2D4490", Offset = "0x2D4490")]
public class EnviroInterior : MonoBehaviour
{
	[Token(Token = "0x2000205")]
	public enum ZoneTriggerType
	{
		[Token(Token = "0x40008BB")]
		Entry_Exit,
		[Token(Token = "0x40008BC")]
		Zone
	}

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ZoneTriggerType zoneTriggerType;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool directLighting;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool ambientLighting;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool weatherAudio;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool ambientAudio;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool fog;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool fogColor;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool skybox;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool weatherEffects;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color directLightingMod;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color ambientLightingMod;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color ambientEQLightingMod;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color ambientGRLightingMod;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color curDirectLightingMod;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color curAmbientLightingMod;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color curAmbientEQLightingMod;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color curAmbientGRLightingMod;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float directLightFadeSpeed;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float ambientLightFadeSpeed;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color skyboxColorMod;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Color curskyboxColorMod;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float skyboxFadeSpeed;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool fadeInDirectLight;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	private bool fadeOutDirectLight;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
	private bool fadeInAmbientLight;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC7")]
	private bool fadeOutAmbientLight;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool fadeInSkybox;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool fadeOutSkybox;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float ambientVolume;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float weatherVolume;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public AudioClip zoneAudioClip;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float zoneAudioVolume;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float zoneAudioFadingSpeed;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color fogColorMod;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Color curFogColorMod;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float fogFadeSpeed;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float minFogMod;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool fadeInFog;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool fadeOutFog;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	private bool fadeInFogColor;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
	private bool fadeOutFogColor;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float weatherFadeSpeed;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool fadeInWeather;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool fadeOutWeather;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public List<EnviroTrigger> triggers;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Color fadeOutColor;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x380600", Offset = "0x380600", VA = "0x380600")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x380604", Offset = "0x380604", VA = "0x380604")]
	public void CreateNewTrigger()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x38084C", Offset = "0x38084C", VA = "0x38084C")]
	public void RemoveTrigger(EnviroTrigger id)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x380924", Offset = "0x380924", VA = "0x380924")]
	public void Enter()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x380BE4", Offset = "0x380BE4", VA = "0x380BE4")]
	public void Exit()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x380E1C", Offset = "0x380E1C", VA = "0x380E1C")]
	public void StopAllFading()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x380F78", Offset = "0x380F78", VA = "0x380F78")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x3821C0", Offset = "0x3821C0", VA = "0x3821C0")]
	public EnviroInterior()
	{
	}
}
[Token(Token = "0x2000049")]
public class EnviroLightning : MonoBehaviour
{
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4940", Offset = "0x2D4940")]
	private sealed class <LightningBolt>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroLightning <>4__this;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <defaultIntensity>5__2;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <flashCount>5__3;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int <thisFlash>5__4;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x382710", Offset = "0x382710", VA = "0x382710", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0x3827A0", Offset = "0x3827A0", VA = "0x3827A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x3823F0", Offset = "0x3823F0", VA = "0x3823F0")]
		[DebuggerHidden]
		public <LightningBolt>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x382418", Offset = "0x382418", VA = "0x382418", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x38241C", Offset = "0x38241C", VA = "0x38241C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x382718", Offset = "0x382718", VA = "0x382718", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x37BC04", Offset = "0x37BC04", VA = "0x37BC04")]
	public void Lightning()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x37BEA8", Offset = "0x37BEA8", VA = "0x37BEA8")]
	public void StopLightning()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x382364", Offset = "0x382364", VA = "0x382364")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E09A8", Offset = "0x2E09A8")]
	public IEnumerator LightningBolt()
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x382410", Offset = "0x382410", VA = "0x382410")]
	public EnviroLightning()
	{
	}
}
[Token(Token = "0x200004A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2D44D4", Offset = "0x2D44D4")]
public class EnviroMeshSeasons : MonoBehaviour
{
	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material SpringMaterial;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material SummerMaterial;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Material AutumnMaterial;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material WinterMaterial;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private MeshRenderer myRenderer;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x385054", Offset = "0x385054", VA = "0x385054")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x385264", Offset = "0x385264", VA = "0x385264")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x3851C4", Offset = "0x3851C4", VA = "0x3851C4")]
	private void UpdateSeasonMaterial()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x385520", Offset = "0x385520", VA = "0x385520")]
	public EnviroMeshSeasons()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x385528", Offset = "0x385528", VA = "0x385528")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0A20", Offset = "0x2E0A20")]
	private void <Start>b__5_0(EnviroSeasons.Seasons season)
	{
	}
}
[Token(Token = "0x200004B")]
public class EnviroReflections : MonoBehaviour
{
	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ReflectionProbe probe;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ReflectionUpdateInGameHours;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double lastUpdate;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xD46E14", Offset = "0xD46E14", VA = "0xD46E14")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xD46EC4", Offset = "0xD46EC4", VA = "0xD46EC4")]
	private void UpdateProbe()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xD46F28", Offset = "0xD46F28", VA = "0xD46F28")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xD47114", Offset = "0xD47114", VA = "0xD47114")]
	public EnviroReflections()
	{
	}
}
[Token(Token = "0x200004C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2D4524", Offset = "0x2D4524")]
public class EnviroSeasonObjectSwitcher : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject SpringObject;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject SummerObject;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject AutumnObject;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject WinterObject;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xD49FD8", Offset = "0xD49FD8", VA = "0xD49FD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xD4A2C4", Offset = "0xD4A2C4", VA = "0xD4A2C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xD4A088", Offset = "0xD4A088", VA = "0xD4A088")]
	private void SwitchSeasonObject()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xD4A5BC", Offset = "0xD4A5BC", VA = "0xD4A5BC")]
	public EnviroSeasonObjectSwitcher()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xD4A5C4", Offset = "0xD4A5C4", VA = "0xD4A5C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0A30", Offset = "0x2E0A30")]
	private void <Start>b__4_0(EnviroSeasons.Seasons season)
	{
	}
}
[Token(Token = "0x200004D")]
public class EnviroTrigger : MonoBehaviour
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public EnviroInterior myZone;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xD58750", Offset = "0xD58750", VA = "0xD58750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xD58754", Offset = "0xD58754", VA = "0xD58754")]
	private void Update()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xD58758", Offset = "0xD58758", VA = "0xD58758")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xD58A28", Offset = "0xD58A28", VA = "0xD58A28")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xD58848", Offset = "0xD58848", VA = "0xD58848")]
	private void EnterExit()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xD58B3C", Offset = "0xD58B3C", VA = "0xD58B3C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xD58CE0", Offset = "0xD58CE0", VA = "0xD58CE0")]
	public EnviroTrigger()
	{
	}
}
[Token(Token = "0x200004E")]
public class EnviroWindSynchronize : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DC618", Offset = "0x2DC618")]
	public bool syncTerrainGrassWind;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Terrain> terrains;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DC654", Offset = "0x2DC654")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DC654", Offset = "0x2DC654")]
	public float windChangingSpeed;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xD5B648", Offset = "0xD5B648", VA = "0xD5B648")]
	private void Start()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xD5B72C", Offset = "0xD5B72C", VA = "0xD5B72C")]
	private void Update()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xD5B994", Offset = "0xD5B994", VA = "0xD5B994")]
	public EnviroWindSynchronize()
	{
	}
}
[Token(Token = "0x200004F")]
[ExecuteInEditMode]
public class EnviroSkyLite : EnviroCore
{
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4950", Offset = "0x2D4950")]
	private sealed class <SetSkyBoxLateAdditive>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroSkyLite <>4__this;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0xD51BA0", Offset = "0xD51BA0", VA = "0xD51BA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0xD51C30", Offset = "0xD51C30", VA = "0xD51C30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xD4B144", Offset = "0xD4B144", VA = "0xD4B144")]
		[DebuggerHidden]
		public <SetSkyBoxLateAdditive>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xD51A30", Offset = "0xD51A30", VA = "0xD51A30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xD51A34", Offset = "0xD51A34", VA = "0xD51A34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xD51BA8", Offset = "0xD51BA8", VA = "0xD51BA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4960", Offset = "0x2D4960")]
	private sealed class <UpdateAmbientLightWithDelay>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0xD51CF8", Offset = "0xD51CF8", VA = "0xD51CF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0xD51D88", Offset = "0xD51D88", VA = "0xD51D88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xD4CC58", Offset = "0xD4CC58", VA = "0xD4CC58")]
		[DebuggerHidden]
		public <UpdateAmbientLightWithDelay>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xD51C38", Offset = "0xD51C38", VA = "0xD51C38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xD51C3C", Offset = "0xD51C3C", VA = "0xD51C3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xD51D00", Offset = "0xD51D00", VA = "0xD51D00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EnviroSkyLite _instance;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public string prefabVersion;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public bool useParticleClouds;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool usePostEffectFog;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[HideInInspector]
	public EnviroSkyRenderingLW EnviroSkyRender;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	[HideInInspector]
	public Material skyMat;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private double lastMoonUpdate;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public bool showSettings;

	[Token(Token = "0x1700004F")]
	public static EnviroSkyLite instance
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0xD4A6D4", Offset = "0xD4A6D4", VA = "0xD4A6D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xD4A7E8", Offset = "0xD4A7E8", VA = "0xD4A7E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xD4B0B8", Offset = "0xD4B0B8", VA = "0xD4B0B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0A40", Offset = "0x2E0A40")]
	private IEnumerator SetSkyBoxLateAdditive()
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xD4B164", Offset = "0xD4B164", VA = "0xD4B164")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xD4C228", Offset = "0xD4C228", VA = "0xD4C228")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xD4B49C", Offset = "0xD4B49C", VA = "0xD4B49C")]
	private void PreInit()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xD4C22C", Offset = "0xD4C22C", VA = "0xD4C22C")]
	public void SetupSkybox()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xD4CBE4", Offset = "0xD4CBE4", VA = "0xD4CBE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0AB8", Offset = "0x2E0AB8")]
	private IEnumerator UpdateAmbientLightWithDelay()
	{
		return null;
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xD4AD5C", Offset = "0xD4AD5C", VA = "0xD4AD5C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xD4CC78", Offset = "0xD4CC78", VA = "0xD4CC78")]
	private void InitImageEffects()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xD4C588", Offset = "0xD4C588", VA = "0xD4C588")]
	private void SetupMainLight()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xD4C92C", Offset = "0xD4C92C", VA = "0xD4C92C")]
	private void SetupAdditionalLight()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xD4CE94", Offset = "0xD4CE94", VA = "0xD4CE94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xD4F684", Offset = "0xD4F684", VA = "0xD4F684")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xD4DF2C", Offset = "0xD4DF2C", VA = "0xD4DF2C")]
	private void SetMaterialsVariables()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xD4D8FC", Offset = "0xD4D8FC", VA = "0xD4D8FC")]
	private void ValidateParameters()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xD4F988", Offset = "0xD4F988", VA = "0xD4F988")]
	private void UpdateClouds(EnviroWeatherPreset i, bool withTransition)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xD4FF08", Offset = "0xD4FF08", VA = "0xD4FF08")]
	private void UpdateFog(EnviroWeatherPreset i, bool withTransition)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xD5044C", Offset = "0xD5044C", VA = "0xD5044C")]
	private void UpdateEffectSystems(EnviroWeatherPrefab id, bool withTransition)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xD4DA70", Offset = "0xD4DA70", VA = "0xD4DA70")]
	private void UpdateWeather()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xD50EA0", Offset = "0xD50EA0", VA = "0xD50EA0")]
	public void InstantWeatherChange(EnviroWeatherPreset preset, EnviroWeatherPrefab prefab)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xD50EE0", Offset = "0xD50EE0", VA = "0xD50EE0")]
	public void AssignAndStart(GameObject player, Camera Camera)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xD50F04", Offset = "0xD50F04", VA = "0xD50F04")]
	public void StartAsServer()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xD50F30", Offset = "0xD50F30", VA = "0xD50F30")]
	public void ChangeFocus(GameObject player, Camera Camera)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xD50F60", Offset = "0xD50F60", VA = "0xD50F60")]
	private void RemoveEnviroCameraComponents(Camera cam)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xD510FC", Offset = "0xD510FC", VA = "0xD510FC")]
	public void Play(EnviroTime.TimeProgressMode progressMode = EnviroTime.TimeProgressMode.Simulated)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xD5130C", Offset = "0xD5130C", VA = "0xD5130C")]
	public void Stop(bool disableLight = false, bool stopTime = true)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xD51530", Offset = "0xD51530", VA = "0xD51530")]
	public void Deactivate(bool disableLight = false)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xD51724", Offset = "0xD51724", VA = "0xD51724")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xD519BC", Offset = "0xD519BC", VA = "0xD519BC")]
	public EnviroSkyLite()
	{
	}
}
[Token(Token = "0x2000050")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2D4588", Offset = "0x2D4588")]
public class EnviroSkyRenderingLW : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public bool isAddionalCamera;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Camera myCam;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public Material material;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool simpleFog;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool currentSimpleFog;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xD56D70", Offset = "0xD56D70", VA = "0xD56D70")]
	private void Start()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xD56EEC", Offset = "0xD56EEC", VA = "0xD56EEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xD57210", Offset = "0xD57210", VA = "0xD57210")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xD56EF0", Offset = "0xD56EF0", VA = "0xD56EF0")]
	private void CreateFogMaterial()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xD5729C", Offset = "0xD5729C", VA = "0xD5729C")]
	private void DestroyFogMaterial()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xD5736C", Offset = "0xD5736C", VA = "0xD5736C")]
	private void Update()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xD5742C", Offset = "0xD5742C", VA = "0xD5742C")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xD57FA8", Offset = "0xD57FA8", VA = "0xD57FA8")]
	[ImageEffectOpaque]
	public void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xD58528", Offset = "0xD58528", VA = "0xD58528")]
	public EnviroSkyRenderingLW()
	{
	}
}
[Token(Token = "0x2000051")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2D4600", Offset = "0x2D4600")]
public class EnviroLiteAdditionalCamera : MonoBehaviour
{
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4970", Offset = "0x2D4970")]
	private sealed class <SetupWeatherEffects>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnviroLiteAdditionalCamera <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0x384FB4", Offset = "0x384FB4", VA = "0x384FB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x385044", Offset = "0x385044", VA = "0x385044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x3835D0", Offset = "0x3835D0", VA = "0x3835D0")]
		[DebuggerHidden]
		public <SetupWeatherEffects>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x383F70", Offset = "0x383F70", VA = "0x383F70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x383F74", Offset = "0x383F74", VA = "0x383F74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x384FBC", Offset = "0x384FBC", VA = "0x384FBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool addEnviroSkyRendering;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool addEnviroSkyPostProcessing;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool addWeatherEffects;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Camera myCam;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private EnviroSkyRenderingLW skyRender;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnviroPostProcessing enviroPostProcessing;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject EffectHolder;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject VFX;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<EnviroWeatherPrefab> zoneWeather;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnviroWeatherPrefab currentWeather;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x3827B8", Offset = "0x3827B8", VA = "0x3827B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x382AC8", Offset = "0x382AC8", VA = "0x382AC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x382EF0", Offset = "0x382EF0", VA = "0x382EF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x382B04", Offset = "0x382B04", VA = "0x382B04")]
	private void CreateEffectHolder()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x382E64", Offset = "0x382E64", VA = "0x382E64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0B40", Offset = "0x2E0B40")]
	private IEnumerator SetupWeatherEffects()
	{
		return null;
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x382FA4", Offset = "0x382FA4", VA = "0x382FA4")]
	private void UpdateWeatherEffects()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x3835F0", Offset = "0x3835F0", VA = "0x3835F0")]
	private void UpdateEffectSystems(EnviroWeatherPrefab id, bool withTransition)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x382870", Offset = "0x382870", VA = "0x382870")]
	private void InitImageEffects()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x3832E8", Offset = "0x3832E8", VA = "0x3832E8")]
	private void UpdateSkyRenderer()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x383ED4", Offset = "0x383ED4", VA = "0x383ED4")]
	public EnviroLiteAdditionalCamera()
	{
	}
}
[Token(Token = "0x2000052")]
public class examplescene : MonoBehaviour
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Material current;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float rotation;

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xD8272C", Offset = "0xD8272C", VA = "0xD8272C")]
	private void Start()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xD82834", Offset = "0xD82834", VA = "0xD82834")]
	private void Update()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xD8290C", Offset = "0xD8290C", VA = "0xD8290C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xD82E68", Offset = "0xD82E68", VA = "0xD82E68")]
	public examplescene()
	{
	}
}
[Token(Token = "0x2000053")]
public class SmoothMouseLook : MonoBehaviour
{
	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 mouseAccel;

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xD65E4C", Offset = "0xD65E4C", VA = "0xD65E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xD660F4", Offset = "0xD660F4", VA = "0xD660F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xD660F8", Offset = "0xD660F8", VA = "0xD660F8")]
	public SmoothMouseLook()
	{
	}
}
[Token(Token = "0x2000054")]
public class ColorPropertyHandler : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color Color;

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x36E104", Offset = "0x36E104", VA = "0x36E104")]
	private void Start()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x36E1FC", Offset = "0x36E1FC", VA = "0x36E1FC")]
	public ColorPropertyHandler()
	{
	}
}
[Token(Token = "0x2000055")]
public class ObjectSpawnerBasic : MonoBehaviour
{
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4980", Offset = "0x2D4980")]
	private sealed class <SpawnTextureObjects>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ObjectSpawnerBasic <>4__this;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private WaitForSeconds <waitForInterval>5__2;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0xB395D0", Offset = "0xB395D0", VA = "0xB395D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0xB39660", Offset = "0xB39660", VA = "0xB39660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xB38BFC", Offset = "0xB38BFC", VA = "0xB38BFC")]
		[DebuggerHidden]
		public <SpawnTextureObjects>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xB390B8", Offset = "0xB390B8", VA = "0xB390B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xB390BC", Offset = "0xB390BC", VA = "0xB390BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xB395D8", Offset = "0xB395D8", VA = "0xB395D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4990", Offset = "0x2D4990")]
	private sealed class <SpawnColorObjects>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ObjectSpawnerBasic <>4__this;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private WaitForSeconds <waitForInterval>5__2;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0xB39020", Offset = "0xB39020", VA = "0xB39020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0xB390B0", Offset = "0xB390B0", VA = "0xB390B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xB38CA8", Offset = "0xB38CA8", VA = "0xB38CA8")]
		[DebuggerHidden]
		public <SpawnColorObjects>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xB38CD8", Offset = "0xB38CD8", VA = "0xB38CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xB38CDC", Offset = "0xB38CDC", VA = "0xB38CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xB39028", Offset = "0xB39028", VA = "0xB39028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject ObjectPrefab;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float SpawningInterval;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xB38B4C", Offset = "0xB38B4C", VA = "0xB38B4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xB38B70", Offset = "0xB38B70", VA = "0xB38B70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0BB8", Offset = "0x2E0BB8")]
	private IEnumerator SpawnTextureObjects()
	{
		return null;
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xB38C1C", Offset = "0xB38C1C", VA = "0xB38C1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0C30", Offset = "0x2E0C30")]
	private IEnumerator SpawnColorObjects()
	{
		return null;
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xB38CC8", Offset = "0xB38CC8", VA = "0xB38CC8")]
	public ObjectSpawnerBasic()
	{
	}
}
[Token(Token = "0x2000056")]
public class TexturePropertyHandler : MonoBehaviour
{
	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 TextureCellAndDimension;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 TextureTilingAndOffset;

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xD82538", Offset = "0xD82538", VA = "0xD82538")]
	private void Start()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xD8267C", Offset = "0xD8267C", VA = "0xD8267C")]
	public TexturePropertyHandler()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x2D465C", Offset = "0x2D465C")]
public class FastList<T>
{
	[Token(Token = "0x200020C")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D49A0", Offset = "0x2D49A0")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000F6")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000CD5")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD2")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD3")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD4")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD6")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000050")]
	public int Count
	{
		[Token(Token = "0x600024D")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600024E")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public T Item
	{
		[Token(Token = "0x600024F")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000250")]
		set
		{
		}
	}

	[Token(Token = "0x600024B")]
	public FastList()
	{
	}

	[Token(Token = "0x600024C")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000251")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000252")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000253")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000254")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000255")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000256")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000257")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000258")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000259")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600025A")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x600025B")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x600025C")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600025D")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600025E")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600025F")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0CA8", Offset = "0x2E0CA8")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000261")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000262")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000263")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000264")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000058")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public readonly string header;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x871F80", Offset = "0x871F80", VA = "0x871F80")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000059")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public readonly string message;

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x871F60", Offset = "0x871F60", VA = "0x871F60")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200005A")]
public class BufferedAudioStream
{
	[Token(Token = "0x40002F8")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AudioSource audio;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float[] audioBuffer;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int writePos;

	[Token(Token = "0x40002FC")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x40002FD")]
	private const int sampleRate = 48000;

	[Token(Token = "0x40002FE")]
	private const int bufferSize = 12000;

	[Token(Token = "0x40002FF")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float playbackDelayRemaining;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float remainingBufferTime;

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x36CBE4", Offset = "0x36CBE4", VA = "0x36CBE4")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x36CD48", Offset = "0x36CD48", VA = "0x36CD48")]
	public void Update()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x36CCE0", Offset = "0x36CCE0", VA = "0x36CCE0")]
	private void Stop()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x36CFD4", Offset = "0x36CFD4", VA = "0x36CFD4")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x200005B")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200020E")]
	public delegate void OnClick();

	[Token(Token = "0x200020F")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000210")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000211")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D49B0", Offset = "0x2D49B0")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OnClick handler;

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x370450", Offset = "0x370450", VA = "0x370450")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x371140", Offset = "0x371140", VA = "0x371140")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D49C0", Offset = "0x2D49C0")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x3707B8", Offset = "0x3707B8", VA = "0x3707B8")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x3713AC", Offset = "0x3713AC", VA = "0x3713AC")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D49D0", Offset = "0x2D49D0")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Toggle t;

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x370A64", Offset = "0x370A64", VA = "0x370A64")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x371644", Offset = "0x371644", VA = "0x371644")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D49E0", Offset = "0x2D49E0")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Toggle t;

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x370C88", Offset = "0x370C88", VA = "0x370C88")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x371A74", Offset = "0x371A74", VA = "0x371A74")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D49F0", Offset = "0x2D49F0")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Toggle tb;

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x370FEC", Offset = "0x370FEC", VA = "0x370FEC")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x371AA4", Offset = "0x371AA4", VA = "0x371AA4")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000302")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000303")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000304")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool manuallyResizeContentPanels;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] reEnable;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000312")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000313")]
	private const float marginH = 16f;

	[Token(Token = "0x4000314")]
	private const float marginV = 16f;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LaserPointer lp;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private LineRenderer lr;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x36EB20", Offset = "0x36EB20", VA = "0x36EB20")]
	public void Awake()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x36F140", Offset = "0x36F140", VA = "0x36F140")]
	public void Show()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x36FAA0", Offset = "0x36FAA0", VA = "0x36FAA0")]
	public void Hide()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x36F718", Offset = "0x36F718", VA = "0x36F718")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x36FCEC", Offset = "0x36FCEC", VA = "0x36FCEC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x370140", Offset = "0x370140", VA = "0x370140")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x370458", Offset = "0x370458", VA = "0x370458")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x37058C", Offset = "0x37058C", VA = "0x37058C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x3707C0", Offset = "0x3707C0", VA = "0x3707C0")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x370870", Offset = "0x370870", VA = "0x370870")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x370A6C", Offset = "0x370A6C", VA = "0x370A6C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x370C90", Offset = "0x370C90", VA = "0x370C90")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x370FF4", Offset = "0x370FF4", VA = "0x370FF4")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x3710B4", Offset = "0x3710B4", VA = "0x3710B4")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200005C")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xD63D6C", Offset = "0xD63D6C", VA = "0xD63D6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xD63E14", Offset = "0xD63E14", VA = "0xD63E14")]
	private void Update()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xD63EA8", Offset = "0xD63EA8", VA = "0xD63EA8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xD63F08", Offset = "0xD63F08", VA = "0xD63F08")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200005D")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000217")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40008E0")]
		On,
		[Token(Token = "0x40008E1")]
		Off,
		[Token(Token = "0x40008E2")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxLength;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _forward;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _hitTarget;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000052")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0x872004", Offset = "0x872004", VA = "0x872004")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600027D")]
		[Address(RVA = "0x871FA8", Offset = "0x871FA8", VA = "0x871FA8")]
		set
		{
		}
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x87200C", Offset = "0x87200C", VA = "0x87200C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x872074", Offset = "0x872074", VA = "0x872074")]
	private void Start()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x872128", Offset = "0x872128", VA = "0x872128", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x87215C", Offset = "0x87215C", VA = "0x87215C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x8721DC", Offset = "0x8721DC", VA = "0x8721DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x872548", Offset = "0x872548", VA = "0x872548")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x8726FC", Offset = "0x8726FC", VA = "0x8726FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x8727B0", Offset = "0x8727B0", VA = "0x8727B0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200005E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2D4690", Offset = "0x2D4690")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000218")]
	public enum RotationAxes
	{
		[Token(Token = "0x40008E4")]
		MouseXAndY,
		[Token(Token = "0x40008E5")]
		MouseX,
		[Token(Token = "0x40008E6")]
		MouseY
	}

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RotationAxes axes;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float sensitivityX;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float sensitivityY;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumX;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maximumX;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minimumY;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maximumY;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationY;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x8739EC", Offset = "0x8739EC", VA = "0x8739EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x873CD4", Offset = "0x873CD4", VA = "0x873CD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x873DB8", Offset = "0x873DB8", VA = "0x873DB8")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200005F")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float fadeTime;
}
[Token(Token = "0x2000060")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x88BD30", Offset = "0x88BD30", VA = "0x88BD30")]
	private void Start()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x88BD34", Offset = "0x88BD34", VA = "0x88BD34")]
	private void Update()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x88BD38", Offset = "0x88BD38", VA = "0x88BD38")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x88BF00", Offset = "0x88BF00", VA = "0x88BF00")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x88BD80", Offset = "0x88BD80", VA = "0x88BD80")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x88BE34", Offset = "0x88BE34", VA = "0x88BE34")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x88BF48", Offset = "0x88BF48", VA = "0x88BF48")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x88C020", Offset = "0x88C020", VA = "0x88C020")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x88C1FC", Offset = "0x88C1FC", VA = "0x88C1FC")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x88C3D8", Offset = "0x88C3D8", VA = "0x88C3D8")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000061")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000219")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LayerMask layerMask;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool visualizeRoom;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int raysPerSecond;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float roomInterpSpeed;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxWallDistance;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rayCacheSize;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float particleSize;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float particleOffset;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameObject room;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float[] dims;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] coefs;

	[Token(Token = "0x4000344")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3[] points;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] normals;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private ParticleSystem sys;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400034A")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x46A560", Offset = "0x46A560", VA = "0x46A560")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x46A590", Offset = "0x46A590", VA = "0x46A590")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x46A81C", Offset = "0x46A81C", VA = "0x46A81C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x46A914", Offset = "0x46A914", VA = "0x46A914")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x46AA80", Offset = "0x46AA80", VA = "0x46AA80")]
	private void Update()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x46BA10", Offset = "0x46BA10", VA = "0x46BA10")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600029B")]
	[Address(RVA = "0x46A8E8", Offset = "0x46A8E8", VA = "0x46A8E8")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600029C")]
	[Address(RVA = "0x46A998", Offset = "0x46A998", VA = "0x46A998")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600029D")]
	[Address(RVA = "0x46B550", Offset = "0x46B550", VA = "0x46B550")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600029E")]
	[Address(RVA = "0x46B638", Offset = "0x46B638", VA = "0x46B638")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600029F")]
	[Address(RVA = "0x46B720", Offset = "0x46B720", VA = "0x46B720")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x46B808", Offset = "0x46B808", VA = "0x46B808")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x46B8F8", Offset = "0x46B8F8", VA = "0x46B8F8")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x46D0D8", Offset = "0x46D0D8", VA = "0x46D0D8")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x46D1D8", Offset = "0x46D1D8", VA = "0x46D1D8")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x46D310", Offset = "0x46D310", VA = "0x46D310")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000062")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200021A")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40008E8")]
		Uninitialized = -1,
		[Token(Token = "0x40008E9")]
		NotEnabled,
		[Token(Token = "0x40008EA")]
		Success,
		[Token(Token = "0x40008EB")]
		StreamError,
		[Token(Token = "0x40008EC")]
		ProcessError,
		[Token(Token = "0x40008ED")]
		MaxStatValue
	}

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000053")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x873F9C", Offset = "0x873F9C", VA = "0x873F9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x873FA4", Offset = "0x873FA4", VA = "0x873FA4")]
		set
		{
		}
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x873FAC", Offset = "0x873FAC", VA = "0x873FAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x874294", Offset = "0x874294", VA = "0x874294")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x874608", Offset = "0x874608", VA = "0x874608")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000063")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200021B")]
	private enum Parameters
	{
		[Token(Token = "0x40008EF")]
		P_GAIN,
		[Token(Token = "0x40008F0")]
		P_USEINVSQR,
		[Token(Token = "0x40008F1")]
		P_NEAR,
		[Token(Token = "0x40008F2")]
		P_FAR,
		[Token(Token = "0x40008F3")]
		P_RADIUS,
		[Token(Token = "0x40008F4")]
		P_DISABLE_RFL,
		[Token(Token = "0x40008F5")]
		P_VSPEAKERMODE,
		[Token(Token = "0x40008F6")]
		P_AMBISTAT,
		[Token(Token = "0x40008F7")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40008F8")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40008F9")]
		P_SENDLEVEL,
		[Token(Token = "0x40008FA")]
		P_NUM
	}

	[Token(Token = "0x4000350")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000054")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x8747D4", Offset = "0x8747D4", VA = "0x8747D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x8747DC", Offset = "0x8747DC", VA = "0x8747DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float Gain
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x8747E4", Offset = "0x8747E4", VA = "0x8747E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x8747EC", Offset = "0x8747EC", VA = "0x8747EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x874884", Offset = "0x874884", VA = "0x874884")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x87488C", Offset = "0x87488C", VA = "0x87488C")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public float Near
	{
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x874894", Offset = "0x874894", VA = "0x874894")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x87489C", Offset = "0x87489C", VA = "0x87489C")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public float Far
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x874934", Offset = "0x874934", VA = "0x874934")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x87493C", Offset = "0x87493C", VA = "0x87493C")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x8749D4", Offset = "0x8749D4", VA = "0x8749D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x8749DC", Offset = "0x8749DC", VA = "0x8749DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public float ReverbSend
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x874A74", Offset = "0x874A74", VA = "0x874A74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x874A7C", Offset = "0x874A7C", VA = "0x874A7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public bool EnableRfl
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x874B18", Offset = "0x874B18", VA = "0x874B18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x874B20", Offset = "0x874B20", VA = "0x874B20")]
		set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x8746A0", Offset = "0x8746A0", VA = "0x8746A0")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x874B28", Offset = "0x874B28", VA = "0x874B28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x874D34", Offset = "0x874D34", VA = "0x874D34")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x874D38", Offset = "0x874D38", VA = "0x874D38")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x874BA4", Offset = "0x874BA4", VA = "0x874BA4")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x874E44", Offset = "0x874E44", VA = "0x874E44")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x8754A4", Offset = "0x8754A4", VA = "0x8754A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x8755C0", Offset = "0x8755C0", VA = "0x8755C0")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000064")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool profilerEnabled;

	[Token(Token = "0x400035B")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int port;

	[Token(Token = "0x400035D")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x8755E8", Offset = "0x8755E8", VA = "0x8755E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x8755F4", Offset = "0x8755F4", VA = "0x8755F4")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x875730", Offset = "0x875730", VA = "0x875730")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x875620", Offset = "0x875620", VA = "0x875620")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x875844", Offset = "0x875844", VA = "0x875844")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000065")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200021C")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200021D")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string filePathRelative;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool fileEnabled;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int OSPSuccess;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int terrainDecimation;

	[Token(Token = "0x1700005C")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x878EB0", Offset = "0x878EB0", VA = "0x878EB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public string filePath
	{
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x878F64", Offset = "0x878F64", VA = "0x878F64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x878FFC", Offset = "0x878FFC", VA = "0x878FFC")]
	public static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x8791CC", Offset = "0x8791CC", VA = "0x8791CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x8791D0", Offset = "0x8791D0", VA = "0x8791D0")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x87984C", Offset = "0x87984C", VA = "0x87984C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x879D90", Offset = "0x879D90", VA = "0x879D90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x879F44", Offset = "0x879F44", VA = "0x879F44")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x87A8A8", Offset = "0x87A8A8", VA = "0x87A8A8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic)
	{
		return default(int);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x87964C", Offset = "0x87964C", VA = "0x87964C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x879410", Offset = "0x879410", VA = "0x879410")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x87C868", Offset = "0x87C868", VA = "0x87C868")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000066")]
internal class ONSPPropagation
{
	[Token(Token = "0x200021E")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000900")]
		Int8,
		[Token(Token = "0x4000901")]
		UInt8,
		[Token(Token = "0x4000902")]
		Int16,
		[Token(Token = "0x4000903")]
		UInt16,
		[Token(Token = "0x4000904")]
		Int32,
		[Token(Token = "0x4000905")]
		UInt32,
		[Token(Token = "0x4000906")]
		Int64,
		[Token(Token = "0x4000907")]
		UInt64,
		[Token(Token = "0x4000908")]
		Float16,
		[Token(Token = "0x4000909")]
		Float32,
		[Token(Token = "0x400090A")]
		Float64
	}

	[Token(Token = "0x200021F")]
	public class ClientType
	{
		[Token(Token = "0x400090B")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x400090C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x400090D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x400090E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400090F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000910")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000911")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000912")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000913")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000914")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000915")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000916")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000917")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x875E64", Offset = "0x875E64", VA = "0x875E64")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000220")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000CF7")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000CF8")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000CF9")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000CFA")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000CFB")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000CFC")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000CFD")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000CFE")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CFF")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D00")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000D01")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000D02")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000D03")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000D04")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000221")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000918")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x170000F8")]
		private IntPtr context
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x876E38", Offset = "0x876E38", VA = "0x876E38")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x876EB0", Offset = "0x876EB0", VA = "0x876EB0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x876F88", Offset = "0x876F88", VA = "0x876F88")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x87705C", Offset = "0x87705C", VA = "0x87705C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x877078", Offset = "0x877078", VA = "0x877078")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x877154", Offset = "0x877154", VA = "0x877154", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x877180", Offset = "0x877180", VA = "0x877180")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x877254", Offset = "0x877254", VA = "0x877254", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x877270", Offset = "0x877270", VA = "0x877270")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x87733C", Offset = "0x87733C", VA = "0x87733C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x877348", Offset = "0x877348", VA = "0x877348")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x877474", Offset = "0x877474", VA = "0x877474", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x877580", Offset = "0x877580", VA = "0x877580")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x87765C", Offset = "0x87765C", VA = "0x87765C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x877668", Offset = "0x877668", VA = "0x877668")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x8777FC", Offset = "0x8777FC", VA = "0x8777FC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x877808", Offset = "0x877808", VA = "0x877808")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x877900", Offset = "0x877900", VA = "0x877900", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x877910", Offset = "0x877910", VA = "0x877910")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x877A08", Offset = "0x877A08", VA = "0x877A08", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x877A18", Offset = "0x877A18", VA = "0x877A18")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x877AEC", Offset = "0x877AEC", VA = "0x877AEC", Slot = "14")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x877B08", Offset = "0x877B08", VA = "0x877B08")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x877BD4", Offset = "0x877BD4", VA = "0x877BD4", Slot = "15")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x877BE0", Offset = "0x877BE0", VA = "0x877BE0")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x877CC4", Offset = "0x877CC4", VA = "0x877CC4", Slot = "16")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x877CF0", Offset = "0x877CF0", VA = "0x877CF0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x877DD4", Offset = "0x877DD4", VA = "0x877DD4", Slot = "13")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x877E00", Offset = "0x877E00", VA = "0x877E00")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x877ED4", Offset = "0x877ED4", VA = "0x877ED4", Slot = "17")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x875DFC", Offset = "0x875DFC", VA = "0x875DFC")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000222")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x400091A")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x170000F9")]
		private IntPtr context
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x877EE0", Offset = "0x877EE0", VA = "0x877EE0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x875B90", Offset = "0x875B90", VA = "0x875B90")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x877F58", Offset = "0x877F58", VA = "0x877F58")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x87802C", Offset = "0x87802C", VA = "0x87802C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x878048", Offset = "0x878048", VA = "0x878048")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x878124", Offset = "0x878124", VA = "0x878124", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x878150", Offset = "0x878150", VA = "0x878150")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x878224", Offset = "0x878224", VA = "0x878224", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x878240", Offset = "0x878240", VA = "0x878240")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x87830C", Offset = "0x87830C", VA = "0x87830C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x878318", Offset = "0x878318", VA = "0x878318")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x878444", Offset = "0x878444", VA = "0x878444", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x878550", Offset = "0x878550", VA = "0x878550")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x87862C", Offset = "0x87862C", VA = "0x87862C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x878638", Offset = "0x878638", VA = "0x878638")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x8787CC", Offset = "0x8787CC", VA = "0x8787CC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x8787D8", Offset = "0x8787D8", VA = "0x8787D8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x8788D0", Offset = "0x8788D0", VA = "0x8788D0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x8788E0", Offset = "0x8788E0", VA = "0x8788E0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x8789D8", Offset = "0x8789D8", VA = "0x8789D8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x8789E8", Offset = "0x8789E8", VA = "0x8789E8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x878ABC", Offset = "0x878ABC", VA = "0x878ABC", Slot = "14")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x878AD8", Offset = "0x878AD8", VA = "0x878AD8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x878BA4", Offset = "0x878BA4", VA = "0x878BA4", Slot = "15")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x878BB0", Offset = "0x878BB0", VA = "0x878BB0")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x878C94", Offset = "0x878C94", VA = "0x878C94", Slot = "16")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x878CC0", Offset = "0x878CC0", VA = "0x878CC0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x878DA4", Offset = "0x878DA4", VA = "0x878DA4", Slot = "13")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x878DD0", Offset = "0x878DD0", VA = "0x878DD0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x878EA4", Offset = "0x878EA4", VA = "0x878EA4", Slot = "17")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x875C64", Offset = "0x875C64", VA = "0x875C64")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000223")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400091C")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x170000FA")]
		private IntPtr context
		{
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x875E6C", Offset = "0x875E6C", VA = "0x875E6C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x875CC8", Offset = "0x875CC8", VA = "0x875CC8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x875EE0", Offset = "0x875EE0", VA = "0x875EE0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x875FB4", Offset = "0x875FB4", VA = "0x875FB4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x875FD0", Offset = "0x875FD0", VA = "0x875FD0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x8760AC", Offset = "0x8760AC", VA = "0x8760AC", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x8760D8", Offset = "0x8760D8", VA = "0x8760D8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x8761AC", Offset = "0x8761AC", VA = "0x8761AC", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x8761C8", Offset = "0x8761C8", VA = "0x8761C8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x876294", Offset = "0x876294", VA = "0x876294", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x8762A0", Offset = "0x8762A0", VA = "0x8762A0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x8763CC", Offset = "0x8763CC", VA = "0x8763CC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x8764D8", Offset = "0x8764D8", VA = "0x8764D8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x8765B4", Offset = "0x8765B4", VA = "0x8765B4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x8765C0", Offset = "0x8765C0", VA = "0x8765C0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x876754", Offset = "0x876754", VA = "0x876754", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x876760", Offset = "0x876760", VA = "0x876760")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x876858", Offset = "0x876858", VA = "0x876858", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x876868", Offset = "0x876868", VA = "0x876868")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x876960", Offset = "0x876960", VA = "0x876960", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x876970", Offset = "0x876970", VA = "0x876970")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x876A44", Offset = "0x876A44", VA = "0x876A44", Slot = "14")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x876A60", Offset = "0x876A60", VA = "0x876A60")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x876B2C", Offset = "0x876B2C", VA = "0x876B2C", Slot = "15")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x876B38", Offset = "0x876B38", VA = "0x876B38")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x876C1C", Offset = "0x876C1C", VA = "0x876C1C", Slot = "16")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x876C48", Offset = "0x876C48", VA = "0x876C48")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x876D2C", Offset = "0x876D2C", VA = "0x876D2C", Slot = "13")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x876D58", Offset = "0x876D58", VA = "0x876D58")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x876E2C", Offset = "0x876E2C", VA = "0x876E2C", Slot = "17")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x875D9C", Offset = "0x875D9C", VA = "0x875D9C")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700005E")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x875854", Offset = "0x875854", VA = "0x875854")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x8758E4", Offset = "0x8758E4", VA = "0x8758E4")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x875E5C", Offset = "0x875E5C", VA = "0x875E5C")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000067")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000224")]
	public enum Preset
	{
		[Token(Token = "0x400091F")]
		Custom,
		[Token(Token = "0x4000920")]
		AcousticTile,
		[Token(Token = "0x4000921")]
		Brick,
		[Token(Token = "0x4000922")]
		BrickPainted,
		[Token(Token = "0x4000923")]
		Carpet,
		[Token(Token = "0x4000924")]
		CarpetHeavy,
		[Token(Token = "0x4000925")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000926")]
		CeramicTile,
		[Token(Token = "0x4000927")]
		Concrete,
		[Token(Token = "0x4000928")]
		ConcreteRough,
		[Token(Token = "0x4000929")]
		ConcreteBlock,
		[Token(Token = "0x400092A")]
		ConcreteBlockPainted,
		[Token(Token = "0x400092B")]
		Curtain,
		[Token(Token = "0x400092C")]
		Foliage,
		[Token(Token = "0x400092D")]
		Glass,
		[Token(Token = "0x400092E")]
		GlassHeavy,
		[Token(Token = "0x400092F")]
		Grass,
		[Token(Token = "0x4000930")]
		Gravel,
		[Token(Token = "0x4000931")]
		GypsumBoard,
		[Token(Token = "0x4000932")]
		PlasterOnBrick,
		[Token(Token = "0x4000933")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000934")]
		Soil,
		[Token(Token = "0x4000935")]
		SoundProof,
		[Token(Token = "0x4000936")]
		Snow,
		[Token(Token = "0x4000937")]
		Steel,
		[Token(Token = "0x4000938")]
		Water,
		[Token(Token = "0x4000939")]
		WoodThin,
		[Token(Token = "0x400093A")]
		WoodThick,
		[Token(Token = "0x400093B")]
		WoodFloor,
		[Token(Token = "0x400093C")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000225")]
	public sealed class Point
	{
		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float frequency;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float data;

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x88B3CC", Offset = "0x88B3CC", VA = "0x88B3CC")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x88B530", Offset = "0x88B530", VA = "0x88B530")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x88B5AC", Offset = "0x88B5AC", VA = "0x88B5AC")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000226")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x2D4A00", Offset = "0x2D4A00")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000275")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4C50", Offset = "0x2D4C50")]
		private sealed class <>c
		{
			[Token(Token = "0x4000AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x88BBD4", Offset = "0x88BBD4", VA = "0x88BBD4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x88BBDC", Offset = "0x88BBDC", VA = "0x88BBDC")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x88BC00", Offset = "0x88BC00", VA = "0x88BC00")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int selection;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<Point> points;

		[Token(Token = "0x170000FB")]
		public float Item
		{
			[Token(Token = "0x6000D65")]
			[Address(RVA = "0x88B610", Offset = "0x88B610", VA = "0x88B610")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x88B49C", Offset = "0x88B49C", VA = "0x88B49C")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC848", Offset = "0x2DC848")]
	public Spectrum absorption;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC880", Offset = "0x2DC880")]
	public Spectrum transmission;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC8BC", Offset = "0x2DC8BC")]
	public Spectrum scattering;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700005F")]
	public Preset preset
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x87C974", Offset = "0x87C974", VA = "0x87C974")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x87C97C", Offset = "0x87C97C", VA = "0x87C97C")]
		set
		{
		}
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x87CB98", Offset = "0x87CB98", VA = "0x87CB98")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x87C6BC", Offset = "0x87C6BC", VA = "0x87C6BC")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x87D43C", Offset = "0x87D43C", VA = "0x87D43C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x87D440", Offset = "0x87D440", VA = "0x87D440")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x87CB9C", Offset = "0x87CB9C", VA = "0x87CB9C")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x87C998", Offset = "0x87C998", VA = "0x87C998")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x87D544", Offset = "0x87D544", VA = "0x87D544")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x87DD70", Offset = "0x87DD70", VA = "0x87DD70")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x87E5AC", Offset = "0x87E5AC", VA = "0x87E5AC")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x87EDC8", Offset = "0x87EDC8", VA = "0x87EDC8")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x87F608", Offset = "0x87F608", VA = "0x87F608")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x87FE48", Offset = "0x87FE48", VA = "0x87FE48")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x880688", Offset = "0x880688", VA = "0x880688")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x880EB0", Offset = "0x880EB0", VA = "0x880EB0")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x8816EC", Offset = "0x8816EC", VA = "0x8816EC")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x881F34", Offset = "0x881F34", VA = "0x881F34")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x88277C", Offset = "0x88277C", VA = "0x88277C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x882FBC", Offset = "0x882FBC", VA = "0x882FBC")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x8837FC", Offset = "0x8837FC", VA = "0x8837FC")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x88402C", Offset = "0x88402C", VA = "0x88402C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x88483C", Offset = "0x88483C", VA = "0x88483C")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x885064", Offset = "0x885064", VA = "0x885064")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x885660", Offset = "0x885660", VA = "0x885660")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x885C5C", Offset = "0x885C5C", VA = "0x885C5C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x8864A4", Offset = "0x8864A4", VA = "0x8864A4")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x886CE8", Offset = "0x886CE8", VA = "0x886CE8")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x887524", Offset = "0x887524", VA = "0x887524")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x887B1C", Offset = "0x887B1C", VA = "0x887B1C")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x887D34", Offset = "0x887D34", VA = "0x887D34")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x888320", Offset = "0x888320", VA = "0x888320")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x888B2C", Offset = "0x888B2C", VA = "0x888B2C")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x88934C", Offset = "0x88934C", VA = "0x88934C")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x889B68", Offset = "0x889B68", VA = "0x889B68")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x88A388", Offset = "0x88A388", VA = "0x88A388")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x88ABAC", Offset = "0x88ABAC", VA = "0x88ABAC")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x88B3F4", Offset = "0x88B3F4", VA = "0x88B3F4")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000068")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float quality;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x88BC24", Offset = "0x88BC24", VA = "0x88BC24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x88BD1C", Offset = "0x88BD1C", VA = "0x88BD1C")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000069")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x400036C")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000302")]
	[Address(RVA = "0x88C488", Offset = "0x88C488", VA = "0x88C488")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x88C59C", Offset = "0x88C59C", VA = "0x88C59C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x88C6BC", Offset = "0x88C6BC", VA = "0x88C6BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x88C6C0", Offset = "0x88C6C0", VA = "0x88C6C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x88C6C4", Offset = "0x88C6C4", VA = "0x88C6C4")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2D46D8", Offset = "0x2D46D8")]
public class GearVRIslandPlayerController : MonoBehaviour
{
	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GearVRIslandPlayerController Instance;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool? IsStanding;

	[Token(Token = "0x400036F")]
	private const string AchievementID = "Achivement";

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public static bool AchievementEarned;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GoldTarget CurrentGoldTarget;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int _currentGold;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioClip CoinSound;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioClip ClickSound;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AudioClip SighSound;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private QuestManager[] _questManagers;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private AudioSource _audio;

	[Token(Token = "0x17000060")]
	public static AchievementType CurrentAchievements
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0xD60970", Offset = "0xD60970", VA = "0xD60970")]
		get
		{
			return default(AchievementType);
		}
		[Token(Token = "0x6000308")]
		[Address(RVA = "0xD609D0", Offset = "0xD609D0", VA = "0xD609D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public int CurrentGold
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0xD5FC3C", Offset = "0xD5FC3C", VA = "0xD5FC3C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xD6078C", Offset = "0xD6078C", VA = "0xD6078C")]
		set
		{
		}
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xD60A38", Offset = "0xD60A38", VA = "0xD60A38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xD60BE8", Offset = "0xD60BE8", VA = "0xD60BE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xD60C80", Offset = "0xD60C80", VA = "0xD60C80")]
	public void OnDifficultyDropdown_Click(int value)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xD60E04", Offset = "0xD60E04", VA = "0xD60E04")]
	public void MealQuest_OnComplete(Quest quest)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xD6119C", Offset = "0xD6119C", VA = "0xD6119C")]
	public void PlayCoinSound()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xD611D4", Offset = "0xD611D4", VA = "0xD611D4")]
	public void PlayClickSound()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xD6120C", Offset = "0xD6120C", VA = "0xD6120C")]
	public void PlaySighSound()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xD61248", Offset = "0xD61248", VA = "0xD61248")]
	public GearVRIslandPlayerController()
	{
	}
}
[Token(Token = "0x200006B")]
public class Gold : MonoBehaviour
{
	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC900", Offset = "0x2DC900")]
	public Transform FX;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC958", Offset = "0x2DC958")]
	public Transform BlobShadow;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC9A0", Offset = "0x2DC9A0")]
	public float RaycastDistance;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DC9F8", Offset = "0x2DC9F8")]
	public LayerMask IncludedGroundLayers;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DCA58", Offset = "0x2DCA58")]
	public bool UseLightDirection;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DCA8C", Offset = "0x2DCA8C")]
	public float ZOffset;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Renderer _fxRenderer;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xD6268C", Offset = "0xD6268C", VA = "0xD6268C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xD62AEC", Offset = "0xD62AEC", VA = "0xD62AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xD62BF0", Offset = "0xD62BF0", VA = "0xD62BF0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xD62D50", Offset = "0xD62D50", VA = "0xD62D50")]
	public Gold()
	{
	}
}
[Token(Token = "0x200006C")]
public class Star : MonoBehaviour
{
	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Animator Animator;

	[Token(Token = "0x17000062")]
	public bool IsComplete
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0xD6619C", Offset = "0xD6619C", VA = "0xD6619C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000319")]
		[Address(RVA = "0xD66218", Offset = "0xD66218", VA = "0xD66218")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public bool IsCompletePlus
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0xD6629C", Offset = "0xD6629C", VA = "0xD6629C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xD66318", Offset = "0xD66318", VA = "0xD66318")]
		set
		{
		}
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xD6639C", Offset = "0xD6639C", VA = "0xD6639C")]
	public Star()
	{
	}
}
[Token(Token = "0x200006D")]
public class StarManager : MonoBehaviour
{
	[Token(Token = "0x600031D")]
	[Address(RVA = "0xD663A4", Offset = "0xD663A4", VA = "0xD663A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xD66434", Offset = "0xD66434", VA = "0xD66434")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xD664C4", Offset = "0xD664C4", VA = "0xD664C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xD66A3C", Offset = "0xD66A3C", VA = "0xD66A3C")]
	public StarManager()
	{
	}
}
[Token(Token = "0x200006E")]
[Flags]
public enum AchievementType
{
	[Token(Token = "0x4000381")]
	None = 0,
	[Token(Token = "0x4000382")]
	Easy = 1,
	[Token(Token = "0x4000383")]
	EasyPlus = 2,
	[Token(Token = "0x4000384")]
	Normal = 4,
	[Token(Token = "0x4000385")]
	NormalPlus = 8,
	[Token(Token = "0x4000386")]
	Hard = 0x10,
	[Token(Token = "0x4000387")]
	HardPlus = 0x20,
	[Token(Token = "0x4000388")]
	Ultra = 0x40,
	[Token(Token = "0x4000389")]
	UltraPlus = 0x80
}
[Token(Token = "0x200006F")]
public class AdvancedMenu : MonoBehaviour
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Button OpenButton;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Button CloseButton;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GraphicsPanel GraphicsPanel;

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x3692E4", Offset = "0x3692E4", VA = "0x3692E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x369428", Offset = "0x369428", VA = "0x369428")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x36956C", Offset = "0x36956C", VA = "0x36956C")]
	private void OpenButton_OnClick()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x36959C", Offset = "0x36959C", VA = "0x36959C")]
	private void CloseButton_OnClick()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x3695CC", Offset = "0x3695CC", VA = "0x3695CC")]
	public AdvancedMenu()
	{
	}
}
[Token(Token = "0x2000070")]
public class AnimatedBoat : MonoBehaviour
{
	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private AudioSource _audio;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Collider _collider;

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x3695D4", Offset = "0x3695D4", VA = "0x3695D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x369658", Offset = "0x369658", VA = "0x369658")]
	public void PlaySplash()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x369684", Offset = "0x369684", VA = "0x369684")]
	public void SetLayerToMedium()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x3696BC", Offset = "0x3696BC", VA = "0x3696BC")]
	public void DisableCollider()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x3696EC", Offset = "0x3696EC", VA = "0x3696EC")]
	public AnimatedBoat()
	{
	}
}
[Token(Token = "0x2000071")]
public class BoatQuest : Quest
{
	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DCACC", Offset = "0x2DCACC")]
	public Animator BoatAnimator;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DCB0C", Offset = "0x2DCB0C")]
	public string SurfaceTriggerName;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x36CB24", Offset = "0x36CB24", VA = "0x36CB24", Slot = "7")]
	public override bool ExecuteOneTimeActions()
	{
		return default(bool);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x36CB78", Offset = "0x36CB78", VA = "0x36CB78")]
	public BoatQuest()
	{
	}
}
[Token(Token = "0x2000072")]
public class CameraTest : MonoBehaviour
{
	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float Speed;

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x36D204", Offset = "0x36D204", VA = "0x36D204")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x36D210", Offset = "0x36D210", VA = "0x36D210")]
	private void Update()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x36D46C", Offset = "0x36D46C", VA = "0x36D46C")]
	public CameraTest()
	{
	}
}
[Token(Token = "0x2000073")]
public class ClickSound : MonoBehaviour
{
	[Token(Token = "0x6000330")]
	[Address(RVA = "0x36DC30", Offset = "0x36DC30", VA = "0x36DC30")]
	public void PlayClickSound()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x36DCD8", Offset = "0x36DCD8", VA = "0x36DCD8")]
	public ClickSound()
	{
	}
}
[Token(Token = "0x2000074")]
public class CloudManager : MonoBehaviour
{
	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject SimpleCloudsVR;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CloudManager Instance;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool _isCloudsEnabled;

	[Token(Token = "0x17000064")]
	public static bool IsCloudsEnabled
	{
		[Token(Token = "0x6000333")]
		[Address(RVA = "0x36DD70", Offset = "0x36DD70", VA = "0x36DD70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000334")]
		[Address(RVA = "0x36DDFC", Offset = "0x36DDFC", VA = "0x36DDFC")]
		set
		{
		}
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x36DCE0", Offset = "0x36DCE0", VA = "0x36DCE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x36DFF0", Offset = "0x36DFF0", VA = "0x36DFF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x36E094", Offset = "0x36E094", VA = "0x36E094")]
	public CloudManager()
	{
	}
}
[Token(Token = "0x2000075")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2D4760", Offset = "0x2D4760")]
public class CombineMeshesParent : MonoBehaviour
{
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool MergeSubMeshes;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool UseMatrices;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool HasLightmapData;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x36E204", Offset = "0x36E204", VA = "0x36E204")]
	private void Start()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x36EB18", Offset = "0x36EB18", VA = "0x36EB18")]
	public CombineMeshesParent()
	{
	}
}
[Token(Token = "0x2000076")]
public class ExternalLinks : MonoBehaviour
{
	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DCB6C", Offset = "0x2DCB6C")]
	public Texture2D Logo;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _shareCancelled;

	[Token(Token = "0x17000065")]
	private string _logoPath
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0xD5EA98", Offset = "0xD5EA98", VA = "0xD5EA98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xD5EB00", Offset = "0xD5EB00", VA = "0xD5EB00")]
	private string GenerateSuggestedPostText()
	{
		return null;
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xD5ECE4", Offset = "0xD5ECE4", VA = "0xD5ECE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xD5EEEC", Offset = "0xD5EEEC", VA = "0xD5EEEC")]
	public void OnShareGame()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xD5EF18", Offset = "0xD5EF18", VA = "0xD5EF18")]
	public ExternalLinks()
	{
	}
}
[Token(Token = "0x2000077")]
public enum GoldTarget
{
	[Token(Token = "0x400039B")]
	Easy = 30,
	[Token(Token = "0x400039C")]
	Normal = 40,
	[Token(Token = "0x400039D")]
	Hard = 50,
	[Token(Token = "0x400039E")]
	Ultra = 65
}
[Token(Token = "0x2000078")]
public class GraphicDefaults
{
	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int Framerate;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float DisplayFrequency;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float SuperSampling;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int CpuLevel;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int GpuLevel;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Foveation;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Msaa;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DynamicClouds;

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xD62D70", Offset = "0xD62D70", VA = "0xD62D70")]
	public GraphicDefaults()
	{
	}
}
[Token(Token = "0x2000079")]
public class OculusQuestGraphicDefaults : GraphicDefaults
{
	[Token(Token = "0x6000340")]
	[Address(RVA = "0x468368", Offset = "0x468368", VA = "0x468368")]
	public OculusQuestGraphicDefaults()
	{
	}
}
[Token(Token = "0x200007A")]
public class OculusGoGraphicDefaults : GraphicDefaults
{
	[Token(Token = "0x6000341")]
	[Address(RVA = "0x468330", Offset = "0x468330", VA = "0x468330")]
	public OculusGoGraphicDefaults()
	{
	}
}
[Token(Token = "0x200007B")]
public class SamsungS7GraphicDefaults : GraphicDefaults
{
	[Token(Token = "0x6000342")]
	[Address(RVA = "0xD6542C", Offset = "0xD6542C", VA = "0xD6542C")]
	public SamsungS7GraphicDefaults()
	{
	}
}
[Token(Token = "0x200007C")]
public class SamsungS9GraphicDefaults : GraphicDefaults
{
	[Token(Token = "0x6000343")]
	[Address(RVA = "0xD6544C", Offset = "0xD6544C", VA = "0xD6544C")]
	public SamsungS9GraphicDefaults()
	{
	}
}
[Token(Token = "0x200007D")]
public class GraphicsPanel : MonoBehaviour
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GraphicsPanel Instance;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DCBA0", Offset = "0x2DCBA0")]
	public Slider QualitySlider;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Slider MsaaSlider;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Toggle DynamicClouds;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider FoveationSlider;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Slider CpuLevelSlider;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider GPULevelSlider;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Slider TargetFramerateSlider;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dropdown TargetDisplayFrequencyDropdown;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Button ApplyButton;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool _isUnlocked;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	private static bool _isStaticInitialized;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GraphicDefaults GraphicDefaults;

	[Token(Token = "0x17000066")]
	public bool IsUnlocked
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0xD62DB0", Offset = "0xD62DB0", VA = "0xD62DB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000345")]
		[Address(RVA = "0xD62E3C", Offset = "0xD62E3C", VA = "0xD62E3C")]
		set
		{
		}
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xD62F00", Offset = "0xD62F00", VA = "0xD62F00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xD62FA4", Offset = "0xD62FA4", VA = "0xD62FA4")]
	private static bool StaticInitialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xD6361C", Offset = "0xD6361C", VA = "0xD6361C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xD639B0", Offset = "0xD639B0", VA = "0xD639B0")]
	private int AntiAliasToSlider(int antiAlias)
	{
		return default(int);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xD639D8", Offset = "0xD639D8", VA = "0xD639D8")]
	private int DisplayFrequencyToDropdown(float framerate)
	{
		return default(int);
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xD63A38", Offset = "0xD63A38", VA = "0xD63A38")]
	private int DropdownToDisplayFrequency(int value)
	{
		return default(int);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xD63A48", Offset = "0xD63A48", VA = "0xD63A48")]
	public void OnValueChange()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xD636BC", Offset = "0xD636BC", VA = "0xD636BC")]
	private void UIReadCurrentValues()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xD63A78", Offset = "0xD63A78", VA = "0xD63A78")]
	public void OnApply()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xD63364", Offset = "0xD63364", VA = "0xD63364")]
	public void OnReset()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xD63D60", Offset = "0xD63D60", VA = "0xD63D60")]
	public GraphicsPanel()
	{
	}
}
[Token(Token = "0x200007E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x2D47F4", Offset = "0x2D47F4")]
public class LocalizedOptionsMenu : MonoBehaviour
{
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DCBE0", Offset = "0x2DCBE0")]
	public string Key;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x872D84", Offset = "0x872D84", VA = "0x872D84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x872F6C", Offset = "0x872F6C", VA = "0x872F6C")]
	public LocalizedOptionsMenu()
	{
	}
}
[Token(Token = "0x200007F")]
public enum LocomotionType
{
	[Token(Token = "0x40003B6")]
	Smooth,
	[Token(Token = "0x40003B7")]
	Teleport,
	[Token(Token = "0x40003B8")]
	Both
}
[Token(Token = "0x2000080")]
public class LocomotionManager : MonoBehaviour
{
	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocomotionManager Instance;

	[Token(Token = "0x40003BA")]
	private const string LocomotionID = "Locomotion";

	[Token(Token = "0x40003BB")]
	private const string TeleportAnimationID = "TeleportAnimation";

	[Token(Token = "0x40003BC")]
	private const string WalkSpeedID = "WalkSpeed";

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DCC14", Offset = "0x2DCC14")]
	public OVRPlayerController OVRPlayerController;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GearVRTeleport GearVRTeleport;

	[Token(Token = "0x17000067")]
	public static LocomotionType LocomotionType
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x872FD8", Offset = "0x872FD8", VA = "0x872FD8")]
		get
		{
			return default(LocomotionType);
		}
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x87303C", Offset = "0x87303C", VA = "0x87303C")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public static float TeleportAnimation
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x8730A4", Offset = "0x8730A4", VA = "0x8730A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x87310C", Offset = "0x87310C", VA = "0x87310C")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public static float WalkSpeed
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x873174", Offset = "0x873174", VA = "0x873174")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600035A")]
		[Address(RVA = "0x8731DC", Offset = "0x8731DC", VA = "0x8731DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x872F74", Offset = "0x872F74", VA = "0x872F74")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x873244", Offset = "0x873244", VA = "0x873244")]
	private void Start()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x873350", Offset = "0x873350", VA = "0x873350")]
	public LocomotionManager()
	{
	}
}
[Token(Token = "0x2000081")]
public class MainMenu : MonoBehaviour
{
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent OnStartGame;

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x873614", Offset = "0x873614", VA = "0x873614")]
	private void Start()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x873720", Offset = "0x873720", VA = "0x873720")]
	public void OnStartSeatedClick()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x873808", Offset = "0x873808", VA = "0x873808")]
	public void OnStartStandingClick()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x8738DC", Offset = "0x8738DC", VA = "0x8738DC")]
	public void OnQuitClick()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x8737F4", Offset = "0x8737F4", VA = "0x8737F4")]
	private void StartGame()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x873984", Offset = "0x873984", VA = "0x873984")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x2000082")]
public class MaterialColorEditor : MonoBehaviour
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material Material;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color SceneColor;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x87398C", Offset = "0x87398C", VA = "0x87398C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x8739E4", Offset = "0x8739E4", VA = "0x8739E4")]
	public MaterialColorEditor()
	{
	}
}
[Token(Token = "0x2000083")]
public class OptionsMenu : MonoBehaviour
{
	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text DebugText;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Dropdown DropdownLocomotion;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text Description;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider TeleportAnimationSlider;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Slider WalkSpeedSlider;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DCC58", Offset = "0x2DCC58")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x2DCC58", Offset = "0x2DCC58")]
	public string[] TextValues;

	[Token(Token = "0x1400000A")]
	public static event Action OnResetProgress
	{
		[Token(Token = "0x6000365")]
		[Address(RVA = "0x46D918", Offset = "0x46D918", VA = "0x46D918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0D20", Offset = "0x2E0D20")]
		add
		{
		}
		[Token(Token = "0x6000366")]
		[Address(RVA = "0x46D9F0", Offset = "0x46D9F0", VA = "0x46D9F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0D30", Offset = "0x2E0D30")]
		remove
		{
		}
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x46DAC8", Offset = "0x46DAC8", VA = "0x46DAC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x46DB54", Offset = "0x46DB54", VA = "0x46DB54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x46DBE0", Offset = "0x46DBE0", VA = "0x46DBE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x46DCBC", Offset = "0x46DCBC", VA = "0x46DCBC")]
	public void Locomotion_OnChanged(int value)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x46DD3C", Offset = "0x46DD3C", VA = "0x46DD3C")]
	public void TeleportAnimationSpeed_OnChanged(float value)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x46DD48", Offset = "0x46DD48", VA = "0x46DD48")]
	public void WalkSpeed_OnChanged(float value)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x46DD54", Offset = "0x46DD54", VA = "0x46DD54")]
	public void ResetProgress_OnClick()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x46DE04", Offset = "0x46DE04", VA = "0x46DE04")]
	private void Update()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x46E010", Offset = "0x46E010", VA = "0x46E010")]
	public OptionsMenu()
	{
	}
}
[Token(Token = "0x2000084")]
public class Piano : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioSource Audio;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xD64568", Offset = "0xD64568", VA = "0xD64568", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xD64594", Offset = "0xD64594", VA = "0xD64594")]
	public Piano()
	{
	}
}
[Token(Token = "0x2000085")]
public class RestButtonManager : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4A34", Offset = "0x2D4A34")]
	private sealed class <ReEnableButton>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RestButtonManager <>4__this;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0xD65038", Offset = "0xD65038", VA = "0xD65038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0xD650C8", Offset = "0xD650C8", VA = "0xD650C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xD64E44", Offset = "0xD64E44", VA = "0xD64E44")]
		[DebuggerHidden]
		public <ReEnableButton>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xD64F4C", Offset = "0xD64F4C", VA = "0xD64F4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xD64F50", Offset = "0xD64F50", VA = "0xD64F50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xD65040", Offset = "0xD65040", VA = "0xD65040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material Material;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture SitTexture;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Texture StandTexture;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator CameraRig;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private WaitForSeconds _enableWait;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _isSitting;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool _isClickEnabled;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xD64A8C", Offset = "0xD64A8C", VA = "0xD64A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xD64B64", Offset = "0xD64B64", VA = "0xD64B64", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xD64DB8", Offset = "0xD64DB8", VA = "0xD64DB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0D40", Offset = "0x2E0D40")]
	private IEnumerator ReEnableButton()
	{
		return null;
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xD64E64", Offset = "0xD64E64", VA = "0xD64E64")]
	public RestButtonManager()
	{
	}
}
[Token(Token = "0x2000086")]
public class ResumeMenu : MonoBehaviour
{
	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string DefaultScene;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SceneLoadManager SceneLoadManager;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DCCB8", Offset = "0x2DCCB8")]
	public DisableAtRuntime DisableAtRuntime;

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xD650D0", Offset = "0xD650D0", VA = "0xD650D0")]
	public void CheckForSaveGame()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xD651B8", Offset = "0xD651B8", VA = "0xD651B8")]
	public void StartGameAgain()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xD65264", Offset = "0xD65264", VA = "0xD65264")]
	public void ResumeGame()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xD65320", Offset = "0xD65320", VA = "0xD65320")]
	public ResumeMenu()
	{
	}
}
[Token(Token = "0x2000087")]
public class ShowFoveationLevel : MonoBehaviour
{
	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text UIText;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xD65730", Offset = "0xD65730", VA = "0xD65730")]
	private void Start()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xD657B0", Offset = "0xD657B0", VA = "0xD657B0")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xD658D8", Offset = "0xD658D8", VA = "0xD658D8")]
	public ShowFoveationLevel()
	{
	}
}
[Token(Token = "0x2000088")]
public class ShowTargetFramerate : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text TextUI;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xD658E0", Offset = "0xD658E0", VA = "0xD658E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xD65960", Offset = "0xD65960", VA = "0xD65960")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xD659BC", Offset = "0xD659BC", VA = "0xD659BC")]
	public ShowTargetFramerate()
	{
	}
}
[Token(Token = "0x2000089")]
public class SitButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Animator CameraRig;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image SitImage;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Image StandImage;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isSitting;

	[Token(Token = "0x1400000B")]
	private static event Action OnToggle
	{
		[Token(Token = "0x6000381")]
		[Address(RVA = "0xD659C4", Offset = "0xD659C4", VA = "0xD659C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0DB8", Offset = "0x2E0DB8")]
		add
		{
		}
		[Token(Token = "0x6000382")]
		[Address(RVA = "0xD65A9C", Offset = "0xD65A9C", VA = "0xD65A9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E0DC8", Offset = "0x2E0DC8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xD65B74", Offset = "0xD65B74", VA = "0xD65B74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xD65C78", Offset = "0xD65C78", VA = "0xD65C78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xD65D04", Offset = "0xD65D04", VA = "0xD65D04")]
	private void SitButton_OnToggle()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xD65C08", Offset = "0xD65C08", VA = "0xD65C08")]
	private void ResetUI()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xD65D14", Offset = "0xD65D14", VA = "0xD65D14", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xD65E44", Offset = "0xD65E44", VA = "0xD65E44")]
	public SitButton()
	{
	}
}
[Token(Token = "0x200008A")]
public class Teleporter : MonoBehaviour
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LayerMask IncludeLayers;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Distance;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform WalkableParent;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GFX;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject ObjectToMove;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterController _characterController;

	[Token(Token = "0x1700006A")]
	private bool ShouldCancelMove
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0xD81D30", Offset = "0xD81D30", VA = "0xD81D30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xD81CB4", Offset = "0xD81CB4", VA = "0xD81CB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xD81F10", Offset = "0xD81F10", VA = "0xD81F10")]
	private void Update()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xD82500", Offset = "0xD82500", VA = "0xD82500")]
	public Teleporter()
	{
	}
}
[Token(Token = "0x200008B")]
public class VersionText : MonoBehaviour
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Text _txt;

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xD82684", Offset = "0xD82684", VA = "0xD82684")]
	private void Start()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xD82724", Offset = "0xD82724", VA = "0xD82724")]
	public VersionText()
	{
	}
}
[Token(Token = "0x200008C")]
public class LightBeamsControlScript : MonoBehaviour
{
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject SourceObject;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject TargetObject;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject RayPrefab;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color RayColor;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 PositionRange;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float RadiusA;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float RadiusB;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float WidthA;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float WidthB;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float FadeSpeed;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int NumRays;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int Spawned;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float TimeToSpawnAll;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float spawnInterval;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float currentCountdown;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RayBehavior[] rays;

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x8727C4", Offset = "0x8727C4", VA = "0x8727C4")]
	private void setRayValues(RayBehavior ray)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x87291C", Offset = "0x87291C", VA = "0x87291C")]
	private void SpawnRay()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x872AB0", Offset = "0x872AB0", VA = "0x872AB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x872B34", Offset = "0x872B34", VA = "0x872B34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x872B8C", Offset = "0x872B8C", VA = "0x872B8C")]
	public LightBeamsControlScript()
	{
	}
}
[Token(Token = "0x200008D")]
public class LookAtBehaviour : MonoBehaviour
{
	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform Target;

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x873358", Offset = "0x873358", VA = "0x873358")]
	private void Start()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x87335C", Offset = "0x87335C", VA = "0x87335C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x873424", Offset = "0x873424", VA = "0x873424")]
	public LookAtBehaviour()
	{
	}
}
[Token(Token = "0x200008E")]
public class LookAtCameraBehaviour : MonoBehaviour
{
	[Token(Token = "0x6000397")]
	[Address(RVA = "0x87342C", Offset = "0x87342C", VA = "0x87342C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x873430", Offset = "0x873430", VA = "0x873430")]
	private void Update()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x87360C", Offset = "0x87360C", VA = "0x87360C")]
	public LookAtCameraBehaviour()
	{
	}
}
[Token(Token = "0x200008F")]
public class RayBehavior : MonoBehaviour
{
	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject BeginLocation;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject EndLocation;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color BeginColor;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color EndColor;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 PositionRange;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float WidthA;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float WidthB;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float RadiusA;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float RadiusB;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer Line;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Animation Anim;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool changed;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 Offset;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float AlphaCurve;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float FadeSpeed;

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xD6459C", Offset = "0xD6459C", VA = "0xD6459C")]
	public void ResetRay()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xD6462C", Offset = "0xD6462C", VA = "0xD6462C")]
	public void UpdateLineData()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xD64868", Offset = "0xD64868", VA = "0xD64868")]
	private void Start()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xD6494C", Offset = "0xD6494C", VA = "0xD6494C")]
	private void Update()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xD64A10", Offset = "0xD64A10", VA = "0xD64A10")]
	public RayBehavior()
	{
	}
}
[Token(Token = "0x2000090")]
public class RotateBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 RotationAmount;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xD65328", Offset = "0xD65328", VA = "0xD65328")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xD6532C", Offset = "0xD6532C", VA = "0xD6532C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xD65424", Offset = "0xD65424", VA = "0xD65424")]
	public RotateBehaviour()
	{
	}
}
[Token(Token = "0x2000091")]
public class ScrollBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int materialIndex;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string textureName;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 uvOffset;

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xD65470", Offset = "0xD65470", VA = "0xD65470")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xD65648", Offset = "0xD65648", VA = "0xD65648")]
	public ScrollBehaviour()
	{
	}
}
[Token(Token = "0x2000092")]
public class skyboxspace_demo_v1 : MonoBehaviour
{
	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material[] skyBoxMaterial;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] sunPosition;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int skyBoxLength;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSkyBoxIndex;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string topText;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float counter;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int frames;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fps;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GUIStyle whiteStyle;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static GUIStyle blackStyle;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject sun;

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xD82E70", Offset = "0xD82E70", VA = "0xD82E70")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xD82FC8", Offset = "0xD82FC8", VA = "0xD82FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xD831C0", Offset = "0xD831C0", VA = "0xD831C0", Slot = "4")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xD834D4", Offset = "0xD834D4", VA = "0xD834D4")]
	private static void DrawText(string text, TextAnchor anchor, int offsetX = 15, int offsetY = 15)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xD83BF4", Offset = "0xD83BF4", VA = "0xD83BF4")]
	public skyboxspace_demo_v1()
	{
	}
}
[Token(Token = "0x2000093")]
public class skyboxspace_mouselook_v1 : MonoBehaviour
{
	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector2 _mouseAbsolute;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector2 _smoothMouse;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 clampInDegrees;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 sensitivity;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 smoothing;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 targetDirection;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2 targetCharacterDirection;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject characterBody;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xD83BFC", Offset = "0xD83BFC", VA = "0xD83BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xD83DE8", Offset = "0xD83DE8", VA = "0xD83DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xD84658", Offset = "0xD84658", VA = "0xD84658")]
	public skyboxspace_mouselook_v1()
	{
	}
}
[Token(Token = "0x2000094")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x36D480", Offset = "0x36D480", VA = "0x36D480")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x36D560", Offset = "0x36D560", VA = "0x36D560")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x36D640", Offset = "0x36D640", VA = "0x36D640")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x36DC28", Offset = "0x36DC28", VA = "0x36DC28")]
	public ChatController()
	{
	}
}
[Token(Token = "0x2000095")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4A44", Offset = "0x2D4A44")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x170000FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0x37236C", Offset = "0x37236C", VA = "0x37236C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x3723FC", Offset = "0x3723FC", VA = "0x3723FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x37200C", Offset = "0x37200C", VA = "0x37200C")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x372034", Offset = "0x372034", VA = "0x372034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x372038", Offset = "0x372038", VA = "0x372038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x372374", Offset = "0x372374", VA = "0x372374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Material m_material;

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x371EEC", Offset = "0x371EEC", VA = "0x371EEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x371F80", Offset = "0x371F80", VA = "0x371F80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0DD8", Offset = "0x2E0DD8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x37202C", Offset = "0x37202C", VA = "0x37202C")]
	public EnvMapAnimator()
	{
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x2000096")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xD7F5D4", Offset = "0xD7F5D4", VA = "0xD7F5D4", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xD7F5F8", Offset = "0xD7F5F8", VA = "0xD7F5F8")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000097")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xD7F600", Offset = "0xD7F600", VA = "0xD7F600", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xD7F944", Offset = "0xD7F944", VA = "0xD7F944")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x2000098")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x2000229")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0xD80680", Offset = "0xD80680", VA = "0xD80680")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200022A")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000D74")]
			[Address(RVA = "0xD806E4", Offset = "0xD806E4", VA = "0xD806E4")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200022B")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000D75")]
			[Address(RVA = "0xD80748", Offset = "0xD80748", VA = "0xD80748")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200022C")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0xD807AC", Offset = "0xD807AC", VA = "0xD807AC")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200022D")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0xD80810", Offset = "0xD80810", VA = "0xD80810")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Camera m_Camera;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_lastLineIndex;

		[Token(Token = "0x1700006B")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x60003B7")]
			[Address(RVA = "0xD6D568", Offset = "0xD6D568", VA = "0xD6D568")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003B8")]
			[Address(RVA = "0xD7F94C", Offset = "0xD7F94C", VA = "0xD7F94C")]
			set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x60003B9")]
			[Address(RVA = "0xD6D570", Offset = "0xD6D570", VA = "0xD6D570")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003BA")]
			[Address(RVA = "0xD7F954", Offset = "0xD7F954", VA = "0xD7F954")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x60003BB")]
			[Address(RVA = "0xD6D578", Offset = "0xD6D578", VA = "0xD6D578")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003BC")]
			[Address(RVA = "0xD7F95C", Offset = "0xD7F95C", VA = "0xD7F95C")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x60003BD")]
			[Address(RVA = "0xD6D580", Offset = "0xD6D580", VA = "0xD6D580")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003BE")]
			[Address(RVA = "0xD7F964", Offset = "0xD7F964", VA = "0xD7F964")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x60003BF")]
			[Address(RVA = "0xD6D588", Offset = "0xD6D588", VA = "0xD6D588")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003C0")]
			[Address(RVA = "0xD7F96C", Offset = "0xD7F96C", VA = "0xD7F96C")]
			set
			{
			}
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xD7F974", Offset = "0xD7F974", VA = "0xD7F974")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xD7FB64", Offset = "0xD7FB64", VA = "0xD7FB64")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xD8056C", Offset = "0xD8056C", VA = "0xD8056C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xD80570", Offset = "0xD80570", VA = "0xD80570", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xD802C4", Offset = "0xD802C4", VA = "0xD802C4")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xD80340", Offset = "0xD80340", VA = "0xD80340")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xD803BC", Offset = "0xD803BC", VA = "0xD803BC")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xD8044C", Offset = "0xD8044C", VA = "0xD8044C")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xD804DC", Offset = "0xD804DC", VA = "0xD804DC")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xD80574", Offset = "0xD80574", VA = "0xD80574")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x2000099")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x200022E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4A54", Offset = "0x2D4A54")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400094A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x400094B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <i>5__2;

			[Token(Token = "0x17000100")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D7B")]
				[Address(RVA = "0xD672D4", Offset = "0xD672D4", VA = "0xD672D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000101")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D7D")]
				[Address(RVA = "0xD67364", Offset = "0xD67364", VA = "0xD67364", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D78")]
			[Address(RVA = "0xD66AD0", Offset = "0xD66AD0", VA = "0xD66AD0")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000D79")]
			[Address(RVA = "0xD66AF8", Offset = "0xD66AF8", VA = "0xD66AF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0xD66AFC", Offset = "0xD66AFC", VA = "0xD66AFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0xD672DC", Offset = "0xD672DC", VA = "0xD672DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int BenchmarkType;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Font TextMeshFont;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000432")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x4000433")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Material m_material01;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material m_material02;

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xD66A44", Offset = "0xD66A44", VA = "0xD66A44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0E50", Offset = "0x2E0E50")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xD66AF0", Offset = "0xD66AF0", VA = "0xD66AF0")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x200009A")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x200022F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4A64", Offset = "0x2D4A64")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400094C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400094D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400094E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x400094F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <i>5__2;

			[Token(Token = "0x17000102")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D81")]
				[Address(RVA = "0xD67A58", Offset = "0xD67A58", VA = "0xD67A58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000103")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D83")]
				[Address(RVA = "0xD67AE8", Offset = "0xD67AE8", VA = "0xD67AE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0xD673F8", Offset = "0xD673F8", VA = "0xD673F8")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0xD67420", Offset = "0xD67420", VA = "0xD67420", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D80")]
			[Address(RVA = "0xD67424", Offset = "0xD67424", VA = "0xD67424", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D82")]
			[Address(RVA = "0xD67A60", Offset = "0xD67A60", VA = "0xD67A60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int BenchmarkType;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Canvas canvas;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TextMeshFont;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_textMesh;

		[Token(Token = "0x400043C")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x400043D")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Material m_material01;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material m_material02;

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xD6736C", Offset = "0xD6736C", VA = "0xD6736C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0EC8", Offset = "0x2E0EC8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xD67418", Offset = "0xD67418", VA = "0xD67418")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x200009B")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SpawnType;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int NumberOfNPC;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xD67AF0", Offset = "0xD67AF0", VA = "0xD67AF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xD68544", Offset = "0xD68544", VA = "0xD68544")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x200009C")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SpawnType;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int NumberOfNPC;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Font TheFont;

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xD68554", Offset = "0xD68554", VA = "0xD68554")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xD68558", Offset = "0xD68558", VA = "0xD68558")]
		private void Start()
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xD689AC", Offset = "0xD689AC", VA = "0xD689AC")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x200009D")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SpawnType;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int MinPointSize;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int MaxPointSize;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Steps;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Transform m_Transform;

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xD689BC", Offset = "0xD689BC", VA = "0xD689BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xD68ED0", Offset = "0xD68ED0", VA = "0xD68ED0")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x200009E")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x2000230")]
		public enum CameraModes
		{
			[Token(Token = "0x4000951")]
			Follow,
			[Token(Token = "0x4000952")]
			Isometric,
			[Token(Token = "0x4000953")]
			Free
		}

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Transform cameraTransform;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform dummyTarget;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Transform CameraTarget;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FollowDistance;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxFollowDistance;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MinFollowDistance;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float ElevationAngle;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxElevationAngle;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MinElevationAngle;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float OrbitalAngle;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public CameraModes CameraMode;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool MovementSmoothing;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool RotationSmoothing;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool previousSmoothing;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MovementSmoothingValue;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RotationSmoothingValue;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MoveSensitivity;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 currentVelocity;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 desiredPosition;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float mouseX;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float mouseY;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 moveVector;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float mouseWheel;

		[Token(Token = "0x4000462")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x4000463")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xD68EF0", Offset = "0xD68EF0", VA = "0xD68EF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xD68F60", Offset = "0xD68F60", VA = "0xD68F60")]
		private void Start()
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xD6904C", Offset = "0xD6904C", VA = "0xD6904C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xD69650", Offset = "0xD69650", VA = "0xD69650")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xD6A118", Offset = "0xD6A118", VA = "0xD6A118")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x200009F")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x2000231")]
		public enum MotionType
		{
			[Token(Token = "0x4000955")]
			Rotation,
			[Token(Token = "0x4000956")]
			BackAndForth,
			[Token(Token = "0x4000957")]
			Translation
		}

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float SpinSpeed;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int RotationRange;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Transform m_transform;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_time;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color32 m_lightColor;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int frames;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionType Motion;

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xD6A210", Offset = "0xD6A210", VA = "0xD6A210")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xD6A3B4", Offset = "0xD6A3B4", VA = "0xD6A3B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xD6A69C", Offset = "0xD6A69C", VA = "0xD6A69C")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x20000A0")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000232")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4A74", Offset = "0x2D4A74")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400095A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x17000104")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D87")]
				[Address(RVA = "0xD6A9F0", Offset = "0xD6A9F0", VA = "0xD6A9F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000105")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D89")]
				[Address(RVA = "0xD6AA80", Offset = "0xD6AA80", VA = "0xD6AA80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D84")]
			[Address(RVA = "0xD6A7F4", Offset = "0xD6A7F4", VA = "0xD6A7F4")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000D85")]
			[Address(RVA = "0xD6A81C", Offset = "0xD6A81C", VA = "0xD6A81C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D86")]
			[Address(RVA = "0xD6A820", Offset = "0xD6A820", VA = "0xD6A820", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D88")]
			[Address(RVA = "0xD6A9F8", Offset = "0xD6A9F8", VA = "0xD6A9F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Renderer m_Renderer;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Material m_Material;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_frame;

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xD6A6B8", Offset = "0xD6A6B8", VA = "0xD6A6B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xD6A744", Offset = "0xD6A744", VA = "0xD6A744")]
		private void Start()
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xD6A768", Offset = "0xD6A768", VA = "0xD6A768")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0F40", Offset = "0x2E0F40")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xD6A814", Offset = "0xD6A814", VA = "0xD6A814")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x20000A1")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000473")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_frame;

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xD6AA88", Offset = "0xD6AA88", VA = "0xD6AA88")]
		private void Start()
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xD6ABAC", Offset = "0xD6ABAC", VA = "0xD6ABAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xD6AC64", Offset = "0xD6AC64", VA = "0xD6AC64")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000233")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4A84", Offset = "0x2D4A84")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400095B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400095C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400095D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x400095E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x400095F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x4000960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x17000106")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D8D")]
				[Address(RVA = "0xD6C574", Offset = "0xD6C574", VA = "0xD6C574", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000107")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D8F")]
				[Address(RVA = "0xD6C604", Offset = "0xD6C604", VA = "0xD6C604", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0xD6AE54", Offset = "0xD6AE54", VA = "0xD6AE54")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0xD6B13C", Offset = "0xD6B13C", VA = "0xD6B13C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0xD6B140", Offset = "0xD6B140", VA = "0xD6B140", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0xD6C57C", Offset = "0xD6C57C", VA = "0xD6C57C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float CurveScale;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ShearAmount;

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xD6AC6C", Offset = "0xD6AC6C", VA = "0xD6AC6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xD6ACF4", Offset = "0xD6ACF4", VA = "0xD6ACF4")]
		private void Start()
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xD6ADA4", Offset = "0xD6ADA4", VA = "0xD6ADA4")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xD6AD18", Offset = "0xD6AD18", VA = "0xD6AD18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E0FB8", Offset = "0x2E0FB8")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xD6AE74", Offset = "0xD6AE74", VA = "0xD6AE74")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x2000234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4A94", Offset = "0x2D4A94")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TeleType <>4__this;

			[Token(Token = "0x4000964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x4000965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <counter>5__3;

			[Token(Token = "0x17000108")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D93")]
				[Address(RVA = "0xD73D98", Offset = "0xD73D98", VA = "0xD73D98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000109")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D95")]
				[Address(RVA = "0xD73E28", Offset = "0xD73E28", VA = "0xD73E28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D90")]
			[Address(RVA = "0xD739F8", Offset = "0xD739F8", VA = "0xD739F8")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000D91")]
			[Address(RVA = "0xD73A98", Offset = "0xD73A98", VA = "0xD73A98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xD73A9C", Offset = "0xD73A9C", VA = "0xD73A9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D94")]
			[Address(RVA = "0xD73DA0", Offset = "0xD73DA0", VA = "0xD73DA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string label01;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string label02;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xD73894", Offset = "0xD73894", VA = "0xD73894")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xD7396C", Offset = "0xD7396C", VA = "0xD7396C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E1030", Offset = "0x2E1030")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xD73A18", Offset = "0xD73A18", VA = "0xD73A18")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x20000A4")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x2000235")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4AA4", Offset = "0x2D4AA4")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text textComponent;

			[Token(Token = "0x4000969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x400096A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400096B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x400096C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <visibleCount>5__4;

			[Token(Token = "0x1700010A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D99")]
				[Address(RVA = "0xD74438", Offset = "0xD74438", VA = "0xD74438", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D9B")]
				[Address(RVA = "0xD744C8", Offset = "0xD744C8", VA = "0xD744C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D96")]
			[Address(RVA = "0xD74194", Offset = "0xD74194", VA = "0xD74194")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000D97")]
			[Address(RVA = "0xD74268", Offset = "0xD74268", VA = "0xD74268", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D98")]
			[Address(RVA = "0xD7426C", Offset = "0xD7426C", VA = "0xD7426C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xD74440", Offset = "0xD74440", VA = "0xD74440", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000236")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4AB4", Offset = "0x2D4AB4")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400096D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400096E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400096F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text textComponent;

			[Token(Token = "0x4000970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4000971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4000972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int <counter>5__4;

			[Token(Token = "0x4000973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <visibleCount>5__5;

			[Token(Token = "0x1700010C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D9F")]
				[Address(RVA = "0xD74780", Offset = "0xD74780", VA = "0xD74780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DA1")]
				[Address(RVA = "0xD74810", Offset = "0xD74810", VA = "0xD74810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xD74240", Offset = "0xD74240", VA = "0xD74240")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0xD744D0", Offset = "0xD744D0", VA = "0xD744D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xD744D4", Offset = "0xD744D4", VA = "0xD744D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xD74788", Offset = "0xD74788", VA = "0xD74788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool hasTextChanged;

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xD73E30", Offset = "0xD73E30", VA = "0xD73E30")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xD73EB8", Offset = "0xD73EB8", VA = "0xD73EB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xD73F88", Offset = "0xD73F88", VA = "0xD73F88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xD74088", Offset = "0xD74088", VA = "0xD74088")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xD74188", Offset = "0xD74188", VA = "0xD74188")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xD73EE0", Offset = "0xD73EE0", VA = "0xD73EE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E10A8", Offset = "0x2E10A8")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xD741B4", Offset = "0xD741B4", VA = "0xD741B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E1120", Offset = "0x2E1120")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xD74260", Offset = "0xD74260", VA = "0xD74260")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x20000A5")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x2000237")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4AC4", Offset = "0x2D4AC4")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4000977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4000978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4000979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <current_Count>5__4;

			[Token(Token = "0x400097A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x400097B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <alpha>5__7;

			[Token(Token = "0x400097D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x1700010E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DA5")]
				[Address(RVA = "0xD76000", Offset = "0xD76000", VA = "0xD76000", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DA7")]
				[Address(RVA = "0xD76090", Offset = "0xD76090", VA = "0xD76090", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0xD75064", Offset = "0xD75064", VA = "0xD75064")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0xD75910", Offset = "0xD75910", VA = "0xD75910", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0xD75914", Offset = "0xD75914", VA = "0xD75914", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xD76008", Offset = "0xD76008", VA = "0xD76008", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4AD4", Offset = "0x2D4AD4")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400097E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400097F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4000981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4000982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4000983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <current_Count>5__4;

			[Token(Token = "0x4000984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4000985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4000986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <alpha>5__7;

			[Token(Token = "0x4000987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000110")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DAB")]
				[Address(RVA = "0xD75878", Offset = "0xD75878", VA = "0xD75878", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000111")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DAD")]
				[Address(RVA = "0xD75908", Offset = "0xD75908", VA = "0xD75908", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0xD75084", Offset = "0xD75084", VA = "0xD75084")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0xD75198", Offset = "0xD75198", VA = "0xD75198", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xD7519C", Offset = "0xD7519C", VA = "0xD7519C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xD75880", Offset = "0xD75880", VA = "0xD75880", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Font TheFont;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject m_floatingText;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Transform m_transform;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastPOS;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion lastRotation;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int SpawnType;

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xD74818", Offset = "0xD74818", VA = "0xD74818")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xD748F0", Offset = "0xD748F0", VA = "0xD748F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xD74F4C", Offset = "0xD74F4C", VA = "0xD74F4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E1198", Offset = "0x2E1198")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xD74FD8", Offset = "0xD74FD8", VA = "0xD74FD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E1210", Offset = "0x2E1210")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xD750A4", Offset = "0xD750A4", VA = "0xD750A4")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x20000A6")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SpawnType;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int NumberOfNPC;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Font TheFont;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xD76098", Offset = "0xD76098", VA = "0xD76098")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xD7609C", Offset = "0xD7609C", VA = "0xD7609C")]
		private void Start()
		{
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xD765A8", Offset = "0xD765A8", VA = "0xD765A8")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x2000239")]
		public enum objectType
		{
			[Token(Token = "0x4000989")]
			TextMeshPro,
			[Token(Token = "0x400098A")]
			TextMeshProUGUI
		}

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public objectType ObjectType;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isStatic;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TMP_Text m_text;

		[Token(Token = "0x400048F")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int count;

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xD6C60C", Offset = "0xD6C60C", VA = "0xD6C60C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xD6C8BC", Offset = "0xD6C8BC", VA = "0xD6C8BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xD6C97C", Offset = "0xD6C97C", VA = "0xD6C97C")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x20000A8")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200023A")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x400098C")]
			TopLeft,
			[Token(Token = "0x400098D")]
			BottomLeft,
			[Token(Token = "0x400098E")]
			TopRight,
			[Token(Token = "0x400098F")]
			BottomRight
		}

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float UpdateInterval;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_LastInterval;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_Frames;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string htmlColorTag;

		[Token(Token = "0x4000496")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera m_camera;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xD6C984", Offset = "0xD6C984", VA = "0xD6C984")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0xD6D040", Offset = "0xD6D040", VA = "0xD6D040")]
		private void Start()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0xD6D064", Offset = "0xD6D064", VA = "0xD6D064")]
		private void Update()
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0xD6CC58", Offset = "0xD6CC58", VA = "0xD6CC58")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0xD6D210", Offset = "0xD6D210", VA = "0xD6D210")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20000A9")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x6000405")]
		[Address(RVA = "0xD6D22C", Offset = "0xD6D22C", VA = "0xD6D22C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0xD6D590", Offset = "0xD6D590", VA = "0xD6D590")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0xD6D8CC", Offset = "0xD6D8CC", VA = "0xD6D8CC")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0xD6DBAC", Offset = "0xD6DBAC", VA = "0xD6DBAC")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0xD6DE8C", Offset = "0xD6DE8C", VA = "0xD6DE8C")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0xD6E23C", Offset = "0xD6E23C", VA = "0xD6E23C")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0xD6E5EC", Offset = "0xD6E5EC", VA = "0xD6E5EC")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0xD6E97C", Offset = "0xD6E97C", VA = "0xD6E97C")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x600040D")]
		[Address(RVA = "0xD6E984", Offset = "0xD6E984", VA = "0xD6E984")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x20000AB")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Camera m_Camera;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_isHoveringObject;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_selectedLink;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_lastCharIndex;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_lastWordIndex;

		[Token(Token = "0x600040E")]
		[Address(RVA = "0xD6E98C", Offset = "0xD6E98C", VA = "0xD6E98C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0xD6EA48", Offset = "0xD6EA48", VA = "0xD6EA48")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0xD6F808", Offset = "0xD6F808", VA = "0xD6F808", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0xD6F8A0", Offset = "0xD6F8A0", VA = "0xD6F8A0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0xD6F938", Offset = "0xD6F938", VA = "0xD6F938")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x20000AC")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x40004A5")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x40004A6")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Canvas m_Canvas;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isHoveringObject;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_selectedWord;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastIndex;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x6000413")]
		[Address(RVA = "0xD6F950", Offset = "0xD6F950", VA = "0xD6F950")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0xD6FB74", Offset = "0xD6FB74", VA = "0xD6FB74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0xD6FC74", Offset = "0xD6FC74", VA = "0xD6FC74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xD6FD74", Offset = "0xD6FD74", VA = "0xD6FD74")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0xD6FE50", Offset = "0xD6FE50", VA = "0xD6FE50")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0xD72A5C", Offset = "0xD72A5C", VA = "0xD72A5C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xD72A68", Offset = "0xD72A68", VA = "0xD72A68", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xD72A74", Offset = "0xD72A74", VA = "0xD72A74", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xD72A78", Offset = "0xD72A78", VA = "0xD72A78", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xD717E0", Offset = "0xD717E0", VA = "0xD717E0")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0xD72A7C", Offset = "0xD72A7C", VA = "0xD72A7C")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200023B")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000991")]
			TopLeft,
			[Token(Token = "0x4000992")]
			BottomLeft,
			[Token(Token = "0x4000993")]
			TopRight,
			[Token(Token = "0x4000994")]
			BottomRight
		}

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float UpdateInterval;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_LastInterval;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_Frames;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string htmlColorTag;

		[Token(Token = "0x40004B5")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xD72A94", Offset = "0xD72A94", VA = "0xD72A94")]
		private void Awake()
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xD731C0", Offset = "0xD731C0", VA = "0xD731C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xD731E4", Offset = "0xD731E4", VA = "0xD731E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xD72CE8", Offset = "0xD72CE8", VA = "0xD72CE8")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xD73390", Offset = "0xD73390", VA = "0xD73390")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x20000AE")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x200023C")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000996")]
			TopLeft,
			[Token(Token = "0x4000997")]
			BottomLeft,
			[Token(Token = "0x4000998")]
			TopRight,
			[Token(Token = "0x4000999")]
			BottomRight
		}

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x40004BA")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Camera m_camera;

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xD733AC", Offset = "0xD733AC", VA = "0xD733AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xD736A4", Offset = "0xD736A4", VA = "0xD736A4")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xD73884", Offset = "0xD73884", VA = "0xD73884")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x20000AF")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x200023D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4AE4", Offset = "0x2D4AE4")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400099A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400099B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400099C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x400099D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400099E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x17000112")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DB1")]
				[Address(RVA = "0xD76B70", Offset = "0xD76B70", VA = "0xD76B70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000113")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DB3")]
				[Address(RVA = "0xD76C00", Offset = "0xD76C00", VA = "0xD76C00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0xD766D0", Offset = "0xD766D0", VA = "0xD766D0")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0xD766F8", Offset = "0xD766F8", VA = "0xD766F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0xD766FC", Offset = "0xD766FC", VA = "0xD766FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0xD76B78", Offset = "0xD76B78", VA = "0xD76B78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xD765B8", Offset = "0xD765B8", VA = "0xD765B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xD76620", Offset = "0xD76620", VA = "0xD76620")]
		private void Start()
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xD76644", Offset = "0xD76644", VA = "0xD76644")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E1288", Offset = "0x2E1288")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xD766F0", Offset = "0xD766F0", VA = "0xD766F0")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x20000B0")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x200023E")]
		private struct VertexAnim
		{
			[Token(Token = "0x400099F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x40009A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x40009A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x200023F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4AF4", Offset = "0x2D4AF4")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40009A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40009A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VertexJitter <>4__this;

			[Token(Token = "0x40009A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40009A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <loopCount>5__3;

			[Token(Token = "0x40009A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x40009A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x17000114")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DB7")]
				[Address(RVA = "0xD78194", Offset = "0xD78194", VA = "0xD78194", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000115")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DB9")]
				[Address(RVA = "0xD78224", Offset = "0xD78224", VA = "0xD78224", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0xD76FBC", Offset = "0xD76FBC", VA = "0xD76FBC")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0xD76FF4", Offset = "0xD76FF4", VA = "0xD76FF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0xD76FF8", Offset = "0xD76FF8", VA = "0xD76FF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0xD7819C", Offset = "0xD7819C", VA = "0xD7819C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float AngleMultiplier;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float SpeedMultiplier;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float CurveScale;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool hasTextChanged;

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xD76C08", Offset = "0xD76C08", VA = "0xD76C08")]
		private void Awake()
		{
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0xD76C70", Offset = "0xD76C70", VA = "0xD76C70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xD76D70", Offset = "0xD76D70", VA = "0xD76D70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0xD76E70", Offset = "0xD76E70", VA = "0xD76E70")]
		private void Start()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0xD76F20", Offset = "0xD76F20", VA = "0xD76F20")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0xD76E94", Offset = "0xD76E94", VA = "0xD76E94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E1300", Offset = "0x2E1300")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0xD76FDC", Offset = "0xD76FDC", VA = "0xD76FDC")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x2000240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4B04", Offset = "0x2D4B04")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40009AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40009AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x40009AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40009AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000116")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DBD")]
				[Address(RVA = "0xD79C60", Offset = "0xD79C60", VA = "0xD79C60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000117")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DBF")]
				[Address(RVA = "0xD79CF0", Offset = "0xD79CF0", VA = "0xD79CF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xD785D8", Offset = "0xD785D8", VA = "0xD785D8")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0xD7860C", Offset = "0xD7860C", VA = "0xD7860C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0xD78610", Offset = "0xD78610", VA = "0xD78610", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0xD79C68", Offset = "0xD79C68", VA = "0xD79C68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float AngleMultiplier;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float SpeedMultiplier;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float ScaleMultiplier;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RotationMultiplier;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x6000431")]
		[Address(RVA = "0xD7822C", Offset = "0xD7822C", VA = "0xD7822C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0xD78294", Offset = "0xD78294", VA = "0xD78294")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0xD78394", Offset = "0xD78394", VA = "0xD78394")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0xD78494", Offset = "0xD78494", VA = "0xD78494")]
		private void Start()
		{
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0xD78544", Offset = "0xD78544", VA = "0xD78544")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0xD784B8", Offset = "0xD784B8", VA = "0xD784B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E1378", Offset = "0x2E1378")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0xD785F8", Offset = "0xD785F8", VA = "0xD785F8")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x20000B2")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x2000241")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4B14", Offset = "0x2D4B14")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40009AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40009B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x40009B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40009B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000118")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DC3")]
				[Address(RVA = "0xD7C278", Offset = "0xD7C278", VA = "0xD7C278", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000119")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DC5")]
				[Address(RVA = "0xD7C308", Offset = "0xD7C308", VA = "0xD7C308", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xD7A0A4", Offset = "0xD7A0A4", VA = "0xD7A0A4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0xD7A0DC", Offset = "0xD7A0DC", VA = "0xD7A0DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0xD7A0E0", Offset = "0xD7A0E0", VA = "0xD7A0E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xD7C280", Offset = "0xD7C280", VA = "0xD7C280", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float AngleMultiplier;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float SpeedMultiplier;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float CurveScale;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool hasTextChanged;

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xD79CF8", Offset = "0xD79CF8", VA = "0xD79CF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0xD79D60", Offset = "0xD79D60", VA = "0xD79D60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xD79E60", Offset = "0xD79E60", VA = "0xD79E60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xD79F60", Offset = "0xD79F60", VA = "0xD79F60")]
		private void Start()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xD7A010", Offset = "0xD7A010", VA = "0xD7A010")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0xD79F84", Offset = "0xD79F84", VA = "0xD79F84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E13F0", Offset = "0x2E13F0")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0xD7A0C4", Offset = "0xD7A0C4", VA = "0xD7A0C4")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x20000B3")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x2000242")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4B24", Offset = "0x2D4B24")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40009B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x40009B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xD7C6FC", Offset = "0xD7C6FC", VA = "0xD7C6FC")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0xD7C704", Offset = "0xD7C704", VA = "0xD7C704")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000243")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4B34", Offset = "0x2D4B34")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40009B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40009B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VertexZoom <>4__this;

			[Token(Token = "0x40009B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x40009B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40009BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x40009BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x1700011A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DCB")]
				[Address(RVA = "0xD7DF24", Offset = "0xD7DF24", VA = "0xD7DF24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DCD")]
				[Address(RVA = "0xD7DFB4", Offset = "0xD7DFB4", VA = "0xD7DFB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0xD7C6C4", Offset = "0xD7C6C4", VA = "0xD7C6C4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0xD7C7DC", Offset = "0xD7C7DC", VA = "0xD7C7DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xD7C7E0", Offset = "0xD7C7E0", VA = "0xD7C7E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0xD7DF2C", Offset = "0xD7DF2C", VA = "0xD7DF2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float AngleMultiplier;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float SpeedMultiplier;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float CurveScale;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool hasTextChanged;

		[Token(Token = "0x600043F")]
		[Address(RVA = "0xD7C310", Offset = "0xD7C310", VA = "0xD7C310")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0xD7C378", Offset = "0xD7C378", VA = "0xD7C378")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xD7C478", Offset = "0xD7C478", VA = "0xD7C478")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xD7C578", Offset = "0xD7C578", VA = "0xD7C578")]
		private void Start()
		{
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0xD7C628", Offset = "0xD7C628", VA = "0xD7C628")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0xD7C59C", Offset = "0xD7C59C", VA = "0xD7C59C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E1468", Offset = "0x2E1468")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0xD7C6E4", Offset = "0xD7C6E4", VA = "0xD7C6E4")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x20000B4")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4B44", Offset = "0x2D4B44")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40009BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40009BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x40009BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x40009C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x1700011C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DD1")]
				[Address(RVA = "0xD7F53C", Offset = "0xD7F53C", VA = "0xD7F53C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DD3")]
				[Address(RVA = "0xD7F5CC", Offset = "0xD7F5CC", VA = "0xD7F5CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0xD7E1A4", Offset = "0xD7E1A4", VA = "0xD7E1A4")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0xD7E490", Offset = "0xD7E490", VA = "0xD7E490", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0xD7E494", Offset = "0xD7E494", VA = "0xD7E494", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0xD7F544", Offset = "0xD7F544", VA = "0xD7F544", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float AngleMultiplier;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpeedMultiplier;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float CurveScale;

		[Token(Token = "0x6000446")]
		[Address(RVA = "0xD7DFBC", Offset = "0xD7DFBC", VA = "0xD7DFBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0xD7E044", Offset = "0xD7E044", VA = "0xD7E044")]
		private void Start()
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0xD7E0F4", Offset = "0xD7E0F4", VA = "0xD7E0F4")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0xD7E068", Offset = "0xD7E068", VA = "0xD7E068")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E14E0", Offset = "0x2E14E0")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0xD7E1C4", Offset = "0xD7E1C4", VA = "0xD7E1C4")]
		public WarpTextExample()
		{
		}
	}
}
namespace GameState
{
	[Serializable]
	[Token(Token = "0x20000B5")]
	public class GameStateData
	{
		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string SceneName;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int PlayerGoldTarget;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PlayerCurrentGold;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 PlayerPosition;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 PlayerRotation;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool[] GoldData;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SimpleQuestState[] QuestData;

		[Token(Token = "0x600044B")]
		[Address(RVA = "0xD5EF20", Offset = "0xD5EF20", VA = "0xD5EF20")]
		public GameStateData()
		{
		}
	}
	[Token(Token = "0x20000B6")]
	public class GameStateManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000245")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4B54", Offset = "0x2D4B54")]
		private sealed class <>c
		{
			[Token(Token = "0x40009C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40009C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<Quest, bool> <>9__17_0;

			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0xD5FD68", Offset = "0xD5FD68", VA = "0xD5FD68")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0xD5FD70", Offset = "0xD5FD70", VA = "0xD5FD70")]
			internal bool <Load>b__17_0(Quest q)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000246")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4B64", Offset = "0x2D4B64")]
		private sealed class <Load>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40009C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40009C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameStateManager <>4__this;

			[Token(Token = "0x1700011E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DDA")]
				[Address(RVA = "0xD608D8", Offset = "0xD608D8", VA = "0xD608D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DDC")]
				[Address(RVA = "0xD60968", Offset = "0xD60968", VA = "0xD60968", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0xD5FCC8", Offset = "0xD5FCC8", VA = "0xD5FCC8")]
			[DebuggerHidden]
			public <Load>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0xD5FD9C", Offset = "0xD5FD9C", VA = "0xD5FD9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0xD5FDA0", Offset = "0xD5FDA0", VA = "0xD5FDA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0xD608E0", Offset = "0xD608E0", VA = "0xD608E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004E1")]
		private const string SaveDataID = "SaveData";

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameStateData _data;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject CoinManager;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public QuestManager QuestManager;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private OVRPlayerController _ovrPlayerController;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CharacterController _characterController;

		[Token(Token = "0x17000070")]
		public static GameStateData Data
		{
			[Token(Token = "0x600044C")]
			[Address(RVA = "0xD5EF28", Offset = "0xD5EF28", VA = "0xD5EF28")]
			get
			{
				return null;
			}
			[Token(Token = "0x600044D")]
			[Address(RVA = "0xD5F08C", Offset = "0xD5F08C", VA = "0xD5F08C")]
			set
			{
			}
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0xD5F1B4", Offset = "0xD5F1B4", VA = "0xD5F1B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0xD5F270", Offset = "0xD5F270", VA = "0xD5F270")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0xD5F32C", Offset = "0xD5F32C", VA = "0xD5F32C")]
		private void OVRPlatformMenu_OnRetreatOneLevel()
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0xD5F850", Offset = "0xD5F850", VA = "0xD5F850")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0xD5F8F8", Offset = "0xD5F8F8", VA = "0xD5F8F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0xD5FAD8", Offset = "0xD5FAD8", VA = "0xD5FAD8")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0xD5FB70", Offset = "0xD5FB70", VA = "0xD5FB70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xD5F330", Offset = "0xD5F330", VA = "0xD5F330")]
		private void Save()
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0xD5FA4C", Offset = "0xD5FA4C", VA = "0xD5FA4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E1558", Offset = "0x2E1558")]
		private IEnumerator Load()
		{
			return null;
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0xD5FCE8", Offset = "0xD5FCE8", VA = "0xD5FCE8")]
		public GameStateManager()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20000B7")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40004E8")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40004E9")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40004EA")]
		EUDT_None,
		[Token(Token = "0x40004EB")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20000B8")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000247")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4B74", Offset = "0x2D4B74")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40009C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40009C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000120")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DE0")]
				[Address(RVA = "0x46A4C8", Offset = "0x46A4C8", VA = "0x46A4C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000121")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DE2")]
				[Address(RVA = "0x46A558", Offset = "0x46A558", VA = "0x46A558", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x469830", Offset = "0x469830", VA = "0x469830")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x46A164", Offset = "0x46A164", VA = "0x46A164", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x46A168", Offset = "0x46A168", VA = "0x46A168", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x46A4D0", Offset = "0x46A4D0", VA = "0x46A4D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inMenu;

		[Token(Token = "0x40004ED")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40004EE")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40004EF")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DCD4C", Offset = "0x2DCD4C")]
		public GameObject mainCamera;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GameObject uiCamera;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2DCDA0", Offset = "0x2DCDA0")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float heightBetweenItems;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int numLevels;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x4683A8", Offset = "0x4683A8", VA = "0x4683A8")]
		private void Start()
		{
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x469168", Offset = "0x469168", VA = "0x469168")]
		private void Update()
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x4692E0", Offset = "0x4692E0", VA = "0x4692E0")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x4694A0", Offset = "0x4694A0", VA = "0x4694A0")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x469660", Offset = "0x469660", VA = "0x469660")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x4692BC", Offset = "0x4692BC", VA = "0x4692BC")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x4697A4", Offset = "0x4697A4", VA = "0x4697A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E15D0", Offset = "0x2E15D0")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x469850", Offset = "0x469850", VA = "0x469850")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x46895C", Offset = "0x46895C", VA = "0x46895C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x4699D8", Offset = "0x4699D8", VA = "0x4699D8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x469888", Offset = "0x469888", VA = "0x469888")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x469EAC", Offset = "0x469EAC", VA = "0x469EAC")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x469F88", Offset = "0x469F88", VA = "0x469F88")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x46A020", Offset = "0x46A020", VA = "0x46A020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E1648", Offset = "0x2E1648")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x46A08C", Offset = "0x46A08C", VA = "0x46A08C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E1658", Offset = "0x2E1658")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x46A0F8", Offset = "0x46A0F8", VA = "0x46A0F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E1668", Offset = "0x2E1668")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20000B9")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000505")]
		TRIANGLES,
		[Token(Token = "0x4000506")]
		QUADS
	}
	[Token(Token = "0x20000BA")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000508")]
		ABSORPTION,
		[Token(Token = "0x4000509")]
		TRANSMISSION,
		[Token(Token = "0x400050A")]
		SCATTERING
	}
	[Token(Token = "0x20000BB")]
	public struct MeshGroup
	{
		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public UIntPtr faceCount;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FaceType faceType;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr material;
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x20000BC")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6000469")]
		[Address(RVA = "0xB39668", Offset = "0xB39668", VA = "0xB39668")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0xB397D0", Offset = "0xB397D0", VA = "0xB397D0")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0xB39958", Offset = "0xB39958", VA = "0xB39958")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xB39AD8", Offset = "0xB39AD8", VA = "0xB39AD8")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0xB39B30", Offset = "0xB39B30", VA = "0xB39B30", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x20000BD")]
	public enum AbuseReportType
	{
		[Token(Token = "0x4000511")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DCDE8", Offset = "0x2DCDE8")]
		Unknown,
		[Token(Token = "0x4000512")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DCE1C", Offset = "0x2DCE1C")]
		Object,
		[Token(Token = "0x4000513")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DCE50", Offset = "0x2DCE50")]
		User
	}
	[Token(Token = "0x20000BE")]
	public enum AchievementType
	{
		[Token(Token = "0x4000515")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DCE84", Offset = "0x2DCE84")]
		Unknown,
		[Token(Token = "0x4000516")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DCEB8", Offset = "0x2DCEB8")]
		Simple,
		[Token(Token = "0x4000517")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DCEEC", Offset = "0x2DCEEC")]
		Bitfield,
		[Token(Token = "0x4000518")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DCF24", Offset = "0x2DCF24")]
		Count
	}
	[Token(Token = "0x20000BF")]
	public class AndroidPlatform
	{
		[Token(Token = "0x600046E")]
		[Address(RVA = "0xB3B108", Offset = "0xB3B108", VA = "0xB3B108")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0xB3B334", Offset = "0xB3B334", VA = "0xB3B334")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0xB3B580", Offset = "0xB3B580", VA = "0xB3B580")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public class ApplicationOptions
	{
		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6000471")]
		[Address(RVA = "0xB3BBA4", Offset = "0xB3BBA4", VA = "0xB3BBA4")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0xB3BD08", Offset = "0xB3BD08", VA = "0xB3BD08")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0xB3B8CC", Offset = "0xB3B8CC", VA = "0xB3B8CC")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0xB3BE60", Offset = "0xB3BE60", VA = "0xB3BE60", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public static class Callback
	{
		[Token(Token = "0x2000248")]
		private class RequestCallback
		{
			[Token(Token = "0x40009C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Message.Callback messageCallback;

			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0x3F0700", Offset = "0x3F0700", VA = "0x3F0700")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x3EFDB8", Offset = "0x3EFDB8", VA = "0x3EFDB8")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x3F0708", Offset = "0x3F0708", VA = "0x3F0708", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x2000249")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x40009CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x6000DE6")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6000DE7")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, RequestCallback> requestIDsToCallbacks;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6000475")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x3EFC70", Offset = "0x3EFC70", VA = "0x3EFC70")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x6000477")]
		internal static void OnComplete<T>(Request<T> request, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x3EFDD8", Offset = "0x3EFDD8", VA = "0x3EFDD8")]
		internal static void OnComplete(Request request, Message.Callback callback)
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x3EFEF0", Offset = "0x3EFEF0", VA = "0x3EFEF0")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x3F0300", Offset = "0x3F0300", VA = "0x3F0300")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x3F03B4", Offset = "0x3F03B4", VA = "0x3F03B4")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x3F0060", Offset = "0x3F0060", VA = "0x3F0060")]
		private static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x20000C2")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x600047E")]
		[Address(RVA = "0x3F0B18", Offset = "0x3F0B18", VA = "0x3F0B18")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x3F0BF4", Offset = "0x3F0BF4", VA = "0x3F0BF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x3F0D2C", Offset = "0x3F0D2C", VA = "0x3F0D2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x3F0DE0", Offset = "0x3F0DE0", VA = "0x3F0DE0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x3F0DE4", Offset = "0x3F0DE4", VA = "0x3F0DE4")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class CAPI
	{
		[Token(Token = "0x200024A")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x40009CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40009CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x40009CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string stringValue_;

			[Token(Token = "0x40009CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int intValue_;

			[Token(Token = "0x40009CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double doubleValue_;

			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x1DD494", Offset = "0x1DD494", VA = "0x1DD494")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x1DD4B4", Offset = "0x1DD4B4", VA = "0x1DD4B4")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x1DD4D8", Offset = "0x1DD4D8", VA = "0x1DD4D8")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x200024B")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x40009D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40009D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x40009D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr parameterArray;

			[Token(Token = "0x40009D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint parameterArrayCount;

			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x1DD594", Offset = "0x1DD594", VA = "0x1DD594")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x200024C")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x40009D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x40009D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint dataArrayCount;

			[Token(Token = "0x40009D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr criterionArray;

			[Token(Token = "0x40009D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x200024D")]
		public struct OculusInitParams
		{
			[Token(Token = "0x40009D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x40009D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public string email;

			[Token(Token = "0x40009DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string password;

			[Token(Token = "0x40009DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ulong appId;

			[Token(Token = "0x40009DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x200024E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2D4B84", Offset = "0x2D4B84")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x400051F")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x4000521")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xB3DB48", Offset = "0xB3DB48", VA = "0xB3DB48")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xB3DD54", Offset = "0xB3DD54", VA = "0xB3DD54")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xB3E578", Offset = "0xB3E578", VA = "0xB3E578")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xB3E66C", Offset = "0xB3E66C", VA = "0xB3E66C")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xB3EA7C", Offset = "0xB3EA7C", VA = "0xB3EA7C")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xB3EBD0", Offset = "0xB3EBD0", VA = "0xB3EBD0")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xB3EC6C", Offset = "0xB3EC6C", VA = "0xB3EC6C")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0xB3ED08", Offset = "0xB3ED08", VA = "0xB3ED08")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xB3EE0C", Offset = "0xB3EE0C", VA = "0xB3EE0C")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xB3EECC", Offset = "0xB3EECC", VA = "0xB3EECC")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x600048D")]
		[Address(RVA = "0xB3B1F8", Offset = "0xB3B1F8", VA = "0xB3B1F8")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x600048E")]
		[Address(RVA = "0xB3F0D0", Offset = "0xB3F0D0", VA = "0xB3F0D0")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x600048F")]
		[Address(RVA = "0xB3B470", Offset = "0xB3B470", VA = "0xB3B470")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6000490")]
		[Address(RVA = "0xB3F1E0", Offset = "0xB3F1E0", VA = "0xB3F1E0")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000491")]
		[Address(RVA = "0xB3F2F8", Offset = "0xB3F2F8", VA = "0xB3F2F8")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x6000492")]
		[Address(RVA = "0xB3F458", Offset = "0xB3F458", VA = "0xB3F458")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x6000493")]
		[Address(RVA = "0xB3F580", Offset = "0xB3F580", VA = "0xB3F580")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000494")]
		[Address(RVA = "0xB3F690", Offset = "0xB3F690", VA = "0xB3F690")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000495")]
		[Address(RVA = "0xB3F7B0", Offset = "0xB3F7B0", VA = "0xB3F7B0")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xB3F8B8", Offset = "0xB3F8B8", VA = "0xB3F8B8")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000497")]
		[Address(RVA = "0xB3F938", Offset = "0xB3F938", VA = "0xB3F938")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6000498")]
		[Address(RVA = "0xB3FA10", Offset = "0xB3FA10", VA = "0xB3FA10")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6000499")]
		[Address(RVA = "0xB3FB08", Offset = "0xB3FB08", VA = "0xB3FB08")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x600049A")]
		[Address(RVA = "0xB3FC10", Offset = "0xB3FC10", VA = "0xB3FC10")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x600049B")]
		[Address(RVA = "0xB3FCF8", Offset = "0xB3FCF8", VA = "0xB3FCF8")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x600049C")]
		[Address(RVA = "0xB3FE00", Offset = "0xB3FE00", VA = "0xB3FE00")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x600049D")]
		[Address(RVA = "0xB3FF18", Offset = "0xB3FF18", VA = "0xB3FF18")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x600049E")]
		[Address(RVA = "0xB40020", Offset = "0xB40020", VA = "0xB40020")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x600049F")]
		[Address(RVA = "0xB40138", Offset = "0xB40138", VA = "0xB40138")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xB40228", Offset = "0xB40228", VA = "0xB40228")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xB40328", Offset = "0xB40328", VA = "0xB40328")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xB40440", Offset = "0xB40440", VA = "0xB40440")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xB40528", Offset = "0xB40528", VA = "0xB40528")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xB40610", Offset = "0xB40610", VA = "0xB40610")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xB3AE38", Offset = "0xB3AE38", VA = "0xB3AE38")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xB406E8", Offset = "0xB406E8", VA = "0xB406E8")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xB407E8", Offset = "0xB407E8", VA = "0xB407E8")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xB408E0", Offset = "0xB408E0", VA = "0xB408E0")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xB409EC", Offset = "0xB409EC", VA = "0xB409EC")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xB40E38", Offset = "0xB40E38", VA = "0xB40E38")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xB3BAC0", Offset = "0xB3BAC0", VA = "0xB3BAC0")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xB40F58", Offset = "0xB40F58", VA = "0xB40F58")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xB41088", Offset = "0xB41088", VA = "0xB41088")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xB41248", Offset = "0xB41248", VA = "0xB41248")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xB41378", Offset = "0xB41378", VA = "0xB41378")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xB41488", Offset = "0xB41488", VA = "0xB41488")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xB41510", Offset = "0xB41510", VA = "0xB41510")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xB415F8", Offset = "0xB415F8", VA = "0xB415F8")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xB41708", Offset = "0xB41708", VA = "0xB41708")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xB417E8", Offset = "0xB417E8", VA = "0xB417E8")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xB418F0", Offset = "0xB418F0", VA = "0xB418F0")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xB419C8", Offset = "0xB419C8", VA = "0xB419C8")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xB41AD8", Offset = "0xB41AD8", VA = "0xB41AD8")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xB41BF8", Offset = "0xB41BF8", VA = "0xB41BF8")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xB41D00", Offset = "0xB41D00", VA = "0xB41D00")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xB41E00", Offset = "0xB41E00", VA = "0xB41E00")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xB41F40", Offset = "0xB41F40", VA = "0xB41F40")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xB42040", Offset = "0xB42040", VA = "0xB42040")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xB42120", Offset = "0xB42120", VA = "0xB42120")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xB42200", Offset = "0xB42200", VA = "0xB42200")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xB422E8", Offset = "0xB422E8", VA = "0xB422E8")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xB423C0", Offset = "0xB423C0", VA = "0xB423C0")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xB424D0", Offset = "0xB424D0", VA = "0xB424D0")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xB425C0", Offset = "0xB425C0", VA = "0xB425C0")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xB426E0", Offset = "0xB426E0", VA = "0xB426E0")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xB427B8", Offset = "0xB427B8", VA = "0xB427B8")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xB428E0", Offset = "0xB428E0", VA = "0xB428E0")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xB42A10", Offset = "0xB42A10", VA = "0xB42A10")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xB42B28", Offset = "0xB42B28", VA = "0xB42B28")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xB42C38", Offset = "0xB42C38", VA = "0xB42C38")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xB42D50", Offset = "0xB42D50", VA = "0xB42D50")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xB42E70", Offset = "0xB42E70", VA = "0xB42E70")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xB42F90", Offset = "0xB42F90", VA = "0xB42F90")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xB43080", Offset = "0xB43080", VA = "0xB43080")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xB43160", Offset = "0xB43160", VA = "0xB43160")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xB43238", Offset = "0xB43238", VA = "0xB43238")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xB43318", Offset = "0xB43318", VA = "0xB43318")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xB43400", Offset = "0xB43400", VA = "0xB43400")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xB434E0", Offset = "0xB434E0", VA = "0xB434E0")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xB435F0", Offset = "0xB435F0", VA = "0xB435F0")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xB39E08", Offset = "0xB39E08", VA = "0xB39E08")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xB436F8", Offset = "0xB436F8", VA = "0xB436F8")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xB3A008", Offset = "0xB3A008", VA = "0xB3A008")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xB437E8", Offset = "0xB437E8", VA = "0xB437E8")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xB3A208", Offset = "0xB3A208", VA = "0xB3A208")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xB3A3F0", Offset = "0xB3A3F0", VA = "0xB3A3F0")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xB3A5E8", Offset = "0xB3A5E8", VA = "0xB3A5E8")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xB3A8D0", Offset = "0xB3A8D0", VA = "0xB3A8D0")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xB3ABA4", Offset = "0xB3ABA4", VA = "0xB3ABA4")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xB438D0", Offset = "0xB438D0", VA = "0xB438D0")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xB439A8", Offset = "0xB439A8", VA = "0xB439A8")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xB43AB0", Offset = "0xB43AB0", VA = "0xB43AB0")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xB3B690", Offset = "0xB3B690", VA = "0xB3B690")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xB3B928", Offset = "0xB3B928", VA = "0xB3B928")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xB43B98", Offset = "0xB43B98", VA = "0xB43B98")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xB43C80", Offset = "0xB43C80", VA = "0xB43C80")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xB43D60", Offset = "0xB43D60", VA = "0xB43D60")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xB43E30", Offset = "0xB43E30", VA = "0xB43E30")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xB3C130", Offset = "0xB3C130", VA = "0xB3C130")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xB3C360", Offset = "0xB3C360", VA = "0xB3C360")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xB3C590", Offset = "0xB3C590", VA = "0xB3C590")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xB43F20", Offset = "0xB43F20", VA = "0xB43F20")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xB3C778", Offset = "0xB3C778", VA = "0xB3C778")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xB3C9B0", Offset = "0xB3C9B0", VA = "0xB3C9B0")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xB3CBA4", Offset = "0xB3CBA4", VA = "0xB3CBA4")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xB44000", Offset = "0xB44000", VA = "0xB44000")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xB3CD90", Offset = "0xB3CD90", VA = "0xB3CD90")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xB3CF90", Offset = "0xB3CF90", VA = "0xB3CF90")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xB3D18C", Offset = "0xB3D18C", VA = "0xB3D18C")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xB440E0", Offset = "0xB440E0", VA = "0xB440E0")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xB3D368", Offset = "0xB3D368", VA = "0xB3D368")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xB3D580", Offset = "0xB3D580", VA = "0xB3D580")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xB3D7B0", Offset = "0xB3D7B0", VA = "0xB3D7B0")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xB3D9E0", Offset = "0xB3D9E0", VA = "0xB3D9E0")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xB441C8", Offset = "0xB441C8", VA = "0xB441C8")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xB442A4", Offset = "0xB442A4", VA = "0xB442A4")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xB44398", Offset = "0xB44398", VA = "0xB44398")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xB44480", Offset = "0xB44480", VA = "0xB44480")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xB44590", Offset = "0xB44590", VA = "0xB44590")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xB44698", Offset = "0xB44698", VA = "0xB44698")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xB447A4", Offset = "0xB447A4", VA = "0xB447A4")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xB44898", Offset = "0xB44898", VA = "0xB44898")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xB44978", Offset = "0xB44978", VA = "0xB44978")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xB44A70", Offset = "0xB44A70", VA = "0xB44A70")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xB44B50", Offset = "0xB44B50", VA = "0xB44B50")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000500")]
		[Address(RVA = "0xB44C20", Offset = "0xB44C20", VA = "0xB44C20")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xB44D04", Offset = "0xB44D04", VA = "0xB44D04")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000502")]
		[Address(RVA = "0xB44DF8", Offset = "0xB44DF8", VA = "0xB44DF8")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000503")]
		[Address(RVA = "0xB44EE8", Offset = "0xB44EE8", VA = "0xB44EE8")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000504")]
		[Address(RVA = "0xB44FB8", Offset = "0xB44FB8", VA = "0xB44FB8")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xB45094", Offset = "0xB45094", VA = "0xB45094")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000506")]
		[Address(RVA = "0xB45188", Offset = "0xB45188", VA = "0xB45188")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xB45270", Offset = "0xB45270", VA = "0xB45270")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000508")]
		[Address(RVA = "0xB45388", Offset = "0xB45388", VA = "0xB45388")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xB4547C", Offset = "0xB4547C", VA = "0xB4547C")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600050A")]
		[Address(RVA = "0xB45590", Offset = "0xB45590", VA = "0xB45590")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x600050B")]
		[Address(RVA = "0xB45684", Offset = "0xB45684", VA = "0xB45684")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600050C")]
		[Address(RVA = "0xB457C0", Offset = "0xB457C0", VA = "0xB457C0")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x600050D")]
		[Address(RVA = "0xB458D0", Offset = "0xB458D0", VA = "0xB458D0")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x600050E")]
		[Address(RVA = "0xB459B0", Offset = "0xB459B0", VA = "0xB459B0")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xB45A8C", Offset = "0xB45A8C", VA = "0xB45A8C")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000510")]
		[Address(RVA = "0xB45B60", Offset = "0xB45B60", VA = "0xB45B60")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xB45C70", Offset = "0xB45C70", VA = "0xB45C70")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000512")]
		[Address(RVA = "0xB45D40", Offset = "0xB45D40", VA = "0xB45D40")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xB45E50", Offset = "0xB45E50", VA = "0xB45E50")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000514")]
		[Address(RVA = "0xB45F20", Offset = "0xB45F20", VA = "0xB45F20")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6000515")]
		[Address(RVA = "0xB46028", Offset = "0xB46028", VA = "0xB46028")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000516")]
		[Address(RVA = "0xB46120", Offset = "0xB46120", VA = "0xB46120")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6000517")]
		[Address(RVA = "0xB46238", Offset = "0xB46238", VA = "0xB46238")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000518")]
		[Address(RVA = "0xB463D0", Offset = "0xB463D0", VA = "0xB463D0")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6000519")]
		[Address(RVA = "0xB465BC", Offset = "0xB465BC", VA = "0xB465BC")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600051A")]
		[Address(RVA = "0xB46690", Offset = "0xB46690", VA = "0xB46690")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x600051B")]
		[Address(RVA = "0xB46798", Offset = "0xB46798", VA = "0xB46798")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600051C")]
		[Address(RVA = "0xB46868", Offset = "0xB46868", VA = "0xB46868")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x600051D")]
		[Address(RVA = "0xB46940", Offset = "0xB46940", VA = "0xB46940")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x600051E")]
		[Address(RVA = "0xB46B38", Offset = "0xB46B38", VA = "0xB46B38")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xB46C0C", Offset = "0xB46C0C", VA = "0xB46C0C")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000520")]
		[Address(RVA = "0xB46CE0", Offset = "0xB46CE0", VA = "0xB46CE0")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000521")]
		[Address(RVA = "0xB46DC0", Offset = "0xB46DC0", VA = "0xB46DC0")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xB46E94", Offset = "0xB46E94", VA = "0xB46E94")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000523")]
		[Address(RVA = "0xB46F68", Offset = "0xB46F68", VA = "0xB46F68")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xB47044", Offset = "0xB47044", VA = "0xB47044")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000525")]
		[Address(RVA = "0xB47138", Offset = "0xB47138", VA = "0xB47138")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xB4722C", Offset = "0xB4722C", VA = "0xB4722C")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000527")]
		[Address(RVA = "0xB47320", Offset = "0xB47320", VA = "0xB47320")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6000528")]
		[Address(RVA = "0xB47420", Offset = "0xB47420", VA = "0xB47420")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000529")]
		[Address(RVA = "0xB47500", Offset = "0xB47500", VA = "0xB47500")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xB475E4", Offset = "0xB475E4", VA = "0xB475E4")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600052B")]
		[Address(RVA = "0xB476E0", Offset = "0xB476E0", VA = "0xB476E0")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x600052C")]
		[Address(RVA = "0xB477F0", Offset = "0xB477F0", VA = "0xB477F0")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xB478C4", Offset = "0xB478C4", VA = "0xB478C4")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600052E")]
		[Address(RVA = "0xB47998", Offset = "0xB47998", VA = "0xB47998")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x600052F")]
		[Address(RVA = "0xB47A88", Offset = "0xB47A88", VA = "0xB47A88")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6000530")]
		[Address(RVA = "0xB47B60", Offset = "0xB47B60", VA = "0xB47B60")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6000531")]
		[Address(RVA = "0xB47C38", Offset = "0xB47C38", VA = "0xB47C38")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000532")]
		[Address(RVA = "0xB47D18", Offset = "0xB47D18", VA = "0xB47D18")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x6000533")]
		[Address(RVA = "0xB47E00", Offset = "0xB47E00", VA = "0xB47E00")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000534")]
		[Address(RVA = "0xB47EE0", Offset = "0xB47EE0", VA = "0xB47EE0")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6000535")]
		[Address(RVA = "0xB47FB8", Offset = "0xB47FB8", VA = "0xB47FB8")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x6000536")]
		[Address(RVA = "0xB480B0", Offset = "0xB480B0", VA = "0xB480B0")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xB48194", Offset = "0xB48194", VA = "0xB48194")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000538")]
		[Address(RVA = "0xB48270", Offset = "0xB48270", VA = "0xB48270")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xB48350", Offset = "0xB48350", VA = "0xB48350")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600053A")]
		[Address(RVA = "0xB48428", Offset = "0xB48428", VA = "0xB48428")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xB48508", Offset = "0xB48508", VA = "0xB48508")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600053C")]
		[Address(RVA = "0xB48600", Offset = "0xB48600", VA = "0xB48600")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x600053D")]
		[Address(RVA = "0xB486E0", Offset = "0xB486E0", VA = "0xB486E0")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xB487E4", Offset = "0xB487E4", VA = "0xB487E4")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600053F")]
		[Address(RVA = "0xB488D8", Offset = "0xB488D8", VA = "0xB488D8")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xB489D8", Offset = "0xB489D8", VA = "0xB489D8")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000541")]
		[Address(RVA = "0xB48AB0", Offset = "0xB48AB0", VA = "0xB48AB0")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xB48BA0", Offset = "0xB48BA0", VA = "0xB48BA0")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000543")]
		[Address(RVA = "0xB48C80", Offset = "0xB48C80", VA = "0xB48C80")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xB48D6C", Offset = "0xB48D6C", VA = "0xB48D6C")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000545")]
		[Address(RVA = "0xB48E48", Offset = "0xB48E48", VA = "0xB48E48")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xB48F2C", Offset = "0xB48F2C", VA = "0xB48F2C")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000547")]
		[Address(RVA = "0xB49008", Offset = "0xB49008", VA = "0xB49008")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xB490E8", Offset = "0xB490E8", VA = "0xB490E8")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000549")]
		[Address(RVA = "0xB491C0", Offset = "0xB491C0", VA = "0xB491C0")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x600054A")]
		[Address(RVA = "0xB492A8", Offset = "0xB492A8", VA = "0xB492A8")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x600054B")]
		[Address(RVA = "0xB49398", Offset = "0xB49398", VA = "0xB49398")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x600054C")]
		[Address(RVA = "0xB49488", Offset = "0xB49488", VA = "0xB49488")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xB49564", Offset = "0xB49564", VA = "0xB49564")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600054E")]
		[Address(RVA = "0xB49648", Offset = "0xB49648", VA = "0xB49648")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x600054F")]
		[Address(RVA = "0xB49738", Offset = "0xB49738", VA = "0xB49738")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xB49860", Offset = "0xB49860", VA = "0xB49860")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000551")]
		[Address(RVA = "0xB49950", Offset = "0xB49950", VA = "0xB49950")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000552")]
		[Address(RVA = "0xB49B30", Offset = "0xB49B30", VA = "0xB49B30")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xB49C14", Offset = "0xB49C14", VA = "0xB49C14")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xB49D10", Offset = "0xB49D10", VA = "0xB49D10")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xB49E00", Offset = "0xB49E00", VA = "0xB49E00")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6000556")]
		[Address(RVA = "0xB49ED8", Offset = "0xB49ED8", VA = "0xB49ED8")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6000557")]
		[Address(RVA = "0xB49FC0", Offset = "0xB49FC0", VA = "0xB49FC0")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xB4A0B8", Offset = "0xB4A0B8", VA = "0xB4A0B8")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6000559")]
		[Address(RVA = "0xB4A1B0", Offset = "0xB4A1B0", VA = "0xB4A1B0")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x600055A")]
		[Address(RVA = "0xB4A2B8", Offset = "0xB4A2B8", VA = "0xB4A2B8")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x600055B")]
		[Address(RVA = "0xB4A3B8", Offset = "0xB4A3B8", VA = "0xB4A3B8")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xB4A4A0", Offset = "0xB4A4A0", VA = "0xB4A4A0")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x600055D")]
		[Address(RVA = "0xB4A5C0", Offset = "0xB4A5C0", VA = "0xB4A5C0")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x600055E")]
		[Address(RVA = "0xB4A6D0", Offset = "0xB4A6D0", VA = "0xB4A6D0")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x600055F")]
		[Address(RVA = "0xB4A7E0", Offset = "0xB4A7E0", VA = "0xB4A7E0")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000560")]
		[Address(RVA = "0xB4A8D0", Offset = "0xB4A8D0", VA = "0xB4A8D0")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000561")]
		[Address(RVA = "0xB4A9C0", Offset = "0xB4A9C0", VA = "0xB4A9C0")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000562")]
		[Address(RVA = "0xB4AAC8", Offset = "0xB4AAC8", VA = "0xB4AAC8")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000563")]
		[Address(RVA = "0xB4ABC8", Offset = "0xB4ABC8", VA = "0xB4ABC8")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000564")]
		[Address(RVA = "0xB4ACB0", Offset = "0xB4ACB0", VA = "0xB4ACB0")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6000565")]
		[Address(RVA = "0xB4AD88", Offset = "0xB4AD88", VA = "0xB4AD88")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000566")]
		[Address(RVA = "0xB4AE68", Offset = "0xB4AE68", VA = "0xB4AE68")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6000567")]
		[Address(RVA = "0xB4AF40", Offset = "0xB4AF40", VA = "0xB4AF40")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6000568")]
		[Address(RVA = "0xB4B05C", Offset = "0xB4B05C", VA = "0xB4B05C")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000569")]
		[Address(RVA = "0xB4B140", Offset = "0xB4B140", VA = "0xB4B140")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x600056A")]
		[Address(RVA = "0xB4B228", Offset = "0xB4B228", VA = "0xB4B228")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x600056B")]
		[Address(RVA = "0xB4B338", Offset = "0xB4B338", VA = "0xB4B338")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x600056C")]
		[Address(RVA = "0xB4B450", Offset = "0xB4B450", VA = "0xB4B450")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x600056D")]
		[Address(RVA = "0xB4B578", Offset = "0xB4B578", VA = "0xB4B578")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x600056E")]
		[Address(RVA = "0xB4B668", Offset = "0xB4B668", VA = "0xB4B668")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xB4B774", Offset = "0xB4B774", VA = "0xB4B774")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000570")]
		[Address(RVA = "0xB4B858", Offset = "0xB4B858", VA = "0xB4B858")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xB4B940", Offset = "0xB4B940", VA = "0xB4B940")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000572")]
		[Address(RVA = "0xB4BA30", Offset = "0xB4BA30", VA = "0xB4BA30")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000573")]
		[Address(RVA = "0xB4BC00", Offset = "0xB4BC00", VA = "0xB4BC00")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6000574")]
		[Address(RVA = "0xB4BCF8", Offset = "0xB4BCF8", VA = "0xB4BCF8")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000575")]
		[Address(RVA = "0xB4BE20", Offset = "0xB4BE20", VA = "0xB4BE20")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6000576")]
		[Address(RVA = "0xB4BF18", Offset = "0xB4BF18", VA = "0xB4BF18")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6000577")]
		[Address(RVA = "0xB4BFF8", Offset = "0xB4BFF8", VA = "0xB4BFF8")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xB4C0E0", Offset = "0xB4C0E0", VA = "0xB4C0E0")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000579")]
		[Address(RVA = "0xB4C1B0", Offset = "0xB4C1B0", VA = "0xB4C1B0")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xB4C298", Offset = "0xB4C298", VA = "0xB4C298")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600057B")]
		[Address(RVA = "0xB4C3A0", Offset = "0xB4C3A0", VA = "0xB4C3A0")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xB4C4A8", Offset = "0xB4C4A8", VA = "0xB4C4A8")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x600057D")]
		[Address(RVA = "0xB4C588", Offset = "0xB4C588", VA = "0xB4C588")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x600057E")]
		[Address(RVA = "0xB4C690", Offset = "0xB4C690", VA = "0xB4C690")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x600057F")]
		[Address(RVA = "0xB4C768", Offset = "0xB4C768", VA = "0xB4C768")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6000580")]
		[Address(RVA = "0xB4C848", Offset = "0xB4C848", VA = "0xB4C848")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000581")]
		[Address(RVA = "0xB4C940", Offset = "0xB4C940", VA = "0xB4C940")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000582")]
		[Address(RVA = "0xB4CA60", Offset = "0xB4CA60", VA = "0xB4CA60")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x6000583")]
		[Address(RVA = "0xB4CB68", Offset = "0xB4CB68", VA = "0xB4CB68")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x6000584")]
		[Address(RVA = "0xB4CC68", Offset = "0xB4CC68", VA = "0xB4CC68")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000585")]
		[Address(RVA = "0xB4CD88", Offset = "0xB4CD88", VA = "0xB4CD88")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000586")]
		[Address(RVA = "0xB4CE78", Offset = "0xB4CE78", VA = "0xB4CE78")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000587")]
		[Address(RVA = "0xB4CF98", Offset = "0xB4CF98", VA = "0xB4CF98")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000588")]
		[Address(RVA = "0xB4D0B8", Offset = "0xB4D0B8", VA = "0xB4D0B8")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x6000589")]
		[Address(RVA = "0xB4D1A8", Offset = "0xB4D1A8", VA = "0xB4D1A8")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600058A")]
		[Address(RVA = "0xB4D290", Offset = "0xB4D290", VA = "0xB4D290")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x600058B")]
		[Address(RVA = "0xB4D368", Offset = "0xB4D368", VA = "0xB4D368")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x600058C")]
		[Address(RVA = "0xB4D468", Offset = "0xB4D468", VA = "0xB4D468")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x600058D")]
		[Address(RVA = "0xB4D540", Offset = "0xB4D540", VA = "0xB4D540")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xB4D620", Offset = "0xB4D620", VA = "0xB4D620")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600058F")]
		[Address(RVA = "0xB4D708", Offset = "0xB4D708", VA = "0xB4D708")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xB4D804", Offset = "0xB4D804", VA = "0xB4D804")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000591")]
		[Address(RVA = "0xB4D8F8", Offset = "0xB4D8F8", VA = "0xB4D8F8")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xB4D9FC", Offset = "0xB4D9FC", VA = "0xB4D9FC")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000593")]
		[Address(RVA = "0xB4DAE0", Offset = "0xB4DAE0", VA = "0xB4DAE0")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x6000594")]
		[Address(RVA = "0xB4DBE0", Offset = "0xB4DBE0", VA = "0xB4DBE0")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xB4DCC4", Offset = "0xB4DCC4", VA = "0xB4DCC4")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000596")]
		[Address(RVA = "0xB4DD48", Offset = "0xB4DD48", VA = "0xB4DD48")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000597")]
		[Address(RVA = "0xB4DE38", Offset = "0xB4DE38", VA = "0xB4DE38")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xB4DF24", Offset = "0xB4DF24", VA = "0xB4DF24")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000599")]
		[Address(RVA = "0xB4DFA8", Offset = "0xB4DFA8", VA = "0xB4DFA8")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600059A")]
		[Address(RVA = "0xB4E090", Offset = "0xB4E090", VA = "0xB4E090")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600059B")]
		[Address(RVA = "0xB4E178", Offset = "0xB4E178", VA = "0xB4E178")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600059C")]
		[Address(RVA = "0xB4E260", Offset = "0xB4E260", VA = "0xB4E260")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xB4E354", Offset = "0xB4E354", VA = "0xB4E354")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600059E")]
		[Address(RVA = "0xB4E3D8", Offset = "0xB4E3D8", VA = "0xB4E3D8")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600059F")]
		[Address(RVA = "0xB4E4C8", Offset = "0xB4E4C8", VA = "0xB4E4C8")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xB4E5B0", Offset = "0xB4E5B0", VA = "0xB4E5B0")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xB4E6A4", Offset = "0xB4E6A4", VA = "0xB4E6A4")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xB4E728", Offset = "0xB4E728", VA = "0xB4E728")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xB4E810", Offset = "0xB4E810", VA = "0xB4E810")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xB4E8F8", Offset = "0xB4E8F8", VA = "0xB4E8F8")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xB4E9E8", Offset = "0xB4E9E8", VA = "0xB4E9E8")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xB4EA70", Offset = "0xB4EA70", VA = "0xB4EA70")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xB4EB50", Offset = "0xB4EB50", VA = "0xB4EB50")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xB4EBF0", Offset = "0xB4EBF0", VA = "0xB4EBF0")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xB4ECD8", Offset = "0xB4ECD8", VA = "0xB4ECD8")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xB4EDC8", Offset = "0xB4EDC8", VA = "0xB4EDC8")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xB4EE50", Offset = "0xB4EE50", VA = "0xB4EE50")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xB4EF38", Offset = "0xB4EF38", VA = "0xB4EF38")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xB4F020", Offset = "0xB4F020", VA = "0xB4F020")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xB4F118", Offset = "0xB4F118", VA = "0xB4F118")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xB4F208", Offset = "0xB4F208", VA = "0xB4F208")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xB4F290", Offset = "0xB4F290", VA = "0xB4F290")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xB4F370", Offset = "0xB4F370", VA = "0xB4F370")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xB4F480", Offset = "0xB4F480", VA = "0xB4F480")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xB4F568", Offset = "0xB4F568", VA = "0xB4F568")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xB4F5F0", Offset = "0xB4F5F0", VA = "0xB4F5F0")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xB4F6D8", Offset = "0xB4F6D8", VA = "0xB4F6D8")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xB4F7C0", Offset = "0xB4F7C0", VA = "0xB4F7C0")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xB4F848", Offset = "0xB4F848", VA = "0xB4F848")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xB4F930", Offset = "0xB4F930", VA = "0xB4F930")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xB4FA0C", Offset = "0xB4FA0C", VA = "0xB4FA0C")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xB4FA90", Offset = "0xB4FA90", VA = "0xB4FA90")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xB4FB70", Offset = "0xB4FB70", VA = "0xB4FB70")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xB4FBF8", Offset = "0xB4FBF8", VA = "0xB4FBF8")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xB4FCDC", Offset = "0xB4FCDC", VA = "0xB4FCDC")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xB4FD60", Offset = "0xB4FD60", VA = "0xB4FD60")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xB4FE40", Offset = "0xB4FE40", VA = "0xB4FE40")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xB4FEC8", Offset = "0xB4FEC8", VA = "0xB4FEC8")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xB4FFA8", Offset = "0xB4FFA8", VA = "0xB4FFA8")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xB50088", Offset = "0xB50088", VA = "0xB50088")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xB50178", Offset = "0xB50178", VA = "0xB50178")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xB50258", Offset = "0xB50258", VA = "0xB50258")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xB50348", Offset = "0xB50348", VA = "0xB50348")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xB50430", Offset = "0xB50430", VA = "0xB50430")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xB504B8", Offset = "0xB504B8", VA = "0xB504B8")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xB505A0", Offset = "0xB505A0", VA = "0xB505A0")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xB50690", Offset = "0xB50690", VA = "0xB50690")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xB50788", Offset = "0xB50788", VA = "0xB50788")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xB50878", Offset = "0xB50878", VA = "0xB50878")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xB50900", Offset = "0xB50900", VA = "0xB50900")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xB509F0", Offset = "0xB509F0", VA = "0xB509F0")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xB50AE8", Offset = "0xB50AE8", VA = "0xB50AE8")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xB50BD0", Offset = "0xB50BD0", VA = "0xB50BD0")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xB50C58", Offset = "0xB50C58", VA = "0xB50C58")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xB50D40", Offset = "0xB50D40", VA = "0xB50D40")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xB50E30", Offset = "0xB50E30", VA = "0xB50E30")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xB50F18", Offset = "0xB50F18", VA = "0xB50F18")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xB51008", Offset = "0xB51008", VA = "0xB51008")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xB510F8", Offset = "0xB510F8", VA = "0xB510F8")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xB511F0", Offset = "0xB511F0", VA = "0xB511F0")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xB512E0", Offset = "0xB512E0", VA = "0xB512E0")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xB513C4", Offset = "0xB513C4", VA = "0xB513C4")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xB51448", Offset = "0xB51448", VA = "0xB51448")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xB51538", Offset = "0xB51538", VA = "0xB51538")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xB51620", Offset = "0xB51620", VA = "0xB51620")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xB51704", Offset = "0xB51704", VA = "0xB51704")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xB51788", Offset = "0xB51788", VA = "0xB51788")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xB51878", Offset = "0xB51878", VA = "0xB51878")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xB51970", Offset = "0xB51970", VA = "0xB51970")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xB51A5C", Offset = "0xB51A5C", VA = "0xB51A5C")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xB51AE0", Offset = "0xB51AE0", VA = "0xB51AE0")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xB51BD8", Offset = "0xB51BD8", VA = "0xB51BD8")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xB51CC8", Offset = "0xB51CC8", VA = "0xB51CC8")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xB51DB4", Offset = "0xB51DB4", VA = "0xB51DB4")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xB51E38", Offset = "0xB51E38", VA = "0xB51E38")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xB51F18", Offset = "0xB51F18", VA = "0xB51F18")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xB52098", Offset = "0xB52098", VA = "0xB52098")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xB51FB0", Offset = "0xB51FB0", VA = "0xB51FB0")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xB52178", Offset = "0xB52178", VA = "0xB52178")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xB52200", Offset = "0xB52200", VA = "0xB52200")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xB522DC", Offset = "0xB522DC", VA = "0xB522DC")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xB52360", Offset = "0xB52360", VA = "0xB52360")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xB52448", Offset = "0xB52448", VA = "0xB52448")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xB52530", Offset = "0xB52530", VA = "0xB52530")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xB52618", Offset = "0xB52618", VA = "0xB52618")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xB526A0", Offset = "0xB526A0", VA = "0xB526A0")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xB52788", Offset = "0xB52788", VA = "0xB52788")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xB52810", Offset = "0xB52810", VA = "0xB52810")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xB528F0", Offset = "0xB528F0", VA = "0xB528F0")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xB529D8", Offset = "0xB529D8", VA = "0xB529D8")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xB52ABC", Offset = "0xB52ABC", VA = "0xB52ABC")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xB52B40", Offset = "0xB52B40", VA = "0xB52B40")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xB52C30", Offset = "0xB52C30", VA = "0xB52C30")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xB52D24", Offset = "0xB52D24", VA = "0xB52D24")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xB52DA8", Offset = "0xB52DA8", VA = "0xB52DA8")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xB52E98", Offset = "0xB52E98", VA = "0xB52E98")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xB52F80", Offset = "0xB52F80", VA = "0xB52F80")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xB53074", Offset = "0xB53074", VA = "0xB53074")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xB530F8", Offset = "0xB530F8", VA = "0xB530F8")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xB531E4", Offset = "0xB531E4", VA = "0xB531E4")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xB53268", Offset = "0xB53268", VA = "0xB53268")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000600")]
		[Address(RVA = "0xB53350", Offset = "0xB53350", VA = "0xB53350")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xB5343C", Offset = "0xB5343C", VA = "0xB5343C")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000602")]
		[Address(RVA = "0xB534C0", Offset = "0xB534C0", VA = "0xB534C0")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xB535B0", Offset = "0xB535B0", VA = "0xB535B0")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6000604")]
		[Address(RVA = "0xB53688", Offset = "0xB53688", VA = "0xB53688")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000605")]
		[Address(RVA = "0xB3E918", Offset = "0xB3E918", VA = "0xB3E918")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000606")]
		[Address(RVA = "0xB53768", Offset = "0xB53768", VA = "0xB53768")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6000607")]
		[Address(RVA = "0xB3E800", Offset = "0xB3E800", VA = "0xB3E800")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xB3E9A4", Offset = "0xB3E9A4", VA = "0xB3E9A4")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000609")]
		[Address(RVA = "0xB53848", Offset = "0xB53848", VA = "0xB53848")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[PreserveSig]
		[Token(Token = "0x600060A")]
		[Address(RVA = "0xB53928", Offset = "0xB53928", VA = "0xB53928")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xB53A30", Offset = "0xB53A30", VA = "0xB53A30")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600060C")]
		[Address(RVA = "0xB53AB8", Offset = "0xB53AB8", VA = "0xB53AB8")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600060D")]
		[Address(RVA = "0xB53B98", Offset = "0xB53B98", VA = "0xB53B98")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xB53CA8", Offset = "0xB53CA8", VA = "0xB53CA8")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600060F")]
		[Address(RVA = "0xB53D30", Offset = "0xB53D30", VA = "0xB53D30")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000610")]
		[Address(RVA = "0xB53E08", Offset = "0xB53E08", VA = "0xB53E08")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000611")]
		[Address(RVA = "0xB53EE8", Offset = "0xB53EE8", VA = "0xB53EE8")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000612")]
		[Address(RVA = "0xB53FC8", Offset = "0xB53FC8", VA = "0xB53FC8")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000613")]
		[Address(RVA = "0xB540A8", Offset = "0xB540A8", VA = "0xB540A8")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xB54194", Offset = "0xB54194", VA = "0xB54194")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000615")]
		[Address(RVA = "0xB54218", Offset = "0xB54218", VA = "0xB54218")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xB54304", Offset = "0xB54304", VA = "0xB54304")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000617")]
		[Address(RVA = "0xB54388", Offset = "0xB54388", VA = "0xB54388")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xB54470", Offset = "0xB54470", VA = "0xB54470")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000619")]
		[Address(RVA = "0xB544F8", Offset = "0xB544F8", VA = "0xB544F8")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600061A")]
		[Address(RVA = "0xB545E0", Offset = "0xB545E0", VA = "0xB545E0")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xB546C8", Offset = "0xB546C8", VA = "0xB546C8")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600061C")]
		[Address(RVA = "0xB54750", Offset = "0xB54750", VA = "0xB54750")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600061D")]
		[Address(RVA = "0xB54838", Offset = "0xB54838", VA = "0xB54838")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600061E")]
		[Address(RVA = "0xB54930", Offset = "0xB54930", VA = "0xB54930")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xB54A18", Offset = "0xB54A18", VA = "0xB54A18")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000620")]
		[Address(RVA = "0xB54AA0", Offset = "0xB54AA0", VA = "0xB54AA0")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xB54B84", Offset = "0xB54B84", VA = "0xB54B84")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000622")]
		[Address(RVA = "0xB54C08", Offset = "0xB54C08", VA = "0xB54C08")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xB54CEC", Offset = "0xB54CEC", VA = "0xB54CEC")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000624")]
		[Address(RVA = "0xB54D70", Offset = "0xB54D70", VA = "0xB54D70")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000625")]
		[Address(RVA = "0xB54E50", Offset = "0xB54E50", VA = "0xB54E50")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000626")]
		[Address(RVA = "0xB54F40", Offset = "0xB54F40", VA = "0xB54F40")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xB55030", Offset = "0xB55030", VA = "0xB55030")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000628")]
		[Address(RVA = "0xB550B8", Offset = "0xB550B8", VA = "0xB550B8")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xB551A0", Offset = "0xB551A0", VA = "0xB551A0")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600062A")]
		[Address(RVA = "0xB55228", Offset = "0xB55228", VA = "0xB55228")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600062B")]
		[Address(RVA = "0xB55310", Offset = "0xB55310", VA = "0xB55310")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600062C")]
		[Address(RVA = "0xB553F0", Offset = "0xB553F0", VA = "0xB553F0")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600062D")]
		[Address(RVA = "0xB554D0", Offset = "0xB554D0", VA = "0xB554D0")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600062E")]
		[Address(RVA = "0xB555B0", Offset = "0xB555B0", VA = "0xB555B0")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600062F")]
		[Address(RVA = "0xB556A8", Offset = "0xB556A8", VA = "0xB556A8")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000630")]
		[Address(RVA = "0xB557A8", Offset = "0xB557A8", VA = "0xB557A8")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000631")]
		[Address(RVA = "0xB55898", Offset = "0xB55898", VA = "0xB55898")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000632")]
		[Address(RVA = "0xB55988", Offset = "0xB55988", VA = "0xB55988")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000633")]
		[Address(RVA = "0xB55A80", Offset = "0xB55A80", VA = "0xB55A80")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xB55B74", Offset = "0xB55B74", VA = "0xB55B74")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000635")]
		[Address(RVA = "0xB55CF8", Offset = "0xB55CF8", VA = "0xB55CF8")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000636")]
		[Address(RVA = "0xB55C10", Offset = "0xB55C10", VA = "0xB55C10")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000637")]
		[Address(RVA = "0xB55DE0", Offset = "0xB55DE0", VA = "0xB55DE0")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000638")]
		[Address(RVA = "0xB55EC0", Offset = "0xB55EC0", VA = "0xB55EC0")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xB55FA0", Offset = "0xB55FA0", VA = "0xB55FA0")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600063A")]
		[Address(RVA = "0xB56040", Offset = "0xB56040", VA = "0xB56040")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600063B")]
		[Address(RVA = "0xB56128", Offset = "0xB56128", VA = "0xB56128")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600063C")]
		[Address(RVA = "0xB56208", Offset = "0xB56208", VA = "0xB56208")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xB562F8", Offset = "0xB562F8", VA = "0xB562F8")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600063E")]
		[Address(RVA = "0xB56380", Offset = "0xB56380", VA = "0xB56380")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xB56468", Offset = "0xB56468", VA = "0xB56468")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000640")]
		[Address(RVA = "0xB564F0", Offset = "0xB564F0", VA = "0xB564F0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000641")]
		[Address(RVA = "0xB565E0", Offset = "0xB565E0", VA = "0xB565E0")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000642")]
		[Address(RVA = "0xB566C8", Offset = "0xB566C8", VA = "0xB566C8")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000643")]
		[Address(RVA = "0xB567B0", Offset = "0xB567B0", VA = "0xB567B0")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000644")]
		[Address(RVA = "0xB568A0", Offset = "0xB568A0", VA = "0xB568A0")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000645")]
		[Address(RVA = "0xB56998", Offset = "0xB56998", VA = "0xB56998")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xB56A8C", Offset = "0xB56A8C", VA = "0xB56A8C")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000647")]
		[Address(RVA = "0xB56B10", Offset = "0xB56B10", VA = "0xB56B10")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000648")]
		[Address(RVA = "0xB56BF8", Offset = "0xB56BF8", VA = "0xB56BF8")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xB56CE0", Offset = "0xB56CE0", VA = "0xB56CE0")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600064A")]
		[Address(RVA = "0xB56D68", Offset = "0xB56D68", VA = "0xB56D68")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600064B")]
		[Address(RVA = "0xB56E48", Offset = "0xB56E48", VA = "0xB56E48")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600064C")]
		[Address(RVA = "0xB56F38", Offset = "0xB56F38", VA = "0xB56F38")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600064D")]
		[Address(RVA = "0xB57018", Offset = "0xB57018", VA = "0xB57018")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600064E")]
		[Address(RVA = "0xB57118", Offset = "0xB57118", VA = "0xB57118")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600064F")]
		[Address(RVA = "0xB57208", Offset = "0xB57208", VA = "0xB57208")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000650")]
		[Address(RVA = "0xB57300", Offset = "0xB57300", VA = "0xB57300")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000651")]
		[Address(RVA = "0xB573F0", Offset = "0xB573F0", VA = "0xB573F0")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000652")]
		[Address(RVA = "0xB574E8", Offset = "0xB574E8", VA = "0xB574E8")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000653")]
		[Address(RVA = "0xB575D8", Offset = "0xB575D8", VA = "0xB575D8")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000654")]
		[Address(RVA = "0xB576C8", Offset = "0xB576C8", VA = "0xB576C8")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000655")]
		[Address(RVA = "0xB577B8", Offset = "0xB577B8", VA = "0xB577B8")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xB578A8", Offset = "0xB578A8", VA = "0xB578A8")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000657")]
		[Address(RVA = "0xB57930", Offset = "0xB57930", VA = "0xB57930")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000658")]
		[Address(RVA = "0xB57A20", Offset = "0xB57A20", VA = "0xB57A20")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000659")]
		[Address(RVA = "0xB57B10", Offset = "0xB57B10", VA = "0xB57B10")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600065A")]
		[Address(RVA = "0xB57C08", Offset = "0xB57C08", VA = "0xB57C08")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600065B")]
		[Address(RVA = "0xB57D08", Offset = "0xB57D08", VA = "0xB57D08")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600065C")]
		[Address(RVA = "0xB57E00", Offset = "0xB57E00", VA = "0xB57E00")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600065D")]
		[Address(RVA = "0xB57F00", Offset = "0xB57F00", VA = "0xB57F00")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xB57FFC", Offset = "0xB57FFC", VA = "0xB57FFC")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600065F")]
		[Address(RVA = "0xB58080", Offset = "0xB58080", VA = "0xB58080")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000660")]
		[Address(RVA = "0xB58178", Offset = "0xB58178", VA = "0xB58178")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000661")]
		[Address(RVA = "0xB58278", Offset = "0xB58278", VA = "0xB58278")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000662")]
		[Address(RVA = "0xB58370", Offset = "0xB58370", VA = "0xB58370")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000663")]
		[Address(RVA = "0xB58460", Offset = "0xB58460", VA = "0xB58460")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xB58548", Offset = "0xB58548", VA = "0xB58548")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000665")]
		[Address(RVA = "0xB585D0", Offset = "0xB585D0", VA = "0xB585D0")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000666")]
		[Address(RVA = "0xB586B8", Offset = "0xB586B8", VA = "0xB586B8")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000667")]
		[Address(RVA = "0xB587A0", Offset = "0xB587A0", VA = "0xB587A0")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xB58894", Offset = "0xB58894", VA = "0xB58894")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000669")]
		[Address(RVA = "0xB58918", Offset = "0xB58918", VA = "0xB58918")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600066A")]
		[Address(RVA = "0xB58A08", Offset = "0xB58A08", VA = "0xB58A08")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600066B")]
		[Address(RVA = "0xB58AF0", Offset = "0xB58AF0", VA = "0xB58AF0")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600066C")]
		[Address(RVA = "0xB58BE8", Offset = "0xB58BE8", VA = "0xB58BE8")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600066D")]
		[Address(RVA = "0xB58CD8", Offset = "0xB58CD8", VA = "0xB58CD8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600066E")]
		[Address(RVA = "0xB58DC8", Offset = "0xB58DC8", VA = "0xB58DC8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600066F")]
		[Address(RVA = "0xB58EC0", Offset = "0xB58EC0", VA = "0xB58EC0")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xB58FB0", Offset = "0xB58FB0", VA = "0xB58FB0")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000671")]
		[Address(RVA = "0xB59038", Offset = "0xB59038", VA = "0xB59038")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000672")]
		[Address(RVA = "0xB59120", Offset = "0xB59120", VA = "0xB59120")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xB59218", Offset = "0xB59218", VA = "0xB59218")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000674")]
		[Address(RVA = "0xB592A0", Offset = "0xB592A0", VA = "0xB592A0")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000675")]
		[Address(RVA = "0xB59390", Offset = "0xB59390", VA = "0xB59390")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000676")]
		[Address(RVA = "0xB59490", Offset = "0xB59490", VA = "0xB59490")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000677")]
		[Address(RVA = "0xB59580", Offset = "0xB59580", VA = "0xB59580")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6000678")]
		[Address(RVA = "0xB59678", Offset = "0xB59678", VA = "0xB59678")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000679")]
		[Address(RVA = "0xB59770", Offset = "0xB59770", VA = "0xB59770")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600067A")]
		[Address(RVA = "0xB59860", Offset = "0xB59860", VA = "0xB59860")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600067B")]
		[Address(RVA = "0xB59948", Offset = "0xB59948", VA = "0xB59948")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600067C")]
		[Address(RVA = "0xB59A40", Offset = "0xB59A40", VA = "0xB59A40")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600067D")]
		[Address(RVA = "0xB59B30", Offset = "0xB59B30", VA = "0xB59B30")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600067E")]
		[Address(RVA = "0xB59C20", Offset = "0xB59C20", VA = "0xB59C20")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x600067F")]
		[Address(RVA = "0xB59D04", Offset = "0xB59D04", VA = "0xB59D04")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000680")]
		[Address(RVA = "0xB59D88", Offset = "0xB59D88", VA = "0xB59D88")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000681")]
		[Address(RVA = "0xB59E70", Offset = "0xB59E70", VA = "0xB59E70")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000682")]
		[Address(RVA = "0xB59F50", Offset = "0xB59F50", VA = "0xB59F50")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000683")]
		[Address(RVA = "0xB5A030", Offset = "0xB5A030", VA = "0xB5A030")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000684")]
		[Address(RVA = "0xB5A118", Offset = "0xB5A118", VA = "0xB5A118")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000685")]
		[Address(RVA = "0xB5A208", Offset = "0xB5A208", VA = "0xB5A208")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000686")]
		[Address(RVA = "0xB5A2F0", Offset = "0xB5A2F0", VA = "0xB5A2F0")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000687")]
		[Address(RVA = "0xB5A3D8", Offset = "0xB5A3D8", VA = "0xB5A3D8")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000688")]
		[Address(RVA = "0xB5A4C0", Offset = "0xB5A4C0", VA = "0xB5A4C0")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000689")]
		[Address(RVA = "0xB5A5A8", Offset = "0xB5A5A8", VA = "0xB5A5A8")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600068A")]
		[Address(RVA = "0xB5A690", Offset = "0xB5A690", VA = "0xB5A690")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600068B")]
		[Address(RVA = "0xB5A778", Offset = "0xB5A778", VA = "0xB5A778")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600068C")]
		[Address(RVA = "0xB5A868", Offset = "0xB5A868", VA = "0xB5A868")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600068D")]
		[Address(RVA = "0xB5A950", Offset = "0xB5A950", VA = "0xB5A950")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600068E")]
		[Address(RVA = "0xB5AA38", Offset = "0xB5AA38", VA = "0xB5AA38")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600068F")]
		[Address(RVA = "0xB5AB20", Offset = "0xB5AB20", VA = "0xB5AB20")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000690")]
		[Address(RVA = "0xB5AC00", Offset = "0xB5AC00", VA = "0xB5AC00")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000691")]
		[Address(RVA = "0xB5ACE8", Offset = "0xB5ACE8", VA = "0xB5ACE8")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000692")]
		[Address(RVA = "0xB5ADD0", Offset = "0xB5ADD0", VA = "0xB5ADD0")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000693")]
		[Address(RVA = "0xB5AEC0", Offset = "0xB5AEC0", VA = "0xB5AEC0")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000694")]
		[Address(RVA = "0xB5AFA8", Offset = "0xB5AFA8", VA = "0xB5AFA8")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000695")]
		[Address(RVA = "0xB5B090", Offset = "0xB5B090", VA = "0xB5B090")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000696")]
		[Address(RVA = "0xB5B178", Offset = "0xB5B178", VA = "0xB5B178")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000697")]
		[Address(RVA = "0xB5B260", Offset = "0xB5B260", VA = "0xB5B260")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000698")]
		[Address(RVA = "0xB5B350", Offset = "0xB5B350", VA = "0xB5B350")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000699")]
		[Address(RVA = "0xB5B440", Offset = "0xB5B440", VA = "0xB5B440")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600069A")]
		[Address(RVA = "0xB5B520", Offset = "0xB5B520", VA = "0xB5B520")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600069B")]
		[Address(RVA = "0xB5B608", Offset = "0xB5B608", VA = "0xB5B608")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600069C")]
		[Address(RVA = "0xB5B6F8", Offset = "0xB5B6F8", VA = "0xB5B6F8")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600069D")]
		[Address(RVA = "0xB5B7E8", Offset = "0xB5B7E8", VA = "0xB5B7E8")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600069E")]
		[Address(RVA = "0xB5B8F8", Offset = "0xB5B8F8", VA = "0xB5B8F8")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600069F")]
		[Address(RVA = "0xB5B9E0", Offset = "0xB5B9E0", VA = "0xB5B9E0")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xB5BAD0", Offset = "0xB5BAD0", VA = "0xB5BAD0")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xB5BBB8", Offset = "0xB5BBB8", VA = "0xB5BBB8")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xB5BCA8", Offset = "0xB5BCA8", VA = "0xB5BCA8")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xB5BD90", Offset = "0xB5BD90", VA = "0xB5BD90")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xB5BE78", Offset = "0xB5BE78", VA = "0xB5BE78")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xB5BF60", Offset = "0xB5BF60", VA = "0xB5BF60")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xB5C048", Offset = "0xB5C048", VA = "0xB5C048")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xB5C130", Offset = "0xB5C130", VA = "0xB5C130")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xB5C220", Offset = "0xB5C220", VA = "0xB5C220")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xB5C308", Offset = "0xB5C308", VA = "0xB5C308")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xB5C3F0", Offset = "0xB5C3F0", VA = "0xB5C3F0")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xB5C4D8", Offset = "0xB5C4D8", VA = "0xB5C4D8")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xB5C5C0", Offset = "0xB5C5C0", VA = "0xB5C5C0")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xB5C6A8", Offset = "0xB5C6A8", VA = "0xB5C6A8")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xB5C790", Offset = "0xB5C790", VA = "0xB5C790")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xB5C880", Offset = "0xB5C880", VA = "0xB5C880")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xB5C968", Offset = "0xB5C968", VA = "0xB5C968")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xB5CA48", Offset = "0xB5CA48", VA = "0xB5CA48")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xB5CB28", Offset = "0xB5CB28", VA = "0xB5CB28")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xB5CC08", Offset = "0xB5CC08", VA = "0xB5CC08")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xB5CCE8", Offset = "0xB5CCE8", VA = "0xB5CCE8")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xB5CDF8", Offset = "0xB5CDF8", VA = "0xB5CDF8")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xB5CF10", Offset = "0xB5CF10", VA = "0xB5CF10")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xB5CFF8", Offset = "0xB5CFF8", VA = "0xB5CFF8")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xB5D110", Offset = "0xB5D110", VA = "0xB5D110")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xB5D228", Offset = "0xB5D228", VA = "0xB5D228")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xB5D310", Offset = "0xB5D310", VA = "0xB5D310")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xB5D3F0", Offset = "0xB5D3F0", VA = "0xB5D3F0")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xB5D508", Offset = "0xB5D508", VA = "0xB5D508")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xB5D5E8", Offset = "0xB5D5E8", VA = "0xB5D5E8")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xB5D700", Offset = "0xB5D700", VA = "0xB5D700")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xB5D810", Offset = "0xB5D810", VA = "0xB5D810")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xB5D928", Offset = "0xB5D928", VA = "0xB5D928")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xB5DA10", Offset = "0xB5DA10", VA = "0xB5DA10")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xB5DB00", Offset = "0xB5DB00", VA = "0xB5DB00")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xB5DBE0", Offset = "0xB5DBE0", VA = "0xB5DBE0")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xB5DCC0", Offset = "0xB5DCC0", VA = "0xB5DCC0")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xB5DD48", Offset = "0xB5DD48", VA = "0xB5DD48")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xB5DE20", Offset = "0xB5DE20", VA = "0xB5DE20")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xB5DF00", Offset = "0xB5DF00", VA = "0xB5DF00")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xB5DFE0", Offset = "0xB5DFE0", VA = "0xB5DFE0")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xB5E0F0", Offset = "0xB5E0F0", VA = "0xB5E0F0")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xB5E200", Offset = "0xB5E200", VA = "0xB5E200")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xB5E2E0", Offset = "0xB5E2E0", VA = "0xB5E2E0")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xB5E3F8", Offset = "0xB5E3F8", VA = "0xB5E3F8")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xB5E510", Offset = "0xB5E510", VA = "0xB5E510")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xB5E5F0", Offset = "0xB5E5F0", VA = "0xB5E5F0")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xB5E708", Offset = "0xB5E708", VA = "0xB5E708")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xB5E7F0", Offset = "0xB5E7F0", VA = "0xB5E7F0")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xB5E8D8", Offset = "0xB5E8D8", VA = "0xB5E8D8")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xB5EA00", Offset = "0xB5EA00", VA = "0xB5EA00")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xB5EAF8", Offset = "0xB5EAF8", VA = "0xB5EAF8")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xB5EC28", Offset = "0xB5EC28", VA = "0xB5EC28")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xB5ED20", Offset = "0xB5ED20", VA = "0xB5ED20")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xB5EE30", Offset = "0xB5EE30", VA = "0xB5EE30")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xB5EF40", Offset = "0xB5EF40", VA = "0xB5EF40")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xB5F058", Offset = "0xB5F058", VA = "0xB5F058")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xB5F138", Offset = "0xB5F138", VA = "0xB5F138")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xB5F248", Offset = "0xB5F248", VA = "0xB5F248")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xB5F350", Offset = "0xB5F350", VA = "0xB5F350")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xB5F460", Offset = "0xB5F460", VA = "0xB5F460")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xB5F578", Offset = "0xB5F578", VA = "0xB5F578")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xB5F690", Offset = "0xB5F690", VA = "0xB5F690")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xB5F7A0", Offset = "0xB5F7A0", VA = "0xB5F7A0")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xB5F8A8", Offset = "0xB5F8A8", VA = "0xB5F8A8")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xB5F9C0", Offset = "0xB5F9C0", VA = "0xB5F9C0")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xB5FAD0", Offset = "0xB5FAD0", VA = "0xB5FAD0")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xB5FBD8", Offset = "0xB5FBD8", VA = "0xB5FBD8")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xB5FCE8", Offset = "0xB5FCE8", VA = "0xB5FCE8")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xB5FDF0", Offset = "0xB5FDF0", VA = "0xB5FDF0")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xB5FED8", Offset = "0xB5FED8", VA = "0xB5FED8")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xB5FFC0", Offset = "0xB5FFC0", VA = "0xB5FFC0")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xB600A8", Offset = "0xB600A8", VA = "0xB600A8")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xB60130", Offset = "0xB60130", VA = "0xB60130")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xB60220", Offset = "0xB60220", VA = "0xB60220")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xB602A8", Offset = "0xB602A8", VA = "0xB602A8")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xB60398", Offset = "0xB60398", VA = "0xB60398")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xB60480", Offset = "0xB60480", VA = "0xB60480")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xB60508", Offset = "0xB60508", VA = "0xB60508")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xB605F0", Offset = "0xB605F0", VA = "0xB605F0")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xB60678", Offset = "0xB60678", VA = "0xB60678")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xB60780", Offset = "0xB60780", VA = "0xB60780")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xB608A0", Offset = "0xB608A0", VA = "0xB608A0")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xB609B0", Offset = "0xB609B0", VA = "0xB609B0")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xB60AC0", Offset = "0xB60AC0", VA = "0xB60AC0")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xB60BA0", Offset = "0xB60BA0", VA = "0xB60BA0")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xB60CC0", Offset = "0xB60CC0", VA = "0xB60CC0")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xB60DA8", Offset = "0xB60DA8", VA = "0xB60DA8")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xB60E88", Offset = "0xB60E88", VA = "0xB60E88")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xB60F10", Offset = "0xB60F10", VA = "0xB60F10")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xB60FE8", Offset = "0xB60FE8", VA = "0xB60FE8")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xB61070", Offset = "0xB61070", VA = "0xB61070")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xB61148", Offset = "0xB61148", VA = "0xB61148")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xB611D0", Offset = "0xB611D0", VA = "0xB611D0")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xB612AC", Offset = "0xB612AC", VA = "0xB612AC")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xB61330", Offset = "0xB61330", VA = "0xB61330")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xB61410", Offset = "0xB61410", VA = "0xB61410")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000701")]
		[Address(RVA = "0xB61498", Offset = "0xB61498", VA = "0xB61498")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xB6156C", Offset = "0xB6156C", VA = "0xB6156C")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000703")]
		[Address(RVA = "0xB615F0", Offset = "0xB615F0", VA = "0xB615F0")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000704")]
		[Address(RVA = "0xB61700", Offset = "0xB61700", VA = "0xB61700")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xB617E4", Offset = "0xB617E4", VA = "0xB617E4")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000706")]
		[Address(RVA = "0xB61868", Offset = "0xB61868", VA = "0xB61868")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000707")]
		[Address(RVA = "0xB61948", Offset = "0xB61948", VA = "0xB61948")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000708")]
		[Address(RVA = "0xB61A60", Offset = "0xB61A60", VA = "0xB61A60")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xB61B48", Offset = "0xB61B48", VA = "0xB61B48")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600070A")]
		[Address(RVA = "0xB61BE8", Offset = "0xB61BE8", VA = "0xB61BE8")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xB61CC8", Offset = "0xB61CC8", VA = "0xB61CC8")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600070C")]
		[Address(RVA = "0xB61D68", Offset = "0xB61D68", VA = "0xB61D68")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600070D")]
		[Address(RVA = "0xB61E48", Offset = "0xB61E48", VA = "0xB61E48")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xB61F24", Offset = "0xB61F24", VA = "0xB61F24")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600070F")]
		[Address(RVA = "0xB61FA8", Offset = "0xB61FA8", VA = "0xB61FA8")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000710")]
		[Address(RVA = "0xB62080", Offset = "0xB62080", VA = "0xB62080")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xB62168", Offset = "0xB62168", VA = "0xB62168")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000712")]
		[Address(RVA = "0xB621F0", Offset = "0xB621F0", VA = "0xB621F0")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000713")]
		[Address(RVA = "0xB622D0", Offset = "0xB622D0", VA = "0xB622D0")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000714")]
		[Address(RVA = "0xB623E8", Offset = "0xB623E8", VA = "0xB623E8")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000715")]
		[Address(RVA = "0xB624D0", Offset = "0xB624D0", VA = "0xB624D0")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000716")]
		[Address(RVA = "0xB625E8", Offset = "0xB625E8", VA = "0xB625E8")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xB626F8", Offset = "0xB626F8", VA = "0xB626F8")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000718")]
		[Address(RVA = "0xB62780", Offset = "0xB62780", VA = "0xB62780")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000719")]
		[Address(RVA = "0xB62858", Offset = "0xB62858", VA = "0xB62858")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071A")]
		[Address(RVA = "0xB62960", Offset = "0xB62960", VA = "0xB62960")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071B")]
		[Address(RVA = "0xB62A78", Offset = "0xB62A78", VA = "0xB62A78")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071C")]
		[Address(RVA = "0xB62B60", Offset = "0xB62B60", VA = "0xB62B60")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071D")]
		[Address(RVA = "0xB62C78", Offset = "0xB62C78", VA = "0xB62C78")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071E")]
		[Address(RVA = "0xB62D90", Offset = "0xB62D90", VA = "0xB62D90")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600071F")]
		[Address(RVA = "0xB62EA8", Offset = "0xB62EA8", VA = "0xB62EA8")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xB62FB8", Offset = "0xB62FB8", VA = "0xB62FB8")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000721")]
		[Address(RVA = "0xB63040", Offset = "0xB63040", VA = "0xB63040")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000722")]
		[Address(RVA = "0xB63150", Offset = "0xB63150", VA = "0xB63150")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000723")]
		[Address(RVA = "0xB63258", Offset = "0xB63258", VA = "0xB63258")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000724")]
		[Address(RVA = "0xB63360", Offset = "0xB63360", VA = "0xB63360")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000725")]
		[Address(RVA = "0xB63468", Offset = "0xB63468", VA = "0xB63468")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000726")]
		[Address(RVA = "0xB63578", Offset = "0xB63578", VA = "0xB63578")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xB63698", Offset = "0xB63698", VA = "0xB63698")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000728")]
		[Address(RVA = "0xB63720", Offset = "0xB63720", VA = "0xB63720")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000729")]
		[Address(RVA = "0xB63800", Offset = "0xB63800", VA = "0xB63800")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600072A")]
		[Address(RVA = "0xB63910", Offset = "0xB63910", VA = "0xB63910")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600072B")]
		[Address(RVA = "0xB63A30", Offset = "0xB63A30", VA = "0xB63A30")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600072C")]
		[Address(RVA = "0xB63B18", Offset = "0xB63B18", VA = "0xB63B18")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600072D")]
		[Address(RVA = "0xB63C00", Offset = "0xB63C00", VA = "0xB63C00")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xB63CE8", Offset = "0xB63CE8", VA = "0xB63CE8")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600072F")]
		[Address(RVA = "0xB63D88", Offset = "0xB63D88", VA = "0xB63D88")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000730")]
		[Address(RVA = "0xB63E70", Offset = "0xB63E70", VA = "0xB63E70")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xB63F64", Offset = "0xB63F64", VA = "0xB63F64")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000732")]
		[Address(RVA = "0xB63FE8", Offset = "0xB63FE8", VA = "0xB63FE8")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000733")]
		[Address(RVA = "0xB640D8", Offset = "0xB640D8", VA = "0xB640D8")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000734")]
		[Address(RVA = "0xB641C0", Offset = "0xB641C0", VA = "0xB641C0")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000735")]
		[Address(RVA = "0xB642B8", Offset = "0xB642B8", VA = "0xB642B8")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000736")]
		[Address(RVA = "0xB64398", Offset = "0xB64398", VA = "0xB64398")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000737")]
		[Address(RVA = "0xB644B0", Offset = "0xB644B0", VA = "0xB644B0")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000738")]
		[Address(RVA = "0xB64598", Offset = "0xB64598", VA = "0xB64598")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000739")]
		[Address(RVA = "0xB64678", Offset = "0xB64678", VA = "0xB64678")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073A")]
		[Address(RVA = "0xB64758", Offset = "0xB64758", VA = "0xB64758")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073B")]
		[Address(RVA = "0xB64848", Offset = "0xB64848", VA = "0xB64848")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073C")]
		[Address(RVA = "0xB64938", Offset = "0xB64938", VA = "0xB64938")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600073D")]
		[Address(RVA = "0xB64A20", Offset = "0xB64A20", VA = "0xB64A20")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xB64B00", Offset = "0xB64B00", VA = "0xB64B00")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600073F")]
		[Address(RVA = "0xB64B88", Offset = "0xB64B88", VA = "0xB64B88")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000740")]
		[Address(RVA = "0xB64C68", Offset = "0xB64C68", VA = "0xB64C68")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000741")]
		[Address(RVA = "0xB64D48", Offset = "0xB64D48", VA = "0xB64D48")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xB64E2C", Offset = "0xB64E2C", VA = "0xB64E2C")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000743")]
		[Address(RVA = "0xB64EB0", Offset = "0xB64EB0", VA = "0xB64EB0")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000744")]
		[Address(RVA = "0xB64F98", Offset = "0xB64F98", VA = "0xB64F98")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xB65080", Offset = "0xB65080", VA = "0xB65080")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000746")]
		[Address(RVA = "0xB65108", Offset = "0xB65108", VA = "0xB65108")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000747")]
		[Address(RVA = "0xB651E8", Offset = "0xB651E8", VA = "0xB651E8")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000748")]
		[Address(RVA = "0xB65300", Offset = "0xB65300", VA = "0xB65300")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xB65414", Offset = "0xB65414", VA = "0xB65414")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600074A")]
		[Address(RVA = "0xB65498", Offset = "0xB65498", VA = "0xB65498")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600074B")]
		[Address(RVA = "0xB65580", Offset = "0xB65580", VA = "0xB65580")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600074C")]
		[Address(RVA = "0xB65660", Offset = "0xB65660", VA = "0xB65660")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600074D")]
		[Address(RVA = "0xB65740", Offset = "0xB65740", VA = "0xB65740")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600074E")]
		[Address(RVA = "0xB65830", Offset = "0xB65830", VA = "0xB65830")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600074F")]
		[Address(RVA = "0xB65918", Offset = "0xB65918", VA = "0xB65918")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xB65A1C", Offset = "0xB65A1C", VA = "0xB65A1C")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000751")]
		[Address(RVA = "0xB65AA0", Offset = "0xB65AA0", VA = "0xB65AA0")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xB65B78", Offset = "0xB65B78", VA = "0xB65B78")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000753")]
		[Address(RVA = "0xB65C00", Offset = "0xB65C00", VA = "0xB65C00")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xB65CD8", Offset = "0xB65CD8", VA = "0xB65CD8")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000755")]
		[Address(RVA = "0xB65D60", Offset = "0xB65D60", VA = "0xB65D60")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xB65E38", Offset = "0xB65E38", VA = "0xB65E38")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000757")]
		[Address(RVA = "0xB65EC0", Offset = "0xB65EC0", VA = "0xB65EC0")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000758")]
		[Address(RVA = "0xB65F98", Offset = "0xB65F98", VA = "0xB65F98")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xB66074", Offset = "0xB66074", VA = "0xB66074")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600075A")]
		[Address(RVA = "0xB660F8", Offset = "0xB660F8", VA = "0xB660F8")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075B")]
		[Address(RVA = "0xB661D8", Offset = "0xB661D8", VA = "0xB661D8")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075C")]
		[Address(RVA = "0xB662F0", Offset = "0xB662F0", VA = "0xB662F0")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600075D")]
		[Address(RVA = "0xB66408", Offset = "0xB66408", VA = "0xB66408")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xB664F0", Offset = "0xB664F0", VA = "0xB664F0")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600075F")]
		[Address(RVA = "0xB66578", Offset = "0xB66578", VA = "0xB66578")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000760")]
		[Address(RVA = "0xB66658", Offset = "0xB66658", VA = "0xB66658")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000761")]
		[Address(RVA = "0xB66738", Offset = "0xB66738", VA = "0xB66738")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000762")]
		[Address(RVA = "0xB66828", Offset = "0xB66828", VA = "0xB66828")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xB66948", Offset = "0xB66948", VA = "0xB66948")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000764")]
		[Address(RVA = "0xB669D0", Offset = "0xB669D0", VA = "0xB669D0")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000765")]
		[Address(RVA = "0xB66AB0", Offset = "0xB66AB0", VA = "0xB66AB0")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000766")]
		[Address(RVA = "0xB66BC0", Offset = "0xB66BC0", VA = "0xB66BC0")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xB66CE0", Offset = "0xB66CE0", VA = "0xB66CE0")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000768")]
		[Address(RVA = "0xB66D68", Offset = "0xB66D68", VA = "0xB66D68")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000769")]
		[Address(RVA = "0xB66E40", Offset = "0xB66E40", VA = "0xB66E40")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600076A")]
		[Address(RVA = "0xB66F28", Offset = "0xB66F28", VA = "0xB66F28")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600076B")]
		[Address(RVA = "0xB67040", Offset = "0xB67040", VA = "0xB67040")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x600076C")]
		[Address(RVA = "0xB67128", Offset = "0xB67128", VA = "0xB67128")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x600076D")]
		[Address(RVA = "0xB67220", Offset = "0xB67220", VA = "0xB67220")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x600076E")]
		[Address(RVA = "0xB67350", Offset = "0xB67350", VA = "0xB67350")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x600076F")]
		[Address(RVA = "0xB67450", Offset = "0xB67450", VA = "0xB67450")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000770")]
		[Address(RVA = "0xB396F8", Offset = "0xB396F8", VA = "0xB396F8")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000771")]
		[Address(RVA = "0xB39C08", Offset = "0xB39C08", VA = "0xB39C08")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000772")]
		[Address(RVA = "0xB39860", Offset = "0xB39860", VA = "0xB39860")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000773")]
		[Address(RVA = "0xB399E8", Offset = "0xB399E8", VA = "0xB399E8")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6000774")]
		[Address(RVA = "0xB3BC30", Offset = "0xB3BC30", VA = "0xB3BC30")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000775")]
		[Address(RVA = "0xB3BF38", Offset = "0xB3BF38", VA = "0xB3BF38")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xB3BD94", Offset = "0xB3BD94", VA = "0xB3BD94")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000777")]
		[Address(RVA = "0xB67538", Offset = "0xB67538", VA = "0xB67538")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000778")]
		[Address(RVA = "0xB67630", Offset = "0xB67630", VA = "0xB67630")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000779")]
		[Address(RVA = "0xB67708", Offset = "0xB67708", VA = "0xB67708")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xB677E8", Offset = "0xB677E8", VA = "0xB677E8")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600077B")]
		[Address(RVA = "0xB678D8", Offset = "0xB678D8", VA = "0xB678D8")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600077C")]
		[Address(RVA = "0xB679E0", Offset = "0xB679E0", VA = "0xB679E0")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600077D")]
		[Address(RVA = "0xB67AD0", Offset = "0xB67AD0", VA = "0xB67AD0")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x600077E")]
		[Address(RVA = "0xB67BC8", Offset = "0xB67BC8", VA = "0xB67BC8")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x600077F")]
		[Address(RVA = "0xB67CC0", Offset = "0xB67CC0", VA = "0xB67CC0")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000780")]
		[Address(RVA = "0xB67DC0", Offset = "0xB67DC0", VA = "0xB67DC0")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xB67EB4", Offset = "0xB67EB4", VA = "0xB67EB4")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000782")]
		[Address(RVA = "0xB67F88", Offset = "0xB67F88", VA = "0xB67F88")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xB6808C", Offset = "0xB6808C", VA = "0xB6808C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000784")]
		[Address(RVA = "0xB68170", Offset = "0xB68170", VA = "0xB68170")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xB6827C", Offset = "0xB6827C", VA = "0xB6827C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000786")]
		[Address(RVA = "0xB68368", Offset = "0xB68368", VA = "0xB68368")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000787")]
		[Address(RVA = "0xB68470", Offset = "0xB68470", VA = "0xB68470")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000788")]
		[Address(RVA = "0xB68560", Offset = "0xB68560", VA = "0xB68560")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xB68654", Offset = "0xB68654", VA = "0xB68654")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600078A")]
		[Address(RVA = "0xB68720", Offset = "0xB68720", VA = "0xB68720")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600078B")]
		[Address(RVA = "0xB68818", Offset = "0xB68818", VA = "0xB68818")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600078C")]
		[Address(RVA = "0xB68920", Offset = "0xB68920", VA = "0xB68920")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xB68A34", Offset = "0xB68A34", VA = "0xB68A34")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600078E")]
		[Address(RVA = "0xB68B20", Offset = "0xB68B20", VA = "0xB68B20")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600078F")]
		[Address(RVA = "0xB68C18", Offset = "0xB68C18", VA = "0xB68C18")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000790")]
		[Address(RVA = "0xB68CF8", Offset = "0xB68CF8", VA = "0xB68CF8")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000791")]
		[Address(RVA = "0xB68DE8", Offset = "0xB68DE8", VA = "0xB68DE8")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000792")]
		[Address(RVA = "0xB68ED8", Offset = "0xB68ED8", VA = "0xB68ED8")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6000793")]
		[Address(RVA = "0xB68FC0", Offset = "0xB68FC0", VA = "0xB68FC0")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000794")]
		[Address(RVA = "0xB690B8", Offset = "0xB690B8", VA = "0xB690B8")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000795")]
		[Address(RVA = "0xB691E0", Offset = "0xB691E0", VA = "0xB691E0")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000796")]
		[Address(RVA = "0xB692D0", Offset = "0xB692D0", VA = "0xB692D0")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000797")]
		[Address(RVA = "0xB693D8", Offset = "0xB693D8", VA = "0xB693D8")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000798")]
		[Address(RVA = "0xB694F0", Offset = "0xB694F0", VA = "0xB694F0")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000799")]
		[Address(RVA = "0xB695D8", Offset = "0xB695D8", VA = "0xB695D8")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x600079A")]
		[Address(RVA = "0xB696C8", Offset = "0xB696C8", VA = "0xB696C8")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600079B")]
		[Address(RVA = "0xB697B0", Offset = "0xB697B0", VA = "0xB697B0")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x600079C")]
		[Address(RVA = "0xB69898", Offset = "0xB69898", VA = "0xB69898")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600079D")]
		[Address(RVA = "0xB699A0", Offset = "0xB699A0", VA = "0xB699A0")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600079E")]
		[Address(RVA = "0xB69AB8", Offset = "0xB69AB8", VA = "0xB69AB8")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x600079F")]
		[Address(RVA = "0xB69BB0", Offset = "0xB69BB0", VA = "0xB69BB0")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xB69CA8", Offset = "0xB69CA8", VA = "0xB69CA8")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x4000523")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DCF58", Offset = "0x2DCF58")]
		Unknown,
		[Token(Token = "0x4000524")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DCF8C", Offset = "0x2DCF8C")]
		InSync,
		[Token(Token = "0x4000525")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DCFC0", Offset = "0x2DCFC0")]
		NeedsDownload,
		[Token(Token = "0x4000526")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DCFFC", Offset = "0x2DCFFC")]
		RemoteDownloading,
		[Token(Token = "0x4000527")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD03C", Offset = "0x2DD03C")]
		NeedsUpload,
		[Token(Token = "0x4000528")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD078", Offset = "0x2DD078")]
		LocalUploading,
		[Token(Token = "0x4000529")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD0B4", Offset = "0x2DD0B4")]
		InConflict
	}
	[Token(Token = "0x20000C5")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x400052B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD0EC", Offset = "0x2DD0EC")]
		Unknown,
		[Token(Token = "0x400052C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD120", Offset = "0x2DD120")]
		Ok,
		[Token(Token = "0x400052D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD150", Offset = "0x2DD150")]
		BetterVersionStored,
		[Token(Token = "0x400052E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD194", Offset = "0x2DD194")]
		ManualMergeRequired
	}
	[Token(Token = "0x20000C6")]
	public interface IMicrophone
	{
		[Token(Token = "0x60007A2")]
		void Start();

		[Token(Token = "0x60007A3")]
		void Stop();

		[Token(Token = "0x60007A4")]
		float[] Update();
	}
	[Token(Token = "0x20000C7")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x60007A5")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x60007A6")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x60007A7")]
		void Update();

		[Token(Token = "0x60007A8")]
		int PeekSizeElements();
	}
	[Token(Token = "0x20000C8")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x4000530")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD1D8", Offset = "0x2DD1D8")]
		String,
		[Token(Token = "0x4000531")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD20C", Offset = "0x2DD20C")]
		Int,
		[Token(Token = "0x4000532")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD240", Offset = "0x2DD240")]
		Double,
		[Token(Token = "0x4000533")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD274", Offset = "0x2DD274")]
		Unknown
	}
	[Token(Token = "0x20000C9")]
	public enum LaunchType
	{
		[Token(Token = "0x4000535")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD2A8", Offset = "0x2DD2A8")]
		Unknown,
		[Token(Token = "0x4000536")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD2DC", Offset = "0x2DD2DC")]
		Normal,
		[Token(Token = "0x4000537")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD310", Offset = "0x2DD310")]
		Invite,
		[Token(Token = "0x4000538")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD344", Offset = "0x2DD344")]
		Coordinated,
		[Token(Token = "0x4000539")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD37C", Offset = "0x2DD37C")]
		Deeplink
	}
	[Token(Token = "0x20000CA")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x400053B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD3B4", Offset = "0x2DD3B4")]
		None,
		[Token(Token = "0x400053C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD3E8", Offset = "0x2DD3E8")]
		Friends,
		[Token(Token = "0x400053D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD41C", Offset = "0x2DD41C")]
		Unknown
	}
	[Token(Token = "0x20000CB")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x400053F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD450", Offset = "0x2DD450")]
		Top,
		[Token(Token = "0x4000540")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD480", Offset = "0x2DD480")]
		CenteredOnViewer,
		[Token(Token = "0x4000541")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD4C0", Offset = "0x2DD4C0")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x4000542")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD508", Offset = "0x2DD508")]
		Unknown
	}
	[Token(Token = "0x20000CC")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x4000544")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD53C", Offset = "0x2DD53C")]
		Unknown,
		[Token(Token = "0x4000545")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD570", Offset = "0x2DD570")]
		Public,
		[Token(Token = "0x4000546")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD5A4", Offset = "0x2DD5A4")]
		Friends,
		[Token(Token = "0x4000547")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD5D8", Offset = "0x2DD5D8")]
		OnlyMe
	}
	[Token(Token = "0x20000CD")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x4000549")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD60C", Offset = "0x2DD60C")]
		Unknown,
		[Token(Token = "0x400054A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD640", Offset = "0x2DD640")]
		MicrophoneOn,
		[Token(Token = "0x400054B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD67C", Offset = "0x2DD67C")]
		MicrophoneOff
	}
	[Token(Token = "0x20000CE")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x400054D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD6B8", Offset = "0x2DD6B8")]
		Success = 1,
		[Token(Token = "0x400054E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD6EC", Offset = "0x2DD6EC")]
		Unknown = 0,
		[Token(Token = "0x400054F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD720", Offset = "0x2DD720")]
		NoPackageSet = -1,
		[Token(Token = "0x4000550")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD75C", Offset = "0x2DD75C")]
		NoFbConnect = -2,
		[Token(Token = "0x4000551")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD798", Offset = "0x2DD798")]
		NoSessionId = -3,
		[Token(Token = "0x4000552")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD7D4", Offset = "0x2DD7D4")]
		MissingParameters = -4
	}
	[Token(Token = "0x20000CF")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4000554")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD814", Offset = "0x2DD814")]
		Required,
		[Token(Token = "0x4000555")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD84C", Offset = "0x2DD84C")]
		High,
		[Token(Token = "0x4000556")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD880", Offset = "0x2DD880")]
		Medium,
		[Token(Token = "0x4000557")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD8B4", Offset = "0x2DD8B4")]
		Low,
		[Token(Token = "0x4000558")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD8E4", Offset = "0x2DD8E4")]
		Unknown
	}
	[Token(Token = "0x20000D0")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x3F56D4", Offset = "0x3F56D4", VA = "0x3F56D4")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x3F5764", Offset = "0x3F5764", VA = "0x3F5764")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x3F57FC", Offset = "0x3F57FC", VA = "0x3F57FC")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x3F5884", Offset = "0x3F5884", VA = "0x3F5884")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x3F5914", Offset = "0x3F5914", VA = "0x3F5914")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x3F59A4", Offset = "0x3F59A4", VA = "0x3F59A4")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x3F5A48", Offset = "0x3F5A48", VA = "0x3F5A48")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x3F5AD0", Offset = "0x3F5AD0", VA = "0x3F5AD0")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x3F5B68", Offset = "0x3F5B68", VA = "0x3F5B68")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x3F5C14", Offset = "0x3F5C14", VA = "0x3F5C14")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x3F5CAC", Offset = "0x3F5CAC", VA = "0x3F5CAC")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x3F5D34", Offset = "0x3F5D34", VA = "0x3F5D34")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x3F5DC4", Offset = "0x3F5DC4", VA = "0x3F5DC4")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x3F4670", Offset = "0x3F4670", VA = "0x3F4670")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x3F5E54", Offset = "0x3F5E54", VA = "0x3F5E54", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x400055B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD918", Offset = "0x2DD918")]
		Unknown,
		[Token(Token = "0x400055C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD94C", Offset = "0x2DD94C")]
		Trailing,
		[Token(Token = "0x400055D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD984", Offset = "0x2DD984")]
		Swingy
	}
	[Token(Token = "0x20000D2")]
	public enum MediaContentType
	{
		[Token(Token = "0x400055F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD9B8", Offset = "0x2DD9B8")]
		Unknown,
		[Token(Token = "0x4000560")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DD9EC", Offset = "0x2DD9EC")]
		Photo
	}
	[Token(Token = "0x20000D3")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x200024F")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000071")]
		public T Data
		{
			[Token(Token = "0x60007B9")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60007B8")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x60007BA")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x20000D4")]
	public class Message
	{
		[Token(Token = "0x2000250")]
		public delegate void Callback(Message message);

		[Token(Token = "0x2000251")]
		public enum MessageType : uint
		{
			[Token(Token = "0x40009DE")]
			Unknown = 0u,
			[Token(Token = "0x40009DF")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x40009E0")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x40009E1")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x40009E2")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x40009E3")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x40009E4")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x40009E5")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x40009E6")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x40009E7")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x40009E8")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x40009E9")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x40009EA")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x40009EB")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x40009EC")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x40009ED")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x40009EE")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x40009EF")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x40009F0")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x40009F1")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x40009F2")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x40009F3")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x40009F4")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x40009F5")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x40009F6")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x40009F7")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x40009F8")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x40009F9")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x40009FA")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x40009FB")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x40009FC")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x40009FD")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x40009FE")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x40009FF")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4000A00")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4000A01")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4000A02")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4000A03")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4000A04")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4000A05")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4000A06")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4000A07")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4000A08")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4000A09")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4000A0A")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4000A0B")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4000A0C")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4000A0D")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4000A0E")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4000A0F")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4000A10")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4000A11")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4000A12")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4000A13")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4000A14")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x4000A15")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4000A16")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4000A17")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4000A18")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4000A19")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4000A1A")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4000A1B")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4000A1C")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4000A1D")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4000A1E")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4000A1F")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4000A20")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4000A21")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4000A22")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4000A23")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4000A24")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x4000A25")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4000A26")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x4000A27")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4000A28")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4000A29")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4000A2A")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4000A2B")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4000A2C")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4000A2D")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4000A2E")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4000A2F")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4000A30")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x4000A31")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x4000A32")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x4000A33")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x4000A34")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x4000A35")]
			Room_Join = 382373641u,
			[Token(Token = "0x4000A36")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4000A37")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4000A38")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4000A39")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4000A3A")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4000A3B")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4000A3C")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4000A3D")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4000A3E")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4000A3F")]
			User_Get = 1808768583u,
			[Token(Token = "0x4000A40")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x4000A41")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x4000A42")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x4000A43")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x4000A44")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x4000A45")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x4000A46")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4000A47")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4000A48")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4000A49")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4000A4A")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4000A4B")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4000A4C")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4000A4D")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4000A4E")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4000A4F")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x4000A50")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x4000A51")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x4000A52")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x4000A53")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x4000A54")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x4000A55")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x4000A56")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x4000A57")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x4000A58")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4000A59")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x4000A5A")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x4000A5B")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x4000A5C")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4000A5D")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4000A5E")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4000A5F")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4000A60")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x4000A61")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x2000252")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private MessageType type;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong requestID;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Error error;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2DDA20", Offset = "0x2DDA20")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000072")]
		public MessageType Type
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x3F05E4", Offset = "0x3F05E4", VA = "0x3F05E4")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000073")]
		public bool IsError
		{
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x3F632C", Offset = "0x3F632C", VA = "0x3F632C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000074")]
		public ulong RequestID
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0x3F05DC", Offset = "0x3F05DC", VA = "0x3F05DC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000075")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0x3F95EC", Offset = "0x3F95EC", VA = "0x3F95EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E1688", Offset = "0x2E1688")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000801")]
			[Address(RVA = "0x3F9588", Offset = "0x3F9588", VA = "0x3F9588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E1678", Offset = "0x2E1678")]
			set
			{
			}
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x3F604C", Offset = "0x3F604C", VA = "0x3F604C")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x3F6324", Offset = "0x3F6324", VA = "0x3F6324", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x3F633C", Offset = "0x3F633C", VA = "0x3F633C", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x3F6344", Offset = "0x3F6344", VA = "0x3F6344", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x3F634C", Offset = "0x3F634C", VA = "0x3F634C", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x3F6354", Offset = "0x3F6354", VA = "0x3F6354", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x3F635C", Offset = "0x3F635C", VA = "0x3F635C", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x3F6364", Offset = "0x3F6364", VA = "0x3F6364", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x3F636C", Offset = "0x3F636C", VA = "0x3F636C", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x3F6374", Offset = "0x3F6374", VA = "0x3F6374", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x3F637C", Offset = "0x3F637C", VA = "0x3F637C", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x3F6384", Offset = "0x3F6384", VA = "0x3F6384", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x3F638C", Offset = "0x3F638C", VA = "0x3F638C", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x3F6394", Offset = "0x3F6394", VA = "0x3F6394", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x3F639C", Offset = "0x3F639C", VA = "0x3F639C", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x3F63A4", Offset = "0x3F63A4", VA = "0x3F63A4", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x3F63AC", Offset = "0x3F63AC", VA = "0x3F63AC", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x3F63B4", Offset = "0x3F63B4", VA = "0x3F63B4", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x3F63BC", Offset = "0x3F63BC", VA = "0x3F63BC", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x3F63C4", Offset = "0x3F63C4", VA = "0x3F63C4", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x3F63CC", Offset = "0x3F63CC", VA = "0x3F63CC", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x3F63D4", Offset = "0x3F63D4", VA = "0x3F63D4", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x3F63DC", Offset = "0x3F63DC", VA = "0x3F63DC", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x3F63E4", Offset = "0x3F63E4", VA = "0x3F63E4", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x3F63EC", Offset = "0x3F63EC", VA = "0x3F63EC", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x3F63F4", Offset = "0x3F63F4", VA = "0x3F63F4", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x3F63FC", Offset = "0x3F63FC", VA = "0x3F63FC", Slot = "28")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x3F6404", Offset = "0x3F6404", VA = "0x3F6404", Slot = "29")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x3F640C", Offset = "0x3F640C", VA = "0x3F640C", Slot = "30")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x3F6414", Offset = "0x3F6414", VA = "0x3F6414", Slot = "31")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x3F641C", Offset = "0x3F641C", VA = "0x3F641C", Slot = "32")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x3F6424", Offset = "0x3F6424", VA = "0x3F6424", Slot = "33")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x3F642C", Offset = "0x3F642C", VA = "0x3F642C", Slot = "34")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x3F6434", Offset = "0x3F6434", VA = "0x3F6434", Slot = "35")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x3F643C", Offset = "0x3F643C", VA = "0x3F643C", Slot = "36")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x3F6444", Offset = "0x3F6444", VA = "0x3F6444", Slot = "37")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x3F644C", Offset = "0x3F644C", VA = "0x3F644C", Slot = "38")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x3F6454", Offset = "0x3F6454", VA = "0x3F6454", Slot = "39")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x3F645C", Offset = "0x3F645C", VA = "0x3F645C", Slot = "40")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x3F6464", Offset = "0x3F6464", VA = "0x3F6464", Slot = "41")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x3F646C", Offset = "0x3F646C", VA = "0x3F646C", Slot = "42")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x3F6474", Offset = "0x3F6474", VA = "0x3F6474", Slot = "43")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x3F647C", Offset = "0x3F647C", VA = "0x3F647C", Slot = "44")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x3F6484", Offset = "0x3F6484", VA = "0x3F6484", Slot = "45")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x3F648C", Offset = "0x3F648C", VA = "0x3F648C", Slot = "46")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x3F6494", Offset = "0x3F6494", VA = "0x3F6494", Slot = "47")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x3F649C", Offset = "0x3F649C", VA = "0x3F649C", Slot = "48")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x3F64A4", Offset = "0x3F64A4", VA = "0x3F64A4", Slot = "49")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x3F64AC", Offset = "0x3F64AC", VA = "0x3F64AC", Slot = "50")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x3F64B4", Offset = "0x3F64B4", VA = "0x3F64B4", Slot = "51")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x3F64BC", Offset = "0x3F64BC", VA = "0x3F64BC", Slot = "52")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x3F64C4", Offset = "0x3F64C4", VA = "0x3F64C4", Slot = "53")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x3F64CC", Offset = "0x3F64CC", VA = "0x3F64CC", Slot = "54")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x3F64D4", Offset = "0x3F64D4", VA = "0x3F64D4", Slot = "55")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x3F64DC", Offset = "0x3F64DC", VA = "0x3F64DC", Slot = "56")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x3F64E4", Offset = "0x3F64E4", VA = "0x3F64E4", Slot = "57")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x3F64EC", Offset = "0x3F64EC", VA = "0x3F64EC", Slot = "58")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x3F64F4", Offset = "0x3F64F4", VA = "0x3F64F4", Slot = "59")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x3F64FC", Offset = "0x3F64FC", VA = "0x3F64FC", Slot = "60")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x3F6504", Offset = "0x3F6504", VA = "0x3F6504", Slot = "61")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x3F650C", Offset = "0x3F650C", VA = "0x3F650C", Slot = "62")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x3F6514", Offset = "0x3F6514", VA = "0x3F6514", Slot = "63")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x3F651C", Offset = "0x3F651C", VA = "0x3F651C", Slot = "64")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x3F6524", Offset = "0x3F6524", VA = "0x3F6524", Slot = "65")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x3F652C", Offset = "0x3F652C", VA = "0x3F652C", Slot = "66")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x3F6534", Offset = "0x3F6534", VA = "0x3F6534")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x3EFF8C", Offset = "0x3EFF8C", VA = "0x3EFF8C")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20000D5")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6000803")]
		[Address(RVA = "0x3F99FC", Offset = "0x3F99FC", VA = "0x3F99FC")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x3F9A68", Offset = "0x3F9A68", VA = "0x3F9A68", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x3F9ACC", Offset = "0x3F9ACC", VA = "0x3F9ACC", Slot = "67")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000D6")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x3F78E8", Offset = "0x3F78E8", VA = "0x3F78E8")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x3F9C18", Offset = "0x3F9C18", VA = "0x3F9C18", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x3F9C7C", Offset = "0x3F9C7C", VA = "0x3F9C7C", Slot = "67")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000D7")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x3F7954", Offset = "0x3F7954", VA = "0x3F7954")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x3F9F98", Offset = "0x3F9F98", VA = "0x3F9F98", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x3F9FFC", Offset = "0x3F9FFC", VA = "0x3F9FFC", Slot = "67")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000D8")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x3F79C0", Offset = "0x3F79C0", VA = "0x3F79C0")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x3FA318", Offset = "0x3FA318", VA = "0x3FA318", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x3FA37C", Offset = "0x3FA37C", VA = "0x3FA37C", Slot = "67")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000D9")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x600080F")]
		[Address(RVA = "0x3F7A2C", Offset = "0x3F7A2C", VA = "0x3F7A2C")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x3FA4D8", Offset = "0x3FA4D8", VA = "0x3FA4D8", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x3FA53C", Offset = "0x3FA53C", VA = "0x3FA53C", Slot = "67")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000DA")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x3F7A98", Offset = "0x3F7A98", VA = "0x3F7A98")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x3FA6B8", Offset = "0x3FA6B8", VA = "0x3FA6B8", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x3FA71C", Offset = "0x3FA71C", VA = "0x3FA71C", Slot = "67")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000DB")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x3F7B04", Offset = "0x3F7B04", VA = "0x3F7B04")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x3FA8FC", Offset = "0x3FA8FC", VA = "0x3FA8FC", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x3FA960", Offset = "0x3FA960", VA = "0x3FA960", Slot = "67")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000DC")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x3F7B70", Offset = "0x3F7B70", VA = "0x3F7B70")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x3FAC3C", Offset = "0x3FAC3C", VA = "0x3FAC3C", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x3FACA0", Offset = "0x3FACA0", VA = "0x3FACA0", Slot = "67")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000DD")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x600081B")]
		[Address(RVA = "0x3F7BDC", Offset = "0x3F7BDC", VA = "0x3F7BDC")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x3FAE1C", Offset = "0x3FAE1C", VA = "0x3FAE1C", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x3FAE80", Offset = "0x3FAE80", VA = "0x3FAE80", Slot = "67")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000DE")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x3F7C48", Offset = "0x3F7C48", VA = "0x3F7C48")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x3FAFFC", Offset = "0x3FAFFC", VA = "0x3FAFFC", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x3FB060", Offset = "0x3FB060", VA = "0x3FB060", Slot = "67")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000DF")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x3F7CB4", Offset = "0x3F7CB4", VA = "0x3F7CB4")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x3FB1BC", Offset = "0x3FB1BC", VA = "0x3FB1BC", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x3FB220", Offset = "0x3FB220", VA = "0x3FB220", Slot = "67")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E0")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x3F7D20", Offset = "0x3F7D20", VA = "0x3F7D20")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x3FB3AC", Offset = "0x3FB3AC", VA = "0x3FB3AC", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x3FB410", Offset = "0x3FB410", VA = "0x3FB410", Slot = "67")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E1")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x6000827")]
		[Address(RVA = "0x3F7D8C", Offset = "0x3F7D8C", VA = "0x3F7D8C")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x3FB57C", Offset = "0x3FB57C", VA = "0x3FB57C", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x3FB5E0", Offset = "0x3FB5E0", VA = "0x3FB5E0", Slot = "67")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E2")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x600082A")]
		[Address(RVA = "0x3FB72C", Offset = "0x3FB72C", VA = "0x3FB72C")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x3FB798", Offset = "0x3FB798", VA = "0x3FB798", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x3FB7FC", Offset = "0x3FB7FC", VA = "0x3FB7FC", Slot = "67")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E3")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x600082D")]
		[Address(RVA = "0x3F7DF8", Offset = "0x3F7DF8", VA = "0x3F7DF8")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x3FBAD8", Offset = "0x3FBAD8", VA = "0x3FBAD8", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x3FBB3C", Offset = "0x3FBB3C", VA = "0x3FBB3C", Slot = "67")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E4")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6000830")]
		[Address(RVA = "0x3F7E64", Offset = "0x3F7E64", VA = "0x3F7E64")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x3FBCD4", Offset = "0x3FBCD4", VA = "0x3FBCD4", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x3FBD38", Offset = "0x3FBD38", VA = "0x3FBD38", Slot = "67")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E5")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x6000833")]
		[Address(RVA = "0x3F7ED0", Offset = "0x3F7ED0", VA = "0x3F7ED0")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x3FC234", Offset = "0x3FC234", VA = "0x3FC234", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x3FC298", Offset = "0x3FC298", VA = "0x3FC298", Slot = "67")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E6")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6000836")]
		[Address(RVA = "0x3F7F3C", Offset = "0x3F7F3C", VA = "0x3F7F3C")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x3FBEB4", Offset = "0x3FBEB4", VA = "0x3FBEB4", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x3FBF18", Offset = "0x3FBF18", VA = "0x3FBF18", Slot = "67")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E7")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6000839")]
		[Address(RVA = "0x3F7FA8", Offset = "0x3F7FA8", VA = "0x3F7FA8")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x3FC454", Offset = "0x3FC454", VA = "0x3FC454", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x3FC4B8", Offset = "0x3FC4B8", VA = "0x3FC4B8", Slot = "67")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E8")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x600083C")]
		[Address(RVA = "0x3FC8F0", Offset = "0x3FC8F0", VA = "0x3FC8F0")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x3FC95C", Offset = "0x3FC95C", VA = "0x3FC95C", Slot = "28")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x3FC9C0", Offset = "0x3FC9C0", VA = "0x3FC9C0", Slot = "67")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E9")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x600083F")]
		[Address(RVA = "0x3FCC9C", Offset = "0x3FCC9C", VA = "0x3FCC9C")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x3FCD08", Offset = "0x3FCD08", VA = "0x3FCD08", Slot = "29")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x3FCD6C", Offset = "0x3FCD6C", VA = "0x3FCD6C", Slot = "67")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000EA")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x6000842")]
		[Address(RVA = "0x3F8014", Offset = "0x3F8014", VA = "0x3F8014")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x3FCEC8", Offset = "0x3FCEC8", VA = "0x3FCEC8", Slot = "30")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x3FCF2C", Offset = "0x3FCF2C", VA = "0x3FCF2C", Slot = "67")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000EB")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x6000845")]
		[Address(RVA = "0x3FD088", Offset = "0x3FD088", VA = "0x3FD088")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x3FD0F4", Offset = "0x3FD0F4", VA = "0x3FD0F4", Slot = "31")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x3FD158", Offset = "0x3FD158", VA = "0x3FD158", Slot = "67")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000EC")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x6000848")]
		[Address(RVA = "0x3FD2B4", Offset = "0x3FD2B4", VA = "0x3FD2B4")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x3FD320", Offset = "0x3FD320", VA = "0x3FD320", Slot = "32")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x3FD384", Offset = "0x3FD384", VA = "0x3FD384", Slot = "67")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000ED")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x600084B")]
		[Address(RVA = "0x3F8080", Offset = "0x3F8080", VA = "0x3F8080")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x3FD5D8", Offset = "0x3FD5D8", VA = "0x3FD5D8", Slot = "34")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x3FD63C", Offset = "0x3FD63C", VA = "0x3FD63C", Slot = "67")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000EE")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x600084E")]
		[Address(RVA = "0x3FD97C", Offset = "0x3FD97C", VA = "0x3FD97C")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x3FD9E8", Offset = "0x3FD9E8", VA = "0x3FD9E8", Slot = "35")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x3FDA4C", Offset = "0x3FDA4C", VA = "0x3FDA4C", Slot = "67")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000EF")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6000851")]
		[Address(RVA = "0x3FDD28", Offset = "0x3FDD28", VA = "0x3FDD28")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x3FDD94", Offset = "0x3FDD94", VA = "0x3FDD94", Slot = "36")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x3FDDF8", Offset = "0x3FDDF8", VA = "0x3FDDF8", Slot = "67")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F0")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x6000854")]
		[Address(RVA = "0x3FDF44", Offset = "0x3FDF44", VA = "0x3FDF44")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x3FDFB0", Offset = "0x3FDFB0", VA = "0x3FDFB0", Slot = "37")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x3FE014", Offset = "0x3FE014", VA = "0x3FE014", Slot = "67")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F1")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x6000857")]
		[Address(RVA = "0x3F8158", Offset = "0x3F8158", VA = "0x3F8158")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x3FE160", Offset = "0x3FE160", VA = "0x3FE160", Slot = "38")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x3FE1C4", Offset = "0x3FE1C4", VA = "0x3FE1C4", Slot = "67")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F2")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x600085A")]
		[Address(RVA = "0x3FE350", Offset = "0x3FE350", VA = "0x3FE350")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x3FE3BC", Offset = "0x3FE3BC", VA = "0x3FE3BC", Slot = "39")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x3FE420", Offset = "0x3FE420", VA = "0x3FE420", Slot = "67")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F3")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x600085D")]
		[Address(RVA = "0x3F81C4", Offset = "0x3F81C4", VA = "0x3F81C4")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x3FE58C", Offset = "0x3FE58C", VA = "0x3FE58C", Slot = "40")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x3FE5F0", Offset = "0x3FE5F0", VA = "0x3FE5F0", Slot = "67")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F4")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6000860")]
		[Address(RVA = "0x3F829C", Offset = "0x3F829C", VA = "0x3F829C")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x3FEA0C", Offset = "0x3FEA0C", VA = "0x3FEA0C", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x3FEA70", Offset = "0x3FEA70", VA = "0x3FEA70", Slot = "67")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F5")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6000863")]
		[Address(RVA = "0x3F8308", Offset = "0x3F8308", VA = "0x3F8308")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x3FEC8C", Offset = "0x3FEC8C", VA = "0x3FEC8C", Slot = "43")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x3FECF0", Offset = "0x3FECF0", VA = "0x3FECF0", Slot = "67")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F6")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6000866")]
		[Address(RVA = "0x3F8374", Offset = "0x3F8374", VA = "0x3F8374")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x3FF2EC", Offset = "0x3FF2EC", VA = "0x3FF2EC", Slot = "44")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x3FF350", Offset = "0x3FF350", VA = "0x3FF350", Slot = "67")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F7")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6000869")]
		[Address(RVA = "0x3F83E0", Offset = "0x3F83E0", VA = "0x3F83E0")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x3FF638", Offset = "0x3FF638", VA = "0x3FF638", Slot = "45")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x3FF69C", Offset = "0x3FF69C", VA = "0x3FF69C", Slot = "67")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F8")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x600086C")]
		[Address(RVA = "0x3FF7E8", Offset = "0x3FF7E8", VA = "0x3FF7E8")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x3FF854", Offset = "0x3FF854", VA = "0x3FF854", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x3FF8B8", Offset = "0x3FF8B8", VA = "0x3FF8B8", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F9")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x600086F")]
		[Address(RVA = "0x3F844C", Offset = "0x3F844C", VA = "0x3F844C")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x3FFDF4", Offset = "0x3FFDF4", VA = "0x3FFDF4", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x3FFE58", Offset = "0x3FFE58", VA = "0x3FFE58", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FA")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6000872")]
		[Address(RVA = "0x3FFBD8", Offset = "0x3FFBD8", VA = "0x3FFBD8")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x3FFC44", Offset = "0x3FFC44", VA = "0x3FFC44", Slot = "47")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x3FFCA8", Offset = "0x3FFCA8", VA = "0x3FFCA8", Slot = "67")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FB")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x6000875")]
		[Address(RVA = "0x3F84B8", Offset = "0x3F84B8", VA = "0x3F84B8")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x3FFF0C", Offset = "0x3FFF0C", VA = "0x3FFF0C", Slot = "48")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x3FFF70", Offset = "0x3FFF70", VA = "0x3FFF70", Slot = "67")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FC")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x3F8524", Offset = "0x3F8524", VA = "0x3F8524")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x40011C", Offset = "0x40011C", VA = "0x40011C", Slot = "49")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x400180", Offset = "0x400180", VA = "0x400180", Slot = "67")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FD")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x3F8590", Offset = "0x3F8590", VA = "0x3F8590")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x40081C", Offset = "0x40081C", VA = "0x40081C", Slot = "50")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x400880", Offset = "0x400880", VA = "0x400880", Slot = "67")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FE")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x3F85FC", Offset = "0x3F85FC", VA = "0x3F85FC")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x400B9C", Offset = "0x400B9C", VA = "0x400B9C", Slot = "51")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x400C00", Offset = "0x400C00", VA = "0x400C00", Slot = "67")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FF")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x3F8668", Offset = "0x3F8668", VA = "0x3F8668")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x400D98", Offset = "0x400D98", VA = "0x400D98", Slot = "52")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x400DFC", Offset = "0x400DFC", VA = "0x400DFC", Slot = "67")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000100")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x6000884")]
		[Address(RVA = "0x3F86D4", Offset = "0x3F86D4", VA = "0x3F86D4")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x401118", Offset = "0x401118", VA = "0x401118", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x40117C", Offset = "0x40117C", VA = "0x40117C", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000101")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6000887")]
		[Address(RVA = "0x3F8740", Offset = "0x3F8740", VA = "0x3F8740")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x401B20", Offset = "0x401B20", VA = "0x401B20", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x401B84", Offset = "0x401B84", VA = "0x401B84", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000102")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x600088A")]
		[Address(RVA = "0x3F87AC", Offset = "0x3F87AC", VA = "0x3F87AC")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x401C38", Offset = "0x401C38", VA = "0x401C38", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x401C9C", Offset = "0x401C9C", VA = "0x401C9C", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000103")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x600088D")]
		[Address(RVA = "0x3F8818", Offset = "0x3F8818", VA = "0x3F8818")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x4017A0", Offset = "0x4017A0", VA = "0x4017A0", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x401804", Offset = "0x401804", VA = "0x401804", Slot = "67")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000104")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6000890")]
		[Address(RVA = "0x3F8884", Offset = "0x3F8884", VA = "0x3F8884")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x401230", Offset = "0x401230", VA = "0x401230", Slot = "54")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x401294", Offset = "0x401294", VA = "0x401294", Slot = "67")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000105")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6000893")]
		[Address(RVA = "0x3F88F0", Offset = "0x3F88F0", VA = "0x3F88F0")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x401420", Offset = "0x401420", VA = "0x401420", Slot = "55")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x401484", Offset = "0x401484", VA = "0x401484", Slot = "67")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000106")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6000896")]
		[Address(RVA = "0x3F895C", Offset = "0x3F895C", VA = "0x3F895C")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x401D50", Offset = "0x401D50", VA = "0x401D50", Slot = "57")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x401DB4", Offset = "0x401DB4", VA = "0x401DB4", Slot = "67")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000107")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6000899")]
		[Address(RVA = "0x3F89C8", Offset = "0x3F89C8", VA = "0x3F89C8")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x402090", Offset = "0x402090", VA = "0x402090", Slot = "58")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x4020F4", Offset = "0x4020F4", VA = "0x4020F4", Slot = "67")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000108")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x600089C")]
		[Address(RVA = "0x3F8A34", Offset = "0x3F8A34", VA = "0x3F8A34")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x402240", Offset = "0x402240", VA = "0x402240", Slot = "59")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x4022A4", Offset = "0x4022A4", VA = "0x4022A4", Slot = "67")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000109")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x600089F")]
		[Address(RVA = "0x402328", Offset = "0x402328", VA = "0x402328")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x402394", Offset = "0x402394", VA = "0x402394", Slot = "60")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x4023F8", Offset = "0x4023F8", VA = "0x4023F8", Slot = "67")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010A")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x3F8AA0", Offset = "0x3F8AA0", VA = "0x3F8AA0")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x402554", Offset = "0x402554", VA = "0x402554", Slot = "61")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x4025B8", Offset = "0x4025B8", VA = "0x4025B8", Slot = "67")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010B")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x3F8B0C", Offset = "0x3F8B0C", VA = "0x3F8B0C")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x402714", Offset = "0x402714", VA = "0x402714", Slot = "62")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x402778", Offset = "0x402778", VA = "0x402778", Slot = "67")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010C")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x3F8B78", Offset = "0x3F8B78", VA = "0x3F8B78")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x402924", Offset = "0x402924", VA = "0x402924", Slot = "63")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x402988", Offset = "0x402988", VA = "0x402988", Slot = "67")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010D")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x3F8BE4", Offset = "0x3F8BE4", VA = "0x3F8BE4")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x402CA4", Offset = "0x402CA4", VA = "0x402CA4", Slot = "64")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x402D08", Offset = "0x402D08", VA = "0x402D08", Slot = "67")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010E")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x3F8C50", Offset = "0x3F8C50", VA = "0x3F8C50")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x403024", Offset = "0x403024", VA = "0x403024", Slot = "65")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x403088", Offset = "0x403088", VA = "0x403088", Slot = "67")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200010F")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x4031D4", Offset = "0x4031D4", VA = "0x4031D4")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x403240", Offset = "0x403240", VA = "0x403240", Slot = "66")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x4032A4", Offset = "0x4032A4", VA = "0x4032A4", Slot = "67")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000110")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x3F8CBC", Offset = "0x3F8CBC", VA = "0x3F8CBC")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x3FF4CC", Offset = "0x3FF4CC", VA = "0x3FF4CC", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x3FF530", Offset = "0x3FF530", VA = "0x3FF530", Slot = "67")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000111")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x3F8D28", Offset = "0x3F8D28", VA = "0x3F8D28")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x40045C", Offset = "0x40045C", VA = "0x40045C", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x4004C0", Offset = "0x4004C0", VA = "0x4004C0", Slot = "67")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000112")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x3F80EC", Offset = "0x3F80EC", VA = "0x3F80EC")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x3FD4E0", Offset = "0x3FD4E0", VA = "0x3FD4E0", Slot = "33")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x3FD544", Offset = "0x3FD544", VA = "0x3FD544", Slot = "67")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000113")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x3F8D94", Offset = "0x3F8D94", VA = "0x3F8D94")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x3FEE94", Offset = "0x3FEE94", VA = "0x3FEE94", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x3FEEF8", Offset = "0x3FEEF8", VA = "0x3FEEF8", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000114")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x3F8230", Offset = "0x3F8230", VA = "0x3F8230")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x3FE770", Offset = "0x3FE770", VA = "0x3FE770", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x3FE7EC", Offset = "0x3FE7EC", VA = "0x3FE7EC", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x3FE868", Offset = "0x3FE868", VA = "0x3FE868", Slot = "67")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000115")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x3F8E00", Offset = "0x3F8E00", VA = "0x3F8E00")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x3FC634", Offset = "0x3FC634", VA = "0x3FC634", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x3FC698", Offset = "0x3FC698", VA = "0x3FC698", Slot = "67")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000116")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x3F8E6C", Offset = "0x3F8E6C", VA = "0x3F8E6C")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x40066C", Offset = "0x40066C", VA = "0x40066C", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x4006D0", Offset = "0x4006D0", VA = "0x4006D0", Slot = "67")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000117")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly ulong size;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x17000076")]
		public ulong SenderID
		{
			[Token(Token = "0x60008CC")]
			[Address(RVA = "0x40564C", Offset = "0x40564C", VA = "0x40564C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000077")]
		public ulong Size
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x4056D4", Offset = "0x4056D4", VA = "0x4056D4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000078")]
		public SendPolicy Policy
		{
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0x4056DC", Offset = "0x4056DC", VA = "0x4056DC")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x40465C", Offset = "0x40465C", VA = "0x40465C")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x4054B0", Offset = "0x4054B0", VA = "0x4054B0")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x405764", Offset = "0x405764", VA = "0x405764", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x4057C8", Offset = "0x4057C8", VA = "0x4057C8", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x4000569")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDA30", Offset = "0x2DDA30")]
		Unknown,
		[Token(Token = "0x400056A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDA64", Offset = "0x2DDA64")]
		Join,
		[Token(Token = "0x400056B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDA98", Offset = "0x2DDA98")]
		Leave,
		[Token(Token = "0x400056C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDACC", Offset = "0x2DDACC")]
		Invite,
		[Token(Token = "0x400056D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDB00", Offset = "0x2DDB00")]
		Uninvite
	}
	[Token(Token = "0x2000119")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x400056F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDB38", Offset = "0x2DDB38")]
		Unknown,
		[Token(Token = "0x4000570")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDB6C", Offset = "0x2DDB6C")]
		Connected,
		[Token(Token = "0x4000571")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDBA4", Offset = "0x2DDBA4")]
		Timeout,
		[Token(Token = "0x4000572")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDBD8", Offset = "0x2DDBD8")]
		Closed
	}
	[Token(Token = "0x200011A")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4000574")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDC0C", Offset = "0x2DDC0C")]
		Unknown,
		[Token(Token = "0x4000575")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDC40", Offset = "0x2DDC40")]
		Granted,
		[Token(Token = "0x4000576")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDC74", Offset = "0x2DDC74")]
		Denied,
		[Token(Token = "0x4000577")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDCA8", Offset = "0x2DDCA8")]
		Blocked
	}
	[Token(Token = "0x200011B")]
	public enum PermissionType
	{
		[Token(Token = "0x4000579")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDCDC", Offset = "0x2DDCDC")]
		Unknown,
		[Token(Token = "0x400057A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDD10", Offset = "0x2DDD10")]
		Microphone,
		[Token(Token = "0x400057B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDD48", Offset = "0x2DDD48")]
		WriteExternalStorage
	}
	[Token(Token = "0x200011C")]
	public sealed class Core
	{
		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x3F0F0C", Offset = "0x3F0F0C", VA = "0x3F0F0C")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x3F1A48", Offset = "0x3F1A48", VA = "0x3F1A48")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x3F1AD8", Offset = "0x3F1AD8", VA = "0x3F1AD8")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x3F1D28", Offset = "0x3F1D28", VA = "0x3F1D28")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x3F20D4", Offset = "0x3F20D4", VA = "0x3F20D4")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x3F1D00", Offset = "0x3F1D00", VA = "0x3F1D00")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x3F254C", Offset = "0x3F254C", VA = "0x3F254C")]
		public Core()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xB3BA18", Offset = "0xB3BA18", VA = "0xB3BA18")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}
	}
	[Token(Token = "0x200011E")]
	public static class Rooms
	{
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x406554", Offset = "0x406554", VA = "0x406554")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x4068B4", Offset = "0x4068B4", VA = "0x4068B4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2E1698", Offset = "0x2E1698")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x406950", Offset = "0x406950", VA = "0x406950")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x406A70", Offset = "0x406A70", VA = "0x406A70")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x406BD8", Offset = "0x406BD8", VA = "0x406BD8")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x406CF0", Offset = "0x406CF0", VA = "0x406CF0")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x406DF8", Offset = "0x406DF8", VA = "0x406DF8")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x406F10", Offset = "0x406F10", VA = "0x406F10")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x407018", Offset = "0x407018", VA = "0x407018")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x407170", Offset = "0x407170", VA = "0x407170")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x407278", Offset = "0x407278", VA = "0x407278")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x407398", Offset = "0x407398", VA = "0x407398")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x4074B8", Offset = "0x4074B8", VA = "0x4074B8")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x407620", Offset = "0x407620", VA = "0x407620")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x407754", Offset = "0x407754", VA = "0x407754")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x40784C", Offset = "0x40784C", VA = "0x40784C")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x407964", Offset = "0x407964", VA = "0x407964")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x407A84", Offset = "0x407A84", VA = "0x407A84")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x407BA4", Offset = "0x407BA4", VA = "0x407BA4")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x407CB8", Offset = "0x407CB8", VA = "0x407CB8")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x4068B8", Offset = "0x4068B8", VA = "0x4068B8")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x407DD8", Offset = "0x407DD8", VA = "0x407DD8")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x407E70", Offset = "0x407E70", VA = "0x407E70")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x407F08", Offset = "0x407F08", VA = "0x407F08")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200011F")]
	public static class Matchmaking
	{
		[Token(Token = "0x2000253")]
		public class CustomQuery
		{
			[Token(Token = "0x2000276")]
			public struct Criterion
			{
				[Token(Token = "0x4000AFE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4000AFF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4000B00")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6000E4F")]
				[Address(RVA = "0x1DD658", Offset = "0x1DD658", VA = "0x1DD658")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4000A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4000A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Criterion[] criteria;

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x3F3FF0", Offset = "0x3F3FF0", VA = "0x3F3FF0")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x3F56C0", Offset = "0x3F56C0", VA = "0x3F56C0")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x3F3A64", Offset = "0x3F3A64", VA = "0x3F3A64")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x3F3D9C", Offset = "0x3F3D9C", VA = "0x3F3D9C")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x3F3EBC", Offset = "0x3F3EBC", VA = "0x3F3EBC")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x3F4510", Offset = "0x3F4510", VA = "0x3F4510")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x3F46C8", Offset = "0x3F46C8", VA = "0x3F46C8")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x3F47C0", Offset = "0x3F47C0", VA = "0x3F47C0")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x3F48A8", Offset = "0x3F48A8", VA = "0x3F48A8")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x3F49F0", Offset = "0x3F49F0", VA = "0x3F49F0")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x3F4B50", Offset = "0x3F4B50", VA = "0x3F4B50")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x3F4C70", Offset = "0x3F4C70", VA = "0x3F4C70")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x3F4DD0", Offset = "0x3F4DD0", VA = "0x3F4DD0")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x3F4F04", Offset = "0x3F4F04", VA = "0x3F4F04")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x3F5064", Offset = "0x3F5064", VA = "0x3F5064")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x3F51A0", Offset = "0x3F51A0", VA = "0x3F51A0")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x3F5308", Offset = "0x3F5308", VA = "0x3F5308")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x3F5410", Offset = "0x3F5410", VA = "0x3F5410")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x3F5530", Offset = "0x3F5530", VA = "0x3F5530")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x3F5628", Offset = "0x3F5628", VA = "0x3F5628")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000120")]
	public static class Net
	{
		[Token(Token = "0x6000904")]
		[Address(RVA = "0x404564", Offset = "0x404564", VA = "0x404564")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x404734", Offset = "0x404734", VA = "0x404734")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x404870", Offset = "0x404870", VA = "0x404870")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x404934", Offset = "0x404934", VA = "0x404934")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x4049F8", Offset = "0x4049F8", VA = "0x4049F8")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x404ABC", Offset = "0x404ABC", VA = "0x404ABC")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x404B84", Offset = "0x404B84", VA = "0x404B84")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x404CA4", Offset = "0x404CA4", VA = "0x404CA4")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x404D5C", Offset = "0x404D5C", VA = "0x404D5C")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x404E10", Offset = "0x404E10", VA = "0x404E10")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x404F28", Offset = "0x404F28", VA = "0x404F28")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x404FC0", Offset = "0x404FC0", VA = "0x404FC0")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x405058", Offset = "0x405058", VA = "0x405058")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000121")]
	public static class Leaderboards
	{
		[Token(Token = "0x6000911")]
		[Address(RVA = "0x3F3094", Offset = "0x3F3094", VA = "0x3F3094")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x3F31D8", Offset = "0x3F31D8", VA = "0x3F31D8")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x3F331C", Offset = "0x3F331C", VA = "0x3F331C")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x3F3448", Offset = "0x3F3448", VA = "0x3F3448")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x3F3574", Offset = "0x3F3574", VA = "0x3F3574")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000122")]
	public static class Voip
	{
		[Token(Token = "0x6000916")]
		[Address(RVA = "0x463BF0", Offset = "0x463BF0", VA = "0x463BF0")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x46402C", Offset = "0x46402C", VA = "0x46402C")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x463CB8", Offset = "0x463CB8", VA = "0x463CB8")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x465DEC", Offset = "0x465DEC", VA = "0x465DEC")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x465EF0", Offset = "0x465EF0", VA = "0x465EF0")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x465FB0", Offset = "0x465FB0", VA = "0x465FB0")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x46606C", Offset = "0x46606C", VA = "0x46606C")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x466128", Offset = "0x466128", VA = "0x466128")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x4661F4", Offset = "0x4661F4", VA = "0x4661F4")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x4662C0", Offset = "0x4662C0", VA = "0x4662C0")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x46638C", Offset = "0x46638C", VA = "0x46638C")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x4664EC", Offset = "0x4664EC", VA = "0x4664EC")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x4639CC", Offset = "0x4639CC", VA = "0x4639CC")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x463A64", Offset = "0x463A64", VA = "0x463A64")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x466600", Offset = "0x466600", VA = "0x466600")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000123")]
	public static class Achievements
	{
		[Token(Token = "0x6000925")]
		[Address(RVA = "0xB39CE8", Offset = "0xB39CE8", VA = "0xB39CE8")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xB39EF0", Offset = "0xB39EF0", VA = "0xB39EF0")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xB3A0FC", Offset = "0xB3A0FC", VA = "0xB3A0FC")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xB3A2E4", Offset = "0xB3A2E4", VA = "0xB3A2E4")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xB3A4C8", Offset = "0xB3A4C8", VA = "0xB3A4C8")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xB3A7B0", Offset = "0xB3A7B0", VA = "0xB3A7B0")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xB3AA94", Offset = "0xB3AA94", VA = "0xB3AA94")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xB3AC74", Offset = "0xB3AC74", VA = "0xB3AC74")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xB3AF48", Offset = "0xB3AF48", VA = "0xB3AF48")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000124")]
	public static class Application
	{
		[Token(Token = "0x600092E")]
		[Address(RVA = "0xB3B588", Offset = "0xB3B588", VA = "0xB3B588")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xB3B764", Offset = "0xB3B764", VA = "0xB3B764")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x2000125")]
	public static class AssetFile
	{
		[Token(Token = "0x6000930")]
		[Address(RVA = "0xB3C018", Offset = "0xB3C018", VA = "0xB3C018")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xB3C248", Offset = "0xB3C248", VA = "0xB3C248")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xB3C480", Offset = "0xB3C480", VA = "0xB3C480")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xB3C660", Offset = "0xB3C660", VA = "0xB3C660")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xB3C894", Offset = "0xB3C894", VA = "0xB3C894")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xB3CA94", Offset = "0xB3CA94", VA = "0xB3CA94")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xB3CC74", Offset = "0xB3CC74", VA = "0xB3CC74")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xB3CE78", Offset = "0xB3CE78", VA = "0xB3CE78")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xB3D07C", Offset = "0xB3D07C", VA = "0xB3D07C")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xB3D25C", Offset = "0xB3D25C", VA = "0xB3D25C")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xB3D468", Offset = "0xB3D468", VA = "0xB3D468")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xB3D698", Offset = "0xB3D698", VA = "0xB3D698")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xB3D8D0", Offset = "0xB3D8D0", VA = "0xB3D8D0")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xB3DAB0", Offset = "0xB3DAB0", VA = "0xB3DAB0")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000126")]
	public static class Avatar
	{
	}
	[Token(Token = "0x2000127")]
	public static class Cal
	{
	}
	[Token(Token = "0x2000128")]
	public static class CloudStorage
	{
		[Token(Token = "0x600093E")]
		[Address(RVA = "0x3F0DF4", Offset = "0x3F0DF4", VA = "0x3F0DF4")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x3F0F98", Offset = "0x3F0F98", VA = "0x3F0F98")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x3F10B0", Offset = "0x3F10B0", VA = "0x3F10B0")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x3F11C0", Offset = "0x3F11C0", VA = "0x3F11C0")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x3F12D8", Offset = "0x3F12D8", VA = "0x3F12D8")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x3F13E8", Offset = "0x3F13E8", VA = "0x3F13E8")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x3F1500", Offset = "0x3F1500", VA = "0x3F1500")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x3F1620", Offset = "0x3F1620", VA = "0x3F1620")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x3F1740", Offset = "0x3F1740", VA = "0x3F1740")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x3F1888", Offset = "0x3F1888", VA = "0x3F1888")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000129")]
	public static class CloudStorage2
	{
	}
	[Token(Token = "0x200012A")]
	public static class Entitlements
	{
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x3F2558", Offset = "0x3F2558", VA = "0x3F2558")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x200012B")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x200012C")]
	public static class HTTP
	{
	}
	[Token(Token = "0x200012D")]
	public static class IAP
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0x3F2668", Offset = "0x3F2668", VA = "0x3F2668")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x3F275C", Offset = "0x3F275C", VA = "0x3F275C")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x3F287C", Offset = "0x3F287C", VA = "0x3F287C")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x3F2984", Offset = "0x3F2984", VA = "0x3F2984")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x3F2AFC", Offset = "0x3F2AFC", VA = "0x3F2AFC")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x3F2CBC", Offset = "0x3F2CBC", VA = "0x3F2CBC")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200012E")]
	public static class LanguagePack
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0x3F2E7C", Offset = "0x3F2E7C", VA = "0x3F2E7C")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x3F2F84", Offset = "0x3F2F84", VA = "0x3F2F84")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x200012F")]
	public static class Livestreaming
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0x3F36B4", Offset = "0x3F36B4", VA = "0x3F36B4")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x3F37BC", Offset = "0x3F37BC", VA = "0x3F37BC")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x3F38C4", Offset = "0x3F38C4", VA = "0x3F38C4")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x3F39CC", Offset = "0x3F39CC", VA = "0x3F39CC")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000130")]
	public static class Media
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0x3F5F2C", Offset = "0x3F5F2C", VA = "0x3F5F2C")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000131")]
	public static class Notifications
	{
		[Token(Token = "0x6000956")]
		[Address(RVA = "0x4050F0", Offset = "0x4050F0", VA = "0x4050F0")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x4051F8", Offset = "0x4051F8", VA = "0x4051F8")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x4052F0", Offset = "0x4052F0", VA = "0x4052F0")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000132")]
	public static class Parties
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0x405888", Offset = "0x405888", VA = "0x405888")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x405990", Offset = "0x405990", VA = "0x405990")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000133")]
	public static class Users
	{
		[Token(Token = "0x600095B")]
		[Address(RVA = "0x464F6C", Offset = "0x464F6C", VA = "0x464F6C")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x465088", Offset = "0x465088", VA = "0x465088")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x450590", Offset = "0x450590", VA = "0x450590")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x465194", Offset = "0x465194", VA = "0x465194")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x4652A0", Offset = "0x4652A0", VA = "0x4652A0")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x4653AC", Offset = "0x4653AC", VA = "0x4653AC")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x465508", Offset = "0x465508", VA = "0x465508")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x465624", Offset = "0x465624", VA = "0x465624")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x465730", Offset = "0x465730", VA = "0x465730")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x46583C", Offset = "0x46583C", VA = "0x46583C")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x465958", Offset = "0x465958", VA = "0x465958")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x465A64", Offset = "0x465A64", VA = "0x465A64")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x465C28", Offset = "0x465C28", VA = "0x465C28")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000134")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x400057F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDD8C", Offset = "0x2DDD8C")]
		Success = 0,
		[Token(Token = "0x4000580")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDDC0", Offset = "0x2DDDC0")]
		Uninitialized = -1,
		[Token(Token = "0x4000581")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDDFC", Offset = "0x2DDDFC")]
		PreLoaded = -2,
		[Token(Token = "0x4000582")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDE34", Offset = "0x2DDE34")]
		FileInvalid = -3,
		[Token(Token = "0x4000583")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDE70", Offset = "0x2DDE70")]
		SignatureInvalid = -4,
		[Token(Token = "0x4000584")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDEB0", Offset = "0x2DDEB0")]
		UnableToVerify = -5,
		[Token(Token = "0x4000585")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDEF0", Offset = "0x2DDEF0")]
		VersionMismatch = -6,
		[Token(Token = "0x4000586")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDF30", Offset = "0x2DDF30")]
		Unknown = -7,
		[Token(Token = "0x4000587")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDF64", Offset = "0x2DDF64")]
		InvalidCredentials = -8,
		[Token(Token = "0x4000588")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DDFA4", Offset = "0x2DDFA4")]
		NotEntitled = -9
	}
	[Token(Token = "0x2000135")]
	public static class PlatformInternal
	{
		[Token(Token = "0x2000254")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4000A65")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4000A66")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4000A67")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4000A68")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4000A69")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4000A6A")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4000A6B")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4000A6C")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4000A6D")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4000A6E")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4000A6F")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4000A70")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4000A71")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4000A72")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4000A73")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x4000A74")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x4000A75")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4000A76")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4000A77")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x4000A78")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x4000A79")]
			Party_Create = 450042703u,
			[Token(Token = "0x4000A7A")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4000A7B")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4000A7C")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4000A7D")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4000A7E")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4000A7F")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4000A80")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4000A81")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4000A82")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4000A83")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x4000A84")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x4000A85")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x4000A86")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x4000A87")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4000A88")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4000A89")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4000A8A")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4000A8B")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4000A8C")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4000A8D")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4000A8E")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4000A8F")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4000A90")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4000A91")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x2000255")]
		public static class HTTP
		{
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x405AA4", Offset = "0x405AA4", VA = "0x405AA4")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x405A28", Offset = "0x405A28", VA = "0x405A28")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x3F8ED8", Offset = "0x3F8ED8", VA = "0x3F8ED8")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000136")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[SerializeField]
		private bool ovrEnableARM64Support;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x17000079")]
		public static string AppID
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x3F2524", Offset = "0x3F2524", VA = "0x3F2524")]
			get
			{
				return null;
			}
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x405CB0", Offset = "0x405CB0", VA = "0x405CB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public static string MobileAppID
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0x3F24FC", Offset = "0x3F24FC", VA = "0x3F24FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600096D")]
			[Address(RVA = "0x405CDC", Offset = "0x405CDC", VA = "0x405CDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x3F20AC", Offset = "0x3F20AC", VA = "0x3F20AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x405D08", Offset = "0x405D08", VA = "0x405D08")]
			set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public static bool EnableARM64Support
		{
			[Token(Token = "0x6000970")]
			[Address(RVA = "0x405D34", Offset = "0x405D34", VA = "0x405D34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000971")]
			[Address(RVA = "0x405D5C", Offset = "0x405D5C", VA = "0x405D5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x405B3C", Offset = "0x405B3C", VA = "0x405B3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x405D88", Offset = "0x405D88", VA = "0x405D88")]
			set
			{
			}
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x405DEC", Offset = "0x405DEC", VA = "0x405DEC")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x6000975")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000976")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}
	}
	[Token(Token = "0x2000138")]
	public class Request
	{
		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2DE020", Offset = "0x2DE020")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x1700007E")]
		public ulong RequestID
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x3EFEE8", Offset = "0x3EFEE8", VA = "0x3EFEE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E16CC", Offset = "0x2E16CC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000979")]
			[Address(RVA = "0x405E64", Offset = "0x405E64", VA = "0x405E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E16DC", Offset = "0x2E16DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x3F2640", Offset = "0x3F2640", VA = "0x3F2640")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x405E74", Offset = "0x405E74", VA = "0x405E74")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x3F0D34", Offset = "0x3F0D34", VA = "0x3F0D34")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000139")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4000590")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE030", Offset = "0x2DE030")]
		Unknown,
		[Token(Token = "0x4000591")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE064", Offset = "0x2DE064")]
		AreIn,
		[Token(Token = "0x4000592")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE098", Offset = "0x2DE098")]
		AreKicked,
		[Token(Token = "0x4000593")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE0D0", Offset = "0x2DE0D0")]
		CanJoin,
		[Token(Token = "0x4000594")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE108", Offset = "0x2DE108")]
		IsFull,
		[Token(Token = "0x4000595")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE13C", Offset = "0x2DE13C")]
		NoViewer,
		[Token(Token = "0x4000596")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE174", Offset = "0x2DE174")]
		PolicyPrevents
	}
	[Token(Token = "0x200013A")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x4000598")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE1B0", Offset = "0x2DE1B0")]
		None,
		[Token(Token = "0x4000599")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE1E4", Offset = "0x2DE1E4")]
		Everyone,
		[Token(Token = "0x400059A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE21C", Offset = "0x2DE21C")]
		FriendsOfMembers,
		[Token(Token = "0x400059B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE25C", Offset = "0x2DE25C")]
		FriendsOfOwner,
		[Token(Token = "0x400059C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE29C", Offset = "0x2DE29C")]
		InvitedUsers,
		[Token(Token = "0x400059D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE2D8", Offset = "0x2DE2D8")]
		Unknown
	}
	[Token(Token = "0x200013B")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x400059F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE30C", Offset = "0x2DE30C")]
		Unknown,
		[Token(Token = "0x40005A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE340", Offset = "0x2DE340")]
		Lock,
		[Token(Token = "0x40005A1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE374", Offset = "0x2DE374")]
		Unlock
	}
	[Token(Token = "0x200013C")]
	public class RoomOptions
	{
		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x405F00", Offset = "0x405F00", VA = "0x405F00")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x405F90", Offset = "0x405F90", VA = "0x405F90")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x406028", Offset = "0x406028", VA = "0x406028")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x4060B0", Offset = "0x4060B0", VA = "0x4060B0")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x406140", Offset = "0x406140", VA = "0x406140")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x4061D0", Offset = "0x4061D0", VA = "0x4061D0")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x406260", Offset = "0x406260", VA = "0x406260")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x4062F0", Offset = "0x4062F0", VA = "0x4062F0")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x406394", Offset = "0x406394", VA = "0x406394")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x406424", Offset = "0x406424", VA = "0x406424")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x40647C", Offset = "0x40647C", VA = "0x40647C", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public enum RoomType
	{
		[Token(Token = "0x40005A4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE3A8", Offset = "0x2DE3A8")]
		Unknown,
		[Token(Token = "0x40005A5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE3DC", Offset = "0x2DE3DC")]
		Matchmaking,
		[Token(Token = "0x40005A6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE414", Offset = "0x2DE414")]
		Moderated,
		[Token(Token = "0x40005A7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE44C", Offset = "0x2DE44C")]
		Private,
		[Token(Token = "0x40005A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE480", Offset = "0x2DE480")]
		Solo
	}
	[Token(Token = "0x200013E")]
	public enum SdkAccountType
	{
		[Token(Token = "0x40005AA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE4B4", Offset = "0x2DE4B4")]
		Unknown,
		[Token(Token = "0x40005AB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE4E8", Offset = "0x2DE4E8")]
		Oculus,
		[Token(Token = "0x40005AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE51C", Offset = "0x2DE51C")]
		FacebookGameroom
	}
	[Token(Token = "0x200013F")]
	public enum SendPolicy
	{
		[Token(Token = "0x40005AE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE55C", Offset = "0x2DE55C")]
		Unreliable,
		[Token(Token = "0x40005AF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE594", Offset = "0x2DE594")]
		Reliable,
		[Token(Token = "0x40005B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE5CC", Offset = "0x2DE5CC")]
		Unknown
	}
	[Token(Token = "0x2000140")]
	public enum ServiceProvider
	{
		[Token(Token = "0x40005B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE600", Offset = "0x2DE600")]
		Unknown,
		[Token(Token = "0x40005B3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE634", Offset = "0x2DE634")]
		Dropbox,
		[Token(Token = "0x40005B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE668", Offset = "0x2DE668")]
		Facebook,
		[Token(Token = "0x40005B5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE6A0", Offset = "0x2DE6A0")]
		Google,
		[Token(Token = "0x40005B6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE6D4", Offset = "0x2DE6D4")]
		Instagram,
		[Token(Token = "0x40005B7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE70C", Offset = "0x2DE70C")]
		RemoteMedia
	}
	[Token(Token = "0x2000141")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x40005B9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE748", Offset = "0x2DE748")]
		Unknown,
		[Token(Token = "0x40005BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE77C", Offset = "0x2DE77C")]
		Shared,
		[Token(Token = "0x40005BB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE7B0", Offset = "0x2DE7B0")]
		Canceled
	}
	[Token(Token = "0x2000142")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x2000256")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2D4B98", Offset = "0x2D4B98")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x464470", Offset = "0x464470", VA = "0x464470")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x464744", Offset = "0x464744", VA = "0x464744")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x1700007F")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6000989")]
			[Address(RVA = "0x464A98", Offset = "0x464A98", VA = "0x464A98")]
			get
			{
				return null;
			}
			[Token(Token = "0x600098A")]
			[Address(RVA = "0x464AFC", Offset = "0x464AFC", VA = "0x464AFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x464B00", Offset = "0x464B00", VA = "0x464B00")]
			get
			{
				return null;
			}
			[Token(Token = "0x600098C")]
			[Address(RVA = "0x464B64", Offset = "0x464B64", VA = "0x464B64")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x4646E0", Offset = "0x4646E0", VA = "0x4646E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600098E")]
			[Address(RVA = "0x464B68", Offset = "0x464B68", VA = "0x464B68")]
			set
			{
			}
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x464B6C", Offset = "0x464B6C", VA = "0x464B6C")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x40005BD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE7E8", Offset = "0x2DE7E8")]
		Unknown,
		[Token(Token = "0x40005BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE81C", Offset = "0x2DE81C")]
		Unavailable,
		[Token(Token = "0x40005BF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE854", Offset = "0x2DE854")]
		Suppressed,
		[Token(Token = "0x40005C0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE88C", Offset = "0x2DE88C")]
		Active
	}
	[Token(Token = "0x2000145")]
	public enum TimeWindow
	{
		[Token(Token = "0x40005C2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE8C0", Offset = "0x2DE8C0")]
		Unknown,
		[Token(Token = "0x40005C3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE8F4", Offset = "0x2DE8F4")]
		OneHour,
		[Token(Token = "0x40005C4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE92C", Offset = "0x2DE92C")]
		OneDay,
		[Token(Token = "0x40005C5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE960", Offset = "0x2DE960")]
		OneWeek,
		[Token(Token = "0x40005C6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE998", Offset = "0x2DE998")]
		ThirtyDays,
		[Token(Token = "0x40005C7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DE9D0", Offset = "0x2DE9D0")]
		NinetyDays
	}
	[Token(Token = "0x2000146")]
	public class UserOptions
	{
		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x464B74", Offset = "0x464B74", VA = "0x464B74")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x464C04", Offset = "0x464C04", VA = "0x464C04")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x464C94", Offset = "0x464C94", VA = "0x464C94")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x464D24", Offset = "0x464D24", VA = "0x464D24")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x464DAC", Offset = "0x464DAC", VA = "0x464DAC")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x464E3C", Offset = "0x464E3C", VA = "0x464E3C")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x464E94", Offset = "0x464E94", VA = "0x464E94", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public enum UserOrdering
	{
		[Token(Token = "0x40005CA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEA08", Offset = "0x2DEA08")]
		Unknown,
		[Token(Token = "0x40005CB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEA3C", Offset = "0x2DEA3C")]
		None,
		[Token(Token = "0x40005CC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEA70", Offset = "0x2DEA70")]
		PresenceAlphabetical
	}
	[Token(Token = "0x2000148")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x40005CE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEAB4", Offset = "0x2DEAB4")]
		Unknown,
		[Token(Token = "0x40005CF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEAE8", Offset = "0x2DEAE8")]
		Online,
		[Token(Token = "0x40005D0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEB1C", Offset = "0x2DEB1C")]
		Offline
	}
	[Token(Token = "0x2000149")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x2000257")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4000A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4000A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float[] scratchBuffer;

			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x466FAC", Offset = "0x466FAC", VA = "0x466FAC")]
			private void Awake()
			{
			}

			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x467084", Offset = "0x467084", VA = "0x467084")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x467788", Offset = "0x467788", VA = "0x467788")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audioSource;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float peakAmplitude;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x17000082")]
		public ulong senderID
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x463AFC", Offset = "0x463AFC", VA = "0x463AFC")]
			set
			{
			}
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x466698", Offset = "0x466698", VA = "0x466698")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x46669C", Offset = "0x46669C", VA = "0x46669C")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x4666D0", Offset = "0x4666D0", VA = "0x4666D0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x466A9C", Offset = "0x466A9C", VA = "0x466A9C")]
		private void Start()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x466AC8", Offset = "0x466AC8", VA = "0x466AC8", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x466B40", Offset = "0x466B40", VA = "0x466B40")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x466BE8", Offset = "0x466BE8", VA = "0x466BE8")]
		private void Update()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x466FA0", Offset = "0x466FA0", VA = "0x466FA0")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public enum VoipBitrate
	{
		[Token(Token = "0x40005D8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEB50", Offset = "0x2DEB50")]
		Unknown,
		[Token(Token = "0x40005D9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEB84", Offset = "0x2DEB84")]
		B16000,
		[Token(Token = "0x40005DA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEBB8", Offset = "0x2DEBB8")]
		B24000,
		[Token(Token = "0x40005DB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEBEC", Offset = "0x2DEBEC")]
		B32000,
		[Token(Token = "0x40005DC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEC20", Offset = "0x2DEC20")]
		B64000,
		[Token(Token = "0x40005DD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEC54", Offset = "0x2DEC54")]
		B96000,
		[Token(Token = "0x40005DE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEC88", Offset = "0x2DEC88")]
		B128000
	}
	[Token(Token = "0x200014B")]
	public enum VoipDtxState
	{
		[Token(Token = "0x40005E0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DECBC", Offset = "0x2DECBC")]
		Unknown,
		[Token(Token = "0x40005E1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DECF0", Offset = "0x2DECF0")]
		Enabled,
		[Token(Token = "0x40005E2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DED24", Offset = "0x2DED24")]
		Disabled
	}
	[Token(Token = "0x200014C")]
	public enum VoipMuteState
	{
		[Token(Token = "0x40005E4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DED5C", Offset = "0x2DED5C")]
		Unknown,
		[Token(Token = "0x40005E5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DED90", Offset = "0x2DED90")]
		Muted,
		[Token(Token = "0x40005E6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEDC4", Offset = "0x2DEDC4")]
		Unmuted
	}
	[Token(Token = "0x200014D")]
	public class VoipOptions
	{
		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr Handle;

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x467790", Offset = "0x467790", VA = "0x467790")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x467820", Offset = "0x467820", VA = "0x467820")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x4678B0", Offset = "0x4678B0", VA = "0x4678B0")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x466494", Offset = "0x466494", VA = "0x466494")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x467940", Offset = "0x467940", VA = "0x467940", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong senderID;

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x467A18", Offset = "0x467A18", VA = "0x467A18", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x467B08", Offset = "0x467B08", VA = "0x467B08", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x467B18", Offset = "0x467B18", VA = "0x467B18", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x467BE0", Offset = "0x467BE0", VA = "0x467BE0", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x466B38", Offset = "0x466B38", VA = "0x466B38")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x40005EA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEDF8", Offset = "0x2DEDF8")]
		Unknown,
		[Token(Token = "0x40005EB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEE2C", Offset = "0x2DEE2C")]
		HZ24000,
		[Token(Token = "0x40005EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEE60", Offset = "0x2DEE60")]
		HZ44100,
		[Token(Token = "0x40005ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x2DEE94", Offset = "0x2DEE94")]
		HZ48000
	}
	[Token(Token = "0x2000150")]
	public class WindowsPlatform
	{
		[Token(Token = "0x2000258")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2D4BAC", Offset = "0x2D4BAC")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x467BE4", Offset = "0x467BE4", VA = "0x467BE4")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x467CD8", Offset = "0x467CD8", VA = "0x467CD8")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x467D28", Offset = "0x467D28", VA = "0x467D28")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x467E5C", Offset = "0x467E5C", VA = "0x467E5C")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x467FDC", Offset = "0x467FDC", VA = "0x467FDC")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x2000151")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string RecordingUuid;

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x3F9B80", Offset = "0x3F9B80", VA = "0x3F9B80")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class AchievementDefinition
	{
		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly AchievementType Type;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Target;

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x403400", Offset = "0x403400", VA = "0x403400")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x3F9D30", Offset = "0x3F9D30", VA = "0x3F9D30")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class AchievementProgress
	{
		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bitfield;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong Count;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Name;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x4034C8", Offset = "0x4034C8", VA = "0x4034C8")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x3FA0B0", Offset = "0x3FA0B0", VA = "0x3FA0B0")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class AchievementUpdate
	{
		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Name;

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x3FA430", Offset = "0x3FA430", VA = "0x3FA430")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class ApplicationVersion
	{
		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CurrentCode;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string CurrentName;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int LatestCode;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string LatestName;

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x3FA5F0", Offset = "0x3FA5F0", VA = "0x3FA5F0")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class AssetDetails
	{
		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetId;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AssetType;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string DownloadStatus;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string IapStatus;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DEEC8", Offset = "0x2DEEC8")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x3FA7D0", Offset = "0x3FA7D0", VA = "0x3FA7D0")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x3FAA14", Offset = "0x3FAA14", VA = "0x3FAA14")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly bool Success;

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x3FAD54", Offset = "0x3FAD54", VA = "0x3FAD54")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly bool Success;

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x3FAF34", Offset = "0x3FAF34", VA = "0x3FAF34")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetId;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Filepath;

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x3FB114", Offset = "0x3FB114", VA = "0x3FB114")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint BytesTotal;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int BytesTransferred;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool Completed;

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x3FB2D4", Offset = "0x3FB2D4", VA = "0x3FB2D4")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CountdownMS;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string LaunchDetails;

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x3FB4C4", Offset = "0x3FB4C4", VA = "0x3FB4C4")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x3FB694", Offset = "0x3FB694", VA = "0x3FB694")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string SocialContext;

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x403668", Offset = "0x403668", VA = "0x403668")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x3FB8B0", Offset = "0x3FB8B0", VA = "0x3FB8B0")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x3FBBF0", Offset = "0x3FBBF0", VA = "0x3FBBF0")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class CloudStorageData
	{
		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly byte[] Data;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DataSize;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Key;

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x3FBDEC", Offset = "0x3FBDEC", VA = "0x3FBDEC")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Counter;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint DataSize;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string ExtraData;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Key;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong SaveTime;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly string VersionHandle;

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x3FC34C", Offset = "0x3FC34C", VA = "0x3FC34C")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x3FBFCC", Offset = "0x3FBFCC", VA = "0x3FBFCC")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Bucket;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string Key;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string VersionHandle;

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x3FC56C", Offset = "0x3FC56C", VA = "0x3FC56C")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x2D486C", Offset = "0x2D486C")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x17000083")]
		public int Count
		{
			[Token(Token = "0x60009C6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000084")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x60009C7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		public T Item
		{
			[Token(Token = "0x60009C9")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60009CA")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2E26E4", Offset = "0x2E26E4")]
		public List<T> Data
		{
			[Token(Token = "0x60009D5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		public bool HasNextPage
		{
			[Token(Token = "0x60009D6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000088")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x60009D7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000089")]
		public string NextUrl
		{
			[Token(Token = "0x60009D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		public string PreviousUrl
		{
			[Token(Token = "0x60009D9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C8")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x60009CB")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60009CC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60009CD")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CE")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60009CF")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60009D0")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60009D1")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D2")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60009D3")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x60009D4")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60009DA")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class Error
	{
		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int Code;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int HttpCode;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Message;

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x3F62F4", Offset = "0x3F62F4", VA = "0x3F62F4")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] Payload;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly bool IsCompleted;

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x3FC74C", Offset = "0x3FC74C", VA = "0x3FC74C")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class InstalledApplication
	{
		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string ApplicationId;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string PackageName;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Status;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int VersionCode;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string VersionName;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x403710", Offset = "0x403710", VA = "0x403710")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x3FCA74", Offset = "0x3FCA74", VA = "0x3FCA74")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string EnglishName;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string NativeName;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Tag;

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x4035B0", Offset = "0x4035B0", VA = "0x4035B0")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidBlock;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidCancel;

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x3FCE20", Offset = "0x3FCE20", VA = "0x3FCE20")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class LaunchDetails
	{
		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string LaunchSource;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DEF1C", Offset = "0x2DEF1C")]
		public readonly UserList Users;

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x4037E8", Offset = "0x4037E8", VA = "0x4037E8")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x3FCFE0", Offset = "0x3FCFE0", VA = "0x3FCFE0")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong UserReportId;

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x3FD20C", Offset = "0x3FD20C", VA = "0x3FD20C")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool DidUnblock;

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x3FD438", Offset = "0x3FD438", VA = "0x3FD438")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000172")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int Rank;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long Score;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x403904", Offset = "0x403904", VA = "0x403904")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong TotalCount;

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x3FD6F0", Offset = "0x3FD6F0", VA = "0x3FD6F0")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class LinkedAccount
	{
		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string AccessToken;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string UserId;

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x403A10", Offset = "0x403A10", VA = "0x403A10")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000175")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x3FDB00", Offset = "0x3FDB00", VA = "0x3FDB00")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x3FDEAC", Offset = "0x3FDEAC", VA = "0x3FDEAC")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x3FE0C8", Offset = "0x3FE0C8", VA = "0x3FE0C8")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public readonly bool IsPaused;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int LivestreamingType;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool MicEnabled;

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x3FE278", Offset = "0x3FE278", VA = "0x3FE278")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly int CommentCount;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly int ReactionCount;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string TotalViews;

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x3FE4D4", Offset = "0x3FE4D4", VA = "0x3FE4D4")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x3FE6A4", Offset = "0x3FE6A4", VA = "0x3FE6A4")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool CanMatch;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string TraceId;

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x403CF0", Offset = "0x403CF0", VA = "0x403CF0")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x403AC8", Offset = "0x403AC8", VA = "0x403AC8")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly RoomList Rooms;

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x3FE91C", Offset = "0x3FE91C", VA = "0x3FE91C")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly User UserOptional;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DEF50", Offset = "0x2DEF50")]
		public readonly User User;

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x403DC8", Offset = "0x403DC8", VA = "0x403DC8")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x403EBC", Offset = "0x403EBC", VA = "0x403EBC")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DEFA0", Offset = "0x2DEFA0")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint AverageWait;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Pool;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string RequestHash;

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x3FEB24", Offset = "0x3FEB24", VA = "0x3FEB24")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly Room Room;

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x3FEDA4", Offset = "0x3FEDA4", VA = "0x3FEDA4")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly uint DrawCount;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly uint LossCount;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint WinCount;

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x3FF404", Offset = "0x3FF404", VA = "0x3FF404")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class NetworkingPeer
	{
		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2DEFFC", Offset = "0x2DEFFC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2DF00C", Offset = "0x2DF00C")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x1700008B")]
		public ulong ID
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x4040FC", Offset = "0x4040FC", VA = "0x4040FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E16EC", Offset = "0x2E16EC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x4040E4", Offset = "0x4040E4", VA = "0x4040E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E16FC", Offset = "0x2E16FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public PeerConnectionState State
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x404104", Offset = "0x404104", VA = "0x404104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E170C", Offset = "0x2E170C")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x4040F4", Offset = "0x4040F4", VA = "0x4040F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E171C", Offset = "0x2E171C")]
			private set
			{
			}
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x3FF608", Offset = "0x3FF608", VA = "0x3FF608")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class OrgScopedID
	{
		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x3FF750", Offset = "0x3FF750", VA = "0x3FF750")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class Party
	{
		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DF01C", Offset = "0x2DF01C")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User LeaderOptional;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DF050", Offset = "0x2DF050")]
		public readonly User Leader;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DF0A4", Offset = "0x2DF0A4")]
		public readonly Room Room;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DF0D8", Offset = "0x2DF0D8")]
		public readonly UserList Users;

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x3FF96C", Offset = "0x3FF96C", VA = "0x3FF96C")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class PartyID
	{
		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x3FFD5C", Offset = "0x3FFD5C", VA = "0x3FFD5C")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong PartyId;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong SenderId;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string UserAlias;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong UserId;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserName;

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x400024", Offset = "0x400024", VA = "0x400024")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class Pid
	{
		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Id;

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x40410C", Offset = "0x40410C", VA = "0x40410C")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x400234", Offset = "0x400234", VA = "0x400234")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class PingResult
	{
		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2DF10C", Offset = "0x2DF10C")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x1700008D")]
		public ulong ID
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x4041B4", Offset = "0x4041B4", VA = "0x4041B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E172C", Offset = "0x2E172C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x4041A4", Offset = "0x4041A4", VA = "0x4041A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E173C", Offset = "0x2E173C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x4041BC", Offset = "0x4041BC", VA = "0x4041BC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700008F")]
		public bool IsTimeout
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x404250", Offset = "0x404250", VA = "0x404250")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x400624", Offset = "0x400624", VA = "0x400624")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class PlatformInitialize
	{
		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x400784", Offset = "0x400784", VA = "0x400784")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class Product
	{
		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Description;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Sku;

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x4042B8", Offset = "0x4042B8", VA = "0x4042B8")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x400934", Offset = "0x400934", VA = "0x400934")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class Purchase
	{
		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Sku;

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x400CB4", Offset = "0x400CB4", VA = "0x400CB4")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x400EB0", Offset = "0x400EB0", VA = "0x400EB0")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class Room
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string Description;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DF11C", Offset = "0x2DF11C")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DF150", Offset = "0x2DF150")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public readonly uint MaxUsers;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string Name;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly User OwnerOptional;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DF1A8", Offset = "0x2DF1A8")]
		public readonly User Owner;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public readonly RoomType Type;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DF1FC", Offset = "0x2DF1FC")]
		public readonly UserList Users;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly uint Version;

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x3FEFAC", Offset = "0x3FEFAC", VA = "0x3FEFAC")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x4018B8", Offset = "0x4018B8", VA = "0x4018B8")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong RoomID;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong SenderID;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x401348", Offset = "0x401348", VA = "0x401348")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x401538", Offset = "0x401538", VA = "0x401538")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class SdkAccount
	{
		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong UserId;

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x404380", Offset = "0x404380", VA = "0x404380")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x401E68", Offset = "0x401E68", VA = "0x401E68")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class ShareMediaResult
	{
		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x4021A8", Offset = "0x4021A8", VA = "0x4021A8")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class SystemPermission
	{
		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool HasPermission;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x4024AC", Offset = "0x4024AC", VA = "0x4024AC")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class SystemVoipState
	{
		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x40266C", Offset = "0x40266C", VA = "0x40266C")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class User
	{
		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong ID;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ImageURL;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly string InviteToken;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string OculusID;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly string Presence;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x40282C", Offset = "0x40282C", VA = "0x40282C")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x402DBC", Offset = "0x402DBC", VA = "0x402DBC")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class UserAndRoom
	{
		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x2DF230", Offset = "0x2DF230")]
		public readonly Room Room;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly User User;

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x404428", Offset = "0x404428", VA = "0x404428")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x402A3C", Offset = "0x402A3C", VA = "0x402A3C")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class UserProof
	{
		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string Value;

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x40313C", Offset = "0x40313C", VA = "0x40313C")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class UserReportID
	{
		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool DidCancel;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x403358", Offset = "0x403358", VA = "0x403358")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x200019F")]
	public class P2PManager
	{
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong m_remoteID;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PeerConnectionState m_state;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 receivedPosition;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion receivedRotation;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float receivedTime;

		[Token(Token = "0x17000090")]
		public bool Connected
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x45DFF0", Offset = "0x45DFF0", VA = "0x45DFF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000091")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x6000A20")]
			[Address(RVA = "0x45EA08", Offset = "0x45EA08", VA = "0x45EA08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x45DBFC", Offset = "0x45DBFC", VA = "0x45DBFC")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x45DDD4", Offset = "0x45DDD4", VA = "0x45DDD4")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x45DFB4", Offset = "0x45DFB4", VA = "0x45DFB4")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x45E000", Offset = "0x45E000", VA = "0x45E000")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x45E2B0", Offset = "0x45E2B0", VA = "0x45E2B0")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x45EA48", Offset = "0x45EA48", VA = "0x45EA48")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x45ECB8", Offset = "0x45ECB8", VA = "0x45ECB8")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x45ED74", Offset = "0x45ED74", VA = "0x45ED74")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x2000259")]
		public enum State
		{
			[Token(Token = "0x4000A95")]
			INITIALIZING,
			[Token(Token = "0x4000A96")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x4000A97")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x4000A98")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x4000A99")]
			HANGUP
		}

		[Token(Token = "0x200025A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4BC0", Offset = "0x2D4BC0")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RoomManager.Invite invite;

			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x461960", Offset = "0x461960", VA = "0x461960")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x461974", Offset = "0x461974", VA = "0x461974")]
			internal void <SetActiveInvites>b__0()
			{
			}
		}

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private State m_currentState;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RoomManager m_roomManager;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VoipManager m_voipManager;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_myID;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_myOculusID;

		[Token(Token = "0x17000092")]
		public static State CurrentState
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x460794", Offset = "0x460794", VA = "0x460794")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x17000093")]
		public static ulong MyID
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x45DE7C", Offset = "0x45DE7C", VA = "0x45DE7C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000094")]
		public static string MyOculusID
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x460834", Offset = "0x460834", VA = "0x460834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x45F3C4", Offset = "0x45F3C4", VA = "0x45F3C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x45F6C8", Offset = "0x45F6C8", VA = "0x45F6C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x4600F4", Offset = "0x4600F4", VA = "0x4600F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x4601A4", Offset = "0x4601A4", VA = "0x4601A4")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x4603AC", Offset = "0x4603AC", VA = "0x4603AC")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x460580", Offset = "0x460580", VA = "0x460580")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x4602C8", Offset = "0x4602C8", VA = "0x4602C8")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x4609D8", Offset = "0x4609D8", VA = "0x4609D8")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x460B4C", Offset = "0x460B4C", VA = "0x460B4C")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x460B74", Offset = "0x460B74", VA = "0x460B74")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x460B7C", Offset = "0x460B7C", VA = "0x460B7C")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x45F944", Offset = "0x45F944", VA = "0x45F944")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x45E630", Offset = "0x45E630", VA = "0x45E630")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x460ED8", Offset = "0x460ED8", VA = "0x460ED8")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x461968", Offset = "0x461968", VA = "0x461968")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class RoomManager
	{
		[Token(Token = "0x200025B")]
		public struct Invite
		{
			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x1DF970", Offset = "0x1DF970", VA = "0x1DF970")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong m_roomID;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private User m_remoteUser;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_nextPollTime;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private List<Invite> m_invites;

		[Token(Token = "0x17000095")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x460DAC", Offset = "0x460DAC", VA = "0x460DAC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000096")]
		public string RemoteOculusID
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x4619FC", Offset = "0x4619FC", VA = "0x4619FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x45F4F0", Offset = "0x45F4F0", VA = "0x45F4F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x45FF1C", Offset = "0x45FF1C", VA = "0x45FF1C")]
		public RoomManager()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x461A74", Offset = "0x461A74", VA = "0x461A74")]
		private void LaunchedFromAcceptingInviteCallback(Message<string> msg)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x46054C", Offset = "0x46054C", VA = "0x46054C")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x460A78", Offset = "0x460A78", VA = "0x460A78")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x461C04", Offset = "0x461C04", VA = "0x461C04")]
		private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x461DA0", Offset = "0x461DA0", VA = "0x461DA0")]
		private void OnLaunchInviteWorkflowComplete(Message msg)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x45F534", Offset = "0x45F534", VA = "0x45F534")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x461E44", Offset = "0x461E44", VA = "0x461E44")]
		private void GetRoomInviteNotificationsCallback(Message msg_untyped)
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x462358", Offset = "0x462358", VA = "0x462358")]
		private void GetRoomInfoCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x460CD0", Offset = "0x460CD0", VA = "0x460CD0")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x4626B4", Offset = "0x4626B4", VA = "0x4626B4")]
		private void JoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x462EBC", Offset = "0x462EBC", VA = "0x462EBC")]
		private void RoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x460608", Offset = "0x460608", VA = "0x460608")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class VoipManager
	{
		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong m_remoteID;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PeerConnectionState m_state;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x17000098")]
		public bool Connected
		{
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0x460EC8", Offset = "0x460EC8", VA = "0x460EC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x460014", Offset = "0x460014", VA = "0x460014")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x460DC4", Offset = "0x460DC4", VA = "0x460DC4")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x4606B4", Offset = "0x4606B4", VA = "0x4606B4")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x463D80", Offset = "0x463D80", VA = "0x463D80")]
		private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x4640F4", Offset = "0x4640F4", VA = "0x4640F4")]
		private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Button m_currentButton;

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x463718", Offset = "0x463718", VA = "0x463718")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x4639C4", Offset = "0x4639C4", VA = "0x4639C4")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x20001A4")]
	public class AchievementsManager
	{
		[Token(Token = "0x40006E6")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x17000099")]
		public bool LikesToWin
		{
			[Token(Token = "0x6000A51")]
			[Address(RVA = "0x450C5C", Offset = "0x450C5C", VA = "0x450C5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x450C64", Offset = "0x450C64", VA = "0x450C64")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x450DC8", Offset = "0x450DC8", VA = "0x450DC8")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x450E48", Offset = "0x450E48", VA = "0x450E48")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x450E50", Offset = "0x450E50", VA = "0x450E50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E174C", Offset = "0x2E174C")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x450800", Offset = "0x450800", VA = "0x450800")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x450BCC", Offset = "0x450BCC", VA = "0x450BCC")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x45113C", Offset = "0x45113C", VA = "0x45113C")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x451144", Offset = "0x451144", VA = "0x451144")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x451430", Offset = "0x451430", VA = "0x451430")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x200025C")]
		private enum BasketPhase
		{
			[Token(Token = "0x4000A9E")]
			NONE,
			[Token(Token = "0x4000A9F")]
			TOP,
			[Token(Token = "0x4000AA0")]
			BOTH,
			[Token(Token = "0x4000AA1")]
			BOTTOM
		}

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private BasketPhase m_phase;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Player m_owningPlayer;

		[Token(Token = "0x1700009A")]
		public Player Player
		{
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x451438", Offset = "0x451438", VA = "0x451438")]
			set
			{
			}
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x451440", Offset = "0x451440", VA = "0x451440")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x451578", Offset = "0x451578", VA = "0x451578")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x4517CC", Offset = "0x4517CC", VA = "0x4517CC")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x40006EA")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_eol;

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x4517D4", Offset = "0x4517D4", VA = "0x4517D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x4518AC", Offset = "0x4518AC", VA = "0x4518AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x451A20", Offset = "0x451A20", VA = "0x451A20")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x40006EF")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x1700009B")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0x451AE8", Offset = "0x451AE8", VA = "0x451AE8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x451AFC", Offset = "0x451AFC", VA = "0x451AFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0x451B08", Offset = "0x451B08", VA = "0x451B08")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0x451B1C", Offset = "0x451B1C", VA = "0x451B1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0x451B28", Offset = "0x451B28", VA = "0x451B28")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0x451B3C", Offset = "0x451B3C", VA = "0x451B3C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x451B48", Offset = "0x451B48", VA = "0x451B48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x451D40", Offset = "0x451D40", VA = "0x451D40")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x4521B8", Offset = "0x4521B8", VA = "0x4521B8")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class LeaderboardManager
	{
		[Token(Token = "0x200025D")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x200025E")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x40006F3")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x40006F4")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x40006F5")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x40006F6")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float m_nextCheckTime;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long m_numWins;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x1700009E")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0x4524B8", Offset = "0x4524B8", VA = "0x4524B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0x452EF4", Offset = "0x452EF4", VA = "0x452EF4")]
			set
			{
			}
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x4521D4", Offset = "0x4521D4", VA = "0x4521D4")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x452238", Offset = "0x452238", VA = "0x452238")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x4524C0", Offset = "0x4524C0", VA = "0x4524C0")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x452378", Offset = "0x452378", VA = "0x452378")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x452EFC", Offset = "0x452EFC", VA = "0x452EFC")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x453838", Offset = "0x453838", VA = "0x453838")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x453904", Offset = "0x453904", VA = "0x453904")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x170000A0")]
		public override uint Score
		{
			[Token(Token = "0x6000A74")]
			[Address(RVA = "0x4539A4", Offset = "0x4539A4", VA = "0x4539A4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x453D8C", Offset = "0x453D8C", VA = "0x453D8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x453F88", Offset = "0x453F88", VA = "0x453F88")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x200025F")]
		private enum State
		{
			[Token(Token = "0x4000AA3")]
			UNKNOWN,
			[Token(Token = "0x4000AA4")]
			NONE,
			[Token(Token = "0x4000AA5")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x4000AA6")]
			PRACTICING,
			[Token(Token = "0x4000AA7")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x4000AA8")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x4000AA9")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x4000AAA")]
			PLAYING_MATCH,
			[Token(Token = "0x4000AAB")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private State m_currentState;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_localSlot;

		[Token(Token = "0x170000A1")]
		public float MatchStartTime
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x4549F8", Offset = "0x4549F8", VA = "0x4549F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0x454A18", Offset = "0x454A18", VA = "0x454A18")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x453F8C", Offset = "0x453F8C", VA = "0x453F8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x45467C", Offset = "0x45467C", VA = "0x45467C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x4542C4", Offset = "0x4542C4", VA = "0x4542C4")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x454698", Offset = "0x454698", VA = "0x454698")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x45477C", Offset = "0x45477C", VA = "0x45477C")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x454A20", Offset = "0x454A20", VA = "0x454A20")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x454DBC", Offset = "0x454DBC", VA = "0x454DBC")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x455760", Offset = "0x455760", VA = "0x455760")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x454B08", Offset = "0x454B08", VA = "0x454B08")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x454F18", Offset = "0x454F18", VA = "0x454F18")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x455B64", Offset = "0x455B64", VA = "0x455B64")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x455B78", Offset = "0x455B78", VA = "0x455B78")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x455D7C", Offset = "0x455D7C", VA = "0x455D7C")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x455D8C", Offset = "0x455D8C", VA = "0x455D8C")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x455EC0", Offset = "0x455EC0", VA = "0x455EC0")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x456634", Offset = "0x456634", VA = "0x456634")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x455124", Offset = "0x455124", VA = "0x455124")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x4558EC", Offset = "0x4558EC", VA = "0x4558EC")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x456EA0", Offset = "0x456EA0", VA = "0x456EA0")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class MatchmakingManager
	{
		[Token(Token = "0x2000260")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x2000261")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x400070F")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong m_matchRoom;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x170000A2")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x45704C", Offset = "0x45704C", VA = "0x45704C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x454210", Offset = "0x454210", VA = "0x454210")]
			set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0x457054", Offset = "0x457054", VA = "0x457054")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x45422C", Offset = "0x45422C", VA = "0x45422C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x456F38", Offset = "0x456F38", VA = "0x456F38")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x455C80", Offset = "0x455C80", VA = "0x455C80")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x45705C", Offset = "0x45705C", VA = "0x45705C")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x4573CC", Offset = "0x4573CC", VA = "0x4573CC")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x457520", Offset = "0x457520", VA = "0x457520")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x458040", Offset = "0x458040", VA = "0x458040")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x455580", Offset = "0x455580", VA = "0x455580")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x455D5C", Offset = "0x455D5C", VA = "0x455D5C")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class P2PManager
	{
		[Token(Token = "0x2000262")]
		private class RemotePlayerData
		{
			[Token(Token = "0x4000AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PeerConnectionState state;

			[Token(Token = "0x4000AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public RemotePlayer player;

			[Token(Token = "0x4000AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float remoteTimeOffset;

			[Token(Token = "0x4000AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4000AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x45A5D0", Offset = "0x45A5D0", VA = "0x45A5D0")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x2000263")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x4000716")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x4000717")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000718")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x4000719")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x400071A")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x400071B")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x400071C")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x400071D")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x400071E")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x400071F")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x4000720")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x4000721")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x170000A4")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x45B688", Offset = "0x45B688", VA = "0x45B688")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x454248", Offset = "0x454248", VA = "0x454248")]
			set
			{
			}
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x458984", Offset = "0x458984", VA = "0x458984")]
		public P2PManager()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x458B50", Offset = "0x458B50", VA = "0x458B50")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x457D54", Offset = "0x457D54", VA = "0x457D54")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x45868C", Offset = "0x45868C", VA = "0x45868C")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x45A65C", Offset = "0x45A65C", VA = "0x45A65C")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x45A998", Offset = "0x45A998", VA = "0x45A998")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x45AFB4", Offset = "0x45AFB4", VA = "0x45AFB4")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x458E08", Offset = "0x458E08", VA = "0x458E08")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x45B588", Offset = "0x45B588", VA = "0x45B588")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x45B2F0", Offset = "0x45B2F0", VA = "0x45B2F0")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x459830", Offset = "0x459830", VA = "0x459830")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x45B94C", Offset = "0x45B94C", VA = "0x45B94C")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x45989C", Offset = "0x45989C", VA = "0x45989C")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x453EAC", Offset = "0x453EAC", VA = "0x453EAC")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x45BEEC", Offset = "0x45BEEC", VA = "0x45BEEC")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x45A0D0", Offset = "0x45A0D0", VA = "0x45A0D0")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x459A34", Offset = "0x459A34", VA = "0x459A34")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x453B40", Offset = "0x453B40", VA = "0x453B40")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x459FEC", Offset = "0x459FEC", VA = "0x459FEC")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x45BBE4", Offset = "0x45BBE4", VA = "0x45BBE4")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x45BC34", Offset = "0x45BC34", VA = "0x45BC34")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x45C82C", Offset = "0x45C82C", VA = "0x45C82C")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x45B198", Offset = "0x45B198", VA = "0x45B198")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x45B254", Offset = "0x45B254", VA = "0x45B254")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x45B90C", Offset = "0x45B90C", VA = "0x45B90C")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x45C010", Offset = "0x45C010", VA = "0x45C010")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x45C158", Offset = "0x45C158", VA = "0x45C158")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x45C6D0", Offset = "0x45C6D0", VA = "0x45C6D0")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x45C78C", Offset = "0x45C78C", VA = "0x45C78C")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x45BFBC", Offset = "0x45BFBC", VA = "0x45BFBC")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x45C100", Offset = "0x45C100", VA = "0x45C100")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001B0")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float lastCollisionTime;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Rigidbody rigidBody;

		[Token(Token = "0x170000A5")]
		public Vector3 velocity
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0x45C0CC", Offset = "0x45C0CC", VA = "0x45C0CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x45C960", Offset = "0x45C960", VA = "0x45C960")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x45BF8C", Offset = "0x45BF8C", VA = "0x45BF8C")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x45C52C", Offset = "0x45C52C", VA = "0x45C52C")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x45C9E8", Offset = "0x45C9E8", VA = "0x45C9E8")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x45CB50", Offset = "0x45CB50", VA = "0x45CB50")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x45CCB8", Offset = "0x45CCB8", VA = "0x45CCB8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x45CCD4", Offset = "0x45CCD4", VA = "0x45CCD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x45CD18", Offset = "0x45CD18", VA = "0x45CD18")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private GoalMover m_goal;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_sendUpdates;

		[Token(Token = "0x170000A6")]
		public bool SendUpdates
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x45CD20", Offset = "0x45CD20", VA = "0x45CD20")]
			set
			{
			}
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x45CD28", Offset = "0x45CD28", VA = "0x45CD28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x45CDB0", Offset = "0x45CDB0", VA = "0x45CDB0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x45CEA0", Offset = "0x45CEA0", VA = "0x45CEA0")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x45BC8C", Offset = "0x45BC8C", VA = "0x45BC8C")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x45CF9C", Offset = "0x45CF9C", VA = "0x45CF9C")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x2000264")]
		public enum State
		{
			[Token(Token = "0x4000AB2")]
			INITIALIZING,
			[Token(Token = "0x4000AB3")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x4000AB4")]
			MATCH_TRANSITION,
			[Token(Token = "0x4000AB5")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x4000AB6")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private P2PManager m_p2p;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private State m_currentState;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ulong m_myID;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_myOculusID;

		[Token(Token = "0x170000A7")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x454188", Offset = "0x454188", VA = "0x454188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public static P2PManager P2P
		{
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0x453AC4", Offset = "0x453AC4", VA = "0x453AC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0x454250", Offset = "0x454250", VA = "0x454250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0x456E20", Offset = "0x456E20", VA = "0x456E20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public static State CurrentState
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x451758", Offset = "0x451758", VA = "0x451758")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170000AC")]
		public static ulong MyID
		{
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x452A14", Offset = "0x452A14", VA = "0x452A14")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000AD")]
		public static string MyOculusID
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0x455640", Offset = "0x455640", VA = "0x455640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x45CFA4", Offset = "0x45CFA4", VA = "0x45CFA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x45CFEC", Offset = "0x45CFEC", VA = "0x45CFEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x45D200", Offset = "0x45D200", VA = "0x45D200")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x45D2B0", Offset = "0x45D2B0", VA = "0x45D2B0")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x45D3A8", Offset = "0x45D3A8", VA = "0x45D3A8")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x4585A8", Offset = "0x4585A8", VA = "0x4585A8")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x45D4D8", Offset = "0x45D4D8", VA = "0x45D4D8")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x45D4E0", Offset = "0x45D4E0", VA = "0x45D4E0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x454CB8", Offset = "0x454CB8", VA = "0x454CB8")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x45D514", Offset = "0x45D514", VA = "0x45D514")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x4000734")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x4000735")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x4000736")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private uint m_score;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Text m_scoreUI;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_heldBall;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_nextSpawnTime;

		[Token(Token = "0x170000AE")]
		public virtual uint Score
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0x453B38", Offset = "0x453B38", VA = "0x453B38", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x4539EC", Offset = "0x4539EC", VA = "0x4539EC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x45D51C", Offset = "0x45D51C", VA = "0x45D51C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		protected bool HasBall
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x450858", Offset = "0x450858", VA = "0x450858")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x45D524", Offset = "0x45D524", VA = "0x45D524")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x45C1F4", Offset = "0x45C1F4", VA = "0x45C1F4")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x450B58", Offset = "0x450B58", VA = "0x450B58")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x4508E4", Offset = "0x4508E4", VA = "0x4508E4")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x45D640", Offset = "0x45D640", VA = "0x45D640")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x450BD0", Offset = "0x450BD0", VA = "0x450BD0")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject m_playerHead;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Text m_nameText;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x170000B1")]
		public Player Player
		{
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x456DA8", Offset = "0x456DA8", VA = "0x456DA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		public Text NameText
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x456E94", Offset = "0x456E94", VA = "0x456E94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x45D7B8", Offset = "0x45D7B8", VA = "0x45D7B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE6")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x45D930", Offset = "0x45D930", VA = "0x45D930")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User m_user;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x170000B3")]
		public User User
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x4558E4", Offset = "0x4558E4", VA = "0x4558E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public ulong ID
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x45A5AC", Offset = "0x45A5AC", VA = "0x45A5AC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000B5")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x45BC84", Offset = "0x45BC84", VA = "0x45BC84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x45D938", Offset = "0x45D938", VA = "0x45D938")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public override uint Score
		{
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x45D940", Offset = "0x45D940", VA = "0x45D940", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x45C828", Offset = "0x45C828", VA = "0x45C828")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x45D944", Offset = "0x45D944", VA = "0x45D944")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Button m_currentButton;

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x45D948", Offset = "0x45D948", VA = "0x45D948")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x45DBF4", Offset = "0x45DBF4", VA = "0x45DBF4")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x20001B7")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DF3C4", Offset = "0x2DF3C4")]
		public int x;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DF3FC", Offset = "0x2DF3FC")]
		public int y;

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x449208", Offset = "0x449208", VA = "0x449208")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Button m_currentButton;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x449210", Offset = "0x449210", VA = "0x449210")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x449E90", Offset = "0x449E90", VA = "0x449E90")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x2000265")]
		private struct PositionInfo
		{
			[Token(Token = "0x4000AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x4000AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int pieceOwner;

			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x400074E")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x400074F")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x4000750")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] m_scores;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x449E98", Offset = "0x449E98", VA = "0x449E98")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x44A190", Offset = "0x44A190", VA = "0x44A190")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x44A2B8", Offset = "0x44A2B8", VA = "0x44A2B8")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x44A3AC", Offset = "0x44A3AC", VA = "0x44A3AC")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x44A4A0", Offset = "0x44A4A0", VA = "0x44A4A0")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x44AEA8", Offset = "0x44AEA8", VA = "0x44AEA8")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x44B00C", Offset = "0x44B00C", VA = "0x44B00C")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x44B2D0", Offset = "0x44B2D0", VA = "0x44B2D0")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x44A7E4", Offset = "0x44A7E4", VA = "0x44A7E4")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x44B4D0", Offset = "0x44B4D0", VA = "0x44B4D0")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x44A9F8", Offset = "0x44A9F8", VA = "0x44A9F8")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x44B518", Offset = "0x44B518", VA = "0x44B518")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x2000266")]
		private enum GameState
		{
			[Token(Token = "0x4000ABB")]
			None,
			[Token(Token = "0x4000ABC")]
			PracticingMyTurn,
			[Token(Token = "0x4000ABD")]
			PracticingAiTurn,
			[Token(Token = "0x4000ABE")]
			OnlineMatchMyTurn,
			[Token(Token = "0x4000ABF")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private GameState m_state;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private uint m_powerBallcount;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string m_opponentName;

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x44B614", Offset = "0x44B614", VA = "0x44B614")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x44B7C4", Offset = "0x44B7C4", VA = "0x44B7C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x44B63C", Offset = "0x44B63C", VA = "0x44B63C")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x44BF2C", Offset = "0x44BF2C", VA = "0x44BF2C")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x44B7C8", Offset = "0x44B7C8", VA = "0x44B7C8")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x44C924", Offset = "0x44C924", VA = "0x44C924")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x44C2B4", Offset = "0x44C2B4", VA = "0x44C2B4")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x44CA84", Offset = "0x44CA84", VA = "0x44CA84")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x44CADC", Offset = "0x44CADC", VA = "0x44CADC")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x44CBB0", Offset = "0x44CBB0", VA = "0x44CBB0")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x44CBC0", Offset = "0x44CBC0", VA = "0x44CBC0")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x4499EC", Offset = "0x4499EC", VA = "0x4499EC")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x4499E0", Offset = "0x4499E0", VA = "0x4499E0")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x4499F4", Offset = "0x4499F4", VA = "0x4499F4")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x449DA0", Offset = "0x449DA0", VA = "0x449DA0")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x44C4DC", Offset = "0x44C4DC", VA = "0x44C4DC")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x44C634", Offset = "0x44C634", VA = "0x44C634")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x44CF10", Offset = "0x44CF10", VA = "0x44CF10")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x44CF18", Offset = "0x44CF18", VA = "0x44CF18")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x44B644", Offset = "0x44B644", VA = "0x44B644")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x44B888", Offset = "0x44B888", VA = "0x44B888")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x44D0EC", Offset = "0x44D0EC", VA = "0x44D0EC")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x2000267")]
		public enum Piece
		{
			[Token(Token = "0x4000AC1")]
			A,
			[Token(Token = "0x4000AC2")]
			B,
			[Token(Token = "0x4000AC3")]
			PowerBall
		}

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private BoardPosition m_position;

		[Token(Token = "0x170000B7")]
		public Piece Type
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x44CC44", Offset = "0x44CC44", VA = "0x44CC44")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x170000B8")]
		public BoardPosition Position
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x44CC3C", Offset = "0x44CC3C", VA = "0x44CC3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0x44B4C8", Offset = "0x44B4C8", VA = "0x44B4C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public GameObject Prefab
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0x44CA5C", Offset = "0x44CA5C", VA = "0x44CA5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x44CB8C", Offset = "0x44CB8C", VA = "0x44CB8C")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x44D184", Offset = "0x44D184", VA = "0x44D184")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x400076F")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x44D18C", Offset = "0x44D18C", VA = "0x44D18C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x44D1A8", Offset = "0x44D1A8", VA = "0x44D1A8")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x44D3D4", Offset = "0x44D3D4", VA = "0x44D3D4")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x44D30C", Offset = "0x44D30C", VA = "0x44D30C")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x44D9A0", Offset = "0x44D9A0", VA = "0x44D9A0")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x44DE78", Offset = "0x44DE78", VA = "0x44DE78")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x44DF50", Offset = "0x44DF50", VA = "0x44DF50")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x44E080", Offset = "0x44E080", VA = "0x44E080")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x2000268")]
		private enum MatchRoomState
		{
			[Token(Token = "0x4000AC5")]
			None,
			[Token(Token = "0x4000AC6")]
			Queued,
			[Token(Token = "0x4000AC7")]
			Configuring,
			[Token(Token = "0x4000AC8")]
			MyTurn,
			[Token(Token = "0x4000AC9")]
			RemoteTurn
		}

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x4000773")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_matchRoom;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private User m_remotePlayer;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_lastUpdateTime;

		[Token(Token = "0x4000777")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MatchRoomState m_state;

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x44E088", Offset = "0x44E088", VA = "0x44E088")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x44E380", Offset = "0x44E380", VA = "0x44E380")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x44E4DC", Offset = "0x44E4DC", VA = "0x44E4DC")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x44C03C", Offset = "0x44C03C", VA = "0x44C03C")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x44E5D0", Offset = "0x44E5D0", VA = "0x44E5D0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x44E168", Offset = "0x44E168", VA = "0x44E168")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x44E5FC", Offset = "0x44E5FC", VA = "0x44E5FC")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x44EA18", Offset = "0x44EA18", VA = "0x44EA18")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x44EC20", Offset = "0x44EC20", VA = "0x44EC20")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x44F7A0", Offset = "0x44F7A0", VA = "0x44F7A0")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x44F118", Offset = "0x44F118", VA = "0x44F118")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x44FE5C", Offset = "0x44FE5C", VA = "0x44FE5C")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x44CC4C", Offset = "0x44CC4C", VA = "0x44CC4C")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x450110", Offset = "0x450110", VA = "0x450110")]
		private void UpdateDataStoreCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x44FDF8", Offset = "0x44FDF8", VA = "0x44FDF8")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x450160", Offset = "0x450160", VA = "0x450160")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x450254", Offset = "0x450254", VA = "0x450254")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_myID;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_myOculusID;

		[Token(Token = "0x170000BA")]
		public static ulong MyID
		{
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x44E4F0", Offset = "0x44E4F0", VA = "0x44E4F0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000BB")]
		public static string MyOculusID
		{
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x44CFCC", Offset = "0x44CFCC", VA = "0x44CFCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x45025C", Offset = "0x45025C", VA = "0x45025C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x4503E8", Offset = "0x4503E8", VA = "0x4503E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x450498", Offset = "0x450498", VA = "0x450498")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x45069C", Offset = "0x45069C", VA = "0x45069C")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x44D8BC", Offset = "0x44D8BC", VA = "0x44D8BC")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x4507F8", Offset = "0x4507F8", VA = "0x4507F8")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x20001BF")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Text dataOutput;

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x40BF54", Offset = "0x40BF54", VA = "0x40BF54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x40C084", Offset = "0x40C084", VA = "0x40C084")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x40C1A0", Offset = "0x40C1A0", VA = "0x40C1A0")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x40E2DC", Offset = "0x40E2DC", VA = "0x40E2DC")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x40E180", Offset = "0x40E180", VA = "0x40E180")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x40E0A8", Offset = "0x40E0A8", VA = "0x40E0A8")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x40DF88", Offset = "0x40DF88", VA = "0x40DF88")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x40DEB8", Offset = "0x40DEB8", VA = "0x40DEB8")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x40DD6C", Offset = "0x40DD6C", VA = "0x40DD6C")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x40DC20", Offset = "0x40DC20", VA = "0x40DC20")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x40BFDC", Offset = "0x40BFDC", VA = "0x40BFDC")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x40DB40", Offset = "0x40DB40", VA = "0x40DB40")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x40C9E4", Offset = "0x40C9E4", VA = "0x40C9E4")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x40CB1C", Offset = "0x40CB1C", VA = "0x40CB1C")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x40CBF8", Offset = "0x40CBF8", VA = "0x40CBF8")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x40CD20", Offset = "0x40CD20", VA = "0x40CD20")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x40CE4C", Offset = "0x40CE4C", VA = "0x40CE4C")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x40CF74", Offset = "0x40CF74", VA = "0x40CF74")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x40D0EC", Offset = "0x40D0EC", VA = "0x40D0EC")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x40D1CC", Offset = "0x40D1CC", VA = "0x40D1CC")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x40D2F8", Offset = "0x40D2F8", VA = "0x40D2F8")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x40D3D8", Offset = "0x40D3D8", VA = "0x40D3D8")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x40D4B4", Offset = "0x40D4B4", VA = "0x40D4B4")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x40D604", Offset = "0x40D604", VA = "0x40D604")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x40D754", Offset = "0x40D754", VA = "0x40D754")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x40E3BC", Offset = "0x40E3BC", VA = "0x40E3BC")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x40E4A0", Offset = "0x40E4A0", VA = "0x40E4A0")]
		private void outputRoomDetails(Room room)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x40ED48", Offset = "0x40ED48", VA = "0x40ED48")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x40F3B4", Offset = "0x40F3B4", VA = "0x40F3B4")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x40F4E0", Offset = "0x40F4E0", VA = "0x40F4E0")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x40F574", Offset = "0x40F574", VA = "0x40F574")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x40FCCC", Offset = "0x40FCCC", VA = "0x40FCCC")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x40FE94", Offset = "0x40FE94", VA = "0x40FE94")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x40FF7C", Offset = "0x40FF7C", VA = "0x40FF7C")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x410064", Offset = "0x410064", VA = "0x410064")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x41014C", Offset = "0x41014C", VA = "0x41014C")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x4105C8", Offset = "0x4105C8", VA = "0x4105C8")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x410AE0", Offset = "0x410AE0", VA = "0x410AE0")]
		private void createAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x410BF4", Offset = "0x410BF4", VA = "0x410BF4")]
		private void getCurrentRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x410D08", Offset = "0x410D08", VA = "0x410D08")]
		private void joinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x410E1C", Offset = "0x410E1C", VA = "0x410E1C")]
		private void leaveRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x410F30", Offset = "0x410F30", VA = "0x410F30")]
		private void getUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x4113BC", Offset = "0x4113BC", VA = "0x4113BC")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x4114D0", Offset = "0x4114D0", VA = "0x4114D0")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x4115E4", Offset = "0x4115E4", VA = "0x4115E4")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x4116CC", Offset = "0x4116CC", VA = "0x4116CC")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x20001C0")]
	internal enum states
	{
		[Token(Token = "0x400077E")]
		NOT_INIT,
		[Token(Token = "0x400077F")]
		IDLE,
		[Token(Token = "0x4000780")]
		REQUEST_FIND,
		[Token(Token = "0x4000781")]
		FINDING_ROOM,
		[Token(Token = "0x4000782")]
		REQUEST_CREATE,
		[Token(Token = "0x4000783")]
		REQUEST_JOIN,
		[Token(Token = "0x4000784")]
		REQUEST_LEAVE,
		[Token(Token = "0x4000785")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x4000786")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x20001C1")]
	public static class Constants
	{
		[Token(Token = "0x4000787")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x4000788")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x4000789")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x20001C2")]
	public class chatPacket
	{
		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2DF5E4", Offset = "0x2DF5E4")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2DF5F4", Offset = "0x2DF5F4")]
		private string <textString>k__BackingField;

		[Token(Token = "0x170000BC")]
		public int packetID
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x40BC60", Offset = "0x40BC60", VA = "0x40BC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E175C", Offset = "0x2E175C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x40B524", Offset = "0x40B524", VA = "0x40B524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E176C", Offset = "0x2E176C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public string textString
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x40BC58", Offset = "0x40BC58", VA = "0x40BC58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E177C", Offset = "0x2E177C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x40B52C", Offset = "0x40B52C", VA = "0x40B52C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E178C", Offset = "0x2E178C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x40B534", Offset = "0x40B534", VA = "0x40B534")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x40B924", Offset = "0x40B924", VA = "0x40B924")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x40B51C", Offset = "0x40B51C", VA = "0x40B51C")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Text dataOutput;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private states currentState;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private User localUser;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private User remoteUser;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Room currentRoom;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int lastPacketID;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool ratedMatchStarted;

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x40892C", Offset = "0x40892C", VA = "0x40892C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x408AF4", Offset = "0x408AF4", VA = "0x408AF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x408C18", Offset = "0x408C18", VA = "0x408C18")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x40A4FC", Offset = "0x40A4FC", VA = "0x40A4FC")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x408A4C", Offset = "0x408A4C", VA = "0x408A4C")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x40A5E0", Offset = "0x40A5E0", VA = "0x40A5E0")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x40A6FC", Offset = "0x40A6FC", VA = "0x40A6FC")]
		private void init(Message<User> msg)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x409160", Offset = "0x409160", VA = "0x409160")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x40A878", Offset = "0x40A878", VA = "0x40A878")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x409348", Offset = "0x409348", VA = "0x409348")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x409840", Offset = "0x409840", VA = "0x409840")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x409A14", Offset = "0x409A14", VA = "0x409A14")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x40AA20", Offset = "0x40AA20", VA = "0x40AA20")]
		private void foundMatch(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x40ABC8", Offset = "0x40ABC8", VA = "0x40ABC8")]
		private void joinRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x40966C", Offset = "0x40966C", VA = "0x40966C")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x40AFCC", Offset = "0x40AFCC", VA = "0x40AFCC")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x40B0C4", Offset = "0x40B0C4", VA = "0x40B0C4")]
		private void updateRoom(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x409EB0", Offset = "0x409EB0", VA = "0x409EB0")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x408F8C", Offset = "0x408F8C", VA = "0x408F8C")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x409FF4", Offset = "0x409FF4", VA = "0x409FF4")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x40BC68", Offset = "0x40BC68", VA = "0x40BC68")]
		private void leaveRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x40A174", Offset = "0x40A174", VA = "0x40A174")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x40BD6C", Offset = "0x40BD6C", VA = "0x40BD6C")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x40A2A8", Offset = "0x40A2A8", VA = "0x40A2A8")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x40BE64", Offset = "0x40BE64", VA = "0x40BE64")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x40BF4C", Offset = "0x40BF4C", VA = "0x40BF4C")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x20001C4")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool exitAppOnFailure;

		[Token(Token = "0x1400000C")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x4080C8", Offset = "0x4080C8", VA = "0x4080C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E179C", Offset = "0x2E179C")]
			add
			{
			}
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0x4081A0", Offset = "0x4081A0", VA = "0x4081A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E17AC", Offset = "0x2E17AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0x408278", Offset = "0x408278", VA = "0x408278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E17BC", Offset = "0x2E17BC")]
			add
			{
			}
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0x408354", Offset = "0x408354", VA = "0x408354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E17CC", Offset = "0x2E17CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x408430", Offset = "0x408430", VA = "0x408430")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x4088E0", Offset = "0x4088E0", VA = "0x4088E0")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x4085E0", Offset = "0x4085E0", VA = "0x4085E0")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x40891C", Offset = "0x40891C", VA = "0x40891C")]
		public EntitlementCheck()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20001C5")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x2DF624", Offset = "0x2DF624")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xB38A34", Offset = "0xB38A34", VA = "0xB38A34")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xB38A38", Offset = "0xB38A38", VA = "0xB38A38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xB38B44", Offset = "0xB38B44", VA = "0xB38B44")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool autoActivate;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DF6A4", Offset = "0x2DF6A4")]
		public bool autoRetrigger;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x2DF6D8", Offset = "0x2DF6D8")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DF720", Offset = "0x2DF720")]
		public Transform[] playPositions;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool activated;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int playingIdx;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float nextPlayTime;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float fadeTime;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lastPosIdx;

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x88C6CC", Offset = "0x88C6CC", VA = "0x88C6CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x88C864", Offset = "0x88C864", VA = "0x88C864")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x88CB44", Offset = "0x88CB44", VA = "0x88CB44")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x88C8CC", Offset = "0x88C8CC", VA = "0x88C8CC")]
		public void Play()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x88CC4C", Offset = "0x88CC4C", VA = "0x88CC4C")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x88CE04", Offset = "0x88CE04", VA = "0x88CE04")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public enum PreloadSounds
	{
		[Token(Token = "0x40007A3")]
		Default,
		[Token(Token = "0x40007A4")]
		Preload,
		[Token(Token = "0x40007A5")]
		ManualPreload
	}
	[Token(Token = "0x20001C8")]
	public enum Fade
	{
		[Token(Token = "0x40007A7")]
		In,
		[Token(Token = "0x40007A8")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20001C9")]
	public class SoundGroup
	{
		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SoundFX[] soundList;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DF754", Offset = "0x2DF754")]
		public int maxPlayingSounds;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float volumeOverride;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xB38784", Offset = "0xB38784", VA = "0xB38784")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xB38824", Offset = "0xB38824", VA = "0xB38824")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xB388D0", Offset = "0xB388D0", VA = "0xB388D0")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xB38970", Offset = "0xB38970", VA = "0xB38970")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xB38A10", Offset = "0xB38A10", VA = "0xB38A10")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001CA")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000269")]
		public enum Fade
		{
			[Token(Token = "0x4000ACB")]
			In,
			[Token(Token = "0x4000ACC")]
			Out
		}

		[Token(Token = "0x200026A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4BD0", Offset = "0x2D4BD0")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4000ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SoundPriority priority;

			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x89337C", Offset = "0x89337C", VA = "0x89337C")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x896F7C", Offset = "0x896F7C", VA = "0x896F7C")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200026B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4BE0", Offset = "0x2D4BE0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x896EBC", Offset = "0x896EBC", VA = "0x896EBC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x896EC4", Offset = "0x896EC4", VA = "0x896EC4")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DF780", Offset = "0x2DF780")]
		public bool makePersistent;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DF7E8", Offset = "0x2DF7E8")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DF83C", Offset = "0x2DF83C")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DF8A8", Offset = "0x2DF8A8")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DF90C", Offset = "0x2DF90C")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DF96C", Offset = "0x2DF96C")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DF9D4", Offset = "0x2DF9D4")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFA2C", Offset = "0x2DFA2C")]
		public bool verboseLogging;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFA88", Offset = "0x2DFA88")]
		public int maxSoundEmitters;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFACC", Offset = "0x2DFACC")]
		public float volumeSoundFX;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFB00", Offset = "0x2DFB00")]
		public float soundFxFadeSecs;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static FastList<string> names;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] defaultSound;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static SoundFX nullSound;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hideWarnings;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private static bool soundEnabled;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000BE")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0x88CEE8", Offset = "0x88CEE8", VA = "0x88CEE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BF")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0x88D020", Offset = "0x88D020", VA = "0x88D020")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0x88D0AC", Offset = "0x88D0AC", VA = "0x88D0AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C1")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x88D14C", Offset = "0x88D14C", VA = "0x88D14C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C2")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x88D1EC", Offset = "0x88D1EC", VA = "0x88D1EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x88D28C", Offset = "0x88D28C", VA = "0x88D28C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x88D32C", Offset = "0x88D32C", VA = "0x88D32C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x89046C", Offset = "0x89046C", VA = "0x89046C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x88D3CC", Offset = "0x88D3CC", VA = "0x88D3CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x88D6BC", Offset = "0x88D6BC", VA = "0x88D6BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x88D3D0", Offset = "0x88D3D0", VA = "0x88D3D0")]
		private void Init()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x88EC24", Offset = "0x88EC24", VA = "0x88EC24")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x88D898", Offset = "0x88D898", VA = "0x88D898")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x88F604", Offset = "0x88F604", VA = "0x88F604")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x88F854", Offset = "0x88F854", VA = "0x88F854")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x88FA9C", Offset = "0x88FA9C", VA = "0x88FA9C")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x88FC08", Offset = "0x88FC08", VA = "0x88FC08")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x88FCFC", Offset = "0x88FCFC", VA = "0x88FCFC")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x88E1D8", Offset = "0x88E1D8", VA = "0x88E1D8")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x88EC28", Offset = "0x88EC28", VA = "0x88EC28")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x8907E0", Offset = "0x8907E0", VA = "0x8907E0")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x890920", Offset = "0x890920", VA = "0x890920")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x890A60", Offset = "0x890A60", VA = "0x890A60")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x890634", Offset = "0x890634", VA = "0x890634")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x890C70", Offset = "0x890C70", VA = "0x890C70")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x890E18", Offset = "0x890E18", VA = "0x890E18")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x8910A0", Offset = "0x8910A0", VA = "0x8910A0")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x88CB54", Offset = "0x88CB54", VA = "0x88CB54")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x88CD0C", Offset = "0x88CD0C", VA = "0x88CD0C")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x8912A8", Offset = "0x8912A8", VA = "0x8912A8")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x8913BC", Offset = "0x8913BC", VA = "0x8913BC")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x89147C", Offset = "0x89147C", VA = "0x89147C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x8915A8", Offset = "0x8915A8", VA = "0x8915A8")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x891694", Offset = "0x891694", VA = "0x891694")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x8917C4", Offset = "0x8917C4", VA = "0x8917C4")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x8928E4", Offset = "0x8928E4", VA = "0x8928E4")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x893384", Offset = "0x893384", VA = "0x893384")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x8935B4", Offset = "0x8935B4", VA = "0x8935B4")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x894AC0", Offset = "0x894AC0", VA = "0x894AC0")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x891A10", Offset = "0x891A10", VA = "0x891A10")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x894BE4", Offset = "0x894BE4", VA = "0x894BE4")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x894D44", Offset = "0x894D44", VA = "0x894D44")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x894EB0", Offset = "0x894EB0", VA = "0x894EB0")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x895448", Offset = "0x895448", VA = "0x895448")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x895710", Offset = "0x895710", VA = "0x895710")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x89585C", Offset = "0x89585C", VA = "0x89585C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x895AA4", Offset = "0x895AA4", VA = "0x895AA4")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x895BD4", Offset = "0x895BD4", VA = "0x895BD4")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x895D8C", Offset = "0x895D8C", VA = "0x895D8C")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x8963C8", Offset = "0x8963C8", VA = "0x8963C8")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40007D0")]
		None = -1,
		[Token(Token = "0x40007D1")]
		Reserved,
		[Token(Token = "0x40007D2")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20001CC")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transitionTime;

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x897088", Offset = "0x897088", VA = "0x897088")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float minDefaultVal;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxDefaultVal;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float min;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float max;

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x89703C", Offset = "0x89703C", VA = "0x89703C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200026C")]
		public enum FadeState
		{
			[Token(Token = "0x4000AD1")]
			Null,
			[Token(Token = "0x4000AD2")]
			FadingIn,
			[Token(Token = "0x4000AD3")]
			FadingOut,
			[Token(Token = "0x4000AD4")]
			Ducking
		}

		[Token(Token = "0x200026D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4BF0", Offset = "0x2D4BF0")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public SoundEmitter other;

			[Token(Token = "0x4000AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float fadeTime;

			[Token(Token = "0x4000ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float toVolume;

			[Token(Token = "0x17000122")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E2A")]
				[Address(RVA = "0x897CB4", Offset = "0x897CB4", VA = "0x897CB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000123")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E2C")]
				[Address(RVA = "0x897D44", Offset = "0x897D44", VA = "0x897D44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x8978DC", Offset = "0x8978DC", VA = "0x8978DC")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x897B7C", Offset = "0x897B7C", VA = "0x897B7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x897B80", Offset = "0x897B80", VA = "0x897B80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x897CBC", Offset = "0x897CBC", VA = "0x897CBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4C00", Offset = "0x2D4C00")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float toVolume;

			[Token(Token = "0x4000ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float fadeTime;

			[Token(Token = "0x4000AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <start>5__2;

			[Token(Token = "0x4000AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <end>5__3;

			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <startTime>5__4;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000124")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E30")]
				[Address(RVA = "0x898330", Offset = "0x898330", VA = "0x898330", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000125")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E32")]
				[Address(RVA = "0x8983C0", Offset = "0x8983C0", VA = "0x8983C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x897B24", Offset = "0x897B24", VA = "0x897B24")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x898148", Offset = "0x898148", VA = "0x898148", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x89814C", Offset = "0x89814C", VA = "0x89814C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x898338", Offset = "0x898338", VA = "0x898338", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4C10", Offset = "0x2D4C10")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float delaySecs;

			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Fade fadeType;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float defaultVolume;

			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float fadeTime;

			[Token(Token = "0x4000AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <start>5__2;

			[Token(Token = "0x4000AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <end>5__3;

			[Token(Token = "0x4000AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__5;

			[Token(Token = "0x4000AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000126")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E36")]
				[Address(RVA = "0x8980B0", Offset = "0x8980B0", VA = "0x8980B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000127")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E38")]
				[Address(RVA = "0x898140", Offset = "0x898140", VA = "0x898140", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x897B44", Offset = "0x897B44", VA = "0x897B44")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x897D4C", Offset = "0x897D4C", VA = "0x897D4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x897D50", Offset = "0x897D50", VA = "0x897D50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x8980B8", Offset = "0x8980B8", VA = "0x8980B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EmitterChannel channel;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool disableSpatialization;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000C6")]
		public float volume
		{
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0x894A94", Offset = "0x894A94", VA = "0x894A94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0x89712C", Offset = "0x89712C", VA = "0x89712C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public float pitch
		{
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x897160", Offset = "0x897160", VA = "0x897160")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x89718C", Offset = "0x89718C", VA = "0x89718C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public AudioClip clip
		{
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x8971C0", Offset = "0x8971C0", VA = "0x8971C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x8971EC", Offset = "0x8971EC", VA = "0x8971EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public float time
		{
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x897220", Offset = "0x897220", VA = "0x897220")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x891790", Offset = "0x891790", VA = "0x891790")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public float length
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x89724C", Offset = "0x89724C", VA = "0x89724C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CB")]
		public bool loop
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x897344", Offset = "0x897344", VA = "0x897344")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x897370", Offset = "0x897370", VA = "0x897370")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public bool mute
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x8973A4", Offset = "0x8973A4", VA = "0x8973A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x8973D0", Offset = "0x8973D0", VA = "0x8973D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x897404", Offset = "0x897404", VA = "0x897404")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x897430", Offset = "0x897430", VA = "0x897430")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public bool isPlaying
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x897464", Offset = "0x897464", VA = "0x897464")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x897490", Offset = "0x897490", VA = "0x897490")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x894A7C", Offset = "0x894A7C", VA = "0x894A7C")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x894D3C", Offset = "0x894D3C", VA = "0x894D3C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x894EA4", Offset = "0x894EA4", VA = "0x894EA4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x890500", Offset = "0x890500", VA = "0x890500")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x8904F8", Offset = "0x8904F8", VA = "0x8904F8")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x8959E8", Offset = "0x8959E8", VA = "0x8959E8")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x89076C", Offset = "0x89076C", VA = "0x89076C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x8976A4", Offset = "0x8976A4", VA = "0x8976A4")]
		public void Play()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x89770C", Offset = "0x89770C", VA = "0x89770C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x890508", Offset = "0x890508", VA = "0x890508")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x897750", Offset = "0x897750", VA = "0x897750")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x895308", Offset = "0x895308", VA = "0x895308")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x895614", Offset = "0x895614", VA = "0x895614")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x890C28", Offset = "0x890C28", VA = "0x890C28")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x8977C8", Offset = "0x8977C8", VA = "0x8977C8")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x8977F4", Offset = "0x8977F4", VA = "0x8977F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E17DC", Offset = "0x2E17DC")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x8978FC", Offset = "0x8978FC", VA = "0x8978FC")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x8911A0", Offset = "0x8911A0", VA = "0x8911A0")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x891228", Offset = "0x891228", VA = "0x891228")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x890FFC", Offset = "0x890FFC", VA = "0x890FFC")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x890D70", Offset = "0x890D70", VA = "0x890D70")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x897954", Offset = "0x897954", VA = "0x897954")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E1854", Offset = "0x2E1854")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x897A24", Offset = "0x897A24", VA = "0x897A24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E18CC", Offset = "0x2E18CC")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x897B64", Offset = "0x897B64", VA = "0x897B64")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40007E9")]
		Random,
		[Token(Token = "0x40007EA")]
		Sequential
	}
	[Token(Token = "0x20001D0")]
	public enum FreqHint
	{
		[Token(Token = "0x40007EC")]
		None,
		[Token(Token = "0x40007ED")]
		Wide,
		[Token(Token = "0x40007EE")]
		Narrow
	}
	[Token(Token = "0x20001D1")]
	public enum SoundPriority
	{
		[Token(Token = "0x40007F0")]
		VeryLow = -2,
		[Token(Token = "0x40007F1")]
		Low,
		[Token(Token = "0x40007F2")]
		Default,
		[Token(Token = "0x40007F3")]
		High,
		[Token(Token = "0x40007F4")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20001D2")]
	public class OSPProps
	{
		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFBF0", Offset = "0x2DFBF0")]
		public bool enableSpatialization;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFC24", Offset = "0x2DFC24")]
		public bool useFastOverride;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFC84", Offset = "0x2DFC84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DFC84", Offset = "0x2DFC84")]
		public float gain;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFD0C", Offset = "0x2DFD0C")]
		public bool enableInvSquare;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFD74", Offset = "0x2DFD74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DFD74", Offset = "0x2DFD74")]
		public float volumetric;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFDC8", Offset = "0x2DFDC8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x2DFDC8", Offset = "0x2DFDC8")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x897098", Offset = "0x897098", VA = "0x897098")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D3")]
	public class SoundFX
	{
		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFE34", Offset = "0x2DFE34")]
		public string name;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFE88", Offset = "0x2DFE88")]
		public SoundFXNext playback;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFEBC", Offset = "0x2DFEBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2DFEBC", Offset = "0x2DFEBC")]
		public float volume;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFF34", Offset = "0x2DFF34")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x2DFF34", Offset = "0x2DFF34")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2DFF98", Offset = "0x2DFF98")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x2DFF98", Offset = "0x2DFF98")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2E003C", Offset = "0x2E003C")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2E0070", Offset = "0x2E0070")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2E00C4", Offset = "0x2E00C4")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2E00F8", Offset = "0x2E00F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2E00F8", Offset = "0x2E00F8")]
		public float spread;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2E014C", Offset = "0x2E014C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2E014C", Offset = "0x2E014C")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2E019C", Offset = "0x2E019C")]
		public SoundPriority priority;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2E01D0", Offset = "0x2E01D0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x2E01D0", Offset = "0x2E01D0")]
		public Vector2 delay;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2E0234", Offset = "0x2E0234")]
		public bool looping;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OSPProps ospProps;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2E02A0", Offset = "0x2E02A0")]
		public AudioClip[] soundClips;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private SoundGroup soundGroup;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int lastIdx;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int playingIdx;

		[Token(Token = "0x170000CF")]
		public int Length
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x8983C8", Offset = "0x8983C8", VA = "0x8983C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D0")]
		public bool IsValid
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0x8983EC", Offset = "0x8983EC", VA = "0x8983EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D1")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0x894A74", Offset = "0x894A74", VA = "0x894A74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0x88F5FC", Offset = "0x88F5FC", VA = "0x88F5FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x894950", Offset = "0x894950", VA = "0x894950")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D3")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x894988", Offset = "0x894988", VA = "0x894988")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x8967B8", Offset = "0x8967B8", VA = "0x8967B8")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x8947D4", Offset = "0x8947D4", VA = "0x8947D4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x8949B4", Offset = "0x8949B4", VA = "0x8949B4")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x894960", Offset = "0x894960", VA = "0x894960")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x8984D0", Offset = "0x8984D0", VA = "0x8984D0")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x8949A0", Offset = "0x8949A0", VA = "0x8949A0")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x898640", Offset = "0x898640", VA = "0x898640")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x898744", Offset = "0x898744", VA = "0x898744")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x898888", Offset = "0x898888", VA = "0x898888")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x89891C", Offset = "0x89891C", VA = "0x89891C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x8989B8", Offset = "0x8989B8", VA = "0x8989B8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x898A5C", Offset = "0x898A5C", VA = "0x898A5C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x898AF0", Offset = "0x898AF0", VA = "0x898AF0")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D4")]
	public class SoundFXRef
	{
		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string soundFXName;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool initialized;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000D4")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0xB382B0", Offset = "0xB382B0", VA = "0xB382B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		public string name
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xB383CC", Offset = "0xB383CC", VA = "0xB383CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0xB383D4", Offset = "0xB383D4", VA = "0xB383D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public int Length
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0xB383DC", Offset = "0xB383DC", VA = "0xB383DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D7")]
		public bool IsValid
		{
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0xB3841C", Offset = "0xB3841C", VA = "0xB3841C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xB382D4", Offset = "0xB382D4", VA = "0xB382D4")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xB3845C", Offset = "0xB3845C", VA = "0xB3845C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xB3849C", Offset = "0xB3849C", VA = "0xB3849C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xB384E4", Offset = "0xB384E4", VA = "0xB384E4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xB3852C", Offset = "0xB3852C", VA = "0xB3852C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xB385B0", Offset = "0xB385B0", VA = "0xB385B0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xB385F8", Offset = "0xB385F8", VA = "0xB385F8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xB38648", Offset = "0xB38648", VA = "0xB38648")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xB38688", Offset = "0xB38688", VA = "0xB38688")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xB386D0", Offset = "0xB386D0", VA = "0xB386D0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xB38710", Offset = "0xB38710", VA = "0xB38710")]
		public SoundFXRef()
		{
		}
	}
}
namespace EnviroSamples
{
	[Token(Token = "0x20001D5")]
	public class DemoUI : MonoBehaviour
	{
		[Token(Token = "0x2000270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4C20", Offset = "0x2D4C20")]
		private sealed class <setupDrodown>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DemoUI <>4__this;

			[Token(Token = "0x17000128")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E3C")]
				[Address(RVA = "0xD482EC", Offset = "0xD482EC", VA = "0xD482EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000129")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E3E")]
				[Address(RVA = "0xD4837C", Offset = "0xD4837C", VA = "0xD4837C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0xD473A4", Offset = "0xD473A4", VA = "0xD473A4")]
			[DebuggerHidden]
			public <setupDrodown>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0xD48010", Offset = "0xD48010", VA = "0xD48010", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0xD48014", Offset = "0xD48014", VA = "0xD48014", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0xD482F4", Offset = "0xD482F4", VA = "0xD482F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Slider sliderTime;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Slider sliderQuality;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Text timeText;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text weatherText;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Text temperatureText;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dropdown weatherDropdown;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool started;

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xD47124", Offset = "0xD47124", VA = "0xD47124")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xD47318", Offset = "0xD47318", VA = "0xD47318")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E1944", Offset = "0x2E1944")]
		private IEnumerator setupDrodown()
		{
			return null;
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xD473C4", Offset = "0xD473C4", VA = "0xD473C4")]
		public void ChangeTimeSlider()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xD474CC", Offset = "0xD474CC", VA = "0xD474CC")]
		public void ChangeCloudQuality(int value)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xD474D0", Offset = "0xD474D0", VA = "0xD474D0")]
		public void ChangeAmbientVolume(float value)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xD47548", Offset = "0xD47548", VA = "0xD47548")]
		public void ChangeWeatherVolume(float value)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xD475C0", Offset = "0xD475C0", VA = "0xD475C0")]
		public void SetWeatherID(int id)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xD47624", Offset = "0xD47624", VA = "0xD47624")]
		public void SetVolumeClouds(bool b)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xD47648", Offset = "0xD47648", VA = "0xD47648")]
		public void SetVolumeLighting(bool b)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xD4766C", Offset = "0xD4766C", VA = "0xD4766C")]
		public void SetFlatClouds(bool b)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xD47690", Offset = "0xD47690", VA = "0xD47690")]
		public void SetParticleClouds(bool b)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xD476FC", Offset = "0xD476FC", VA = "0xD476FC")]
		public void SetSunShafts(bool b)
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xD47768", Offset = "0xD47768", VA = "0xD47768")]
		public void SetMoonShafts(bool b)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xD477D4", Offset = "0xD477D4", VA = "0xD477D4")]
		public void SetSeason(int id)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xD478BC", Offset = "0xD478BC", VA = "0xD478BC")]
		public void SetTimeProgress(int id)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xD4797C", Offset = "0xD4797C", VA = "0xD4797C")]
		private void UpdateWeatherSlider()
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xD47BA0", Offset = "0xD47BA0", VA = "0xD47BA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xD47F64", Offset = "0xD47F64", VA = "0xD47F64")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xD48004", Offset = "0xD48004", VA = "0xD48004")]
		public DemoUI()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xD4800C", Offset = "0xD4800C", VA = "0xD4800C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E19BC", Offset = "0x2E19BC")]
		private void <Start>b__7_0(EnviroWeatherPreset type)
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class EventTest : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000271")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4C30", Offset = "0x2D4C30")]
		private sealed class <>c
		{
			[Token(Token = "0x4000AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static EnviroSkyMgr.SeasonChanged <>9__0_2;

			[Token(Token = "0x4000AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static EnviroSkyMgr.HourPassed <>9__0_3;

			[Token(Token = "0x4000AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static EnviroSkyMgr.DayPassed <>9__0_4;

			[Token(Token = "0x4000AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static EnviroSkyMgr.YearPassed <>9__0_5;

			[Token(Token = "0x6000E40")]
			[Address(RVA = "0xD49058", Offset = "0xD49058", VA = "0xD49058")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E41")]
			[Address(RVA = "0xD49060", Offset = "0xD49060", VA = "0xD49060")]
			internal void <Start>b__0_2(EnviroSeasons.Seasons season)
			{
			}

			[Token(Token = "0x6000E42")]
			[Address(RVA = "0xD490EC", Offset = "0xD490EC", VA = "0xD490EC")]
			internal void <Start>b__0_3()
			{
			}

			[Token(Token = "0x6000E43")]
			[Address(RVA = "0xD49178", Offset = "0xD49178", VA = "0xD49178")]
			internal void <Start>b__0_4()
			{
			}

			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xD49204", Offset = "0xD49204", VA = "0xD49204")]
			internal void <Start>b__0_5()
			{
			}
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xD48384", Offset = "0xD48384", VA = "0xD48384")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xD48C54", Offset = "0xD48C54", VA = "0xD48C54")]
		private void DoOnWeatherChange(EnviroWeatherPreset type)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xD48CCC", Offset = "0xD48CCC", VA = "0xD48CCC")]
		private void DoOnZoneChange(EnviroZone type)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xD48D44", Offset = "0xD48D44", VA = "0xD48D44")]
		public void TestEventsWWeather()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xD48DA4", Offset = "0xD48DA4", VA = "0xD48DA4")]
		public void TestEventsNight()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xD48E04", Offset = "0xD48E04", VA = "0xD48E04")]
		public void TestEventsDay()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xD48E64", Offset = "0xD48E64", VA = "0xD48E64")]
		public EventTest()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xD48E6C", Offset = "0xD48E6C", VA = "0xD48E6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E19CC", Offset = "0x2E19CC")]
		private void <Start>b__0_0(EnviroWeatherPreset type)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xD48F28", Offset = "0xD48F28", VA = "0xD48F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2E19DC", Offset = "0x2E19DC")]
		private void <Start>b__0_1(EnviroZone z)
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class FPSController : MonoBehaviour
	{
		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float speed;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float sensitivity;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private CharacterController player;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject eyes;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float moveFB;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float moveLR;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float rotX;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotY;

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xD49290", Offset = "0xD49290", VA = "0xD49290")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xD492F8", Offset = "0xD492F8", VA = "0xD492F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xD4966C", Offset = "0xD4966C", VA = "0xD4966C")]
		public FPSController()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class SampleHUDFPS : MonoBehaviour
	{
		[Token(Token = "0x2000272")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2D4C40", Offset = "0x2D4C40")]
		private sealed class <FPS>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SampleHUDFPS <>4__this;

			[Token(Token = "0x1700012A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E48")]
				[Address(RVA = "0xD49EA4", Offset = "0xD49EA4", VA = "0xD49EA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E4A")]
				[Address(RVA = "0xD49F34", Offset = "0xD49F34", VA = "0xD49F34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xD4977C", Offset = "0xD4977C", VA = "0xD4977C")]
			[DebuggerHidden]
			public <FPS>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xD49C94", Offset = "0xD49C94", VA = "0xD49C94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E47")]
			[Address(RVA = "0xD49C98", Offset = "0xD49C98", VA = "0xD49C98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xD49EAC", Offset = "0xD49EAC", VA = "0xD49EAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Rect startRect;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool updateColor;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool allowDrag;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float frequency;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int nbDecimal;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float accum;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int frames;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color color;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string sFPS;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private GUIStyle style;

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xD49680", Offset = "0xD49680", VA = "0xD49680")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xD49730", Offset = "0xD49730", VA = "0xD49730")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xD496A4", Offset = "0xD496A4", VA = "0xD496A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2E19EC", Offset = "0x2E19EC")]
		private IEnumerator FPS()
		{
			return null;
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xD4979C", Offset = "0xD4979C", VA = "0xD4979C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xD49A10", Offset = "0xD49A10", VA = "0xD49A10")]
		private void DoMyWindow(int windowID)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xD49BA0", Offset = "0xD49BA0", VA = "0xD49BA0")]
		public SampleHUDFPS()
		{
		}
	}
}
